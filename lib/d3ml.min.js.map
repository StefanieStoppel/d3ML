{"version":3,"sources":["webpack://d3ml/webpack/universalModuleDefinition","webpack://d3ml/webpack/bootstrap","webpack://d3ml/./src/visualization/defaults.js","webpack://d3ml/./src/visualization/visualization.js","webpack://d3ml/./src/visualization/painter.js","webpack://d3ml/./src/visualization/circle.js","webpack://d3ml/./src/visualization/html-element-creator.js","webpack://d3ml/./src/index.js","webpack://d3ml/./src/validation/validator.js","webpack://d3ml/./src/visualization/knn-visualization.js","webpack://d3ml/./src/algorithms/knn.js","webpack://d3ml/./src/algorithms/machine-learning-algorithm.js","webpack://d3ml/./src/visualization/linear-regression-visualization.js","webpack://d3ml/./src/algorithms/linear-regression.js","webpack://d3ml/./node_modules/d3/dist/package.js","webpack://d3ml/./node_modules/d3-array/src/ascending.js","webpack://d3ml/./node_modules/d3-array/src/bisector.js","webpack://d3ml/./node_modules/d3-array/src/bisect.js","webpack://d3ml/./node_modules/d3-array/src/pairs.js","webpack://d3ml/./node_modules/d3-array/src/cross.js","webpack://d3ml/./node_modules/d3-array/src/descending.js","webpack://d3ml/./node_modules/d3-array/src/number.js","webpack://d3ml/./node_modules/d3-array/src/variance.js","webpack://d3ml/./node_modules/d3-array/src/deviation.js","webpack://d3ml/./node_modules/d3-array/src/extent.js","webpack://d3ml/./node_modules/d3-array/src/array.js","webpack://d3ml/./node_modules/d3-array/src/constant.js","webpack://d3ml/./node_modules/d3-array/src/identity.js","webpack://d3ml/./node_modules/d3-array/src/range.js","webpack://d3ml/./node_modules/d3-array/src/ticks.js","webpack://d3ml/./node_modules/d3-array/src/threshold/sturges.js","webpack://d3ml/./node_modules/d3-array/src/histogram.js","webpack://d3ml/./node_modules/d3-array/src/quantile.js","webpack://d3ml/./node_modules/d3-array/src/threshold/freedmanDiaconis.js","webpack://d3ml/./node_modules/d3-array/src/threshold/scott.js","webpack://d3ml/./node_modules/d3-array/src/max.js","webpack://d3ml/./node_modules/d3-array/src/mean.js","webpack://d3ml/./node_modules/d3-array/src/median.js","webpack://d3ml/./node_modules/d3-array/src/merge.js","webpack://d3ml/./node_modules/d3-array/src/min.js","webpack://d3ml/./node_modules/d3-array/src/permute.js","webpack://d3ml/./node_modules/d3-array/src/scan.js","webpack://d3ml/./node_modules/d3-array/src/shuffle.js","webpack://d3ml/./node_modules/d3-array/src/sum.js","webpack://d3ml/./node_modules/d3-array/src/transpose.js","webpack://d3ml/./node_modules/d3-array/src/zip.js","webpack://d3ml/./node_modules/d3-axis/src/array.js","webpack://d3ml/./node_modules/d3-axis/src/identity.js","webpack://d3ml/./node_modules/d3-axis/src/axis.js","webpack://d3ml/./node_modules/d3-dispatch/src/dispatch.js","webpack://d3ml/./node_modules/d3-selection/src/namespaces.js","webpack://d3ml/./node_modules/d3-selection/src/namespace.js","webpack://d3ml/./node_modules/d3-selection/src/creator.js","webpack://d3ml/./node_modules/d3-selection/src/selector.js","webpack://d3ml/./node_modules/d3-selection/src/selectorAll.js","webpack://d3ml/./node_modules/d3-selection/src/matcher.js","webpack://d3ml/./node_modules/d3-selection/src/selection/sparse.js","webpack://d3ml/./node_modules/d3-selection/src/selection/enter.js","webpack://d3ml/./node_modules/d3-selection/src/constant.js","webpack://d3ml/./node_modules/d3-selection/src/selection/data.js","webpack://d3ml/./node_modules/d3-selection/src/selection/sort.js","webpack://d3ml/./node_modules/d3-selection/src/selection/attr.js","webpack://d3ml/./node_modules/d3-selection/src/window.js","webpack://d3ml/./node_modules/d3-selection/src/selection/style.js","webpack://d3ml/./node_modules/d3-selection/src/selection/classed.js","webpack://d3ml/./node_modules/d3-selection/src/selection/text.js","webpack://d3ml/./node_modules/d3-selection/src/selection/html.js","webpack://d3ml/./node_modules/d3-selection/src/selection/raise.js","webpack://d3ml/./node_modules/d3-selection/src/selection/lower.js","webpack://d3ml/./node_modules/d3-selection/src/selection/insert.js","webpack://d3ml/./node_modules/d3-selection/src/selection/remove.js","webpack://d3ml/./node_modules/d3-selection/src/selection/clone.js","webpack://d3ml/./node_modules/d3-selection/src/selection/on.js","webpack://d3ml/./node_modules/d3-selection/src/selection/dispatch.js","webpack://d3ml/./node_modules/d3-selection/src/selection/index.js","webpack://d3ml/./node_modules/d3-selection/src/selection/select.js","webpack://d3ml/./node_modules/d3-selection/src/selection/selectAll.js","webpack://d3ml/./node_modules/d3-selection/src/selection/filter.js","webpack://d3ml/./node_modules/d3-selection/src/selection/exit.js","webpack://d3ml/./node_modules/d3-selection/src/selection/merge.js","webpack://d3ml/./node_modules/d3-selection/src/selection/order.js","webpack://d3ml/./node_modules/d3-selection/src/selection/call.js","webpack://d3ml/./node_modules/d3-selection/src/selection/nodes.js","webpack://d3ml/./node_modules/d3-selection/src/selection/node.js","webpack://d3ml/./node_modules/d3-selection/src/selection/size.js","webpack://d3ml/./node_modules/d3-selection/src/selection/empty.js","webpack://d3ml/./node_modules/d3-selection/src/selection/each.js","webpack://d3ml/./node_modules/d3-selection/src/selection/property.js","webpack://d3ml/./node_modules/d3-selection/src/selection/append.js","webpack://d3ml/./node_modules/d3-selection/src/selection/datum.js","webpack://d3ml/./node_modules/d3-selection/src/select.js","webpack://d3ml/./node_modules/d3-selection/src/create.js","webpack://d3ml/./node_modules/d3-selection/src/local.js","webpack://d3ml/./node_modules/d3-selection/src/sourceEvent.js","webpack://d3ml/./node_modules/d3-selection/src/point.js","webpack://d3ml/./node_modules/d3-selection/src/mouse.js","webpack://d3ml/./node_modules/d3-selection/src/selectAll.js","webpack://d3ml/./node_modules/d3-selection/src/touch.js","webpack://d3ml/./node_modules/d3-selection/src/touches.js","webpack://d3ml/./node_modules/d3-drag/src/noevent.js","webpack://d3ml/./node_modules/d3-drag/src/nodrag.js","webpack://d3ml/./node_modules/d3-drag/src/constant.js","webpack://d3ml/./node_modules/d3-drag/src/event.js","webpack://d3ml/./node_modules/d3-drag/src/drag.js","webpack://d3ml/./node_modules/d3-color/src/define.js","webpack://d3ml/./node_modules/d3-color/src/color.js","webpack://d3ml/./node_modules/d3-color/src/math.js","webpack://d3ml/./node_modules/d3-color/src/lab.js","webpack://d3ml/./node_modules/d3-color/src/cubehelix.js","webpack://d3ml/./node_modules/d3-interpolate/src/basis.js","webpack://d3ml/./node_modules/d3-interpolate/src/basisClosed.js","webpack://d3ml/./node_modules/d3-interpolate/src/constant.js","webpack://d3ml/./node_modules/d3-interpolate/src/color.js","webpack://d3ml/./node_modules/d3-interpolate/src/rgb.js","webpack://d3ml/./node_modules/d3-interpolate/src/array.js","webpack://d3ml/./node_modules/d3-interpolate/src/date.js","webpack://d3ml/./node_modules/d3-interpolate/src/number.js","webpack://d3ml/./node_modules/d3-interpolate/src/object.js","webpack://d3ml/./node_modules/d3-interpolate/src/string.js","webpack://d3ml/./node_modules/d3-interpolate/src/transform/parse.js","webpack://d3ml/./node_modules/d3-interpolate/src/value.js","webpack://d3ml/./node_modules/d3-interpolate/src/round.js","webpack://d3ml/./node_modules/d3-interpolate/src/transform/decompose.js","webpack://d3ml/./node_modules/d3-interpolate/src/transform/index.js","webpack://d3ml/./node_modules/d3-interpolate/src/zoom.js","webpack://d3ml/./node_modules/d3-interpolate/src/hsl.js","webpack://d3ml/./node_modules/d3-interpolate/src/lab.js","webpack://d3ml/./node_modules/d3-interpolate/src/hcl.js","webpack://d3ml/./node_modules/d3-interpolate/src/cubehelix.js","webpack://d3ml/./node_modules/d3-interpolate/src/piecewise.js","webpack://d3ml/./node_modules/d3-interpolate/src/quantize.js","webpack://d3ml/./node_modules/d3-timer/src/timer.js","webpack://d3ml/./node_modules/d3-timer/src/timeout.js","webpack://d3ml/./node_modules/d3-timer/src/interval.js","webpack://d3ml/./node_modules/d3-transition/src/transition/schedule.js","webpack://d3ml/./node_modules/d3-transition/src/interrupt.js","webpack://d3ml/./node_modules/d3-transition/src/transition/tween.js","webpack://d3ml/./node_modules/d3-transition/src/transition/interpolate.js","webpack://d3ml/./node_modules/d3-transition/src/transition/remove.js","webpack://d3ml/./node_modules/d3-transition/src/transition/selection.js","webpack://d3ml/./node_modules/d3-transition/src/transition/text.js","webpack://d3ml/./node_modules/d3-transition/src/transition/index.js","webpack://d3ml/./node_modules/d3-ease/src/linear.js","webpack://d3ml/./node_modules/d3-ease/src/quad.js","webpack://d3ml/./node_modules/d3-ease/src/cubic.js","webpack://d3ml/./node_modules/d3-transition/src/transition/select.js","webpack://d3ml/./node_modules/d3-transition/src/transition/selectAll.js","webpack://d3ml/./node_modules/d3-transition/src/transition/filter.js","webpack://d3ml/./node_modules/d3-transition/src/transition/merge.js","webpack://d3ml/./node_modules/d3-transition/src/transition/transition.js","webpack://d3ml/./node_modules/d3-transition/src/transition/on.js","webpack://d3ml/./node_modules/d3-transition/src/transition/attr.js","webpack://d3ml/./node_modules/d3-transition/src/transition/attrTween.js","webpack://d3ml/./node_modules/d3-transition/src/transition/style.js","webpack://d3ml/./node_modules/d3-transition/src/transition/styleTween.js","webpack://d3ml/./node_modules/d3-transition/src/transition/delay.js","webpack://d3ml/./node_modules/d3-transition/src/transition/duration.js","webpack://d3ml/./node_modules/d3-transition/src/transition/ease.js","webpack://d3ml/./node_modules/d3-ease/src/poly.js","webpack://d3ml/./node_modules/d3-ease/src/sin.js","webpack://d3ml/./node_modules/d3-ease/src/exp.js","webpack://d3ml/./node_modules/d3-ease/src/circle.js","webpack://d3ml/./node_modules/d3-ease/src/bounce.js","webpack://d3ml/./node_modules/d3-ease/src/back.js","webpack://d3ml/./node_modules/d3-ease/src/elastic.js","webpack://d3ml/./node_modules/d3-transition/src/selection/transition.js","webpack://d3ml/./node_modules/d3-transition/src/selection/index.js","webpack://d3ml/./node_modules/d3-transition/src/selection/interrupt.js","webpack://d3ml/./node_modules/d3-transition/src/active.js","webpack://d3ml/./node_modules/d3-brush/src/constant.js","webpack://d3ml/./node_modules/d3-brush/src/event.js","webpack://d3ml/./node_modules/d3-brush/src/noevent.js","webpack://d3ml/./node_modules/d3-brush/src/brush.js","webpack://d3ml/./node_modules/d3-chord/src/math.js","webpack://d3ml/./node_modules/d3-chord/src/chord.js","webpack://d3ml/./node_modules/d3-chord/src/array.js","webpack://d3ml/./node_modules/d3-chord/src/constant.js","webpack://d3ml/./node_modules/d3-path/src/path.js","webpack://d3ml/./node_modules/d3-chord/src/ribbon.js","webpack://d3ml/./node_modules/d3-collection/src/map.js","webpack://d3ml/./node_modules/d3-collection/src/nest.js","webpack://d3ml/./node_modules/d3-collection/src/set.js","webpack://d3ml/./node_modules/d3-collection/src/keys.js","webpack://d3ml/./node_modules/d3-collection/src/values.js","webpack://d3ml/./node_modules/d3-collection/src/entries.js","webpack://d3ml/./node_modules/d3-contour/src/array.js","webpack://d3ml/./node_modules/d3-contour/src/ascending.js","webpack://d3ml/./node_modules/d3-contour/src/area.js","webpack://d3ml/./node_modules/d3-contour/src/constant.js","webpack://d3ml/./node_modules/d3-contour/src/contains.js","webpack://d3ml/./node_modules/d3-contour/src/noop.js","webpack://d3ml/./node_modules/d3-contour/src/contours.js","webpack://d3ml/./node_modules/d3-contour/src/blur.js","webpack://d3ml/./node_modules/d3-contour/src/density.js","webpack://d3ml/./node_modules/d3-dsv/src/dsv.js","webpack://d3ml/./node_modules/d3-dsv/src/csv.js","webpack://d3ml/./node_modules/d3-dsv/src/tsv.js","webpack://d3ml/./node_modules/d3-fetch/src/blob.js","webpack://d3ml/./node_modules/d3-fetch/src/buffer.js","webpack://d3ml/./node_modules/d3-fetch/src/text.js","webpack://d3ml/./node_modules/d3-fetch/src/dsv.js","webpack://d3ml/./node_modules/d3-fetch/src/image.js","webpack://d3ml/./node_modules/d3-fetch/src/json.js","webpack://d3ml/./node_modules/d3-fetch/src/xml.js","webpack://d3ml/./node_modules/d3-force/src/center.js","webpack://d3ml/./node_modules/d3-force/src/constant.js","webpack://d3ml/./node_modules/d3-force/src/jiggle.js","webpack://d3ml/./node_modules/d3-quadtree/src/add.js","webpack://d3ml/./node_modules/d3-quadtree/src/cover.js","webpack://d3ml/./node_modules/d3-quadtree/src/quad.js","webpack://d3ml/./node_modules/d3-quadtree/src/x.js","webpack://d3ml/./node_modules/d3-quadtree/src/y.js","webpack://d3ml/./node_modules/d3-quadtree/src/quadtree.js","webpack://d3ml/./node_modules/d3-force/src/collide.js","webpack://d3ml/./node_modules/d3-quadtree/src/data.js","webpack://d3ml/./node_modules/d3-quadtree/src/extent.js","webpack://d3ml/./node_modules/d3-quadtree/src/find.js","webpack://d3ml/./node_modules/d3-quadtree/src/remove.js","webpack://d3ml/./node_modules/d3-quadtree/src/root.js","webpack://d3ml/./node_modules/d3-quadtree/src/size.js","webpack://d3ml/./node_modules/d3-quadtree/src/visit.js","webpack://d3ml/./node_modules/d3-quadtree/src/visitAfter.js","webpack://d3ml/./node_modules/d3-force/src/link.js","webpack://d3ml/./node_modules/d3-force/src/simulation.js","webpack://d3ml/./node_modules/d3-force/src/manyBody.js","webpack://d3ml/./node_modules/d3-force/src/radial.js","webpack://d3ml/./node_modules/d3-force/src/x.js","webpack://d3ml/./node_modules/d3-force/src/y.js","webpack://d3ml/./node_modules/d3-format/src/formatDecimal.js","webpack://d3ml/./node_modules/d3-format/src/exponent.js","webpack://d3ml/./node_modules/d3-format/src/formatSpecifier.js","webpack://d3ml/./node_modules/d3-format/src/formatTrim.js","webpack://d3ml/./node_modules/d3-format/src/formatPrefixAuto.js","webpack://d3ml/./node_modules/d3-format/src/defaultLocale.js","webpack://d3ml/./node_modules/d3-format/src/formatRounded.js","webpack://d3ml/./node_modules/d3-format/src/formatTypes.js","webpack://d3ml/./node_modules/d3-format/src/identity.js","webpack://d3ml/./node_modules/d3-format/src/locale.js","webpack://d3ml/./node_modules/d3-format/src/formatGroup.js","webpack://d3ml/./node_modules/d3-format/src/formatNumerals.js","webpack://d3ml/./node_modules/d3-format/src/precisionFixed.js","webpack://d3ml/./node_modules/d3-format/src/precisionPrefix.js","webpack://d3ml/./node_modules/d3-format/src/precisionRound.js","webpack://d3ml/./node_modules/d3-geo/src/adder.js","webpack://d3ml/./node_modules/d3-geo/src/math.js","webpack://d3ml/./node_modules/d3-geo/src/noop.js","webpack://d3ml/./node_modules/d3-geo/src/stream.js","webpack://d3ml/./node_modules/d3-geo/src/area.js","webpack://d3ml/./node_modules/d3-geo/src/cartesian.js","webpack://d3ml/./node_modules/d3-geo/src/bounds.js","webpack://d3ml/./node_modules/d3-geo/src/centroid.js","webpack://d3ml/./node_modules/d3-geo/src/constant.js","webpack://d3ml/./node_modules/d3-geo/src/compose.js","webpack://d3ml/./node_modules/d3-geo/src/rotation.js","webpack://d3ml/./node_modules/d3-geo/src/circle.js","webpack://d3ml/./node_modules/d3-geo/src/clip/buffer.js","webpack://d3ml/./node_modules/d3-geo/src/pointEqual.js","webpack://d3ml/./node_modules/d3-geo/src/clip/rejoin.js","webpack://d3ml/./node_modules/d3-geo/src/polygonContains.js","webpack://d3ml/./node_modules/d3-geo/src/clip/index.js","webpack://d3ml/./node_modules/d3-geo/src/clip/antimeridian.js","webpack://d3ml/./node_modules/d3-geo/src/clip/circle.js","webpack://d3ml/./node_modules/d3-geo/src/clip/line.js","webpack://d3ml/./node_modules/d3-geo/src/clip/rectangle.js","webpack://d3ml/./node_modules/d3-geo/src/clip/extent.js","webpack://d3ml/./node_modules/d3-geo/src/length.js","webpack://d3ml/./node_modules/d3-geo/src/distance.js","webpack://d3ml/./node_modules/d3-geo/src/contains.js","webpack://d3ml/./node_modules/d3-geo/src/graticule.js","webpack://d3ml/./node_modules/d3-geo/src/interpolate.js","webpack://d3ml/./node_modules/d3-geo/src/path/area.js","webpack://d3ml/./node_modules/d3-geo/src/identity.js","webpack://d3ml/./node_modules/d3-geo/src/path/bounds.js","webpack://d3ml/./node_modules/d3-geo/src/path/centroid.js","webpack://d3ml/./node_modules/d3-geo/src/path/context.js","webpack://d3ml/./node_modules/d3-geo/src/path/measure.js","webpack://d3ml/./node_modules/d3-geo/src/path/string.js","webpack://d3ml/./node_modules/d3-geo/src/path/index.js","webpack://d3ml/./node_modules/d3-geo/src/transform.js","webpack://d3ml/./node_modules/d3-geo/src/projection/fit.js","webpack://d3ml/./node_modules/d3-geo/src/projection/resample.js","webpack://d3ml/./node_modules/d3-geo/src/projection/index.js","webpack://d3ml/./node_modules/d3-geo/src/projection/conic.js","webpack://d3ml/./node_modules/d3-geo/src/projection/conicEqualArea.js","webpack://d3ml/./node_modules/d3-geo/src/projection/cylindricalEqualArea.js","webpack://d3ml/./node_modules/d3-geo/src/projection/albers.js","webpack://d3ml/./node_modules/d3-geo/src/projection/albersUsa.js","webpack://d3ml/./node_modules/d3-geo/src/projection/azimuthal.js","webpack://d3ml/./node_modules/d3-geo/src/projection/azimuthalEqualArea.js","webpack://d3ml/./node_modules/d3-geo/src/projection/azimuthalEquidistant.js","webpack://d3ml/./node_modules/d3-geo/src/projection/mercator.js","webpack://d3ml/./node_modules/d3-geo/src/projection/conicConformal.js","webpack://d3ml/./node_modules/d3-geo/src/projection/equirectangular.js","webpack://d3ml/./node_modules/d3-geo/src/projection/conicEquidistant.js","webpack://d3ml/./node_modules/d3-geo/src/projection/gnomonic.js","webpack://d3ml/./node_modules/d3-geo/src/projection/identity.js","webpack://d3ml/./node_modules/d3-geo/src/projection/naturalEarth1.js","webpack://d3ml/./node_modules/d3-geo/src/projection/orthographic.js","webpack://d3ml/./node_modules/d3-geo/src/projection/stereographic.js","webpack://d3ml/./node_modules/d3-geo/src/projection/transverseMercator.js","webpack://d3ml/./node_modules/d3-hierarchy/src/cluster.js","webpack://d3ml/./node_modules/d3-hierarchy/src/hierarchy/count.js","webpack://d3ml/./node_modules/d3-hierarchy/src/hierarchy/index.js","webpack://d3ml/./node_modules/d3-hierarchy/src/hierarchy/each.js","webpack://d3ml/./node_modules/d3-hierarchy/src/hierarchy/eachAfter.js","webpack://d3ml/./node_modules/d3-hierarchy/src/hierarchy/eachBefore.js","webpack://d3ml/./node_modules/d3-hierarchy/src/hierarchy/sum.js","webpack://d3ml/./node_modules/d3-hierarchy/src/hierarchy/sort.js","webpack://d3ml/./node_modules/d3-hierarchy/src/hierarchy/path.js","webpack://d3ml/./node_modules/d3-hierarchy/src/hierarchy/ancestors.js","webpack://d3ml/./node_modules/d3-hierarchy/src/hierarchy/descendants.js","webpack://d3ml/./node_modules/d3-hierarchy/src/hierarchy/leaves.js","webpack://d3ml/./node_modules/d3-hierarchy/src/hierarchy/links.js","webpack://d3ml/./node_modules/d3-hierarchy/src/array.js","webpack://d3ml/./node_modules/d3-hierarchy/src/pack/enclose.js","webpack://d3ml/./node_modules/d3-hierarchy/src/pack/siblings.js","webpack://d3ml/./node_modules/d3-hierarchy/src/accessors.js","webpack://d3ml/./node_modules/d3-hierarchy/src/constant.js","webpack://d3ml/./node_modules/d3-hierarchy/src/pack/index.js","webpack://d3ml/./node_modules/d3-hierarchy/src/treemap/round.js","webpack://d3ml/./node_modules/d3-hierarchy/src/treemap/dice.js","webpack://d3ml/./node_modules/d3-hierarchy/src/partition.js","webpack://d3ml/./node_modules/d3-hierarchy/src/stratify.js","webpack://d3ml/./node_modules/d3-hierarchy/src/tree.js","webpack://d3ml/./node_modules/d3-hierarchy/src/treemap/slice.js","webpack://d3ml/./node_modules/d3-hierarchy/src/treemap/squarify.js","webpack://d3ml/./node_modules/d3-hierarchy/src/treemap/index.js","webpack://d3ml/./node_modules/d3-hierarchy/src/treemap/binary.js","webpack://d3ml/./node_modules/d3-hierarchy/src/treemap/sliceDice.js","webpack://d3ml/./node_modules/d3-hierarchy/src/treemap/resquarify.js","webpack://d3ml/./node_modules/d3-polygon/src/area.js","webpack://d3ml/./node_modules/d3-polygon/src/centroid.js","webpack://d3ml/./node_modules/d3-polygon/src/cross.js","webpack://d3ml/./node_modules/d3-polygon/src/hull.js","webpack://d3ml/./node_modules/d3-polygon/src/contains.js","webpack://d3ml/./node_modules/d3-polygon/src/length.js","webpack://d3ml/./node_modules/d3-random/src/defaultSource.js","webpack://d3ml/./node_modules/d3-random/src/uniform.js","webpack://d3ml/./node_modules/d3-random/src/normal.js","webpack://d3ml/./node_modules/d3-random/src/logNormal.js","webpack://d3ml/./node_modules/d3-random/src/irwinHall.js","webpack://d3ml/./node_modules/d3-random/src/bates.js","webpack://d3ml/./node_modules/d3-random/src/exponential.js","webpack://d3ml/./node_modules/d3-scale/src/array.js","webpack://d3ml/./node_modules/d3-scale/src/ordinal.js","webpack://d3ml/./node_modules/d3-scale/src/band.js","webpack://d3ml/./node_modules/d3-scale/src/constant.js","webpack://d3ml/./node_modules/d3-scale/src/number.js","webpack://d3ml/./node_modules/d3-scale/src/continuous.js","webpack://d3ml/./node_modules/d3-scale/src/tickFormat.js","webpack://d3ml/./node_modules/d3-scale/src/linear.js","webpack://d3ml/./node_modules/d3-scale/src/identity.js","webpack://d3ml/./node_modules/d3-scale/src/nice.js","webpack://d3ml/./node_modules/d3-scale/src/log.js","webpack://d3ml/./node_modules/d3-scale/src/pow.js","webpack://d3ml/./node_modules/d3-scale/src/quantile.js","webpack://d3ml/./node_modules/d3-scale/src/quantize.js","webpack://d3ml/./node_modules/d3-scale/src/threshold.js","webpack://d3ml/./node_modules/d3-time/src/interval.js","webpack://d3ml/./node_modules/d3-time/src/millisecond.js","webpack://d3ml/./node_modules/d3-time/src/duration.js","webpack://d3ml/./node_modules/d3-time/src/second.js","webpack://d3ml/./node_modules/d3-time/src/minute.js","webpack://d3ml/./node_modules/d3-time/src/hour.js","webpack://d3ml/./node_modules/d3-time/src/day.js","webpack://d3ml/./node_modules/d3-time/src/week.js","webpack://d3ml/./node_modules/d3-time/src/month.js","webpack://d3ml/./node_modules/d3-time/src/year.js","webpack://d3ml/./node_modules/d3-time/src/utcMinute.js","webpack://d3ml/./node_modules/d3-time/src/utcHour.js","webpack://d3ml/./node_modules/d3-time/src/utcDay.js","webpack://d3ml/./node_modules/d3-time/src/utcWeek.js","webpack://d3ml/./node_modules/d3-time/src/utcMonth.js","webpack://d3ml/./node_modules/d3-time/src/utcYear.js","webpack://d3ml/./node_modules/d3-time-format/src/locale.js","webpack://d3ml/./node_modules/d3-time-format/src/defaultLocale.js","webpack://d3ml/./node_modules/d3-time-format/src/isoFormat.js","webpack://d3ml/./node_modules/d3-time-format/src/isoParse.js","webpack://d3ml/./node_modules/d3-scale/src/time.js","webpack://d3ml/./node_modules/d3-scale/src/utcTime.js","webpack://d3ml/./node_modules/d3-scale/src/sequential.js","webpack://d3ml/./node_modules/d3-scale/src/diverging.js","webpack://d3ml/./node_modules/d3-scale-chromatic/src/colors.js","webpack://d3ml/./node_modules/d3-scale-chromatic/src/categorical/category10.js","webpack://d3ml/./node_modules/d3-scale-chromatic/src/categorical/Accent.js","webpack://d3ml/./node_modules/d3-scale-chromatic/src/categorical/Dark2.js","webpack://d3ml/./node_modules/d3-scale-chromatic/src/categorical/Paired.js","webpack://d3ml/./node_modules/d3-scale-chromatic/src/categorical/Pastel1.js","webpack://d3ml/./node_modules/d3-scale-chromatic/src/categorical/Pastel2.js","webpack://d3ml/./node_modules/d3-scale-chromatic/src/categorical/Set1.js","webpack://d3ml/./node_modules/d3-scale-chromatic/src/categorical/Set2.js","webpack://d3ml/./node_modules/d3-scale-chromatic/src/categorical/Set3.js","webpack://d3ml/./node_modules/d3-scale-chromatic/src/ramp.js","webpack://d3ml/./node_modules/d3-scale-chromatic/src/diverging/BrBG.js","webpack://d3ml/./node_modules/d3-scale-chromatic/src/diverging/PRGn.js","webpack://d3ml/./node_modules/d3-scale-chromatic/src/diverging/PiYG.js","webpack://d3ml/./node_modules/d3-scale-chromatic/src/diverging/PuOr.js","webpack://d3ml/./node_modules/d3-scale-chromatic/src/diverging/RdBu.js","webpack://d3ml/./node_modules/d3-scale-chromatic/src/diverging/RdGy.js","webpack://d3ml/./node_modules/d3-scale-chromatic/src/diverging/RdYlBu.js","webpack://d3ml/./node_modules/d3-scale-chromatic/src/diverging/RdYlGn.js","webpack://d3ml/./node_modules/d3-scale-chromatic/src/diverging/Spectral.js","webpack://d3ml/./node_modules/d3-scale-chromatic/src/sequential-multi/BuGn.js","webpack://d3ml/./node_modules/d3-scale-chromatic/src/sequential-multi/BuPu.js","webpack://d3ml/./node_modules/d3-scale-chromatic/src/sequential-multi/GnBu.js","webpack://d3ml/./node_modules/d3-scale-chromatic/src/sequential-multi/OrRd.js","webpack://d3ml/./node_modules/d3-scale-chromatic/src/sequential-multi/PuBuGn.js","webpack://d3ml/./node_modules/d3-scale-chromatic/src/sequential-multi/PuBu.js","webpack://d3ml/./node_modules/d3-scale-chromatic/src/sequential-multi/PuRd.js","webpack://d3ml/./node_modules/d3-scale-chromatic/src/sequential-multi/RdPu.js","webpack://d3ml/./node_modules/d3-scale-chromatic/src/sequential-multi/YlGnBu.js","webpack://d3ml/./node_modules/d3-scale-chromatic/src/sequential-multi/YlGn.js","webpack://d3ml/./node_modules/d3-scale-chromatic/src/sequential-multi/YlOrBr.js","webpack://d3ml/./node_modules/d3-scale-chromatic/src/sequential-multi/YlOrRd.js","webpack://d3ml/./node_modules/d3-scale-chromatic/src/sequential-single/Blues.js","webpack://d3ml/./node_modules/d3-scale-chromatic/src/sequential-single/Greens.js","webpack://d3ml/./node_modules/d3-scale-chromatic/src/sequential-single/Greys.js","webpack://d3ml/./node_modules/d3-scale-chromatic/src/sequential-single/Purples.js","webpack://d3ml/./node_modules/d3-scale-chromatic/src/sequential-single/Reds.js","webpack://d3ml/./node_modules/d3-scale-chromatic/src/sequential-single/Oranges.js","webpack://d3ml/./node_modules/d3-scale-chromatic/src/sequential-multi/cubehelix.js","webpack://d3ml/./node_modules/d3-scale-chromatic/src/sequential-multi/rainbow.js","webpack://d3ml/./node_modules/d3-scale-chromatic/src/sequential-multi/sinebow.js","webpack://d3ml/./node_modules/d3-scale-chromatic/src/sequential-multi/viridis.js","webpack://d3ml/./node_modules/d3-shape/src/constant.js","webpack://d3ml/./node_modules/d3-shape/src/math.js","webpack://d3ml/./node_modules/d3-shape/src/arc.js","webpack://d3ml/./node_modules/d3-shape/src/curve/linear.js","webpack://d3ml/./node_modules/d3-shape/src/point.js","webpack://d3ml/./node_modules/d3-shape/src/line.js","webpack://d3ml/./node_modules/d3-shape/src/area.js","webpack://d3ml/./node_modules/d3-shape/src/descending.js","webpack://d3ml/./node_modules/d3-shape/src/identity.js","webpack://d3ml/./node_modules/d3-shape/src/pie.js","webpack://d3ml/./node_modules/d3-shape/src/curve/radial.js","webpack://d3ml/./node_modules/d3-shape/src/lineRadial.js","webpack://d3ml/./node_modules/d3-shape/src/areaRadial.js","webpack://d3ml/./node_modules/d3-shape/src/pointRadial.js","webpack://d3ml/./node_modules/d3-shape/src/array.js","webpack://d3ml/./node_modules/d3-shape/src/link/index.js","webpack://d3ml/./node_modules/d3-shape/src/symbol/circle.js","webpack://d3ml/./node_modules/d3-shape/src/symbol/cross.js","webpack://d3ml/./node_modules/d3-shape/src/symbol/diamond.js","webpack://d3ml/./node_modules/d3-shape/src/symbol/star.js","webpack://d3ml/./node_modules/d3-shape/src/symbol/square.js","webpack://d3ml/./node_modules/d3-shape/src/symbol/triangle.js","webpack://d3ml/./node_modules/d3-shape/src/symbol/wye.js","webpack://d3ml/./node_modules/d3-shape/src/symbol.js","webpack://d3ml/./node_modules/d3-shape/src/noop.js","webpack://d3ml/./node_modules/d3-shape/src/curve/basis.js","webpack://d3ml/./node_modules/d3-shape/src/curve/basisClosed.js","webpack://d3ml/./node_modules/d3-shape/src/curve/basisOpen.js","webpack://d3ml/./node_modules/d3-shape/src/curve/bundle.js","webpack://d3ml/./node_modules/d3-shape/src/curve/cardinal.js","webpack://d3ml/./node_modules/d3-shape/src/curve/cardinalClosed.js","webpack://d3ml/./node_modules/d3-shape/src/curve/cardinalOpen.js","webpack://d3ml/./node_modules/d3-shape/src/curve/catmullRom.js","webpack://d3ml/./node_modules/d3-shape/src/curve/catmullRomClosed.js","webpack://d3ml/./node_modules/d3-shape/src/curve/catmullRomOpen.js","webpack://d3ml/./node_modules/d3-shape/src/curve/linearClosed.js","webpack://d3ml/./node_modules/d3-shape/src/curve/monotone.js","webpack://d3ml/./node_modules/d3-shape/src/curve/natural.js","webpack://d3ml/./node_modules/d3-shape/src/curve/step.js","webpack://d3ml/./node_modules/d3-shape/src/offset/none.js","webpack://d3ml/./node_modules/d3-shape/src/order/none.js","webpack://d3ml/./node_modules/d3-shape/src/stack.js","webpack://d3ml/./node_modules/d3-shape/src/offset/expand.js","webpack://d3ml/./node_modules/d3-shape/src/offset/diverging.js","webpack://d3ml/./node_modules/d3-shape/src/offset/silhouette.js","webpack://d3ml/./node_modules/d3-shape/src/offset/wiggle.js","webpack://d3ml/./node_modules/d3-shape/src/order/ascending.js","webpack://d3ml/./node_modules/d3-shape/src/order/descending.js","webpack://d3ml/./node_modules/d3-shape/src/order/insideOut.js","webpack://d3ml/./node_modules/d3-shape/src/order/reverse.js","webpack://d3ml/./node_modules/d3-voronoi/src/constant.js","webpack://d3ml/./node_modules/d3-voronoi/src/point.js","webpack://d3ml/./node_modules/d3-voronoi/src/RedBlackTree.js","webpack://d3ml/./node_modules/d3-voronoi/src/Edge.js","webpack://d3ml/./node_modules/d3-voronoi/src/Cell.js","webpack://d3ml/./node_modules/d3-voronoi/src/Circle.js","webpack://d3ml/./node_modules/d3-voronoi/src/Beach.js","webpack://d3ml/./node_modules/d3-voronoi/src/Diagram.js","webpack://d3ml/./node_modules/d3-voronoi/src/voronoi.js","webpack://d3ml/./node_modules/d3-zoom/src/constant.js","webpack://d3ml/./node_modules/d3-zoom/src/transform.js","webpack://d3ml/./node_modules/d3-zoom/src/noevent.js","webpack://d3ml/./node_modules/d3-zoom/src/zoom.js","webpack://d3ml/./node_modules/d3-zoom/src/event.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","defaultOptions","rootNode","width","height","padding","backgroundColor","circleRadius","circleFill","circleStroke","defaultType","defaultTypes","A","B","None","defaultK","defaultClassSelectors","remove","d3ml","settings","settingsGroup","d3","_interopRequireWildcard","_circle","_interopRequireDefault","_defaults","_validator","_painter","_htmlElementCreator","Visualization","data","options","types","arguments","length","undefined","_classCallCheck","this","initializeOptions","initializeTypes","initializeTypeColorMap","initializeScales","initializeData","createVisualization","clickable","isValidOptions","assign","isValidTypes","typeColorMap","mapTypesToColors","xScale","scaleLinear","domain","min","x","max","range","yScale","y","_this","isValidData","map","mapDataToCircle","containerId","Date","now","appendWrapperContainer","appendSVG","container","default","createElement","document","querySelector","appendChild","svg","select","concat","append","attr","style","colorScale","scaleOrdinal","schemeSet1","colorMap","reduce","type","fillColor","getFillColor","callbacks","_this2","addEventListener","e","clickCallback","_this3","target","newCircle","invert","offsetX","offsetY","forEach","callback","inputId","inputType","_this4","inputChangeCallback","_this5","checked","elementName","attributes","childElements","createSettingsGroup","labelText","labelAttributes","displayedValue","inputAttributes","span","innerHTML","label","textContent","input","circle","push","drawCircles","Painter","lines","selectAll","enter","stroke","strokeWidth","x1","y1","x2","y2","cssClass","line","transitionDuration","transition","duration","circles","fill","radius","cx","cy","Circle","distance","HTMLElementCreator","el","setAttribute","child","div","labeledValue","_visualization","_knnVisualization","_linearRegressionVisualization","Validator","result","_typeof","Array","isArray","keys","every","val","includes","hasType","validTypes","validKeys","validValues","res","Infinity","k","Number","isInteger","_knn","selectors","rangeK","rangeKLabel","weightedCheckbox","weightedLabel","KNNVisualization","_possibleConstructorReturn","__proto__","getPrototypeOf","knn","appendSettings","addEventListeners","createSettings","createSettingsGroupForK","createSettingsGroupForWeighted","_this$createLabeledIn","createLabeledInput","_this$createLabeledIn2","onClickSvg","svgClickCallback","onChangeInput","inputRangeKChangeCallback","checkboxWeightedChangeCallback","classifiedCircle","getClassifiedCircle","addCircle","boundingCircle","getBoundingCircle","drawConnectingLines","mapClosestNeighborsToConnectingLines","filter","removeElementsAfterTransition","updateIndexRangeKMaximum","weighted","circleType","classify","setType","kClosestNeighbors","setCssClass","connectingLines","drawLines","typeColor","selector","that","on","removeElements","_machineLearningAlgorithm","KNN","a","b","Math","sqrt","pow","neighbors","setDistance","calculateDistance","sort","compareDistance","typeDistance","neighbor","inverseDistance","counts","entries","getCircleTypeWeighted","getCircleTypeUnweighted","findKClosestNeighbors","determineCircleType","MachineLearningAlgorithm","_linearRegression","LinearRegressionVisualization","linearRegression","redraw","transitionLines","getLinesToDraw","linesCopy","from","newLine","_this$linearRegressio","performRegression","slope","intercept","regressionLine","getRegressionLine","getConnectingLines","createLine","LinearRegression","sum","meanX","meanY","f","up","down","calculateMean","calculateSlope","calculateIntercept","yPredicted","NaN","idx","ascending","bisector","compare","ascendingComparator","left","lo","hi","mid","right","ascendingBisect","bisectRight","bisectLeft","bisect","pairs","array","pair","cross","values0","values1","i0","i1","value0","n0","n1","values","descending","number","variance","valueof","delta","mean","isNaN","deviation","v","src_extent","array_array","slice","constant","identity","src_range","start","stop","step","ceil","e10","e5","e2","ticks","count","reverse","tickIncrement","isFinite","floor","power","log","LN10","error","tickStep","step0","abs","step1","sturges","LN2","src_histogram","threshold","histogram","xz","x0","tz","shift","pop","bin","bins","_","thresholds","quantile","freedmanDiaconis","scott","src_max","src_mean","median","numbers","src_merge","arrays","merged","j","src_min","permute","indexes","permutes","scan","xi","xj","shuffle","random","src_sum","src_transpose","matrix","transpose_length","transpose","row","zip","array_slice","src_identity","axis_top","axis_right","axis_bottom","axis_left","epsilon","translateX","translateY","entering","__axis","axis_axis","orient","scale","tickArguments","tickValues","tickFormat","tickSizeInner","tickSizeOuter","tickPadding","transform","axis","context","apply","format","spacing","range0","range1","position","bandwidth","offset","round","copy","selection","path","tick","order","tickExit","exit","tickEnter","text","merge","insert","getAttribute","parentNode","each","tickSize","axisTop","axisRight","axisBottom","axisLeft","noop","dispatch","Error","Dispatch","set","constructor","typename","T","typenames","trim","split","indexOf","parseTypenames","args","src_dispatch","xhtml","namespaces","xlink","xml","xmlns","namespace","prefix","space","local","creator","fullname","ownerDocument","createElementNS","uri","namespaceURI","documentElement","none","src_selector","selectorAll_empty","selectorAll","querySelectorAll","matcher","matches","matcher_element","vendorMatches","webkitMatchesSelector","msMatchesSelector","mozMatchesSelector","oMatchesSelector","src_matcher","sparse","update","EnterNode","parent","datum","_next","_parent","__data__","insertBefore","next","keyPrefix","bindIndex","group","node","groupLength","dataLength","bindKey","keyValue","nodeByKeyValue","keyValues","sort_ascending","src_window","defaultView","styleValue","getPropertyValue","getComputedStyle","classArray","string","classList","ClassList","_node","_names","classedAdd","names","list","add","classedRemove","join","splice","contains","textRemove","htmlRemove","raise","nextSibling","lower","previousSibling","firstChild","constantNull","removeChild","selection_cloneShallow","cloneNode","selection_cloneDeep","filterEvents","on_event","mouseenter","mouseleave","filterContextListener","listener","index","contextListener","event","related","relatedTarget","compareDocumentPosition","event1","event0","onRemove","__on","removeEventListener","capture","onAdd","wrap","customEvent","sourceEvent","dispatchEvent","params","CustomEvent","createEvent","initEvent","bubbles","cancelable","detail","selection_root","Selection","groups","parents","_groups","_parents","selection_selection","subgroups","subnode","subgroup","match","size","src_constant","enterGroup","updateGroup","previous","_enter","_exit","groups0","groups1","m0","m1","merges","group0","group1","compareNode","sortgroups","sortgroup","nodes","empty","getAttributeNS","removeAttributeNS","removeAttribute","setAttributeNS","priority","removeProperty","setProperty","classed","html","before","clone","deep","on_parseTypenames","src_selection","src_select","src_create","nextId","Local","toString","id","source","current","src_point","ownerSVGElement","createSVGPoint","point","clientX","clientY","matrixTransform","getScreenCTM","inverse","rect","getBoundingClientRect","clientLeft","top","clientTop","mouse","changedTouches","src_selectAll","src_touch","touches","identifier","touch","src_touches","points","nopropagation","stopImmediatePropagation","noevent","preventDefault","nodrag","view","__noselect","MozUserSelect","yesdrag","noclick","setTimeout","d3_drag_src_constant","DragEvent","subject","active","dx","dy","defaultFilter","button","defaultContainer","defaultSubject","defaultTouchable","src_drag","mousedownx","mousedowny","mousemoving","touchending","touchable","gestures","listeners","clickDistance2","drag","mousedowned","touchstarted","touchmoved","touchended","gesture","beforestart","mousemoved","mouseupped","clearTimeout","sublisteners","p0","clickDistance","extend","definition","Color","reI","reN","reP","reHex3","reHex6","reRgbInteger","RegExp","reRgbPercent","reRgbaInteger","reRgbaPercent","reHslPercent","reHslaPercent","named","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","color_color","toLowerCase","exec","Rgb","parseInt","rgbn","rgba","hsla","g","rgbConvert","rgb","opacity","color_rgb","hex","h","Hsl","hsl","hslConvert","hsl2rgb","m2","displayable","brighter","darker","deg2rad","PI","rad2deg","Xn","Yn","Zn","lab_t0","lab_t1","lab_t2","t3","labConvert","Lab","Hcl","cos","sin","z","rgb2lrgb","xyz2lab","lab","lab2xyz","lrgb2rgb","hclConvert","atan2","lch","hcl","C","cubehelix_D","cubehelix_E","ED","EB","BC_DA","cubehelix_cubehelix","Cubehelix","bl","cubehelixConvert","basis","t1","v0","v1","v2","v3","t2","cosh","sinh","src_basis","basisClosed","d3_interpolate_src_constant","linear","color_hue","gamma","nogamma","exponential","rgbGamma","color","end","rgbSpline","spline","colors","rgbBasis","rgbBasisClosed","src_array","nb","na","src_value","src_date","setTime","src_number","src_object","reA","reB","cssNode","cssRoot","cssView","svgNode","src_string","am","bm","bs","bi","lastIndex","q","one","string_zero","src_rgb","valueOf","src_round","degrees","decompose_identity","rotate","skewX","scaleX","scaleY","decompose","atan","interpolateTransform","parse","pxComma","pxParen","degParen","xa","ya","xb","yb","translate","interpolateTransformCss","interpolateTransformSvg","baseVal","consolidate","rho","SQRT2","zoom_cosh","exp","src_zoom","p1","S","ux0","uy0","w0","ux1","uy1","w1","d2","d1","b0","b1","r0","r1","coshr0","u","tanh","zoom_sinh","hsl_hsl","hue","src_hsl","hslLong","lab_lab","hcl_hcl","src_hcl","hclLong","src_cubehelix_cubehelix","cubehelixGamma","cubehelix","src_cubehelix","cubehelixLong","piecewise_piecewise","interpolate","I","taskHead","taskTail","quantize","interpolator","samples","timer_frame","timeout","timer_interval","pokeDelay","clockLast","clockNow","clockSkew","clock","performance","setFrame","requestAnimationFrame","clearNow","Timer","_call","_time","timer","delay","time","restart","timerFlush","wake","t0","sleep","nap","poke","clearInterval","setInterval","TypeError","src_timeout","elapsed","src_interval","total","emptyOn","emptyTween","CREATED","SCHEDULED","STARTING","STARTED","RUNNING","ENDING","ENDED","transition_schedule","timing","schedules","__transition","self","tween","state","ease","schedule_create","schedule_init","schedule","schedule_get","schedule_set","interrupt","tweenValue","_id","transition_interpolate","selection_Selection","transition_id","Transition","_name","src_transition_transition","newId","selection_prototype","linear_linear","quadIn","quadOut","quadInOut","cubicIn","cubicOut","cubicInOut","children","inherit","id0","id1","on0","on1","sit","on_start","onFunction","attrTween","value00","value10","interpolate0","value1","_value","styleTween","style_styleRemove","styleRemoveEnd","style_styleFunction","style_styleConstant","text_textFunction","text_textConstant","removeFunction","tween0","tween1","easeConstant","polyIn","custom","exponent","polyOut","polyInOut","pi","halfPi","sinIn","sinOut","sinInOut","expIn","expOut","expInOut","circleIn","circleOut","circleInOut","bounce_b1","b2","b3","b4","b5","b6","b7","b8","b9","bounce_b0","bounceIn","bounceOut","bounceInOut","backIn","overshoot","backOut","backInOut","tau","elasticIn","asin","amplitude","period","elasticOut","elasticInOut","defaultTiming","transition_inherit","active_root","src_active","d3_brush_src_constant","src_event","noevent_nopropagation","src_noevent","MODE_DRAG","MODE_SPACE","MODE_HANDLE","MODE_CENTER","brush_X","handles","brush_type","output","xy","brush_Y","XY","cursors","overlay","w","nw","ne","se","sw","flipX","flipY","signsX","signsY","brush_defaultFilter","defaultExtent","brush_local","__brush","brush_empty","extent","brushSelection","dim","brushX","brush_brush","brushY","brush","handleSize","initialize","handle","started","emitter","Emitter","e0","e1","s0","s1","moving","lockX","lockY","metaKey","altKey","signX","signY","W","N","E","shifting","shiftKey","point0","emit","moved","ended","keyCode","move","point1","selection0","selection1","starting","math_pi","math_halfPi","math_tau","math_max","src_chord","padAngle","sortGroups","sortSubgroups","sortChords","chord","groupSums","groupIndex","subgroupIndex","chords","di","dj","a0","a1","subindex","startAngle","endAngle","compareValue","src_array_slice","d3_chord_src_constant","path_pi","path_tau","tauEpsilon","Path","_x0","_y0","_x1","_y1","path_path","moveTo","closePath","lineTo","quadraticCurveTo","bezierCurveTo","arcTo","y0","x21","y21","x01","y01","l01_2","x20","y20","l21_2","l20_2","l21","l01","acos","t01","t21","arc","ccw","cw","da","src_path","defaultSource","defaultTarget","defaultRadius","defaultStartAngle","defaultEndAngle","src_ribbon","ribbon","buffer","argv","sr","sa0","sa1","sx0","sy0","tr","ta0","ta1","Map","map_map","has","clear","src_map","src_nest","sortValues","rollup","nest","sortKeys","depth","createResult","setResult","valuesByKey","createObject","setObject","createMap","setMap","sortKey","Set","proto","set_set","src_set","src_keys","src_values","src_entries","d3_contour_src_array_slice","src_ascending","src_area","ring","area","d3_contour_src_constant","hole","ringContains","yi","pj","yj","segmentContains","collinear","within","src_noop","cases","src_contours","smooth","smoothLinear","contours","contour","polygons","holes","fragmentByStart","fragmentByEnd","stitch","startIndex","endIndex","unshift","isorings","polygon","coordinates","xt","yt","_0","_1","blurX","blurY","defaultX","defaultY","defaultWeight","src_density","weight","density","Float32Array","wi","geometry","transformPolygon","transformRing","transformPoint","resize","cellSize","EOL","EOF","QUOTE","NEWLINE","RETURN","objectConverter","columns","Function","JSON","stringify","dsv","delimiter","reFormat","DELIMITER","charCodeAt","parseRows","rows","eof","eol","token","replace","formatRow","formatValue","test","convert","customConverter","columnSet","column","inferColumns","formatRows","csv","csvParse","csvParseRows","csvFormat","csvFormatRows","tsv","tsvParse","tsvParseRows","tsvFormat","tsvFormatRows","responseBlob","response","ok","status","statusText","blob","init","fetch","then","responseArrayBuffer","arrayBuffer","src_buffer","responseText","src_text","dsvParse","dsv_dsv","dsv_csv","dsv_tsv","src_image","Promise","resolve","reject","image","Image","onerror","onload","src","responseJson","json","parser","DOMParser","parseFromString","xml_html","src_center","force","sx","sy","d3_force_src_constant","jiggle","add_add","tree","xm","ym","xp","yp","bottom","_root","leaf","_x","_y","src_quad","x_defaultX","y_defaultY","quadtree","Quadtree","addAll","leaf_copy","treeProto","collide_x","vx","collide_y","vy","cover","yz","visit","find","x3","y3","quads","retainer","removeAll","visitAfter","collide","radii","strength","iterations","ri","ri2","prepare","quad","rj","link_index","link_find","nodeById","nodeId","links","strengths","distances","bias","link","alpha","initializeStrength","initializeDistance","simulation_x","simulation_y","initialRadius","initialAngle","src_simulation","simulation","alphaMin","alphaDecay","alphaTarget","velocityDecay","forces","stepper","fx","fy","initializeNodes","angle","initializeForce","closest","distanceMin2","distanceMax2","theta2","accumulate","distanceMin","distanceMax","theta","radial","radiuses","d3_force_src_x","d3_force_src_y","formatDecimal","toExponential","coefficient","src_exponent","re","formatSpecifier","specifier","FormatSpecifier","align","sign","symbol","zero","comma","precision","prefixExponent","defaultLocale_locale","defaultLocale_format","defaultLocale_formatPrefix","formatTrim","out","formatRounded","formatTypes","%","toFixed","toPrecision","X","toUpperCase","d3_format_src_identity","prefixes","src_locale","locale","grouping","thousands","substring","formatGroup","currency","decimal","numerals","formatNumerals","percent","newFormat","suffix","formatType","maybeSuffix","valuePrefix","valueSuffix","valueNegative","formatPrefix","defaultLocale","precisionFixed","precisionPrefix","precisionRound","adder","Adder","reset","adder_add","temp","bv","av","math_epsilon","src_math_pi","src_math_halfPi","quarterPi","src_math_tau","math_degrees","radians","math_cos","math_sin","math_sign","haversin","noop_noop","streamGeometry","stream","streamGeometryType","streamObjectType","Feature","FeatureCollection","features","Sphere","sphere","Point","MultiPoint","LineString","streamLine","MultiLineString","Polygon","streamPolygon","MultiPolygon","GeometryCollection","geometries","closed","coordinate","lineStart","lineEnd","polygonStart","polygonEnd","area_lambda00","phi00","area_lambda0","area_cosPhi0","area_sinPhi0","src_stream","areaRingSum","areaSum","areaStream","areaRingStart","areaRingEnd","areaRing","areaPointFirst","areaPoint","lambda","phi","dLambda","sdLambda","adLambda","cosPhi","sinPhi","d3_geo_src_area","cartesian_spherical","cartesian","cartesian_cartesian","spherical","cartesianDot","cartesianCross","cartesianAddInPlace","cartesianScale","vector","cartesianNormalizeInPlace","bounds_lambda0","bounds_phi0","bounds_lambda1","bounds_phi1","bounds_lambda2","bounds_lambda00","bounds_phi00","bounds_p0","ranges","bounds_range","deltaSum","boundsStream","boundsPoint","boundsLineStart","boundsLineEnd","boundsRingPoint","boundsRingStart","boundsRingEnd","bounds_linePoint","normal","inflection","phii","lambdai","antimeridian","bounds_angle","lambda0","lambda1","rangeCompare","rangeContains","W0","W1","centroid_X0","centroid_Y0","Z0","centroid_X1","centroid_Y1","Z1","X2","Y2","Z2","centroid_lambda00","centroid_phi00","centroid_x0","centroid_y0","z0","bounds","feature","deltaMax","centroidStream","centroidPoint","centroidLineStart","centroidLineEnd","centroidRingStart","centroidRingEnd","centroidPointCartesian","centroidLinePointFirst","centroidLinePoint","centroidRingPointFirst","centroidRingPoint","cz","d3_geo_src_constant","compose","rotationIdentity","rotateRadians","deltaLambda","deltaPhi","deltaGamma","rotationLambda","rotationPhiGamma","forwardRotationLambda","rotation","cosDeltaPhi","sinDeltaPhi","cosDeltaGamma","sinDeltaGamma","src_rotation","forward","circleStream","direction","cosRadius","sinRadius","src_circle","center","clip_buffer","rejoin","pointEqual","Intersection","other","entry","segments","compareIntersection","startInside","clip","segment","rejoin_link","isSubject","polygonContains_sum","polygonContains","winding","phi0","sinPhi0","cosPhi0","sinPhi1","cosPhi1","phi1","absDelta","intersection","phiArc","src_clip","pointVisible","clipLine","sink","ringBuffer","ringSink","polygonStarted","pointRing","ringStart","ringEnd","clip_compareIntersection","pointLine","clean","ringSegments","validSegment","sign0","sign1","sinLambda0Lambda1","clipAntimeridianIntersect","to","clip_circle","cr","smallRadius","notHemisphere","visible","intersect","two","n2","n2n2","n1n2","determinant","c1","c2","n1xn2","uu","polar","q1","code","c0","v00","point2","clip_line","ax","ay","clipMax","clipMin","clipRectangle","corner","comparePoint","ca","cb","x__","y__","v__","x_","y_","v_","first","activeStream","bufferStream","clipStream","linePoint","polygonInside","cleanInside","length_lambda0","length_sinPhi0","length_cosPhi0","clip_extent","cache","cacheStream","lengthSum","lengthStream","lengthPointFirst","lengthLineEnd","lengthPoint","cosDelta","src_length","distance_coordinates","distance_object","src_distance","containsObjectType","containsGeometry","containsGeometryType","containsPoint","containsLine","containsPolygon","ab","ringRadians","pointRadians","src_contains","graticuleX","graticuleY","graticule_graticule","X1","X0","Y1","Y0","Y","DX","DY","graticule","outline","extentMajor","extentMinor","stepMajor","stepMinor","graticule10","area_x00","area_y00","area_x0","area_y0","src_interpolate","cy0","cy1","sy1","kx0","ky0","kx1","ky1","d3_geo_src_identity","area_areaSum","area_areaRingSum","area_areaStream","area_areaRingStart","area_areaRingEnd","area_areaPointFirst","area_areaPoint","path_area","bounds_x0","bounds_y0","bounds_x1","bounds_y1","centroid_x00","centroid_y00","path_centroid_x0","path_centroid_y0","path_bounds","path_centroid_X0","path_centroid_Y0","centroid_Z0","path_centroid_X1","path_centroid_Y1","centroid_Z1","centroid_X2","centroid_Y2","centroid_Z2","centroid_centroidStream","centroid_centroidPoint","centroid_centroidLineStart","centroid_centroidLineEnd","centroid_centroidRingStart","centroid_centroidRingEnd","centroid","centroidPointFirstLine","centroidPointLine","centroidPointFirstRing","centroidPointRing","path_centroid","PathContext","_context","_radius","pointRadius","_line","_point","lengthRing","measure_x00","measure_y00","measure_x0","measure_y0","measure_lengthSum","measure_lengthStream","measure_lengthPointFirst","measure_lengthPoint","measure","PathString","_string","string_circle","projection","projectionStream","contextStream","src_transform","methods","transformer","TransformStream","fit","fitBounds","clipExtent","fitExtent","fitSize","fitWidth","fitHeight","maxDepth","cosMinDistance","resample","project","delta2","resampleLineTo","phi2","lambda2","dx2","dy2","dz","lambda00","x00","y00","a00","b00","c00","resampleStream","ringPoint","resample_resample","resampleNone","transformRadians","scaleTranslateRotate","cosAlpha","sinAlpha","ai","ci","fi","projection_projection","projectionMutator","projectAt","projectResample","projectTransform","projectRotateTransform","preclip","clip_antimeridian","postclip","recenter","transformRotate","clipAngle","conicProjection","parallels","conicEqualAreaRaw","cylindricalEqualAreaRaw","r0y","conicEqualArea","albers","projection_albersUsa","lower48Point","alaskaPoint","hawaiiPoint","lower48","alaska","hawaii","pointStream","albersUsa","streams","multiplex","azimuthalRaw","azimuthalInvert","sc","cc","azimuthalEqualAreaRaw","cxcy","azimuthalEqualArea","azimuthalEquidistantRaw","azimuthalEquidistant","mercatorRaw","mercator","mercatorProjection","reclip","tany","conicConformalRaw","conicConformal","equirectangularRaw","equirectangular","conicEquidistantRaw","gy","nx","conicEquidistant","gnomonicRaw","gnomonic","identity_scaleTranslate","kx","ky","tx","ty","projection_identity","reflectX","reflectY","naturalEarth1Raw","phi4","naturalEarth1","orthographicRaw","orthographic","stereographicRaw","stereographic","transverseMercatorRaw","transverseMercator","defaultSeparation","meanXReduce","maxYReduce","cluster","separation","nodeSize","previousNode","eachAfter","maxY","leafLeft","leafRight","count_count","hierarchy","childs","Node","valued","defaultChildren","eachBefore","computeHeight","copyData","ancestor","aNodes","ancestors","bNodes","leastCommonAncestor","descendants","leaves","d3_hierarchy_src_array_slice","enclose","array_shuffle","enclosesWeak","encloseBasis","extendBasis","enclosesWeakAll","enclosesNot","encloseBasis2","encloseBasis3","dr","encloseBasis1","r2","r21","r3","a2","a3","c3","place","intersects","score","siblings_Node","packEnclose","aa","sj","sk","pack","siblings","required","constantZero","d3_hierarchy_src_constant","pack_defaultRadius","src_pack","radiusLeaf","packChildren","translateChild","optional","treemap_round","dice","src_partition","partition","positionNode","stratify_keyPrefix","preroot","ambiguous","defaultId","defaultParentId","parentId","stratify","nodeKey","nodeByKey","tree_defaultSeparation","nextLeft","nextRight","moveSubtree","wm","wp","change","nextAncestor","vim","TreeNode","src_tree","treeRoot","firstWalk","secondWalk","sizeNode","executeShifts","midpoint","vip","vop","vom","sip","sop","sim","som","apportion","treemap_slice","squarify_phi","squarifyRatio","ratio","nodeValue","sumValue","minValue","maxValue","newRatio","minRatio","beta","squarify","src_treemap","tile","paddingStack","paddingInner","paddingTop","paddingRight","paddingBottom","paddingLeft","treemap","paddingOuter","binary","sums","valueOffset","valueTarget","valueLeft","valueRight","xk","yk","sliceDice","treemap_resquarify","resquarify","_squarify","d3_polygon_src_area","d3_polygon_src_centroid","src_cross","lexicographicOrder","computeUpperHullIndexes","hull","sortedPoints","flippedPoints","upperIndexes","lowerIndexes","skipLeft","skipRight","d3_polygon_src_contains","inside","d3_polygon_src_length","perimeter","src_defaultSource","uniform","sourceRandomUniform","randomUniform","src_normal","sourceRandomNormal","randomNormal","mu","sigma","logNormal","sourceRandomLogNormal","randomLogNormal","irwinHall","sourceRandomIrwinHall","randomIrwinHall","bates","sourceRandomBates","randomBates","src_exponential","sourceRandomExponential","randomExponential","d3_scale_src_array_array","array_map","d3_scale_src_array_slice","implicit","ordinal","unknown","band","ordinalRange","rescale","rangeRound","band_point","pointish","d3_scale_src_constant","d3_scale_src_number","unit","deinterpolateLinear","bimap","deinterpolate","reinterpolate","d0","polymap","clamp","continuous","piecewise","deinterpolateClamp","reinterpolateClamp","src_tickFormat","linearish","nice","src_linear_linear","identity_identity","interval","log_deinterpolate","log_reinterpolate","pow10","powp","base","logp","log10","log2","reflect","log_log","logs","pows","pow_raise","pow_pow","pow_sqrt","quantile_quantile","invertExtent","quantiles","quantize_quantize","threshold_threshold","interval_t0","interval_t1","newInterval","floori","offseti","field","date","millisecond_millisecond","src_millisecond","milliseconds","durationMinute","durationWeek","second_second","getUTCSeconds","seconds","minute_minute","getMinutes","minutes","hour_hour","getTimezoneOffset","getHours","src_hour","hours","day_day","setHours","setDate","getDate","src_day","days","weekday","getDay","sunday","monday","tuesday","wednesday","thursday","friday","saturday","sundays","mondays","tuesdays","wednesdays","thursdays","fridays","saturdays","month_month","setMonth","getMonth","getFullYear","src_month","months","year_year","setFullYear","src_year","years","utcMinute","setUTCSeconds","getUTCMinutes","src_utcMinute","utcMinutes","utcHour","setUTCMinutes","getUTCHours","src_utcHour","utcHours","utcDay","setUTCHours","setUTCDate","getUTCDate","utcDays","utcWeekday","getUTCDay","utcSunday","utcMonday","utcTuesday","utcWednesday","utcThursday","utcFriday","utcSaturday","utcSundays","utcMondays","utcTuesdays","utcWednesdays","utcThursdays","utcFridays","utcSaturdays","utcMonth","setUTCMonth","getUTCMonth","getUTCFullYear","src_utcMonth","utcMonths","utcYear","setUTCFullYear","src_utcYear","utcYears","localDate","H","M","L","utcDate","UTC","newYear","formatLocale","locale_dateTime","dateTime","locale_date","locale_time","locale_periods","periods","locale_weekdays","locale_shortWeekdays","shortDays","locale_months","locale_shortMonths","shortMonths","periodRe","formatRe","periodLookup","formatLookup","weekdayRe","weekdayLookup","shortWeekdayRe","shortWeekdayLookup","monthRe","monthLookup","shortMonthRe","shortMonthLookup","formats","formatDayOfMonth","formatMicroseconds","formatHour24","formatHour12","formatDayOfYear","formatMilliseconds","formatMonthNumber","formatMinutes","Q","formatUnixTimestamp","formatUnixTimestampSeconds","formatSeconds","formatWeekdayNumberMonday","U","formatWeekNumberSunday","V","formatWeekNumberISO","formatWeekdayNumberSunday","formatWeekNumberMonday","locale_formatYear","formatFullYear","Z","formatZone","formatLiteralPercent","utcFormats","formatUTCDayOfMonth","formatUTCMicroseconds","formatUTCHour24","formatUTCHour12","formatUTCDayOfYear","formatUTCMilliseconds","formatUTCMonthNumber","formatUTCMinutes","formatUTCSeconds","formatUTCWeekdayNumberMonday","formatUTCWeekNumberSunday","formatUTCWeekNumberISO","formatUTCWeekdayNumberSunday","formatUTCWeekNumberMonday","formatUTCYear","formatUTCFullYear","formatUTCZone","parses","parseSpecifier","parseDayOfMonth","parseMicroseconds","parseHour24","parseDayOfYear","parseMilliseconds","parseMonthNumber","parseMinutes","parseUnixTimestamp","parseUnixTimestampSeconds","parseSeconds","parseWeekdayNumberMonday","parseWeekNumberSunday","parseWeekNumberISO","parseWeekdayNumberSunday","parseWeekNumberMonday","parseYear","parseFullYear","parseZone","parseLiteralPercent","pad","pads","charAt","newParse","newDate","week","day","src_utcDay","utcFormat","utcParse","src_defaultLocale_locale","timeFormat","timeParse","-","0","numberRe","percentRe","requoteRe","requote","getMilliseconds","getSeconds","getUTCMilliseconds","dow","defaultLocale_defaultLocale","isoFormat","toISOString","isoParse","time_durationSecond","time_durationMinute","time_durationHour","time_durationDay","time_durationWeek","durationMonth","durationYear","time_date","time_number","calendar","year","month","hour","minute","second","millisecond","formatMillisecond","formatSecond","formatMinute","formatHour","formatDay","formatWeek","formatMonth","formatYear","tickIntervals","tickInterval","src_time","src_minute","src_second","utcTime","sequential","k10","diverging","k21","src_colors","category10","Accent","Dark2","Paired","Pastel1","Pastel2","Set1","Set2","Set3","ramp","scheme","BrBG_scheme","BrBG","PRGn_scheme","PRGn","PiYG_scheme","PiYG","PuOr_scheme","PuOr","RdBu_scheme","RdBu","RdGy_scheme","RdGy","RdYlBu_scheme","RdYlBu","RdYlGn_scheme","RdYlGn","Spectral_scheme","Spectral","BuGn_scheme","BuGn","BuPu_scheme","BuPu","GnBu_scheme","GnBu","OrRd_scheme","OrRd","PuBuGn_scheme","PuBuGn","PuBu_scheme","PuBu","PuRd_scheme","PuRd","RdPu_scheme","RdPu","YlGnBu_scheme","YlGnBu","YlGn_scheme","YlGn","YlOrBr_scheme","YlOrBr","YlOrRd_scheme","YlOrRd","Blues_scheme","Blues","Greens_scheme","Greens","Greys_scheme","Greys","Purples_scheme","Purples","Reds_scheme","Reds","Oranges_scheme","Oranges","sequential_multi_cubehelix","warm","cool","rainbow_c","rainbow","ts","sinebow_c","pi_1_3","pi_2_3","sinebow","viridis_ramp","magma","inferno","plasma","d3_shape_src_constant","math_abs","math_atan2","src_math_cos","src_math_max","math_min","src_math_sin","math_sqrt","src_math_epsilon","d3_shape_src_math_pi","d3_shape_src_math_halfPi","d3_shape_src_math_tau","math_asin","arcInnerRadius","innerRadius","arcOuterRadius","outerRadius","arcStartAngle","arcEndAngle","arcPadAngle","cornerTangents","rc","ox","oy","x11","y11","x10","y10","D","cx0","cx1","dx0","dy0","dx1","dy1","src_arc","cornerRadius","padRadius","a01","a11","a10","da0","da1","ap","rp","rc0","rc1","oc","x32","y32","arc_intersect","bx","by","kc","math_acos","lc","Linear","areaStart","areaEnd","curve_linear","point_x","point_y","defined","curve","defined0","d3_shape_src_area","x0z","y0z","arealine","src_line","lineX0","lineY0","lineY1","lineX1","src_descending","d3_shape_src_identity","src_pie","pie","arcs","pa","curveRadialLinear","curveRadial","Radial","_curve","lineRadial","src_lineRadial","lineStartAngle","lineEndAngle","lineInnerRadius","lineOuterRadius","pointRadial","d3_shape_src_array_slice","linkSource","linkTarget","link_link","curveHorizontal","curveVertical","link_curveRadial","p2","p3","linkHorizontal","linkVertical","linkRadial","symbol_circle","draw","symbol_cross","tan30","tan30_2","diamond","kr","star_kx","star_ky","star","square","sqrt3","triangle","wye_s","wye_k","wye_a","wye","symbols","src_symbol","d3_shape_src_noop","basis_point","Basis","curve_basis","BasisClosed","_x2","_x3","_x4","_y2","_y3","_y4","curve_basisClosed","BasisOpen","basisOpen","Bundle","_basis","_beta","curve_bundle","bundle","cardinal_point","_k","Cardinal","tension","cardinal","CardinalClosed","_x5","_y5","cardinalClosed","CardinalOpen","cardinalOpen","catmullRom_point","_l01_a","_l01_2a","_l12_a","_l12_2a","_l23_a","_l23_2a","CatmullRom","_alpha","x23","y23","curve_catmullRom","catmullRom","CatmullRomClosed","catmullRomClosed","CatmullRomOpen","catmullRomOpen","LinearClosed","linearClosed","monotone_sign","slope3","h0","h1","slope2","monotone_point","MonotoneX","MonotoneY","ReflectContext","monotoneX","monotoneY","Natural","controlPoints","_t0","px","py","natural","Step","_t","curve_step","stepBefore","stepAfter","offset_none","series","order_none","stackValue","src_stack","stack","oz","kz","sz","sij","ki","si","expand","offset_diverging","yn","silhouette","wiggle","s2","sij0","s3","order_ascending","ascending_sum","order_descending","insideOut","tops","bottoms","order_reverse","d3_voronoi_src_constant","src_point_x","src_point_y","RedBlackTree","RedBlackNode","R","P","RedBlackRotateLeft","RedBlackRotateRight","RedBlackFirst","after","grandpa","uncle","sibling","src_RedBlackTree","createEdge","edge","Diagram_edges","setEdgeEnd","cells","halfedges","createBorderEdge","vertex","clipEdge","connectEdge","fm","fb","lx","ly","rx","ry","cellHalfedgeAngle","cell","site","va","vb","cellHalfedgeStart","cellHalfedgeEnd","firstCircle","circlePool","attachCircle","lArc","rArc","lSite","cSite","rSite","Diagram_epsilon2","ha","hc","Diagram_circles","detachCircle","beachPool","createBeach","beach","detachBeach","beaches","removeBeach","disappearing","Diagram_epsilon","iArc","nArcs","addBeach","dxl","dxr","directrix","leftBreakPoint","rightBreakPoint","createCell","newArc","hb","rfocx","rfocy","pby2","lfocx","lfocy","plby2","hl","aby2","triangleArea","lexicographic","Diagram","sites","sortCellHalfedges","clipEdges","iCell","iHalfedge","nHalfedges","startX","startY","endX","endY","nCells","dc","v01","v11","v10","clipCells","edges","triangles","_found","src_voronoi","voronoi","d3_zoom_src_constant","Transform","applyX","applyY","location","invertX","invertY","rescaleX","rescaleY","transform_identity","transform_transform","__zoom","src_noevent_nopropagation","d3_zoom_src_noevent","zoom_defaultFilter","zoom_defaultExtent","SVGElement","clientWidth","clientHeight","defaultTransform","defaultWheelDelta","deltaY","deltaMode","zoom_defaultTouchable","defaultConstrain","translateExtent","d3_zoom_src_zoom","touchstarting","constrain","wheelDelta","scaleExtent","touchDelay","wheelDelay","zoom","wheeled","dblclicked","Gesture","wheel","k1","touch0","touch1","l0","l1","dp","dl","collection","scaleBy","scaleTo","translateBy","translateTo"],"mappings":"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","file":"d3ml.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"d3ml\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"d3ml\"] = factory();\n\telse\n\t\troot[\"d3ml\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 5);\n","const defaultOptions = {\n  rootNode: 'body',\n  width: 500,\n  height: 300,\n  padding: 50,\n  backgroundColor: '#1d1e22',\n  circleRadius: 5,\n  circleFill: 'grey',\n  circleStroke: 'white'\n};\nconst defaultType = 'None';\n\nconst defaultTypes = {\n  A: 'A',\n  B: 'B',\n  None: 'None'\n};\n\nconst defaultK = 3;\n\nconst defaultClassSelectors = {\n  remove: 'remove',\n  d3ml: 'd3ml',\n  settings: 'd3ml__settings',\n  settingsGroup: 'd3ml__settings__group'\n};\n\nexport default {\n  defaultOptions,\n  defaultType,\n  defaultTypes,\n  defaultK,\n  defaultClassSelectors\n};\n","import * as d3 from 'd3';\nimport Circle from './circle';\nimport { defaultOptions, defaultType, defaultClassSelectors } from './defaults';\nimport { isValidOptions, isValidTypes, isValidData } from '../validation/validator';\nimport Painter from './painter';\nimport HTMLElementCreator from './html-element-creator';\n\nexport default class Visualization {\n  constructor(data, options, types = [defaultType]) {\n    this.initializeOptions(options);\n    this.initializeTypes(types);\n    this.initializeTypeColorMap(this.types);\n    this.initializeScales(data, this.options);\n    this.initializeData(data, types);\n\n    this.createVisualization();\n    this.clickable = true;\n  }\n  initializeOptions(options) {\n    if (!isValidOptions(options)) {\n      options = {};\n    }\n    this.options = Object.assign({}, defaultOptions, options);\n  }\n  initializeTypes(types) {\n    if (!isValidTypes(types)) {\n      types = [];\n    }\n    this.types = types;\n  }\n  initializeTypeColorMap(types) {\n    this.typeColorMap = this.mapTypesToColors(types);\n  }\n  initializeScales(data, options) {\n    this.xScale = d3.scaleLinear()\n      .domain([\n        d3.min(data, function (d) { return d.x; }) - options.padding,\n        d3.max(data, function (d) { return d.x; }) + options.padding\n      ])\n      .range([0, options.width]);\n\n    this.yScale = d3.scaleLinear()\n      .domain([\n        d3.min(data, function (d) { return d.y; }) - options.padding,\n        d3.max(data, function (d) { return d.y; }) + options.padding\n      ])\n      .range([options.height, 0]);\n  }\n  initializeData(data, types) {\n    if (!isValidData(data, types)) {\n      this.data = [];\n    } else {\n      this.data = data.map(d => this.mapDataToCircle(d));\n    }\n  }\n  createVisualization() {\n    this.containerId = defaultClassSelectors.d3ml + Date.now();\n    this.appendWrapperContainer();\n    this.appendSVG();\n  }\n  appendWrapperContainer() {\n    const container = HTMLElementCreator.createElement(\n      'div',\n      [['class', defaultClassSelectors.d3ml], ['id', this.containerId]]\n    );\n    const rootNode = document.querySelector(this.options.rootNode);\n    rootNode.appendChild(container);\n  }\n  appendSVG() {\n    this.svg = d3.select(`#${this.containerId}`)\n      .append('svg')\n      .attr('width', this.options.width)\n      .attr('height', this.options.height)\n      .style('background-color', this.options.backgroundColor);\n  }\n  mapTypesToColors(types) {\n    const colorScale = d3.scaleOrdinal(d3.schemeSet1);\n\n    const colorMap = types.reduce((map, type) => {\n      map[type] = colorScale(type);\n\n      return map;\n    }, {});\n    colorMap[defaultType] = colorScale(defaultType);\n\n    return colorMap;\n  }\n  getFillColor(data) {\n    return !!data && data.type && this.typeColorMap.hasOwnProperty(data.type) ?\n      this.typeColorMap[data.type] : this.options.circleFill;\n  }\n  mapDataToCircle(data) {\n    const fillColor = this.getFillColor(data);\n\n    return new Circle(\n      this.xScale(data.x),\n      this.yScale(data.y),\n      this.options.circleRadius,\n      fillColor,\n      this.options.circleStroke,\n      data.type);\n  }\n  onClickSvg(callbacks) {\n    document.querySelector(`#${this.containerId} svg`).addEventListener('click', (e) => {\n      this.clickCallback(e, callbacks);\n    });\n  }\n  clickCallback(e, callbacks) {\n    if (!!e.target && this.clickable) {\n      const newCircle = this.mapDataToCircle({x: this.xScale.invert(e.offsetX), y: this.yScale.invert(e.offsetY)});\n      callbacks.forEach(callback => {\n        callback.call(this, newCircle);\n      });\n    }\n  }\n  onChangeInput(inputId, inputType, callbacks) {\n    document.querySelector(`#${inputId}`).addEventListener('change', (e) => {\n      this.inputChangeCallback(e, inputType, callbacks);\n    });\n  }\n  inputChangeCallback(e, inputType, callbacks) {\n    if (e.target) {\n      const value = inputType === 'checkbox' ? e.target.checked : e.target.value;\n      callbacks.forEach(callback => {\n        callback.call(this, value);\n      });\n    }\n  }\n  createElement(elementName, attributes = []) {\n    return HTMLElementCreator.createElement(elementName, attributes);\n  }\n  createSettingsGroup(childElements) {\n    return HTMLElementCreator.createSettingsGroup(childElements);\n  }\n  createLabeledInput(labelText, labelAttributes, displayedValue, inputAttributes) {\n    const span = HTMLElementCreator.createElement('span');\n    span.innerHTML = displayedValue;\n\n    const label = HTMLElementCreator.createElement('label', labelAttributes);\n    label.textContent = labelText;\n\n    const input = HTMLElementCreator.createElement('input', inputAttributes);\n    label.appendChild(span);\n\n    return {label, input};\n  }\n  addCircle(circle) {\n    this.data.push(circle);\n  }\n  draw() {\n    Painter.drawCircles(this.svg, this.data);\n  }\n\n}\n","export default class Painter {\n  static drawLines(svg, lines) {\n    svg.selectAll('line').data(lines)\n      .enter().append('line')\n      .style('stroke', function (d) { return d.stroke; })\n      .attr('stroke-width', function (d) { return d.strokeWidth; })\n      .attr('x1', function (d) { return d.x1; })\n      .attr('y1', function (d) { return d.y1; })\n      .attr('x2', function (d) { return d.x2; })\n      .attr('y2', function (d) { return d.y2; })\n      .attr('class', function (d) { return d.cssClass; });\n  }\n  static transitionLine(svg, line, transitionDuration) {\n    svg.select('line')\n      .transition()\n      .duration(transitionDuration)\n      .attr('x1', line.x1)\n      .attr('y1', line.y1)\n      .attr('x2', line.x2)\n      .attr('y2', line.y2);\n  }\n  static transitionLines(svg, lines, transitionDuration) {\n    svg.selectAll('line')\n      .data(lines)\n      .transition()\n      .duration(transitionDuration)\n      .attr('x1', function (d) { return d.x1; })\n      .attr('y1', function (d) { return d.y1; })\n      .attr('x2', function (d) { return d.x2; })\n      .attr('y2', function (d) { return d.y2; });\n  }\n  static drawCircles(svg, circles) {\n    svg.selectAll('circle')\n      .data(circles)\n      .enter().append('circle')\n      .style('stroke', function (d) { return d.stroke; })\n      .style('fill', function (d) { return d.fill; })\n      .attr('r', function (d) { return d.radius; })\n      .attr('cx', function (d) { return d.cx; })\n      .attr('cy', function (d) { return d.cy; })\n      .attr('class', function (d) { return d.cssClass; });\n  }\n}\n","import { defaultType, defaultOptions } from './defaults';\n\nexport default class Circle {\n  constructor(cx,\n              cy,\n              radius = defaultOptions.circleRadius,\n              fill = defaultOptions.circleFill,\n              stroke = defaultOptions.circleStroke,\n              type = defaultType\n  ) {\n    this.cx = cx;\n    this.cy = cy;\n    this.radius = radius;\n    this.fill = fill;\n    this.stroke = stroke;\n    this.type = type;\n    this.distance = null;\n    this.cssClass = '';\n  }\n  setType(type) {\n    this.type = type;\n  }\n  setDistance(distance) {\n    this.distance = distance;\n  }\n  setCssClass(value) {\n    this.cssClass = value;\n  }\n}\n","import {defaultClassSelectors} from './defaults';\n\nexport default class HTMLElementCreator {\n  static createElement(elementName, attributes = []) {\n    const el = document.createElement(elementName);\n    if (attributes !== null) {\n      attributes.forEach(attr => {\n        el.setAttribute(attr[0], attr[1]);\n      });\n    }\n\n    return el;\n  }\n  static createSettingsGroup(childElements = []) {\n    const settingsGroup = HTMLElementCreator.createElement('div', [['class', defaultClassSelectors.settingsGroup]]);\n    if (childElements !== null) {\n      childElements.forEach(child => {\n        settingsGroup.append(child);\n      });\n    }\n\n    return settingsGroup;\n  }\n  static createLabeledInput(labelText, labelAttributes, inputAttributes) {\n    const div = HTMLElementCreator.createElement('div');\n\n    const label = HTMLElementCreator.createElement('label', labelAttributes);\n    label.textContent = labelText;\n\n    const input = HTMLElementCreator.createElement('input', inputAttributes);\n\n    div.appendChild(label);\n    div.appendChild(input);\n\n    return div;\n  }\n  static createLabeledValue(label, value) {\n    const labeledValue = HTMLElementCreator.createElement('span');\n    labeledValue.innerHTML = `${label}: ${value}`;\n\n    return labeledValue;\n  }\n}\n","import Visualization from './visualization/visualization';\nimport KNNVisualization from './visualization/knn-visualization';\nimport LinearRegressionVisualization from './visualization/linear-regression-visualization';\n\nexport {\n  Visualization,\n  KNNVisualization,\n  LinearRegressionVisualization\n};\n","import {defaultOptions} from '../visualization/defaults';\n\nexport default class Validator {\n  static isValidOptions(options) {\n    let result = false;\n    if (!!options &&\n      typeof options === 'object' &&\n      !Array.isArray(options) &&\n      Object.keys(options).every(val => Object.keys(defaultOptions).includes(val))\n    ) {\n      result = true;\n    }\n\n    return result;\n  }\n  static isValidData(data, types) {\n    let result = false;\n    if (!!data && Array.isArray(data) && data.length > 0) {\n      result = data.every(d => {\n        if (!d) {\n          return false;\n        }\n        let keys = ['x', 'y'];\n        let hasType = false;\n        if (!!types && Array.isArray(types) && types.length > 0) {\n          keys.push('type');\n          hasType = true;\n        }\n        const validTypes = hasType ? Object.keys(d).includes('type') : !Object.keys(d).includes('type');\n        const validKeys = keys.every(key => Object.keys(d).includes(key));\n        const validValues = keys.every(key => {\n          let res;\n          const val = d[key];\n          if (key === 'x' || key === 'y') {\n            res = val !== undefined && val !== null && typeof val === 'number' && val !== Infinity && val !== -Infinity;\n          } else if (key === 'type') {\n            res = !!val && types.includes(val);\n          }\n\n          return res;\n        });\n\n        return validKeys && validValues && validTypes;\n      });\n    }\n\n    return result;\n  }\n  static isValidTypes(types) {\n    let result = false;\n    if (!!types && Array.isArray(types) && types.every(t => typeof t === 'number' || typeof t === 'string')) {\n      result = true;\n    }\n\n    return result;\n  }\n  static isValidK(k) {\n    let result = false;\n    if (!!k && Number.isInteger(k) && k > 0) {\n      result = true;\n    }\n\n    return result;\n  }\n}\n","import Circle from './circle';\nimport {defaultK, defaultType, defaultClassSelectors} from './defaults';\nimport Visualization from './visualization';\nimport KNN from '../algorithms/knn';\nimport Painter from './painter';\nimport HTMLElementCreator from './html-element-creator';\n\nconst selectors = {\n  id: {\n    rangeK: 'range-k',\n    rangeKLabel: 'range-k-label',\n    weightedCheckbox: 'weighted',\n    weightedLabel: 'weighted-label'\n  }\n};\n\nexport default class KNNVisualization extends Visualization {\n  constructor(data, options, types, k = defaultK) {\n    super(data, options, types);\n    this.knn = new KNN(this.data, types, k);\n\n    this.appendSettings();\n    this.addEventListeners();\n  }\n  appendSettings() {\n    document.querySelector(`#${this.containerId}`).appendChild(this.createSettings());\n  }\n  createSettings() {\n    const settings = HTMLElementCreator.createElement('div', [['class', defaultClassSelectors.settings]]);\n    settings.appendChild(this.createSettingsGroupForK());\n    settings.appendChild(this.createSettingsGroupForWeighted());\n\n    return settings;\n  }\n  createSettingsGroupForK() {\n    const labelText = 'Amount of neighbors, k: ';\n    const labelAttributes = [\n      ['for', selectors.id.rangeK],\n      ['id', selectors.id.rangeKLabel]\n    ];\n    const inputAttributes = [\n      ['id', selectors.id.rangeK],\n      ['type', 'range'],\n      ['min', '1'],\n      ['max', this.data.length],\n      ['value', this.knn.k]\n    ];\n    const { label, input } = this.createLabeledInput(labelText, labelAttributes, this.knn.k, inputAttributes);\n\n    return this.createSettingsGroup([label, input]);\n  }\n  createSettingsGroupForWeighted() {\n    const labelText = 'Use weighted algorithm: ';\n    const labelAttributes = [\n      ['for', selectors.id.weightedCheckbox],\n      ['id', selectors.id.weightedLabel]\n    ];\n    const inputAttributes = [\n      ['id', selectors.id.weightedCheckbox],\n      ['type', 'checkbox']\n    ];\n    const { label, input } = this.createLabeledInput(labelText, labelAttributes, '', inputAttributes);\n\n    return this.createSettingsGroup([label, input]);\n  }\n  addEventListeners() {\n    this.onClickSvg([this.svgClickCallback]);\n    this.onChangeInput(selectors.id.rangeK, 'range', [this.inputRangeKChangeCallback]);\n    this.onChangeInput(selectors.id.weightedCheckbox, 'checkbox', [this.checkboxWeightedChangeCallback]);\n  }\n  svgClickCallback(circle) {\n    this.clickable = false;\n\n    const classifiedCircle = this.getClassifiedCircle(circle);\n    this.addCircle(classifiedCircle);\n    const boundingCircle = this.getBoundingCircle(classifiedCircle);\n    this.addCircle(boundingCircle);\n\n    this.drawCircles();\n    this.drawConnectingLines(this.mapClosestNeighborsToConnectingLines(classifiedCircle));\n\n    this.data = this.data.filter(c => c !== boundingCircle);\n    this.removeElementsAfterTransition(`.${defaultClassSelectors.remove}`);\n\n    this.updateIndexRangeKMaximum(this.data.length);\n  }\n  updateIndexRangeKMaximum(max) {\n    document.querySelector(`#${selectors.id.rangeK}`).setAttribute('max', max);\n  }\n  inputRangeKChangeCallback(k) {\n    this.k = k;\n    this.knn.k = k;\n    document.querySelector(`#${selectors.id.rangeKLabel} > span`).innerHTML = k;\n  }\n  checkboxWeightedChangeCallback(checked) {\n    this.knn.weighted = checked;\n  }\n  getClassifiedCircle(circle) {\n    const circleType = this.knn.classify(circle, this.data);\n    circle.setType(circleType);\n\n    return circle;\n  }\n  getBoundingCircle(circle) {\n    const furthestNeighbor = this.knn.kClosestNeighbors[this.knn.k - 1];\n    const radius = furthestNeighbor.distance + this.options.circleRadius;\n    const boundingCircle = new Circle(circle.cx, circle.cy, radius, 'transparent', 'white');\n    boundingCircle.setCssClass(defaultClassSelectors.remove);\n\n    return boundingCircle;\n  }\n  mapClosestNeighborsToConnectingLines(circle) {\n    return this.knn.kClosestNeighbors.map(n => {\n      return {\n        x1: n.cx,\n        x2: circle.cx,\n        y1: n.cy,\n        y2: circle.cy,\n        strokeWidth: 2,\n        stroke: 'rgba(230,230,230,0.5)',\n        cssClass: defaultClassSelectors.remove\n      };\n    });\n  }\n  drawConnectingLines(connectingLines) {\n    Painter.drawLines(this.svg, connectingLines);\n  }\n  drawCircles() {\n    Painter.drawCircles(this.svg, this.data);\n    const colorMap = this.typeColorMap;\n    this.svg.selectAll('circle')\n      .transition().duration(1500)\n      .style('fill', function (d) {\n        const typeColor = colorMap[d.type];\n\n        return d.type === defaultType || d.fill === typeColor ? d.fill : typeColor;\n      });\n  }\n  removeElementsAfterTransition(selector) {\n    const that = this;\n    this.svg.selectAll(selector)\n      .transition()\n      .duration(2000)\n      .style('stroke', 'transparent')\n      .style('fill', 'transparent')\n      .on('end', function () {\n        that.removeElements(selector);\n        that.clickable = true;\n      });\n  }\n  removeElements(selector) {\n    this.svg.selectAll(selector).remove();\n  }\n};\n","import MachineLearningAlgorithm from './machine-learning-algorithm';\nimport {defaultK} from '../visualization/defaults';\n\nexport default class KNN extends MachineLearningAlgorithm {\n  constructor(circles, types, k = defaultK, weighted = false) {\n    super(circles);\n    this.k = k;\n    this.types = types;\n    this.kClosestNeighbors = null;\n    this.weighted = weighted;\n  }\n  calculateDistance(a, b) {\n    return Math.sqrt(Math.pow((b.cx - a.cx), 2) + Math.pow((b.cy - a.cy), 2));\n  }\n  compareDistance(a, b) {\n    if (a.distance > b.distance) {\n      return 1;\n    } else if (a.distance < b.distance) {\n      return -1;\n    }\n\n    return 0;\n  }\n  findKClosestNeighbors(newCircle, neighbors) {\n    return neighbors.filter(n => n !== newCircle)\n      .map(n => {\n        n.setDistance(this.calculateDistance(n, newCircle));\n\n        return n;\n      })\n      .sort((a, b) => this.compareDistance(a, b))\n      .filter((n, i) => i < this.k);\n  }\n  getCircleTypeWeighted(kClosestNeighbors) {\n    const typeDistance = this.types.reduce((res, type) => {\n      res[type] = 0;\n\n      return res;\n    }, {max: {type: null, val: 0}});\n    const res = kClosestNeighbors.reduce((res, neighbor) => {\n      const inverseDistance = res[neighbor.type] + 1 / neighbor.distance;\n      if (inverseDistance > res.max.val) {\n        res.max.type = neighbor.type;\n        res.max.val = inverseDistance;\n      }\n      res[neighbor.type] = inverseDistance;\n\n      return res;\n    }, typeDistance);\n\n    return res.max.type;\n  }\n  getCircleTypeUnweighted(kClosestNeighbors) {\n    const counts = {};\n    kClosestNeighbors.map(n => n.type)\n      .forEach(type => {\n        counts[type] = counts[type] ? counts[type] + 1 : 1;\n      });\n\n    return Object.entries(counts).sort((a, b) => a[1] < b[1])[0][0];\n  }\n  determineCircleType(kClosestNeighbors) {\n    return this.weighted ?\n      this.getCircleTypeWeighted(kClosestNeighbors) : this.getCircleTypeUnweighted(kClosestNeighbors);\n  }\n  classify(circle, neighbors) {\n    this.kClosestNeighbors = this.findKClosestNeighbors(circle, neighbors);\n\n    return this.determineCircleType(this.kClosestNeighbors);\n  }\n}\n","export default class MachineLearningAlgorithm {\n  constructor(circles) {\n    this.circles = circles;\n  }\n}\n","import Visualization from './visualization';\nimport LinearRegression from '../algorithms/linear-regression';\nimport Painter from './painter';\n\nexport default class LinearRegressionVisualization extends Visualization {\n  constructor(data, options, types) {\n    super(data, options, types);\n    this.linearRegression = new LinearRegression();\n    this.addEventListeners();\n    this.lines = [];\n  }\n  addEventListeners() {\n    this.onClickSvg([this.svgClickCallback]);\n  }\n  svgClickCallback(circle) {\n    this.addCircle(circle);\n    this.redraw();\n  }\n  redraw() {\n    Painter.drawCircles(this.svg, this.data);\n    this.transitionLines();\n  }\n  transitionLines() {\n    const lines = this.getLinesToDraw();\n    const linesCopy = Array.from(lines);\n    let newLine = linesCopy[linesCopy.length - 1];\n    linesCopy[linesCopy.length - 1] = Object.assign({}, newLine, {y2: newLine.y1});\n    Painter.drawLines(this.svg, linesCopy);\n    Painter.transitionLines(this.svg, lines, 1500);\n  }\n  draw() {\n    Painter.drawCircles(this.svg, this.data);\n    Painter.drawLines(this.svg, this.getLinesToDraw());\n  }\n  createLine(x1, y1, x2, y2, stroke, strokeWidth, cssClass) {\n    return {x1, y1, x2, y2, stroke, strokeWidth, cssClass};\n  }\n  getLinesToDraw() {\n    const {slope, intercept} = this.linearRegression.performRegression(this.data);\n    const regressionLine = this.getRegressionLine(slope, intercept);\n    const connectingLines = this.getConnectingLines(slope, intercept);\n\n    return [regressionLine].concat(connectingLines);\n  }\n  getRegressionLine(slope, intercept) {\n    return this.createLine(0, intercept, this.options.width, this.options.width * slope + intercept, 'white', '2', '');\n  }\n  getConnectingLines(slope, intercept) {\n    return this.data.map(d => this.createLine(d.cx, d.cy, d.cx, slope * d.cx + intercept, 'white', '1', ''));\n  }\n}\n","export default class LinearRegression {\n  calculateMean(d) {\n    return d.reduce((sum, val) => sum + val) / d.length;\n  }\n  calculateSlope(circles, meanX, meanY) {\n    const f = circles.reduce((sum, d) => {\n      return {\n        up: sum.up + ((d.cx - meanX) * (d.cy - meanY)),\n        down: sum.down + Math.pow((d.cx - meanX), 2)\n      };\n    }, {up: 0, down: 0});\n\n    return f.up / f.down;\n  }\n  calculateIntercept(slope, meanX, meanY) {\n    if (slope || slope === 0) {\n      return meanY - (slope * meanX);\n    }\n\n    return 0;\n  }\n  performRegression(circles) {\n    const meanX = this.calculateMean(circles.map(d => d.cx));\n    const meanY = this.calculateMean(circles.map(d => d.cy));\n\n    const slope = this.calculateSlope(circles, meanX, meanY);\n    const intercept = this.calculateIntercept(slope, meanX, meanY);\n\n    return {slope, intercept};\n  }\n\n  calculateTotalSquaredError(y, yPredicted) {\n    let result = NaN;\n    if (y !== null && yPredicted !== null) {\n      result = y.reduce((sum, val, idx) => {\n        return sum + (val - yPredicted[idx]) ** 2;\n      }, 0);\n    }\n\n    return result;\n  }\n}\n","export var name = \"d3\";\nexport var version = \"5.5.0\";\nexport var description = \"Data-Driven Documents\";\nexport var keywords = [\"dom\",\"visualization\",\"svg\",\"animation\",\"canvas\"];\nexport var homepage = \"https://d3js.org\";\nexport var license = \"BSD-3-Clause\";\nexport var author = {\"name\":\"Mike Bostock\",\"url\":\"https://bost.ocks.org/mike\"};\nexport var main = \"dist/d3.node.js\";\nexport var unpkg = \"dist/d3.min.js\";\nexport var jsdelivr = \"dist/d3.min.js\";\nexport var module = \"index\";\nexport var repository = {\"type\":\"git\",\"url\":\"https://github.com/d3/d3.git\"};\nexport var scripts = {\"pretest\":\"rimraf dist && mkdir dist && json2module package.json > dist/package.js && node rollup.node\",\"test\":\"tape 'test/**/*-test.js'\",\"prepublishOnly\":\"npm run test && rollup -c --banner \\\"$(preamble)\\\" && uglifyjs -b beautify=false,preamble=\\\"'$(preamble)'\\\" dist/d3.js -c negate_iife=false -m -o dist/d3.min.js\",\"postpublish\":\"git push && git push --tags && cd ../d3.github.com && git pull && cp ../d3/dist/d3.js d3.v5.js && cp ../d3/dist/d3.min.js d3.v5.min.js && git add d3.v5.js d3.v5.min.js && git commit -m \\\"d3 ${npm_package_version}\\\" && git push && cd - && cd ../d3-bower && git pull && cp ../d3/LICENSE ../d3/README.md ../d3/dist/d3.js ../d3/dist/d3.min.js . && git add -- LICENSE README.md d3.js d3.min.js && git commit -m \\\"${npm_package_version}\\\" && git tag -am \\\"${npm_package_version}\\\" v${npm_package_version} && git push && git push --tags && cd - && zip -j dist/d3.zip -- LICENSE README.md API.md CHANGES.md dist/d3.js dist/d3.min.js\"};\nexport var devDependencies = {\"json2module\":\"0.0\",\"package-preamble\":\"0.1\",\"rimraf\":\"2\",\"rollup\":\"0.57\",\"rollup-plugin-ascii\":\"0.0\",\"rollup-plugin-node-resolve\":\"3\",\"tape\":\"4\",\"uglify-js\":\"3.2\"};\nexport var dependencies = {\"d3-array\":\"1\",\"d3-axis\":\"1\",\"d3-brush\":\"1\",\"d3-chord\":\"1\",\"d3-collection\":\"1\",\"d3-color\":\"1\",\"d3-contour\":\"1\",\"d3-dispatch\":\"1\",\"d3-drag\":\"1\",\"d3-dsv\":\"1\",\"d3-ease\":\"1\",\"d3-fetch\":\"1\",\"d3-force\":\"1\",\"d3-format\":\"1\",\"d3-geo\":\"1\",\"d3-hierarchy\":\"1\",\"d3-interpolate\":\"1\",\"d3-path\":\"1\",\"d3-polygon\":\"1\",\"d3-quadtree\":\"1\",\"d3-random\":\"1\",\"d3-scale\":\"2\",\"d3-scale-chromatic\":\"1\",\"d3-selection\":\"1\",\"d3-shape\":\"1\",\"d3-time\":\"1\",\"d3-time-format\":\"2\",\"d3-timer\":\"1\",\"d3-transition\":\"1\",\"d3-voronoi\":\"1\",\"d3-zoom\":\"1\"};\n","export default function(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n","import ascending from \"./ascending\";\n\nexport default function(compare) {\n  if (compare.length === 1) compare = ascendingComparator(compare);\n  return {\n    left: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) < 0) lo = mid + 1;\n        else hi = mid;\n      }\n      return lo;\n    },\n    right: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) > 0) hi = mid;\n        else lo = mid + 1;\n      }\n      return lo;\n    }\n  };\n}\n\nfunction ascendingComparator(f) {\n  return function(d, x) {\n    return ascending(f(d), x);\n  };\n}\n","import ascending from \"./ascending\";\nimport bisector from \"./bisector\";\n\nvar ascendingBisect = bisector(ascending);\nexport var bisectRight = ascendingBisect.right;\nexport var bisectLeft = ascendingBisect.left;\nexport default bisectRight;\n","export default function(array, f) {\n  if (f == null) f = pair;\n  var i = 0, n = array.length - 1, p = array[0], pairs = new Array(n < 0 ? 0 : n);\n  while (i < n) pairs[i] = f(p, p = array[++i]);\n  return pairs;\n}\n\nexport function pair(a, b) {\n  return [a, b];\n}\n","import {pair} from \"./pairs\";\n\nexport default function(values0, values1, reduce) {\n  var n0 = values0.length,\n      n1 = values1.length,\n      values = new Array(n0 * n1),\n      i0,\n      i1,\n      i,\n      value0;\n\n  if (reduce == null) reduce = pair;\n\n  for (i0 = i = 0; i0 < n0; ++i0) {\n    for (value0 = values0[i0], i1 = 0; i1 < n1; ++i1, ++i) {\n      values[i] = reduce(value0, values1[i1]);\n    }\n  }\n\n  return values;\n}\n","export default function(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n}\n","export default function(x) {\n  return x === null ? NaN : +x;\n}\n","import number from \"./number\";\n\nexport default function(values, valueof) {\n  var n = values.length,\n      m = 0,\n      i = -1,\n      mean = 0,\n      value,\n      delta,\n      sum = 0;\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (!isNaN(value = number(values[i]))) {\n        delta = value - mean;\n        mean += delta / ++m;\n        sum += delta * (value - mean);\n      }\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(value = number(valueof(values[i], i, values)))) {\n        delta = value - mean;\n        mean += delta / ++m;\n        sum += delta * (value - mean);\n      }\n    }\n  }\n\n  if (m > 1) return sum / (m - 1);\n}\n","import variance from \"./variance\";\n\nexport default function(array, f) {\n  var v = variance(array, f);\n  return v ? Math.sqrt(v) : v;\n}\n","export default function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      min,\n      max;\n\n  if (valueof == null) {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        min = max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = values[i]) != null) {\n            if (min > value) min = value;\n            if (max < value) max = value;\n          }\n        }\n      }\n    }\n  }\n\n  else {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        min = max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null) {\n            if (min > value) min = value;\n            if (max < value) max = value;\n          }\n        }\n      }\n    }\n  }\n\n  return [min, max];\n}\n","var array = Array.prototype;\n\nexport var slice = array.slice;\nexport var map = array.map;\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function(x) {\n  return x;\n}\n","export default function(start, stop, step) {\n  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\n  var i = -1,\n      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n      range = new Array(n);\n\n  while (++i < n) {\n    range[i] = start + i * step;\n  }\n\n  return range;\n}\n","var e10 = Math.sqrt(50),\n    e5 = Math.sqrt(10),\n    e2 = Math.sqrt(2);\n\nexport default function(start, stop, count) {\n  var reverse,\n      i = -1,\n      n,\n      ticks,\n      step;\n\n  stop = +stop, start = +start, count = +count;\n  if (start === stop && count > 0) return [start];\n  if (reverse = stop < start) n = start, start = stop, stop = n;\n  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];\n\n  if (step > 0) {\n    start = Math.ceil(start / step);\n    stop = Math.floor(stop / step);\n    ticks = new Array(n = Math.ceil(stop - start + 1));\n    while (++i < n) ticks[i] = (start + i) * step;\n  } else {\n    start = Math.floor(start * step);\n    stop = Math.ceil(stop * step);\n    ticks = new Array(n = Math.ceil(start - stop + 1));\n    while (++i < n) ticks[i] = (start - i) / step;\n  }\n\n  if (reverse) ticks.reverse();\n\n  return ticks;\n}\n\nexport function tickIncrement(start, stop, count) {\n  var step = (stop - start) / Math.max(0, count),\n      power = Math.floor(Math.log(step) / Math.LN10),\n      error = step / Math.pow(10, power);\n  return power >= 0\n      ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power)\n      : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);\n}\n\nexport function tickStep(start, stop, count) {\n  var step0 = Math.abs(stop - start) / Math.max(0, count),\n      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n      error = step0 / step1;\n  if (error >= e10) step1 *= 10;\n  else if (error >= e5) step1 *= 5;\n  else if (error >= e2) step1 *= 2;\n  return stop < start ? -step1 : step1;\n}\n","export default function(values) {\n  return Math.ceil(Math.log(values.length) / Math.LN2) + 1;\n}\n","import {slice} from \"./array\";\nimport bisect from \"./bisect\";\nimport constant from \"./constant\";\nimport extent from \"./extent\";\nimport identity from \"./identity\";\nimport range from \"./range\";\nimport {tickStep} from \"./ticks\";\nimport sturges from \"./threshold/sturges\";\n\nexport default function() {\n  var value = identity,\n      domain = extent,\n      threshold = sturges;\n\n  function histogram(data) {\n    var i,\n        n = data.length,\n        x,\n        values = new Array(n);\n\n    for (i = 0; i < n; ++i) {\n      values[i] = value(data[i], i, data);\n    }\n\n    var xz = domain(values),\n        x0 = xz[0],\n        x1 = xz[1],\n        tz = threshold(values, x0, x1);\n\n    // Convert number of thresholds into uniform thresholds.\n    if (!Array.isArray(tz)) {\n      tz = tickStep(x0, x1, tz);\n      tz = range(Math.ceil(x0 / tz) * tz, Math.floor(x1 / tz) * tz, tz); // exclusive\n    }\n\n    // Remove any thresholds outside the domain.\n    var m = tz.length;\n    while (tz[0] <= x0) tz.shift(), --m;\n    while (tz[m - 1] > x1) tz.pop(), --m;\n\n    var bins = new Array(m + 1),\n        bin;\n\n    // Initialize bins.\n    for (i = 0; i <= m; ++i) {\n      bin = bins[i] = [];\n      bin.x0 = i > 0 ? tz[i - 1] : x0;\n      bin.x1 = i < m ? tz[i] : x1;\n    }\n\n    // Assign data to bins by value, ignoring any outside the domain.\n    for (i = 0; i < n; ++i) {\n      x = values[i];\n      if (x0 <= x && x <= x1) {\n        bins[bisect(tz, x, 0, m)].push(data[i]);\n      }\n    }\n\n    return bins;\n  }\n\n  histogram.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(_), histogram) : value;\n  };\n\n  histogram.domain = function(_) {\n    return arguments.length ? (domain = typeof _ === \"function\" ? _ : constant([_[0], _[1]]), histogram) : domain;\n  };\n\n  histogram.thresholds = function(_) {\n    return arguments.length ? (threshold = typeof _ === \"function\" ? _ : Array.isArray(_) ? constant(slice.call(_)) : constant(_), histogram) : threshold;\n  };\n\n  return histogram;\n}\n","import number from \"./number\";\n\nexport default function(values, p, valueof) {\n  if (valueof == null) valueof = number;\n  if (!(n = values.length)) return;\n  if ((p = +p) <= 0 || n < 2) return +valueof(values[0], 0, values);\n  if (p >= 1) return +valueof(values[n - 1], n - 1, values);\n  var n,\n      i = (n - 1) * p,\n      i0 = Math.floor(i),\n      value0 = +valueof(values[i0], i0, values),\n      value1 = +valueof(values[i0 + 1], i0 + 1, values);\n  return value0 + (value1 - value0) * (i - i0);\n}\n","import {map} from \"../array\";\nimport ascending from \"../ascending\";\nimport number from \"../number\";\nimport quantile from \"../quantile\";\n\nexport default function(values, min, max) {\n  values = map.call(values, number).sort(ascending);\n  return Math.ceil((max - min) / (2 * (quantile(values, 0.75) - quantile(values, 0.25)) * Math.pow(values.length, -1 / 3)));\n}\n","import deviation from \"../deviation\";\n\nexport default function(values, min, max) {\n  return Math.ceil((max - min) / (3.5 * deviation(values) * Math.pow(values.length, -1 / 3)));\n}\n","export default function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      max;\n\n  if (valueof == null) {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = values[i]) != null && value > max) {\n            max = value;\n          }\n        }\n      }\n    }\n  }\n\n  else {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null && value > max) {\n            max = value;\n          }\n        }\n      }\n    }\n  }\n\n  return max;\n}\n","import number from \"./number\";\n\nexport default function(values, valueof) {\n  var n = values.length,\n      m = n,\n      i = -1,\n      value,\n      sum = 0;\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (!isNaN(value = number(values[i]))) sum += value;\n      else --m;\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(value = number(valueof(values[i], i, values)))) sum += value;\n      else --m;\n    }\n  }\n\n  if (m) return sum / m;\n}\n","import ascending from \"./ascending\";\nimport number from \"./number\";\nimport quantile from \"./quantile\";\n\nexport default function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      numbers = [];\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (!isNaN(value = number(values[i]))) {\n        numbers.push(value);\n      }\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(value = number(valueof(values[i], i, values)))) {\n        numbers.push(value);\n      }\n    }\n  }\n\n  return quantile(numbers.sort(ascending), 0.5);\n}\n","export default function(arrays) {\n  var n = arrays.length,\n      m,\n      i = -1,\n      j = 0,\n      merged,\n      array;\n\n  while (++i < n) j += arrays[i].length;\n  merged = new Array(j);\n\n  while (--n >= 0) {\n    array = arrays[n];\n    m = array.length;\n    while (--m >= 0) {\n      merged[--j] = array[m];\n    }\n  }\n\n  return merged;\n}\n","export default function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      min;\n\n  if (valueof == null) {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        min = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = values[i]) != null && min > value) {\n            min = value;\n          }\n        }\n      }\n    }\n  }\n\n  else {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        min = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null && min > value) {\n            min = value;\n          }\n        }\n      }\n    }\n  }\n\n  return min;\n}\n","export default function(array, indexes) {\n  var i = indexes.length, permutes = new Array(i);\n  while (i--) permutes[i] = array[indexes[i]];\n  return permutes;\n}\n","import ascending from \"./ascending\";\n\nexport default function(values, compare) {\n  if (!(n = values.length)) return;\n  var n,\n      i = 0,\n      j = 0,\n      xi,\n      xj = values[j];\n\n  if (compare == null) compare = ascending;\n\n  while (++i < n) {\n    if (compare(xi = values[i], xj) < 0 || compare(xj, xj) !== 0) {\n      xj = xi, j = i;\n    }\n  }\n\n  if (compare(xj, xj) === 0) return j;\n}\n","export default function(array, i0, i1) {\n  var m = (i1 == null ? array.length : i1) - (i0 = i0 == null ? 0 : +i0),\n      t,\n      i;\n\n  while (m) {\n    i = Math.random() * m-- | 0;\n    t = array[m + i0];\n    array[m + i0] = array[i + i0];\n    array[i + i0] = t;\n  }\n\n  return array;\n}\n","export default function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      sum = 0;\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (value = +values[i]) sum += value; // Note: zero and null are equivalent.\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (value = +valueof(values[i], i, values)) sum += value;\n    }\n  }\n\n  return sum;\n}\n","import min from \"./min\";\n\nexport default function(matrix) {\n  if (!(n = matrix.length)) return [];\n  for (var i = -1, m = min(matrix, length), transpose = new Array(m); ++i < m;) {\n    for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n;) {\n      row[j] = matrix[j][i];\n    }\n  }\n  return transpose;\n}\n\nfunction length(d) {\n  return d.length;\n}\n","import transpose from \"./transpose\";\n\nexport default function() {\n  return transpose(arguments);\n}\n","export var slice = Array.prototype.slice;\n","export default function(x) {\n  return x;\n}\n","import {slice} from \"./array\";\nimport identity from \"./identity\";\n\nvar top = 1,\n    right = 2,\n    bottom = 3,\n    left = 4,\n    epsilon = 1e-6;\n\nfunction translateX(x) {\n  return \"translate(\" + (x + 0.5) + \",0)\";\n}\n\nfunction translateY(y) {\n  return \"translate(0,\" + (y + 0.5) + \")\";\n}\n\nfunction number(scale) {\n  return function(d) {\n    return +scale(d);\n  };\n}\n\nfunction center(scale) {\n  var offset = Math.max(0, scale.bandwidth() - 1) / 2; // Adjust for 0.5px offset.\n  if (scale.round()) offset = Math.round(offset);\n  return function(d) {\n    return +scale(d) + offset;\n  };\n}\n\nfunction entering() {\n  return !this.__axis;\n}\n\nfunction axis(orient, scale) {\n  var tickArguments = [],\n      tickValues = null,\n      tickFormat = null,\n      tickSizeInner = 6,\n      tickSizeOuter = 6,\n      tickPadding = 3,\n      k = orient === top || orient === left ? -1 : 1,\n      x = orient === left || orient === right ? \"x\" : \"y\",\n      transform = orient === top || orient === bottom ? translateX : translateY;\n\n  function axis(context) {\n    var values = tickValues == null ? (scale.ticks ? scale.ticks.apply(scale, tickArguments) : scale.domain()) : tickValues,\n        format = tickFormat == null ? (scale.tickFormat ? scale.tickFormat.apply(scale, tickArguments) : identity) : tickFormat,\n        spacing = Math.max(tickSizeInner, 0) + tickPadding,\n        range = scale.range(),\n        range0 = +range[0] + 0.5,\n        range1 = +range[range.length - 1] + 0.5,\n        position = (scale.bandwidth ? center : number)(scale.copy()),\n        selection = context.selection ? context.selection() : context,\n        path = selection.selectAll(\".domain\").data([null]),\n        tick = selection.selectAll(\".tick\").data(values, scale).order(),\n        tickExit = tick.exit(),\n        tickEnter = tick.enter().append(\"g\").attr(\"class\", \"tick\"),\n        line = tick.select(\"line\"),\n        text = tick.select(\"text\");\n\n    path = path.merge(path.enter().insert(\"path\", \".tick\")\n        .attr(\"class\", \"domain\")\n        .attr(\"stroke\", \"#000\"));\n\n    tick = tick.merge(tickEnter);\n\n    line = line.merge(tickEnter.append(\"line\")\n        .attr(\"stroke\", \"#000\")\n        .attr(x + \"2\", k * tickSizeInner));\n\n    text = text.merge(tickEnter.append(\"text\")\n        .attr(\"fill\", \"#000\")\n        .attr(x, k * spacing)\n        .attr(\"dy\", orient === top ? \"0em\" : orient === bottom ? \"0.71em\" : \"0.32em\"));\n\n    if (context !== selection) {\n      path = path.transition(context);\n      tick = tick.transition(context);\n      line = line.transition(context);\n      text = text.transition(context);\n\n      tickExit = tickExit.transition(context)\n          .attr(\"opacity\", epsilon)\n          .attr(\"transform\", function(d) { return isFinite(d = position(d)) ? transform(d) : this.getAttribute(\"transform\"); });\n\n      tickEnter\n          .attr(\"opacity\", epsilon)\n          .attr(\"transform\", function(d) { var p = this.parentNode.__axis; return transform(p && isFinite(p = p(d)) ? p : position(d)); });\n    }\n\n    tickExit.remove();\n\n    path\n        .attr(\"d\", orient === left || orient == right\n            ? \"M\" + k * tickSizeOuter + \",\" + range0 + \"H0.5V\" + range1 + \"H\" + k * tickSizeOuter\n            : \"M\" + range0 + \",\" + k * tickSizeOuter + \"V0.5H\" + range1 + \"V\" + k * tickSizeOuter);\n\n    tick\n        .attr(\"opacity\", 1)\n        .attr(\"transform\", function(d) { return transform(position(d)); });\n\n    line\n        .attr(x + \"2\", k * tickSizeInner);\n\n    text\n        .attr(x, k * spacing)\n        .text(format);\n\n    selection.filter(entering)\n        .attr(\"fill\", \"none\")\n        .attr(\"font-size\", 10)\n        .attr(\"font-family\", \"sans-serif\")\n        .attr(\"text-anchor\", orient === right ? \"start\" : orient === left ? \"end\" : \"middle\");\n\n    selection\n        .each(function() { this.__axis = position; });\n  }\n\n  axis.scale = function(_) {\n    return arguments.length ? (scale = _, axis) : scale;\n  };\n\n  axis.ticks = function() {\n    return tickArguments = slice.call(arguments), axis;\n  };\n\n  axis.tickArguments = function(_) {\n    return arguments.length ? (tickArguments = _ == null ? [] : slice.call(_), axis) : tickArguments.slice();\n  };\n\n  axis.tickValues = function(_) {\n    return arguments.length ? (tickValues = _ == null ? null : slice.call(_), axis) : tickValues && tickValues.slice();\n  };\n\n  axis.tickFormat = function(_) {\n    return arguments.length ? (tickFormat = _, axis) : tickFormat;\n  };\n\n  axis.tickSize = function(_) {\n    return arguments.length ? (tickSizeInner = tickSizeOuter = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeInner = function(_) {\n    return arguments.length ? (tickSizeInner = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeOuter = function(_) {\n    return arguments.length ? (tickSizeOuter = +_, axis) : tickSizeOuter;\n  };\n\n  axis.tickPadding = function(_) {\n    return arguments.length ? (tickPadding = +_, axis) : tickPadding;\n  };\n\n  return axis;\n}\n\nexport function axisTop(scale) {\n  return axis(top, scale);\n}\n\nexport function axisRight(scale) {\n  return axis(right, scale);\n}\n\nexport function axisBottom(scale) {\n  return axis(bottom, scale);\n}\n\nexport function axisLeft(scale) {\n  return axis(left, scale);\n}\n","var noop = {value: function() {}};\n\nfunction dispatch() {\n  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\n    if (!(t = arguments[i] + \"\") || (t in _)) throw new Error(\"illegal type: \" + t);\n    _[t] = [];\n  }\n  return new Dispatch(_);\n}\n\nfunction Dispatch(_) {\n  this._ = _;\n}\n\nfunction parseTypenames(typenames, types) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\n    return {type: t, name: name};\n  });\n}\n\nDispatch.prototype = dispatch.prototype = {\n  constructor: Dispatch,\n  on: function(typename, callback) {\n    var _ = this._,\n        T = parseTypenames(typename + \"\", _),\n        t,\n        i = -1,\n        n = T.length;\n\n    // If no callback was specified, return the callback of the given type and name.\n    if (arguments.length < 2) {\n      while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\n      return;\n    }\n\n    // If a type was specified, set the callback for the given type and name.\n    // Otherwise, if a null callback was specified, remove callbacks of the given name.\n    if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    while (++i < n) {\n      if (t = (typename = T[i]).type) _[t] = set(_[t], typename.name, callback);\n      else if (callback == null) for (t in _) _[t] = set(_[t], typename.name, null);\n    }\n\n    return this;\n  },\n  copy: function() {\n    var copy = {}, _ = this._;\n    for (var t in _) copy[t] = _[t].slice();\n    return new Dispatch(copy);\n  },\n  call: function(type, that) {\n    if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  },\n  apply: function(type, that, args) {\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  }\n};\n\nfunction get(type, name) {\n  for (var i = 0, n = type.length, c; i < n; ++i) {\n    if ((c = type[i]).name === name) {\n      return c.value;\n    }\n  }\n}\n\nfunction set(type, name, callback) {\n  for (var i = 0, n = type.length; i < n; ++i) {\n    if (type[i].name === name) {\n      type[i] = noop, type = type.slice(0, i).concat(type.slice(i + 1));\n      break;\n    }\n  }\n  if (callback != null) type.push({name: name, value: callback});\n  return type;\n}\n\nexport default dispatch;\n","export var xhtml = \"http://www.w3.org/1999/xhtml\";\n\nexport default {\n  svg: \"http://www.w3.org/2000/svg\",\n  xhtml: xhtml,\n  xlink: \"http://www.w3.org/1999/xlink\",\n  xml: \"http://www.w3.org/XML/1998/namespace\",\n  xmlns: \"http://www.w3.org/2000/xmlns/\"\n};\n","import namespaces from \"./namespaces\";\n\nexport default function(name) {\n  var prefix = name += \"\", i = prefix.indexOf(\":\");\n  if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n  return namespaces.hasOwnProperty(prefix) ? {space: namespaces[prefix], local: name} : name;\n}\n","import namespace from \"./namespace\";\nimport {xhtml} from \"./namespaces\";\n\nfunction creatorInherit(name) {\n  return function() {\n    var document = this.ownerDocument,\n        uri = this.namespaceURI;\n    return uri === xhtml && document.documentElement.namespaceURI === xhtml\n        ? document.createElement(name)\n        : document.createElementNS(uri, name);\n  };\n}\n\nfunction creatorFixed(fullname) {\n  return function() {\n    return this.ownerDocument.createElementNS(fullname.space, fullname.local);\n  };\n}\n\nexport default function(name) {\n  var fullname = namespace(name);\n  return (fullname.local\n      ? creatorFixed\n      : creatorInherit)(fullname);\n}\n","function none() {}\n\nexport default function(selector) {\n  return selector == null ? none : function() {\n    return this.querySelector(selector);\n  };\n}\n","function empty() {\n  return [];\n}\n\nexport default function(selector) {\n  return selector == null ? empty : function() {\n    return this.querySelectorAll(selector);\n  };\n}\n","var matcher = function(selector) {\n  return function() {\n    return this.matches(selector);\n  };\n};\n\nif (typeof document !== \"undefined\") {\n  var element = document.documentElement;\n  if (!element.matches) {\n    var vendorMatches = element.webkitMatchesSelector\n        || element.msMatchesSelector\n        || element.mozMatchesSelector\n        || element.oMatchesSelector;\n    matcher = function(selector) {\n      return function() {\n        return vendorMatches.call(this, selector);\n      };\n    };\n  }\n}\n\nexport default matcher;\n","export default function(update) {\n  return new Array(update.length);\n}\n","import sparse from \"./sparse\";\nimport {Selection} from \"./index\";\n\nexport default function() {\n  return new Selection(this._enter || this._groups.map(sparse), this._parents);\n}\n\nexport function EnterNode(parent, datum) {\n  this.ownerDocument = parent.ownerDocument;\n  this.namespaceURI = parent.namespaceURI;\n  this._next = null;\n  this._parent = parent;\n  this.__data__ = datum;\n}\n\nEnterNode.prototype = {\n  constructor: EnterNode,\n  appendChild: function(child) { return this._parent.insertBefore(child, this._next); },\n  insertBefore: function(child, next) { return this._parent.insertBefore(child, next); },\n  querySelector: function(selector) { return this._parent.querySelector(selector); },\n  querySelectorAll: function(selector) { return this._parent.querySelectorAll(selector); }\n};\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","import {Selection} from \"./index\";\nimport {EnterNode} from \"./enter\";\nimport constant from \"../constant\";\n\nvar keyPrefix = \"$\"; // Protect against keys like “__proto__”.\n\nfunction bindIndex(parent, group, enter, update, exit, data) {\n  var i = 0,\n      node,\n      groupLength = group.length,\n      dataLength = data.length;\n\n  // Put any non-null nodes that fit into update.\n  // Put any null nodes into enter.\n  // Put any remaining data into enter.\n  for (; i < dataLength; ++i) {\n    if (node = group[i]) {\n      node.__data__ = data[i];\n      update[i] = node;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Put any non-null nodes that don’t fit into exit.\n  for (; i < groupLength; ++i) {\n    if (node = group[i]) {\n      exit[i] = node;\n    }\n  }\n}\n\nfunction bindKey(parent, group, enter, update, exit, data, key) {\n  var i,\n      node,\n      nodeByKeyValue = {},\n      groupLength = group.length,\n      dataLength = data.length,\n      keyValues = new Array(groupLength),\n      keyValue;\n\n  // Compute the key for each node.\n  // If multiple nodes have the same key, the duplicates are added to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if (node = group[i]) {\n      keyValues[i] = keyValue = keyPrefix + key.call(node, node.__data__, i, group);\n      if (keyValue in nodeByKeyValue) {\n        exit[i] = node;\n      } else {\n        nodeByKeyValue[keyValue] = node;\n      }\n    }\n  }\n\n  // Compute the key for each datum.\n  // If there a node associated with this key, join and add it to update.\n  // If there is not (or the key is a duplicate), add it to enter.\n  for (i = 0; i < dataLength; ++i) {\n    keyValue = keyPrefix + key.call(parent, data[i], i, data);\n    if (node = nodeByKeyValue[keyValue]) {\n      update[i] = node;\n      node.__data__ = data[i];\n      nodeByKeyValue[keyValue] = null;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Add any remaining nodes that were not bound to data to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if ((node = group[i]) && (nodeByKeyValue[keyValues[i]] === node)) {\n      exit[i] = node;\n    }\n  }\n}\n\nexport default function(value, key) {\n  if (!value) {\n    data = new Array(this.size()), j = -1;\n    this.each(function(d) { data[++j] = d; });\n    return data;\n  }\n\n  var bind = key ? bindKey : bindIndex,\n      parents = this._parents,\n      groups = this._groups;\n\n  if (typeof value !== \"function\") value = constant(value);\n\n  for (var m = groups.length, update = new Array(m), enter = new Array(m), exit = new Array(m), j = 0; j < m; ++j) {\n    var parent = parents[j],\n        group = groups[j],\n        groupLength = group.length,\n        data = value.call(parent, parent && parent.__data__, j, parents),\n        dataLength = data.length,\n        enterGroup = enter[j] = new Array(dataLength),\n        updateGroup = update[j] = new Array(dataLength),\n        exitGroup = exit[j] = new Array(groupLength);\n\n    bind(parent, group, enterGroup, updateGroup, exitGroup, data, key);\n\n    // Now connect the enter nodes to their following update node, such that\n    // appendChild can insert the materialized enter node before this node,\n    // rather than at the end of the parent node.\n    for (var i0 = 0, i1 = 0, previous, next; i0 < dataLength; ++i0) {\n      if (previous = enterGroup[i0]) {\n        if (i0 >= i1) i1 = i0 + 1;\n        while (!(next = updateGroup[i1]) && ++i1 < dataLength);\n        previous._next = next || null;\n      }\n    }\n  }\n\n  update = new Selection(update, parents);\n  update._enter = enter;\n  update._exit = exit;\n  return update;\n}\n","import {Selection} from \"./index\";\n\nexport default function(compare) {\n  if (!compare) compare = ascending;\n\n  function compareNode(a, b) {\n    return a && b ? compare(a.__data__, b.__data__) : !a - !b;\n  }\n\n  for (var groups = this._groups, m = groups.length, sortgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, sortgroup = sortgroups[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        sortgroup[i] = node;\n      }\n    }\n    sortgroup.sort(compareNode);\n  }\n\n  return new Selection(sortgroups, this._parents).order();\n}\n\nfunction ascending(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n","import namespace from \"../namespace\";\n\nfunction attrRemove(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, value) {\n  return function() {\n    this.setAttribute(name, value);\n  };\n}\n\nfunction attrConstantNS(fullname, value) {\n  return function() {\n    this.setAttributeNS(fullname.space, fullname.local, value);\n  };\n}\n\nfunction attrFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttribute(name);\n    else this.setAttribute(name, v);\n  };\n}\n\nfunction attrFunctionNS(fullname, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttributeNS(fullname.space, fullname.local);\n    else this.setAttributeNS(fullname.space, fullname.local, v);\n  };\n}\n\nexport default function(name, value) {\n  var fullname = namespace(name);\n\n  if (arguments.length < 2) {\n    var node = this.node();\n    return fullname.local\n        ? node.getAttributeNS(fullname.space, fullname.local)\n        : node.getAttribute(fullname);\n  }\n\n  return this.each((value == null\n      ? (fullname.local ? attrRemoveNS : attrRemove) : (typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS : attrFunction)\n      : (fullname.local ? attrConstantNS : attrConstant)))(fullname, value));\n}\n","export default function(node) {\n  return (node.ownerDocument && node.ownerDocument.defaultView) // node is a Node\n      || (node.document && node) // node is a Window\n      || node.defaultView; // node is a Document\n}\n","import defaultView from \"../window\";\n\nfunction styleRemove(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, value, priority) {\n  return function() {\n    this.style.setProperty(name, value, priority);\n  };\n}\n\nfunction styleFunction(name, value, priority) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.style.removeProperty(name);\n    else this.style.setProperty(name, v, priority);\n  };\n}\n\nexport default function(name, value, priority) {\n  return arguments.length > 1\n      ? this.each((value == null\n            ? styleRemove : typeof value === \"function\"\n            ? styleFunction\n            : styleConstant)(name, value, priority == null ? \"\" : priority))\n      : styleValue(this.node(), name);\n}\n\nexport function styleValue(node, name) {\n  return node.style.getPropertyValue(name)\n      || defaultView(node).getComputedStyle(node, null).getPropertyValue(name);\n}\n","function classArray(string) {\n  return string.trim().split(/^|\\s+/);\n}\n\nfunction classList(node) {\n  return node.classList || new ClassList(node);\n}\n\nfunction ClassList(node) {\n  this._node = node;\n  this._names = classArray(node.getAttribute(\"class\") || \"\");\n}\n\nClassList.prototype = {\n  add: function(name) {\n    var i = this._names.indexOf(name);\n    if (i < 0) {\n      this._names.push(name);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  remove: function(name) {\n    var i = this._names.indexOf(name);\n    if (i >= 0) {\n      this._names.splice(i, 1);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  contains: function(name) {\n    return this._names.indexOf(name) >= 0;\n  }\n};\n\nfunction classedAdd(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.add(names[i]);\n}\n\nfunction classedRemove(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.remove(names[i]);\n}\n\nfunction classedTrue(names) {\n  return function() {\n    classedAdd(this, names);\n  };\n}\n\nfunction classedFalse(names) {\n  return function() {\n    classedRemove(this, names);\n  };\n}\n\nfunction classedFunction(names, value) {\n  return function() {\n    (value.apply(this, arguments) ? classedAdd : classedRemove)(this, names);\n  };\n}\n\nexport default function(name, value) {\n  var names = classArray(name + \"\");\n\n  if (arguments.length < 2) {\n    var list = classList(this.node()), i = -1, n = names.length;\n    while (++i < n) if (!list.contains(names[i])) return false;\n    return true;\n  }\n\n  return this.each((typeof value === \"function\"\n      ? classedFunction : value\n      ? classedTrue\n      : classedFalse)(names, value));\n}\n","function textRemove() {\n  this.textContent = \"\";\n}\n\nfunction textConstant(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.textContent = v == null ? \"\" : v;\n  };\n}\n\nexport default function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? textRemove : (typeof value === \"function\"\n          ? textFunction\n          : textConstant)(value))\n      : this.node().textContent;\n}\n","function htmlRemove() {\n  this.innerHTML = \"\";\n}\n\nfunction htmlConstant(value) {\n  return function() {\n    this.innerHTML = value;\n  };\n}\n\nfunction htmlFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.innerHTML = v == null ? \"\" : v;\n  };\n}\n\nexport default function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? htmlRemove : (typeof value === \"function\"\n          ? htmlFunction\n          : htmlConstant)(value))\n      : this.node().innerHTML;\n}\n","function raise() {\n  if (this.nextSibling) this.parentNode.appendChild(this);\n}\n\nexport default function() {\n  return this.each(raise);\n}\n","function lower() {\n  if (this.previousSibling) this.parentNode.insertBefore(this, this.parentNode.firstChild);\n}\n\nexport default function() {\n  return this.each(lower);\n}\n","import creator from \"../creator\";\nimport selector from \"../selector\";\n\nfunction constantNull() {\n  return null;\n}\n\nexport default function(name, before) {\n  var create = typeof name === \"function\" ? name : creator(name),\n      select = before == null ? constantNull : typeof before === \"function\" ? before : selector(before);\n  return this.select(function() {\n    return this.insertBefore(create.apply(this, arguments), select.apply(this, arguments) || null);\n  });\n}\n","function remove() {\n  var parent = this.parentNode;\n  if (parent) parent.removeChild(this);\n}\n\nexport default function() {\n  return this.each(remove);\n}\n","function selection_cloneShallow() {\n  return this.parentNode.insertBefore(this.cloneNode(false), this.nextSibling);\n}\n\nfunction selection_cloneDeep() {\n  return this.parentNode.insertBefore(this.cloneNode(true), this.nextSibling);\n}\n\nexport default function(deep) {\n  return this.select(deep ? selection_cloneDeep : selection_cloneShallow);\n}\n","var filterEvents = {};\n\nexport var event = null;\n\nif (typeof document !== \"undefined\") {\n  var element = document.documentElement;\n  if (!(\"onmouseenter\" in element)) {\n    filterEvents = {mouseenter: \"mouseover\", mouseleave: \"mouseout\"};\n  }\n}\n\nfunction filterContextListener(listener, index, group) {\n  listener = contextListener(listener, index, group);\n  return function(event) {\n    var related = event.relatedTarget;\n    if (!related || (related !== this && !(related.compareDocumentPosition(this) & 8))) {\n      listener.call(this, event);\n    }\n  };\n}\n\nfunction contextListener(listener, index, group) {\n  return function(event1) {\n    var event0 = event; // Events can be reentrant (e.g., focus).\n    event = event1;\n    try {\n      listener.call(this, this.__data__, index, group);\n    } finally {\n      event = event0;\n    }\n  };\n}\n\nfunction parseTypenames(typenames) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    return {type: t, name: name};\n  });\n}\n\nfunction onRemove(typename) {\n  return function() {\n    var on = this.__on;\n    if (!on) return;\n    for (var j = 0, i = -1, m = on.length, o; j < m; ++j) {\n      if (o = on[j], (!typename.type || o.type === typename.type) && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n      } else {\n        on[++i] = o;\n      }\n    }\n    if (++i) on.length = i;\n    else delete this.__on;\n  };\n}\n\nfunction onAdd(typename, value, capture) {\n  var wrap = filterEvents.hasOwnProperty(typename.type) ? filterContextListener : contextListener;\n  return function(d, i, group) {\n    var on = this.__on, o, listener = wrap(value, i, group);\n    if (on) for (var j = 0, m = on.length; j < m; ++j) {\n      if ((o = on[j]).type === typename.type && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n        this.addEventListener(o.type, o.listener = listener, o.capture = capture);\n        o.value = value;\n        return;\n      }\n    }\n    this.addEventListener(typename.type, listener, capture);\n    o = {type: typename.type, name: typename.name, value: value, listener: listener, capture: capture};\n    if (!on) this.__on = [o];\n    else on.push(o);\n  };\n}\n\nexport default function(typename, value, capture) {\n  var typenames = parseTypenames(typename + \"\"), i, n = typenames.length, t;\n\n  if (arguments.length < 2) {\n    var on = this.node().__on;\n    if (on) for (var j = 0, m = on.length, o; j < m; ++j) {\n      for (i = 0, o = on[j]; i < n; ++i) {\n        if ((t = typenames[i]).type === o.type && t.name === o.name) {\n          return o.value;\n        }\n      }\n    }\n    return;\n  }\n\n  on = value ? onAdd : onRemove;\n  if (capture == null) capture = false;\n  for (i = 0; i < n; ++i) this.each(on(typenames[i], value, capture));\n  return this;\n}\n\nexport function customEvent(event1, listener, that, args) {\n  var event0 = event;\n  event1.sourceEvent = event;\n  event = event1;\n  try {\n    return listener.apply(that, args);\n  } finally {\n    event = event0;\n  }\n}\n","import defaultView from \"../window\";\n\nfunction dispatchEvent(node, type, params) {\n  var window = defaultView(node),\n      event = window.CustomEvent;\n\n  if (typeof event === \"function\") {\n    event = new event(type, params);\n  } else {\n    event = window.document.createEvent(\"Event\");\n    if (params) event.initEvent(type, params.bubbles, params.cancelable), event.detail = params.detail;\n    else event.initEvent(type, false, false);\n  }\n\n  node.dispatchEvent(event);\n}\n\nfunction dispatchConstant(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params);\n  };\n}\n\nfunction dispatchFunction(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params.apply(this, arguments));\n  };\n}\n\nexport default function(type, params) {\n  return this.each((typeof params === \"function\"\n      ? dispatchFunction\n      : dispatchConstant)(type, params));\n}\n","import selection_select from \"./select\";\nimport selection_selectAll from \"./selectAll\";\nimport selection_filter from \"./filter\";\nimport selection_data from \"./data\";\nimport selection_enter from \"./enter\";\nimport selection_exit from \"./exit\";\nimport selection_merge from \"./merge\";\nimport selection_order from \"./order\";\nimport selection_sort from \"./sort\";\nimport selection_call from \"./call\";\nimport selection_nodes from \"./nodes\";\nimport selection_node from \"./node\";\nimport selection_size from \"./size\";\nimport selection_empty from \"./empty\";\nimport selection_each from \"./each\";\nimport selection_attr from \"./attr\";\nimport selection_style from \"./style\";\nimport selection_property from \"./property\";\nimport selection_classed from \"./classed\";\nimport selection_text from \"./text\";\nimport selection_html from \"./html\";\nimport selection_raise from \"./raise\";\nimport selection_lower from \"./lower\";\nimport selection_append from \"./append\";\nimport selection_insert from \"./insert\";\nimport selection_remove from \"./remove\";\nimport selection_clone from \"./clone\";\nimport selection_datum from \"./datum\";\nimport selection_on from \"./on\";\nimport selection_dispatch from \"./dispatch\";\n\nexport var root = [null];\n\nexport function Selection(groups, parents) {\n  this._groups = groups;\n  this._parents = parents;\n}\n\nfunction selection() {\n  return new Selection([[document.documentElement]], root);\n}\n\nSelection.prototype = selection.prototype = {\n  constructor: Selection,\n  select: selection_select,\n  selectAll: selection_selectAll,\n  filter: selection_filter,\n  data: selection_data,\n  enter: selection_enter,\n  exit: selection_exit,\n  merge: selection_merge,\n  order: selection_order,\n  sort: selection_sort,\n  call: selection_call,\n  nodes: selection_nodes,\n  node: selection_node,\n  size: selection_size,\n  empty: selection_empty,\n  each: selection_each,\n  attr: selection_attr,\n  style: selection_style,\n  property: selection_property,\n  classed: selection_classed,\n  text: selection_text,\n  html: selection_html,\n  raise: selection_raise,\n  lower: selection_lower,\n  append: selection_append,\n  insert: selection_insert,\n  remove: selection_remove,\n  clone: selection_clone,\n  datum: selection_datum,\n  on: selection_on,\n  dispatch: selection_dispatch\n};\n\nexport default selection;\n","import {Selection} from \"./index\";\nimport selector from \"../selector\";\n\nexport default function(select) {\n  if (typeof select !== \"function\") select = selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n}\n","import {Selection} from \"./index\";\nimport selectorAll from \"../selectorAll\";\n\nexport default function(select) {\n  if (typeof select !== \"function\") select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        subgroups.push(select.call(node, node.__data__, i, group));\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, parents);\n}\n","import {Selection} from \"./index\";\nimport matcher from \"../matcher\";\n\nexport default function(match) {\n  if (typeof match !== \"function\") match = matcher(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n}\n","import sparse from \"./sparse\";\nimport {Selection} from \"./index\";\n\nexport default function() {\n  return new Selection(this._exit || this._groups.map(sparse), this._parents);\n}\n","import {Selection} from \"./index\";\n\nexport default function(selection) {\n\n  for (var groups0 = this._groups, groups1 = selection._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Selection(merges, this._parents);\n}\n","export default function() {\n\n  for (var groups = this._groups, j = -1, m = groups.length; ++j < m;) {\n    for (var group = groups[j], i = group.length - 1, next = group[i], node; --i >= 0;) {\n      if (node = group[i]) {\n        if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n        next = node;\n      }\n    }\n  }\n\n  return this;\n}\n","export default function() {\n  var callback = arguments[0];\n  arguments[0] = this;\n  callback.apply(null, arguments);\n  return this;\n}\n","export default function() {\n  var nodes = new Array(this.size()), i = -1;\n  this.each(function() { nodes[++i] = this; });\n  return nodes;\n}\n","export default function() {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length; i < n; ++i) {\n      var node = group[i];\n      if (node) return node;\n    }\n  }\n\n  return null;\n}\n","export default function() {\n  var size = 0;\n  this.each(function() { ++size; });\n  return size;\n}\n","export default function() {\n  return !this.node();\n}\n","export default function(callback) {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {\n      if (node = group[i]) callback.call(node, node.__data__, i, group);\n    }\n  }\n\n  return this;\n}\n","function propertyRemove(name) {\n  return function() {\n    delete this[name];\n  };\n}\n\nfunction propertyConstant(name, value) {\n  return function() {\n    this[name] = value;\n  };\n}\n\nfunction propertyFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) delete this[name];\n    else this[name] = v;\n  };\n}\n\nexport default function(name, value) {\n  return arguments.length > 1\n      ? this.each((value == null\n          ? propertyRemove : typeof value === \"function\"\n          ? propertyFunction\n          : propertyConstant)(name, value))\n      : this.node()[name];\n}\n","import creator from \"../creator\";\n\nexport default function(name) {\n  var create = typeof name === \"function\" ? name : creator(name);\n  return this.select(function() {\n    return this.appendChild(create.apply(this, arguments));\n  });\n}\n","export default function(value) {\n  return arguments.length\n      ? this.property(\"__data__\", value)\n      : this.node().__data__;\n}\n","import {Selection, root} from \"./selection/index\";\n\nexport default function(selector) {\n  return typeof selector === \"string\"\n      ? new Selection([[document.querySelector(selector)]], [document.documentElement])\n      : new Selection([[selector]], root);\n}\n","import creator from \"./creator\";\nimport select from \"./select\";\n\nexport default function(name) {\n  return select(creator(name).call(document.documentElement));\n}\n","var nextId = 0;\n\nexport default function local() {\n  return new Local;\n}\n\nfunction Local() {\n  this._ = \"@\" + (++nextId).toString(36);\n}\n\nLocal.prototype = local.prototype = {\n  constructor: Local,\n  get: function(node) {\n    var id = this._;\n    while (!(id in node)) if (!(node = node.parentNode)) return;\n    return node[id];\n  },\n  set: function(node, value) {\n    return node[this._] = value;\n  },\n  remove: function(node) {\n    return this._ in node && delete node[this._];\n  },\n  toString: function() {\n    return this._;\n  }\n};\n","import {event} from \"./selection/on\";\n\nexport default function() {\n  var current = event, source;\n  while (source = current.sourceEvent) current = source;\n  return current;\n}\n","export default function(node, event) {\n  var svg = node.ownerSVGElement || node;\n\n  if (svg.createSVGPoint) {\n    var point = svg.createSVGPoint();\n    point.x = event.clientX, point.y = event.clientY;\n    point = point.matrixTransform(node.getScreenCTM().inverse());\n    return [point.x, point.y];\n  }\n\n  var rect = node.getBoundingClientRect();\n  return [event.clientX - rect.left - node.clientLeft, event.clientY - rect.top - node.clientTop];\n}\n","import sourceEvent from \"./sourceEvent\";\nimport point from \"./point\";\n\nexport default function(node) {\n  var event = sourceEvent();\n  if (event.changedTouches) event = event.changedTouches[0];\n  return point(node, event);\n}\n","import {Selection, root} from \"./selection/index\";\n\nexport default function(selector) {\n  return typeof selector === \"string\"\n      ? new Selection([document.querySelectorAll(selector)], [document.documentElement])\n      : new Selection([selector == null ? [] : selector], root);\n}\n","import sourceEvent from \"./sourceEvent\";\nimport point from \"./point\";\n\nexport default function(node, touches, identifier) {\n  if (arguments.length < 3) identifier = touches, touches = sourceEvent().changedTouches;\n\n  for (var i = 0, n = touches ? touches.length : 0, touch; i < n; ++i) {\n    if ((touch = touches[i]).identifier === identifier) {\n      return point(node, touch);\n    }\n  }\n\n  return null;\n}\n","import sourceEvent from \"./sourceEvent\";\nimport point from \"./point\";\n\nexport default function(node, touches) {\n  if (touches == null) touches = sourceEvent().touches;\n\n  for (var i = 0, n = touches ? touches.length : 0, points = new Array(n); i < n; ++i) {\n    points[i] = point(node, touches[i]);\n  }\n\n  return points;\n}\n","import {event} from \"d3-selection\";\n\nexport function nopropagation() {\n  event.stopImmediatePropagation();\n}\n\nexport default function() {\n  event.preventDefault();\n  event.stopImmediatePropagation();\n}\n","import {select} from \"d3-selection\";\nimport noevent from \"./noevent\";\n\nexport default function(view) {\n  var root = view.document.documentElement,\n      selection = select(view).on(\"dragstart.drag\", noevent, true);\n  if (\"onselectstart\" in root) {\n    selection.on(\"selectstart.drag\", noevent, true);\n  } else {\n    root.__noselect = root.style.MozUserSelect;\n    root.style.MozUserSelect = \"none\";\n  }\n}\n\nexport function yesdrag(view, noclick) {\n  var root = view.document.documentElement,\n      selection = select(view).on(\"dragstart.drag\", null);\n  if (noclick) {\n    selection.on(\"click.drag\", noevent, true);\n    setTimeout(function() { selection.on(\"click.drag\", null); }, 0);\n  }\n  if (\"onselectstart\" in root) {\n    selection.on(\"selectstart.drag\", null);\n  } else {\n    root.style.MozUserSelect = root.__noselect;\n    delete root.__noselect;\n  }\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function DragEvent(target, type, subject, id, active, x, y, dx, dy, dispatch) {\n  this.target = target;\n  this.type = type;\n  this.subject = subject;\n  this.identifier = id;\n  this.active = active;\n  this.x = x;\n  this.y = y;\n  this.dx = dx;\n  this.dy = dy;\n  this._ = dispatch;\n}\n\nDragEvent.prototype.on = function() {\n  var value = this._.on.apply(this._, arguments);\n  return value === this._ ? this : value;\n};\n","import {dispatch} from \"d3-dispatch\";\nimport {event, customEvent, select, mouse, touch} from \"d3-selection\";\nimport nodrag, {yesdrag} from \"./nodrag\";\nimport noevent, {nopropagation} from \"./noevent\";\nimport constant from \"./constant\";\nimport DragEvent from \"./event\";\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter() {\n  return !event.button;\n}\n\nfunction defaultContainer() {\n  return this.parentNode;\n}\n\nfunction defaultSubject(d) {\n  return d == null ? {x: event.x, y: event.y} : d;\n}\n\nfunction defaultTouchable() {\n  return \"ontouchstart\" in this;\n}\n\nexport default function() {\n  var filter = defaultFilter,\n      container = defaultContainer,\n      subject = defaultSubject,\n      touchable = defaultTouchable,\n      gestures = {},\n      listeners = dispatch(\"start\", \"drag\", \"end\"),\n      active = 0,\n      mousedownx,\n      mousedowny,\n      mousemoving,\n      touchending,\n      clickDistance2 = 0;\n\n  function drag(selection) {\n    selection\n        .on(\"mousedown.drag\", mousedowned)\n      .filter(touchable)\n        .on(\"touchstart.drag\", touchstarted)\n        .on(\"touchmove.drag\", touchmoved)\n        .on(\"touchend.drag touchcancel.drag\", touchended)\n        .style(\"touch-action\", \"none\")\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n  }\n\n  function mousedowned() {\n    if (touchending || !filter.apply(this, arguments)) return;\n    var gesture = beforestart(\"mouse\", container.apply(this, arguments), mouse, this, arguments);\n    if (!gesture) return;\n    select(event.view).on(\"mousemove.drag\", mousemoved, true).on(\"mouseup.drag\", mouseupped, true);\n    nodrag(event.view);\n    nopropagation();\n    mousemoving = false;\n    mousedownx = event.clientX;\n    mousedowny = event.clientY;\n    gesture(\"start\");\n  }\n\n  function mousemoved() {\n    noevent();\n    if (!mousemoving) {\n      var dx = event.clientX - mousedownx, dy = event.clientY - mousedowny;\n      mousemoving = dx * dx + dy * dy > clickDistance2;\n    }\n    gestures.mouse(\"drag\");\n  }\n\n  function mouseupped() {\n    select(event.view).on(\"mousemove.drag mouseup.drag\", null);\n    yesdrag(event.view, mousemoving);\n    noevent();\n    gestures.mouse(\"end\");\n  }\n\n  function touchstarted() {\n    if (!filter.apply(this, arguments)) return;\n    var touches = event.changedTouches,\n        c = container.apply(this, arguments),\n        n = touches.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = beforestart(touches[i].identifier, c, touch, this, arguments)) {\n        nopropagation();\n        gesture(\"start\");\n      }\n    }\n  }\n\n  function touchmoved() {\n    var touches = event.changedTouches,\n        n = touches.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches[i].identifier]) {\n        noevent();\n        gesture(\"drag\");\n      }\n    }\n  }\n\n  function touchended() {\n    var touches = event.changedTouches,\n        n = touches.length, i, gesture;\n\n    if (touchending) clearTimeout(touchending);\n    touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches[i].identifier]) {\n        nopropagation();\n        gesture(\"end\");\n      }\n    }\n  }\n\n  function beforestart(id, container, point, that, args) {\n    var p = point(container, id), s, dx, dy,\n        sublisteners = listeners.copy();\n\n    if (!customEvent(new DragEvent(drag, \"beforestart\", s, id, active, p[0], p[1], 0, 0, sublisteners), function() {\n      if ((event.subject = s = subject.apply(that, args)) == null) return false;\n      dx = s.x - p[0] || 0;\n      dy = s.y - p[1] || 0;\n      return true;\n    })) return;\n\n    return function gesture(type) {\n      var p0 = p, n;\n      switch (type) {\n        case \"start\": gestures[id] = gesture, n = active++; break;\n        case \"end\": delete gestures[id], --active; // nobreak\n        case \"drag\": p = point(container, id), n = active; break;\n      }\n      customEvent(new DragEvent(drag, type, s, id, n, p[0] + dx, p[1] + dy, p[0] - p0[0], p[1] - p0[1], sublisteners), sublisteners.apply, sublisteners, [type, that, args]);\n    };\n  }\n\n  drag.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant(!!_), drag) : filter;\n  };\n\n  drag.container = function(_) {\n    return arguments.length ? (container = typeof _ === \"function\" ? _ : constant(_), drag) : container;\n  };\n\n  drag.subject = function(_) {\n    return arguments.length ? (subject = typeof _ === \"function\" ? _ : constant(_), drag) : subject;\n  };\n\n  drag.touchable = function(_) {\n    return arguments.length ? (touchable = typeof _ === \"function\" ? _ : constant(!!_), drag) : touchable;\n  };\n\n  drag.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? drag : value;\n  };\n\n  drag.clickDistance = function(_) {\n    return arguments.length ? (clickDistance2 = (_ = +_) * _, drag) : Math.sqrt(clickDistance2);\n  };\n\n  return drag;\n}\n","export default function(constructor, factory, prototype) {\n  constructor.prototype = factory.prototype = prototype;\n  prototype.constructor = constructor;\n}\n\nexport function extend(parent, definition) {\n  var prototype = Object.create(parent.prototype);\n  for (var key in definition) prototype[key] = definition[key];\n  return prototype;\n}\n","import define, {extend} from \"./define\";\n\nexport function Color() {}\n\nexport var darker = 0.7;\nexport var brighter = 1 / darker;\n\nvar reI = \"\\\\s*([+-]?\\\\d+)\\\\s*\",\n    reN = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)\\\\s*\",\n    reP = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)%\\\\s*\",\n    reHex3 = /^#([0-9a-f]{3})$/,\n    reHex6 = /^#([0-9a-f]{6})$/,\n    reRgbInteger = new RegExp(\"^rgb\\\\(\" + [reI, reI, reI] + \"\\\\)$\"),\n    reRgbPercent = new RegExp(\"^rgb\\\\(\" + [reP, reP, reP] + \"\\\\)$\"),\n    reRgbaInteger = new RegExp(\"^rgba\\\\(\" + [reI, reI, reI, reN] + \"\\\\)$\"),\n    reRgbaPercent = new RegExp(\"^rgba\\\\(\" + [reP, reP, reP, reN] + \"\\\\)$\"),\n    reHslPercent = new RegExp(\"^hsl\\\\(\" + [reN, reP, reP] + \"\\\\)$\"),\n    reHslaPercent = new RegExp(\"^hsla\\\\(\" + [reN, reP, reP, reN] + \"\\\\)$\");\n\nvar named = {\n  aliceblue: 0xf0f8ff,\n  antiquewhite: 0xfaebd7,\n  aqua: 0x00ffff,\n  aquamarine: 0x7fffd4,\n  azure: 0xf0ffff,\n  beige: 0xf5f5dc,\n  bisque: 0xffe4c4,\n  black: 0x000000,\n  blanchedalmond: 0xffebcd,\n  blue: 0x0000ff,\n  blueviolet: 0x8a2be2,\n  brown: 0xa52a2a,\n  burlywood: 0xdeb887,\n  cadetblue: 0x5f9ea0,\n  chartreuse: 0x7fff00,\n  chocolate: 0xd2691e,\n  coral: 0xff7f50,\n  cornflowerblue: 0x6495ed,\n  cornsilk: 0xfff8dc,\n  crimson: 0xdc143c,\n  cyan: 0x00ffff,\n  darkblue: 0x00008b,\n  darkcyan: 0x008b8b,\n  darkgoldenrod: 0xb8860b,\n  darkgray: 0xa9a9a9,\n  darkgreen: 0x006400,\n  darkgrey: 0xa9a9a9,\n  darkkhaki: 0xbdb76b,\n  darkmagenta: 0x8b008b,\n  darkolivegreen: 0x556b2f,\n  darkorange: 0xff8c00,\n  darkorchid: 0x9932cc,\n  darkred: 0x8b0000,\n  darksalmon: 0xe9967a,\n  darkseagreen: 0x8fbc8f,\n  darkslateblue: 0x483d8b,\n  darkslategray: 0x2f4f4f,\n  darkslategrey: 0x2f4f4f,\n  darkturquoise: 0x00ced1,\n  darkviolet: 0x9400d3,\n  deeppink: 0xff1493,\n  deepskyblue: 0x00bfff,\n  dimgray: 0x696969,\n  dimgrey: 0x696969,\n  dodgerblue: 0x1e90ff,\n  firebrick: 0xb22222,\n  floralwhite: 0xfffaf0,\n  forestgreen: 0x228b22,\n  fuchsia: 0xff00ff,\n  gainsboro: 0xdcdcdc,\n  ghostwhite: 0xf8f8ff,\n  gold: 0xffd700,\n  goldenrod: 0xdaa520,\n  gray: 0x808080,\n  green: 0x008000,\n  greenyellow: 0xadff2f,\n  grey: 0x808080,\n  honeydew: 0xf0fff0,\n  hotpink: 0xff69b4,\n  indianred: 0xcd5c5c,\n  indigo: 0x4b0082,\n  ivory: 0xfffff0,\n  khaki: 0xf0e68c,\n  lavender: 0xe6e6fa,\n  lavenderblush: 0xfff0f5,\n  lawngreen: 0x7cfc00,\n  lemonchiffon: 0xfffacd,\n  lightblue: 0xadd8e6,\n  lightcoral: 0xf08080,\n  lightcyan: 0xe0ffff,\n  lightgoldenrodyellow: 0xfafad2,\n  lightgray: 0xd3d3d3,\n  lightgreen: 0x90ee90,\n  lightgrey: 0xd3d3d3,\n  lightpink: 0xffb6c1,\n  lightsalmon: 0xffa07a,\n  lightseagreen: 0x20b2aa,\n  lightskyblue: 0x87cefa,\n  lightslategray: 0x778899,\n  lightslategrey: 0x778899,\n  lightsteelblue: 0xb0c4de,\n  lightyellow: 0xffffe0,\n  lime: 0x00ff00,\n  limegreen: 0x32cd32,\n  linen: 0xfaf0e6,\n  magenta: 0xff00ff,\n  maroon: 0x800000,\n  mediumaquamarine: 0x66cdaa,\n  mediumblue: 0x0000cd,\n  mediumorchid: 0xba55d3,\n  mediumpurple: 0x9370db,\n  mediumseagreen: 0x3cb371,\n  mediumslateblue: 0x7b68ee,\n  mediumspringgreen: 0x00fa9a,\n  mediumturquoise: 0x48d1cc,\n  mediumvioletred: 0xc71585,\n  midnightblue: 0x191970,\n  mintcream: 0xf5fffa,\n  mistyrose: 0xffe4e1,\n  moccasin: 0xffe4b5,\n  navajowhite: 0xffdead,\n  navy: 0x000080,\n  oldlace: 0xfdf5e6,\n  olive: 0x808000,\n  olivedrab: 0x6b8e23,\n  orange: 0xffa500,\n  orangered: 0xff4500,\n  orchid: 0xda70d6,\n  palegoldenrod: 0xeee8aa,\n  palegreen: 0x98fb98,\n  paleturquoise: 0xafeeee,\n  palevioletred: 0xdb7093,\n  papayawhip: 0xffefd5,\n  peachpuff: 0xffdab9,\n  peru: 0xcd853f,\n  pink: 0xffc0cb,\n  plum: 0xdda0dd,\n  powderblue: 0xb0e0e6,\n  purple: 0x800080,\n  rebeccapurple: 0x663399,\n  red: 0xff0000,\n  rosybrown: 0xbc8f8f,\n  royalblue: 0x4169e1,\n  saddlebrown: 0x8b4513,\n  salmon: 0xfa8072,\n  sandybrown: 0xf4a460,\n  seagreen: 0x2e8b57,\n  seashell: 0xfff5ee,\n  sienna: 0xa0522d,\n  silver: 0xc0c0c0,\n  skyblue: 0x87ceeb,\n  slateblue: 0x6a5acd,\n  slategray: 0x708090,\n  slategrey: 0x708090,\n  snow: 0xfffafa,\n  springgreen: 0x00ff7f,\n  steelblue: 0x4682b4,\n  tan: 0xd2b48c,\n  teal: 0x008080,\n  thistle: 0xd8bfd8,\n  tomato: 0xff6347,\n  turquoise: 0x40e0d0,\n  violet: 0xee82ee,\n  wheat: 0xf5deb3,\n  white: 0xffffff,\n  whitesmoke: 0xf5f5f5,\n  yellow: 0xffff00,\n  yellowgreen: 0x9acd32\n};\n\ndefine(Color, color, {\n  displayable: function() {\n    return this.rgb().displayable();\n  },\n  hex: function() {\n    return this.rgb().hex();\n  },\n  toString: function() {\n    return this.rgb() + \"\";\n  }\n});\n\nexport default function color(format) {\n  var m;\n  format = (format + \"\").trim().toLowerCase();\n  return (m = reHex3.exec(format)) ? (m = parseInt(m[1], 16), new Rgb((m >> 8 & 0xf) | (m >> 4 & 0x0f0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1)) // #f00\n      : (m = reHex6.exec(format)) ? rgbn(parseInt(m[1], 16)) // #ff0000\n      : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\n      : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)\n      : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\n      : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)\n      : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\n      : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\n      : named.hasOwnProperty(format) ? rgbn(named[format])\n      : format === \"transparent\" ? new Rgb(NaN, NaN, NaN, 0)\n      : null;\n}\n\nfunction rgbn(n) {\n  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);\n}\n\nfunction rgba(r, g, b, a) {\n  if (a <= 0) r = g = b = NaN;\n  return new Rgb(r, g, b, a);\n}\n\nexport function rgbConvert(o) {\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Rgb;\n  o = o.rgb();\n  return new Rgb(o.r, o.g, o.b, o.opacity);\n}\n\nexport function rgb(r, g, b, opacity) {\n  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);\n}\n\nexport function Rgb(r, g, b, opacity) {\n  this.r = +r;\n  this.g = +g;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Rgb, rgb, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  rgb: function() {\n    return this;\n  },\n  displayable: function() {\n    return (0 <= this.r && this.r <= 255)\n        && (0 <= this.g && this.g <= 255)\n        && (0 <= this.b && this.b <= 255)\n        && (0 <= this.opacity && this.opacity <= 1);\n  },\n  hex: function() {\n    return \"#\" + hex(this.r) + hex(this.g) + hex(this.b);\n  },\n  toString: function() {\n    var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n    return (a === 1 ? \"rgb(\" : \"rgba(\")\n        + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.b) || 0))\n        + (a === 1 ? \")\" : \", \" + a + \")\");\n  }\n}));\n\nfunction hex(value) {\n  value = Math.max(0, Math.min(255, Math.round(value) || 0));\n  return (value < 16 ? \"0\" : \"\") + value.toString(16);\n}\n\nfunction hsla(h, s, l, a) {\n  if (a <= 0) h = s = l = NaN;\n  else if (l <= 0 || l >= 1) h = s = NaN;\n  else if (s <= 0) h = NaN;\n  return new Hsl(h, s, l, a);\n}\n\nexport function hslConvert(o) {\n  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Hsl;\n  if (o instanceof Hsl) return o;\n  o = o.rgb();\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      h = NaN,\n      s = max - min,\n      l = (max + min) / 2;\n  if (s) {\n    if (r === max) h = (g - b) / s + (g < b) * 6;\n    else if (g === max) h = (b - r) / s + 2;\n    else h = (r - g) / s + 4;\n    s /= l < 0.5 ? max + min : 2 - max - min;\n    h *= 60;\n  } else {\n    s = l > 0 && l < 1 ? 0 : h;\n  }\n  return new Hsl(h, s, l, o.opacity);\n}\n\nexport function hsl(h, s, l, opacity) {\n  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hsl(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hsl, hsl, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = this.h % 360 + (this.h < 0) * 360,\n        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n        l = this.l,\n        m2 = l + (l < 0.5 ? l : 1 - l) * s,\n        m1 = 2 * l - m2;\n    return new Rgb(\n      hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),\n      hsl2rgb(h, m1, m2),\n      hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),\n      this.opacity\n    );\n  },\n  displayable: function() {\n    return (0 <= this.s && this.s <= 1 || isNaN(this.s))\n        && (0 <= this.l && this.l <= 1)\n        && (0 <= this.opacity && this.opacity <= 1);\n  }\n}));\n\n/* From FvD 13.37, CSS Color Module Level 3 */\nfunction hsl2rgb(h, m1, m2) {\n  return (h < 60 ? m1 + (m2 - m1) * h / 60\n      : h < 180 ? m2\n      : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60\n      : m1) * 255;\n}\n","export var deg2rad = Math.PI / 180;\nexport var rad2deg = 180 / Math.PI;\n","import define, {extend} from \"./define\";\nimport {Color, rgbConvert, Rgb} from \"./color\";\nimport {deg2rad, rad2deg} from \"./math\";\n\n// https://beta.observablehq.com/@mbostock/lab-and-rgb\nvar K = 18,\n    Xn = 0.96422,\n    Yn = 1,\n    Zn = 0.82521,\n    t0 = 4 / 29,\n    t1 = 6 / 29,\n    t2 = 3 * t1 * t1,\n    t3 = t1 * t1 * t1;\n\nfunction labConvert(o) {\n  if (o instanceof Lab) return new Lab(o.l, o.a, o.b, o.opacity);\n  if (o instanceof Hcl) {\n    if (isNaN(o.h)) return new Lab(o.l, 0, 0, o.opacity);\n    var h = o.h * deg2rad;\n    return new Lab(o.l, Math.cos(h) * o.c, Math.sin(h) * o.c, o.opacity);\n  }\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = rgb2lrgb(o.r),\n      g = rgb2lrgb(o.g),\n      b = rgb2lrgb(o.b),\n      y = xyz2lab((0.2225045 * r + 0.7168786 * g + 0.0606169 * b) / Yn), x, z;\n  if (r === g && g === b) x = z = y; else {\n    x = xyz2lab((0.4360747 * r + 0.3850649 * g + 0.1430804 * b) / Xn);\n    z = xyz2lab((0.0139322 * r + 0.0971045 * g + 0.7141733 * b) / Zn);\n  }\n  return new Lab(116 * y - 16, 500 * (x - y), 200 * (y - z), o.opacity);\n}\n\nexport function gray(l, opacity) {\n  return new Lab(l, 0, 0, opacity == null ? 1 : opacity);\n}\n\nexport default function lab(l, a, b, opacity) {\n  return arguments.length === 1 ? labConvert(l) : new Lab(l, a, b, opacity == null ? 1 : opacity);\n}\n\nexport function Lab(l, a, b, opacity) {\n  this.l = +l;\n  this.a = +a;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Lab, lab, extend(Color, {\n  brighter: function(k) {\n    return new Lab(this.l + K * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  darker: function(k) {\n    return new Lab(this.l - K * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  rgb: function() {\n    var y = (this.l + 16) / 116,\n        x = isNaN(this.a) ? y : y + this.a / 500,\n        z = isNaN(this.b) ? y : y - this.b / 200;\n    x = Xn * lab2xyz(x);\n    y = Yn * lab2xyz(y);\n    z = Zn * lab2xyz(z);\n    return new Rgb(\n      lrgb2rgb( 3.1338561 * x - 1.6168667 * y - 0.4906146 * z),\n      lrgb2rgb(-0.9787684 * x + 1.9161415 * y + 0.0334540 * z),\n      lrgb2rgb( 0.0719453 * x - 0.2289914 * y + 1.4052427 * z),\n      this.opacity\n    );\n  }\n}));\n\nfunction xyz2lab(t) {\n  return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;\n}\n\nfunction lab2xyz(t) {\n  return t > t1 ? t * t * t : t2 * (t - t0);\n}\n\nfunction lrgb2rgb(x) {\n  return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\n}\n\nfunction rgb2lrgb(x) {\n  return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n}\n\nfunction hclConvert(o) {\n  if (o instanceof Hcl) return new Hcl(o.h, o.c, o.l, o.opacity);\n  if (!(o instanceof Lab)) o = labConvert(o);\n  if (o.a === 0 && o.b === 0) return new Hcl(NaN, 0, o.l, o.opacity);\n  var h = Math.atan2(o.b, o.a) * rad2deg;\n  return new Hcl(h < 0 ? h + 360 : h, Math.sqrt(o.a * o.a + o.b * o.b), o.l, o.opacity);\n}\n\nexport function lch(l, c, h, opacity) {\n  return arguments.length === 1 ? hclConvert(l) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\n\nexport function hcl(h, c, l, opacity) {\n  return arguments.length === 1 ? hclConvert(h) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\n\nexport function Hcl(h, c, l, opacity) {\n  this.h = +h;\n  this.c = +c;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hcl, hcl, extend(Color, {\n  brighter: function(k) {\n    return new Hcl(this.h, this.c, this.l + K * (k == null ? 1 : k), this.opacity);\n  },\n  darker: function(k) {\n    return new Hcl(this.h, this.c, this.l - K * (k == null ? 1 : k), this.opacity);\n  },\n  rgb: function() {\n    return labConvert(this).rgb();\n  }\n}));\n","import define, {extend} from \"./define\";\nimport {Color, rgbConvert, Rgb, darker, brighter} from \"./color\";\nimport {deg2rad, rad2deg} from \"./math\";\n\nvar A = -0.14861,\n    B = +1.78277,\n    C = -0.29227,\n    D = -0.90649,\n    E = +1.97294,\n    ED = E * D,\n    EB = E * B,\n    BC_DA = B * C - D * A;\n\nfunction cubehelixConvert(o) {\n  if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB),\n      bl = b - l,\n      k = (E * (g - l) - C * bl) / D,\n      s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)), // NaN if l=0 or l=1\n      h = s ? Math.atan2(k, bl) * rad2deg - 120 : NaN;\n  return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);\n}\n\nexport default function cubehelix(h, s, l, opacity) {\n  return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);\n}\n\nexport function Cubehelix(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Cubehelix, cubehelix, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = isNaN(this.h) ? 0 : (this.h + 120) * deg2rad,\n        l = +this.l,\n        a = isNaN(this.s) ? 0 : this.s * l * (1 - l),\n        cosh = Math.cos(h),\n        sinh = Math.sin(h);\n    return new Rgb(\n      255 * (l + a * (A * cosh + B * sinh)),\n      255 * (l + a * (C * cosh + D * sinh)),\n      255 * (l + a * (E * cosh)),\n      this.opacity\n    );\n  }\n}));\n","export function basis(t1, v0, v1, v2, v3) {\n  var t2 = t1 * t1, t3 = t2 * t1;\n  return ((1 - 3 * t1 + 3 * t2 - t3) * v0\n      + (4 - 6 * t2 + 3 * t3) * v1\n      + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2\n      + t3 * v3) / 6;\n}\n\nexport default function(values) {\n  var n = values.length - 1;\n  return function(t) {\n    var i = t <= 0 ? (t = 0) : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),\n        v1 = values[i],\n        v2 = values[i + 1],\n        v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,\n        v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n}\n","import {basis} from \"./basis\";\n\nexport default function(values) {\n  var n = values.length;\n  return function(t) {\n    var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n),\n        v0 = values[(i + n - 1) % n],\n        v1 = values[i % n],\n        v2 = values[(i + 1) % n],\n        v3 = values[(i + 2) % n];\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","import constant from \"./constant\";\n\nfunction linear(a, d) {\n  return function(t) {\n    return a + t * d;\n  };\n}\n\nfunction exponential(a, b, y) {\n  return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function(t) {\n    return Math.pow(a + t * b, y);\n  };\n}\n\nexport function hue(a, b) {\n  var d = b - a;\n  return d ? linear(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : constant(isNaN(a) ? b : a);\n}\n\nexport function gamma(y) {\n  return (y = +y) === 1 ? nogamma : function(a, b) {\n    return b - a ? exponential(a, b, y) : constant(isNaN(a) ? b : a);\n  };\n}\n\nexport default function nogamma(a, b) {\n  var d = b - a;\n  return d ? linear(a, d) : constant(isNaN(a) ? b : a);\n}\n","import {rgb as colorRgb} from \"d3-color\";\nimport basis from \"./basis\";\nimport basisClosed from \"./basisClosed\";\nimport nogamma, {gamma} from \"./color\";\n\nexport default (function rgbGamma(y) {\n  var color = gamma(y);\n\n  function rgb(start, end) {\n    var r = color((start = colorRgb(start)).r, (end = colorRgb(end)).r),\n        g = color(start.g, end.g),\n        b = color(start.b, end.b),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.r = r(t);\n      start.g = g(t);\n      start.b = b(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n\n  rgb.gamma = rgbGamma;\n\n  return rgb;\n})(1);\n\nfunction rgbSpline(spline) {\n  return function(colors) {\n    var n = colors.length,\n        r = new Array(n),\n        g = new Array(n),\n        b = new Array(n),\n        i, color;\n    for (i = 0; i < n; ++i) {\n      color = colorRgb(colors[i]);\n      r[i] = color.r || 0;\n      g[i] = color.g || 0;\n      b[i] = color.b || 0;\n    }\n    r = spline(r);\n    g = spline(g);\n    b = spline(b);\n    color.opacity = 1;\n    return function(t) {\n      color.r = r(t);\n      color.g = g(t);\n      color.b = b(t);\n      return color + \"\";\n    };\n  };\n}\n\nexport var rgbBasis = rgbSpline(basis);\nexport var rgbBasisClosed = rgbSpline(basisClosed);\n","import value from \"./value\";\n\nexport default function(a, b) {\n  var nb = b ? b.length : 0,\n      na = a ? Math.min(nb, a.length) : 0,\n      x = new Array(na),\n      c = new Array(nb),\n      i;\n\n  for (i = 0; i < na; ++i) x[i] = value(a[i], b[i]);\n  for (; i < nb; ++i) c[i] = b[i];\n\n  return function(t) {\n    for (i = 0; i < na; ++i) c[i] = x[i](t);\n    return c;\n  };\n}\n","export default function(a, b) {\n  var d = new Date;\n  return a = +a, b -= a, function(t) {\n    return d.setTime(a + b * t), d;\n  };\n}\n","export default function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return a + b * t;\n  };\n}\n","import value from \"./value\";\n\nexport default function(a, b) {\n  var i = {},\n      c = {},\n      k;\n\n  if (a === null || typeof a !== \"object\") a = {};\n  if (b === null || typeof b !== \"object\") b = {};\n\n  for (k in b) {\n    if (k in a) {\n      i[k] = value(a[k], b[k]);\n    } else {\n      c[k] = b[k];\n    }\n  }\n\n  return function(t) {\n    for (k in i) c[k] = i[k](t);\n    return c;\n  };\n}\n","import number from \"./number\";\n\nvar reA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g,\n    reB = new RegExp(reA.source, \"g\");\n\nfunction zero(b) {\n  return function() {\n    return b;\n  };\n}\n\nfunction one(b) {\n  return function(t) {\n    return b(t) + \"\";\n  };\n}\n\nexport default function(a, b) {\n  var bi = reA.lastIndex = reB.lastIndex = 0, // scan index for next number in b\n      am, // current match in a\n      bm, // current match in b\n      bs, // string preceding current number in b, if any\n      i = -1, // index in s\n      s = [], // string constants and placeholders\n      q = []; // number interpolators\n\n  // Coerce inputs to strings.\n  a = a + \"\", b = b + \"\";\n\n  // Interpolate pairs of numbers in a & b.\n  while ((am = reA.exec(a))\n      && (bm = reB.exec(b))) {\n    if ((bs = bm.index) > bi) { // a string precedes the next number in b\n      bs = b.slice(bi, bs);\n      if (s[i]) s[i] += bs; // coalesce with previous string\n      else s[++i] = bs;\n    }\n    if ((am = am[0]) === (bm = bm[0])) { // numbers in a & b match\n      if (s[i]) s[i] += bm; // coalesce with previous string\n      else s[++i] = bm;\n    } else { // interpolate non-matching numbers\n      s[++i] = null;\n      q.push({i: i, x: number(am, bm)});\n    }\n    bi = reB.lastIndex;\n  }\n\n  // Add remains of b.\n  if (bi < b.length) {\n    bs = b.slice(bi);\n    if (s[i]) s[i] += bs; // coalesce with previous string\n    else s[++i] = bs;\n  }\n\n  // Special optimization for only a single match.\n  // Otherwise, interpolate each of the numbers and rejoin the string.\n  return s.length < 2 ? (q[0]\n      ? one(q[0].x)\n      : zero(b))\n      : (b = q.length, function(t) {\n          for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n          return s.join(\"\");\n        });\n}\n","import decompose, {identity} from \"./decompose\";\n\nvar cssNode,\n    cssRoot,\n    cssView,\n    svgNode;\n\nexport function parseCss(value) {\n  if (value === \"none\") return identity;\n  if (!cssNode) cssNode = document.createElement(\"DIV\"), cssRoot = document.documentElement, cssView = document.defaultView;\n  cssNode.style.transform = value;\n  value = cssView.getComputedStyle(cssRoot.appendChild(cssNode), null).getPropertyValue(\"transform\");\n  cssRoot.removeChild(cssNode);\n  value = value.slice(7, -1).split(\",\");\n  return decompose(+value[0], +value[1], +value[2], +value[3], +value[4], +value[5]);\n}\n\nexport function parseSvg(value) {\n  if (value == null) return identity;\n  if (!svgNode) svgNode = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n  svgNode.setAttribute(\"transform\", value);\n  if (!(value = svgNode.transform.baseVal.consolidate())) return identity;\n  value = value.matrix;\n  return decompose(value.a, value.b, value.c, value.d, value.e, value.f);\n}\n","import {color} from \"d3-color\";\nimport rgb from \"./rgb\";\nimport array from \"./array\";\nimport date from \"./date\";\nimport number from \"./number\";\nimport object from \"./object\";\nimport string from \"./string\";\nimport constant from \"./constant\";\n\nexport default function(a, b) {\n  var t = typeof b, c;\n  return b == null || t === \"boolean\" ? constant(b)\n      : (t === \"number\" ? number\n      : t === \"string\" ? ((c = color(b)) ? (b = c, rgb) : string)\n      : b instanceof color ? rgb\n      : b instanceof Date ? date\n      : Array.isArray(b) ? array\n      : typeof b.valueOf !== \"function\" && typeof b.toString !== \"function\" || isNaN(b) ? object\n      : number)(a, b);\n}\n","export default function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return Math.round(a + b * t);\n  };\n}\n","var degrees = 180 / Math.PI;\n\nexport var identity = {\n  translateX: 0,\n  translateY: 0,\n  rotate: 0,\n  skewX: 0,\n  scaleX: 1,\n  scaleY: 1\n};\n\nexport default function(a, b, c, d, e, f) {\n  var scaleX, scaleY, skewX;\n  if (scaleX = Math.sqrt(a * a + b * b)) a /= scaleX, b /= scaleX;\n  if (skewX = a * c + b * d) c -= a * skewX, d -= b * skewX;\n  if (scaleY = Math.sqrt(c * c + d * d)) c /= scaleY, d /= scaleY, skewX /= scaleY;\n  if (a * d < b * c) a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;\n  return {\n    translateX: e,\n    translateY: f,\n    rotate: Math.atan2(b, a) * degrees,\n    skewX: Math.atan(skewX) * degrees,\n    scaleX: scaleX,\n    scaleY: scaleY\n  };\n}\n","import number from \"../number\";\nimport {parseCss, parseSvg} from \"./parse\";\n\nfunction interpolateTransform(parse, pxComma, pxParen, degParen) {\n\n  function pop(s) {\n    return s.length ? s.pop() + \" \" : \"\";\n  }\n\n  function translate(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(\"translate(\", null, pxComma, null, pxParen);\n      q.push({i: i - 4, x: number(xa, xb)}, {i: i - 2, x: number(ya, yb)});\n    } else if (xb || yb) {\n      s.push(\"translate(\" + xb + pxComma + yb + pxParen);\n    }\n  }\n\n  function rotate(a, b, s, q) {\n    if (a !== b) {\n      if (a - b > 180) b += 360; else if (b - a > 180) a += 360; // shortest path\n      q.push({i: s.push(pop(s) + \"rotate(\", null, degParen) - 2, x: number(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"rotate(\" + b + degParen);\n    }\n  }\n\n  function skewX(a, b, s, q) {\n    if (a !== b) {\n      q.push({i: s.push(pop(s) + \"skewX(\", null, degParen) - 2, x: number(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"skewX(\" + b + degParen);\n    }\n  }\n\n  function scale(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(pop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({i: i - 4, x: number(xa, xb)}, {i: i - 2, x: number(ya, yb)});\n    } else if (xb !== 1 || yb !== 1) {\n      s.push(pop(s) + \"scale(\" + xb + \",\" + yb + \")\");\n    }\n  }\n\n  return function(a, b) {\n    var s = [], // string constants and placeholders\n        q = []; // number interpolators\n    a = parse(a), b = parse(b);\n    translate(a.translateX, a.translateY, b.translateX, b.translateY, s, q);\n    rotate(a.rotate, b.rotate, s, q);\n    skewX(a.skewX, b.skewX, s, q);\n    scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s, q);\n    a = b = null; // gc\n    return function(t) {\n      var i = -1, n = q.length, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  };\n}\n\nexport var interpolateTransformCss = interpolateTransform(parseCss, \"px, \", \"px)\", \"deg)\");\nexport var interpolateTransformSvg = interpolateTransform(parseSvg, \", \", \")\", \")\");\n","var rho = Math.SQRT2,\n    rho2 = 2,\n    rho4 = 4,\n    epsilon2 = 1e-12;\n\nfunction cosh(x) {\n  return ((x = Math.exp(x)) + 1 / x) / 2;\n}\n\nfunction sinh(x) {\n  return ((x = Math.exp(x)) - 1 / x) / 2;\n}\n\nfunction tanh(x) {\n  return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n}\n\n// p0 = [ux0, uy0, w0]\n// p1 = [ux1, uy1, w1]\nexport default function(p0, p1) {\n  var ux0 = p0[0], uy0 = p0[1], w0 = p0[2],\n      ux1 = p1[0], uy1 = p1[1], w1 = p1[2],\n      dx = ux1 - ux0,\n      dy = uy1 - uy0,\n      d2 = dx * dx + dy * dy,\n      i,\n      S;\n\n  // Special case for u0 ≅ u1.\n  if (d2 < epsilon2) {\n    S = Math.log(w1 / w0) / rho;\n    i = function(t) {\n      return [\n        ux0 + t * dx,\n        uy0 + t * dy,\n        w0 * Math.exp(rho * t * S)\n      ];\n    }\n  }\n\n  // General case.\n  else {\n    var d1 = Math.sqrt(d2),\n        b0 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1),\n        b1 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1),\n        r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),\n        r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n    S = (r1 - r0) / rho;\n    i = function(t) {\n      var s = t * S,\n          coshr0 = cosh(r0),\n          u = w0 / (rho2 * d1) * (coshr0 * tanh(rho * s + r0) - sinh(r0));\n      return [\n        ux0 + u * dx,\n        uy0 + u * dy,\n        w0 * coshr0 / cosh(rho * s + r0)\n      ];\n    }\n  }\n\n  i.duration = S * 1000;\n\n  return i;\n}\n","import {hsl as colorHsl} from \"d3-color\";\nimport color, {hue} from \"./color\";\n\nfunction hsl(hue) {\n  return function(start, end) {\n    var h = hue((start = colorHsl(start)).h, (end = colorHsl(end)).h),\n        s = color(start.s, end.s),\n        l = color(start.l, end.l),\n        opacity = color(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.s = s(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nexport default hsl(hue);\nexport var hslLong = hsl(color);\n","import {lab as colorLab} from \"d3-color\";\nimport color from \"./color\";\n\nexport default function lab(start, end) {\n  var l = color((start = colorLab(start)).l, (end = colorLab(end)).l),\n      a = color(start.a, end.a),\n      b = color(start.b, end.b),\n      opacity = color(start.opacity, end.opacity);\n  return function(t) {\n    start.l = l(t);\n    start.a = a(t);\n    start.b = b(t);\n    start.opacity = opacity(t);\n    return start + \"\";\n  };\n}\n","import {hcl as colorHcl} from \"d3-color\";\nimport color, {hue} from \"./color\";\n\nfunction hcl(hue) {\n  return function(start, end) {\n    var h = hue((start = colorHcl(start)).h, (end = colorHcl(end)).h),\n        c = color(start.c, end.c),\n        l = color(start.l, end.l),\n        opacity = color(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.c = c(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nexport default hcl(hue);\nexport var hclLong = hcl(color);\n","import {cubehelix as colorCubehelix} from \"d3-color\";\nimport color, {hue} from \"./color\";\n\nfunction cubehelix(hue) {\n  return (function cubehelixGamma(y) {\n    y = +y;\n\n    function cubehelix(start, end) {\n      var h = hue((start = colorCubehelix(start)).h, (end = colorCubehelix(end)).h),\n          s = color(start.s, end.s),\n          l = color(start.l, end.l),\n          opacity = color(start.opacity, end.opacity);\n      return function(t) {\n        start.h = h(t);\n        start.s = s(t);\n        start.l = l(Math.pow(t, y));\n        start.opacity = opacity(t);\n        return start + \"\";\n      };\n    }\n\n    cubehelix.gamma = cubehelixGamma;\n\n    return cubehelix;\n  })(1);\n}\n\nexport default cubehelix(hue);\nexport var cubehelixLong = cubehelix(color);\n","export default function piecewise(interpolate, values) {\n  var i = 0, n = values.length - 1, v = values[0], I = new Array(n < 0 ? 0 : n);\n  while (i < n) I[i] = interpolate(v, v = values[++i]);\n  return function(t) {\n    var i = Math.max(0, Math.min(n - 1, Math.floor(t *= n)));\n    return I[i](t - i);\n  };\n}\n","export default function(interpolator, n) {\n  var samples = new Array(n);\n  for (var i = 0; i < n; ++i) samples[i] = interpolator(i / (n - 1));\n  return samples;\n}\n","var frame = 0, // is an animation frame pending?\n    timeout = 0, // is a timeout pending?\n    interval = 0, // are any timers active?\n    pokeDelay = 1000, // how frequently we check for clock skew\n    taskHead,\n    taskTail,\n    clockLast = 0,\n    clockNow = 0,\n    clockSkew = 0,\n    clock = typeof performance === \"object\" && performance.now ? performance : Date,\n    setFrame = typeof window === \"object\" && window.requestAnimationFrame ? window.requestAnimationFrame.bind(window) : function(f) { setTimeout(f, 17); };\n\nexport function now() {\n  return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);\n}\n\nfunction clearNow() {\n  clockNow = 0;\n}\n\nexport function Timer() {\n  this._call =\n  this._time =\n  this._next = null;\n}\n\nTimer.prototype = timer.prototype = {\n  constructor: Timer,\n  restart: function(callback, delay, time) {\n    if (typeof callback !== \"function\") throw new TypeError(\"callback is not a function\");\n    time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);\n    if (!this._next && taskTail !== this) {\n      if (taskTail) taskTail._next = this;\n      else taskHead = this;\n      taskTail = this;\n    }\n    this._call = callback;\n    this._time = time;\n    sleep();\n  },\n  stop: function() {\n    if (this._call) {\n      this._call = null;\n      this._time = Infinity;\n      sleep();\n    }\n  }\n};\n\nexport function timer(callback, delay, time) {\n  var t = new Timer;\n  t.restart(callback, delay, time);\n  return t;\n}\n\nexport function timerFlush() {\n  now(); // Get the current time, if not already set.\n  ++frame; // Pretend we’ve set an alarm, if we haven’t already.\n  var t = taskHead, e;\n  while (t) {\n    if ((e = clockNow - t._time) >= 0) t._call.call(null, e);\n    t = t._next;\n  }\n  --frame;\n}\n\nfunction wake() {\n  clockNow = (clockLast = clock.now()) + clockSkew;\n  frame = timeout = 0;\n  try {\n    timerFlush();\n  } finally {\n    frame = 0;\n    nap();\n    clockNow = 0;\n  }\n}\n\nfunction poke() {\n  var now = clock.now(), delay = now - clockLast;\n  if (delay > pokeDelay) clockSkew -= delay, clockLast = now;\n}\n\nfunction nap() {\n  var t0, t1 = taskHead, t2, time = Infinity;\n  while (t1) {\n    if (t1._call) {\n      if (time > t1._time) time = t1._time;\n      t0 = t1, t1 = t1._next;\n    } else {\n      t2 = t1._next, t1._next = null;\n      t1 = t0 ? t0._next = t2 : taskHead = t2;\n    }\n  }\n  taskTail = t0;\n  sleep(time);\n}\n\nfunction sleep(time) {\n  if (frame) return; // Soonest alarm already set, or will be.\n  if (timeout) timeout = clearTimeout(timeout);\n  var delay = time - clockNow; // Strictly less than if we recomputed clockNow.\n  if (delay > 24) {\n    if (time < Infinity) timeout = setTimeout(wake, time - clock.now() - clockSkew);\n    if (interval) interval = clearInterval(interval);\n  } else {\n    if (!interval) clockLast = clock.now(), interval = setInterval(poke, pokeDelay);\n    frame = 1, setFrame(wake);\n  }\n}\n","import {Timer} from \"./timer\";\n\nexport default function(callback, delay, time) {\n  var t = new Timer;\n  delay = delay == null ? 0 : +delay;\n  t.restart(function(elapsed) {\n    t.stop();\n    callback(elapsed + delay);\n  }, delay, time);\n  return t;\n}\n","import {Timer, now} from \"./timer\";\n\nexport default function(callback, delay, time) {\n  var t = new Timer, total = delay;\n  if (delay == null) return t.restart(callback, delay, time), t;\n  delay = +delay, time = time == null ? now() : +time;\n  t.restart(function tick(elapsed) {\n    elapsed += total;\n    t.restart(tick, total += delay, time);\n    callback(elapsed);\n  }, delay, time);\n  return t;\n}\n","import {dispatch} from \"d3-dispatch\";\nimport {timer, timeout} from \"d3-timer\";\n\nvar emptyOn = dispatch(\"start\", \"end\", \"interrupt\");\nvar emptyTween = [];\n\nexport var CREATED = 0;\nexport var SCHEDULED = 1;\nexport var STARTING = 2;\nexport var STARTED = 3;\nexport var RUNNING = 4;\nexport var ENDING = 5;\nexport var ENDED = 6;\n\nexport default function(node, name, id, index, group, timing) {\n  var schedules = node.__transition;\n  if (!schedules) node.__transition = {};\n  else if (id in schedules) return;\n  create(node, id, {\n    name: name,\n    index: index, // For context during callback.\n    group: group, // For context during callback.\n    on: emptyOn,\n    tween: emptyTween,\n    time: timing.time,\n    delay: timing.delay,\n    duration: timing.duration,\n    ease: timing.ease,\n    timer: null,\n    state: CREATED\n  });\n}\n\nexport function init(node, id) {\n  var schedule = get(node, id);\n  if (schedule.state > CREATED) throw new Error(\"too late; already scheduled\");\n  return schedule;\n}\n\nexport function set(node, id) {\n  var schedule = get(node, id);\n  if (schedule.state > STARTING) throw new Error(\"too late; already started\");\n  return schedule;\n}\n\nexport function get(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id])) throw new Error(\"transition not found\");\n  return schedule;\n}\n\nfunction create(node, id, self) {\n  var schedules = node.__transition,\n      tween;\n\n  // Initialize the self timer when the transition is created.\n  // Note the actual delay is not known until the first callback!\n  schedules[id] = self;\n  self.timer = timer(schedule, 0, self.time);\n\n  function schedule(elapsed) {\n    self.state = SCHEDULED;\n    self.timer.restart(start, self.delay, self.time);\n\n    // If the elapsed delay is less than our first sleep, start immediately.\n    if (self.delay <= elapsed) start(elapsed - self.delay);\n  }\n\n  function start(elapsed) {\n    var i, j, n, o;\n\n    // If the state is not SCHEDULED, then we previously errored on start.\n    if (self.state !== SCHEDULED) return stop();\n\n    for (i in schedules) {\n      o = schedules[i];\n      if (o.name !== self.name) continue;\n\n      // While this element already has a starting transition during this frame,\n      // defer starting an interrupting transition until that transition has a\n      // chance to tick (and possibly end); see d3/d3-transition#54!\n      if (o.state === STARTED) return timeout(start);\n\n      // Interrupt the active transition, if any.\n      // Dispatch the interrupt event.\n      if (o.state === RUNNING) {\n        o.state = ENDED;\n        o.timer.stop();\n        o.on.call(\"interrupt\", node, node.__data__, o.index, o.group);\n        delete schedules[i];\n      }\n\n      // Cancel any pre-empted transitions. No interrupt event is dispatched\n      // because the cancelled transitions never started. Note that this also\n      // removes this transition from the pending list!\n      else if (+i < id) {\n        o.state = ENDED;\n        o.timer.stop();\n        delete schedules[i];\n      }\n    }\n\n    // Defer the first tick to end of the current frame; see d3/d3#1576.\n    // Note the transition may be canceled after start and before the first tick!\n    // Note this must be scheduled before the start event; see d3/d3-transition#16!\n    // Assuming this is successful, subsequent callbacks go straight to tick.\n    timeout(function() {\n      if (self.state === STARTED) {\n        self.state = RUNNING;\n        self.timer.restart(tick, self.delay, self.time);\n        tick(elapsed);\n      }\n    });\n\n    // Dispatch the start event.\n    // Note this must be done before the tween are initialized.\n    self.state = STARTING;\n    self.on.call(\"start\", node, node.__data__, self.index, self.group);\n    if (self.state !== STARTING) return; // interrupted\n    self.state = STARTED;\n\n    // Initialize the tween, deleting null tween.\n    tween = new Array(n = self.tween.length);\n    for (i = 0, j = -1; i < n; ++i) {\n      if (o = self.tween[i].value.call(node, node.__data__, self.index, self.group)) {\n        tween[++j] = o;\n      }\n    }\n    tween.length = j + 1;\n  }\n\n  function tick(elapsed) {\n    var t = elapsed < self.duration ? self.ease.call(null, elapsed / self.duration) : (self.timer.restart(stop), self.state = ENDING, 1),\n        i = -1,\n        n = tween.length;\n\n    while (++i < n) {\n      tween[i].call(null, t);\n    }\n\n    // Dispatch the end event.\n    if (self.state === ENDING) {\n      self.on.call(\"end\", node, node.__data__, self.index, self.group);\n      stop();\n    }\n  }\n\n  function stop() {\n    self.state = ENDED;\n    self.timer.stop();\n    delete schedules[id];\n    for (var i in schedules) return; // eslint-disable-line no-unused-vars\n    delete node.__transition;\n  }\n}\n","import {STARTING, ENDING, ENDED} from \"./transition/schedule\";\n\nexport default function(node, name) {\n  var schedules = node.__transition,\n      schedule,\n      active,\n      empty = true,\n      i;\n\n  if (!schedules) return;\n\n  name = name == null ? null : name + \"\";\n\n  for (i in schedules) {\n    if ((schedule = schedules[i]).name !== name) { empty = false; continue; }\n    active = schedule.state > STARTING && schedule.state < ENDING;\n    schedule.state = ENDED;\n    schedule.timer.stop();\n    if (active) schedule.on.call(\"interrupt\", node, node.__data__, schedule.index, schedule.group);\n    delete schedules[i];\n  }\n\n  if (empty) delete node.__transition;\n}\n","import {get, set} from \"./schedule\";\n\nfunction tweenRemove(id, name) {\n  var tween0, tween1;\n  return function() {\n    var schedule = set(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = tween0 = tween;\n      for (var i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1 = tween1.slice();\n          tween1.splice(i, 1);\n          break;\n        }\n      }\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nfunction tweenFunction(id, name, value) {\n  var tween0, tween1;\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    var schedule = set(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = (tween0 = tween).slice();\n      for (var t = {name: name, value: value}, i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1[i] = t;\n          break;\n        }\n      }\n      if (i === n) tween1.push(t);\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nexport default function(name, value) {\n  var id = this._id;\n\n  name += \"\";\n\n  if (arguments.length < 2) {\n    var tween = get(this.node(), id).tween;\n    for (var i = 0, n = tween.length, t; i < n; ++i) {\n      if ((t = tween[i]).name === name) {\n        return t.value;\n      }\n    }\n    return null;\n  }\n\n  return this.each((value == null ? tweenRemove : tweenFunction)(id, name, value));\n}\n\nexport function tweenValue(transition, name, value) {\n  var id = transition._id;\n\n  transition.each(function() {\n    var schedule = set(this, id);\n    (schedule.value || (schedule.value = {}))[name] = value.apply(this, arguments);\n  });\n\n  return function(node) {\n    return get(node, id).value[name];\n  };\n}\n","import {color} from \"d3-color\";\nimport {interpolateNumber, interpolateRgb, interpolateString} from \"d3-interpolate\";\n\nexport default function(a, b) {\n  var c;\n  return (typeof b === \"number\" ? interpolateNumber\n      : b instanceof color ? interpolateRgb\n      : (c = color(b)) ? (b = c, interpolateRgb)\n      : interpolateString)(a, b);\n}\n","function removeFunction(id) {\n  return function() {\n    var parent = this.parentNode;\n    for (var i in this.__transition) if (+i !== id) return;\n    if (parent) parent.removeChild(this);\n  };\n}\n\nexport default function() {\n  return this.on(\"end.remove\", removeFunction(this._id));\n}\n","import {selection} from \"d3-selection\";\n\nvar Selection = selection.prototype.constructor;\n\nexport default function() {\n  return new Selection(this._groups, this._parents);\n}\n","import {tweenValue} from \"./tween\";\n\nfunction textConstant(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function() {\n    var value1 = value(this);\n    this.textContent = value1 == null ? \"\" : value1;\n  };\n}\n\nexport default function(value) {\n  return this.tween(\"text\", typeof value === \"function\"\n      ? textFunction(tweenValue(this, \"text\", value))\n      : textConstant(value == null ? \"\" : value + \"\"));\n}\n","import {selection} from \"d3-selection\";\nimport transition_attr from \"./attr\";\nimport transition_attrTween from \"./attrTween\";\nimport transition_delay from \"./delay\";\nimport transition_duration from \"./duration\";\nimport transition_ease from \"./ease\";\nimport transition_filter from \"./filter\";\nimport transition_merge from \"./merge\";\nimport transition_on from \"./on\";\nimport transition_remove from \"./remove\";\nimport transition_select from \"./select\";\nimport transition_selectAll from \"./selectAll\";\nimport transition_selection from \"./selection\";\nimport transition_style from \"./style\";\nimport transition_styleTween from \"./styleTween\";\nimport transition_text from \"./text\";\nimport transition_transition from \"./transition\";\nimport transition_tween from \"./tween\";\n\nvar id = 0;\n\nexport function Transition(groups, parents, name, id) {\n  this._groups = groups;\n  this._parents = parents;\n  this._name = name;\n  this._id = id;\n}\n\nexport default function transition(name) {\n  return selection().transition(name);\n}\n\nexport function newId() {\n  return ++id;\n}\n\nvar selection_prototype = selection.prototype;\n\nTransition.prototype = transition.prototype = {\n  constructor: Transition,\n  select: transition_select,\n  selectAll: transition_selectAll,\n  filter: transition_filter,\n  merge: transition_merge,\n  selection: transition_selection,\n  transition: transition_transition,\n  call: selection_prototype.call,\n  nodes: selection_prototype.nodes,\n  node: selection_prototype.node,\n  size: selection_prototype.size,\n  empty: selection_prototype.empty,\n  each: selection_prototype.each,\n  on: transition_on,\n  attr: transition_attr,\n  attrTween: transition_attrTween,\n  style: transition_style,\n  styleTween: transition_styleTween,\n  text: transition_text,\n  remove: transition_remove,\n  tween: transition_tween,\n  delay: transition_delay,\n  duration: transition_duration,\n  ease: transition_ease\n};\n","export function linear(t) {\n  return +t;\n}\n","export function quadIn(t) {\n  return t * t;\n}\n\nexport function quadOut(t) {\n  return t * (2 - t);\n}\n\nexport function quadInOut(t) {\n  return ((t *= 2) <= 1 ? t * t : --t * (2 - t) + 1) / 2;\n}\n","export function cubicIn(t) {\n  return t * t * t;\n}\n\nexport function cubicOut(t) {\n  return --t * t * t + 1;\n}\n\nexport function cubicInOut(t) {\n  return ((t *= 2) <= 1 ? t * t * t : (t -= 2) * t * t + 2) / 2;\n}\n","import {selector} from \"d3-selection\";\nimport {Transition} from \"./index\";\nimport schedule, {get} from \"./schedule\";\n\nexport default function(select) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select !== \"function\") select = selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n        schedule(subgroup[i], name, id, i, subgroup, get(node, id));\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, name, id);\n}\n","import {selectorAll} from \"d3-selection\";\nimport {Transition} from \"./index\";\nimport schedule, {get} from \"./schedule\";\n\nexport default function(select) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select !== \"function\") select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        for (var children = select.call(node, node.__data__, i, group), child, inherit = get(node, id), k = 0, l = children.length; k < l; ++k) {\n          if (child = children[k]) {\n            schedule(child, name, id, k, children, inherit);\n          }\n        }\n        subgroups.push(children);\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, parents, name, id);\n}\n","import {matcher} from \"d3-selection\";\nimport {Transition} from \"./index\";\n\nexport default function(match) {\n  if (typeof match !== \"function\") match = matcher(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, this._name, this._id);\n}\n","import {Transition} from \"./index\";\n\nexport default function(transition) {\n  if (transition._id !== this._id) throw new Error;\n\n  for (var groups0 = this._groups, groups1 = transition._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Transition(merges, this._parents, this._name, this._id);\n}\n","import {Transition, newId} from \"./index\";\nimport schedule, {get} from \"./schedule\";\n\nexport default function() {\n  var name = this._name,\n      id0 = this._id,\n      id1 = newId();\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        var inherit = get(node, id0);\n        schedule(node, name, id1, i, group, {\n          time: inherit.time + inherit.delay + inherit.duration,\n          delay: 0,\n          duration: inherit.duration,\n          ease: inherit.ease\n        });\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id1);\n}\n","import {get, set, init} from \"./schedule\";\n\nfunction start(name) {\n  return (name + \"\").trim().split(/^|\\s+/).every(function(t) {\n    var i = t.indexOf(\".\");\n    if (i >= 0) t = t.slice(0, i);\n    return !t || t === \"start\";\n  });\n}\n\nfunction onFunction(id, name, listener) {\n  var on0, on1, sit = start(name) ? init : set;\n  return function() {\n    var schedule = sit(this, id),\n        on = schedule.on;\n\n    // If this node shared a dispatch with the previous node,\n    // just assign the updated shared dispatch and we’re done!\n    // Otherwise, copy-on-write.\n    if (on !== on0) (on1 = (on0 = on).copy()).on(name, listener);\n\n    schedule.on = on1;\n  };\n}\n\nexport default function(name, listener) {\n  var id = this._id;\n\n  return arguments.length < 2\n      ? get(this.node(), id).on.on(name)\n      : this.each(onFunction(id, name, listener));\n}\n","import {interpolateTransformSvg as interpolateTransform} from \"d3-interpolate\";\nimport {namespace} from \"d3-selection\";\nimport {tweenValue} from \"./tween\";\nimport interpolate from \"./interpolate\";\n\nfunction attrRemove(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, interpolate, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = this.getAttribute(name);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value1);\n  };\n}\n\nfunction attrConstantNS(fullname, interpolate, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = this.getAttributeNS(fullname.space, fullname.local);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value1);\n  };\n}\n\nfunction attrFunction(name, interpolate, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0, value1 = value(this);\n    if (value1 == null) return void this.removeAttribute(name);\n    value0 = this.getAttribute(name);\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value10 = value1);\n  };\n}\n\nfunction attrFunctionNS(fullname, interpolate, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0, value1 = value(this);\n    if (value1 == null) return void this.removeAttributeNS(fullname.space, fullname.local);\n    value0 = this.getAttributeNS(fullname.space, fullname.local);\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value10 = value1);\n  };\n}\n\nexport default function(name, value) {\n  var fullname = namespace(name), i = fullname === \"transform\" ? interpolateTransform : interpolate;\n  return this.attrTween(name, typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS : attrFunction)(fullname, i, tweenValue(this, \"attr.\" + name, value))\n      : value == null ? (fullname.local ? attrRemoveNS : attrRemove)(fullname)\n      : (fullname.local ? attrConstantNS : attrConstant)(fullname, i, value + \"\"));\n}\n","import {namespace} from \"d3-selection\";\n\nfunction attrTweenNS(fullname, value) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.setAttributeNS(fullname.space, fullname.local, i(t));\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nfunction attrTween(name, value) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.setAttribute(name, i(t));\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nexport default function(name, value) {\n  var key = \"attr.\" + name;\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  var fullname = namespace(name);\n  return this.tween(key, (fullname.local ? attrTweenNS : attrTween)(fullname, value));\n}\n","import {interpolateTransformCss as interpolateTransform} from \"d3-interpolate\";\nimport {style} from \"d3-selection\";\nimport {tweenValue} from \"./tween\";\nimport interpolate from \"./interpolate\";\n\nfunction styleRemove(name, interpolate) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0 = style(this, name),\n        value1 = (this.style.removeProperty(name), style(this, name));\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value10 = value1);\n  };\n}\n\nfunction styleRemoveEnd(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, interpolate, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = style(this, name);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value1);\n  };\n}\n\nfunction styleFunction(name, interpolate, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0 = style(this, name),\n        value1 = value(this);\n    if (value1 == null) value1 = (this.style.removeProperty(name), style(this, name));\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value10 = value1);\n  };\n}\n\nexport default function(name, value, priority) {\n  var i = (name += \"\") === \"transform\" ? interpolateTransform : interpolate;\n  return value == null ? this\n          .styleTween(name, styleRemove(name, i))\n          .on(\"end.style.\" + name, styleRemoveEnd(name))\n      : this.styleTween(name, typeof value === \"function\"\n          ? styleFunction(name, i, tweenValue(this, \"style.\" + name, value))\n          : styleConstant(name, i, value + \"\"), priority);\n}\n","function styleTween(name, value, priority) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.style.setProperty(name, i(t), priority);\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nexport default function(name, value, priority) {\n  var key = \"style.\" + (name += \"\");\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  return this.tween(key, styleTween(name, value, priority == null ? \"\" : priority));\n}\n","import {get, init} from \"./schedule\";\n\nfunction delayFunction(id, value) {\n  return function() {\n    init(this, id).delay = +value.apply(this, arguments);\n  };\n}\n\nfunction delayConstant(id, value) {\n  return value = +value, function() {\n    init(this, id).delay = value;\n  };\n}\n\nexport default function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? delayFunction\n          : delayConstant)(id, value))\n      : get(this.node(), id).delay;\n}\n","import {get, set} from \"./schedule\";\n\nfunction durationFunction(id, value) {\n  return function() {\n    set(this, id).duration = +value.apply(this, arguments);\n  };\n}\n\nfunction durationConstant(id, value) {\n  return value = +value, function() {\n    set(this, id).duration = value;\n  };\n}\n\nexport default function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? durationFunction\n          : durationConstant)(id, value))\n      : get(this.node(), id).duration;\n}\n","import {get, set} from \"./schedule\";\n\nfunction easeConstant(id, value) {\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    set(this, id).ease = value;\n  };\n}\n\nexport default function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each(easeConstant(id, value))\n      : get(this.node(), id).ease;\n}\n","var exponent = 3;\n\nexport var polyIn = (function custom(e) {\n  e = +e;\n\n  function polyIn(t) {\n    return Math.pow(t, e);\n  }\n\n  polyIn.exponent = custom;\n\n  return polyIn;\n})(exponent);\n\nexport var polyOut = (function custom(e) {\n  e = +e;\n\n  function polyOut(t) {\n    return 1 - Math.pow(1 - t, e);\n  }\n\n  polyOut.exponent = custom;\n\n  return polyOut;\n})(exponent);\n\nexport var polyInOut = (function custom(e) {\n  e = +e;\n\n  function polyInOut(t) {\n    return ((t *= 2) <= 1 ? Math.pow(t, e) : 2 - Math.pow(2 - t, e)) / 2;\n  }\n\n  polyInOut.exponent = custom;\n\n  return polyInOut;\n})(exponent);\n","var pi = Math.PI,\n    halfPi = pi / 2;\n\nexport function sinIn(t) {\n  return 1 - Math.cos(t * halfPi);\n}\n\nexport function sinOut(t) {\n  return Math.sin(t * halfPi);\n}\n\nexport function sinInOut(t) {\n  return (1 - Math.cos(pi * t)) / 2;\n}\n","export function expIn(t) {\n  return Math.pow(2, 10 * t - 10);\n}\n\nexport function expOut(t) {\n  return 1 - Math.pow(2, -10 * t);\n}\n\nexport function expInOut(t) {\n  return ((t *= 2) <= 1 ? Math.pow(2, 10 * t - 10) : 2 - Math.pow(2, 10 - 10 * t)) / 2;\n}\n","export function circleIn(t) {\n  return 1 - Math.sqrt(1 - t * t);\n}\n\nexport function circleOut(t) {\n  return Math.sqrt(1 - --t * t);\n}\n\nexport function circleInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - Math.sqrt(1 - t * t) : Math.sqrt(1 - (t -= 2) * t) + 1) / 2;\n}\n","var b1 = 4 / 11,\n    b2 = 6 / 11,\n    b3 = 8 / 11,\n    b4 = 3 / 4,\n    b5 = 9 / 11,\n    b6 = 10 / 11,\n    b7 = 15 / 16,\n    b8 = 21 / 22,\n    b9 = 63 / 64,\n    b0 = 1 / b1 / b1;\n\nexport function bounceIn(t) {\n  return 1 - bounceOut(1 - t);\n}\n\nexport function bounceOut(t) {\n  return (t = +t) < b1 ? b0 * t * t : t < b3 ? b0 * (t -= b2) * t + b4 : t < b6 ? b0 * (t -= b5) * t + b7 : b0 * (t -= b8) * t + b9;\n}\n\nexport function bounceInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - bounceOut(1 - t) : bounceOut(t - 1) + 1) / 2;\n}\n","var overshoot = 1.70158;\n\nexport var backIn = (function custom(s) {\n  s = +s;\n\n  function backIn(t) {\n    return t * t * ((s + 1) * t - s);\n  }\n\n  backIn.overshoot = custom;\n\n  return backIn;\n})(overshoot);\n\nexport var backOut = (function custom(s) {\n  s = +s;\n\n  function backOut(t) {\n    return --t * t * ((s + 1) * t + s) + 1;\n  }\n\n  backOut.overshoot = custom;\n\n  return backOut;\n})(overshoot);\n\nexport var backInOut = (function custom(s) {\n  s = +s;\n\n  function backInOut(t) {\n    return ((t *= 2) < 1 ? t * t * ((s + 1) * t - s) : (t -= 2) * t * ((s + 1) * t + s) + 2) / 2;\n  }\n\n  backInOut.overshoot = custom;\n\n  return backInOut;\n})(overshoot);\n","var tau = 2 * Math.PI,\n    amplitude = 1,\n    period = 0.3;\n\nexport var elasticIn = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticIn(t) {\n    return a * Math.pow(2, 10 * --t) * Math.sin((s - t) / p);\n  }\n\n  elasticIn.amplitude = function(a) { return custom(a, p * tau); };\n  elasticIn.period = function(p) { return custom(a, p); };\n\n  return elasticIn;\n})(amplitude, period);\n\nexport var elasticOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticOut(t) {\n    return 1 - a * Math.pow(2, -10 * (t = +t)) * Math.sin((t + s) / p);\n  }\n\n  elasticOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticOut.period = function(p) { return custom(a, p); };\n\n  return elasticOut;\n})(amplitude, period);\n\nexport var elasticInOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticInOut(t) {\n    return ((t = t * 2 - 1) < 0\n        ? a * Math.pow(2, 10 * t) * Math.sin((s - t) / p)\n        : 2 - a * Math.pow(2, -10 * t) * Math.sin((s + t) / p)) / 2;\n  }\n\n  elasticInOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticInOut.period = function(p) { return custom(a, p); };\n\n  return elasticInOut;\n})(amplitude, period);\n","import {Transition, newId} from \"../transition/index\";\nimport schedule from \"../transition/schedule\";\nimport {easeCubicInOut} from \"d3-ease\";\nimport {now} from \"d3-timer\";\n\nvar defaultTiming = {\n  time: null, // Set on use.\n  delay: 0,\n  duration: 250,\n  ease: easeCubicInOut\n};\n\nfunction inherit(node, id) {\n  var timing;\n  while (!(timing = node.__transition) || !(timing = timing[id])) {\n    if (!(node = node.parentNode)) {\n      return defaultTiming.time = now(), defaultTiming;\n    }\n  }\n  return timing;\n}\n\nexport default function(name) {\n  var id,\n      timing;\n\n  if (name instanceof Transition) {\n    id = name._id, name = name._name;\n  } else {\n    id = newId(), (timing = defaultTiming).time = now(), name = name == null ? null : name + \"\";\n  }\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        schedule(node, name, id, i, group, timing || inherit(node, id));\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id);\n}\n","import {selection} from \"d3-selection\";\nimport selection_interrupt from \"./interrupt\";\nimport selection_transition from \"./transition\";\n\nselection.prototype.interrupt = selection_interrupt;\nselection.prototype.transition = selection_transition;\n","import interrupt from \"../interrupt\";\n\nexport default function(name) {\n  return this.each(function() {\n    interrupt(this, name);\n  });\n}\n","import {Transition} from \"./transition/index\";\nimport {SCHEDULED} from \"./transition/schedule\";\n\nvar root = [null];\n\nexport default function(node, name) {\n  var schedules = node.__transition,\n      schedule,\n      i;\n\n  if (schedules) {\n    name = name == null ? null : name + \"\";\n    for (i in schedules) {\n      if ((schedule = schedules[i]).state > SCHEDULED && schedule.name === name) {\n        return new Transition([[node]], root, name, +i);\n      }\n    }\n  }\n\n  return null;\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function(target, type, selection) {\n  this.target = target;\n  this.type = type;\n  this.selection = selection;\n}\n","import {event} from \"d3-selection\";\n\nexport function nopropagation() {\n  event.stopImmediatePropagation();\n}\n\nexport default function() {\n  event.preventDefault();\n  event.stopImmediatePropagation();\n}\n","import {dispatch} from \"d3-dispatch\";\nimport {dragDisable, dragEnable} from \"d3-drag\";\nimport {interpolate} from \"d3-interpolate\";\nimport {customEvent, event, mouse, select} from \"d3-selection\";\nimport {interrupt} from \"d3-transition\";\nimport constant from \"./constant\";\nimport BrushEvent from \"./event\";\nimport noevent, {nopropagation} from \"./noevent\";\n\nvar MODE_DRAG = {name: \"drag\"},\n    MODE_SPACE = {name: \"space\"},\n    MODE_HANDLE = {name: \"handle\"},\n    MODE_CENTER = {name: \"center\"};\n\nvar X = {\n  name: \"x\",\n  handles: [\"e\", \"w\"].map(type),\n  input: function(x, e) { return x && [[x[0], e[0][1]], [x[1], e[1][1]]]; },\n  output: function(xy) { return xy && [xy[0][0], xy[1][0]]; }\n};\n\nvar Y = {\n  name: \"y\",\n  handles: [\"n\", \"s\"].map(type),\n  input: function(y, e) { return y && [[e[0][0], y[0]], [e[1][0], y[1]]]; },\n  output: function(xy) { return xy && [xy[0][1], xy[1][1]]; }\n};\n\nvar XY = {\n  name: \"xy\",\n  handles: [\"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\"].map(type),\n  input: function(xy) { return xy; },\n  output: function(xy) { return xy; }\n};\n\nvar cursors = {\n  overlay: \"crosshair\",\n  selection: \"move\",\n  n: \"ns-resize\",\n  e: \"ew-resize\",\n  s: \"ns-resize\",\n  w: \"ew-resize\",\n  nw: \"nwse-resize\",\n  ne: \"nesw-resize\",\n  se: \"nwse-resize\",\n  sw: \"nesw-resize\"\n};\n\nvar flipX = {\n  e: \"w\",\n  w: \"e\",\n  nw: \"ne\",\n  ne: \"nw\",\n  se: \"sw\",\n  sw: \"se\"\n};\n\nvar flipY = {\n  n: \"s\",\n  s: \"n\",\n  nw: \"sw\",\n  ne: \"se\",\n  se: \"ne\",\n  sw: \"nw\"\n};\n\nvar signsX = {\n  overlay: +1,\n  selection: +1,\n  n: null,\n  e: +1,\n  s: null,\n  w: -1,\n  nw: -1,\n  ne: +1,\n  se: +1,\n  sw: -1\n};\n\nvar signsY = {\n  overlay: +1,\n  selection: +1,\n  n: -1,\n  e: null,\n  s: +1,\n  w: null,\n  nw: -1,\n  ne: -1,\n  se: +1,\n  sw: +1\n};\n\nfunction type(t) {\n  return {type: t};\n}\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter() {\n  return !event.button;\n}\n\nfunction defaultExtent() {\n  var svg = this.ownerSVGElement || this;\n  return [[0, 0], [svg.width.baseVal.value, svg.height.baseVal.value]];\n}\n\n// Like d3.local, but with the name “__brush” rather than auto-generated.\nfunction local(node) {\n  while (!node.__brush) if (!(node = node.parentNode)) return;\n  return node.__brush;\n}\n\nfunction empty(extent) {\n  return extent[0][0] === extent[1][0]\n      || extent[0][1] === extent[1][1];\n}\n\nexport function brushSelection(node) {\n  var state = node.__brush;\n  return state ? state.dim.output(state.selection) : null;\n}\n\nexport function brushX() {\n  return brush(X);\n}\n\nexport function brushY() {\n  return brush(Y);\n}\n\nexport default function() {\n  return brush(XY);\n}\n\nfunction brush(dim) {\n  var extent = defaultExtent,\n      filter = defaultFilter,\n      listeners = dispatch(brush, \"start\", \"brush\", \"end\"),\n      handleSize = 6,\n      touchending;\n\n  function brush(group) {\n    var overlay = group\n        .property(\"__brush\", initialize)\n      .selectAll(\".overlay\")\n      .data([type(\"overlay\")]);\n\n    overlay.enter().append(\"rect\")\n        .attr(\"class\", \"overlay\")\n        .attr(\"pointer-events\", \"all\")\n        .attr(\"cursor\", cursors.overlay)\n      .merge(overlay)\n        .each(function() {\n          var extent = local(this).extent;\n          select(this)\n              .attr(\"x\", extent[0][0])\n              .attr(\"y\", extent[0][1])\n              .attr(\"width\", extent[1][0] - extent[0][0])\n              .attr(\"height\", extent[1][1] - extent[0][1]);\n        });\n\n    group.selectAll(\".selection\")\n      .data([type(\"selection\")])\n      .enter().append(\"rect\")\n        .attr(\"class\", \"selection\")\n        .attr(\"cursor\", cursors.selection)\n        .attr(\"fill\", \"#777\")\n        .attr(\"fill-opacity\", 0.3)\n        .attr(\"stroke\", \"#fff\")\n        .attr(\"shape-rendering\", \"crispEdges\");\n\n    var handle = group.selectAll(\".handle\")\n      .data(dim.handles, function(d) { return d.type; });\n\n    handle.exit().remove();\n\n    handle.enter().append(\"rect\")\n        .attr(\"class\", function(d) { return \"handle handle--\" + d.type; })\n        .attr(\"cursor\", function(d) { return cursors[d.type]; });\n\n    group\n        .each(redraw)\n        .attr(\"fill\", \"none\")\n        .attr(\"pointer-events\", \"all\")\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\")\n        .on(\"mousedown.brush touchstart.brush\", started);\n  }\n\n  brush.move = function(group, selection) {\n    if (group.selection) {\n      group\n          .on(\"start.brush\", function() { emitter(this, arguments).beforestart().start(); })\n          .on(\"interrupt.brush end.brush\", function() { emitter(this, arguments).end(); })\n          .tween(\"brush\", function() {\n            var that = this,\n                state = that.__brush,\n                emit = emitter(that, arguments),\n                selection0 = state.selection,\n                selection1 = dim.input(typeof selection === \"function\" ? selection.apply(this, arguments) : selection, state.extent),\n                i = interpolate(selection0, selection1);\n\n            function tween(t) {\n              state.selection = t === 1 && empty(selection1) ? null : i(t);\n              redraw.call(that);\n              emit.brush();\n            }\n\n            return selection0 && selection1 ? tween : tween(1);\n          });\n    } else {\n      group\n          .each(function() {\n            var that = this,\n                args = arguments,\n                state = that.__brush,\n                selection1 = dim.input(typeof selection === \"function\" ? selection.apply(that, args) : selection, state.extent),\n                emit = emitter(that, args).beforestart();\n\n            interrupt(that);\n            state.selection = selection1 == null || empty(selection1) ? null : selection1;\n            redraw.call(that);\n            emit.start().brush().end();\n          });\n    }\n  };\n\n  function redraw() {\n    var group = select(this),\n        selection = local(this).selection;\n\n    if (selection) {\n      group.selectAll(\".selection\")\n          .style(\"display\", null)\n          .attr(\"x\", selection[0][0])\n          .attr(\"y\", selection[0][1])\n          .attr(\"width\", selection[1][0] - selection[0][0])\n          .attr(\"height\", selection[1][1] - selection[0][1]);\n\n      group.selectAll(\".handle\")\n          .style(\"display\", null)\n          .attr(\"x\", function(d) { return d.type[d.type.length - 1] === \"e\" ? selection[1][0] - handleSize / 2 : selection[0][0] - handleSize / 2; })\n          .attr(\"y\", function(d) { return d.type[0] === \"s\" ? selection[1][1] - handleSize / 2 : selection[0][1] - handleSize / 2; })\n          .attr(\"width\", function(d) { return d.type === \"n\" || d.type === \"s\" ? selection[1][0] - selection[0][0] + handleSize : handleSize; })\n          .attr(\"height\", function(d) { return d.type === \"e\" || d.type === \"w\" ? selection[1][1] - selection[0][1] + handleSize : handleSize; });\n    }\n\n    else {\n      group.selectAll(\".selection,.handle\")\n          .style(\"display\", \"none\")\n          .attr(\"x\", null)\n          .attr(\"y\", null)\n          .attr(\"width\", null)\n          .attr(\"height\", null);\n    }\n  }\n\n  function emitter(that, args) {\n    return that.__brush.emitter || new Emitter(that, args);\n  }\n\n  function Emitter(that, args) {\n    this.that = that;\n    this.args = args;\n    this.state = that.__brush;\n    this.active = 0;\n  }\n\n  Emitter.prototype = {\n    beforestart: function() {\n      if (++this.active === 1) this.state.emitter = this, this.starting = true;\n      return this;\n    },\n    start: function() {\n      if (this.starting) this.starting = false, this.emit(\"start\");\n      return this;\n    },\n    brush: function() {\n      this.emit(\"brush\");\n      return this;\n    },\n    end: function() {\n      if (--this.active === 0) delete this.state.emitter, this.emit(\"end\");\n      return this;\n    },\n    emit: function(type) {\n      customEvent(new BrushEvent(brush, type, dim.output(this.state.selection)), listeners.apply, listeners, [type, this.that, this.args]);\n    }\n  };\n\n  function started() {\n    if (event.touches) { if (event.changedTouches.length < event.touches.length) return noevent(); }\n    else if (touchending) return;\n    if (!filter.apply(this, arguments)) return;\n\n    var that = this,\n        type = event.target.__data__.type,\n        mode = (event.metaKey ? type = \"overlay\" : type) === \"selection\" ? MODE_DRAG : (event.altKey ? MODE_CENTER : MODE_HANDLE),\n        signX = dim === Y ? null : signsX[type],\n        signY = dim === X ? null : signsY[type],\n        state = local(that),\n        extent = state.extent,\n        selection = state.selection,\n        W = extent[0][0], w0, w1,\n        N = extent[0][1], n0, n1,\n        E = extent[1][0], e0, e1,\n        S = extent[1][1], s0, s1,\n        dx,\n        dy,\n        moving,\n        shifting = signX && signY && event.shiftKey,\n        lockX,\n        lockY,\n        point0 = mouse(that),\n        point = point0,\n        emit = emitter(that, arguments).beforestart();\n\n    if (type === \"overlay\") {\n      state.selection = selection = [\n        [w0 = dim === Y ? W : point0[0], n0 = dim === X ? N : point0[1]],\n        [e0 = dim === Y ? E : w0, s0 = dim === X ? S : n0]\n      ];\n    } else {\n      w0 = selection[0][0];\n      n0 = selection[0][1];\n      e0 = selection[1][0];\n      s0 = selection[1][1];\n    }\n\n    w1 = w0;\n    n1 = n0;\n    e1 = e0;\n    s1 = s0;\n\n    var group = select(that)\n        .attr(\"pointer-events\", \"none\");\n\n    var overlay = group.selectAll(\".overlay\")\n        .attr(\"cursor\", cursors[type]);\n\n    if (event.touches) {\n      group\n          .on(\"touchmove.brush\", moved, true)\n          .on(\"touchend.brush touchcancel.brush\", ended, true);\n    } else {\n      var view = select(event.view)\n          .on(\"keydown.brush\", keydowned, true)\n          .on(\"keyup.brush\", keyupped, true)\n          .on(\"mousemove.brush\", moved, true)\n          .on(\"mouseup.brush\", ended, true);\n\n      dragDisable(event.view);\n    }\n\n    nopropagation();\n    interrupt(that);\n    redraw.call(that);\n    emit.start();\n\n    function moved() {\n      var point1 = mouse(that);\n      if (shifting && !lockX && !lockY) {\n        if (Math.abs(point1[0] - point[0]) > Math.abs(point1[1] - point[1])) lockY = true;\n        else lockX = true;\n      }\n      point = point1;\n      moving = true;\n      noevent();\n      move();\n    }\n\n    function move() {\n      var t;\n\n      dx = point[0] - point0[0];\n      dy = point[1] - point0[1];\n\n      switch (mode) {\n        case MODE_SPACE:\n        case MODE_DRAG: {\n          if (signX) dx = Math.max(W - w0, Math.min(E - e0, dx)), w1 = w0 + dx, e1 = e0 + dx;\n          if (signY) dy = Math.max(N - n0, Math.min(S - s0, dy)), n1 = n0 + dy, s1 = s0 + dy;\n          break;\n        }\n        case MODE_HANDLE: {\n          if (signX < 0) dx = Math.max(W - w0, Math.min(E - w0, dx)), w1 = w0 + dx, e1 = e0;\n          else if (signX > 0) dx = Math.max(W - e0, Math.min(E - e0, dx)), w1 = w0, e1 = e0 + dx;\n          if (signY < 0) dy = Math.max(N - n0, Math.min(S - n0, dy)), n1 = n0 + dy, s1 = s0;\n          else if (signY > 0) dy = Math.max(N - s0, Math.min(S - s0, dy)), n1 = n0, s1 = s0 + dy;\n          break;\n        }\n        case MODE_CENTER: {\n          if (signX) w1 = Math.max(W, Math.min(E, w0 - dx * signX)), e1 = Math.max(W, Math.min(E, e0 + dx * signX));\n          if (signY) n1 = Math.max(N, Math.min(S, n0 - dy * signY)), s1 = Math.max(N, Math.min(S, s0 + dy * signY));\n          break;\n        }\n      }\n\n      if (e1 < w1) {\n        signX *= -1;\n        t = w0, w0 = e0, e0 = t;\n        t = w1, w1 = e1, e1 = t;\n        if (type in flipX) overlay.attr(\"cursor\", cursors[type = flipX[type]]);\n      }\n\n      if (s1 < n1) {\n        signY *= -1;\n        t = n0, n0 = s0, s0 = t;\n        t = n1, n1 = s1, s1 = t;\n        if (type in flipY) overlay.attr(\"cursor\", cursors[type = flipY[type]]);\n      }\n\n      if (state.selection) selection = state.selection; // May be set by brush.move!\n      if (lockX) w1 = selection[0][0], e1 = selection[1][0];\n      if (lockY) n1 = selection[0][1], s1 = selection[1][1];\n\n      if (selection[0][0] !== w1\n          || selection[0][1] !== n1\n          || selection[1][0] !== e1\n          || selection[1][1] !== s1) {\n        state.selection = [[w1, n1], [e1, s1]];\n        redraw.call(that);\n        emit.brush();\n      }\n    }\n\n    function ended() {\n      nopropagation();\n      if (event.touches) {\n        if (event.touches.length) return;\n        if (touchending) clearTimeout(touchending);\n        touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n        group.on(\"touchmove.brush touchend.brush touchcancel.brush\", null);\n      } else {\n        dragEnable(event.view, moving);\n        view.on(\"keydown.brush keyup.brush mousemove.brush mouseup.brush\", null);\n      }\n      group.attr(\"pointer-events\", \"all\");\n      overlay.attr(\"cursor\", cursors.overlay);\n      if (state.selection) selection = state.selection; // May be set by brush.move (on start)!\n      if (empty(selection)) state.selection = null, redraw.call(that);\n      emit.end();\n    }\n\n    function keydowned() {\n      switch (event.keyCode) {\n        case 16: { // SHIFT\n          shifting = signX && signY;\n          break;\n        }\n        case 18: { // ALT\n          if (mode === MODE_HANDLE) {\n            if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n            if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n            mode = MODE_CENTER;\n            move();\n          }\n          break;\n        }\n        case 32: { // SPACE; takes priority over ALT\n          if (mode === MODE_HANDLE || mode === MODE_CENTER) {\n            if (signX < 0) e0 = e1 - dx; else if (signX > 0) w0 = w1 - dx;\n            if (signY < 0) s0 = s1 - dy; else if (signY > 0) n0 = n1 - dy;\n            mode = MODE_SPACE;\n            overlay.attr(\"cursor\", cursors.selection);\n            move();\n          }\n          break;\n        }\n        default: return;\n      }\n      noevent();\n    }\n\n    function keyupped() {\n      switch (event.keyCode) {\n        case 16: { // SHIFT\n          if (shifting) {\n            lockX = lockY = shifting = false;\n            move();\n          }\n          break;\n        }\n        case 18: { // ALT\n          if (mode === MODE_CENTER) {\n            if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n            if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n            mode = MODE_HANDLE;\n            move();\n          }\n          break;\n        }\n        case 32: { // SPACE\n          if (mode === MODE_SPACE) {\n            if (event.altKey) {\n              if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n              if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n              mode = MODE_CENTER;\n            } else {\n              if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n              if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n              mode = MODE_HANDLE;\n            }\n            overlay.attr(\"cursor\", cursors[type]);\n            move();\n          }\n          break;\n        }\n        default: return;\n      }\n      noevent();\n    }\n  }\n\n  function initialize() {\n    var state = this.__brush || {selection: null};\n    state.extent = extent.apply(this, arguments);\n    state.dim = dim;\n    return state;\n  }\n\n  brush.extent = function(_) {\n    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), brush) : extent;\n  };\n\n  brush.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant(!!_), brush) : filter;\n  };\n\n  brush.handleSize = function(_) {\n    return arguments.length ? (handleSize = +_, brush) : handleSize;\n  };\n\n  brush.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? brush : value;\n  };\n\n  return brush;\n}\n","export var cos = Math.cos;\nexport var sin = Math.sin;\nexport var pi = Math.PI;\nexport var halfPi = pi / 2;\nexport var tau = pi * 2;\nexport var max = Math.max;\n","import {range} from \"d3-array\";\nimport {max, tau} from \"./math\";\n\nfunction compareValue(compare) {\n  return function(a, b) {\n    return compare(\n      a.source.value + a.target.value,\n      b.source.value + b.target.value\n    );\n  };\n}\n\nexport default function() {\n  var padAngle = 0,\n      sortGroups = null,\n      sortSubgroups = null,\n      sortChords = null;\n\n  function chord(matrix) {\n    var n = matrix.length,\n        groupSums = [],\n        groupIndex = range(n),\n        subgroupIndex = [],\n        chords = [],\n        groups = chords.groups = new Array(n),\n        subgroups = new Array(n * n),\n        k,\n        x,\n        x0,\n        dx,\n        i,\n        j;\n\n    // Compute the sum.\n    k = 0, i = -1; while (++i < n) {\n      x = 0, j = -1; while (++j < n) {\n        x += matrix[i][j];\n      }\n      groupSums.push(x);\n      subgroupIndex.push(range(n));\n      k += x;\n    }\n\n    // Sort groups…\n    if (sortGroups) groupIndex.sort(function(a, b) {\n      return sortGroups(groupSums[a], groupSums[b]);\n    });\n\n    // Sort subgroups…\n    if (sortSubgroups) subgroupIndex.forEach(function(d, i) {\n      d.sort(function(a, b) {\n        return sortSubgroups(matrix[i][a], matrix[i][b]);\n      });\n    });\n\n    // Convert the sum to scaling factor for [0, 2pi].\n    // TODO Allow start and end angle to be specified?\n    // TODO Allow padding to be specified as percentage?\n    k = max(0, tau - padAngle * n) / k;\n    dx = k ? padAngle : tau / n;\n\n    // Compute the start and end angle for each group and subgroup.\n    // Note: Opera has a bug reordering object literal properties!\n    x = 0, i = -1; while (++i < n) {\n      x0 = x, j = -1; while (++j < n) {\n        var di = groupIndex[i],\n            dj = subgroupIndex[di][j],\n            v = matrix[di][dj],\n            a0 = x,\n            a1 = x += v * k;\n        subgroups[dj * n + di] = {\n          index: di,\n          subindex: dj,\n          startAngle: a0,\n          endAngle: a1,\n          value: v\n        };\n      }\n      groups[di] = {\n        index: di,\n        startAngle: x0,\n        endAngle: x,\n        value: groupSums[di]\n      };\n      x += dx;\n    }\n\n    // Generate chords for each (non-empty) subgroup-subgroup link.\n    i = -1; while (++i < n) {\n      j = i - 1; while (++j < n) {\n        var source = subgroups[j * n + i],\n            target = subgroups[i * n + j];\n        if (source.value || target.value) {\n          chords.push(source.value < target.value\n              ? {source: target, target: source}\n              : {source: source, target: target});\n        }\n      }\n    }\n\n    return sortChords ? chords.sort(sortChords) : chords;\n  }\n\n  chord.padAngle = function(_) {\n    return arguments.length ? (padAngle = max(0, _), chord) : padAngle;\n  };\n\n  chord.sortGroups = function(_) {\n    return arguments.length ? (sortGroups = _, chord) : sortGroups;\n  };\n\n  chord.sortSubgroups = function(_) {\n    return arguments.length ? (sortSubgroups = _, chord) : sortSubgroups;\n  };\n\n  chord.sortChords = function(_) {\n    return arguments.length ? (_ == null ? sortChords = null : (sortChords = compareValue(_))._ = _, chord) : sortChords && sortChords._;\n  };\n\n  return chord;\n}\n","export var slice = Array.prototype.slice;\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","var pi = Math.PI,\n    tau = 2 * pi,\n    epsilon = 1e-6,\n    tauEpsilon = tau - epsilon;\n\nfunction Path() {\n  this._x0 = this._y0 = // start of current subpath\n  this._x1 = this._y1 = null; // end of current subpath\n  this._ = \"\";\n}\n\nfunction path() {\n  return new Path;\n}\n\nPath.prototype = path.prototype = {\n  constructor: Path,\n  moveTo: function(x, y) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y);\n  },\n  closePath: function() {\n    if (this._x1 !== null) {\n      this._x1 = this._x0, this._y1 = this._y0;\n      this._ += \"Z\";\n    }\n  },\n  lineTo: function(x, y) {\n    this._ += \"L\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  quadraticCurveTo: function(x1, y1, x, y) {\n    this._ += \"Q\" + (+x1) + \",\" + (+y1) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) {\n    this._ += \"C\" + (+x1) + \",\" + (+y1) + \",\" + (+x2) + \",\" + (+y2) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  arcTo: function(x1, y1, x2, y2, r) {\n    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\n    var x0 = this._x1,\n        y0 = this._y1,\n        x21 = x2 - x1,\n        y21 = y2 - y1,\n        x01 = x0 - x1,\n        y01 = y0 - y1,\n        l01_2 = x01 * x01 + y01 * y01;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x1,y1).\n    if (this._x1 === null) {\n      this._ += \"M\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\n    else if (!(l01_2 > epsilon)) {}\n\n    // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\n    // Equivalently, is (x1,y1) coincident with (x2,y2)?\n    // Or, is the radius zero? Line to (x1,y1).\n    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon) || !r) {\n      this._ += \"L\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Otherwise, draw an arc!\n    else {\n      var x20 = x2 - x0,\n          y20 = y2 - y0,\n          l21_2 = x21 * x21 + y21 * y21,\n          l20_2 = x20 * x20 + y20 * y20,\n          l21 = Math.sqrt(l21_2),\n          l01 = Math.sqrt(l01_2),\n          l = r * Math.tan((pi - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\n          t01 = l / l01,\n          t21 = l / l21;\n\n      // If the start tangent is not coincident with (x0,y0), line to.\n      if (Math.abs(t01 - 1) > epsilon) {\n        this._ += \"L\" + (x1 + t01 * x01) + \",\" + (y1 + t01 * y01);\n      }\n\n      this._ += \"A\" + r + \",\" + r + \",0,0,\" + (+(y01 * x20 > x01 * y20)) + \",\" + (this._x1 = x1 + t21 * x21) + \",\" + (this._y1 = y1 + t21 * y21);\n    }\n  },\n  arc: function(x, y, r, a0, a1, ccw) {\n    x = +x, y = +y, r = +r;\n    var dx = r * Math.cos(a0),\n        dy = r * Math.sin(a0),\n        x0 = x + dx,\n        y0 = y + dy,\n        cw = 1 ^ ccw,\n        da = ccw ? a0 - a1 : a1 - a0;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x0,y0).\n    if (this._x1 === null) {\n      this._ += \"M\" + x0 + \",\" + y0;\n    }\n\n    // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\n    else if (Math.abs(this._x1 - x0) > epsilon || Math.abs(this._y1 - y0) > epsilon) {\n      this._ += \"L\" + x0 + \",\" + y0;\n    }\n\n    // Is this arc empty? We’re done.\n    if (!r) return;\n\n    // Does the angle go the wrong way? Flip the direction.\n    if (da < 0) da = da % tau + tau;\n\n    // Is this a complete circle? Draw two arcs to complete the circle.\n    if (da > tauEpsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (x - dx) + \",\" + (y - dy) + \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (this._x1 = x0) + \",\" + (this._y1 = y0);\n    }\n\n    // Is this arc non-empty? Draw an arc!\n    else if (da > epsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,\" + (+(da >= pi)) + \",\" + cw + \",\" + (this._x1 = x + r * Math.cos(a1)) + \",\" + (this._y1 = y + r * Math.sin(a1));\n    }\n  },\n  rect: function(x, y, w, h) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y) + \"h\" + (+w) + \"v\" + (+h) + \"h\" + (-w) + \"Z\";\n  },\n  toString: function() {\n    return this._;\n  }\n};\n\nexport default path;\n","import {slice} from \"./array\";\nimport constant from \"./constant\";\nimport {cos, halfPi, sin} from \"./math\";\nimport {path} from \"d3-path\";\n\nfunction defaultSource(d) {\n  return d.source;\n}\n\nfunction defaultTarget(d) {\n  return d.target;\n}\n\nfunction defaultRadius(d) {\n  return d.radius;\n}\n\nfunction defaultStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction defaultEndAngle(d) {\n  return d.endAngle;\n}\n\nexport default function() {\n  var source = defaultSource,\n      target = defaultTarget,\n      radius = defaultRadius,\n      startAngle = defaultStartAngle,\n      endAngle = defaultEndAngle,\n      context = null;\n\n  function ribbon() {\n    var buffer,\n        argv = slice.call(arguments),\n        s = source.apply(this, argv),\n        t = target.apply(this, argv),\n        sr = +radius.apply(this, (argv[0] = s, argv)),\n        sa0 = startAngle.apply(this, argv) - halfPi,\n        sa1 = endAngle.apply(this, argv) - halfPi,\n        sx0 = sr * cos(sa0),\n        sy0 = sr * sin(sa0),\n        tr = +radius.apply(this, (argv[0] = t, argv)),\n        ta0 = startAngle.apply(this, argv) - halfPi,\n        ta1 = endAngle.apply(this, argv) - halfPi;\n\n    if (!context) context = buffer = path();\n\n    context.moveTo(sx0, sy0);\n    context.arc(0, 0, sr, sa0, sa1);\n    if (sa0 !== ta0 || sa1 !== ta1) { // TODO sr !== tr?\n      context.quadraticCurveTo(0, 0, tr * cos(ta0), tr * sin(ta0));\n      context.arc(0, 0, tr, ta0, ta1);\n    }\n    context.quadraticCurveTo(0, 0, sx0, sy0);\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  ribbon.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant(+_), ribbon) : radius;\n  };\n\n  ribbon.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant(+_), ribbon) : startAngle;\n  };\n\n  ribbon.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant(+_), ribbon) : endAngle;\n  };\n\n  ribbon.source = function(_) {\n    return arguments.length ? (source = _, ribbon) : source;\n  };\n\n  ribbon.target = function(_) {\n    return arguments.length ? (target = _, ribbon) : target;\n  };\n\n  ribbon.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), ribbon) : context;\n  };\n\n  return ribbon;\n}\n","export var prefix = \"$\";\n\nfunction Map() {}\n\nMap.prototype = map.prototype = {\n  constructor: Map,\n  has: function(key) {\n    return (prefix + key) in this;\n  },\n  get: function(key) {\n    return this[prefix + key];\n  },\n  set: function(key, value) {\n    this[prefix + key] = value;\n    return this;\n  },\n  remove: function(key) {\n    var property = prefix + key;\n    return property in this && delete this[property];\n  },\n  clear: function() {\n    for (var property in this) if (property[0] === prefix) delete this[property];\n  },\n  keys: function() {\n    var keys = [];\n    for (var property in this) if (property[0] === prefix) keys.push(property.slice(1));\n    return keys;\n  },\n  values: function() {\n    var values = [];\n    for (var property in this) if (property[0] === prefix) values.push(this[property]);\n    return values;\n  },\n  entries: function() {\n    var entries = [];\n    for (var property in this) if (property[0] === prefix) entries.push({key: property.slice(1), value: this[property]});\n    return entries;\n  },\n  size: function() {\n    var size = 0;\n    for (var property in this) if (property[0] === prefix) ++size;\n    return size;\n  },\n  empty: function() {\n    for (var property in this) if (property[0] === prefix) return false;\n    return true;\n  },\n  each: function(f) {\n    for (var property in this) if (property[0] === prefix) f(this[property], property.slice(1), this);\n  }\n};\n\nfunction map(object, f) {\n  var map = new Map;\n\n  // Copy constructor.\n  if (object instanceof Map) object.each(function(value, key) { map.set(key, value); });\n\n  // Index array by numeric index or specified key function.\n  else if (Array.isArray(object)) {\n    var i = -1,\n        n = object.length,\n        o;\n\n    if (f == null) while (++i < n) map.set(i, object[i]);\n    else while (++i < n) map.set(f(o = object[i], i, object), o);\n  }\n\n  // Convert object to map.\n  else if (object) for (var key in object) map.set(key, object[key]);\n\n  return map;\n}\n\nexport default map;\n","import map from \"./map\";\n\nexport default function() {\n  var keys = [],\n      sortKeys = [],\n      sortValues,\n      rollup,\n      nest;\n\n  function apply(array, depth, createResult, setResult) {\n    if (depth >= keys.length) {\n      if (sortValues != null) array.sort(sortValues);\n      return rollup != null ? rollup(array) : array;\n    }\n\n    var i = -1,\n        n = array.length,\n        key = keys[depth++],\n        keyValue,\n        value,\n        valuesByKey = map(),\n        values,\n        result = createResult();\n\n    while (++i < n) {\n      if (values = valuesByKey.get(keyValue = key(value = array[i]) + \"\")) {\n        values.push(value);\n      } else {\n        valuesByKey.set(keyValue, [value]);\n      }\n    }\n\n    valuesByKey.each(function(values, key) {\n      setResult(result, key, apply(values, depth, createResult, setResult));\n    });\n\n    return result;\n  }\n\n  function entries(map, depth) {\n    if (++depth > keys.length) return map;\n    var array, sortKey = sortKeys[depth - 1];\n    if (rollup != null && depth >= keys.length) array = map.entries();\n    else array = [], map.each(function(v, k) { array.push({key: k, values: entries(v, depth)}); });\n    return sortKey != null ? array.sort(function(a, b) { return sortKey(a.key, b.key); }) : array;\n  }\n\n  return nest = {\n    object: function(array) { return apply(array, 0, createObject, setObject); },\n    map: function(array) { return apply(array, 0, createMap, setMap); },\n    entries: function(array) { return entries(apply(array, 0, createMap, setMap), 0); },\n    key: function(d) { keys.push(d); return nest; },\n    sortKeys: function(order) { sortKeys[keys.length - 1] = order; return nest; },\n    sortValues: function(order) { sortValues = order; return nest; },\n    rollup: function(f) { rollup = f; return nest; }\n  };\n}\n\nfunction createObject() {\n  return {};\n}\n\nfunction setObject(object, key, value) {\n  object[key] = value;\n}\n\nfunction createMap() {\n  return map();\n}\n\nfunction setMap(map, key, value) {\n  map.set(key, value);\n}\n","import {default as map, prefix} from \"./map\";\n\nfunction Set() {}\n\nvar proto = map.prototype;\n\nSet.prototype = set.prototype = {\n  constructor: Set,\n  has: proto.has,\n  add: function(value) {\n    value += \"\";\n    this[prefix + value] = value;\n    return this;\n  },\n  remove: proto.remove,\n  clear: proto.clear,\n  values: proto.keys,\n  size: proto.size,\n  empty: proto.empty,\n  each: proto.each\n};\n\nfunction set(object, f) {\n  var set = new Set;\n\n  // Copy constructor.\n  if (object instanceof Set) object.each(function(value) { set.add(value); });\n\n  // Otherwise, assume it’s an array.\n  else if (object) {\n    var i = -1, n = object.length;\n    if (f == null) while (++i < n) set.add(object[i]);\n    else while (++i < n) set.add(f(object[i], i, object));\n  }\n\n  return set;\n}\n\nexport default set;\n","export default function(map) {\n  var keys = [];\n  for (var key in map) keys.push(key);\n  return keys;\n}\n","export default function(map) {\n  var values = [];\n  for (var key in map) values.push(map[key]);\n  return values;\n}\n","export default function(map) {\n  var entries = [];\n  for (var key in map) entries.push({key: key, value: map[key]});\n  return entries;\n}\n","var array = Array.prototype;\n\nexport var slice = array.slice;\n","export default function(a, b) {\n  return a - b;\n}\n","export default function(ring) {\n  var i = 0, n = ring.length, area = ring[n - 1][1] * ring[0][0] - ring[n - 1][0] * ring[0][1];\n  while (++i < n) area += ring[i - 1][1] * ring[i][0] - ring[i - 1][0] * ring[i][1];\n  return area;\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function(ring, hole) {\n  var i = -1, n = hole.length, c;\n  while (++i < n) if (c = ringContains(ring, hole[i])) return c;\n  return 0;\n}\n\nfunction ringContains(ring, point) {\n  var x = point[0], y = point[1], contains = -1;\n  for (var i = 0, n = ring.length, j = n - 1; i < n; j = i++) {\n    var pi = ring[i], xi = pi[0], yi = pi[1], pj = ring[j], xj = pj[0], yj = pj[1];\n    if (segmentContains(pi, pj, point)) return 0;\n    if (((yi > y) !== (yj > y)) && ((x < (xj - xi) * (y - yi) / (yj - yi) + xi))) contains = -contains;\n  }\n  return contains;\n}\n\nfunction segmentContains(a, b, c) {\n  var i; return collinear(a, b, c) && within(a[i = +(a[0] === b[0])], c[i], b[i]);\n}\n\nfunction collinear(a, b, c) {\n  return (b[0] - a[0]) * (c[1] - a[1]) === (c[0] - a[0]) * (b[1] - a[1]);\n}\n\nfunction within(p, q, r) {\n  return p <= q && q <= r || r <= q && q <= p;\n}\n","export default function() {}\n","import {extent, thresholdSturges, tickStep, range} from \"d3-array\";\nimport {slice} from \"./array\";\nimport ascending from \"./ascending\";\nimport area from \"./area\";\nimport constant from \"./constant\";\nimport contains from \"./contains\";\nimport noop from \"./noop\";\n\nvar cases = [\n  [],\n  [[[1.0, 1.5], [0.5, 1.0]]],\n  [[[1.5, 1.0], [1.0, 1.5]]],\n  [[[1.5, 1.0], [0.5, 1.0]]],\n  [[[1.0, 0.5], [1.5, 1.0]]],\n  [[[1.0, 1.5], [0.5, 1.0]], [[1.0, 0.5], [1.5, 1.0]]],\n  [[[1.0, 0.5], [1.0, 1.5]]],\n  [[[1.0, 0.5], [0.5, 1.0]]],\n  [[[0.5, 1.0], [1.0, 0.5]]],\n  [[[1.0, 1.5], [1.0, 0.5]]],\n  [[[0.5, 1.0], [1.0, 0.5]], [[1.5, 1.0], [1.0, 1.5]]],\n  [[[1.5, 1.0], [1.0, 0.5]]],\n  [[[0.5, 1.0], [1.5, 1.0]]],\n  [[[1.0, 1.5], [1.5, 1.0]]],\n  [[[0.5, 1.0], [1.0, 1.5]]],\n  []\n];\n\nexport default function() {\n  var dx = 1,\n      dy = 1,\n      threshold = thresholdSturges,\n      smooth = smoothLinear;\n\n  function contours(values) {\n    var tz = threshold(values);\n\n    // Convert number of thresholds into uniform thresholds.\n    if (!Array.isArray(tz)) {\n      var domain = extent(values), start = domain[0], stop = domain[1];\n      tz = tickStep(start, stop, tz);\n      tz = range(Math.floor(start / tz) * tz, Math.floor(stop / tz) * tz, tz);\n    } else {\n      tz = tz.slice().sort(ascending);\n    }\n\n    return tz.map(function(value) {\n      return contour(values, value);\n    });\n  }\n\n  // Accumulate, smooth contour rings, assign holes to exterior rings.\n  // Based on https://github.com/mbostock/shapefile/blob/v0.6.2/shp/polygon.js\n  function contour(values, value) {\n    var polygons = [],\n        holes = [];\n\n    isorings(values, value, function(ring) {\n      smooth(ring, values, value);\n      if (area(ring) > 0) polygons.push([ring]);\n      else holes.push(ring);\n    });\n\n    holes.forEach(function(hole) {\n      for (var i = 0, n = polygons.length, polygon; i < n; ++i) {\n        if (contains((polygon = polygons[i])[0], hole) !== -1) {\n          polygon.push(hole);\n          return;\n        }\n      }\n    });\n\n    return {\n      type: \"MultiPolygon\",\n      value: value,\n      coordinates: polygons\n    };\n  }\n\n  // Marching squares with isolines stitched into rings.\n  // Based on https://github.com/topojson/topojson-client/blob/v3.0.0/src/stitch.js\n  function isorings(values, value, callback) {\n    var fragmentByStart = new Array,\n        fragmentByEnd = new Array,\n        x, y, t0, t1, t2, t3;\n\n    // Special case for the first row (y = -1, t2 = t3 = 0).\n    x = y = -1;\n    t1 = values[0] >= value;\n    cases[t1 << 1].forEach(stitch);\n    while (++x < dx - 1) {\n      t0 = t1, t1 = values[x + 1] >= value;\n      cases[t0 | t1 << 1].forEach(stitch);\n    }\n    cases[t1 << 0].forEach(stitch);\n\n    // General case for the intermediate rows.\n    while (++y < dy - 1) {\n      x = -1;\n      t1 = values[y * dx + dx] >= value;\n      t2 = values[y * dx] >= value;\n      cases[t1 << 1 | t2 << 2].forEach(stitch);\n      while (++x < dx - 1) {\n        t0 = t1, t1 = values[y * dx + dx + x + 1] >= value;\n        t3 = t2, t2 = values[y * dx + x + 1] >= value;\n        cases[t0 | t1 << 1 | t2 << 2 | t3 << 3].forEach(stitch);\n      }\n      cases[t1 | t2 << 3].forEach(stitch);\n    }\n\n    // Special case for the last row (y = dy - 1, t0 = t1 = 0).\n    x = -1;\n    t2 = values[y * dx] >= value;\n    cases[t2 << 2].forEach(stitch);\n    while (++x < dx - 1) {\n      t3 = t2, t2 = values[y * dx + x + 1] >= value;\n      cases[t2 << 2 | t3 << 3].forEach(stitch);\n    }\n    cases[t2 << 3].forEach(stitch);\n\n    function stitch(line) {\n      var start = [line[0][0] + x, line[0][1] + y],\n          end = [line[1][0] + x, line[1][1] + y],\n          startIndex = index(start),\n          endIndex = index(end),\n          f, g;\n      if (f = fragmentByEnd[startIndex]) {\n        if (g = fragmentByStart[endIndex]) {\n          delete fragmentByEnd[f.end];\n          delete fragmentByStart[g.start];\n          if (f === g) {\n            f.ring.push(end);\n            callback(f.ring);\n          } else {\n            fragmentByStart[f.start] = fragmentByEnd[g.end] = {start: f.start, end: g.end, ring: f.ring.concat(g.ring)};\n          }\n        } else {\n          delete fragmentByEnd[f.end];\n          f.ring.push(end);\n          fragmentByEnd[f.end = endIndex] = f;\n        }\n      } else if (f = fragmentByStart[endIndex]) {\n        if (g = fragmentByEnd[startIndex]) {\n          delete fragmentByStart[f.start];\n          delete fragmentByEnd[g.end];\n          if (f === g) {\n            f.ring.push(end);\n            callback(f.ring);\n          } else {\n            fragmentByStart[g.start] = fragmentByEnd[f.end] = {start: g.start, end: f.end, ring: g.ring.concat(f.ring)};\n          }\n        } else {\n          delete fragmentByStart[f.start];\n          f.ring.unshift(start);\n          fragmentByStart[f.start = startIndex] = f;\n        }\n      } else {\n        fragmentByStart[startIndex] = fragmentByEnd[endIndex] = {start: startIndex, end: endIndex, ring: [start, end]};\n      }\n    }\n  }\n\n  function index(point) {\n    return point[0] * 2 + point[1] * (dx + 1) * 4;\n  }\n\n  function smoothLinear(ring, values, value) {\n    ring.forEach(function(point) {\n      var x = point[0],\n          y = point[1],\n          xt = x | 0,\n          yt = y | 0,\n          v0,\n          v1 = values[yt * dx + xt];\n      if (x > 0 && x < dx && xt === x) {\n        v0 = values[yt * dx + xt - 1];\n        point[0] = x + (value - v0) / (v1 - v0) - 0.5;\n      }\n      if (y > 0 && y < dy && yt === y) {\n        v0 = values[(yt - 1) * dx + xt];\n        point[1] = y + (value - v0) / (v1 - v0) - 0.5;\n      }\n    });\n  }\n\n  contours.contour = contour;\n\n  contours.size = function(_) {\n    if (!arguments.length) return [dx, dy];\n    var _0 = Math.ceil(_[0]), _1 = Math.ceil(_[1]);\n    if (!(_0 > 0) || !(_1 > 0)) throw new Error(\"invalid size\");\n    return dx = _0, dy = _1, contours;\n  };\n\n  contours.thresholds = function(_) {\n    return arguments.length ? (threshold = typeof _ === \"function\" ? _ : Array.isArray(_) ? constant(slice.call(_)) : constant(_), contours) : threshold;\n  };\n\n  contours.smooth = function(_) {\n    return arguments.length ? (smooth = _ ? smoothLinear : noop, contours) : smooth === smoothLinear;\n  };\n\n  return contours;\n}\n","// TODO Optimize edge cases.\n// TODO Optimize index calculation.\n// TODO Optimize arguments.\nexport function blurX(source, target, r) {\n  var n = source.width,\n      m = source.height,\n      w = (r << 1) + 1;\n  for (var j = 0; j < m; ++j) {\n    for (var i = 0, sr = 0; i < n + r; ++i) {\n      if (i < n) {\n        sr += source.data[i + j * n];\n      }\n      if (i >= r) {\n        if (i >= w) {\n          sr -= source.data[i - w + j * n];\n        }\n        target.data[i - r + j * n] = sr / Math.min(i + 1, n - 1 + w - i, w);\n      }\n    }\n  }\n}\n\n// TODO Optimize edge cases.\n// TODO Optimize index calculation.\n// TODO Optimize arguments.\nexport function blurY(source, target, r) {\n  var n = source.width,\n      m = source.height,\n      w = (r << 1) + 1;\n  for (var i = 0; i < n; ++i) {\n    for (var j = 0, sr = 0; j < m + r; ++j) {\n      if (j < m) {\n        sr += source.data[i + j * n];\n      }\n      if (j >= r) {\n        if (j >= w) {\n          sr -= source.data[i + (j - w) * n];\n        }\n        target.data[i + (j - r) * n] = sr / Math.min(j + 1, m - 1 + w - j, w);\n      }\n    }\n  }\n}\n","import {max, range, tickStep} from \"d3-array\";\nimport {slice} from \"./array\";\nimport {blurX, blurY} from \"./blur\";\nimport constant from \"./constant\";\nimport contours from \"./contours\";\n\nfunction defaultX(d) {\n  return d[0];\n}\n\nfunction defaultY(d) {\n  return d[1];\n}\n\nfunction defaultWeight() {\n  return 1;\n}\n\nexport default function() {\n  var x = defaultX,\n      y = defaultY,\n      weight = defaultWeight,\n      dx = 960,\n      dy = 500,\n      r = 20, // blur radius\n      k = 2, // log2(grid cell size)\n      o = r * 3, // grid offset, to pad for blur\n      n = (dx + o * 2) >> k, // grid width\n      m = (dy + o * 2) >> k, // grid height\n      threshold = constant(20);\n\n  function density(data) {\n    var values0 = new Float32Array(n * m),\n        values1 = new Float32Array(n * m);\n\n    data.forEach(function(d, i, data) {\n      var xi = (+x(d, i, data) + o) >> k,\n          yi = (+y(d, i, data) + o) >> k,\n          wi = +weight(d, i, data);\n      if (xi >= 0 && xi < n && yi >= 0 && yi < m) {\n        values0[xi + yi * n] += wi;\n      }\n    });\n\n    // TODO Optimize.\n    blurX({width: n, height: m, data: values0}, {width: n, height: m, data: values1}, r >> k);\n    blurY({width: n, height: m, data: values1}, {width: n, height: m, data: values0}, r >> k);\n    blurX({width: n, height: m, data: values0}, {width: n, height: m, data: values1}, r >> k);\n    blurY({width: n, height: m, data: values1}, {width: n, height: m, data: values0}, r >> k);\n    blurX({width: n, height: m, data: values0}, {width: n, height: m, data: values1}, r >> k);\n    blurY({width: n, height: m, data: values1}, {width: n, height: m, data: values0}, r >> k);\n\n    var tz = threshold(values0);\n\n    // Convert number of thresholds into uniform thresholds.\n    if (!Array.isArray(tz)) {\n      var stop = max(values0);\n      tz = tickStep(0, stop, tz);\n      tz = range(0, Math.floor(stop / tz) * tz, tz);\n      tz.shift();\n    }\n\n    return contours()\n        .thresholds(tz)\n        .size([n, m])\n      (values0)\n        .map(transform);\n  }\n\n  function transform(geometry) {\n    geometry.value *= Math.pow(2, -2 * k); // Density in points per square pixel.\n    geometry.coordinates.forEach(transformPolygon);\n    return geometry;\n  }\n\n  function transformPolygon(coordinates) {\n    coordinates.forEach(transformRing);\n  }\n\n  function transformRing(coordinates) {\n    coordinates.forEach(transformPoint);\n  }\n\n  // TODO Optimize.\n  function transformPoint(coordinates) {\n    coordinates[0] = coordinates[0] * Math.pow(2, k) - o;\n    coordinates[1] = coordinates[1] * Math.pow(2, k) - o;\n  }\n\n  function resize() {\n    o = r * 3;\n    n = (dx + o * 2) >> k;\n    m = (dy + o * 2) >> k;\n    return density;\n  }\n\n  density.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), density) : x;\n  };\n\n  density.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), density) : y;\n  };\n\n  density.weight = function(_) {\n    return arguments.length ? (weight = typeof _ === \"function\" ? _ : constant(+_), density) : weight;\n  };\n\n  density.size = function(_) {\n    if (!arguments.length) return [dx, dy];\n    var _0 = Math.ceil(_[0]), _1 = Math.ceil(_[1]);\n    if (!(_0 >= 0) && !(_0 >= 0)) throw new Error(\"invalid size\");\n    return dx = _0, dy = _1, resize();\n  };\n\n  density.cellSize = function(_) {\n    if (!arguments.length) return 1 << k;\n    if (!((_ = +_) >= 1)) throw new Error(\"invalid cell size\");\n    return k = Math.floor(Math.log(_) / Math.LN2), resize();\n  };\n\n  density.thresholds = function(_) {\n    return arguments.length ? (threshold = typeof _ === \"function\" ? _ : Array.isArray(_) ? constant(slice.call(_)) : constant(_), density) : threshold;\n  };\n\n  density.bandwidth = function(_) {\n    if (!arguments.length) return Math.sqrt(r * (r + 1));\n    if (!((_ = +_) >= 0)) throw new Error(\"invalid bandwidth\");\n    return r = Math.round((Math.sqrt(4 * _ * _ + 1) - 1) / 2), resize();\n  };\n\n  return density;\n}\n","var EOL = {},\n    EOF = {},\n    QUOTE = 34,\n    NEWLINE = 10,\n    RETURN = 13;\n\nfunction objectConverter(columns) {\n  return new Function(\"d\", \"return {\" + columns.map(function(name, i) {\n    return JSON.stringify(name) + \": d[\" + i + \"]\";\n  }).join(\",\") + \"}\");\n}\n\nfunction customConverter(columns, f) {\n  var object = objectConverter(columns);\n  return function(row, i) {\n    return f(object(row), i, columns);\n  };\n}\n\n// Compute unique columns in order of discovery.\nfunction inferColumns(rows) {\n  var columnSet = Object.create(null),\n      columns = [];\n\n  rows.forEach(function(row) {\n    for (var column in row) {\n      if (!(column in columnSet)) {\n        columns.push(columnSet[column] = column);\n      }\n    }\n  });\n\n  return columns;\n}\n\nexport default function(delimiter) {\n  var reFormat = new RegExp(\"[\\\"\" + delimiter + \"\\n\\r]\"),\n      DELIMITER = delimiter.charCodeAt(0);\n\n  function parse(text, f) {\n    var convert, columns, rows = parseRows(text, function(row, i) {\n      if (convert) return convert(row, i - 1);\n      columns = row, convert = f ? customConverter(row, f) : objectConverter(row);\n    });\n    rows.columns = columns || [];\n    return rows;\n  }\n\n  function parseRows(text, f) {\n    var rows = [], // output rows\n        N = text.length,\n        I = 0, // current character index\n        n = 0, // current line number\n        t, // current token\n        eof = N <= 0, // current token followed by EOF?\n        eol = false; // current token followed by EOL?\n\n    // Strip the trailing newline.\n    if (text.charCodeAt(N - 1) === NEWLINE) --N;\n    if (text.charCodeAt(N - 1) === RETURN) --N;\n\n    function token() {\n      if (eof) return EOF;\n      if (eol) return eol = false, EOL;\n\n      // Unescape quotes.\n      var i, j = I, c;\n      if (text.charCodeAt(j) === QUOTE) {\n        while (I++ < N && text.charCodeAt(I) !== QUOTE || text.charCodeAt(++I) === QUOTE);\n        if ((i = I) >= N) eof = true;\n        else if ((c = text.charCodeAt(I++)) === NEWLINE) eol = true;\n        else if (c === RETURN) { eol = true; if (text.charCodeAt(I) === NEWLINE) ++I; }\n        return text.slice(j + 1, i - 1).replace(/\"\"/g, \"\\\"\");\n      }\n\n      // Find next delimiter or newline.\n      while (I < N) {\n        if ((c = text.charCodeAt(i = I++)) === NEWLINE) eol = true;\n        else if (c === RETURN) { eol = true; if (text.charCodeAt(I) === NEWLINE) ++I; }\n        else if (c !== DELIMITER) continue;\n        return text.slice(j, i);\n      }\n\n      // Return last token before EOF.\n      return eof = true, text.slice(j, N);\n    }\n\n    while ((t = token()) !== EOF) {\n      var row = [];\n      while (t !== EOL && t !== EOF) row.push(t), t = token();\n      if (f && (row = f(row, n++)) == null) continue;\n      rows.push(row);\n    }\n\n    return rows;\n  }\n\n  function format(rows, columns) {\n    if (columns == null) columns = inferColumns(rows);\n    return [columns.map(formatValue).join(delimiter)].concat(rows.map(function(row) {\n      return columns.map(function(column) {\n        return formatValue(row[column]);\n      }).join(delimiter);\n    })).join(\"\\n\");\n  }\n\n  function formatRows(rows) {\n    return rows.map(formatRow).join(\"\\n\");\n  }\n\n  function formatRow(row) {\n    return row.map(formatValue).join(delimiter);\n  }\n\n  function formatValue(text) {\n    return text == null ? \"\"\n        : reFormat.test(text += \"\") ? \"\\\"\" + text.replace(/\"/g, \"\\\"\\\"\") + \"\\\"\"\n        : text;\n  }\n\n  return {\n    parse: parse,\n    parseRows: parseRows,\n    format: format,\n    formatRows: formatRows\n  };\n}\n","import dsv from \"./dsv\";\n\nvar csv = dsv(\",\");\n\nexport var csvParse = csv.parse;\nexport var csvParseRows = csv.parseRows;\nexport var csvFormat = csv.format;\nexport var csvFormatRows = csv.formatRows;\n","import dsv from \"./dsv\";\n\nvar tsv = dsv(\"\\t\");\n\nexport var tsvParse = tsv.parse;\nexport var tsvParseRows = tsv.parseRows;\nexport var tsvFormat = tsv.format;\nexport var tsvFormatRows = tsv.formatRows;\n","function responseBlob(response) {\n  if (!response.ok) throw new Error(response.status + \" \" + response.statusText);\n  return response.blob();\n}\n\nexport default function(input, init) {\n  return fetch(input, init).then(responseBlob);\n}\n","function responseArrayBuffer(response) {\n  if (!response.ok) throw new Error(response.status + \" \" + response.statusText);\n  return response.arrayBuffer();\n}\n\nexport default function(input, init) {\n  return fetch(input, init).then(responseArrayBuffer);\n}\n","function responseText(response) {\n  if (!response.ok) throw new Error(response.status + \" \" + response.statusText);\n  return response.text();\n}\n\nexport default function(input, init) {\n  return fetch(input, init).then(responseText);\n}\n","import {csvParse, dsvFormat, tsvParse} from \"d3-dsv\";\nimport text from \"./text\";\n\nfunction dsvParse(parse) {\n  return function(input, init, row) {\n    if (arguments.length === 2 && typeof init === \"function\") row = init, init = undefined;\n    return text(input, init).then(function(response) {\n      return parse(response, row);\n    });\n  };\n}\n\nexport default function dsv(delimiter, input, init, row) {\n  if (arguments.length === 3 && typeof init === \"function\") row = init, init = undefined;\n  var format = dsvFormat(delimiter);\n  return text(input, init).then(function(response) {\n    return format.parse(response, row);\n  });\n}\n\nexport var csv = dsvParse(csvParse);\nexport var tsv = dsvParse(tsvParse);\n","export default function(input, init) {\n  return new Promise(function(resolve, reject) {\n    var image = new Image;\n    for (var key in init) image[key] = init[key];\n    image.onerror = reject;\n    image.onload = function() { resolve(image); };\n    image.src = input;\n  });\n}\n","function responseJson(response) {\n  if (!response.ok) throw new Error(response.status + \" \" + response.statusText);\n  return response.json();\n}\n\nexport default function(input, init) {\n  return fetch(input, init).then(responseJson);\n}\n","import text from \"./text\";\n\nfunction parser(type) {\n  return function(input, init)  {\n    return text(input, init).then(function(text) {\n      return (new DOMParser).parseFromString(text, type);\n    });\n  };\n}\n\nexport default parser(\"application/xml\");\n\nexport var html = parser(\"text/html\");\n\nexport var svg = parser(\"image/svg+xml\");\n","export default function(x, y) {\n  var nodes;\n\n  if (x == null) x = 0;\n  if (y == null) y = 0;\n\n  function force() {\n    var i,\n        n = nodes.length,\n        node,\n        sx = 0,\n        sy = 0;\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i], sx += node.x, sy += node.y;\n    }\n\n    for (sx = sx / n - x, sy = sy / n - y, i = 0; i < n; ++i) {\n      node = nodes[i], node.x -= sx, node.y -= sy;\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = +_, force) : x;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = +_, force) : y;\n  };\n\n  return force;\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function() {\n  return (Math.random() - 0.5) * 1e-6;\n}\n","export default function(d) {\n  var x = +this._x.call(null, d),\n      y = +this._y.call(null, d);\n  return add(this.cover(x, y), x, y, d);\n}\n\nfunction add(tree, x, y, d) {\n  if (isNaN(x) || isNaN(y)) return tree; // ignore invalid points\n\n  var parent,\n      node = tree._root,\n      leaf = {data: d},\n      x0 = tree._x0,\n      y0 = tree._y0,\n      x1 = tree._x1,\n      y1 = tree._y1,\n      xm,\n      ym,\n      xp,\n      yp,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return tree._root = leaf, tree;\n\n  // Find the existing leaf for the new point, or add it.\n  while (node.length) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (parent = node, !(node = node[i = bottom << 1 | right])) return parent[i] = leaf, tree;\n  }\n\n  // Is the new point is exactly coincident with the existing point?\n  xp = +tree._x.call(null, node.data);\n  yp = +tree._y.call(null, node.data);\n  if (x === xp && y === yp) return leaf.next = node, parent ? parent[i] = leaf : tree._root = leaf, tree;\n\n  // Otherwise, split the leaf node until the old and new point are separated.\n  do {\n    parent = parent ? parent[i] = new Array(4) : tree._root = new Array(4);\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n  } while ((i = bottom << 1 | right) === (j = (yp >= ym) << 1 | (xp >= xm)));\n  return parent[j] = node, parent[i] = leaf, tree;\n}\n\nexport function addAll(data) {\n  var d, i, n = data.length,\n      x,\n      y,\n      xz = new Array(n),\n      yz = new Array(n),\n      x0 = Infinity,\n      y0 = Infinity,\n      x1 = -Infinity,\n      y1 = -Infinity;\n\n  // Compute the points and their extent.\n  for (i = 0; i < n; ++i) {\n    if (isNaN(x = +this._x.call(null, d = data[i])) || isNaN(y = +this._y.call(null, d))) continue;\n    xz[i] = x;\n    yz[i] = y;\n    if (x < x0) x0 = x;\n    if (x > x1) x1 = x;\n    if (y < y0) y0 = y;\n    if (y > y1) y1 = y;\n  }\n\n  // If there were no (valid) points, inherit the existing extent.\n  if (x1 < x0) x0 = this._x0, x1 = this._x1;\n  if (y1 < y0) y0 = this._y0, y1 = this._y1;\n\n  // Expand the tree to cover the new points.\n  this.cover(x0, y0).cover(x1, y1);\n\n  // Add the new points.\n  for (i = 0; i < n; ++i) {\n    add(this, xz[i], yz[i], data[i]);\n  }\n\n  return this;\n}\n","export default function(x, y) {\n  if (isNaN(x = +x) || isNaN(y = +y)) return this; // ignore invalid points\n\n  var x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1;\n\n  // If the quadtree has no extent, initialize them.\n  // Integer extent are necessary so that if we later double the extent,\n  // the existing quadrant boundaries don’t change due to floating point error!\n  if (isNaN(x0)) {\n    x1 = (x0 = Math.floor(x)) + 1;\n    y1 = (y0 = Math.floor(y)) + 1;\n  }\n\n  // Otherwise, double repeatedly to cover.\n  else if (x0 > x || x > x1 || y0 > y || y > y1) {\n    var z = x1 - x0,\n        node = this._root,\n        parent,\n        i;\n\n    switch (i = (y < (y0 + y1) / 2) << 1 | (x < (x0 + x1) / 2)) {\n      case 0: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x1 = x0 + z, y1 = y0 + z, x > x1 || y > y1);\n        break;\n      }\n      case 1: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x0 = x1 - z, y1 = y0 + z, x0 > x || y > y1);\n        break;\n      }\n      case 2: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x1 = x0 + z, y0 = y1 - z, x > x1 || y0 > y);\n        break;\n      }\n      case 3: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x0 = x1 - z, y0 = y1 - z, x0 > x || y0 > y);\n        break;\n      }\n    }\n\n    if (this._root && this._root.length) this._root = node;\n  }\n\n  // If the quadtree covers the point already, just return.\n  else return this;\n\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  return this;\n}\n","export default function(node, x0, y0, x1, y1) {\n  this.node = node;\n  this.x0 = x0;\n  this.y0 = y0;\n  this.x1 = x1;\n  this.y1 = y1;\n}\n","export function defaultX(d) {\n  return d[0];\n}\n\nexport default function(_) {\n  return arguments.length ? (this._x = _, this) : this._x;\n}\n","export function defaultY(d) {\n  return d[1];\n}\n\nexport default function(_) {\n  return arguments.length ? (this._y = _, this) : this._y;\n}\n","import tree_add, {addAll as tree_addAll} from \"./add\";\nimport tree_cover from \"./cover\";\nimport tree_data from \"./data\";\nimport tree_extent from \"./extent\";\nimport tree_find from \"./find\";\nimport tree_remove, {removeAll as tree_removeAll} from \"./remove\";\nimport tree_root from \"./root\";\nimport tree_size from \"./size\";\nimport tree_visit from \"./visit\";\nimport tree_visitAfter from \"./visitAfter\";\nimport tree_x, {defaultX} from \"./x\";\nimport tree_y, {defaultY} from \"./y\";\n\nexport default function quadtree(nodes, x, y) {\n  var tree = new Quadtree(x == null ? defaultX : x, y == null ? defaultY : y, NaN, NaN, NaN, NaN);\n  return nodes == null ? tree : tree.addAll(nodes);\n}\n\nfunction Quadtree(x, y, x0, y0, x1, y1) {\n  this._x = x;\n  this._y = y;\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  this._root = undefined;\n}\n\nfunction leaf_copy(leaf) {\n  var copy = {data: leaf.data}, next = copy;\n  while (leaf = leaf.next) next = next.next = {data: leaf.data};\n  return copy;\n}\n\nvar treeProto = quadtree.prototype = Quadtree.prototype;\n\ntreeProto.copy = function() {\n  var copy = new Quadtree(this._x, this._y, this._x0, this._y0, this._x1, this._y1),\n      node = this._root,\n      nodes,\n      child;\n\n  if (!node) return copy;\n\n  if (!node.length) return copy._root = leaf_copy(node), copy;\n\n  nodes = [{source: node, target: copy._root = new Array(4)}];\n  while (node = nodes.pop()) {\n    for (var i = 0; i < 4; ++i) {\n      if (child = node.source[i]) {\n        if (child.length) nodes.push({source: child, target: node.target[i] = new Array(4)});\n        else node.target[i] = leaf_copy(child);\n      }\n    }\n  }\n\n  return copy;\n};\n\ntreeProto.add = tree_add;\ntreeProto.addAll = tree_addAll;\ntreeProto.cover = tree_cover;\ntreeProto.data = tree_data;\ntreeProto.extent = tree_extent;\ntreeProto.find = tree_find;\ntreeProto.remove = tree_remove;\ntreeProto.removeAll = tree_removeAll;\ntreeProto.root = tree_root;\ntreeProto.size = tree_size;\ntreeProto.visit = tree_visit;\ntreeProto.visitAfter = tree_visitAfter;\ntreeProto.x = tree_x;\ntreeProto.y = tree_y;\n","import constant from \"./constant\";\nimport jiggle from \"./jiggle\";\nimport {quadtree} from \"d3-quadtree\";\n\nfunction x(d) {\n  return d.x + d.vx;\n}\n\nfunction y(d) {\n  return d.y + d.vy;\n}\n\nexport default function(radius) {\n  var nodes,\n      radii,\n      strength = 1,\n      iterations = 1;\n\n  if (typeof radius !== \"function\") radius = constant(radius == null ? 1 : +radius);\n\n  function force() {\n    var i, n = nodes.length,\n        tree,\n        node,\n        xi,\n        yi,\n        ri,\n        ri2;\n\n    for (var k = 0; k < iterations; ++k) {\n      tree = quadtree(nodes, x, y).visitAfter(prepare);\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        ri = radii[node.index], ri2 = ri * ri;\n        xi = node.x + node.vx;\n        yi = node.y + node.vy;\n        tree.visit(apply);\n      }\n    }\n\n    function apply(quad, x0, y0, x1, y1) {\n      var data = quad.data, rj = quad.r, r = ri + rj;\n      if (data) {\n        if (data.index > node.index) {\n          var x = xi - data.x - data.vx,\n              y = yi - data.y - data.vy,\n              l = x * x + y * y;\n          if (l < r * r) {\n            if (x === 0) x = jiggle(), l += x * x;\n            if (y === 0) y = jiggle(), l += y * y;\n            l = (r - (l = Math.sqrt(l))) / l * strength;\n            node.vx += (x *= l) * (r = (rj *= rj) / (ri2 + rj));\n            node.vy += (y *= l) * r;\n            data.vx -= x * (r = 1 - r);\n            data.vy -= y * r;\n          }\n        }\n        return;\n      }\n      return x0 > xi + r || x1 < xi - r || y0 > yi + r || y1 < yi - r;\n    }\n  }\n\n  function prepare(quad) {\n    if (quad.data) return quad.r = radii[quad.data.index];\n    for (var i = quad.r = 0; i < 4; ++i) {\n      if (quad[i] && quad[i].r > quad.r) {\n        quad.r = quad[i].r;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length, node;\n    radii = new Array(n);\n    for (i = 0; i < n; ++i) node = nodes[i], radii[node.index] = +radius(node, i, nodes);\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.iterations = function(_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = +_, force) : strength;\n  };\n\n  force.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : radius;\n  };\n\n  return force;\n}\n","export default function() {\n  var data = [];\n  this.visit(function(node) {\n    if (!node.length) do data.push(node.data); while (node = node.next)\n  });\n  return data;\n}\n","export default function(_) {\n  return arguments.length\n      ? this.cover(+_[0][0], +_[0][1]).cover(+_[1][0], +_[1][1])\n      : isNaN(this._x0) ? undefined : [[this._x0, this._y0], [this._x1, this._y1]];\n}\n","import Quad from \"./quad\";\n\nexport default function(x, y, radius) {\n  var data,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1,\n      y1,\n      x2,\n      y2,\n      x3 = this._x1,\n      y3 = this._y1,\n      quads = [],\n      node = this._root,\n      q,\n      i;\n\n  if (node) quads.push(new Quad(node, x0, y0, x3, y3));\n  if (radius == null) radius = Infinity;\n  else {\n    x0 = x - radius, y0 = y - radius;\n    x3 = x + radius, y3 = y + radius;\n    radius *= radius;\n  }\n\n  while (q = quads.pop()) {\n\n    // Stop searching if this quadrant can’t contain a closer node.\n    if (!(node = q.node)\n        || (x1 = q.x0) > x3\n        || (y1 = q.y0) > y3\n        || (x2 = q.x1) < x0\n        || (y2 = q.y1) < y0) continue;\n\n    // Bisect the current quadrant.\n    if (node.length) {\n      var xm = (x1 + x2) / 2,\n          ym = (y1 + y2) / 2;\n\n      quads.push(\n        new Quad(node[3], xm, ym, x2, y2),\n        new Quad(node[2], x1, ym, xm, y2),\n        new Quad(node[1], xm, y1, x2, ym),\n        new Quad(node[0], x1, y1, xm, ym)\n      );\n\n      // Visit the closest quadrant first.\n      if (i = (y >= ym) << 1 | (x >= xm)) {\n        q = quads[quads.length - 1];\n        quads[quads.length - 1] = quads[quads.length - 1 - i];\n        quads[quads.length - 1 - i] = q;\n      }\n    }\n\n    // Visit this point. (Visiting coincident points isn’t necessary!)\n    else {\n      var dx = x - +this._x.call(null, node.data),\n          dy = y - +this._y.call(null, node.data),\n          d2 = dx * dx + dy * dy;\n      if (d2 < radius) {\n        var d = Math.sqrt(radius = d2);\n        x0 = x - d, y0 = y - d;\n        x3 = x + d, y3 = y + d;\n        data = node.data;\n      }\n    }\n  }\n\n  return data;\n}\n","export default function(d) {\n  if (isNaN(x = +this._x.call(null, d)) || isNaN(y = +this._y.call(null, d))) return this; // ignore invalid points\n\n  var parent,\n      node = this._root,\n      retainer,\n      previous,\n      next,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1,\n      x,\n      y,\n      xm,\n      ym,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return this;\n\n  // Find the leaf node for the point.\n  // While descending, also retain the deepest parent with a non-removed sibling.\n  if (node.length) while (true) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (!(parent = node, node = node[i = bottom << 1 | right])) return this;\n    if (!node.length) break;\n    if (parent[(i + 1) & 3] || parent[(i + 2) & 3] || parent[(i + 3) & 3]) retainer = parent, j = i;\n  }\n\n  // Find the point to remove.\n  while (node.data !== d) if (!(previous = node, node = node.next)) return this;\n  if (next = node.next) delete node.next;\n\n  // If there are multiple coincident points, remove just the point.\n  if (previous) return (next ? previous.next = next : delete previous.next), this;\n\n  // If this is the root point, remove it.\n  if (!parent) return this._root = next, this;\n\n  // Remove this leaf.\n  next ? parent[i] = next : delete parent[i];\n\n  // If the parent now contains exactly one leaf, collapse superfluous parents.\n  if ((node = parent[0] || parent[1] || parent[2] || parent[3])\n      && node === (parent[3] || parent[2] || parent[1] || parent[0])\n      && !node.length) {\n    if (retainer) retainer[j] = node;\n    else this._root = node;\n  }\n\n  return this;\n}\n\nexport function removeAll(data) {\n  for (var i = 0, n = data.length; i < n; ++i) this.remove(data[i]);\n  return this;\n}\n","export default function() {\n  return this._root;\n}\n","export default function() {\n  var size = 0;\n  this.visit(function(node) {\n    if (!node.length) do ++size; while (node = node.next)\n  });\n  return size;\n}\n","import Quad from \"./quad\";\n\nexport default function(callback) {\n  var quads = [], q, node = this._root, child, x0, y0, x1, y1;\n  if (node) quads.push(new Quad(node, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    if (!callback(node = q.node, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1) && node.length) {\n      var xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n    }\n  }\n  return this;\n}\n","import Quad from \"./quad\";\n\nexport default function(callback) {\n  var quads = [], next = [], q;\n  if (this._root) quads.push(new Quad(this._root, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    var node = q.node;\n    if (node.length) {\n      var child, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1, xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n    }\n    next.push(q);\n  }\n  while (q = next.pop()) {\n    callback(q.node, q.x0, q.y0, q.x1, q.y1);\n  }\n  return this;\n}\n","import constant from \"./constant\";\nimport jiggle from \"./jiggle\";\nimport {map} from \"d3-collection\";\n\nfunction index(d) {\n  return d.index;\n}\n\nfunction find(nodeById, nodeId) {\n  var node = nodeById.get(nodeId);\n  if (!node) throw new Error(\"missing: \" + nodeId);\n  return node;\n}\n\nexport default function(links) {\n  var id = index,\n      strength = defaultStrength,\n      strengths,\n      distance = constant(30),\n      distances,\n      nodes,\n      count,\n      bias,\n      iterations = 1;\n\n  if (links == null) links = [];\n\n  function defaultStrength(link) {\n    return 1 / Math.min(count[link.source.index], count[link.target.index]);\n  }\n\n  function force(alpha) {\n    for (var k = 0, n = links.length; k < iterations; ++k) {\n      for (var i = 0, link, source, target, x, y, l, b; i < n; ++i) {\n        link = links[i], source = link.source, target = link.target;\n        x = target.x + target.vx - source.x - source.vx || jiggle();\n        y = target.y + target.vy - source.y - source.vy || jiggle();\n        l = Math.sqrt(x * x + y * y);\n        l = (l - distances[i]) / l * alpha * strengths[i];\n        x *= l, y *= l;\n        target.vx -= x * (b = bias[i]);\n        target.vy -= y * b;\n        source.vx += x * (b = 1 - b);\n        source.vy += y * b;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n\n    var i,\n        n = nodes.length,\n        m = links.length,\n        nodeById = map(nodes, id),\n        link;\n\n    for (i = 0, count = new Array(n); i < m; ++i) {\n      link = links[i], link.index = i;\n      if (typeof link.source !== \"object\") link.source = find(nodeById, link.source);\n      if (typeof link.target !== \"object\") link.target = find(nodeById, link.target);\n      count[link.source.index] = (count[link.source.index] || 0) + 1;\n      count[link.target.index] = (count[link.target.index] || 0) + 1;\n    }\n\n    for (i = 0, bias = new Array(m); i < m; ++i) {\n      link = links[i], bias[i] = count[link.source.index] / (count[link.source.index] + count[link.target.index]);\n    }\n\n    strengths = new Array(m), initializeStrength();\n    distances = new Array(m), initializeDistance();\n  }\n\n  function initializeStrength() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      strengths[i] = +strength(links[i], i, links);\n    }\n  }\n\n  function initializeDistance() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      distances[i] = +distance(links[i], i, links);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.links = function(_) {\n    return arguments.length ? (links = _, initialize(), force) : links;\n  };\n\n  force.id = function(_) {\n    return arguments.length ? (id = _, force) : id;\n  };\n\n  force.iterations = function(_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initializeStrength(), force) : strength;\n  };\n\n  force.distance = function(_) {\n    return arguments.length ? (distance = typeof _ === \"function\" ? _ : constant(+_), initializeDistance(), force) : distance;\n  };\n\n  return force;\n}\n","import {dispatch} from \"d3-dispatch\";\nimport {map} from \"d3-collection\";\nimport {timer} from \"d3-timer\";\n\nexport function x(d) {\n  return d.x;\n}\n\nexport function y(d) {\n  return d.y;\n}\n\nvar initialRadius = 10,\n    initialAngle = Math.PI * (3 - Math.sqrt(5));\n\nexport default function(nodes) {\n  var simulation,\n      alpha = 1,\n      alphaMin = 0.001,\n      alphaDecay = 1 - Math.pow(alphaMin, 1 / 300),\n      alphaTarget = 0,\n      velocityDecay = 0.6,\n      forces = map(),\n      stepper = timer(step),\n      event = dispatch(\"tick\", \"end\");\n\n  if (nodes == null) nodes = [];\n\n  function step() {\n    tick();\n    event.call(\"tick\", simulation);\n    if (alpha < alphaMin) {\n      stepper.stop();\n      event.call(\"end\", simulation);\n    }\n  }\n\n  function tick() {\n    var i, n = nodes.length, node;\n\n    alpha += (alphaTarget - alpha) * alphaDecay;\n\n    forces.each(function(force) {\n      force(alpha);\n    });\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i];\n      if (node.fx == null) node.x += node.vx *= velocityDecay;\n      else node.x = node.fx, node.vx = 0;\n      if (node.fy == null) node.y += node.vy *= velocityDecay;\n      else node.y = node.fy, node.vy = 0;\n    }\n  }\n\n  function initializeNodes() {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.index = i;\n      if (isNaN(node.x) || isNaN(node.y)) {\n        var radius = initialRadius * Math.sqrt(i), angle = i * initialAngle;\n        node.x = radius * Math.cos(angle);\n        node.y = radius * Math.sin(angle);\n      }\n      if (isNaN(node.vx) || isNaN(node.vy)) {\n        node.vx = node.vy = 0;\n      }\n    }\n  }\n\n  function initializeForce(force) {\n    if (force.initialize) force.initialize(nodes);\n    return force;\n  }\n\n  initializeNodes();\n\n  return simulation = {\n    tick: tick,\n\n    restart: function() {\n      return stepper.restart(step), simulation;\n    },\n\n    stop: function() {\n      return stepper.stop(), simulation;\n    },\n\n    nodes: function(_) {\n      return arguments.length ? (nodes = _, initializeNodes(), forces.each(initializeForce), simulation) : nodes;\n    },\n\n    alpha: function(_) {\n      return arguments.length ? (alpha = +_, simulation) : alpha;\n    },\n\n    alphaMin: function(_) {\n      return arguments.length ? (alphaMin = +_, simulation) : alphaMin;\n    },\n\n    alphaDecay: function(_) {\n      return arguments.length ? (alphaDecay = +_, simulation) : +alphaDecay;\n    },\n\n    alphaTarget: function(_) {\n      return arguments.length ? (alphaTarget = +_, simulation) : alphaTarget;\n    },\n\n    velocityDecay: function(_) {\n      return arguments.length ? (velocityDecay = 1 - _, simulation) : 1 - velocityDecay;\n    },\n\n    force: function(name, _) {\n      return arguments.length > 1 ? ((_ == null ? forces.remove(name) : forces.set(name, initializeForce(_))), simulation) : forces.get(name);\n    },\n\n    find: function(x, y, radius) {\n      var i = 0,\n          n = nodes.length,\n          dx,\n          dy,\n          d2,\n          node,\n          closest;\n\n      if (radius == null) radius = Infinity;\n      else radius *= radius;\n\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        dx = x - node.x;\n        dy = y - node.y;\n        d2 = dx * dx + dy * dy;\n        if (d2 < radius) closest = node, radius = d2;\n      }\n\n      return closest;\n    },\n\n    on: function(name, _) {\n      return arguments.length > 1 ? (event.on(name, _), simulation) : event.on(name);\n    }\n  };\n}\n","import constant from \"./constant\";\nimport jiggle from \"./jiggle\";\nimport {quadtree} from \"d3-quadtree\";\nimport {x, y} from \"./simulation\";\n\nexport default function() {\n  var nodes,\n      node,\n      alpha,\n      strength = constant(-30),\n      strengths,\n      distanceMin2 = 1,\n      distanceMax2 = Infinity,\n      theta2 = 0.81;\n\n  function force(_) {\n    var i, n = nodes.length, tree = quadtree(nodes, x, y).visitAfter(accumulate);\n    for (alpha = _, i = 0; i < n; ++i) node = nodes[i], tree.visit(apply);\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length, node;\n    strengths = new Array(n);\n    for (i = 0; i < n; ++i) node = nodes[i], strengths[node.index] = +strength(node, i, nodes);\n  }\n\n  function accumulate(quad) {\n    var strength = 0, q, c, weight = 0, x, y, i;\n\n    // For internal nodes, accumulate forces from child quadrants.\n    if (quad.length) {\n      for (x = y = i = 0; i < 4; ++i) {\n        if ((q = quad[i]) && (c = Math.abs(q.value))) {\n          strength += q.value, weight += c, x += c * q.x, y += c * q.y;\n        }\n      }\n      quad.x = x / weight;\n      quad.y = y / weight;\n    }\n\n    // For leaf nodes, accumulate forces from coincident quadrants.\n    else {\n      q = quad;\n      q.x = q.data.x;\n      q.y = q.data.y;\n      do strength += strengths[q.data.index];\n      while (q = q.next);\n    }\n\n    quad.value = strength;\n  }\n\n  function apply(quad, x1, _, x2) {\n    if (!quad.value) return true;\n\n    var x = quad.x - node.x,\n        y = quad.y - node.y,\n        w = x2 - x1,\n        l = x * x + y * y;\n\n    // Apply the Barnes-Hut approximation if possible.\n    // Limit forces for very close nodes; randomize direction if coincident.\n    if (w * w / theta2 < l) {\n      if (l < distanceMax2) {\n        if (x === 0) x = jiggle(), l += x * x;\n        if (y === 0) y = jiggle(), l += y * y;\n        if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n        node.vx += x * quad.value * alpha / l;\n        node.vy += y * quad.value * alpha / l;\n      }\n      return true;\n    }\n\n    // Otherwise, process points directly.\n    else if (quad.length || l >= distanceMax2) return;\n\n    // Limit forces for very close nodes; randomize direction if coincident.\n    if (quad.data !== node || quad.next) {\n      if (x === 0) x = jiggle(), l += x * x;\n      if (y === 0) y = jiggle(), l += y * y;\n      if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n    }\n\n    do if (quad.data !== node) {\n      w = strengths[quad.data.index] * alpha / l;\n      node.vx += x * w;\n      node.vy += y * w;\n    } while (quad = quad.next);\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : strength;\n  };\n\n  force.distanceMin = function(_) {\n    return arguments.length ? (distanceMin2 = _ * _, force) : Math.sqrt(distanceMin2);\n  };\n\n  force.distanceMax = function(_) {\n    return arguments.length ? (distanceMax2 = _ * _, force) : Math.sqrt(distanceMax2);\n  };\n\n  force.theta = function(_) {\n    return arguments.length ? (theta2 = _ * _, force) : Math.sqrt(theta2);\n  };\n\n  return force;\n}\n","import constant from \"./constant\";\n\nexport default function(radius, x, y) {\n  var nodes,\n      strength = constant(0.1),\n      strengths,\n      radiuses;\n\n  if (typeof radius !== \"function\") radius = constant(+radius);\n  if (x == null) x = 0;\n  if (y == null) y = 0;\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length; i < n; ++i) {\n      var node = nodes[i],\n          dx = node.x - x || 1e-6,\n          dy = node.y - y || 1e-6,\n          r = Math.sqrt(dx * dx + dy * dy),\n          k = (radiuses[i] - r) * strengths[i] * alpha / r;\n      node.vx += dx * k;\n      node.vy += dy * k;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    radiuses = new Array(n);\n    for (i = 0; i < n; ++i) {\n      radiuses[i] = +radius(nodes[i], i, nodes);\n      strengths[i] = isNaN(radiuses[i]) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _, initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : strength;\n  };\n\n  force.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : radius;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = +_, force) : x;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = +_, force) : y;\n  };\n\n  return force;\n}\n","import constant from \"./constant\";\n\nexport default function(x) {\n  var strength = constant(0.1),\n      nodes,\n      strengths,\n      xz;\n\n  if (typeof x !== \"function\") x = constant(x == null ? 0 : +x);\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vx += (xz[i] - node.x) * strengths[i] * alpha;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    xz = new Array(n);\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(xz[i] = +x(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : strength;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : x;\n  };\n\n  return force;\n}\n","import constant from \"./constant\";\n\nexport default function(y) {\n  var strength = constant(0.1),\n      nodes,\n      strengths,\n      yz;\n\n  if (typeof y !== \"function\") y = constant(y == null ? 0 : +y);\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vy += (yz[i] - node.y) * strengths[i] * alpha;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    yz = new Array(n);\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(yz[i] = +y(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : strength;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : y;\n  };\n\n  return force;\n}\n","// Computes the decimal coefficient and exponent of the specified number x with\n// significant digits p, where x is positive and p is in [1, 21] or undefined.\n// For example, formatDecimal(1.23) returns [\"123\", 0].\nexport default function(x, p) {\n  if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf(\"e\")) < 0) return null; // NaN, ±Infinity\n  var i, coefficient = x.slice(0, i);\n\n  // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\n  // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\n  return [\n    coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,\n    +x.slice(i + 1)\n  ];\n}\n","import formatDecimal from \"./formatDecimal\";\n\nexport default function(x) {\n  return x = formatDecimal(Math.abs(x)), x ? x[1] : NaN;\n}\n","// [[fill]align][sign][symbol][0][width][,][.precision][~][type]\nvar re = /^(?:(.)?([<>=^]))?([+\\-\\( ])?([$#])?(0)?(\\d+)?(,)?(\\.\\d+)?(~)?([a-z%])?$/i;\n\nexport default function formatSpecifier(specifier) {\n  return new FormatSpecifier(specifier);\n}\n\nformatSpecifier.prototype = FormatSpecifier.prototype; // instanceof\n\nfunction FormatSpecifier(specifier) {\n  if (!(match = re.exec(specifier))) throw new Error(\"invalid format: \" + specifier);\n  var match;\n  this.fill = match[1] || \" \";\n  this.align = match[2] || \">\";\n  this.sign = match[3] || \"-\";\n  this.symbol = match[4] || \"\";\n  this.zero = !!match[5];\n  this.width = match[6] && +match[6];\n  this.comma = !!match[7];\n  this.precision = match[8] && +match[8].slice(1);\n  this.trim = !!match[9];\n  this.type = match[10] || \"\";\n}\n\nFormatSpecifier.prototype.toString = function() {\n  return this.fill\n      + this.align\n      + this.sign\n      + this.symbol\n      + (this.zero ? \"0\" : \"\")\n      + (this.width == null ? \"\" : Math.max(1, this.width | 0))\n      + (this.comma ? \",\" : \"\")\n      + (this.precision == null ? \"\" : \".\" + Math.max(0, this.precision | 0))\n      + (this.trim ? \"~\" : \"\")\n      + this.type;\n};\n","// Trims insignificant zeros, e.g., replaces 1.2000k with 1.2k.\nexport default function(s) {\n  out: for (var n = s.length, i = 1, i0 = -1, i1; i < n; ++i) {\n    switch (s[i]) {\n      case \".\": i0 = i1 = i; break;\n      case \"0\": if (i0 === 0) i0 = i; i1 = i; break;\n      default: if (i0 > 0) { if (!+s[i]) break out; i0 = 0; } break;\n    }\n  }\n  return i0 > 0 ? s.slice(0, i0) + s.slice(i1 + 1) : s;\n}\n","import formatDecimal from \"./formatDecimal\";\n\nexport var prefixExponent;\n\nexport default function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1],\n      i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,\n      n = coefficient.length;\n  return i === n ? coefficient\n      : i > n ? coefficient + new Array(i - n + 1).join(\"0\")\n      : i > 0 ? coefficient.slice(0, i) + \".\" + coefficient.slice(i)\n      : \"0.\" + new Array(1 - i).join(\"0\") + formatDecimal(x, Math.max(0, p + i - 1))[0]; // less than 1y!\n}\n","import formatLocale from \"./locale\";\n\nvar locale;\nexport var format;\nexport var formatPrefix;\n\ndefaultLocale({\n  decimal: \".\",\n  thousands: \",\",\n  grouping: [3],\n  currency: [\"$\", \"\"]\n});\n\nexport default function defaultLocale(definition) {\n  locale = formatLocale(definition);\n  format = locale.format;\n  formatPrefix = locale.formatPrefix;\n  return locale;\n}\n","import formatDecimal from \"./formatDecimal\";\n\nexport default function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1];\n  return exponent < 0 ? \"0.\" + new Array(-exponent).join(\"0\") + coefficient\n      : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + \".\" + coefficient.slice(exponent + 1)\n      : coefficient + new Array(exponent - coefficient.length + 2).join(\"0\");\n}\n","import formatPrefixAuto from \"./formatPrefixAuto\";\nimport formatRounded from \"./formatRounded\";\n\nexport default {\n  \"%\": function(x, p) { return (x * 100).toFixed(p); },\n  \"b\": function(x) { return Math.round(x).toString(2); },\n  \"c\": function(x) { return x + \"\"; },\n  \"d\": function(x) { return Math.round(x).toString(10); },\n  \"e\": function(x, p) { return x.toExponential(p); },\n  \"f\": function(x, p) { return x.toFixed(p); },\n  \"g\": function(x, p) { return x.toPrecision(p); },\n  \"o\": function(x) { return Math.round(x).toString(8); },\n  \"p\": function(x, p) { return formatRounded(x * 100, p); },\n  \"r\": formatRounded,\n  \"s\": formatPrefixAuto,\n  \"X\": function(x) { return Math.round(x).toString(16).toUpperCase(); },\n  \"x\": function(x) { return Math.round(x).toString(16); }\n};\n","export default function(x) {\n  return x;\n}\n","import exponent from \"./exponent\";\nimport formatGroup from \"./formatGroup\";\nimport formatNumerals from \"./formatNumerals\";\nimport formatSpecifier from \"./formatSpecifier\";\nimport formatTrim from \"./formatTrim\";\nimport formatTypes from \"./formatTypes\";\nimport {prefixExponent} from \"./formatPrefixAuto\";\nimport identity from \"./identity\";\n\nvar prefixes = [\"y\",\"z\",\"a\",\"f\",\"p\",\"n\",\"µ\",\"m\",\"\",\"k\",\"M\",\"G\",\"T\",\"P\",\"E\",\"Z\",\"Y\"];\n\nexport default function(locale) {\n  var group = locale.grouping && locale.thousands ? formatGroup(locale.grouping, locale.thousands) : identity,\n      currency = locale.currency,\n      decimal = locale.decimal,\n      numerals = locale.numerals ? formatNumerals(locale.numerals) : identity,\n      percent = locale.percent || \"%\";\n\n  function newFormat(specifier) {\n    specifier = formatSpecifier(specifier);\n\n    var fill = specifier.fill,\n        align = specifier.align,\n        sign = specifier.sign,\n        symbol = specifier.symbol,\n        zero = specifier.zero,\n        width = specifier.width,\n        comma = specifier.comma,\n        precision = specifier.precision,\n        trim = specifier.trim,\n        type = specifier.type;\n\n    // The \"n\" type is an alias for \",g\".\n    if (type === \"n\") comma = true, type = \"g\";\n\n    // The \"\" type, and any invalid type, is an alias for \".12~g\".\n    else if (!formatTypes[type]) precision == null && (precision = 12), trim = true, type = \"g\";\n\n    // If zero fill is specified, padding goes after sign and before digits.\n    if (zero || (fill === \"0\" && align === \"=\")) zero = true, fill = \"0\", align = \"=\";\n\n    // Compute the prefix and suffix.\n    // For SI-prefix, the suffix is lazily computed.\n    var prefix = symbol === \"$\" ? currency[0] : symbol === \"#\" && /[boxX]/.test(type) ? \"0\" + type.toLowerCase() : \"\",\n        suffix = symbol === \"$\" ? currency[1] : /[%p]/.test(type) ? percent : \"\";\n\n    // What format function should we use?\n    // Is this an integer type?\n    // Can this type generate exponential notation?\n    var formatType = formatTypes[type],\n        maybeSuffix = /[defgprs%]/.test(type);\n\n    // Set the default precision if not specified,\n    // or clamp the specified precision to the supported range.\n    // For significant precision, it must be in [1, 21].\n    // For fixed precision, it must be in [0, 20].\n    precision = precision == null ? 6\n        : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision))\n        : Math.max(0, Math.min(20, precision));\n\n    function format(value) {\n      var valuePrefix = prefix,\n          valueSuffix = suffix,\n          i, n, c;\n\n      if (type === \"c\") {\n        valueSuffix = formatType(value) + valueSuffix;\n        value = \"\";\n      } else {\n        value = +value;\n\n        // Perform the initial formatting.\n        var valueNegative = value < 0;\n        value = formatType(Math.abs(value), precision);\n\n        // Trim insignificant zeros.\n        if (trim) value = formatTrim(value);\n\n        // If a negative value rounds to zero during formatting, treat as positive.\n        if (valueNegative && +value === 0) valueNegative = false;\n\n        // Compute the prefix and suffix.\n        valuePrefix = (valueNegative ? (sign === \"(\" ? sign : \"-\") : sign === \"-\" || sign === \"(\" ? \"\" : sign) + valuePrefix;\n        valueSuffix = (type === \"s\" ? prefixes[8 + prefixExponent / 3] : \"\") + valueSuffix + (valueNegative && sign === \"(\" ? \")\" : \"\");\n\n        // Break the formatted value into the integer “value” part that can be\n        // grouped, and fractional or exponential “suffix” part that is not.\n        if (maybeSuffix) {\n          i = -1, n = value.length;\n          while (++i < n) {\n            if (c = value.charCodeAt(i), 48 > c || c > 57) {\n              valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;\n              value = value.slice(0, i);\n              break;\n            }\n          }\n        }\n      }\n\n      // If the fill character is not \"0\", grouping is applied before padding.\n      if (comma && !zero) value = group(value, Infinity);\n\n      // Compute the padding.\n      var length = valuePrefix.length + value.length + valueSuffix.length,\n          padding = length < width ? new Array(width - length + 1).join(fill) : \"\";\n\n      // If the fill character is \"0\", grouping is applied after padding.\n      if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = \"\";\n\n      // Reconstruct the final output based on the desired alignment.\n      switch (align) {\n        case \"<\": value = valuePrefix + value + valueSuffix + padding; break;\n        case \"=\": value = valuePrefix + padding + value + valueSuffix; break;\n        case \"^\": value = padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length); break;\n        default: value = padding + valuePrefix + value + valueSuffix; break;\n      }\n\n      return numerals(value);\n    }\n\n    format.toString = function() {\n      return specifier + \"\";\n    };\n\n    return format;\n  }\n\n  function formatPrefix(specifier, value) {\n    var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = \"f\", specifier)),\n        e = Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3,\n        k = Math.pow(10, -e),\n        prefix = prefixes[8 + e / 3];\n    return function(value) {\n      return f(k * value) + prefix;\n    };\n  }\n\n  return {\n    format: newFormat,\n    formatPrefix: formatPrefix\n  };\n}\n","export default function(grouping, thousands) {\n  return function(value, width) {\n    var i = value.length,\n        t = [],\n        j = 0,\n        g = grouping[0],\n        length = 0;\n\n    while (i > 0 && g > 0) {\n      if (length + g + 1 > width) g = Math.max(1, width - length);\n      t.push(value.substring(i -= g, i + g));\n      if ((length += g + 1) > width) break;\n      g = grouping[j = (j + 1) % grouping.length];\n    }\n\n    return t.reverse().join(thousands);\n  };\n}\n","export default function(numerals) {\n  return function(value) {\n    return value.replace(/[0-9]/g, function(i) {\n      return numerals[+i];\n    });\n  };\n}\n","import exponent from \"./exponent\";\n\nexport default function(step) {\n  return Math.max(0, -exponent(Math.abs(step)));\n}\n","import exponent from \"./exponent\";\n\nexport default function(step, value) {\n  return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3 - exponent(Math.abs(step)));\n}\n","import exponent from \"./exponent\";\n\nexport default function(step, max) {\n  step = Math.abs(step), max = Math.abs(max) - step;\n  return Math.max(0, exponent(max) - exponent(step)) + 1;\n}\n","// Adds floating point numbers with twice the normal precision.\n// Reference: J. R. Shewchuk, Adaptive Precision Floating-Point Arithmetic and\n// Fast Robust Geometric Predicates, Discrete & Computational Geometry 18(3)\n// 305–363 (1997).\n// Code adapted from GeographicLib by Charles F. F. Karney,\n// http://geographiclib.sourceforge.net/\n\nexport default function() {\n  return new Adder;\n}\n\nfunction Adder() {\n  this.reset();\n}\n\nAdder.prototype = {\n  constructor: Adder,\n  reset: function() {\n    this.s = // rounded value\n    this.t = 0; // exact error\n  },\n  add: function(y) {\n    add(temp, y, this.t);\n    add(this, temp.s, this.s);\n    if (this.s) this.t += temp.t;\n    else this.s = temp.t;\n  },\n  valueOf: function() {\n    return this.s;\n  }\n};\n\nvar temp = new Adder;\n\nfunction add(adder, a, b) {\n  var x = adder.s = a + b,\n      bv = x - a,\n      av = x - bv;\n  adder.t = (a - av) + (b - bv);\n}\n","export var epsilon = 1e-6;\nexport var epsilon2 = 1e-12;\nexport var pi = Math.PI;\nexport var halfPi = pi / 2;\nexport var quarterPi = pi / 4;\nexport var tau = pi * 2;\n\nexport var degrees = 180 / pi;\nexport var radians = pi / 180;\n\nexport var abs = Math.abs;\nexport var atan = Math.atan;\nexport var atan2 = Math.atan2;\nexport var cos = Math.cos;\nexport var ceil = Math.ceil;\nexport var exp = Math.exp;\nexport var floor = Math.floor;\nexport var log = Math.log;\nexport var pow = Math.pow;\nexport var sin = Math.sin;\nexport var sign = Math.sign || function(x) { return x > 0 ? 1 : x < 0 ? -1 : 0; };\nexport var sqrt = Math.sqrt;\nexport var tan = Math.tan;\n\nexport function acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);\n}\n\nexport function asin(x) {\n  return x > 1 ? halfPi : x < -1 ? -halfPi : Math.asin(x);\n}\n\nexport function haversin(x) {\n  return (x = sin(x / 2)) * x;\n}\n","export default function noop() {}\n","function streamGeometry(geometry, stream) {\n  if (geometry && streamGeometryType.hasOwnProperty(geometry.type)) {\n    streamGeometryType[geometry.type](geometry, stream);\n  }\n}\n\nvar streamObjectType = {\n  Feature: function(object, stream) {\n    streamGeometry(object.geometry, stream);\n  },\n  FeatureCollection: function(object, stream) {\n    var features = object.features, i = -1, n = features.length;\n    while (++i < n) streamGeometry(features[i].geometry, stream);\n  }\n};\n\nvar streamGeometryType = {\n  Sphere: function(object, stream) {\n    stream.sphere();\n  },\n  Point: function(object, stream) {\n    object = object.coordinates;\n    stream.point(object[0], object[1], object[2]);\n  },\n  MultiPoint: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) object = coordinates[i], stream.point(object[0], object[1], object[2]);\n  },\n  LineString: function(object, stream) {\n    streamLine(object.coordinates, stream, 0);\n  },\n  MultiLineString: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamLine(coordinates[i], stream, 0);\n  },\n  Polygon: function(object, stream) {\n    streamPolygon(object.coordinates, stream);\n  },\n  MultiPolygon: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamPolygon(coordinates[i], stream);\n  },\n  GeometryCollection: function(object, stream) {\n    var geometries = object.geometries, i = -1, n = geometries.length;\n    while (++i < n) streamGeometry(geometries[i], stream);\n  }\n};\n\nfunction streamLine(coordinates, stream, closed) {\n  var i = -1, n = coordinates.length - closed, coordinate;\n  stream.lineStart();\n  while (++i < n) coordinate = coordinates[i], stream.point(coordinate[0], coordinate[1], coordinate[2]);\n  stream.lineEnd();\n}\n\nfunction streamPolygon(coordinates, stream) {\n  var i = -1, n = coordinates.length;\n  stream.polygonStart();\n  while (++i < n) streamLine(coordinates[i], stream, 1);\n  stream.polygonEnd();\n}\n\nexport default function(object, stream) {\n  if (object && streamObjectType.hasOwnProperty(object.type)) {\n    streamObjectType[object.type](object, stream);\n  } else {\n    streamGeometry(object, stream);\n  }\n}\n","import adder from \"./adder\";\nimport {atan2, cos, quarterPi, radians, sin, tau} from \"./math\";\nimport noop from \"./noop\";\nimport stream from \"./stream\";\n\nexport var areaRingSum = adder();\n\nvar areaSum = adder(),\n    lambda00,\n    phi00,\n    lambda0,\n    cosPhi0,\n    sinPhi0;\n\nexport var areaStream = {\n  point: noop,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: function() {\n    areaRingSum.reset();\n    areaStream.lineStart = areaRingStart;\n    areaStream.lineEnd = areaRingEnd;\n  },\n  polygonEnd: function() {\n    var areaRing = +areaRingSum;\n    areaSum.add(areaRing < 0 ? tau + areaRing : areaRing);\n    this.lineStart = this.lineEnd = this.point = noop;\n  },\n  sphere: function() {\n    areaSum.add(tau);\n  }\n};\n\nfunction areaRingStart() {\n  areaStream.point = areaPointFirst;\n}\n\nfunction areaRingEnd() {\n  areaPoint(lambda00, phi00);\n}\n\nfunction areaPointFirst(lambda, phi) {\n  areaStream.point = areaPoint;\n  lambda00 = lambda, phi00 = phi;\n  lambda *= radians, phi *= radians;\n  lambda0 = lambda, cosPhi0 = cos(phi = phi / 2 + quarterPi), sinPhi0 = sin(phi);\n}\n\nfunction areaPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  phi = phi / 2 + quarterPi; // half the angular distance from south pole\n\n  // Spherical excess E for a spherical triangle with vertices: south pole,\n  // previous point, current point.  Uses a formula derived from Cagnoli’s\n  // theorem.  See Todhunter, Spherical Trig. (1871), Sec. 103, Eq. (2).\n  var dLambda = lambda - lambda0,\n      sdLambda = dLambda >= 0 ? 1 : -1,\n      adLambda = sdLambda * dLambda,\n      cosPhi = cos(phi),\n      sinPhi = sin(phi),\n      k = sinPhi0 * sinPhi,\n      u = cosPhi0 * cosPhi + k * cos(adLambda),\n      v = k * sdLambda * sin(adLambda);\n  areaRingSum.add(atan2(v, u));\n\n  // Advance the previous points.\n  lambda0 = lambda, cosPhi0 = cosPhi, sinPhi0 = sinPhi;\n}\n\nexport default function(object) {\n  areaSum.reset();\n  stream(object, areaStream);\n  return areaSum * 2;\n}\n","import {asin, atan2, cos, sin, sqrt} from \"./math\";\n\nexport function spherical(cartesian) {\n  return [atan2(cartesian[1], cartesian[0]), asin(cartesian[2])];\n}\n\nexport function cartesian(spherical) {\n  var lambda = spherical[0], phi = spherical[1], cosPhi = cos(phi);\n  return [cosPhi * cos(lambda), cosPhi * sin(lambda), sin(phi)];\n}\n\nexport function cartesianDot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n\nexport function cartesianCross(a, b) {\n  return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];\n}\n\n// TODO return a\nexport function cartesianAddInPlace(a, b) {\n  a[0] += b[0], a[1] += b[1], a[2] += b[2];\n}\n\nexport function cartesianScale(vector, k) {\n  return [vector[0] * k, vector[1] * k, vector[2] * k];\n}\n\n// TODO return d\nexport function cartesianNormalizeInPlace(d) {\n  var l = sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n  d[0] /= l, d[1] /= l, d[2] /= l;\n}\n","import adder from \"./adder\";\nimport {areaStream, areaRingSum} from \"./area\";\nimport {cartesian, cartesianCross, cartesianNormalizeInPlace, spherical} from \"./cartesian\";\nimport {abs, degrees, epsilon, radians} from \"./math\";\nimport stream from \"./stream\";\n\nvar lambda0, phi0, lambda1, phi1, // bounds\n    lambda2, // previous lambda-coordinate\n    lambda00, phi00, // first point\n    p0, // previous 3D point\n    deltaSum = adder(),\n    ranges,\n    range;\n\nvar boundsStream = {\n  point: boundsPoint,\n  lineStart: boundsLineStart,\n  lineEnd: boundsLineEnd,\n  polygonStart: function() {\n    boundsStream.point = boundsRingPoint;\n    boundsStream.lineStart = boundsRingStart;\n    boundsStream.lineEnd = boundsRingEnd;\n    deltaSum.reset();\n    areaStream.polygonStart();\n  },\n  polygonEnd: function() {\n    areaStream.polygonEnd();\n    boundsStream.point = boundsPoint;\n    boundsStream.lineStart = boundsLineStart;\n    boundsStream.lineEnd = boundsLineEnd;\n    if (areaRingSum < 0) lambda0 = -(lambda1 = 180), phi0 = -(phi1 = 90);\n    else if (deltaSum > epsilon) phi1 = 90;\n    else if (deltaSum < -epsilon) phi0 = -90;\n    range[0] = lambda0, range[1] = lambda1;\n  }\n};\n\nfunction boundsPoint(lambda, phi) {\n  ranges.push(range = [lambda0 = lambda, lambda1 = lambda]);\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n}\n\nfunction linePoint(lambda, phi) {\n  var p = cartesian([lambda * radians, phi * radians]);\n  if (p0) {\n    var normal = cartesianCross(p0, p),\n        equatorial = [normal[1], -normal[0], 0],\n        inflection = cartesianCross(equatorial, normal);\n    cartesianNormalizeInPlace(inflection);\n    inflection = spherical(inflection);\n    var delta = lambda - lambda2,\n        sign = delta > 0 ? 1 : -1,\n        lambdai = inflection[0] * degrees * sign,\n        phii,\n        antimeridian = abs(delta) > 180;\n    if (antimeridian ^ (sign * lambda2 < lambdai && lambdai < sign * lambda)) {\n      phii = inflection[1] * degrees;\n      if (phii > phi1) phi1 = phii;\n    } else if (lambdai = (lambdai + 360) % 360 - 180, antimeridian ^ (sign * lambda2 < lambdai && lambdai < sign * lambda)) {\n      phii = -inflection[1] * degrees;\n      if (phii < phi0) phi0 = phii;\n    } else {\n      if (phi < phi0) phi0 = phi;\n      if (phi > phi1) phi1 = phi;\n    }\n    if (antimeridian) {\n      if (lambda < lambda2) {\n        if (angle(lambda0, lambda) > angle(lambda0, lambda1)) lambda1 = lambda;\n      } else {\n        if (angle(lambda, lambda1) > angle(lambda0, lambda1)) lambda0 = lambda;\n      }\n    } else {\n      if (lambda1 >= lambda0) {\n        if (lambda < lambda0) lambda0 = lambda;\n        if (lambda > lambda1) lambda1 = lambda;\n      } else {\n        if (lambda > lambda2) {\n          if (angle(lambda0, lambda) > angle(lambda0, lambda1)) lambda1 = lambda;\n        } else {\n          if (angle(lambda, lambda1) > angle(lambda0, lambda1)) lambda0 = lambda;\n        }\n      }\n    }\n  } else {\n    ranges.push(range = [lambda0 = lambda, lambda1 = lambda]);\n  }\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n  p0 = p, lambda2 = lambda;\n}\n\nfunction boundsLineStart() {\n  boundsStream.point = linePoint;\n}\n\nfunction boundsLineEnd() {\n  range[0] = lambda0, range[1] = lambda1;\n  boundsStream.point = boundsPoint;\n  p0 = null;\n}\n\nfunction boundsRingPoint(lambda, phi) {\n  if (p0) {\n    var delta = lambda - lambda2;\n    deltaSum.add(abs(delta) > 180 ? delta + (delta > 0 ? 360 : -360) : delta);\n  } else {\n    lambda00 = lambda, phi00 = phi;\n  }\n  areaStream.point(lambda, phi);\n  linePoint(lambda, phi);\n}\n\nfunction boundsRingStart() {\n  areaStream.lineStart();\n}\n\nfunction boundsRingEnd() {\n  boundsRingPoint(lambda00, phi00);\n  areaStream.lineEnd();\n  if (abs(deltaSum) > epsilon) lambda0 = -(lambda1 = 180);\n  range[0] = lambda0, range[1] = lambda1;\n  p0 = null;\n}\n\n// Finds the left-right distance between two longitudes.\n// This is almost the same as (lambda1 - lambda0 + 360°) % 360°, except that we want\n// the distance between ±180° to be 360°.\nfunction angle(lambda0, lambda1) {\n  return (lambda1 -= lambda0) < 0 ? lambda1 + 360 : lambda1;\n}\n\nfunction rangeCompare(a, b) {\n  return a[0] - b[0];\n}\n\nfunction rangeContains(range, x) {\n  return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n}\n\nexport default function(feature) {\n  var i, n, a, b, merged, deltaMax, delta;\n\n  phi1 = lambda1 = -(lambda0 = phi0 = Infinity);\n  ranges = [];\n  stream(feature, boundsStream);\n\n  // First, sort ranges by their minimum longitudes.\n  if (n = ranges.length) {\n    ranges.sort(rangeCompare);\n\n    // Then, merge any ranges that overlap.\n    for (i = 1, a = ranges[0], merged = [a]; i < n; ++i) {\n      b = ranges[i];\n      if (rangeContains(a, b[0]) || rangeContains(a, b[1])) {\n        if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n        if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n      } else {\n        merged.push(a = b);\n      }\n    }\n\n    // Finally, find the largest gap between the merged ranges.\n    // The final bounding box will be the inverse of this gap.\n    for (deltaMax = -Infinity, n = merged.length - 1, i = 0, a = merged[n]; i <= n; a = b, ++i) {\n      b = merged[i];\n      if ((delta = angle(a[1], b[0])) > deltaMax) deltaMax = delta, lambda0 = b[0], lambda1 = a[1];\n    }\n  }\n\n  ranges = range = null;\n\n  return lambda0 === Infinity || phi0 === Infinity\n      ? [[NaN, NaN], [NaN, NaN]]\n      : [[lambda0, phi0], [lambda1, phi1]];\n}\n","import {asin, atan2, cos, degrees, epsilon, epsilon2, radians, sin, sqrt} from \"./math\";\nimport noop from \"./noop\";\nimport stream from \"./stream\";\n\nvar W0, W1,\n    X0, Y0, Z0,\n    X1, Y1, Z1,\n    X2, Y2, Z2,\n    lambda00, phi00, // first point\n    x0, y0, z0; // previous point\n\nvar centroidStream = {\n  sphere: noop,\n  point: centroidPoint,\n  lineStart: centroidLineStart,\n  lineEnd: centroidLineEnd,\n  polygonStart: function() {\n    centroidStream.lineStart = centroidRingStart;\n    centroidStream.lineEnd = centroidRingEnd;\n  },\n  polygonEnd: function() {\n    centroidStream.lineStart = centroidLineStart;\n    centroidStream.lineEnd = centroidLineEnd;\n  }\n};\n\n// Arithmetic mean of Cartesian vectors.\nfunction centroidPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi);\n  centroidPointCartesian(cosPhi * cos(lambda), cosPhi * sin(lambda), sin(phi));\n}\n\nfunction centroidPointCartesian(x, y, z) {\n  ++W0;\n  X0 += (x - X0) / W0;\n  Y0 += (y - Y0) / W0;\n  Z0 += (z - Z0) / W0;\n}\n\nfunction centroidLineStart() {\n  centroidStream.point = centroidLinePointFirst;\n}\n\nfunction centroidLinePointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi);\n  x0 = cosPhi * cos(lambda);\n  y0 = cosPhi * sin(lambda);\n  z0 = sin(phi);\n  centroidStream.point = centroidLinePoint;\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLinePoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi),\n      x = cosPhi * cos(lambda),\n      y = cosPhi * sin(lambda),\n      z = sin(phi),\n      w = atan2(sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLineEnd() {\n  centroidStream.point = centroidPoint;\n}\n\n// See J. E. Brock, The Inertia Tensor for a Spherical Triangle,\n// J. Applied Mechanics 42, 239 (1975).\nfunction centroidRingStart() {\n  centroidStream.point = centroidRingPointFirst;\n}\n\nfunction centroidRingEnd() {\n  centroidRingPoint(lambda00, phi00);\n  centroidStream.point = centroidPoint;\n}\n\nfunction centroidRingPointFirst(lambda, phi) {\n  lambda00 = lambda, phi00 = phi;\n  lambda *= radians, phi *= radians;\n  centroidStream.point = centroidRingPoint;\n  var cosPhi = cos(phi);\n  x0 = cosPhi * cos(lambda);\n  y0 = cosPhi * sin(lambda);\n  z0 = sin(phi);\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidRingPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi),\n      x = cosPhi * cos(lambda),\n      y = cosPhi * sin(lambda),\n      z = sin(phi),\n      cx = y0 * z - z0 * y,\n      cy = z0 * x - x0 * z,\n      cz = x0 * y - y0 * x,\n      m = sqrt(cx * cx + cy * cy + cz * cz),\n      w = asin(m), // line weight = angle\n      v = m && -w / m; // area weight multiplier\n  X2 += v * cx;\n  Y2 += v * cy;\n  Z2 += v * cz;\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nexport default function(object) {\n  W0 = W1 =\n  X0 = Y0 = Z0 =\n  X1 = Y1 = Z1 =\n  X2 = Y2 = Z2 = 0;\n  stream(object, centroidStream);\n\n  var x = X2,\n      y = Y2,\n      z = Z2,\n      m = x * x + y * y + z * z;\n\n  // If the area-weighted ccentroid is undefined, fall back to length-weighted ccentroid.\n  if (m < epsilon2) {\n    x = X1, y = Y1, z = Z1;\n    // If the feature has zero length, fall back to arithmetic mean of point vectors.\n    if (W1 < epsilon) x = X0, y = Y0, z = Z0;\n    m = x * x + y * y + z * z;\n    // If the feature still has an undefined ccentroid, then return.\n    if (m < epsilon2) return [NaN, NaN];\n  }\n\n  return [atan2(y, x) * degrees, asin(z / sqrt(m)) * degrees];\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function(a, b) {\n\n  function compose(x, y) {\n    return x = a(x, y), b(x[0], x[1]);\n  }\n\n  if (a.invert && b.invert) compose.invert = function(x, y) {\n    return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n  };\n\n  return compose;\n}\n","import compose from \"./compose\";\nimport {asin, atan2, cos, degrees, pi, radians, sin, tau} from \"./math\";\n\nfunction rotationIdentity(lambda, phi) {\n  return [lambda > pi ? lambda - tau : lambda < -pi ? lambda + tau : lambda, phi];\n}\n\nrotationIdentity.invert = rotationIdentity;\n\nexport function rotateRadians(deltaLambda, deltaPhi, deltaGamma) {\n  return (deltaLambda %= tau) ? (deltaPhi || deltaGamma ? compose(rotationLambda(deltaLambda), rotationPhiGamma(deltaPhi, deltaGamma))\n    : rotationLambda(deltaLambda))\n    : (deltaPhi || deltaGamma ? rotationPhiGamma(deltaPhi, deltaGamma)\n    : rotationIdentity);\n}\n\nfunction forwardRotationLambda(deltaLambda) {\n  return function(lambda, phi) {\n    return lambda += deltaLambda, [lambda > pi ? lambda - tau : lambda < -pi ? lambda + tau : lambda, phi];\n  };\n}\n\nfunction rotationLambda(deltaLambda) {\n  var rotation = forwardRotationLambda(deltaLambda);\n  rotation.invert = forwardRotationLambda(-deltaLambda);\n  return rotation;\n}\n\nfunction rotationPhiGamma(deltaPhi, deltaGamma) {\n  var cosDeltaPhi = cos(deltaPhi),\n      sinDeltaPhi = sin(deltaPhi),\n      cosDeltaGamma = cos(deltaGamma),\n      sinDeltaGamma = sin(deltaGamma);\n\n  function rotation(lambda, phi) {\n    var cosPhi = cos(phi),\n        x = cos(lambda) * cosPhi,\n        y = sin(lambda) * cosPhi,\n        z = sin(phi),\n        k = z * cosDeltaPhi + x * sinDeltaPhi;\n    return [\n      atan2(y * cosDeltaGamma - k * sinDeltaGamma, x * cosDeltaPhi - z * sinDeltaPhi),\n      asin(k * cosDeltaGamma + y * sinDeltaGamma)\n    ];\n  }\n\n  rotation.invert = function(lambda, phi) {\n    var cosPhi = cos(phi),\n        x = cos(lambda) * cosPhi,\n        y = sin(lambda) * cosPhi,\n        z = sin(phi),\n        k = z * cosDeltaGamma - y * sinDeltaGamma;\n    return [\n      atan2(y * cosDeltaGamma + z * sinDeltaGamma, x * cosDeltaPhi + k * sinDeltaPhi),\n      asin(k * cosDeltaPhi - x * sinDeltaPhi)\n    ];\n  };\n\n  return rotation;\n}\n\nexport default function(rotate) {\n  rotate = rotateRadians(rotate[0] * radians, rotate[1] * radians, rotate.length > 2 ? rotate[2] * radians : 0);\n\n  function forward(coordinates) {\n    coordinates = rotate(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees, coordinates[1] *= degrees, coordinates;\n  }\n\n  forward.invert = function(coordinates) {\n    coordinates = rotate.invert(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees, coordinates[1] *= degrees, coordinates;\n  };\n\n  return forward;\n}\n","import {cartesian, cartesianNormalizeInPlace, spherical} from \"./cartesian\";\nimport constant from \"./constant\";\nimport {acos, cos, degrees, epsilon, radians, sin, tau} from \"./math\";\nimport {rotateRadians} from \"./rotation\";\n\n// Generates a circle centered at [0°, 0°], with a given radius and precision.\nexport function circleStream(stream, radius, delta, direction, t0, t1) {\n  if (!delta) return;\n  var cosRadius = cos(radius),\n      sinRadius = sin(radius),\n      step = direction * delta;\n  if (t0 == null) {\n    t0 = radius + direction * tau;\n    t1 = radius - step / 2;\n  } else {\n    t0 = circleRadius(cosRadius, t0);\n    t1 = circleRadius(cosRadius, t1);\n    if (direction > 0 ? t0 < t1 : t0 > t1) t0 += direction * tau;\n  }\n  for (var point, t = t0; direction > 0 ? t > t1 : t < t1; t -= step) {\n    point = spherical([cosRadius, -sinRadius * cos(t), -sinRadius * sin(t)]);\n    stream.point(point[0], point[1]);\n  }\n}\n\n// Returns the signed angle of a cartesian point relative to [cosRadius, 0, 0].\nfunction circleRadius(cosRadius, point) {\n  point = cartesian(point), point[0] -= cosRadius;\n  cartesianNormalizeInPlace(point);\n  var radius = acos(-point[1]);\n  return ((-point[2] < 0 ? -radius : radius) + tau - epsilon) % tau;\n}\n\nexport default function() {\n  var center = constant([0, 0]),\n      radius = constant(90),\n      precision = constant(6),\n      ring,\n      rotate,\n      stream = {point: point};\n\n  function point(x, y) {\n    ring.push(x = rotate(x, y));\n    x[0] *= degrees, x[1] *= degrees;\n  }\n\n  function circle() {\n    var c = center.apply(this, arguments),\n        r = radius.apply(this, arguments) * radians,\n        p = precision.apply(this, arguments) * radians;\n    ring = [];\n    rotate = rotateRadians(-c[0] * radians, -c[1] * radians, 0).invert;\n    circleStream(stream, r, p, 1);\n    c = {type: \"Polygon\", coordinates: [ring]};\n    ring = rotate = null;\n    return c;\n  }\n\n  circle.center = function(_) {\n    return arguments.length ? (center = typeof _ === \"function\" ? _ : constant([+_[0], +_[1]]), circle) : center;\n  };\n\n  circle.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant(+_), circle) : radius;\n  };\n\n  circle.precision = function(_) {\n    return arguments.length ? (precision = typeof _ === \"function\" ? _ : constant(+_), circle) : precision;\n  };\n\n  return circle;\n}\n","import noop from \"../noop\";\n\nexport default function() {\n  var lines = [],\n      line;\n  return {\n    point: function(x, y) {\n      line.push([x, y]);\n    },\n    lineStart: function() {\n      lines.push(line = []);\n    },\n    lineEnd: noop,\n    rejoin: function() {\n      if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n    },\n    result: function() {\n      var result = lines;\n      lines = [];\n      line = null;\n      return result;\n    }\n  };\n}\n","import {abs, epsilon} from \"./math\";\n\nexport default function(a, b) {\n  return abs(a[0] - b[0]) < epsilon && abs(a[1] - b[1]) < epsilon;\n}\n","import pointEqual from \"../pointEqual\";\n\nfunction Intersection(point, points, other, entry) {\n  this.x = point;\n  this.z = points;\n  this.o = other; // another intersection\n  this.e = entry; // is an entry?\n  this.v = false; // visited\n  this.n = this.p = null; // next & previous\n}\n\n// A generalized polygon clipping algorithm: given a polygon that has been cut\n// into its visible line segments, and rejoins the segments by interpolating\n// along the clip edge.\nexport default function(segments, compareIntersection, startInside, interpolate, stream) {\n  var subject = [],\n      clip = [],\n      i,\n      n;\n\n  segments.forEach(function(segment) {\n    if ((n = segment.length - 1) <= 0) return;\n    var n, p0 = segment[0], p1 = segment[n], x;\n\n    // If the first and last points of a segment are coincident, then treat as a\n    // closed ring. TODO if all rings are closed, then the winding order of the\n    // exterior ring should be checked.\n    if (pointEqual(p0, p1)) {\n      stream.lineStart();\n      for (i = 0; i < n; ++i) stream.point((p0 = segment[i])[0], p0[1]);\n      stream.lineEnd();\n      return;\n    }\n\n    subject.push(x = new Intersection(p0, segment, null, true));\n    clip.push(x.o = new Intersection(p0, null, x, false));\n    subject.push(x = new Intersection(p1, segment, null, false));\n    clip.push(x.o = new Intersection(p1, null, x, true));\n  });\n\n  if (!subject.length) return;\n\n  clip.sort(compareIntersection);\n  link(subject);\n  link(clip);\n\n  for (i = 0, n = clip.length; i < n; ++i) {\n    clip[i].e = startInside = !startInside;\n  }\n\n  var start = subject[0],\n      points,\n      point;\n\n  while (1) {\n    // Find first unvisited intersection.\n    var current = start,\n        isSubject = true;\n    while (current.v) if ((current = current.n) === start) return;\n    points = current.z;\n    stream.lineStart();\n    do {\n      current.v = current.o.v = true;\n      if (current.e) {\n        if (isSubject) {\n          for (i = 0, n = points.length; i < n; ++i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.n.x, 1, stream);\n        }\n        current = current.n;\n      } else {\n        if (isSubject) {\n          points = current.p.z;\n          for (i = points.length - 1; i >= 0; --i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.p.x, -1, stream);\n        }\n        current = current.p;\n      }\n      current = current.o;\n      points = current.z;\n      isSubject = !isSubject;\n    } while (!current.v);\n    stream.lineEnd();\n  }\n}\n\nfunction link(array) {\n  if (!(n = array.length)) return;\n  var n,\n      i = 0,\n      a = array[0],\n      b;\n  while (++i < n) {\n    a.n = b = array[i];\n    b.p = a;\n    a = b;\n  }\n  a.n = b = array[0];\n  b.p = a;\n}\n","import adder from \"./adder\";\nimport {cartesian, cartesianCross, cartesianNormalizeInPlace} from \"./cartesian\";\nimport {asin, atan2, cos, epsilon, halfPi, pi, quarterPi, sin, tau} from \"./math\";\n\nvar sum = adder();\n\nexport default function(polygon, point) {\n  var lambda = point[0],\n      phi = point[1],\n      sinPhi = sin(phi),\n      normal = [sin(lambda), -cos(lambda), 0],\n      angle = 0,\n      winding = 0;\n\n  sum.reset();\n\n  if (sinPhi === 1) phi = halfPi + epsilon;\n  else if (sinPhi === -1) phi = -halfPi - epsilon;\n\n  for (var i = 0, n = polygon.length; i < n; ++i) {\n    if (!(m = (ring = polygon[i]).length)) continue;\n    var ring,\n        m,\n        point0 = ring[m - 1],\n        lambda0 = point0[0],\n        phi0 = point0[1] / 2 + quarterPi,\n        sinPhi0 = sin(phi0),\n        cosPhi0 = cos(phi0);\n\n    for (var j = 0; j < m; ++j, lambda0 = lambda1, sinPhi0 = sinPhi1, cosPhi0 = cosPhi1, point0 = point1) {\n      var point1 = ring[j],\n          lambda1 = point1[0],\n          phi1 = point1[1] / 2 + quarterPi,\n          sinPhi1 = sin(phi1),\n          cosPhi1 = cos(phi1),\n          delta = lambda1 - lambda0,\n          sign = delta >= 0 ? 1 : -1,\n          absDelta = sign * delta,\n          antimeridian = absDelta > pi,\n          k = sinPhi0 * sinPhi1;\n\n      sum.add(atan2(k * sign * sin(absDelta), cosPhi0 * cosPhi1 + k * cos(absDelta)));\n      angle += antimeridian ? delta + sign * tau : delta;\n\n      // Are the longitudes either side of the point’s meridian (lambda),\n      // and are the latitudes smaller than the parallel (phi)?\n      if (antimeridian ^ lambda0 >= lambda ^ lambda1 >= lambda) {\n        var arc = cartesianCross(cartesian(point0), cartesian(point1));\n        cartesianNormalizeInPlace(arc);\n        var intersection = cartesianCross(normal, arc);\n        cartesianNormalizeInPlace(intersection);\n        var phiArc = (antimeridian ^ delta >= 0 ? -1 : 1) * asin(intersection[2]);\n        if (phi > phiArc || phi === phiArc && (arc[0] || arc[1])) {\n          winding += antimeridian ^ delta >= 0 ? 1 : -1;\n        }\n      }\n    }\n  }\n\n  // First, determine whether the South pole is inside or outside:\n  //\n  // It is inside if:\n  // * the polygon winds around it in a clockwise direction.\n  // * the polygon does not (cumulatively) wind around it, but has a negative\n  //   (counter-clockwise) area.\n  //\n  // Second, count the (signed) number of times a segment crosses a lambda\n  // from the point to the South pole.  If it is zero, then the point is the\n  // same side as the South pole.\n\n  return (angle < -epsilon || angle < epsilon && sum < -epsilon) ^ (winding & 1);\n}\n","import clipBuffer from \"./buffer\";\nimport clipRejoin from \"./rejoin\";\nimport {epsilon, halfPi} from \"../math\";\nimport polygonContains from \"../polygonContains\";\nimport {merge} from \"d3-array\";\n\nexport default function(pointVisible, clipLine, interpolate, start) {\n  return function(sink) {\n    var line = clipLine(sink),\n        ringBuffer = clipBuffer(),\n        ringSink = clipLine(ringBuffer),\n        polygonStarted = false,\n        polygon,\n        segments,\n        ring;\n\n    var clip = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        clip.point = pointRing;\n        clip.lineStart = ringStart;\n        clip.lineEnd = ringEnd;\n        segments = [];\n        polygon = [];\n      },\n      polygonEnd: function() {\n        clip.point = point;\n        clip.lineStart = lineStart;\n        clip.lineEnd = lineEnd;\n        segments = merge(segments);\n        var startInside = polygonContains(polygon, start);\n        if (segments.length) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          clipRejoin(segments, compareIntersection, startInside, interpolate, sink);\n        } else if (startInside) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          interpolate(null, null, 1, sink);\n          sink.lineEnd();\n        }\n        if (polygonStarted) sink.polygonEnd(), polygonStarted = false;\n        segments = polygon = null;\n      },\n      sphere: function() {\n        sink.polygonStart();\n        sink.lineStart();\n        interpolate(null, null, 1, sink);\n        sink.lineEnd();\n        sink.polygonEnd();\n      }\n    };\n\n    function point(lambda, phi) {\n      if (pointVisible(lambda, phi)) sink.point(lambda, phi);\n    }\n\n    function pointLine(lambda, phi) {\n      line.point(lambda, phi);\n    }\n\n    function lineStart() {\n      clip.point = pointLine;\n      line.lineStart();\n    }\n\n    function lineEnd() {\n      clip.point = point;\n      line.lineEnd();\n    }\n\n    function pointRing(lambda, phi) {\n      ring.push([lambda, phi]);\n      ringSink.point(lambda, phi);\n    }\n\n    function ringStart() {\n      ringSink.lineStart();\n      ring = [];\n    }\n\n    function ringEnd() {\n      pointRing(ring[0][0], ring[0][1]);\n      ringSink.lineEnd();\n\n      var clean = ringSink.clean(),\n          ringSegments = ringBuffer.result(),\n          i, n = ringSegments.length, m,\n          segment,\n          point;\n\n      ring.pop();\n      polygon.push(ring);\n      ring = null;\n\n      if (!n) return;\n\n      // No intersections.\n      if (clean & 1) {\n        segment = ringSegments[0];\n        if ((m = segment.length - 1) > 0) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          for (i = 0; i < m; ++i) sink.point((point = segment[i])[0], point[1]);\n          sink.lineEnd();\n        }\n        return;\n      }\n\n      // Rejoin connected segments.\n      // TODO reuse ringBuffer.rejoin()?\n      if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n\n      segments.push(ringSegments.filter(validSegment));\n    }\n\n    return clip;\n  };\n}\n\nfunction validSegment(segment) {\n  return segment.length > 1;\n}\n\n// Intersections are sorted along the clip edge. For both antimeridian cutting\n// and circle clipping, the same comparison is used.\nfunction compareIntersection(a, b) {\n  return ((a = a.x)[0] < 0 ? a[1] - halfPi - epsilon : halfPi - a[1])\n       - ((b = b.x)[0] < 0 ? b[1] - halfPi - epsilon : halfPi - b[1]);\n}\n","import clip from \"./index\";\nimport {abs, atan, cos, epsilon, halfPi, pi, sin} from \"../math\";\n\nexport default clip(\n  function() { return true; },\n  clipAntimeridianLine,\n  clipAntimeridianInterpolate,\n  [-pi, -halfPi]\n);\n\n// Takes a line and cuts into visible segments. Return values: 0 - there were\n// intersections or the line was empty; 1 - no intersections; 2 - there were\n// intersections, and the first and last segments should be rejoined.\nfunction clipAntimeridianLine(stream) {\n  var lambda0 = NaN,\n      phi0 = NaN,\n      sign0 = NaN,\n      clean; // no intersections\n\n  return {\n    lineStart: function() {\n      stream.lineStart();\n      clean = 1;\n    },\n    point: function(lambda1, phi1) {\n      var sign1 = lambda1 > 0 ? pi : -pi,\n          delta = abs(lambda1 - lambda0);\n      if (abs(delta - pi) < epsilon) { // line crosses a pole\n        stream.point(lambda0, phi0 = (phi0 + phi1) / 2 > 0 ? halfPi : -halfPi);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        stream.point(lambda1, phi0);\n        clean = 0;\n      } else if (sign0 !== sign1 && delta >= pi) { // line crosses antimeridian\n        if (abs(lambda0 - sign0) < epsilon) lambda0 -= sign0 * epsilon; // handle degeneracies\n        if (abs(lambda1 - sign1) < epsilon) lambda1 -= sign1 * epsilon;\n        phi0 = clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        clean = 0;\n      }\n      stream.point(lambda0 = lambda1, phi0 = phi1);\n      sign0 = sign1;\n    },\n    lineEnd: function() {\n      stream.lineEnd();\n      lambda0 = phi0 = NaN;\n    },\n    clean: function() {\n      return 2 - clean; // if intersections, rejoin first and last segments\n    }\n  };\n}\n\nfunction clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1) {\n  var cosPhi0,\n      cosPhi1,\n      sinLambda0Lambda1 = sin(lambda0 - lambda1);\n  return abs(sinLambda0Lambda1) > epsilon\n      ? atan((sin(phi0) * (cosPhi1 = cos(phi1)) * sin(lambda1)\n          - sin(phi1) * (cosPhi0 = cos(phi0)) * sin(lambda0))\n          / (cosPhi0 * cosPhi1 * sinLambda0Lambda1))\n      : (phi0 + phi1) / 2;\n}\n\nfunction clipAntimeridianInterpolate(from, to, direction, stream) {\n  var phi;\n  if (from == null) {\n    phi = direction * halfPi;\n    stream.point(-pi, phi);\n    stream.point(0, phi);\n    stream.point(pi, phi);\n    stream.point(pi, 0);\n    stream.point(pi, -phi);\n    stream.point(0, -phi);\n    stream.point(-pi, -phi);\n    stream.point(-pi, 0);\n    stream.point(-pi, phi);\n  } else if (abs(from[0] - to[0]) > epsilon) {\n    var lambda = from[0] < to[0] ? pi : -pi;\n    phi = direction * lambda / 2;\n    stream.point(-lambda, phi);\n    stream.point(0, phi);\n    stream.point(lambda, phi);\n  } else {\n    stream.point(to[0], to[1]);\n  }\n}\n","import {cartesian, cartesianAddInPlace, cartesianCross, cartesianDot, cartesianScale, spherical} from \"../cartesian\";\nimport {circleStream} from \"../circle\";\nimport {abs, cos, epsilon, pi, radians, sqrt} from \"../math\";\nimport pointEqual from \"../pointEqual\";\nimport clip from \"./index\";\n\nexport default function(radius) {\n  var cr = cos(radius),\n      delta = 6 * radians,\n      smallRadius = cr > 0,\n      notHemisphere = abs(cr) > epsilon; // TODO optimise for this common case\n\n  function interpolate(from, to, direction, stream) {\n    circleStream(stream, radius, delta, direction, from, to);\n  }\n\n  function visible(lambda, phi) {\n    return cos(lambda) * cos(phi) > cr;\n  }\n\n  // Takes a line and cuts into visible segments. Return values used for polygon\n  // clipping: 0 - there were intersections or the line was empty; 1 - no\n  // intersections 2 - there were intersections, and the first and last segments\n  // should be rejoined.\n  function clipLine(stream) {\n    var point0, // previous point\n        c0, // code for previous point\n        v0, // visibility of previous point\n        v00, // visibility of first point\n        clean; // no intersections\n    return {\n      lineStart: function() {\n        v00 = v0 = false;\n        clean = 1;\n      },\n      point: function(lambda, phi) {\n        var point1 = [lambda, phi],\n            point2,\n            v = visible(lambda, phi),\n            c = smallRadius\n              ? v ? 0 : code(lambda, phi)\n              : v ? code(lambda + (lambda < 0 ? pi : -pi), phi) : 0;\n        if (!point0 && (v00 = v0 = v)) stream.lineStart();\n        // Handle degeneracies.\n        // TODO ignore if not clipping polygons.\n        if (v !== v0) {\n          point2 = intersect(point0, point1);\n          if (!point2 || pointEqual(point0, point2) || pointEqual(point1, point2)) {\n            point1[0] += epsilon;\n            point1[1] += epsilon;\n            v = visible(point1[0], point1[1]);\n          }\n        }\n        if (v !== v0) {\n          clean = 0;\n          if (v) {\n            // outside going in\n            stream.lineStart();\n            point2 = intersect(point1, point0);\n            stream.point(point2[0], point2[1]);\n          } else {\n            // inside going out\n            point2 = intersect(point0, point1);\n            stream.point(point2[0], point2[1]);\n            stream.lineEnd();\n          }\n          point0 = point2;\n        } else if (notHemisphere && point0 && smallRadius ^ v) {\n          var t;\n          // If the codes for two points are different, or are both zero,\n          // and there this segment intersects with the small circle.\n          if (!(c & c0) && (t = intersect(point1, point0, true))) {\n            clean = 0;\n            if (smallRadius) {\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n            } else {\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n            }\n          }\n        }\n        if (v && (!point0 || !pointEqual(point0, point1))) {\n          stream.point(point1[0], point1[1]);\n        }\n        point0 = point1, v0 = v, c0 = c;\n      },\n      lineEnd: function() {\n        if (v0) stream.lineEnd();\n        point0 = null;\n      },\n      // Rejoin first and last segments if there were intersections and the first\n      // and last points were visible.\n      clean: function() {\n        return clean | ((v00 && v0) << 1);\n      }\n    };\n  }\n\n  // Intersects the great circle between a and b with the clip circle.\n  function intersect(a, b, two) {\n    var pa = cartesian(a),\n        pb = cartesian(b);\n\n    // We have two planes, n1.p = d1 and n2.p = d2.\n    // Find intersection line p(t) = c1 n1 + c2 n2 + t (n1 ⨯ n2).\n    var n1 = [1, 0, 0], // normal\n        n2 = cartesianCross(pa, pb),\n        n2n2 = cartesianDot(n2, n2),\n        n1n2 = n2[0], // cartesianDot(n1, n2),\n        determinant = n2n2 - n1n2 * n1n2;\n\n    // Two polar points.\n    if (!determinant) return !two && a;\n\n    var c1 =  cr * n2n2 / determinant,\n        c2 = -cr * n1n2 / determinant,\n        n1xn2 = cartesianCross(n1, n2),\n        A = cartesianScale(n1, c1),\n        B = cartesianScale(n2, c2);\n    cartesianAddInPlace(A, B);\n\n    // Solve |p(t)|^2 = 1.\n    var u = n1xn2,\n        w = cartesianDot(A, u),\n        uu = cartesianDot(u, u),\n        t2 = w * w - uu * (cartesianDot(A, A) - 1);\n\n    if (t2 < 0) return;\n\n    var t = sqrt(t2),\n        q = cartesianScale(u, (-w - t) / uu);\n    cartesianAddInPlace(q, A);\n    q = spherical(q);\n\n    if (!two) return q;\n\n    // Two intersection points.\n    var lambda0 = a[0],\n        lambda1 = b[0],\n        phi0 = a[1],\n        phi1 = b[1],\n        z;\n\n    if (lambda1 < lambda0) z = lambda0, lambda0 = lambda1, lambda1 = z;\n\n    var delta = lambda1 - lambda0,\n        polar = abs(delta - pi) < epsilon,\n        meridian = polar || delta < epsilon;\n\n    if (!polar && phi1 < phi0) z = phi0, phi0 = phi1, phi1 = z;\n\n    // Check that the first point is between a and b.\n    if (meridian\n        ? polar\n          ? phi0 + phi1 > 0 ^ q[1] < (abs(q[0] - lambda0) < epsilon ? phi0 : phi1)\n          : phi0 <= q[1] && q[1] <= phi1\n        : delta > pi ^ (lambda0 <= q[0] && q[0] <= lambda1)) {\n      var q1 = cartesianScale(u, (-w + t) / uu);\n      cartesianAddInPlace(q1, A);\n      return [q, spherical(q1)];\n    }\n  }\n\n  // Generates a 4-bit vector representing the location of a point relative to\n  // the small circle's bounding box.\n  function code(lambda, phi) {\n    var r = smallRadius ? radius : pi - radius,\n        code = 0;\n    if (lambda < -r) code |= 1; // left\n    else if (lambda > r) code |= 2; // right\n    if (phi < -r) code |= 4; // below\n    else if (phi > r) code |= 8; // above\n    return code;\n  }\n\n  return clip(visible, clipLine, interpolate, smallRadius ? [0, -radius] : [-pi, radius - pi]);\n}\n","export default function(a, b, x0, y0, x1, y1) {\n  var ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (t0 > 0) a[0] = ax + t0 * dx, a[1] = ay + t0 * dy;\n  if (t1 < 1) b[0] = ax + t1 * dx, b[1] = ay + t1 * dy;\n  return true;\n}\n","import {abs, epsilon} from \"../math\";\nimport clipBuffer from \"./buffer\";\nimport clipLine from \"./line\";\nimport clipRejoin from \"./rejoin\";\nimport {merge} from \"d3-array\";\n\nvar clipMax = 1e9, clipMin = -clipMax;\n\n// TODO Use d3-polygon’s polygonContains here for the ring check?\n// TODO Eliminate duplicate buffering in clipBuffer and polygon.push?\n\nexport default function clipRectangle(x0, y0, x1, y1) {\n\n  function visible(x, y) {\n    return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n  }\n\n  function interpolate(from, to, direction, stream) {\n    var a = 0, a1 = 0;\n    if (from == null\n        || (a = corner(from, direction)) !== (a1 = corner(to, direction))\n        || comparePoint(from, to) < 0 ^ direction > 0) {\n      do stream.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n      while ((a = (a + direction + 4) % 4) !== a1);\n    } else {\n      stream.point(to[0], to[1]);\n    }\n  }\n\n  function corner(p, direction) {\n    return abs(p[0] - x0) < epsilon ? direction > 0 ? 0 : 3\n        : abs(p[0] - x1) < epsilon ? direction > 0 ? 2 : 1\n        : abs(p[1] - y0) < epsilon ? direction > 0 ? 1 : 0\n        : direction > 0 ? 3 : 2; // abs(p[1] - y1) < epsilon\n  }\n\n  function compareIntersection(a, b) {\n    return comparePoint(a.x, b.x);\n  }\n\n  function comparePoint(a, b) {\n    var ca = corner(a, 1),\n        cb = corner(b, 1);\n    return ca !== cb ? ca - cb\n        : ca === 0 ? b[1] - a[1]\n        : ca === 1 ? a[0] - b[0]\n        : ca === 2 ? a[1] - b[1]\n        : b[0] - a[0];\n  }\n\n  return function(stream) {\n    var activeStream = stream,\n        bufferStream = clipBuffer(),\n        segments,\n        polygon,\n        ring,\n        x__, y__, v__, // first point\n        x_, y_, v_, // previous point\n        first,\n        clean;\n\n    var clipStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: polygonStart,\n      polygonEnd: polygonEnd\n    };\n\n    function point(x, y) {\n      if (visible(x, y)) activeStream.point(x, y);\n    }\n\n    function polygonInside() {\n      var winding = 0;\n\n      for (var i = 0, n = polygon.length; i < n; ++i) {\n        for (var ring = polygon[i], j = 1, m = ring.length, point = ring[0], a0, a1, b0 = point[0], b1 = point[1]; j < m; ++j) {\n          a0 = b0, a1 = b1, point = ring[j], b0 = point[0], b1 = point[1];\n          if (a1 <= y1) { if (b1 > y1 && (b0 - a0) * (y1 - a1) > (b1 - a1) * (x0 - a0)) ++winding; }\n          else { if (b1 <= y1 && (b0 - a0) * (y1 - a1) < (b1 - a1) * (x0 - a0)) --winding; }\n        }\n      }\n\n      return winding;\n    }\n\n    // Buffer geometry within a polygon and then clip it en masse.\n    function polygonStart() {\n      activeStream = bufferStream, segments = [], polygon = [], clean = true;\n    }\n\n    function polygonEnd() {\n      var startInside = polygonInside(),\n          cleanInside = clean && startInside,\n          visible = (segments = merge(segments)).length;\n      if (cleanInside || visible) {\n        stream.polygonStart();\n        if (cleanInside) {\n          stream.lineStart();\n          interpolate(null, null, 1, stream);\n          stream.lineEnd();\n        }\n        if (visible) {\n          clipRejoin(segments, compareIntersection, startInside, interpolate, stream);\n        }\n        stream.polygonEnd();\n      }\n      activeStream = stream, segments = polygon = ring = null;\n    }\n\n    function lineStart() {\n      clipStream.point = linePoint;\n      if (polygon) polygon.push(ring = []);\n      first = true;\n      v_ = false;\n      x_ = y_ = NaN;\n    }\n\n    // TODO rather than special-case polygons, simply handle them separately.\n    // Ideally, coincident intersection points should be jittered to avoid\n    // clipping issues.\n    function lineEnd() {\n      if (segments) {\n        linePoint(x__, y__);\n        if (v__ && v_) bufferStream.rejoin();\n        segments.push(bufferStream.result());\n      }\n      clipStream.point = point;\n      if (v_) activeStream.lineEnd();\n    }\n\n    function linePoint(x, y) {\n      var v = visible(x, y);\n      if (polygon) ring.push([x, y]);\n      if (first) {\n        x__ = x, y__ = y, v__ = v;\n        first = false;\n        if (v) {\n          activeStream.lineStart();\n          activeStream.point(x, y);\n        }\n      } else {\n        if (v && v_) activeStream.point(x, y);\n        else {\n          var a = [x_ = Math.max(clipMin, Math.min(clipMax, x_)), y_ = Math.max(clipMin, Math.min(clipMax, y_))],\n              b = [x = Math.max(clipMin, Math.min(clipMax, x)), y = Math.max(clipMin, Math.min(clipMax, y))];\n          if (clipLine(a, b, x0, y0, x1, y1)) {\n            if (!v_) {\n              activeStream.lineStart();\n              activeStream.point(a[0], a[1]);\n            }\n            activeStream.point(b[0], b[1]);\n            if (!v) activeStream.lineEnd();\n            clean = false;\n          } else if (v) {\n            activeStream.lineStart();\n            activeStream.point(x, y);\n            clean = false;\n          }\n        }\n      }\n      x_ = x, y_ = y, v_ = v;\n    }\n\n    return clipStream;\n  };\n}\n","import clipRectangle from \"./rectangle\";\n\nexport default function() {\n  var x0 = 0,\n      y0 = 0,\n      x1 = 960,\n      y1 = 500,\n      cache,\n      cacheStream,\n      clip;\n\n  return clip = {\n    stream: function(stream) {\n      return cache && cacheStream === stream ? cache : cache = clipRectangle(x0, y0, x1, y1)(cacheStream = stream);\n    },\n    extent: function(_) {\n      return arguments.length ? (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1], cache = cacheStream = null, clip) : [[x0, y0], [x1, y1]];\n    }\n  };\n}\n","import adder from \"./adder\";\nimport {abs, atan2, cos, radians, sin, sqrt} from \"./math\";\nimport noop from \"./noop\";\nimport stream from \"./stream\";\n\nvar lengthSum = adder(),\n    lambda0,\n    sinPhi0,\n    cosPhi0;\n\nvar lengthStream = {\n  sphere: noop,\n  point: noop,\n  lineStart: lengthLineStart,\n  lineEnd: noop,\n  polygonStart: noop,\n  polygonEnd: noop\n};\n\nfunction lengthLineStart() {\n  lengthStream.point = lengthPointFirst;\n  lengthStream.lineEnd = lengthLineEnd;\n}\n\nfunction lengthLineEnd() {\n  lengthStream.point = lengthStream.lineEnd = noop;\n}\n\nfunction lengthPointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  lambda0 = lambda, sinPhi0 = sin(phi), cosPhi0 = cos(phi);\n  lengthStream.point = lengthPoint;\n}\n\nfunction lengthPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var sinPhi = sin(phi),\n      cosPhi = cos(phi),\n      delta = abs(lambda - lambda0),\n      cosDelta = cos(delta),\n      sinDelta = sin(delta),\n      x = cosPhi * sinDelta,\n      y = cosPhi0 * sinPhi - sinPhi0 * cosPhi * cosDelta,\n      z = sinPhi0 * sinPhi + cosPhi0 * cosPhi * cosDelta;\n  lengthSum.add(atan2(sqrt(x * x + y * y), z));\n  lambda0 = lambda, sinPhi0 = sinPhi, cosPhi0 = cosPhi;\n}\n\nexport default function(object) {\n  lengthSum.reset();\n  stream(object, lengthStream);\n  return +lengthSum;\n}\n","import length from \"./length\";\n\nvar coordinates = [null, null],\n    object = {type: \"LineString\", coordinates: coordinates};\n\nexport default function(a, b) {\n  coordinates[0] = a;\n  coordinates[1] = b;\n  return length(object);\n}\n","import {default as polygonContains} from \"./polygonContains\";\nimport {default as distance} from \"./distance\";\nimport {epsilon, radians} from \"./math\";\n\nvar containsObjectType = {\n  Feature: function(object, point) {\n    return containsGeometry(object.geometry, point);\n  },\n  FeatureCollection: function(object, point) {\n    var features = object.features, i = -1, n = features.length;\n    while (++i < n) if (containsGeometry(features[i].geometry, point)) return true;\n    return false;\n  }\n};\n\nvar containsGeometryType = {\n  Sphere: function() {\n    return true;\n  },\n  Point: function(object, point) {\n    return containsPoint(object.coordinates, point);\n  },\n  MultiPoint: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsPoint(coordinates[i], point)) return true;\n    return false;\n  },\n  LineString: function(object, point) {\n    return containsLine(object.coordinates, point);\n  },\n  MultiLineString: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsLine(coordinates[i], point)) return true;\n    return false;\n  },\n  Polygon: function(object, point) {\n    return containsPolygon(object.coordinates, point);\n  },\n  MultiPolygon: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsPolygon(coordinates[i], point)) return true;\n    return false;\n  },\n  GeometryCollection: function(object, point) {\n    var geometries = object.geometries, i = -1, n = geometries.length;\n    while (++i < n) if (containsGeometry(geometries[i], point)) return true;\n    return false;\n  }\n};\n\nfunction containsGeometry(geometry, point) {\n  return geometry && containsGeometryType.hasOwnProperty(geometry.type)\n      ? containsGeometryType[geometry.type](geometry, point)\n      : false;\n}\n\nfunction containsPoint(coordinates, point) {\n  return distance(coordinates, point) === 0;\n}\n\nfunction containsLine(coordinates, point) {\n  var ab = distance(coordinates[0], coordinates[1]),\n      ao = distance(coordinates[0], point),\n      ob = distance(point, coordinates[1]);\n  return ao + ob <= ab + epsilon;\n}\n\nfunction containsPolygon(coordinates, point) {\n  return !!polygonContains(coordinates.map(ringRadians), pointRadians(point));\n}\n\nfunction ringRadians(ring) {\n  return ring = ring.map(pointRadians), ring.pop(), ring;\n}\n\nfunction pointRadians(point) {\n  return [point[0] * radians, point[1] * radians];\n}\n\nexport default function(object, point) {\n  return (object && containsObjectType.hasOwnProperty(object.type)\n      ? containsObjectType[object.type]\n      : containsGeometry)(object, point);\n}\n","import {range} from \"d3-array\";\nimport {abs, ceil, epsilon} from \"./math\";\n\nfunction graticuleX(y0, y1, dy) {\n  var y = range(y0, y1 - epsilon, dy).concat(y1);\n  return function(x) { return y.map(function(y) { return [x, y]; }); };\n}\n\nfunction graticuleY(x0, x1, dx) {\n  var x = range(x0, x1 - epsilon, dx).concat(x1);\n  return function(y) { return x.map(function(x) { return [x, y]; }); };\n}\n\nexport default function graticule() {\n  var x1, x0, X1, X0,\n      y1, y0, Y1, Y0,\n      dx = 10, dy = dx, DX = 90, DY = 360,\n      x, y, X, Y,\n      precision = 2.5;\n\n  function graticule() {\n    return {type: \"MultiLineString\", coordinates: lines()};\n  }\n\n  function lines() {\n    return range(ceil(X0 / DX) * DX, X1, DX).map(X)\n        .concat(range(ceil(Y0 / DY) * DY, Y1, DY).map(Y))\n        .concat(range(ceil(x0 / dx) * dx, x1, dx).filter(function(x) { return abs(x % DX) > epsilon; }).map(x))\n        .concat(range(ceil(y0 / dy) * dy, y1, dy).filter(function(y) { return abs(y % DY) > epsilon; }).map(y));\n  }\n\n  graticule.lines = function() {\n    return lines().map(function(coordinates) { return {type: \"LineString\", coordinates: coordinates}; });\n  };\n\n  graticule.outline = function() {\n    return {\n      type: \"Polygon\",\n      coordinates: [\n        X(X0).concat(\n        Y(Y1).slice(1),\n        X(X1).reverse().slice(1),\n        Y(Y0).reverse().slice(1))\n      ]\n    };\n  };\n\n  graticule.extent = function(_) {\n    if (!arguments.length) return graticule.extentMinor();\n    return graticule.extentMajor(_).extentMinor(_);\n  };\n\n  graticule.extentMajor = function(_) {\n    if (!arguments.length) return [[X0, Y0], [X1, Y1]];\n    X0 = +_[0][0], X1 = +_[1][0];\n    Y0 = +_[0][1], Y1 = +_[1][1];\n    if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n    if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.extentMinor = function(_) {\n    if (!arguments.length) return [[x0, y0], [x1, y1]];\n    x0 = +_[0][0], x1 = +_[1][0];\n    y0 = +_[0][1], y1 = +_[1][1];\n    if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n    if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.step = function(_) {\n    if (!arguments.length) return graticule.stepMinor();\n    return graticule.stepMajor(_).stepMinor(_);\n  };\n\n  graticule.stepMajor = function(_) {\n    if (!arguments.length) return [DX, DY];\n    DX = +_[0], DY = +_[1];\n    return graticule;\n  };\n\n  graticule.stepMinor = function(_) {\n    if (!arguments.length) return [dx, dy];\n    dx = +_[0], dy = +_[1];\n    return graticule;\n  };\n\n  graticule.precision = function(_) {\n    if (!arguments.length) return precision;\n    precision = +_;\n    x = graticuleX(y0, y1, 90);\n    y = graticuleY(x0, x1, precision);\n    X = graticuleX(Y0, Y1, 90);\n    Y = graticuleY(X0, X1, precision);\n    return graticule;\n  };\n\n  return graticule\n      .extentMajor([[-180, -90 + epsilon], [180, 90 - epsilon]])\n      .extentMinor([[-180, -80 - epsilon], [180, 80 + epsilon]]);\n}\n\nexport function graticule10() {\n  return graticule()();\n}\n","import {asin, atan2, cos, degrees, haversin, radians, sin, sqrt} from \"./math\";\n\nexport default function(a, b) {\n  var x0 = a[0] * radians,\n      y0 = a[1] * radians,\n      x1 = b[0] * radians,\n      y1 = b[1] * radians,\n      cy0 = cos(y0),\n      sy0 = sin(y0),\n      cy1 = cos(y1),\n      sy1 = sin(y1),\n      kx0 = cy0 * cos(x0),\n      ky0 = cy0 * sin(x0),\n      kx1 = cy1 * cos(x1),\n      ky1 = cy1 * sin(x1),\n      d = 2 * asin(sqrt(haversin(y1 - y0) + cy0 * cy1 * haversin(x1 - x0))),\n      k = sin(d);\n\n  var interpolate = d ? function(t) {\n    var B = sin(t *= d) / k,\n        A = sin(d - t) / k,\n        x = A * kx0 + B * kx1,\n        y = A * ky0 + B * ky1,\n        z = A * sy0 + B * sy1;\n    return [\n      atan2(y, x) * degrees,\n      atan2(z, sqrt(x * x + y * y)) * degrees\n    ];\n  } : function() {\n    return [x0 * degrees, y0 * degrees];\n  };\n\n  interpolate.distance = d;\n\n  return interpolate;\n}\n","import adder from \"../adder\";\nimport {abs} from \"../math\";\nimport noop from \"../noop\";\n\nvar areaSum = adder(),\n    areaRingSum = adder(),\n    x00,\n    y00,\n    x0,\n    y0;\n\nvar areaStream = {\n  point: noop,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: function() {\n    areaStream.lineStart = areaRingStart;\n    areaStream.lineEnd = areaRingEnd;\n  },\n  polygonEnd: function() {\n    areaStream.lineStart = areaStream.lineEnd = areaStream.point = noop;\n    areaSum.add(abs(areaRingSum));\n    areaRingSum.reset();\n  },\n  result: function() {\n    var area = areaSum / 2;\n    areaSum.reset();\n    return area;\n  }\n};\n\nfunction areaRingStart() {\n  areaStream.point = areaPointFirst;\n}\n\nfunction areaPointFirst(x, y) {\n  areaStream.point = areaPoint;\n  x00 = x0 = x, y00 = y0 = y;\n}\n\nfunction areaPoint(x, y) {\n  areaRingSum.add(y0 * x - x0 * y);\n  x0 = x, y0 = y;\n}\n\nfunction areaRingEnd() {\n  areaPoint(x00, y00);\n}\n\nexport default areaStream;\n","export default function(x) {\n  return x;\n}\n","import noop from \"../noop\";\n\nvar x0 = Infinity,\n    y0 = x0,\n    x1 = -x0,\n    y1 = x1;\n\nvar boundsStream = {\n  point: boundsPoint,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: noop,\n  polygonEnd: noop,\n  result: function() {\n    var bounds = [[x0, y0], [x1, y1]];\n    x1 = y1 = -(y0 = x0 = Infinity);\n    return bounds;\n  }\n};\n\nfunction boundsPoint(x, y) {\n  if (x < x0) x0 = x;\n  if (x > x1) x1 = x;\n  if (y < y0) y0 = y;\n  if (y > y1) y1 = y;\n}\n\nexport default boundsStream;\n","import {sqrt} from \"../math\";\n\n// TODO Enforce positive area for exterior, negative area for interior?\n\nvar X0 = 0,\n    Y0 = 0,\n    Z0 = 0,\n    X1 = 0,\n    Y1 = 0,\n    Z1 = 0,\n    X2 = 0,\n    Y2 = 0,\n    Z2 = 0,\n    x00,\n    y00,\n    x0,\n    y0;\n\nvar centroidStream = {\n  point: centroidPoint,\n  lineStart: centroidLineStart,\n  lineEnd: centroidLineEnd,\n  polygonStart: function() {\n    centroidStream.lineStart = centroidRingStart;\n    centroidStream.lineEnd = centroidRingEnd;\n  },\n  polygonEnd: function() {\n    centroidStream.point = centroidPoint;\n    centroidStream.lineStart = centroidLineStart;\n    centroidStream.lineEnd = centroidLineEnd;\n  },\n  result: function() {\n    var centroid = Z2 ? [X2 / Z2, Y2 / Z2]\n        : Z1 ? [X1 / Z1, Y1 / Z1]\n        : Z0 ? [X0 / Z0, Y0 / Z0]\n        : [NaN, NaN];\n    X0 = Y0 = Z0 =\n    X1 = Y1 = Z1 =\n    X2 = Y2 = Z2 = 0;\n    return centroid;\n  }\n};\n\nfunction centroidPoint(x, y) {\n  X0 += x;\n  Y0 += y;\n  ++Z0;\n}\n\nfunction centroidLineStart() {\n  centroidStream.point = centroidPointFirstLine;\n}\n\nfunction centroidPointFirstLine(x, y) {\n  centroidStream.point = centroidPointLine;\n  centroidPoint(x0 = x, y0 = y);\n}\n\nfunction centroidPointLine(x, y) {\n  var dx = x - x0, dy = y - y0, z = sqrt(dx * dx + dy * dy);\n  X1 += z * (x0 + x) / 2;\n  Y1 += z * (y0 + y) / 2;\n  Z1 += z;\n  centroidPoint(x0 = x, y0 = y);\n}\n\nfunction centroidLineEnd() {\n  centroidStream.point = centroidPoint;\n}\n\nfunction centroidRingStart() {\n  centroidStream.point = centroidPointFirstRing;\n}\n\nfunction centroidRingEnd() {\n  centroidPointRing(x00, y00);\n}\n\nfunction centroidPointFirstRing(x, y) {\n  centroidStream.point = centroidPointRing;\n  centroidPoint(x00 = x0 = x, y00 = y0 = y);\n}\n\nfunction centroidPointRing(x, y) {\n  var dx = x - x0,\n      dy = y - y0,\n      z = sqrt(dx * dx + dy * dy);\n\n  X1 += z * (x0 + x) / 2;\n  Y1 += z * (y0 + y) / 2;\n  Z1 += z;\n\n  z = y0 * x - x0 * y;\n  X2 += z * (x0 + x);\n  Y2 += z * (y0 + y);\n  Z2 += z * 3;\n  centroidPoint(x0 = x, y0 = y);\n}\n\nexport default centroidStream;\n","import {tau} from \"../math\";\nimport noop from \"../noop\";\n\nexport default function PathContext(context) {\n  this._context = context;\n}\n\nPathContext.prototype = {\n  _radius: 4.5,\n  pointRadius: function(_) {\n    return this._radius = _, this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._context.closePath();\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._context.moveTo(x, y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._context.lineTo(x, y);\n        break;\n      }\n      default: {\n        this._context.moveTo(x + this._radius, y);\n        this._context.arc(x, y, this._radius, 0, tau);\n        break;\n      }\n    }\n  },\n  result: noop\n};\n","import adder from \"../adder\";\nimport {sqrt} from \"../math\";\nimport noop from \"../noop\";\n\nvar lengthSum = adder(),\n    lengthRing,\n    x00,\n    y00,\n    x0,\n    y0;\n\nvar lengthStream = {\n  point: noop,\n  lineStart: function() {\n    lengthStream.point = lengthPointFirst;\n  },\n  lineEnd: function() {\n    if (lengthRing) lengthPoint(x00, y00);\n    lengthStream.point = noop;\n  },\n  polygonStart: function() {\n    lengthRing = true;\n  },\n  polygonEnd: function() {\n    lengthRing = null;\n  },\n  result: function() {\n    var length = +lengthSum;\n    lengthSum.reset();\n    return length;\n  }\n};\n\nfunction lengthPointFirst(x, y) {\n  lengthStream.point = lengthPoint;\n  x00 = x0 = x, y00 = y0 = y;\n}\n\nfunction lengthPoint(x, y) {\n  x0 -= x, y0 -= y;\n  lengthSum.add(sqrt(x0 * x0 + y0 * y0));\n  x0 = x, y0 = y;\n}\n\nexport default lengthStream;\n","export default function PathString() {\n  this._string = [];\n}\n\nPathString.prototype = {\n  _radius: 4.5,\n  _circle: circle(4.5),\n  pointRadius: function(_) {\n    if ((_ = +_) !== this._radius) this._radius = _, this._circle = null;\n    return this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._string.push(\"Z\");\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._string.push(\"M\", x, \",\", y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._string.push(\"L\", x, \",\", y);\n        break;\n      }\n      default: {\n        if (this._circle == null) this._circle = circle(this._radius);\n        this._string.push(\"M\", x, \",\", y, this._circle);\n        break;\n      }\n    }\n  },\n  result: function() {\n    if (this._string.length) {\n      var result = this._string.join(\"\");\n      this._string = [];\n      return result;\n    } else {\n      return null;\n    }\n  }\n};\n\nfunction circle(radius) {\n  return \"m0,\" + radius\n      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius\n      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius\n      + \"z\";\n}\n","import identity from \"../identity\";\nimport stream from \"../stream\";\nimport pathArea from \"./area\";\nimport pathBounds from \"./bounds\";\nimport pathCentroid from \"./centroid\";\nimport PathContext from \"./context\";\nimport pathMeasure from \"./measure\";\nimport PathString from \"./string\";\n\nexport default function(projection, context) {\n  var pointRadius = 4.5,\n      projectionStream,\n      contextStream;\n\n  function path(object) {\n    if (object) {\n      if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n      stream(object, projectionStream(contextStream));\n    }\n    return contextStream.result();\n  }\n\n  path.area = function(object) {\n    stream(object, projectionStream(pathArea));\n    return pathArea.result();\n  };\n\n  path.measure = function(object) {\n    stream(object, projectionStream(pathMeasure));\n    return pathMeasure.result();\n  };\n\n  path.bounds = function(object) {\n    stream(object, projectionStream(pathBounds));\n    return pathBounds.result();\n  };\n\n  path.centroid = function(object) {\n    stream(object, projectionStream(pathCentroid));\n    return pathCentroid.result();\n  };\n\n  path.projection = function(_) {\n    return arguments.length ? (projectionStream = _ == null ? (projection = null, identity) : (projection = _).stream, path) : projection;\n  };\n\n  path.context = function(_) {\n    if (!arguments.length) return context;\n    contextStream = _ == null ? (context = null, new PathString) : new PathContext(context = _);\n    if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n    return path;\n  };\n\n  path.pointRadius = function(_) {\n    if (!arguments.length) return pointRadius;\n    pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n    return path;\n  };\n\n  return path.projection(projection).context(context);\n}\n","export default function(methods) {\n  return {\n    stream: transformer(methods)\n  };\n}\n\nexport function transformer(methods) {\n  return function(stream) {\n    var s = new TransformStream;\n    for (var key in methods) s[key] = methods[key];\n    s.stream = stream;\n    return s;\n  };\n}\n\nfunction TransformStream() {}\n\nTransformStream.prototype = {\n  constructor: TransformStream,\n  point: function(x, y) { this.stream.point(x, y); },\n  sphere: function() { this.stream.sphere(); },\n  lineStart: function() { this.stream.lineStart(); },\n  lineEnd: function() { this.stream.lineEnd(); },\n  polygonStart: function() { this.stream.polygonStart(); },\n  polygonEnd: function() { this.stream.polygonEnd(); }\n};\n","import {default as geoStream} from \"../stream\";\nimport boundsStream from \"../path/bounds\";\n\nfunction fit(projection, fitBounds, object) {\n  var clip = projection.clipExtent && projection.clipExtent();\n  projection.scale(150).translate([0, 0]);\n  if (clip != null) projection.clipExtent(null);\n  geoStream(object, projection.stream(boundsStream));\n  fitBounds(boundsStream.result());\n  if (clip != null) projection.clipExtent(clip);\n  return projection;\n}\n\nexport function fitExtent(projection, extent, object) {\n  return fit(projection, function(b) {\n    var w = extent[1][0] - extent[0][0],\n        h = extent[1][1] - extent[0][1],\n        k = Math.min(w / (b[1][0] - b[0][0]), h / (b[1][1] - b[0][1])),\n        x = +extent[0][0] + (w - k * (b[1][0] + b[0][0])) / 2,\n        y = +extent[0][1] + (h - k * (b[1][1] + b[0][1])) / 2;\n    projection.scale(150 * k).translate([x, y]);\n  }, object);\n}\n\nexport function fitSize(projection, size, object) {\n  return fitExtent(projection, [[0, 0], size], object);\n}\n\nexport function fitWidth(projection, width, object) {\n  return fit(projection, function(b) {\n    var w = +width,\n        k = w / (b[1][0] - b[0][0]),\n        x = (w - k * (b[1][0] + b[0][0])) / 2,\n        y = -k * b[0][1];\n    projection.scale(150 * k).translate([x, y]);\n  }, object);\n}\n\nexport function fitHeight(projection, height, object) {\n  return fit(projection, function(b) {\n    var h = +height,\n        k = h / (b[1][1] - b[0][1]),\n        x = -k * b[0][0],\n        y = (h - k * (b[1][1] + b[0][1])) / 2;\n    projection.scale(150 * k).translate([x, y]);\n  }, object);\n}\n","import {cartesian} from \"../cartesian\";\nimport {abs, asin, atan2, cos, epsilon, radians, sqrt} from \"../math\";\nimport {transformer} from \"../transform\";\n\nvar maxDepth = 16, // maximum depth of subdivision\n    cosMinDistance = cos(30 * radians); // cos(minimum angular distance)\n\nexport default function(project, delta2) {\n  return +delta2 ? resample(project, delta2) : resampleNone(project);\n}\n\nfunction resampleNone(project) {\n  return transformer({\n    point: function(x, y) {\n      x = project(x, y);\n      this.stream.point(x[0], x[1]);\n    }\n  });\n}\n\nfunction resample(project, delta2) {\n\n  function resampleLineTo(x0, y0, lambda0, a0, b0, c0, x1, y1, lambda1, a1, b1, c1, depth, stream) {\n    var dx = x1 - x0,\n        dy = y1 - y0,\n        d2 = dx * dx + dy * dy;\n    if (d2 > 4 * delta2 && depth--) {\n      var a = a0 + a1,\n          b = b0 + b1,\n          c = c0 + c1,\n          m = sqrt(a * a + b * b + c * c),\n          phi2 = asin(c /= m),\n          lambda2 = abs(abs(c) - 1) < epsilon || abs(lambda0 - lambda1) < epsilon ? (lambda0 + lambda1) / 2 : atan2(b, a),\n          p = project(lambda2, phi2),\n          x2 = p[0],\n          y2 = p[1],\n          dx2 = x2 - x0,\n          dy2 = y2 - y0,\n          dz = dy * dx2 - dx * dy2;\n      if (dz * dz / d2 > delta2 // perpendicular projected distance\n          || abs((dx * dx2 + dy * dy2) / d2 - 0.5) > 0.3 // midpoint close to an end\n          || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) { // angular distance\n        resampleLineTo(x0, y0, lambda0, a0, b0, c0, x2, y2, lambda2, a /= m, b /= m, c, depth, stream);\n        stream.point(x2, y2);\n        resampleLineTo(x2, y2, lambda2, a, b, c, x1, y1, lambda1, a1, b1, c1, depth, stream);\n      }\n    }\n  }\n  return function(stream) {\n    var lambda00, x00, y00, a00, b00, c00, // first point\n        lambda0, x0, y0, a0, b0, c0; // previous point\n\n    var resampleStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() { stream.polygonStart(); resampleStream.lineStart = ringStart; },\n      polygonEnd: function() { stream.polygonEnd(); resampleStream.lineStart = lineStart; }\n    };\n\n    function point(x, y) {\n      x = project(x, y);\n      stream.point(x[0], x[1]);\n    }\n\n    function lineStart() {\n      x0 = NaN;\n      resampleStream.point = linePoint;\n      stream.lineStart();\n    }\n\n    function linePoint(lambda, phi) {\n      var c = cartesian([lambda, phi]), p = project(lambda, phi);\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x0 = p[0], y0 = p[1], lambda0 = lambda, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n      stream.point(x0, y0);\n    }\n\n    function lineEnd() {\n      resampleStream.point = point;\n      stream.lineEnd();\n    }\n\n    function ringStart() {\n      lineStart();\n      resampleStream.point = ringPoint;\n      resampleStream.lineEnd = ringEnd;\n    }\n\n    function ringPoint(lambda, phi) {\n      linePoint(lambda00 = lambda, phi), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n      resampleStream.point = linePoint;\n    }\n\n    function ringEnd() {\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x00, y00, lambda00, a00, b00, c00, maxDepth, stream);\n      resampleStream.lineEnd = lineEnd;\n      lineEnd();\n    }\n\n    return resampleStream;\n  };\n}\n","import clipAntimeridian from \"../clip/antimeridian\";\nimport clipCircle from \"../clip/circle\";\nimport clipRectangle from \"../clip/rectangle\";\nimport compose from \"../compose\";\nimport identity from \"../identity\";\nimport {cos, degrees, radians, sin, sqrt} from \"../math\";\nimport {rotateRadians} from \"../rotation\";\nimport {transformer} from \"../transform\";\nimport {fitExtent, fitSize, fitWidth, fitHeight} from \"./fit\";\nimport resample from \"./resample\";\n\nvar transformRadians = transformer({\n  point: function(x, y) {\n    this.stream.point(x * radians, y * radians);\n  }\n});\n\nfunction transformRotate(rotate) {\n  return transformer({\n    point: function(x, y) {\n      var r = rotate(x, y);\n      return this.stream.point(r[0], r[1]);\n    }\n  });\n}\n\nfunction scaleTranslate(k, dx, dy) {\n  function transform(x, y) {\n    return [dx + k * x, dy - k * y];\n  }\n  transform.invert = function(x, y) {\n    return [(x - dx) / k, (dy - y) / k];\n  };\n  return transform;\n}\n\nfunction scaleTranslateRotate(k, dx, dy, alpha) {\n  var cosAlpha = cos(alpha),\n      sinAlpha = sin(alpha),\n      a = cosAlpha * k,\n      b = sinAlpha * k,\n      ai = cosAlpha / k,\n      bi = sinAlpha / k,\n      ci = (sinAlpha * dy - cosAlpha * dx) / k,\n      fi = (sinAlpha * dx + cosAlpha * dy) / k;\n  function transform(x, y) {\n    return [a * x - b * y + dx, dy - b * x - a * y];\n  }\n  transform.invert = function(x, y) {\n    return [ai * x - bi * y + ci, fi - bi * x - ai * y];\n  };\n  return transform;\n}\n\nexport default function projection(project) {\n  return projectionMutator(function() { return project; })();\n}\n\nexport function projectionMutator(projectAt) {\n  var project,\n      k = 150, // scale\n      x = 480, y = 250, // translate\n      lambda = 0, phi = 0, // center\n      deltaLambda = 0, deltaPhi = 0, deltaGamma = 0, rotate, // pre-rotate\n      alpha = 0, // post-rotate\n      theta = null, preclip = clipAntimeridian, // pre-clip angle\n      x0 = null, y0, x1, y1, postclip = identity, // post-clip extent\n      delta2 = 0.5, // precision\n      projectResample,\n      projectTransform,\n      projectRotateTransform,\n      cache,\n      cacheStream;\n\n  function projection(point) {\n    return projectRotateTransform(point[0] * radians, point[1] * radians);\n  }\n\n  function invert(point) {\n    point = projectRotateTransform.invert(point[0], point[1]);\n    return point && [point[0] * degrees, point[1] * degrees];\n  }\n\n  projection.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = transformRadians(transformRotate(rotate)(preclip(projectResample(postclip(cacheStream = stream)))));\n  };\n\n  projection.preclip = function(_) {\n    return arguments.length ? (preclip = _, theta = undefined, reset()) : preclip;\n  };\n\n  projection.postclip = function(_) {\n    return arguments.length ? (postclip = _, x0 = y0 = x1 = y1 = null, reset()) : postclip;\n  };\n\n  projection.clipAngle = function(_) {\n    return arguments.length ? (preclip = +_ ? clipCircle(theta = _ * radians) : (theta = null, clipAntimeridian), reset()) : theta * degrees;\n  };\n\n  projection.clipExtent = function(_) {\n    return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity) : clipRectangle(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  projection.scale = function(_) {\n    return arguments.length ? (k = +_, recenter()) : k;\n  };\n\n  projection.translate = function(_) {\n    return arguments.length ? (x = +_[0], y = +_[1], recenter()) : [x, y];\n  };\n\n  projection.center = function(_) {\n    return arguments.length ? (lambda = _[0] % 360 * radians, phi = _[1] % 360 * radians, recenter()) : [lambda * degrees, phi * degrees];\n  };\n\n  projection.rotate = function(_) {\n    return arguments.length ? (deltaLambda = _[0] % 360 * radians, deltaPhi = _[1] % 360 * radians, deltaGamma = _.length > 2 ? _[2] % 360 * radians : 0, recenter()) : [deltaLambda * degrees, deltaPhi * degrees, deltaGamma * degrees];\n  };\n\n  projection.angle = function(_) {\n    return arguments.length ? (alpha = _ % 360 * radians, recenter()) : alpha * degrees;\n  };\n\n  projection.precision = function(_) {\n    return arguments.length ? (projectResample = resample(projectTransform, delta2 = _ * _), reset()) : sqrt(delta2);\n  };\n\n  projection.fitExtent = function(extent, object) {\n    return fitExtent(projection, extent, object);\n  };\n\n  projection.fitSize = function(size, object) {\n    return fitSize(projection, size, object);\n  };\n\n  projection.fitWidth = function(width, object) {\n    return fitWidth(projection, width, object);\n  };\n\n  projection.fitHeight = function(height, object) {\n    return fitHeight(projection, height, object);\n  };\n\n  function recenter() {\n    var center = scaleTranslateRotate(k, 0, 0, alpha).apply(null, project(lambda, phi)),\n        transform = (alpha ? scaleTranslateRotate : scaleTranslate)(k, x - center[0], y - center[1], alpha);\n    rotate = rotateRadians(deltaLambda, deltaPhi, deltaGamma);\n    projectTransform = compose(project, transform);\n    projectRotateTransform = compose(rotate, projectTransform);\n    projectResample = resample(projectTransform, delta2);\n    return reset();\n  }\n\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  return function() {\n    project = projectAt.apply(this, arguments);\n    projection.invert = project.invert && invert;\n    return recenter();\n  };\n}\n","import {degrees, pi, radians} from \"../math\";\nimport {projectionMutator} from \"./index\";\n\nexport function conicProjection(projectAt) {\n  var phi0 = 0,\n      phi1 = pi / 3,\n      m = projectionMutator(projectAt),\n      p = m(phi0, phi1);\n\n  p.parallels = function(_) {\n    return arguments.length ? m(phi0 = _[0] * radians, phi1 = _[1] * radians) : [phi0 * degrees, phi1 * degrees];\n  };\n\n  return p;\n}\n","import {abs, asin, atan2, cos, epsilon, sign, sin, sqrt} from \"../math\";\nimport {conicProjection} from \"./conic\";\nimport {cylindricalEqualAreaRaw} from \"./cylindricalEqualArea\";\n\nexport function conicEqualAreaRaw(y0, y1) {\n  var sy0 = sin(y0), n = (sy0 + sin(y1)) / 2;\n\n  // Are the parallels symmetrical around the Equator?\n  if (abs(n) < epsilon) return cylindricalEqualAreaRaw(y0);\n\n  var c = 1 + sy0 * (2 * n - sy0), r0 = sqrt(c) / n;\n\n  function project(x, y) {\n    var r = sqrt(c - 2 * n * sin(y)) / n;\n    return [r * sin(x *= n), r0 - r * cos(x)];\n  }\n\n  project.invert = function(x, y) {\n    var r0y = r0 - y;\n    return [atan2(x, abs(r0y)) / n * sign(r0y), asin((c - (x * x + r0y * r0y) * n * n) / (2 * n))];\n  };\n\n  return project;\n}\n\nexport default function() {\n  return conicProjection(conicEqualAreaRaw)\n      .scale(155.424)\n      .center([0, 33.6442]);\n}\n","import {asin, cos, sin} from \"../math\";\n\nexport function cylindricalEqualAreaRaw(phi0) {\n  var cosPhi0 = cos(phi0);\n\n  function forward(lambda, phi) {\n    return [lambda * cosPhi0, sin(phi) / cosPhi0];\n  }\n\n  forward.invert = function(x, y) {\n    return [x / cosPhi0, asin(y * cosPhi0)];\n  };\n\n  return forward;\n}\n","import conicEqualArea from \"./conicEqualArea\";\n\nexport default function() {\n  return conicEqualArea()\n      .parallels([29.5, 45.5])\n      .scale(1070)\n      .translate([480, 250])\n      .rotate([96, 0])\n      .center([-0.6, 38.7]);\n}\n","import {epsilon} from \"../math\";\nimport albers from \"./albers\";\nimport conicEqualArea from \"./conicEqualArea\";\nimport {fitExtent, fitSize, fitWidth, fitHeight} from \"./fit\";\n\n// The projections must have mutually exclusive clip regions on the sphere,\n// as this will avoid emitting interleaving lines and polygons.\nfunction multiplex(streams) {\n  var n = streams.length;\n  return {\n    point: function(x, y) { var i = -1; while (++i < n) streams[i].point(x, y); },\n    sphere: function() { var i = -1; while (++i < n) streams[i].sphere(); },\n    lineStart: function() { var i = -1; while (++i < n) streams[i].lineStart(); },\n    lineEnd: function() { var i = -1; while (++i < n) streams[i].lineEnd(); },\n    polygonStart: function() { var i = -1; while (++i < n) streams[i].polygonStart(); },\n    polygonEnd: function() { var i = -1; while (++i < n) streams[i].polygonEnd(); }\n  };\n}\n\n// A composite projection for the United States, configured by default for\n// 960×500. The projection also works quite well at 960×600 if you change the\n// scale to 1285 and adjust the translate accordingly. The set of standard\n// parallels for each region comes from USGS, which is published here:\n// http://egsc.usgs.gov/isb/pubs/MapProjections/projections.html#albers\nexport default function() {\n  var cache,\n      cacheStream,\n      lower48 = albers(), lower48Point,\n      alaska = conicEqualArea().rotate([154, 0]).center([-2, 58.5]).parallels([55, 65]), alaskaPoint, // EPSG:3338\n      hawaii = conicEqualArea().rotate([157, 0]).center([-3, 19.9]).parallels([8, 18]), hawaiiPoint, // ESRI:102007\n      point, pointStream = {point: function(x, y) { point = [x, y]; }};\n\n  function albersUsa(coordinates) {\n    var x = coordinates[0], y = coordinates[1];\n    return point = null,\n        (lower48Point.point(x, y), point)\n        || (alaskaPoint.point(x, y), point)\n        || (hawaiiPoint.point(x, y), point);\n  }\n\n  albersUsa.invert = function(coordinates) {\n    var k = lower48.scale(),\n        t = lower48.translate(),\n        x = (coordinates[0] - t[0]) / k,\n        y = (coordinates[1] - t[1]) / k;\n    return (y >= 0.120 && y < 0.234 && x >= -0.425 && x < -0.214 ? alaska\n        : y >= 0.166 && y < 0.234 && x >= -0.214 && x < -0.115 ? hawaii\n        : lower48).invert(coordinates);\n  };\n\n  albersUsa.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = multiplex([lower48.stream(cacheStream = stream), alaska.stream(stream), hawaii.stream(stream)]);\n  };\n\n  albersUsa.precision = function(_) {\n    if (!arguments.length) return lower48.precision();\n    lower48.precision(_), alaska.precision(_), hawaii.precision(_);\n    return reset();\n  };\n\n  albersUsa.scale = function(_) {\n    if (!arguments.length) return lower48.scale();\n    lower48.scale(_), alaska.scale(_ * 0.35), hawaii.scale(_);\n    return albersUsa.translate(lower48.translate());\n  };\n\n  albersUsa.translate = function(_) {\n    if (!arguments.length) return lower48.translate();\n    var k = lower48.scale(), x = +_[0], y = +_[1];\n\n    lower48Point = lower48\n        .translate(_)\n        .clipExtent([[x - 0.455 * k, y - 0.238 * k], [x + 0.455 * k, y + 0.238 * k]])\n        .stream(pointStream);\n\n    alaskaPoint = alaska\n        .translate([x - 0.307 * k, y + 0.201 * k])\n        .clipExtent([[x - 0.425 * k + epsilon, y + 0.120 * k + epsilon], [x - 0.214 * k - epsilon, y + 0.234 * k - epsilon]])\n        .stream(pointStream);\n\n    hawaiiPoint = hawaii\n        .translate([x - 0.205 * k, y + 0.212 * k])\n        .clipExtent([[x - 0.214 * k + epsilon, y + 0.166 * k + epsilon], [x - 0.115 * k - epsilon, y + 0.234 * k - epsilon]])\n        .stream(pointStream);\n\n    return reset();\n  };\n\n  albersUsa.fitExtent = function(extent, object) {\n    return fitExtent(albersUsa, extent, object);\n  };\n\n  albersUsa.fitSize = function(size, object) {\n    return fitSize(albersUsa, size, object);\n  };\n\n  albersUsa.fitWidth = function(width, object) {\n    return fitWidth(albersUsa, width, object);\n  };\n\n  albersUsa.fitHeight = function(height, object) {\n    return fitHeight(albersUsa, height, object);\n  };\n\n  function reset() {\n    cache = cacheStream = null;\n    return albersUsa;\n  }\n\n  return albersUsa.scale(1070);\n}\n","import {asin, atan2, cos, sin, sqrt} from \"../math\";\n\nexport function azimuthalRaw(scale) {\n  return function(x, y) {\n    var cx = cos(x),\n        cy = cos(y),\n        k = scale(cx * cy);\n    return [\n      k * cy * sin(x),\n      k * sin(y)\n    ];\n  }\n}\n\nexport function azimuthalInvert(angle) {\n  return function(x, y) {\n    var z = sqrt(x * x + y * y),\n        c = angle(z),\n        sc = sin(c),\n        cc = cos(c);\n    return [\n      atan2(x * sc, z * cc),\n      asin(z && y * sc / z)\n    ];\n  }\n}\n","import {asin, sqrt} from \"../math\";\nimport {azimuthalRaw, azimuthalInvert} from \"./azimuthal\";\nimport projection from \"./index\";\n\nexport var azimuthalEqualAreaRaw = azimuthalRaw(function(cxcy) {\n  return sqrt(2 / (1 + cxcy));\n});\n\nazimuthalEqualAreaRaw.invert = azimuthalInvert(function(z) {\n  return 2 * asin(z / 2);\n});\n\nexport default function() {\n  return projection(azimuthalEqualAreaRaw)\n      .scale(124.75)\n      .clipAngle(180 - 1e-3);\n}\n","import {acos, sin} from \"../math\";\nimport {azimuthalRaw, azimuthalInvert} from \"./azimuthal\";\nimport projection from \"./index\";\n\nexport var azimuthalEquidistantRaw = azimuthalRaw(function(c) {\n  return (c = acos(c)) && c / sin(c);\n});\n\nazimuthalEquidistantRaw.invert = azimuthalInvert(function(z) {\n  return z;\n});\n\nexport default function() {\n  return projection(azimuthalEquidistantRaw)\n      .scale(79.4188)\n      .clipAngle(180 - 1e-3);\n}\n","import {atan, exp, halfPi, log, pi, tan, tau} from \"../math\";\nimport rotation from \"../rotation\";\nimport projection from \"./index\";\n\nexport function mercatorRaw(lambda, phi) {\n  return [lambda, log(tan((halfPi + phi) / 2))];\n}\n\nmercatorRaw.invert = function(x, y) {\n  return [x, 2 * atan(exp(y)) - halfPi];\n};\n\nexport default function() {\n  return mercatorProjection(mercatorRaw)\n      .scale(961 / tau);\n}\n\nexport function mercatorProjection(project) {\n  var m = projection(project),\n      center = m.center,\n      scale = m.scale,\n      translate = m.translate,\n      clipExtent = m.clipExtent,\n      x0 = null, y0, x1, y1; // clip extent\n\n  m.scale = function(_) {\n    return arguments.length ? (scale(_), reclip()) : scale();\n  };\n\n  m.translate = function(_) {\n    return arguments.length ? (translate(_), reclip()) : translate();\n  };\n\n  m.center = function(_) {\n    return arguments.length ? (center(_), reclip()) : center();\n  };\n\n  m.clipExtent = function(_) {\n    return arguments.length ? ((_ == null ? x0 = y0 = x1 = y1 = null : (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1])), reclip()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  function reclip() {\n    var k = pi * scale(),\n        t = m(rotation(m.rotate()).invert([0, 0]));\n    return clipExtent(x0 == null\n        ? [[t[0] - k, t[1] - k], [t[0] + k, t[1] + k]] : project === mercatorRaw\n        ? [[Math.max(t[0] - k, x0), y0], [Math.min(t[0] + k, x1), y1]]\n        : [[x0, Math.max(t[1] - k, y0)], [x1, Math.min(t[1] + k, y1)]]);\n  }\n\n  return reclip();\n}\n","import {abs, atan, atan2, cos, epsilon, halfPi, log, pow, sign, sin, sqrt, tan} from \"../math\";\nimport {conicProjection} from \"./conic\";\nimport {mercatorRaw} from \"./mercator\";\n\nfunction tany(y) {\n  return tan((halfPi + y) / 2);\n}\n\nexport function conicConformalRaw(y0, y1) {\n  var cy0 = cos(y0),\n      n = y0 === y1 ? sin(y0) : log(cy0 / cos(y1)) / log(tany(y1) / tany(y0)),\n      f = cy0 * pow(tany(y0), n) / n;\n\n  if (!n) return mercatorRaw;\n\n  function project(x, y) {\n    if (f > 0) { if (y < -halfPi + epsilon) y = -halfPi + epsilon; }\n    else { if (y > halfPi - epsilon) y = halfPi - epsilon; }\n    var r = f / pow(tany(y), n);\n    return [r * sin(n * x), f - r * cos(n * x)];\n  }\n\n  project.invert = function(x, y) {\n    var fy = f - y, r = sign(n) * sqrt(x * x + fy * fy);\n    return [atan2(x, abs(fy)) / n * sign(fy), 2 * atan(pow(f / r, 1 / n)) - halfPi];\n  };\n\n  return project;\n}\n\nexport default function() {\n  return conicProjection(conicConformalRaw)\n      .scale(109.5)\n      .parallels([30, 30]);\n}\n","import projection from \"./index\";\n\nexport function equirectangularRaw(lambda, phi) {\n  return [lambda, phi];\n}\n\nequirectangularRaw.invert = equirectangularRaw;\n\nexport default function() {\n  return projection(equirectangularRaw)\n      .scale(152.63);\n}\n","import {abs, atan2, cos, epsilon, sign, sin, sqrt} from \"../math\";\nimport {conicProjection} from \"./conic\";\nimport {equirectangularRaw} from \"./equirectangular\";\n\nexport function conicEquidistantRaw(y0, y1) {\n  var cy0 = cos(y0),\n      n = y0 === y1 ? sin(y0) : (cy0 - cos(y1)) / (y1 - y0),\n      g = cy0 / n + y0;\n\n  if (abs(n) < epsilon) return equirectangularRaw;\n\n  function project(x, y) {\n    var gy = g - y, nx = n * x;\n    return [gy * sin(nx), g - gy * cos(nx)];\n  }\n\n  project.invert = function(x, y) {\n    var gy = g - y;\n    return [atan2(x, abs(gy)) / n * sign(gy), g - sign(n) * sqrt(x * x + gy * gy)];\n  };\n\n  return project;\n}\n\nexport default function() {\n  return conicProjection(conicEquidistantRaw)\n      .scale(131.154)\n      .center([0, 13.9389]);\n}\n","import {atan, cos, sin} from \"../math\";\nimport {azimuthalInvert} from \"./azimuthal\";\nimport projection from \"./index\";\n\nexport function gnomonicRaw(x, y) {\n  var cy = cos(y), k = cos(x) * cy;\n  return [cy * sin(x) / k, sin(y) / k];\n}\n\ngnomonicRaw.invert = azimuthalInvert(atan);\n\nexport default function() {\n  return projection(gnomonicRaw)\n      .scale(144.049)\n      .clipAngle(60);\n}\n","import clipRectangle from \"../clip/rectangle\";\nimport identity from \"../identity\";\nimport {transformer} from \"../transform\";\nimport {fitExtent, fitSize, fitWidth, fitHeight} from \"./fit\";\n\nfunction scaleTranslate(kx, ky, tx, ty) {\n  return kx === 1 && ky === 1 && tx === 0 && ty === 0 ? identity : transformer({\n    point: function(x, y) {\n      this.stream.point(x * kx + tx, y * ky + ty);\n    }\n  });\n}\n\nexport default function() {\n  var k = 1, tx = 0, ty = 0, sx = 1, sy = 1, transform = identity, // scale, translate and reflect\n      x0 = null, y0, x1, y1, // clip extent\n      postclip = identity,\n      cache,\n      cacheStream,\n      projection;\n\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  return projection = {\n    stream: function(stream) {\n      return cache && cacheStream === stream ? cache : cache = transform(postclip(cacheStream = stream));\n    },\n    postclip: function(_) {\n      return arguments.length ? (postclip = _, x0 = y0 = x1 = y1 = null, reset()) : postclip;\n    },\n    clipExtent: function(_) {\n      return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity) : clipRectangle(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n    },\n    scale: function(_) {\n      return arguments.length ? (transform = scaleTranslate((k = +_) * sx, k * sy, tx, ty), reset()) : k;\n    },\n    translate: function(_) {\n      return arguments.length ? (transform = scaleTranslate(k * sx, k * sy, tx = +_[0], ty = +_[1]), reset()) : [tx, ty];\n    },\n    reflectX: function(_) {\n      return arguments.length ? (transform = scaleTranslate(k * (sx = _ ? -1 : 1), k * sy, tx, ty), reset()) : sx < 0;\n    },\n    reflectY: function(_) {\n      return arguments.length ? (transform = scaleTranslate(k * sx, k * (sy = _ ? -1 : 1), tx, ty), reset()) : sy < 0;\n    },\n    fitExtent: function(extent, object) {\n      return fitExtent(projection, extent, object);\n    },\n    fitSize: function(size, object) {\n      return fitSize(projection, size, object);\n    },\n    fitWidth: function(width, object) {\n      return fitWidth(projection, width, object);\n    },\n    fitHeight: function(height, object) {\n      return fitHeight(projection, height, object);\n    }\n  };\n}\n","import projection from \"./index\";\nimport {abs, epsilon} from \"../math\";\n\nexport function naturalEarth1Raw(lambda, phi) {\n  var phi2 = phi * phi, phi4 = phi2 * phi2;\n  return [\n    lambda * (0.8707 - 0.131979 * phi2 + phi4 * (-0.013791 + phi4 * (0.003971 * phi2 - 0.001529 * phi4))),\n    phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4)))\n  ];\n}\n\nnaturalEarth1Raw.invert = function(x, y) {\n  var phi = y, i = 25, delta;\n  do {\n    var phi2 = phi * phi, phi4 = phi2 * phi2;\n    phi -= delta = (phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4))) - y) /\n        (1.007226 + phi2 * (0.015085 * 3 + phi4 * (-0.044475 * 7 + 0.028874 * 9 * phi2 - 0.005916 * 11 * phi4)));\n  } while (abs(delta) > epsilon && --i > 0);\n  return [\n    x / (0.8707 + (phi2 = phi * phi) * (-0.131979 + phi2 * (-0.013791 + phi2 * phi2 * phi2 * (0.003971 - 0.001529 * phi2)))),\n    phi\n  ];\n};\n\nexport default function() {\n  return projection(naturalEarth1Raw)\n      .scale(175.295);\n}\n","import {asin, cos, epsilon, sin} from \"../math\";\nimport {azimuthalInvert} from \"./azimuthal\";\nimport projection from \"./index\";\n\nexport function orthographicRaw(x, y) {\n  return [cos(y) * sin(x), sin(y)];\n}\n\northographicRaw.invert = azimuthalInvert(asin);\n\nexport default function() {\n  return projection(orthographicRaw)\n      .scale(249.5)\n      .clipAngle(90 + epsilon);\n}\n","import {atan, cos, sin} from \"../math\";\nimport {azimuthalInvert} from \"./azimuthal\";\nimport projection from \"./index\";\n\nexport function stereographicRaw(x, y) {\n  var cy = cos(y), k = 1 + cos(x) * cy;\n  return [cy * sin(x) / k, sin(y) / k];\n}\n\nstereographicRaw.invert = azimuthalInvert(function(z) {\n  return 2 * atan(z);\n});\n\nexport default function() {\n  return projection(stereographicRaw)\n      .scale(250)\n      .clipAngle(142);\n}\n","import {atan, exp, halfPi, log, tan} from \"../math\";\nimport {mercatorProjection} from \"./mercator\";\n\nexport function transverseMercatorRaw(lambda, phi) {\n  return [log(tan((halfPi + phi) / 2)), -lambda];\n}\n\ntransverseMercatorRaw.invert = function(x, y) {\n  return [-y, 2 * atan(exp(x)) - halfPi];\n};\n\nexport default function() {\n  var m = mercatorProjection(transverseMercatorRaw),\n      center = m.center,\n      rotate = m.rotate;\n\n  m.center = function(_) {\n    return arguments.length ? center([-_[1], _[0]]) : (_ = center(), [_[1], -_[0]]);\n  };\n\n  m.rotate = function(_) {\n    return arguments.length ? rotate([_[0], _[1], _.length > 2 ? _[2] + 90 : 90]) : (_ = rotate(), [_[0], _[1], _[2] - 90]);\n  };\n\n  return rotate([0, 0, 90])\n      .scale(159.155);\n}\n","function defaultSeparation(a, b) {\n  return a.parent === b.parent ? 1 : 2;\n}\n\nfunction meanX(children) {\n  return children.reduce(meanXReduce, 0) / children.length;\n}\n\nfunction meanXReduce(x, c) {\n  return x + c.x;\n}\n\nfunction maxY(children) {\n  return 1 + children.reduce(maxYReduce, 0);\n}\n\nfunction maxYReduce(y, c) {\n  return Math.max(y, c.y);\n}\n\nfunction leafLeft(node) {\n  var children;\n  while (children = node.children) node = children[0];\n  return node;\n}\n\nfunction leafRight(node) {\n  var children;\n  while (children = node.children) node = children[children.length - 1];\n  return node;\n}\n\nexport default function() {\n  var separation = defaultSeparation,\n      dx = 1,\n      dy = 1,\n      nodeSize = false;\n\n  function cluster(root) {\n    var previousNode,\n        x = 0;\n\n    // First walk, computing the initial x & y values.\n    root.eachAfter(function(node) {\n      var children = node.children;\n      if (children) {\n        node.x = meanX(children);\n        node.y = maxY(children);\n      } else {\n        node.x = previousNode ? x += separation(node, previousNode) : 0;\n        node.y = 0;\n        previousNode = node;\n      }\n    });\n\n    var left = leafLeft(root),\n        right = leafRight(root),\n        x0 = left.x - separation(left, right) / 2,\n        x1 = right.x + separation(right, left) / 2;\n\n    // Second walk, normalizing x & y to the desired size.\n    return root.eachAfter(nodeSize ? function(node) {\n      node.x = (node.x - root.x) * dx;\n      node.y = (root.y - node.y) * dy;\n    } : function(node) {\n      node.x = (node.x - x0) / (x1 - x0) * dx;\n      node.y = (1 - (root.y ? node.y / root.y : 1)) * dy;\n    });\n  }\n\n  cluster.separation = function(x) {\n    return arguments.length ? (separation = x, cluster) : separation;\n  };\n\n  cluster.size = function(x) {\n    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? null : [dx, dy]);\n  };\n\n  cluster.nodeSize = function(x) {\n    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? [dx, dy] : null);\n  };\n\n  return cluster;\n}\n","function count(node) {\n  var sum = 0,\n      children = node.children,\n      i = children && children.length;\n  if (!i) sum = 1;\n  else while (--i >= 0) sum += children[i].value;\n  node.value = sum;\n}\n\nexport default function() {\n  return this.eachAfter(count);\n}\n","import node_count from \"./count\";\nimport node_each from \"./each\";\nimport node_eachBefore from \"./eachBefore\";\nimport node_eachAfter from \"./eachAfter\";\nimport node_sum from \"./sum\";\nimport node_sort from \"./sort\";\nimport node_path from \"./path\";\nimport node_ancestors from \"./ancestors\";\nimport node_descendants from \"./descendants\";\nimport node_leaves from \"./leaves\";\nimport node_links from \"./links\";\n\nexport default function hierarchy(data, children) {\n  var root = new Node(data),\n      valued = +data.value && (root.value = data.value),\n      node,\n      nodes = [root],\n      child,\n      childs,\n      i,\n      n;\n\n  if (children == null) children = defaultChildren;\n\n  while (node = nodes.pop()) {\n    if (valued) node.value = +node.data.value;\n    if ((childs = children(node.data)) && (n = childs.length)) {\n      node.children = new Array(n);\n      for (i = n - 1; i >= 0; --i) {\n        nodes.push(child = node.children[i] = new Node(childs[i]));\n        child.parent = node;\n        child.depth = node.depth + 1;\n      }\n    }\n  }\n\n  return root.eachBefore(computeHeight);\n}\n\nfunction node_copy() {\n  return hierarchy(this).eachBefore(copyData);\n}\n\nfunction defaultChildren(d) {\n  return d.children;\n}\n\nfunction copyData(node) {\n  node.data = node.data.data;\n}\n\nexport function computeHeight(node) {\n  var height = 0;\n  do node.height = height;\n  while ((node = node.parent) && (node.height < ++height));\n}\n\nexport function Node(data) {\n  this.data = data;\n  this.depth =\n  this.height = 0;\n  this.parent = null;\n}\n\nNode.prototype = hierarchy.prototype = {\n  constructor: Node,\n  count: node_count,\n  each: node_each,\n  eachAfter: node_eachAfter,\n  eachBefore: node_eachBefore,\n  sum: node_sum,\n  sort: node_sort,\n  path: node_path,\n  ancestors: node_ancestors,\n  descendants: node_descendants,\n  leaves: node_leaves,\n  links: node_links,\n  copy: node_copy\n};\n","export default function(callback) {\n  var node = this, current, next = [node], children, i, n;\n  do {\n    current = next.reverse(), next = [];\n    while (node = current.pop()) {\n      callback(node), children = node.children;\n      if (children) for (i = 0, n = children.length; i < n; ++i) {\n        next.push(children[i]);\n      }\n    }\n  } while (next.length);\n  return this;\n}\n","export default function(callback) {\n  var node = this, nodes = [node], next = [], children, i, n;\n  while (node = nodes.pop()) {\n    next.push(node), children = node.children;\n    if (children) for (i = 0, n = children.length; i < n; ++i) {\n      nodes.push(children[i]);\n    }\n  }\n  while (node = next.pop()) {\n    callback(node);\n  }\n  return this;\n}\n","export default function(callback) {\n  var node = this, nodes = [node], children, i;\n  while (node = nodes.pop()) {\n    callback(node), children = node.children;\n    if (children) for (i = children.length - 1; i >= 0; --i) {\n      nodes.push(children[i]);\n    }\n  }\n  return this;\n}\n","export default function(value) {\n  return this.eachAfter(function(node) {\n    var sum = +value(node.data) || 0,\n        children = node.children,\n        i = children && children.length;\n    while (--i >= 0) sum += children[i].value;\n    node.value = sum;\n  });\n}\n","export default function(compare) {\n  return this.eachBefore(function(node) {\n    if (node.children) {\n      node.children.sort(compare);\n    }\n  });\n}\n","export default function(end) {\n  var start = this,\n      ancestor = leastCommonAncestor(start, end),\n      nodes = [start];\n  while (start !== ancestor) {\n    start = start.parent;\n    nodes.push(start);\n  }\n  var k = nodes.length;\n  while (end !== ancestor) {\n    nodes.splice(k, 0, end);\n    end = end.parent;\n  }\n  return nodes;\n}\n\nfunction leastCommonAncestor(a, b) {\n  if (a === b) return a;\n  var aNodes = a.ancestors(),\n      bNodes = b.ancestors(),\n      c = null;\n  a = aNodes.pop();\n  b = bNodes.pop();\n  while (a === b) {\n    c = a;\n    a = aNodes.pop();\n    b = bNodes.pop();\n  }\n  return c;\n}\n","export default function() {\n  var node = this, nodes = [node];\n  while (node = node.parent) {\n    nodes.push(node);\n  }\n  return nodes;\n}\n","export default function() {\n  var nodes = [];\n  this.each(function(node) {\n    nodes.push(node);\n  });\n  return nodes;\n}\n","export default function() {\n  var leaves = [];\n  this.eachBefore(function(node) {\n    if (!node.children) {\n      leaves.push(node);\n    }\n  });\n  return leaves;\n}\n","export default function() {\n  var root = this, links = [];\n  root.each(function(node) {\n    if (node !== root) { // Don’t include the root’s parent, if any.\n      links.push({source: node.parent, target: node});\n    }\n  });\n  return links;\n}\n","export var slice = Array.prototype.slice;\n\nexport function shuffle(array) {\n  var m = array.length,\n      t,\n      i;\n\n  while (m) {\n    i = Math.random() * m-- | 0;\n    t = array[m];\n    array[m] = array[i];\n    array[i] = t;\n  }\n\n  return array;\n}\n","import {shuffle, slice} from \"../array\";\n\nexport default function(circles) {\n  var i = 0, n = (circles = shuffle(slice.call(circles))).length, B = [], p, e;\n\n  while (i < n) {\n    p = circles[i];\n    if (e && enclosesWeak(e, p)) ++i;\n    else e = encloseBasis(B = extendBasis(B, p)), i = 0;\n  }\n\n  return e;\n}\n\nfunction extendBasis(B, p) {\n  var i, j;\n\n  if (enclosesWeakAll(p, B)) return [p];\n\n  // If we get here then B must have at least one element.\n  for (i = 0; i < B.length; ++i) {\n    if (enclosesNot(p, B[i])\n        && enclosesWeakAll(encloseBasis2(B[i], p), B)) {\n      return [B[i], p];\n    }\n  }\n\n  // If we get here then B must have at least two elements.\n  for (i = 0; i < B.length - 1; ++i) {\n    for (j = i + 1; j < B.length; ++j) {\n      if (enclosesNot(encloseBasis2(B[i], B[j]), p)\n          && enclosesNot(encloseBasis2(B[i], p), B[j])\n          && enclosesNot(encloseBasis2(B[j], p), B[i])\n          && enclosesWeakAll(encloseBasis3(B[i], B[j], p), B)) {\n        return [B[i], B[j], p];\n      }\n    }\n  }\n\n  // If we get here then something is very wrong.\n  throw new Error;\n}\n\nfunction enclosesNot(a, b) {\n  var dr = a.r - b.r, dx = b.x - a.x, dy = b.y - a.y;\n  return dr < 0 || dr * dr < dx * dx + dy * dy;\n}\n\nfunction enclosesWeak(a, b) {\n  var dr = a.r - b.r + 1e-6, dx = b.x - a.x, dy = b.y - a.y;\n  return dr > 0 && dr * dr > dx * dx + dy * dy;\n}\n\nfunction enclosesWeakAll(a, B) {\n  for (var i = 0; i < B.length; ++i) {\n    if (!enclosesWeak(a, B[i])) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction encloseBasis(B) {\n  switch (B.length) {\n    case 1: return encloseBasis1(B[0]);\n    case 2: return encloseBasis2(B[0], B[1]);\n    case 3: return encloseBasis3(B[0], B[1], B[2]);\n  }\n}\n\nfunction encloseBasis1(a) {\n  return {\n    x: a.x,\n    y: a.y,\n    r: a.r\n  };\n}\n\nfunction encloseBasis2(a, b) {\n  var x1 = a.x, y1 = a.y, r1 = a.r,\n      x2 = b.x, y2 = b.y, r2 = b.r,\n      x21 = x2 - x1, y21 = y2 - y1, r21 = r2 - r1,\n      l = Math.sqrt(x21 * x21 + y21 * y21);\n  return {\n    x: (x1 + x2 + x21 / l * r21) / 2,\n    y: (y1 + y2 + y21 / l * r21) / 2,\n    r: (l + r1 + r2) / 2\n  };\n}\n\nfunction encloseBasis3(a, b, c) {\n  var x1 = a.x, y1 = a.y, r1 = a.r,\n      x2 = b.x, y2 = b.y, r2 = b.r,\n      x3 = c.x, y3 = c.y, r3 = c.r,\n      a2 = x1 - x2,\n      a3 = x1 - x3,\n      b2 = y1 - y2,\n      b3 = y1 - y3,\n      c2 = r2 - r1,\n      c3 = r3 - r1,\n      d1 = x1 * x1 + y1 * y1 - r1 * r1,\n      d2 = d1 - x2 * x2 - y2 * y2 + r2 * r2,\n      d3 = d1 - x3 * x3 - y3 * y3 + r3 * r3,\n      ab = a3 * b2 - a2 * b3,\n      xa = (b2 * d3 - b3 * d2) / (ab * 2) - x1,\n      xb = (b3 * c2 - b2 * c3) / ab,\n      ya = (a3 * d2 - a2 * d3) / (ab * 2) - y1,\n      yb = (a2 * c3 - a3 * c2) / ab,\n      A = xb * xb + yb * yb - 1,\n      B = 2 * (r1 + xa * xb + ya * yb),\n      C = xa * xa + ya * ya - r1 * r1,\n      r = -(A ? (B + Math.sqrt(B * B - 4 * A * C)) / (2 * A) : C / B);\n  return {\n    x: x1 + xa + xb * r,\n    y: y1 + ya + yb * r,\n    r: r\n  };\n}\n","import enclose from \"./enclose\";\n\nfunction place(b, a, c) {\n  var dx = b.x - a.x, x, a2,\n      dy = b.y - a.y, y, b2,\n      d2 = dx * dx + dy * dy;\n  if (d2) {\n    a2 = a.r + c.r, a2 *= a2;\n    b2 = b.r + c.r, b2 *= b2;\n    if (a2 > b2) {\n      x = (d2 + b2 - a2) / (2 * d2);\n      y = Math.sqrt(Math.max(0, b2 / d2 - x * x));\n      c.x = b.x - x * dx - y * dy;\n      c.y = b.y - x * dy + y * dx;\n    } else {\n      x = (d2 + a2 - b2) / (2 * d2);\n      y = Math.sqrt(Math.max(0, a2 / d2 - x * x));\n      c.x = a.x + x * dx - y * dy;\n      c.y = a.y + x * dy + y * dx;\n    }\n  } else {\n    c.x = a.x + c.r;\n    c.y = a.y;\n  }\n}\n\nfunction intersects(a, b) {\n  var dr = a.r + b.r - 1e-6, dx = b.x - a.x, dy = b.y - a.y;\n  return dr > 0 && dr * dr > dx * dx + dy * dy;\n}\n\nfunction score(node) {\n  var a = node._,\n      b = node.next._,\n      ab = a.r + b.r,\n      dx = (a.x * b.r + b.x * a.r) / ab,\n      dy = (a.y * b.r + b.y * a.r) / ab;\n  return dx * dx + dy * dy;\n}\n\nfunction Node(circle) {\n  this._ = circle;\n  this.next = null;\n  this.previous = null;\n}\n\nexport function packEnclose(circles) {\n  if (!(n = circles.length)) return 0;\n\n  var a, b, c, n, aa, ca, i, j, k, sj, sk;\n\n  // Place the first circle.\n  a = circles[0], a.x = 0, a.y = 0;\n  if (!(n > 1)) return a.r;\n\n  // Place the second circle.\n  b = circles[1], a.x = -b.r, b.x = a.r, b.y = 0;\n  if (!(n > 2)) return a.r + b.r;\n\n  // Place the third circle.\n  place(b, a, c = circles[2]);\n\n  // Initialize the front-chain using the first three circles a, b and c.\n  a = new Node(a), b = new Node(b), c = new Node(c);\n  a.next = c.previous = b;\n  b.next = a.previous = c;\n  c.next = b.previous = a;\n\n  // Attempt to place each remaining circle…\n  pack: for (i = 3; i < n; ++i) {\n    place(a._, b._, c = circles[i]), c = new Node(c);\n\n    // Find the closest intersecting circle on the front-chain, if any.\n    // “Closeness” is determined by linear distance along the front-chain.\n    // “Ahead” or “behind” is likewise determined by linear distance.\n    j = b.next, k = a.previous, sj = b._.r, sk = a._.r;\n    do {\n      if (sj <= sk) {\n        if (intersects(j._, c._)) {\n          b = j, a.next = b, b.previous = a, --i;\n          continue pack;\n        }\n        sj += j._.r, j = j.next;\n      } else {\n        if (intersects(k._, c._)) {\n          a = k, a.next = b, b.previous = a, --i;\n          continue pack;\n        }\n        sk += k._.r, k = k.previous;\n      }\n    } while (j !== k.next);\n\n    // Success! Insert the new circle c between a and b.\n    c.previous = a, c.next = b, a.next = b.previous = b = c;\n\n    // Compute the new closest circle pair to the centroid.\n    aa = score(a);\n    while ((c = c.next) !== b) {\n      if ((ca = score(c)) < aa) {\n        a = c, aa = ca;\n      }\n    }\n    b = a.next;\n  }\n\n  // Compute the enclosing circle of the front chain.\n  a = [b._], c = b; while ((c = c.next) !== b) a.push(c._); c = enclose(a);\n\n  // Translate the circles to put the enclosing circle around the origin.\n  for (i = 0; i < n; ++i) a = circles[i], a.x -= c.x, a.y -= c.y;\n\n  return c.r;\n}\n\nexport default function(circles) {\n  packEnclose(circles);\n  return circles;\n}\n","export function optional(f) {\n  return f == null ? null : required(f);\n}\n\nexport function required(f) {\n  if (typeof f !== \"function\") throw new Error;\n  return f;\n}\n","export function constantZero() {\n  return 0;\n}\n\nexport default function(x) {\n  return function() {\n    return x;\n  };\n}\n","import {packEnclose} from \"./siblings\";\nimport {optional} from \"../accessors\";\nimport constant, {constantZero} from \"../constant\";\n\nfunction defaultRadius(d) {\n  return Math.sqrt(d.value);\n}\n\nexport default function() {\n  var radius = null,\n      dx = 1,\n      dy = 1,\n      padding = constantZero;\n\n  function pack(root) {\n    root.x = dx / 2, root.y = dy / 2;\n    if (radius) {\n      root.eachBefore(radiusLeaf(radius))\n          .eachAfter(packChildren(padding, 0.5))\n          .eachBefore(translateChild(1));\n    } else {\n      root.eachBefore(radiusLeaf(defaultRadius))\n          .eachAfter(packChildren(constantZero, 1))\n          .eachAfter(packChildren(padding, root.r / Math.min(dx, dy)))\n          .eachBefore(translateChild(Math.min(dx, dy) / (2 * root.r)));\n    }\n    return root;\n  }\n\n  pack.radius = function(x) {\n    return arguments.length ? (radius = optional(x), pack) : radius;\n  };\n\n  pack.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], pack) : [dx, dy];\n  };\n\n  pack.padding = function(x) {\n    return arguments.length ? (padding = typeof x === \"function\" ? x : constant(+x), pack) : padding;\n  };\n\n  return pack;\n}\n\nfunction radiusLeaf(radius) {\n  return function(node) {\n    if (!node.children) {\n      node.r = Math.max(0, +radius(node) || 0);\n    }\n  };\n}\n\nfunction packChildren(padding, k) {\n  return function(node) {\n    if (children = node.children) {\n      var children,\n          i,\n          n = children.length,\n          r = padding(node) * k || 0,\n          e;\n\n      if (r) for (i = 0; i < n; ++i) children[i].r += r;\n      e = packEnclose(children);\n      if (r) for (i = 0; i < n; ++i) children[i].r -= r;\n      node.r = e + r;\n    }\n  };\n}\n\nfunction translateChild(k) {\n  return function(node) {\n    var parent = node.parent;\n    node.r *= k;\n    if (parent) {\n      node.x = parent.x + k * node.x;\n      node.y = parent.y + k * node.y;\n    }\n  };\n}\n","export default function(node) {\n  node.x0 = Math.round(node.x0);\n  node.y0 = Math.round(node.y0);\n  node.x1 = Math.round(node.x1);\n  node.y1 = Math.round(node.y1);\n}\n","export default function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      node,\n      i = -1,\n      n = nodes.length,\n      k = parent.value && (x1 - x0) / parent.value;\n\n  while (++i < n) {\n    node = nodes[i], node.y0 = y0, node.y1 = y1;\n    node.x0 = x0, node.x1 = x0 += node.value * k;\n  }\n}\n","import roundNode from \"./treemap/round\";\nimport treemapDice from \"./treemap/dice\";\n\nexport default function() {\n  var dx = 1,\n      dy = 1,\n      padding = 0,\n      round = false;\n\n  function partition(root) {\n    var n = root.height + 1;\n    root.x0 =\n    root.y0 = padding;\n    root.x1 = dx;\n    root.y1 = dy / n;\n    root.eachBefore(positionNode(dy, n));\n    if (round) root.eachBefore(roundNode);\n    return root;\n  }\n\n  function positionNode(dy, n) {\n    return function(node) {\n      if (node.children) {\n        treemapDice(node, node.x0, dy * (node.depth + 1) / n, node.x1, dy * (node.depth + 2) / n);\n      }\n      var x0 = node.x0,\n          y0 = node.y0,\n          x1 = node.x1 - padding,\n          y1 = node.y1 - padding;\n      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n      node.x0 = x0;\n      node.y0 = y0;\n      node.x1 = x1;\n      node.y1 = y1;\n    };\n  }\n\n  partition.round = function(x) {\n    return arguments.length ? (round = !!x, partition) : round;\n  };\n\n  partition.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], partition) : [dx, dy];\n  };\n\n  partition.padding = function(x) {\n    return arguments.length ? (padding = +x, partition) : padding;\n  };\n\n  return partition;\n}\n","import {required} from \"./accessors\";\nimport {Node, computeHeight} from \"./hierarchy/index\";\n\nvar keyPrefix = \"$\", // Protect against keys like “__proto__”.\n    preroot = {depth: -1},\n    ambiguous = {};\n\nfunction defaultId(d) {\n  return d.id;\n}\n\nfunction defaultParentId(d) {\n  return d.parentId;\n}\n\nexport default function() {\n  var id = defaultId,\n      parentId = defaultParentId;\n\n  function stratify(data) {\n    var d,\n        i,\n        n = data.length,\n        root,\n        parent,\n        node,\n        nodes = new Array(n),\n        nodeId,\n        nodeKey,\n        nodeByKey = {};\n\n    for (i = 0; i < n; ++i) {\n      d = data[i], node = nodes[i] = new Node(d);\n      if ((nodeId = id(d, i, data)) != null && (nodeId += \"\")) {\n        nodeKey = keyPrefix + (node.id = nodeId);\n        nodeByKey[nodeKey] = nodeKey in nodeByKey ? ambiguous : node;\n      }\n    }\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i], nodeId = parentId(data[i], i, data);\n      if (nodeId == null || !(nodeId += \"\")) {\n        if (root) throw new Error(\"multiple roots\");\n        root = node;\n      } else {\n        parent = nodeByKey[keyPrefix + nodeId];\n        if (!parent) throw new Error(\"missing: \" + nodeId);\n        if (parent === ambiguous) throw new Error(\"ambiguous: \" + nodeId);\n        if (parent.children) parent.children.push(node);\n        else parent.children = [node];\n        node.parent = parent;\n      }\n    }\n\n    if (!root) throw new Error(\"no root\");\n    root.parent = preroot;\n    root.eachBefore(function(node) { node.depth = node.parent.depth + 1; --n; }).eachBefore(computeHeight);\n    root.parent = null;\n    if (n > 0) throw new Error(\"cycle\");\n\n    return root;\n  }\n\n  stratify.id = function(x) {\n    return arguments.length ? (id = required(x), stratify) : id;\n  };\n\n  stratify.parentId = function(x) {\n    return arguments.length ? (parentId = required(x), stratify) : parentId;\n  };\n\n  return stratify;\n}\n","import {Node} from \"./hierarchy/index\";\n\nfunction defaultSeparation(a, b) {\n  return a.parent === b.parent ? 1 : 2;\n}\n\n// function radialSeparation(a, b) {\n//   return (a.parent === b.parent ? 1 : 2) / a.depth;\n// }\n\n// This function is used to traverse the left contour of a subtree (or\n// subforest). It returns the successor of v on this contour. This successor is\n// either given by the leftmost child of v or by the thread of v. The function\n// returns null if and only if v is on the highest level of its subtree.\nfunction nextLeft(v) {\n  var children = v.children;\n  return children ? children[0] : v.t;\n}\n\n// This function works analogously to nextLeft.\nfunction nextRight(v) {\n  var children = v.children;\n  return children ? children[children.length - 1] : v.t;\n}\n\n// Shifts the current subtree rooted at w+. This is done by increasing\n// prelim(w+) and mod(w+) by shift.\nfunction moveSubtree(wm, wp, shift) {\n  var change = shift / (wp.i - wm.i);\n  wp.c -= change;\n  wp.s += shift;\n  wm.c += change;\n  wp.z += shift;\n  wp.m += shift;\n}\n\n// All other shifts, applied to the smaller subtrees between w- and w+, are\n// performed by this function. To prepare the shifts, we have to adjust\n// change(w+), shift(w+), and change(w-).\nfunction executeShifts(v) {\n  var shift = 0,\n      change = 0,\n      children = v.children,\n      i = children.length,\n      w;\n  while (--i >= 0) {\n    w = children[i];\n    w.z += shift;\n    w.m += shift;\n    shift += w.s + (change += w.c);\n  }\n}\n\n// If vi-’s ancestor is a sibling of v, returns vi-’s ancestor. Otherwise,\n// returns the specified (default) ancestor.\nfunction nextAncestor(vim, v, ancestor) {\n  return vim.a.parent === v.parent ? vim.a : ancestor;\n}\n\nfunction TreeNode(node, i) {\n  this._ = node;\n  this.parent = null;\n  this.children = null;\n  this.A = null; // default ancestor\n  this.a = this; // ancestor\n  this.z = 0; // prelim\n  this.m = 0; // mod\n  this.c = 0; // change\n  this.s = 0; // shift\n  this.t = null; // thread\n  this.i = i; // number\n}\n\nTreeNode.prototype = Object.create(Node.prototype);\n\nfunction treeRoot(root) {\n  var tree = new TreeNode(root, 0),\n      node,\n      nodes = [tree],\n      child,\n      children,\n      i,\n      n;\n\n  while (node = nodes.pop()) {\n    if (children = node._.children) {\n      node.children = new Array(n = children.length);\n      for (i = n - 1; i >= 0; --i) {\n        nodes.push(child = node.children[i] = new TreeNode(children[i], i));\n        child.parent = node;\n      }\n    }\n  }\n\n  (tree.parent = new TreeNode(null, 0)).children = [tree];\n  return tree;\n}\n\n// Node-link tree diagram using the Reingold-Tilford \"tidy\" algorithm\nexport default function() {\n  var separation = defaultSeparation,\n      dx = 1,\n      dy = 1,\n      nodeSize = null;\n\n  function tree(root) {\n    var t = treeRoot(root);\n\n    // Compute the layout using Buchheim et al.’s algorithm.\n    t.eachAfter(firstWalk), t.parent.m = -t.z;\n    t.eachBefore(secondWalk);\n\n    // If a fixed node size is specified, scale x and y.\n    if (nodeSize) root.eachBefore(sizeNode);\n\n    // If a fixed tree size is specified, scale x and y based on the extent.\n    // Compute the left-most, right-most, and depth-most nodes for extents.\n    else {\n      var left = root,\n          right = root,\n          bottom = root;\n      root.eachBefore(function(node) {\n        if (node.x < left.x) left = node;\n        if (node.x > right.x) right = node;\n        if (node.depth > bottom.depth) bottom = node;\n      });\n      var s = left === right ? 1 : separation(left, right) / 2,\n          tx = s - left.x,\n          kx = dx / (right.x + s + tx),\n          ky = dy / (bottom.depth || 1);\n      root.eachBefore(function(node) {\n        node.x = (node.x + tx) * kx;\n        node.y = node.depth * ky;\n      });\n    }\n\n    return root;\n  }\n\n  // Computes a preliminary x-coordinate for v. Before that, FIRST WALK is\n  // applied recursively to the children of v, as well as the function\n  // APPORTION. After spacing out the children by calling EXECUTE SHIFTS, the\n  // node v is placed to the midpoint of its outermost children.\n  function firstWalk(v) {\n    var children = v.children,\n        siblings = v.parent.children,\n        w = v.i ? siblings[v.i - 1] : null;\n    if (children) {\n      executeShifts(v);\n      var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n      if (w) {\n        v.z = w.z + separation(v._, w._);\n        v.m = v.z - midpoint;\n      } else {\n        v.z = midpoint;\n      }\n    } else if (w) {\n      v.z = w.z + separation(v._, w._);\n    }\n    v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n  }\n\n  // Computes all real x-coordinates by summing up the modifiers recursively.\n  function secondWalk(v) {\n    v._.x = v.z + v.parent.m;\n    v.m += v.parent.m;\n  }\n\n  // The core of the algorithm. Here, a new subtree is combined with the\n  // previous subtrees. Threads are used to traverse the inside and outside\n  // contours of the left and right subtree up to the highest common level. The\n  // vertices used for the traversals are vi+, vi-, vo-, and vo+, where the\n  // superscript o means outside and i means inside, the subscript - means left\n  // subtree and + means right subtree. For summing up the modifiers along the\n  // contour, we use respective variables si+, si-, so-, and so+. Whenever two\n  // nodes of the inside contours conflict, we compute the left one of the\n  // greatest uncommon ancestors using the function ANCESTOR and call MOVE\n  // SUBTREE to shift the subtree and prepare the shifts of smaller subtrees.\n  // Finally, we add a new thread (if necessary).\n  function apportion(v, w, ancestor) {\n    if (w) {\n      var vip = v,\n          vop = v,\n          vim = w,\n          vom = vip.parent.children[0],\n          sip = vip.m,\n          sop = vop.m,\n          sim = vim.m,\n          som = vom.m,\n          shift;\n      while (vim = nextRight(vim), vip = nextLeft(vip), vim && vip) {\n        vom = nextLeft(vom);\n        vop = nextRight(vop);\n        vop.a = v;\n        shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n        if (shift > 0) {\n          moveSubtree(nextAncestor(vim, v, ancestor), v, shift);\n          sip += shift;\n          sop += shift;\n        }\n        sim += vim.m;\n        sip += vip.m;\n        som += vom.m;\n        sop += vop.m;\n      }\n      if (vim && !nextRight(vop)) {\n        vop.t = vim;\n        vop.m += sim - sop;\n      }\n      if (vip && !nextLeft(vom)) {\n        vom.t = vip;\n        vom.m += sip - som;\n        ancestor = v;\n      }\n    }\n    return ancestor;\n  }\n\n  function sizeNode(node) {\n    node.x *= dx;\n    node.y = node.depth * dy;\n  }\n\n  tree.separation = function(x) {\n    return arguments.length ? (separation = x, tree) : separation;\n  };\n\n  tree.size = function(x) {\n    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], tree) : (nodeSize ? null : [dx, dy]);\n  };\n\n  tree.nodeSize = function(x) {\n    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], tree) : (nodeSize ? [dx, dy] : null);\n  };\n\n  return tree;\n}\n","export default function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      node,\n      i = -1,\n      n = nodes.length,\n      k = parent.value && (y1 - y0) / parent.value;\n\n  while (++i < n) {\n    node = nodes[i], node.x0 = x0, node.x1 = x1;\n    node.y0 = y0, node.y1 = y0 += node.value * k;\n  }\n}\n","import treemapDice from \"./dice\";\nimport treemapSlice from \"./slice\";\n\nexport var phi = (1 + Math.sqrt(5)) / 2;\n\nexport function squarifyRatio(ratio, parent, x0, y0, x1, y1) {\n  var rows = [],\n      nodes = parent.children,\n      row,\n      nodeValue,\n      i0 = 0,\n      i1 = 0,\n      n = nodes.length,\n      dx, dy,\n      value = parent.value,\n      sumValue,\n      minValue,\n      maxValue,\n      newRatio,\n      minRatio,\n      alpha,\n      beta;\n\n  while (i0 < n) {\n    dx = x1 - x0, dy = y1 - y0;\n\n    // Find the next non-empty node.\n    do sumValue = nodes[i1++].value; while (!sumValue && i1 < n);\n    minValue = maxValue = sumValue;\n    alpha = Math.max(dy / dx, dx / dy) / (value * ratio);\n    beta = sumValue * sumValue * alpha;\n    minRatio = Math.max(maxValue / beta, beta / minValue);\n\n    // Keep adding nodes while the aspect ratio maintains or improves.\n    for (; i1 < n; ++i1) {\n      sumValue += nodeValue = nodes[i1].value;\n      if (nodeValue < minValue) minValue = nodeValue;\n      if (nodeValue > maxValue) maxValue = nodeValue;\n      beta = sumValue * sumValue * alpha;\n      newRatio = Math.max(maxValue / beta, beta / minValue);\n      if (newRatio > minRatio) { sumValue -= nodeValue; break; }\n      minRatio = newRatio;\n    }\n\n    // Position and record the row orientation.\n    rows.push(row = {value: sumValue, dice: dx < dy, children: nodes.slice(i0, i1)});\n    if (row.dice) treemapDice(row, x0, y0, x1, value ? y0 += dy * sumValue / value : y1);\n    else treemapSlice(row, x0, y0, value ? x0 += dx * sumValue / value : x1, y1);\n    value -= sumValue, i0 = i1;\n  }\n\n  return rows;\n}\n\nexport default (function custom(ratio) {\n\n  function squarify(parent, x0, y0, x1, y1) {\n    squarifyRatio(ratio, parent, x0, y0, x1, y1);\n  }\n\n  squarify.ratio = function(x) {\n    return custom((x = +x) > 1 ? x : 1);\n  };\n\n  return squarify;\n})(phi);\n","import roundNode from \"./round\";\nimport squarify from \"./squarify\";\nimport {required} from \"../accessors\";\nimport constant, {constantZero} from \"../constant\";\n\nexport default function() {\n  var tile = squarify,\n      round = false,\n      dx = 1,\n      dy = 1,\n      paddingStack = [0],\n      paddingInner = constantZero,\n      paddingTop = constantZero,\n      paddingRight = constantZero,\n      paddingBottom = constantZero,\n      paddingLeft = constantZero;\n\n  function treemap(root) {\n    root.x0 =\n    root.y0 = 0;\n    root.x1 = dx;\n    root.y1 = dy;\n    root.eachBefore(positionNode);\n    paddingStack = [0];\n    if (round) root.eachBefore(roundNode);\n    return root;\n  }\n\n  function positionNode(node) {\n    var p = paddingStack[node.depth],\n        x0 = node.x0 + p,\n        y0 = node.y0 + p,\n        x1 = node.x1 - p,\n        y1 = node.y1 - p;\n    if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n    if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n    node.x0 = x0;\n    node.y0 = y0;\n    node.x1 = x1;\n    node.y1 = y1;\n    if (node.children) {\n      p = paddingStack[node.depth + 1] = paddingInner(node) / 2;\n      x0 += paddingLeft(node) - p;\n      y0 += paddingTop(node) - p;\n      x1 -= paddingRight(node) - p;\n      y1 -= paddingBottom(node) - p;\n      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n      tile(node, x0, y0, x1, y1);\n    }\n  }\n\n  treemap.round = function(x) {\n    return arguments.length ? (round = !!x, treemap) : round;\n  };\n\n  treemap.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], treemap) : [dx, dy];\n  };\n\n  treemap.tile = function(x) {\n    return arguments.length ? (tile = required(x), treemap) : tile;\n  };\n\n  treemap.padding = function(x) {\n    return arguments.length ? treemap.paddingInner(x).paddingOuter(x) : treemap.paddingInner();\n  };\n\n  treemap.paddingInner = function(x) {\n    return arguments.length ? (paddingInner = typeof x === \"function\" ? x : constant(+x), treemap) : paddingInner;\n  };\n\n  treemap.paddingOuter = function(x) {\n    return arguments.length ? treemap.paddingTop(x).paddingRight(x).paddingBottom(x).paddingLeft(x) : treemap.paddingTop();\n  };\n\n  treemap.paddingTop = function(x) {\n    return arguments.length ? (paddingTop = typeof x === \"function\" ? x : constant(+x), treemap) : paddingTop;\n  };\n\n  treemap.paddingRight = function(x) {\n    return arguments.length ? (paddingRight = typeof x === \"function\" ? x : constant(+x), treemap) : paddingRight;\n  };\n\n  treemap.paddingBottom = function(x) {\n    return arguments.length ? (paddingBottom = typeof x === \"function\" ? x : constant(+x), treemap) : paddingBottom;\n  };\n\n  treemap.paddingLeft = function(x) {\n    return arguments.length ? (paddingLeft = typeof x === \"function\" ? x : constant(+x), treemap) : paddingLeft;\n  };\n\n  return treemap;\n}\n","export default function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      i, n = nodes.length,\n      sum, sums = new Array(n + 1);\n\n  for (sums[0] = sum = i = 0; i < n; ++i) {\n    sums[i + 1] = sum += nodes[i].value;\n  }\n\n  partition(0, n, parent.value, x0, y0, x1, y1);\n\n  function partition(i, j, value, x0, y0, x1, y1) {\n    if (i >= j - 1) {\n      var node = nodes[i];\n      node.x0 = x0, node.y0 = y0;\n      node.x1 = x1, node.y1 = y1;\n      return;\n    }\n\n    var valueOffset = sums[i],\n        valueTarget = (value / 2) + valueOffset,\n        k = i + 1,\n        hi = j - 1;\n\n    while (k < hi) {\n      var mid = k + hi >>> 1;\n      if (sums[mid] < valueTarget) k = mid + 1;\n      else hi = mid;\n    }\n\n    if ((valueTarget - sums[k - 1]) < (sums[k] - valueTarget) && i + 1 < k) --k;\n\n    var valueLeft = sums[k] - valueOffset,\n        valueRight = value - valueLeft;\n\n    if ((x1 - x0) > (y1 - y0)) {\n      var xk = (x0 * valueRight + x1 * valueLeft) / value;\n      partition(i, k, valueLeft, x0, y0, xk, y1);\n      partition(k, j, valueRight, xk, y0, x1, y1);\n    } else {\n      var yk = (y0 * valueRight + y1 * valueLeft) / value;\n      partition(i, k, valueLeft, x0, y0, x1, yk);\n      partition(k, j, valueRight, x0, yk, x1, y1);\n    }\n  }\n}\n","import dice from \"./dice\";\nimport slice from \"./slice\";\n\nexport default function(parent, x0, y0, x1, y1) {\n  (parent.depth & 1 ? slice : dice)(parent, x0, y0, x1, y1);\n}\n","import treemapDice from \"./dice\";\nimport treemapSlice from \"./slice\";\nimport {phi, squarifyRatio} from \"./squarify\";\n\nexport default (function custom(ratio) {\n\n  function resquarify(parent, x0, y0, x1, y1) {\n    if ((rows = parent._squarify) && (rows.ratio === ratio)) {\n      var rows,\n          row,\n          nodes,\n          i,\n          j = -1,\n          n,\n          m = rows.length,\n          value = parent.value;\n\n      while (++j < m) {\n        row = rows[j], nodes = row.children;\n        for (i = row.value = 0, n = nodes.length; i < n; ++i) row.value += nodes[i].value;\n        if (row.dice) treemapDice(row, x0, y0, x1, y0 += (y1 - y0) * row.value / value);\n        else treemapSlice(row, x0, y0, x0 += (x1 - x0) * row.value / value, y1);\n        value -= row.value;\n      }\n    } else {\n      parent._squarify = rows = squarifyRatio(ratio, parent, x0, y0, x1, y1);\n      rows.ratio = ratio;\n    }\n  }\n\n  resquarify.ratio = function(x) {\n    return custom((x = +x) > 1 ? x : 1);\n  };\n\n  return resquarify;\n})(phi);\n","export default function(polygon) {\n  var i = -1,\n      n = polygon.length,\n      a,\n      b = polygon[n - 1],\n      area = 0;\n\n  while (++i < n) {\n    a = b;\n    b = polygon[i];\n    area += a[1] * b[0] - a[0] * b[1];\n  }\n\n  return area / 2;\n}\n","export default function(polygon) {\n  var i = -1,\n      n = polygon.length,\n      x = 0,\n      y = 0,\n      a,\n      b = polygon[n - 1],\n      c,\n      k = 0;\n\n  while (++i < n) {\n    a = b;\n    b = polygon[i];\n    k += c = a[0] * b[1] - b[0] * a[1];\n    x += (a[0] + b[0]) * c;\n    y += (a[1] + b[1]) * c;\n  }\n\n  return k *= 3, [x / k, y / k];\n}\n","// Returns the 2D cross product of AB and AC vectors, i.e., the z-component of\n// the 3D cross product in a quadrant I Cartesian coordinate system (+x is\n// right, +y is up). Returns a positive value if ABC is counter-clockwise,\n// negative if clockwise, and zero if the points are collinear.\nexport default function(a, b, c) {\n  return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n}\n","import cross from \"./cross\";\n\nfunction lexicographicOrder(a, b) {\n  return a[0] - b[0] || a[1] - b[1];\n}\n\n// Computes the upper convex hull per the monotone chain algorithm.\n// Assumes points.length >= 3, is sorted by x, unique in y.\n// Returns an array of indices into points in left-to-right order.\nfunction computeUpperHullIndexes(points) {\n  var n = points.length,\n      indexes = [0, 1],\n      size = 2;\n\n  for (var i = 2; i < n; ++i) {\n    while (size > 1 && cross(points[indexes[size - 2]], points[indexes[size - 1]], points[i]) <= 0) --size;\n    indexes[size++] = i;\n  }\n\n  return indexes.slice(0, size); // remove popped points\n}\n\nexport default function(points) {\n  if ((n = points.length) < 3) return null;\n\n  var i,\n      n,\n      sortedPoints = new Array(n),\n      flippedPoints = new Array(n);\n\n  for (i = 0; i < n; ++i) sortedPoints[i] = [+points[i][0], +points[i][1], i];\n  sortedPoints.sort(lexicographicOrder);\n  for (i = 0; i < n; ++i) flippedPoints[i] = [sortedPoints[i][0], -sortedPoints[i][1]];\n\n  var upperIndexes = computeUpperHullIndexes(sortedPoints),\n      lowerIndexes = computeUpperHullIndexes(flippedPoints);\n\n  // Construct the hull polygon, removing possible duplicate endpoints.\n  var skipLeft = lowerIndexes[0] === upperIndexes[0],\n      skipRight = lowerIndexes[lowerIndexes.length - 1] === upperIndexes[upperIndexes.length - 1],\n      hull = [];\n\n  // Add upper hull in right-to-l order.\n  // Then add lower hull in left-to-right order.\n  for (i = upperIndexes.length - 1; i >= 0; --i) hull.push(points[sortedPoints[upperIndexes[i]][2]]);\n  for (i = +skipLeft; i < lowerIndexes.length - skipRight; ++i) hull.push(points[sortedPoints[lowerIndexes[i]][2]]);\n\n  return hull;\n}\n","export default function(polygon, point) {\n  var n = polygon.length,\n      p = polygon[n - 1],\n      x = point[0], y = point[1],\n      x0 = p[0], y0 = p[1],\n      x1, y1,\n      inside = false;\n\n  for (var i = 0; i < n; ++i) {\n    p = polygon[i], x1 = p[0], y1 = p[1];\n    if (((y1 > y) !== (y0 > y)) && (x < (x0 - x1) * (y - y1) / (y0 - y1) + x1)) inside = !inside;\n    x0 = x1, y0 = y1;\n  }\n\n  return inside;\n}\n","export default function(polygon) {\n  var i = -1,\n      n = polygon.length,\n      b = polygon[n - 1],\n      xa,\n      ya,\n      xb = b[0],\n      yb = b[1],\n      perimeter = 0;\n\n  while (++i < n) {\n    xa = xb;\n    ya = yb;\n    b = polygon[i];\n    xb = b[0];\n    yb = b[1];\n    xa -= xb;\n    ya -= yb;\n    perimeter += Math.sqrt(xa * xa + ya * ya);\n  }\n\n  return perimeter;\n}\n","export default function() {\n  return Math.random();\n}\n","import defaultSource from \"./defaultSource\";\n\nexport default (function sourceRandomUniform(source) {\n  function randomUniform(min, max) {\n    min = min == null ? 0 : +min;\n    max = max == null ? 1 : +max;\n    if (arguments.length === 1) max = min, min = 0;\n    else max -= min;\n    return function() {\n      return source() * max + min;\n    };\n  }\n\n  randomUniform.source = sourceRandomUniform;\n\n  return randomUniform;\n})(defaultSource);\n","import defaultSource from \"./defaultSource\";\n\nexport default (function sourceRandomNormal(source) {\n  function randomNormal(mu, sigma) {\n    var x, r;\n    mu = mu == null ? 0 : +mu;\n    sigma = sigma == null ? 1 : +sigma;\n    return function() {\n      var y;\n\n      // If available, use the second previously-generated uniform random.\n      if (x != null) y = x, x = null;\n\n      // Otherwise, generate a new x and y.\n      else do {\n        x = source() * 2 - 1;\n        y = source() * 2 - 1;\n        r = x * x + y * y;\n      } while (!r || r > 1);\n\n      return mu + sigma * y * Math.sqrt(-2 * Math.log(r) / r);\n    };\n  }\n\n  randomNormal.source = sourceRandomNormal;\n\n  return randomNormal;\n})(defaultSource);\n","import defaultSource from \"./defaultSource\";\nimport normal from \"./normal\";\n\nexport default (function sourceRandomLogNormal(source) {\n  function randomLogNormal() {\n    var randomNormal = normal.source(source).apply(this, arguments);\n    return function() {\n      return Math.exp(randomNormal());\n    };\n  }\n\n  randomLogNormal.source = sourceRandomLogNormal;\n\n  return randomLogNormal;\n})(defaultSource);\n","import defaultSource from \"./defaultSource\";\n\nexport default (function sourceRandomIrwinHall(source) {\n  function randomIrwinHall(n) {\n    return function() {\n      for (var sum = 0, i = 0; i < n; ++i) sum += source();\n      return sum;\n    };\n  }\n\n  randomIrwinHall.source = sourceRandomIrwinHall;\n\n  return randomIrwinHall;\n})(defaultSource);\n","import defaultSource from \"./defaultSource\";\nimport irwinHall from \"./irwinHall\";\n\nexport default (function sourceRandomBates(source) {\n  function randomBates(n) {\n    var randomIrwinHall = irwinHall.source(source)(n);\n    return function() {\n      return randomIrwinHall() / n;\n    };\n  }\n\n  randomBates.source = sourceRandomBates;\n\n  return randomBates;\n})(defaultSource);\n","import defaultSource from \"./defaultSource\";\n\nexport default (function sourceRandomExponential(source) {\n  function randomExponential(lambda) {\n    return function() {\n      return -Math.log(1 - source()) / lambda;\n    };\n  }\n\n  randomExponential.source = sourceRandomExponential;\n\n  return randomExponential;\n})(defaultSource);\n","var array = Array.prototype;\n\nexport var map = array.map;\nexport var slice = array.slice;\n","import {map} from \"d3-collection\";\nimport {slice} from \"./array\";\n\nexport var implicit = {name: \"implicit\"};\n\nexport default function ordinal(range) {\n  var index = map(),\n      domain = [],\n      unknown = implicit;\n\n  range = range == null ? [] : slice.call(range);\n\n  function scale(d) {\n    var key = d + \"\", i = index.get(key);\n    if (!i) {\n      if (unknown !== implicit) return unknown;\n      index.set(key, i = domain.push(d));\n    }\n    return range[(i - 1) % range.length];\n  }\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [], index = map();\n    var i = -1, n = _.length, d, key;\n    while (++i < n) if (!index.has(key = (d = _[i]) + \"\")) index.set(key, domain.push(d));\n    return scale;\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), scale) : range.slice();\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  scale.copy = function() {\n    return ordinal()\n        .domain(domain)\n        .range(range)\n        .unknown(unknown);\n  };\n\n  return scale;\n}\n","import {range as sequence} from \"d3-array\";\nimport ordinal from \"./ordinal\";\n\nexport default function band() {\n  var scale = ordinal().unknown(undefined),\n      domain = scale.domain,\n      ordinalRange = scale.range,\n      range = [0, 1],\n      step,\n      bandwidth,\n      round = false,\n      paddingInner = 0,\n      paddingOuter = 0,\n      align = 0.5;\n\n  delete scale.unknown;\n\n  function rescale() {\n    var n = domain().length,\n        reverse = range[1] < range[0],\n        start = range[reverse - 0],\n        stop = range[1 - reverse];\n    step = (stop - start) / Math.max(1, n - paddingInner + paddingOuter * 2);\n    if (round) step = Math.floor(step);\n    start += (stop - start - step * (n - paddingInner)) * align;\n    bandwidth = step * (1 - paddingInner);\n    if (round) start = Math.round(start), bandwidth = Math.round(bandwidth);\n    var values = sequence(n).map(function(i) { return start + step * i; });\n    return ordinalRange(reverse ? values.reverse() : values);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = [+_[0], +_[1]], rescale()) : range.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range = [+_[0], +_[1]], round = true, rescale();\n  };\n\n  scale.bandwidth = function() {\n    return bandwidth;\n  };\n\n  scale.step = function() {\n    return step;\n  };\n\n  scale.round = function(_) {\n    return arguments.length ? (round = !!_, rescale()) : round;\n  };\n\n  scale.padding = function(_) {\n    return arguments.length ? (paddingInner = paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n  };\n\n  scale.paddingInner = function(_) {\n    return arguments.length ? (paddingInner = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n  };\n\n  scale.paddingOuter = function(_) {\n    return arguments.length ? (paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingOuter;\n  };\n\n  scale.align = function(_) {\n    return arguments.length ? (align = Math.max(0, Math.min(1, _)), rescale()) : align;\n  };\n\n  scale.copy = function() {\n    return band()\n        .domain(domain())\n        .range(range)\n        .round(round)\n        .paddingInner(paddingInner)\n        .paddingOuter(paddingOuter)\n        .align(align);\n  };\n\n  return rescale();\n}\n\nfunction pointish(scale) {\n  var copy = scale.copy;\n\n  scale.padding = scale.paddingOuter;\n  delete scale.paddingInner;\n  delete scale.paddingOuter;\n\n  scale.copy = function() {\n    return pointish(copy());\n  };\n\n  return scale;\n}\n\nexport function point() {\n  return pointish(band().paddingInner(1));\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function(x) {\n  return +x;\n}\n","import {bisect} from \"d3-array\";\nimport {interpolate as interpolateValue, interpolateRound} from \"d3-interpolate\";\nimport {map, slice} from \"./array\";\nimport constant from \"./constant\";\nimport number from \"./number\";\n\nvar unit = [0, 1];\n\nexport function deinterpolateLinear(a, b) {\n  return (b -= (a = +a))\n      ? function(x) { return (x - a) / b; }\n      : constant(b);\n}\n\nfunction deinterpolateClamp(deinterpolate) {\n  return function(a, b) {\n    var d = deinterpolate(a = +a, b = +b);\n    return function(x) { return x <= a ? 0 : x >= b ? 1 : d(x); };\n  };\n}\n\nfunction reinterpolateClamp(reinterpolate) {\n  return function(a, b) {\n    var r = reinterpolate(a = +a, b = +b);\n    return function(t) { return t <= 0 ? a : t >= 1 ? b : r(t); };\n  };\n}\n\nfunction bimap(domain, range, deinterpolate, reinterpolate) {\n  var d0 = domain[0], d1 = domain[1], r0 = range[0], r1 = range[1];\n  if (d1 < d0) d0 = deinterpolate(d1, d0), r0 = reinterpolate(r1, r0);\n  else d0 = deinterpolate(d0, d1), r0 = reinterpolate(r0, r1);\n  return function(x) { return r0(d0(x)); };\n}\n\nfunction polymap(domain, range, deinterpolate, reinterpolate) {\n  var j = Math.min(domain.length, range.length) - 1,\n      d = new Array(j),\n      r = new Array(j),\n      i = -1;\n\n  // Reverse descending domains.\n  if (domain[j] < domain[0]) {\n    domain = domain.slice().reverse();\n    range = range.slice().reverse();\n  }\n\n  while (++i < j) {\n    d[i] = deinterpolate(domain[i], domain[i + 1]);\n    r[i] = reinterpolate(range[i], range[i + 1]);\n  }\n\n  return function(x) {\n    var i = bisect(domain, x, 1, j) - 1;\n    return r[i](d[i](x));\n  };\n}\n\nexport function copy(source, target) {\n  return target\n      .domain(source.domain())\n      .range(source.range())\n      .interpolate(source.interpolate())\n      .clamp(source.clamp());\n}\n\n// deinterpolate(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].\n// reinterpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding domain value x in [a,b].\nexport default function continuous(deinterpolate, reinterpolate) {\n  var domain = unit,\n      range = unit,\n      interpolate = interpolateValue,\n      clamp = false,\n      piecewise,\n      output,\n      input;\n\n  function rescale() {\n    piecewise = Math.min(domain.length, range.length) > 2 ? polymap : bimap;\n    output = input = null;\n    return scale;\n  }\n\n  function scale(x) {\n    return (output || (output = piecewise(domain, range, clamp ? deinterpolateClamp(deinterpolate) : deinterpolate, interpolate)))(+x);\n  }\n\n  scale.invert = function(y) {\n    return (input || (input = piecewise(range, domain, deinterpolateLinear, clamp ? reinterpolateClamp(reinterpolate) : reinterpolate)))(+y);\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = map.call(_, number), rescale()) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), rescale()) : range.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range = slice.call(_), interpolate = interpolateRound, rescale();\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, rescale()) : clamp;\n  };\n\n  scale.interpolate = function(_) {\n    return arguments.length ? (interpolate = _, rescale()) : interpolate;\n  };\n\n  return rescale();\n}\n","import {tickStep} from \"d3-array\";\nimport {format, formatPrefix, formatSpecifier, precisionFixed, precisionPrefix, precisionRound} from \"d3-format\";\n\nexport default function(domain, count, specifier) {\n  var start = domain[0],\n      stop = domain[domain.length - 1],\n      step = tickStep(start, stop, count == null ? 10 : count),\n      precision;\n  specifier = formatSpecifier(specifier == null ? \",f\" : specifier);\n  switch (specifier.type) {\n    case \"s\": {\n      var value = Math.max(Math.abs(start), Math.abs(stop));\n      if (specifier.precision == null && !isNaN(precision = precisionPrefix(step, value))) specifier.precision = precision;\n      return formatPrefix(specifier, value);\n    }\n    case \"\":\n    case \"e\":\n    case \"g\":\n    case \"p\":\n    case \"r\": {\n      if (specifier.precision == null && !isNaN(precision = precisionRound(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === \"e\");\n      break;\n    }\n    case \"f\":\n    case \"%\": {\n      if (specifier.precision == null && !isNaN(precision = precisionFixed(step))) specifier.precision = precision - (specifier.type === \"%\") * 2;\n      break;\n    }\n  }\n  return format(specifier);\n}\n","import {ticks, tickIncrement} from \"d3-array\";\nimport {interpolateNumber as reinterpolate} from \"d3-interpolate\";\nimport {default as continuous, copy, deinterpolateLinear as deinterpolate} from \"./continuous\";\nimport tickFormat from \"./tickFormat\";\n\nexport function linearish(scale) {\n  var domain = scale.domain;\n\n  scale.ticks = function(count) {\n    var d = domain();\n    return ticks(d[0], d[d.length - 1], count == null ? 10 : count);\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return tickFormat(domain(), count, specifier);\n  };\n\n  scale.nice = function(count) {\n    if (count == null) count = 10;\n\n    var d = domain(),\n        i0 = 0,\n        i1 = d.length - 1,\n        start = d[i0],\n        stop = d[i1],\n        step;\n\n    if (stop < start) {\n      step = start, start = stop, stop = step;\n      step = i0, i0 = i1, i1 = step;\n    }\n\n    step = tickIncrement(start, stop, count);\n\n    if (step > 0) {\n      start = Math.floor(start / step) * step;\n      stop = Math.ceil(stop / step) * step;\n      step = tickIncrement(start, stop, count);\n    } else if (step < 0) {\n      start = Math.ceil(start * step) / step;\n      stop = Math.floor(stop * step) / step;\n      step = tickIncrement(start, stop, count);\n    }\n\n    if (step > 0) {\n      d[i0] = Math.floor(start / step) * step;\n      d[i1] = Math.ceil(stop / step) * step;\n      domain(d);\n    } else if (step < 0) {\n      d[i0] = Math.ceil(start * step) / step;\n      d[i1] = Math.floor(stop * step) / step;\n      domain(d);\n    }\n\n    return scale;\n  };\n\n  return scale;\n}\n\nexport default function linear() {\n  var scale = continuous(deinterpolate, reinterpolate);\n\n  scale.copy = function() {\n    return copy(scale, linear());\n  };\n\n  return linearish(scale);\n}\n","import {map} from \"./array\";\nimport {linearish} from \"./linear\";\nimport number from \"./number\";\n\nexport default function identity() {\n  var domain = [0, 1];\n\n  function scale(x) {\n    return +x;\n  }\n\n  scale.invert = scale;\n\n  scale.domain = scale.range = function(_) {\n    return arguments.length ? (domain = map.call(_, number), scale) : domain.slice();\n  };\n\n  scale.copy = function() {\n    return identity().domain(domain);\n  };\n\n  return linearish(scale);\n}\n","export default function(domain, interval) {\n  domain = domain.slice();\n\n  var i0 = 0,\n      i1 = domain.length - 1,\n      x0 = domain[i0],\n      x1 = domain[i1],\n      t;\n\n  if (x1 < x0) {\n    t = i0, i0 = i1, i1 = t;\n    t = x0, x0 = x1, x1 = t;\n  }\n\n  domain[i0] = interval.floor(x0);\n  domain[i1] = interval.ceil(x1);\n  return domain;\n}\n","import {ticks} from \"d3-array\";\nimport {format} from \"d3-format\";\nimport constant from \"./constant\";\nimport nice from \"./nice\";\nimport {default as continuous, copy} from \"./continuous\";\n\nfunction deinterpolate(a, b) {\n  return (b = Math.log(b / a))\n      ? function(x) { return Math.log(x / a) / b; }\n      : constant(b);\n}\n\nfunction reinterpolate(a, b) {\n  return a < 0\n      ? function(t) { return -Math.pow(-b, t) * Math.pow(-a, 1 - t); }\n      : function(t) { return Math.pow(b, t) * Math.pow(a, 1 - t); };\n}\n\nfunction pow10(x) {\n  return isFinite(x) ? +(\"1e\" + x) : x < 0 ? 0 : x;\n}\n\nfunction powp(base) {\n  return base === 10 ? pow10\n      : base === Math.E ? Math.exp\n      : function(x) { return Math.pow(base, x); };\n}\n\nfunction logp(base) {\n  return base === Math.E ? Math.log\n      : base === 10 && Math.log10\n      || base === 2 && Math.log2\n      || (base = Math.log(base), function(x) { return Math.log(x) / base; });\n}\n\nfunction reflect(f) {\n  return function(x) {\n    return -f(-x);\n  };\n}\n\nexport default function log() {\n  var scale = continuous(deinterpolate, reinterpolate).domain([1, 10]),\n      domain = scale.domain,\n      base = 10,\n      logs = logp(10),\n      pows = powp(10);\n\n  function rescale() {\n    logs = logp(base), pows = powp(base);\n    if (domain()[0] < 0) logs = reflect(logs), pows = reflect(pows);\n    return scale;\n  }\n\n  scale.base = function(_) {\n    return arguments.length ? (base = +_, rescale()) : base;\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.ticks = function(count) {\n    var d = domain(),\n        u = d[0],\n        v = d[d.length - 1],\n        r;\n\n    if (r = v < u) i = u, u = v, v = i;\n\n    var i = logs(u),\n        j = logs(v),\n        p,\n        k,\n        t,\n        n = count == null ? 10 : +count,\n        z = [];\n\n    if (!(base % 1) && j - i < n) {\n      i = Math.round(i) - 1, j = Math.round(j) + 1;\n      if (u > 0) for (; i < j; ++i) {\n        for (k = 1, p = pows(i); k < base; ++k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      } else for (; i < j; ++i) {\n        for (k = base - 1, p = pows(i); k >= 1; --k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      }\n    } else {\n      z = ticks(i, j, Math.min(j - i, n)).map(pows);\n    }\n\n    return r ? z.reverse() : z;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    if (specifier == null) specifier = base === 10 ? \".0e\" : \",\";\n    if (typeof specifier !== \"function\") specifier = format(specifier);\n    if (count === Infinity) return specifier;\n    if (count == null) count = 10;\n    var k = Math.max(1, base * count / scale.ticks().length); // TODO fast estimate?\n    return function(d) {\n      var i = d / pows(Math.round(logs(d)));\n      if (i * base < base - 0.5) i *= base;\n      return i <= k ? specifier(d) : \"\";\n    };\n  };\n\n  scale.nice = function() {\n    return domain(nice(domain(), {\n      floor: function(x) { return pows(Math.floor(logs(x))); },\n      ceil: function(x) { return pows(Math.ceil(logs(x))); }\n    }));\n  };\n\n  scale.copy = function() {\n    return copy(scale, log().base(base));\n  };\n\n  return scale;\n}\n","import constant from \"./constant\";\nimport {linearish} from \"./linear\";\nimport {default as continuous, copy} from \"./continuous\";\n\nfunction raise(x, exponent) {\n  return x < 0 ? -Math.pow(-x, exponent) : Math.pow(x, exponent);\n}\n\nexport default function pow() {\n  var exponent = 1,\n      scale = continuous(deinterpolate, reinterpolate),\n      domain = scale.domain;\n\n  function deinterpolate(a, b) {\n    return (b = raise(b, exponent) - (a = raise(a, exponent)))\n        ? function(x) { return (raise(x, exponent) - a) / b; }\n        : constant(b);\n  }\n\n  function reinterpolate(a, b) {\n    b = raise(b, exponent) - (a = raise(a, exponent));\n    return function(t) { return raise(a + b * t, 1 / exponent); };\n  }\n\n  scale.exponent = function(_) {\n    return arguments.length ? (exponent = +_, domain(domain())) : exponent;\n  };\n\n  scale.copy = function() {\n    return copy(scale, pow().exponent(exponent));\n  };\n\n  return linearish(scale);\n}\n\nexport function sqrt() {\n  return pow().exponent(0.5);\n}\n","import {ascending, bisect, quantile as threshold} from \"d3-array\";\nimport {slice} from \"./array\";\n\nexport default function quantile() {\n  var domain = [],\n      range = [],\n      thresholds = [];\n\n  function rescale() {\n    var i = 0, n = Math.max(1, range.length);\n    thresholds = new Array(n - 1);\n    while (++i < n) thresholds[i - 1] = threshold(domain, i / n);\n    return scale;\n  }\n\n  function scale(x) {\n    if (!isNaN(x = +x)) return range[bisect(thresholds, x)];\n  }\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return i < 0 ? [NaN, NaN] : [\n      i > 0 ? thresholds[i - 1] : domain[0],\n      i < thresholds.length ? thresholds[i] : domain[domain.length - 1]\n    ];\n  };\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [];\n    for (var i = 0, n = _.length, d; i < n; ++i) if (d = _[i], d != null && !isNaN(d = +d)) domain.push(d);\n    domain.sort(ascending);\n    return rescale();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), rescale()) : range.slice();\n  };\n\n  scale.quantiles = function() {\n    return thresholds.slice();\n  };\n\n  scale.copy = function() {\n    return quantile()\n        .domain(domain)\n        .range(range);\n  };\n\n  return scale;\n}\n","import {bisect} from \"d3-array\";\nimport {slice} from \"./array\";\nimport {linearish} from \"./linear\";\n\nexport default function quantize() {\n  var x0 = 0,\n      x1 = 1,\n      n = 1,\n      domain = [0.5],\n      range = [0, 1];\n\n  function scale(x) {\n    if (x <= x) return range[bisect(domain, x, 0, n)];\n  }\n\n  function rescale() {\n    var i = -1;\n    domain = new Array(n);\n    while (++i < n) domain[i] = ((i + 1) * x1 - (i - n) * x0) / (n + 1);\n    return scale;\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], rescale()) : [x0, x1];\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (n = (range = slice.call(_)).length - 1, rescale()) : range.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return i < 0 ? [NaN, NaN]\n        : i < 1 ? [x0, domain[0]]\n        : i >= n ? [domain[n - 1], x1]\n        : [domain[i - 1], domain[i]];\n  };\n\n  scale.copy = function() {\n    return quantize()\n        .domain([x0, x1])\n        .range(range);\n  };\n\n  return linearish(scale);\n}\n","import {bisect} from \"d3-array\";\nimport {slice} from \"./array\";\n\nexport default function threshold() {\n  var domain = [0.5],\n      range = [0, 1],\n      n = 1;\n\n  function scale(x) {\n    if (x <= x) return range[bisect(domain, x, 0, n)];\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = slice.call(_), n = Math.min(domain.length, range.length - 1), scale) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), n = Math.min(domain.length, range.length - 1), scale) : range.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return [domain[i - 1], domain[i]];\n  };\n\n  scale.copy = function() {\n    return threshold()\n        .domain(domain)\n        .range(range);\n  };\n\n  return scale;\n}\n","var t0 = new Date,\n    t1 = new Date;\n\nexport default function newInterval(floori, offseti, count, field) {\n\n  function interval(date) {\n    return floori(date = new Date(+date)), date;\n  }\n\n  interval.floor = interval;\n\n  interval.ceil = function(date) {\n    return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;\n  };\n\n  interval.round = function(date) {\n    var d0 = interval(date),\n        d1 = interval.ceil(date);\n    return date - d0 < d1 - date ? d0 : d1;\n  };\n\n  interval.offset = function(date, step) {\n    return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;\n  };\n\n  interval.range = function(start, stop, step) {\n    var range = [], previous;\n    start = interval.ceil(start);\n    step = step == null ? 1 : Math.floor(step);\n    if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date\n    do range.push(previous = new Date(+start)), offseti(start, step), floori(start);\n    while (previous < start && start < stop);\n    return range;\n  };\n\n  interval.filter = function(test) {\n    return newInterval(function(date) {\n      if (date >= date) while (floori(date), !test(date)) date.setTime(date - 1);\n    }, function(date, step) {\n      if (date >= date) {\n        if (step < 0) while (++step <= 0) {\n          while (offseti(date, -1), !test(date)) {} // eslint-disable-line no-empty\n        } else while (--step >= 0) {\n          while (offseti(date, +1), !test(date)) {} // eslint-disable-line no-empty\n        }\n      }\n    });\n  };\n\n  if (count) {\n    interval.count = function(start, end) {\n      t0.setTime(+start), t1.setTime(+end);\n      floori(t0), floori(t1);\n      return Math.floor(count(t0, t1));\n    };\n\n    interval.every = function(step) {\n      step = Math.floor(step);\n      return !isFinite(step) || !(step > 0) ? null\n          : !(step > 1) ? interval\n          : interval.filter(field\n              ? function(d) { return field(d) % step === 0; }\n              : function(d) { return interval.count(0, d) % step === 0; });\n    };\n  }\n\n  return interval;\n}\n","import interval from \"./interval\";\n\nvar millisecond = interval(function() {\n  // noop\n}, function(date, step) {\n  date.setTime(+date + step);\n}, function(start, end) {\n  return end - start;\n});\n\n// An optimized implementation for this simple case.\nmillisecond.every = function(k) {\n  k = Math.floor(k);\n  if (!isFinite(k) || !(k > 0)) return null;\n  if (!(k > 1)) return millisecond;\n  return interval(function(date) {\n    date.setTime(Math.floor(date / k) * k);\n  }, function(date, step) {\n    date.setTime(+date + step * k);\n  }, function(start, end) {\n    return (end - start) / k;\n  });\n};\n\nexport default millisecond;\nexport var milliseconds = millisecond.range;\n","export var durationSecond = 1e3;\nexport var durationMinute = 6e4;\nexport var durationHour = 36e5;\nexport var durationDay = 864e5;\nexport var durationWeek = 6048e5;\n","import interval from \"./interval\";\nimport {durationSecond} from \"./duration\";\n\nvar second = interval(function(date) {\n  date.setTime(Math.floor(date / durationSecond) * durationSecond);\n}, function(date, step) {\n  date.setTime(+date + step * durationSecond);\n}, function(start, end) {\n  return (end - start) / durationSecond;\n}, function(date) {\n  return date.getUTCSeconds();\n});\n\nexport default second;\nexport var seconds = second.range;\n","import interval from \"./interval\";\nimport {durationMinute} from \"./duration\";\n\nvar minute = interval(function(date) {\n  date.setTime(Math.floor(date / durationMinute) * durationMinute);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute);\n}, function(start, end) {\n  return (end - start) / durationMinute;\n}, function(date) {\n  return date.getMinutes();\n});\n\nexport default minute;\nexport var minutes = minute.range;\n","import interval from \"./interval\";\nimport {durationHour, durationMinute} from \"./duration\";\n\nvar hour = interval(function(date) {\n  var offset = date.getTimezoneOffset() * durationMinute % durationHour;\n  if (offset < 0) offset += durationHour;\n  date.setTime(Math.floor((+date - offset) / durationHour) * durationHour + offset);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour);\n}, function(start, end) {\n  return (end - start) / durationHour;\n}, function(date) {\n  return date.getHours();\n});\n\nexport default hour;\nexport var hours = hour.range;\n","import interval from \"./interval\";\nimport {durationDay, durationMinute} from \"./duration\";\n\nvar day = interval(function(date) {\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setDate(date.getDate() + step);\n}, function(start, end) {\n  return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationDay;\n}, function(date) {\n  return date.getDate() - 1;\n});\n\nexport default day;\nexport var days = day.range;\n","import interval from \"./interval\";\nimport {durationMinute, durationWeek} from \"./duration\";\n\nfunction weekday(i) {\n  return interval(function(date) {\n    date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setDate(date.getDate() + step * 7);\n  }, function(start, end) {\n    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationWeek;\n  });\n}\n\nexport var sunday = weekday(0);\nexport var monday = weekday(1);\nexport var tuesday = weekday(2);\nexport var wednesday = weekday(3);\nexport var thursday = weekday(4);\nexport var friday = weekday(5);\nexport var saturday = weekday(6);\n\nexport var sundays = sunday.range;\nexport var mondays = monday.range;\nexport var tuesdays = tuesday.range;\nexport var wednesdays = wednesday.range;\nexport var thursdays = thursday.range;\nexport var fridays = friday.range;\nexport var saturdays = saturday.range;\n","import interval from \"./interval\";\n\nvar month = interval(function(date) {\n  date.setDate(1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setMonth(date.getMonth() + step);\n}, function(start, end) {\n  return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;\n}, function(date) {\n  return date.getMonth();\n});\n\nexport default month;\nexport var months = month.range;\n","import interval from \"./interval\";\n\nvar year = interval(function(date) {\n  date.setMonth(0, 1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setFullYear(date.getFullYear() + step);\n}, function(start, end) {\n  return end.getFullYear() - start.getFullYear();\n}, function(date) {\n  return date.getFullYear();\n});\n\n// An optimized implementation for this simple case.\nyear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : interval(function(date) {\n    date.setFullYear(Math.floor(date.getFullYear() / k) * k);\n    date.setMonth(0, 1);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setFullYear(date.getFullYear() + step * k);\n  });\n};\n\nexport default year;\nexport var years = year.range;\n","import interval from \"./interval\";\nimport {durationMinute} from \"./duration\";\n\nvar utcMinute = interval(function(date) {\n  date.setUTCSeconds(0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute);\n}, function(start, end) {\n  return (end - start) / durationMinute;\n}, function(date) {\n  return date.getUTCMinutes();\n});\n\nexport default utcMinute;\nexport var utcMinutes = utcMinute.range;\n","import interval from \"./interval\";\nimport {durationHour} from \"./duration\";\n\nvar utcHour = interval(function(date) {\n  date.setUTCMinutes(0, 0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour);\n}, function(start, end) {\n  return (end - start) / durationHour;\n}, function(date) {\n  return date.getUTCHours();\n});\n\nexport default utcHour;\nexport var utcHours = utcHour.range;\n","import interval from \"./interval\";\nimport {durationDay} from \"./duration\";\n\nvar utcDay = interval(function(date) {\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCDate(date.getUTCDate() + step);\n}, function(start, end) {\n  return (end - start) / durationDay;\n}, function(date) {\n  return date.getUTCDate() - 1;\n});\n\nexport default utcDay;\nexport var utcDays = utcDay.range;\n","import interval from \"./interval\";\nimport {durationWeek} from \"./duration\";\n\nfunction utcWeekday(i) {\n  return interval(function(date) {\n    date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCDate(date.getUTCDate() + step * 7);\n  }, function(start, end) {\n    return (end - start) / durationWeek;\n  });\n}\n\nexport var utcSunday = utcWeekday(0);\nexport var utcMonday = utcWeekday(1);\nexport var utcTuesday = utcWeekday(2);\nexport var utcWednesday = utcWeekday(3);\nexport var utcThursday = utcWeekday(4);\nexport var utcFriday = utcWeekday(5);\nexport var utcSaturday = utcWeekday(6);\n\nexport var utcSundays = utcSunday.range;\nexport var utcMondays = utcMonday.range;\nexport var utcTuesdays = utcTuesday.range;\nexport var utcWednesdays = utcWednesday.range;\nexport var utcThursdays = utcThursday.range;\nexport var utcFridays = utcFriday.range;\nexport var utcSaturdays = utcSaturday.range;\n","import interval from \"./interval\";\n\nvar utcMonth = interval(function(date) {\n  date.setUTCDate(1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCMonth(date.getUTCMonth() + step);\n}, function(start, end) {\n  return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;\n}, function(date) {\n  return date.getUTCMonth();\n});\n\nexport default utcMonth;\nexport var utcMonths = utcMonth.range;\n","import interval from \"./interval\";\n\nvar utcYear = interval(function(date) {\n  date.setUTCMonth(0, 1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCFullYear(date.getUTCFullYear() + step);\n}, function(start, end) {\n  return end.getUTCFullYear() - start.getUTCFullYear();\n}, function(date) {\n  return date.getUTCFullYear();\n});\n\n// An optimized implementation for this simple case.\nutcYear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : interval(function(date) {\n    date.setUTCFullYear(Math.floor(date.getUTCFullYear() / k) * k);\n    date.setUTCMonth(0, 1);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCFullYear(date.getUTCFullYear() + step * k);\n  });\n};\n\nexport default utcYear;\nexport var utcYears = utcYear.range;\n","import {\n  timeDay,\n  timeSunday,\n  timeMonday,\n  timeThursday,\n  timeYear,\n  utcDay,\n  utcSunday,\n  utcMonday,\n  utcThursday,\n  utcYear\n} from \"d3-time\";\n\nfunction localDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(-1, d.m, d.d, d.H, d.M, d.S, d.L);\n    date.setFullYear(d.y);\n    return date;\n  }\n  return new Date(d.y, d.m, d.d, d.H, d.M, d.S, d.L);\n}\n\nfunction utcDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(Date.UTC(-1, d.m, d.d, d.H, d.M, d.S, d.L));\n    date.setUTCFullYear(d.y);\n    return date;\n  }\n  return new Date(Date.UTC(d.y, d.m, d.d, d.H, d.M, d.S, d.L));\n}\n\nfunction newYear(y) {\n  return {y: y, m: 0, d: 1, H: 0, M: 0, S: 0, L: 0};\n}\n\nexport default function formatLocale(locale) {\n  var locale_dateTime = locale.dateTime,\n      locale_date = locale.date,\n      locale_time = locale.time,\n      locale_periods = locale.periods,\n      locale_weekdays = locale.days,\n      locale_shortWeekdays = locale.shortDays,\n      locale_months = locale.months,\n      locale_shortMonths = locale.shortMonths;\n\n  var periodRe = formatRe(locale_periods),\n      periodLookup = formatLookup(locale_periods),\n      weekdayRe = formatRe(locale_weekdays),\n      weekdayLookup = formatLookup(locale_weekdays),\n      shortWeekdayRe = formatRe(locale_shortWeekdays),\n      shortWeekdayLookup = formatLookup(locale_shortWeekdays),\n      monthRe = formatRe(locale_months),\n      monthLookup = formatLookup(locale_months),\n      shortMonthRe = formatRe(locale_shortMonths),\n      shortMonthLookup = formatLookup(locale_shortMonths);\n\n  var formats = {\n    \"a\": formatShortWeekday,\n    \"A\": formatWeekday,\n    \"b\": formatShortMonth,\n    \"B\": formatMonth,\n    \"c\": null,\n    \"d\": formatDayOfMonth,\n    \"e\": formatDayOfMonth,\n    \"f\": formatMicroseconds,\n    \"H\": formatHour24,\n    \"I\": formatHour12,\n    \"j\": formatDayOfYear,\n    \"L\": formatMilliseconds,\n    \"m\": formatMonthNumber,\n    \"M\": formatMinutes,\n    \"p\": formatPeriod,\n    \"Q\": formatUnixTimestamp,\n    \"s\": formatUnixTimestampSeconds,\n    \"S\": formatSeconds,\n    \"u\": formatWeekdayNumberMonday,\n    \"U\": formatWeekNumberSunday,\n    \"V\": formatWeekNumberISO,\n    \"w\": formatWeekdayNumberSunday,\n    \"W\": formatWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatYear,\n    \"Y\": formatFullYear,\n    \"Z\": formatZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var utcFormats = {\n    \"a\": formatUTCShortWeekday,\n    \"A\": formatUTCWeekday,\n    \"b\": formatUTCShortMonth,\n    \"B\": formatUTCMonth,\n    \"c\": null,\n    \"d\": formatUTCDayOfMonth,\n    \"e\": formatUTCDayOfMonth,\n    \"f\": formatUTCMicroseconds,\n    \"H\": formatUTCHour24,\n    \"I\": formatUTCHour12,\n    \"j\": formatUTCDayOfYear,\n    \"L\": formatUTCMilliseconds,\n    \"m\": formatUTCMonthNumber,\n    \"M\": formatUTCMinutes,\n    \"p\": formatUTCPeriod,\n    \"Q\": formatUnixTimestamp,\n    \"s\": formatUnixTimestampSeconds,\n    \"S\": formatUTCSeconds,\n    \"u\": formatUTCWeekdayNumberMonday,\n    \"U\": formatUTCWeekNumberSunday,\n    \"V\": formatUTCWeekNumberISO,\n    \"w\": formatUTCWeekdayNumberSunday,\n    \"W\": formatUTCWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatUTCYear,\n    \"Y\": formatUTCFullYear,\n    \"Z\": formatUTCZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var parses = {\n    \"a\": parseShortWeekday,\n    \"A\": parseWeekday,\n    \"b\": parseShortMonth,\n    \"B\": parseMonth,\n    \"c\": parseLocaleDateTime,\n    \"d\": parseDayOfMonth,\n    \"e\": parseDayOfMonth,\n    \"f\": parseMicroseconds,\n    \"H\": parseHour24,\n    \"I\": parseHour24,\n    \"j\": parseDayOfYear,\n    \"L\": parseMilliseconds,\n    \"m\": parseMonthNumber,\n    \"M\": parseMinutes,\n    \"p\": parsePeriod,\n    \"Q\": parseUnixTimestamp,\n    \"s\": parseUnixTimestampSeconds,\n    \"S\": parseSeconds,\n    \"u\": parseWeekdayNumberMonday,\n    \"U\": parseWeekNumberSunday,\n    \"V\": parseWeekNumberISO,\n    \"w\": parseWeekdayNumberSunday,\n    \"W\": parseWeekNumberMonday,\n    \"x\": parseLocaleDate,\n    \"X\": parseLocaleTime,\n    \"y\": parseYear,\n    \"Y\": parseFullYear,\n    \"Z\": parseZone,\n    \"%\": parseLiteralPercent\n  };\n\n  // These recursive directive definitions must be deferred.\n  formats.x = newFormat(locale_date, formats);\n  formats.X = newFormat(locale_time, formats);\n  formats.c = newFormat(locale_dateTime, formats);\n  utcFormats.x = newFormat(locale_date, utcFormats);\n  utcFormats.X = newFormat(locale_time, utcFormats);\n  utcFormats.c = newFormat(locale_dateTime, utcFormats);\n\n  function newFormat(specifier, formats) {\n    return function(date) {\n      var string = [],\n          i = -1,\n          j = 0,\n          n = specifier.length,\n          c,\n          pad,\n          format;\n\n      if (!(date instanceof Date)) date = new Date(+date);\n\n      while (++i < n) {\n        if (specifier.charCodeAt(i) === 37) {\n          string.push(specifier.slice(j, i));\n          if ((pad = pads[c = specifier.charAt(++i)]) != null) c = specifier.charAt(++i);\n          else pad = c === \"e\" ? \" \" : \"0\";\n          if (format = formats[c]) c = format(date, pad);\n          string.push(c);\n          j = i + 1;\n        }\n      }\n\n      string.push(specifier.slice(j, i));\n      return string.join(\"\");\n    };\n  }\n\n  function newParse(specifier, newDate) {\n    return function(string) {\n      var d = newYear(1900),\n          i = parseSpecifier(d, specifier, string += \"\", 0),\n          week, day;\n      if (i != string.length) return null;\n\n      // If a UNIX timestamp is specified, return it.\n      if (\"Q\" in d) return new Date(d.Q);\n\n      // The am-pm flag is 0 for AM, and 1 for PM.\n      if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n\n      // Convert day-of-week and week-of-year to day-of-year.\n      if (\"V\" in d) {\n        if (d.V < 1 || d.V > 53) return null;\n        if (!(\"w\" in d)) d.w = 1;\n        if (\"Z\" in d) {\n          week = utcDate(newYear(d.y)), day = week.getUTCDay();\n          week = day > 4 || day === 0 ? utcMonday.ceil(week) : utcMonday(week);\n          week = utcDay.offset(week, (d.V - 1) * 7);\n          d.y = week.getUTCFullYear();\n          d.m = week.getUTCMonth();\n          d.d = week.getUTCDate() + (d.w + 6) % 7;\n        } else {\n          week = newDate(newYear(d.y)), day = week.getDay();\n          week = day > 4 || day === 0 ? timeMonday.ceil(week) : timeMonday(week);\n          week = timeDay.offset(week, (d.V - 1) * 7);\n          d.y = week.getFullYear();\n          d.m = week.getMonth();\n          d.d = week.getDate() + (d.w + 6) % 7;\n        }\n      } else if (\"W\" in d || \"U\" in d) {\n        if (!(\"w\" in d)) d.w = \"u\" in d ? d.u % 7 : \"W\" in d ? 1 : 0;\n        day = \"Z\" in d ? utcDate(newYear(d.y)).getUTCDay() : newDate(newYear(d.y)).getDay();\n        d.m = 0;\n        d.d = \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (day + 5) % 7 : d.w + d.U * 7 - (day + 6) % 7;\n      }\n\n      // If a time zone is specified, all fields are interpreted as UTC and then\n      // offset according to the specified time zone.\n      if (\"Z\" in d) {\n        d.H += d.Z / 100 | 0;\n        d.M += d.Z % 100;\n        return utcDate(d);\n      }\n\n      // Otherwise, all fields are in local time.\n      return newDate(d);\n    };\n  }\n\n  function parseSpecifier(d, specifier, string, j) {\n    var i = 0,\n        n = specifier.length,\n        m = string.length,\n        c,\n        parse;\n\n    while (i < n) {\n      if (j >= m) return -1;\n      c = specifier.charCodeAt(i++);\n      if (c === 37) {\n        c = specifier.charAt(i++);\n        parse = parses[c in pads ? specifier.charAt(i++) : c];\n        if (!parse || ((j = parse(d, string, j)) < 0)) return -1;\n      } else if (c != string.charCodeAt(j++)) {\n        return -1;\n      }\n    }\n\n    return j;\n  }\n\n  function parsePeriod(d, string, i) {\n    var n = periodRe.exec(string.slice(i));\n    return n ? (d.p = periodLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortWeekday(d, string, i) {\n    var n = shortWeekdayRe.exec(string.slice(i));\n    return n ? (d.w = shortWeekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseWeekday(d, string, i) {\n    var n = weekdayRe.exec(string.slice(i));\n    return n ? (d.w = weekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortMonth(d, string, i) {\n    var n = shortMonthRe.exec(string.slice(i));\n    return n ? (d.m = shortMonthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseMonth(d, string, i) {\n    var n = monthRe.exec(string.slice(i));\n    return n ? (d.m = monthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseLocaleDateTime(d, string, i) {\n    return parseSpecifier(d, locale_dateTime, string, i);\n  }\n\n  function parseLocaleDate(d, string, i) {\n    return parseSpecifier(d, locale_date, string, i);\n  }\n\n  function parseLocaleTime(d, string, i) {\n    return parseSpecifier(d, locale_time, string, i);\n  }\n\n  function formatShortWeekday(d) {\n    return locale_shortWeekdays[d.getDay()];\n  }\n\n  function formatWeekday(d) {\n    return locale_weekdays[d.getDay()];\n  }\n\n  function formatShortMonth(d) {\n    return locale_shortMonths[d.getMonth()];\n  }\n\n  function formatMonth(d) {\n    return locale_months[d.getMonth()];\n  }\n\n  function formatPeriod(d) {\n    return locale_periods[+(d.getHours() >= 12)];\n  }\n\n  function formatUTCShortWeekday(d) {\n    return locale_shortWeekdays[d.getUTCDay()];\n  }\n\n  function formatUTCWeekday(d) {\n    return locale_weekdays[d.getUTCDay()];\n  }\n\n  function formatUTCShortMonth(d) {\n    return locale_shortMonths[d.getUTCMonth()];\n  }\n\n  function formatUTCMonth(d) {\n    return locale_months[d.getUTCMonth()];\n  }\n\n  function formatUTCPeriod(d) {\n    return locale_periods[+(d.getUTCHours() >= 12)];\n  }\n\n  return {\n    format: function(specifier) {\n      var f = newFormat(specifier += \"\", formats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    parse: function(specifier) {\n      var p = newParse(specifier += \"\", localDate);\n      p.toString = function() { return specifier; };\n      return p;\n    },\n    utcFormat: function(specifier) {\n      var f = newFormat(specifier += \"\", utcFormats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    utcParse: function(specifier) {\n      var p = newParse(specifier, utcDate);\n      p.toString = function() { return specifier; };\n      return p;\n    }\n  };\n}\n\nvar pads = {\"-\": \"\", \"_\": \" \", \"0\": \"0\"},\n    numberRe = /^\\s*\\d+/, // note: ignores next directive\n    percentRe = /^%/,\n    requoteRe = /[\\\\^$*+?|[\\]().{}]/g;\n\nfunction pad(value, fill, width) {\n  var sign = value < 0 ? \"-\" : \"\",\n      string = (sign ? -value : value) + \"\",\n      length = string.length;\n  return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n}\n\nfunction requote(s) {\n  return s.replace(requoteRe, \"\\\\$&\");\n}\n\nfunction formatRe(names) {\n  return new RegExp(\"^(?:\" + names.map(requote).join(\"|\") + \")\", \"i\");\n}\n\nfunction formatLookup(names) {\n  var map = {}, i = -1, n = names.length;\n  while (++i < n) map[names[i].toLowerCase()] = i;\n  return map;\n}\n\nfunction parseWeekdayNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.w = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekdayNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.u = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.U = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberISO(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.V = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.W = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseFullYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 4));\n  return n ? (d.y = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.y = +n[0] + (+n[0] > 68 ? 1900 : 2000), i + n[0].length) : -1;\n}\n\nfunction parseZone(d, string, i) {\n  var n = /^(Z)|([+-]\\d\\d)(?::?(\\d\\d))?/.exec(string.slice(i, i + 6));\n  return n ? (d.Z = n[1] ? 0 : -(n[2] + (n[3] || \"00\")), i + n[0].length) : -1;\n}\n\nfunction parseMonthNumber(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.m = n[0] - 1, i + n[0].length) : -1;\n}\n\nfunction parseDayOfMonth(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseDayOfYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.m = 0, d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseHour24(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.H = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMinutes(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.M = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.S = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMilliseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.L = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMicroseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 6));\n  return n ? (d.L = Math.floor(n[0] / 1000), i + n[0].length) : -1;\n}\n\nfunction parseLiteralPercent(d, string, i) {\n  var n = percentRe.exec(string.slice(i, i + 1));\n  return n ? i + n[0].length : -1;\n}\n\nfunction parseUnixTimestamp(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.Q = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseUnixTimestampSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.Q = (+n[0]) * 1000, i + n[0].length) : -1;\n}\n\nfunction formatDayOfMonth(d, p) {\n  return pad(d.getDate(), p, 2);\n}\n\nfunction formatHour24(d, p) {\n  return pad(d.getHours(), p, 2);\n}\n\nfunction formatHour12(d, p) {\n  return pad(d.getHours() % 12 || 12, p, 2);\n}\n\nfunction formatDayOfYear(d, p) {\n  return pad(1 + timeDay.count(timeYear(d), d), p, 3);\n}\n\nfunction formatMilliseconds(d, p) {\n  return pad(d.getMilliseconds(), p, 3);\n}\n\nfunction formatMicroseconds(d, p) {\n  return formatMilliseconds(d, p) + \"000\";\n}\n\nfunction formatMonthNumber(d, p) {\n  return pad(d.getMonth() + 1, p, 2);\n}\n\nfunction formatMinutes(d, p) {\n  return pad(d.getMinutes(), p, 2);\n}\n\nfunction formatSeconds(d, p) {\n  return pad(d.getSeconds(), p, 2);\n}\n\nfunction formatWeekdayNumberMonday(d) {\n  var day = d.getDay();\n  return day === 0 ? 7 : day;\n}\n\nfunction formatWeekNumberSunday(d, p) {\n  return pad(timeSunday.count(timeYear(d), d), p, 2);\n}\n\nfunction formatWeekNumberISO(d, p) {\n  var day = d.getDay();\n  d = (day >= 4 || day === 0) ? timeThursday(d) : timeThursday.ceil(d);\n  return pad(timeThursday.count(timeYear(d), d) + (timeYear(d).getDay() === 4), p, 2);\n}\n\nfunction formatWeekdayNumberSunday(d) {\n  return d.getDay();\n}\n\nfunction formatWeekNumberMonday(d, p) {\n  return pad(timeMonday.count(timeYear(d), d), p, 2);\n}\n\nfunction formatYear(d, p) {\n  return pad(d.getFullYear() % 100, p, 2);\n}\n\nfunction formatFullYear(d, p) {\n  return pad(d.getFullYear() % 10000, p, 4);\n}\n\nfunction formatZone(d) {\n  var z = d.getTimezoneOffset();\n  return (z > 0 ? \"-\" : (z *= -1, \"+\"))\n      + pad(z / 60 | 0, \"0\", 2)\n      + pad(z % 60, \"0\", 2);\n}\n\nfunction formatUTCDayOfMonth(d, p) {\n  return pad(d.getUTCDate(), p, 2);\n}\n\nfunction formatUTCHour24(d, p) {\n  return pad(d.getUTCHours(), p, 2);\n}\n\nfunction formatUTCHour12(d, p) {\n  return pad(d.getUTCHours() % 12 || 12, p, 2);\n}\n\nfunction formatUTCDayOfYear(d, p) {\n  return pad(1 + utcDay.count(utcYear(d), d), p, 3);\n}\n\nfunction formatUTCMilliseconds(d, p) {\n  return pad(d.getUTCMilliseconds(), p, 3);\n}\n\nfunction formatUTCMicroseconds(d, p) {\n  return formatUTCMilliseconds(d, p) + \"000\";\n}\n\nfunction formatUTCMonthNumber(d, p) {\n  return pad(d.getUTCMonth() + 1, p, 2);\n}\n\nfunction formatUTCMinutes(d, p) {\n  return pad(d.getUTCMinutes(), p, 2);\n}\n\nfunction formatUTCSeconds(d, p) {\n  return pad(d.getUTCSeconds(), p, 2);\n}\n\nfunction formatUTCWeekdayNumberMonday(d) {\n  var dow = d.getUTCDay();\n  return dow === 0 ? 7 : dow;\n}\n\nfunction formatUTCWeekNumberSunday(d, p) {\n  return pad(utcSunday.count(utcYear(d), d), p, 2);\n}\n\nfunction formatUTCWeekNumberISO(d, p) {\n  var day = d.getUTCDay();\n  d = (day >= 4 || day === 0) ? utcThursday(d) : utcThursday.ceil(d);\n  return pad(utcThursday.count(utcYear(d), d) + (utcYear(d).getUTCDay() === 4), p, 2);\n}\n\nfunction formatUTCWeekdayNumberSunday(d) {\n  return d.getUTCDay();\n}\n\nfunction formatUTCWeekNumberMonday(d, p) {\n  return pad(utcMonday.count(utcYear(d), d), p, 2);\n}\n\nfunction formatUTCYear(d, p) {\n  return pad(d.getUTCFullYear() % 100, p, 2);\n}\n\nfunction formatUTCFullYear(d, p) {\n  return pad(d.getUTCFullYear() % 10000, p, 4);\n}\n\nfunction formatUTCZone() {\n  return \"+0000\";\n}\n\nfunction formatLiteralPercent() {\n  return \"%\";\n}\n\nfunction formatUnixTimestamp(d) {\n  return +d;\n}\n\nfunction formatUnixTimestampSeconds(d) {\n  return Math.floor(+d / 1000);\n}\n","import formatLocale from \"./locale\";\n\nvar locale;\nexport var timeFormat;\nexport var timeParse;\nexport var utcFormat;\nexport var utcParse;\n\ndefaultLocale({\n  dateTime: \"%x, %X\",\n  date: \"%-m/%-d/%Y\",\n  time: \"%-I:%M:%S %p\",\n  periods: [\"AM\", \"PM\"],\n  days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n  shortDays: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n  months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n  shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n});\n\nexport default function defaultLocale(definition) {\n  locale = formatLocale(definition);\n  timeFormat = locale.format;\n  timeParse = locale.parse;\n  utcFormat = locale.utcFormat;\n  utcParse = locale.utcParse;\n  return locale;\n}\n","import {utcFormat} from \"./defaultLocale\";\n\nexport var isoSpecifier = \"%Y-%m-%dT%H:%M:%S.%LZ\";\n\nfunction formatIsoNative(date) {\n  return date.toISOString();\n}\n\nvar formatIso = Date.prototype.toISOString\n    ? formatIsoNative\n    : utcFormat(isoSpecifier);\n\nexport default formatIso;\n","import {isoSpecifier} from \"./isoFormat\";\nimport {utcParse} from \"./defaultLocale\";\n\nfunction parseIsoNative(string) {\n  var date = new Date(string);\n  return isNaN(date) ? null : date;\n}\n\nvar parseIso = +new Date(\"2000-01-01T00:00:00.000Z\")\n    ? parseIsoNative\n    : utcParse(isoSpecifier);\n\nexport default parseIso;\n","import {bisector, tickStep} from \"d3-array\";\nimport {interpolateNumber as reinterpolate} from \"d3-interpolate\";\nimport {timeYear, timeMonth, timeWeek, timeDay, timeHour, timeMinute, timeSecond, timeMillisecond} from \"d3-time\";\nimport {timeFormat} from \"d3-time-format\";\nimport {map} from \"./array\";\nimport {default as continuous, copy, deinterpolateLinear as deinterpolate} from \"./continuous\";\nimport nice from \"./nice\";\n\nvar durationSecond = 1000,\n    durationMinute = durationSecond * 60,\n    durationHour = durationMinute * 60,\n    durationDay = durationHour * 24,\n    durationWeek = durationDay * 7,\n    durationMonth = durationDay * 30,\n    durationYear = durationDay * 365;\n\nfunction date(t) {\n  return new Date(t);\n}\n\nfunction number(t) {\n  return t instanceof Date ? +t : +new Date(+t);\n}\n\nexport function calendar(year, month, week, day, hour, minute, second, millisecond, format) {\n  var scale = continuous(deinterpolate, reinterpolate),\n      invert = scale.invert,\n      domain = scale.domain;\n\n  var formatMillisecond = format(\".%L\"),\n      formatSecond = format(\":%S\"),\n      formatMinute = format(\"%I:%M\"),\n      formatHour = format(\"%I %p\"),\n      formatDay = format(\"%a %d\"),\n      formatWeek = format(\"%b %d\"),\n      formatMonth = format(\"%B\"),\n      formatYear = format(\"%Y\");\n\n  var tickIntervals = [\n    [second,  1,      durationSecond],\n    [second,  5,  5 * durationSecond],\n    [second, 15, 15 * durationSecond],\n    [second, 30, 30 * durationSecond],\n    [minute,  1,      durationMinute],\n    [minute,  5,  5 * durationMinute],\n    [minute, 15, 15 * durationMinute],\n    [minute, 30, 30 * durationMinute],\n    [  hour,  1,      durationHour  ],\n    [  hour,  3,  3 * durationHour  ],\n    [  hour,  6,  6 * durationHour  ],\n    [  hour, 12, 12 * durationHour  ],\n    [   day,  1,      durationDay   ],\n    [   day,  2,  2 * durationDay   ],\n    [  week,  1,      durationWeek  ],\n    [ month,  1,      durationMonth ],\n    [ month,  3,  3 * durationMonth ],\n    [  year,  1,      durationYear  ]\n  ];\n\n  function tickFormat(date) {\n    return (second(date) < date ? formatMillisecond\n        : minute(date) < date ? formatSecond\n        : hour(date) < date ? formatMinute\n        : day(date) < date ? formatHour\n        : month(date) < date ? (week(date) < date ? formatDay : formatWeek)\n        : year(date) < date ? formatMonth\n        : formatYear)(date);\n  }\n\n  function tickInterval(interval, start, stop, step) {\n    if (interval == null) interval = 10;\n\n    // If a desired tick count is specified, pick a reasonable tick interval\n    // based on the extent of the domain and a rough estimate of tick size.\n    // Otherwise, assume interval is already a time interval and use it.\n    if (typeof interval === \"number\") {\n      var target = Math.abs(stop - start) / interval,\n          i = bisector(function(i) { return i[2]; }).right(tickIntervals, target);\n      if (i === tickIntervals.length) {\n        step = tickStep(start / durationYear, stop / durationYear, interval);\n        interval = year;\n      } else if (i) {\n        i = tickIntervals[target / tickIntervals[i - 1][2] < tickIntervals[i][2] / target ? i - 1 : i];\n        step = i[1];\n        interval = i[0];\n      } else {\n        step = Math.max(tickStep(start, stop, interval), 1);\n        interval = millisecond;\n      }\n    }\n\n    return step == null ? interval : interval.every(step);\n  }\n\n  scale.invert = function(y) {\n    return new Date(invert(y));\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? domain(map.call(_, number)) : domain().map(date);\n  };\n\n  scale.ticks = function(interval, step) {\n    var d = domain(),\n        t0 = d[0],\n        t1 = d[d.length - 1],\n        r = t1 < t0,\n        t;\n    if (r) t = t0, t0 = t1, t1 = t;\n    t = tickInterval(interval, t0, t1, step);\n    t = t ? t.range(t0, t1 + 1) : []; // inclusive stop\n    return r ? t.reverse() : t;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return specifier == null ? tickFormat : format(specifier);\n  };\n\n  scale.nice = function(interval, step) {\n    var d = domain();\n    return (interval = tickInterval(interval, d[0], d[d.length - 1], step))\n        ? domain(nice(d, interval))\n        : scale;\n  };\n\n  scale.copy = function() {\n    return copy(scale, calendar(year, month, week, day, hour, minute, second, millisecond, format));\n  };\n\n  return scale;\n}\n\nexport default function() {\n  return calendar(timeYear, timeMonth, timeWeek, timeDay, timeHour, timeMinute, timeSecond, timeMillisecond, timeFormat).domain([new Date(2000, 0, 1), new Date(2000, 0, 2)]);\n}\n","import {calendar} from \"./time\";\nimport {utcFormat} from \"d3-time-format\";\nimport {utcYear, utcMonth, utcWeek, utcDay, utcHour, utcMinute, utcSecond, utcMillisecond} from \"d3-time\";\n\nexport default function() {\n  return calendar(utcYear, utcMonth, utcWeek, utcDay, utcHour, utcMinute, utcSecond, utcMillisecond, utcFormat).domain([Date.UTC(2000, 0, 1), Date.UTC(2000, 0, 2)]);\n}\n","import {linearish} from \"./linear\";\n\nexport default function sequential(interpolator) {\n  var x0 = 0,\n      x1 = 1,\n      k10 = 1,\n      clamp = false;\n\n  function scale(x) {\n    var t = (x - x0) * k10;\n    return interpolator(clamp ? Math.max(0, Math.min(1, t)) : t);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], k10 = x0 === x1 ? 0 : 1 / (x1 - x0), scale) : [x0, x1];\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, scale) : clamp;\n  };\n\n  scale.interpolator = function(_) {\n    return arguments.length ? (interpolator = _, scale) : interpolator;\n  };\n\n  scale.copy = function() {\n    return sequential(interpolator).domain([x0, x1]).clamp(clamp);\n  };\n\n  return linearish(scale);\n}\n","import {linearish} from \"./linear\";\n\nexport default function diverging(interpolator) {\n  var x0 = 0,\n      x1 = 0.5,\n      x2 = 1,\n      k10 = 1,\n      k21 = 1,\n      clamp = false;\n\n  function scale(x) {\n    var t = 0.5 + ((x = +x) - x1) * (x < x1 ? k10 : k21);\n    return interpolator(clamp ? Math.max(0, Math.min(1, t)) : t);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], x2 = +_[2], k10 = x0 === x1 ? 0 : 0.5 / (x1 - x0), k21 = x1 === x2 ? 0 : 0.5 / (x2 - x1), scale) : [x0, x1, x2];\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, scale) : clamp;\n  };\n\n  scale.interpolator = function(_) {\n    return arguments.length ? (interpolator = _, scale) : interpolator;\n  };\n\n  scale.copy = function() {\n    return diverging(interpolator).domain([x0, x1, x2]).clamp(clamp);\n  };\n\n  return linearish(scale);\n}\n","export default function(specifier) {\n  var n = specifier.length / 6 | 0, colors = new Array(n), i = 0;\n  while (i < n) colors[i] = \"#\" + specifier.slice(i * 6, ++i * 6);\n  return colors;\n}\n","import colors from \"../colors\";\n\nexport default colors(\"1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf\");\n","import colors from \"../colors\";\n\nexport default colors(\"7fc97fbeaed4fdc086ffff99386cb0f0027fbf5b17666666\");\n","import colors from \"../colors\";\n\nexport default colors(\"1b9e77d95f027570b3e7298a66a61ee6ab02a6761d666666\");\n","import colors from \"../colors\";\n\nexport default colors(\"a6cee31f78b4b2df8a33a02cfb9a99e31a1cfdbf6fff7f00cab2d66a3d9affff99b15928\");\n","import colors from \"../colors\";\n\nexport default colors(\"fbb4aeb3cde3ccebc5decbe4fed9a6ffffcce5d8bdfddaecf2f2f2\");\n","import colors from \"../colors\";\n\nexport default colors(\"b3e2cdfdcdaccbd5e8f4cae4e6f5c9fff2aef1e2cccccccc\");\n","import colors from \"../colors\";\n\nexport default colors(\"e41a1c377eb84daf4a984ea3ff7f00ffff33a65628f781bf999999\");\n","import colors from \"../colors\";\n\nexport default colors(\"66c2a5fc8d628da0cbe78ac3a6d854ffd92fe5c494b3b3b3\");\n","import colors from \"../colors\";\n\nexport default colors(\"8dd3c7ffffb3bebadafb807280b1d3fdb462b3de69fccde5d9d9d9bc80bdccebc5ffed6f\");\n","import {interpolateRgbBasis} from \"d3-interpolate\";\n\nexport default function(scheme) {\n  return interpolateRgbBasis(scheme[scheme.length - 1]);\n}\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"d8b365f5f5f55ab4ac\",\n  \"a6611adfc27d80cdc1018571\",\n  \"a6611adfc27df5f5f580cdc1018571\",\n  \"8c510ad8b365f6e8c3c7eae55ab4ac01665e\",\n  \"8c510ad8b365f6e8c3f5f5f5c7eae55ab4ac01665e\",\n  \"8c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e\",\n  \"8c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e\",\n  \"5430058c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e003c30\",\n  \"5430058c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e003c30\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"af8dc3f7f7f77fbf7b\",\n  \"7b3294c2a5cfa6dba0008837\",\n  \"7b3294c2a5cff7f7f7a6dba0008837\",\n  \"762a83af8dc3e7d4e8d9f0d37fbf7b1b7837\",\n  \"762a83af8dc3e7d4e8f7f7f7d9f0d37fbf7b1b7837\",\n  \"762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b7837\",\n  \"762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b7837\",\n  \"40004b762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b783700441b\",\n  \"40004b762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b783700441b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e9a3c9f7f7f7a1d76a\",\n  \"d01c8bf1b6dab8e1864dac26\",\n  \"d01c8bf1b6daf7f7f7b8e1864dac26\",\n  \"c51b7de9a3c9fde0efe6f5d0a1d76a4d9221\",\n  \"c51b7de9a3c9fde0eff7f7f7e6f5d0a1d76a4d9221\",\n  \"c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221\",\n  \"c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221\",\n  \"8e0152c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221276419\",\n  \"8e0152c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221276419\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"998ec3f7f7f7f1a340\",\n  \"5e3c99b2abd2fdb863e66101\",\n  \"5e3c99b2abd2f7f7f7fdb863e66101\",\n  \"542788998ec3d8daebfee0b6f1a340b35806\",\n  \"542788998ec3d8daebf7f7f7fee0b6f1a340b35806\",\n  \"5427888073acb2abd2d8daebfee0b6fdb863e08214b35806\",\n  \"5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b35806\",\n  \"2d004b5427888073acb2abd2d8daebfee0b6fdb863e08214b358067f3b08\",\n  \"2d004b5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b358067f3b08\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ef8a62f7f7f767a9cf\",\n  \"ca0020f4a58292c5de0571b0\",\n  \"ca0020f4a582f7f7f792c5de0571b0\",\n  \"b2182bef8a62fddbc7d1e5f067a9cf2166ac\",\n  \"b2182bef8a62fddbc7f7f7f7d1e5f067a9cf2166ac\",\n  \"b2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac\",\n  \"b2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac\",\n  \"67001fb2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac053061\",\n  \"67001fb2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac053061\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ef8a62ffffff999999\",\n  \"ca0020f4a582bababa404040\",\n  \"ca0020f4a582ffffffbababa404040\",\n  \"b2182bef8a62fddbc7e0e0e09999994d4d4d\",\n  \"b2182bef8a62fddbc7ffffffe0e0e09999994d4d4d\",\n  \"b2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d\",\n  \"b2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d\",\n  \"67001fb2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d1a1a1a\",\n  \"67001fb2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d1a1a1a\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fc8d59ffffbf91bfdb\",\n  \"d7191cfdae61abd9e92c7bb6\",\n  \"d7191cfdae61ffffbfabd9e92c7bb6\",\n  \"d73027fc8d59fee090e0f3f891bfdb4575b4\",\n  \"d73027fc8d59fee090ffffbfe0f3f891bfdb4575b4\",\n  \"d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4\",\n  \"d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4\",\n  \"a50026d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4313695\",\n  \"a50026d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4313695\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fc8d59ffffbf91cf60\",\n  \"d7191cfdae61a6d96a1a9641\",\n  \"d7191cfdae61ffffbfa6d96a1a9641\",\n  \"d73027fc8d59fee08bd9ef8b91cf601a9850\",\n  \"d73027fc8d59fee08bffffbfd9ef8b91cf601a9850\",\n  \"d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850\",\n  \"d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850\",\n  \"a50026d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850006837\",\n  \"a50026d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850006837\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fc8d59ffffbf99d594\",\n  \"d7191cfdae61abdda42b83ba\",\n  \"d7191cfdae61ffffbfabdda42b83ba\",\n  \"d53e4ffc8d59fee08be6f59899d5943288bd\",\n  \"d53e4ffc8d59fee08bffffbfe6f59899d5943288bd\",\n  \"d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd\",\n  \"d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd\",\n  \"9e0142d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd5e4fa2\",\n  \"9e0142d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd5e4fa2\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e5f5f999d8c92ca25f\",\n  \"edf8fbb2e2e266c2a4238b45\",\n  \"edf8fbb2e2e266c2a42ca25f006d2c\",\n  \"edf8fbccece699d8c966c2a42ca25f006d2c\",\n  \"edf8fbccece699d8c966c2a441ae76238b45005824\",\n  \"f7fcfde5f5f9ccece699d8c966c2a441ae76238b45005824\",\n  \"f7fcfde5f5f9ccece699d8c966c2a441ae76238b45006d2c00441b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e0ecf49ebcda8856a7\",\n  \"edf8fbb3cde38c96c688419d\",\n  \"edf8fbb3cde38c96c68856a7810f7c\",\n  \"edf8fbbfd3e69ebcda8c96c68856a7810f7c\",\n  \"edf8fbbfd3e69ebcda8c96c68c6bb188419d6e016b\",\n  \"f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d6e016b\",\n  \"f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d810f7c4d004b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e0f3dba8ddb543a2ca\",\n  \"f0f9e8bae4bc7bccc42b8cbe\",\n  \"f0f9e8bae4bc7bccc443a2ca0868ac\",\n  \"f0f9e8ccebc5a8ddb57bccc443a2ca0868ac\",\n  \"f0f9e8ccebc5a8ddb57bccc44eb3d32b8cbe08589e\",\n  \"f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe08589e\",\n  \"f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe0868ac084081\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fee8c8fdbb84e34a33\",\n  \"fef0d9fdcc8afc8d59d7301f\",\n  \"fef0d9fdcc8afc8d59e34a33b30000\",\n  \"fef0d9fdd49efdbb84fc8d59e34a33b30000\",\n  \"fef0d9fdd49efdbb84fc8d59ef6548d7301f990000\",\n  \"fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301f990000\",\n  \"fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301fb300007f0000\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ece2f0a6bddb1c9099\",\n  \"f6eff7bdc9e167a9cf02818a\",\n  \"f6eff7bdc9e167a9cf1c9099016c59\",\n  \"f6eff7d0d1e6a6bddb67a9cf1c9099016c59\",\n  \"f6eff7d0d1e6a6bddb67a9cf3690c002818a016450\",\n  \"fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016450\",\n  \"fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016c59014636\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ece7f2a6bddb2b8cbe\",\n  \"f1eef6bdc9e174a9cf0570b0\",\n  \"f1eef6bdc9e174a9cf2b8cbe045a8d\",\n  \"f1eef6d0d1e6a6bddb74a9cf2b8cbe045a8d\",\n  \"f1eef6d0d1e6a6bddb74a9cf3690c00570b0034e7b\",\n  \"fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0034e7b\",\n  \"fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0045a8d023858\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e7e1efc994c7dd1c77\",\n  \"f1eef6d7b5d8df65b0ce1256\",\n  \"f1eef6d7b5d8df65b0dd1c77980043\",\n  \"f1eef6d4b9dac994c7df65b0dd1c77980043\",\n  \"f1eef6d4b9dac994c7df65b0e7298ace125691003f\",\n  \"f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125691003f\",\n  \"f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125698004367001f\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fde0ddfa9fb5c51b8a\",\n  \"feebe2fbb4b9f768a1ae017e\",\n  \"feebe2fbb4b9f768a1c51b8a7a0177\",\n  \"feebe2fcc5c0fa9fb5f768a1c51b8a7a0177\",\n  \"feebe2fcc5c0fa9fb5f768a1dd3497ae017e7a0177\",\n  \"fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a0177\",\n  \"fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a017749006a\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"edf8b17fcdbb2c7fb8\",\n  \"ffffcca1dab441b6c4225ea8\",\n  \"ffffcca1dab441b6c42c7fb8253494\",\n  \"ffffccc7e9b47fcdbb41b6c42c7fb8253494\",\n  \"ffffccc7e9b47fcdbb41b6c41d91c0225ea80c2c84\",\n  \"ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea80c2c84\",\n  \"ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea8253494081d58\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"f7fcb9addd8e31a354\",\n  \"ffffccc2e69978c679238443\",\n  \"ffffccc2e69978c67931a354006837\",\n  \"ffffccd9f0a3addd8e78c67931a354006837\",\n  \"ffffccd9f0a3addd8e78c67941ab5d238443005a32\",\n  \"ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443005a32\",\n  \"ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443006837004529\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fff7bcfec44fd95f0e\",\n  \"ffffd4fed98efe9929cc4c02\",\n  \"ffffd4fed98efe9929d95f0e993404\",\n  \"ffffd4fee391fec44ffe9929d95f0e993404\",\n  \"ffffd4fee391fec44ffe9929ec7014cc4c028c2d04\",\n  \"ffffe5fff7bcfee391fec44ffe9929ec7014cc4c028c2d04\",\n  \"ffffe5fff7bcfee391fec44ffe9929ec7014cc4c02993404662506\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ffeda0feb24cf03b20\",\n  \"ffffb2fecc5cfd8d3ce31a1c\",\n  \"ffffb2fecc5cfd8d3cf03b20bd0026\",\n  \"ffffb2fed976feb24cfd8d3cf03b20bd0026\",\n  \"ffffb2fed976feb24cfd8d3cfc4e2ae31a1cb10026\",\n  \"ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cb10026\",\n  \"ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cbd0026800026\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"deebf79ecae13182bd\",\n  \"eff3ffbdd7e76baed62171b5\",\n  \"eff3ffbdd7e76baed63182bd08519c\",\n  \"eff3ffc6dbef9ecae16baed63182bd08519c\",\n  \"eff3ffc6dbef9ecae16baed64292c62171b5084594\",\n  \"f7fbffdeebf7c6dbef9ecae16baed64292c62171b5084594\",\n  \"f7fbffdeebf7c6dbef9ecae16baed64292c62171b508519c08306b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e5f5e0a1d99b31a354\",\n  \"edf8e9bae4b374c476238b45\",\n  \"edf8e9bae4b374c47631a354006d2c\",\n  \"edf8e9c7e9c0a1d99b74c47631a354006d2c\",\n  \"edf8e9c7e9c0a1d99b74c47641ab5d238b45005a32\",\n  \"f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45005a32\",\n  \"f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45006d2c00441b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"f0f0f0bdbdbd636363\",\n  \"f7f7f7cccccc969696525252\",\n  \"f7f7f7cccccc969696636363252525\",\n  \"f7f7f7d9d9d9bdbdbd969696636363252525\",\n  \"f7f7f7d9d9d9bdbdbd969696737373525252252525\",\n  \"fffffff0f0f0d9d9d9bdbdbd969696737373525252252525\",\n  \"fffffff0f0f0d9d9d9bdbdbd969696737373525252252525000000\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"efedf5bcbddc756bb1\",\n  \"f2f0f7cbc9e29e9ac86a51a3\",\n  \"f2f0f7cbc9e29e9ac8756bb154278f\",\n  \"f2f0f7dadaebbcbddc9e9ac8756bb154278f\",\n  \"f2f0f7dadaebbcbddc9e9ac8807dba6a51a34a1486\",\n  \"fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a34a1486\",\n  \"fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a354278f3f007d\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fee0d2fc9272de2d26\",\n  \"fee5d9fcae91fb6a4acb181d\",\n  \"fee5d9fcae91fb6a4ade2d26a50f15\",\n  \"fee5d9fcbba1fc9272fb6a4ade2d26a50f15\",\n  \"fee5d9fcbba1fc9272fb6a4aef3b2ccb181d99000d\",\n  \"fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181d99000d\",\n  \"fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181da50f1567000d\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fee6cefdae6be6550d\",\n  \"feeddefdbe85fd8d3cd94701\",\n  \"feeddefdbe85fd8d3ce6550da63603\",\n  \"feeddefdd0a2fdae6bfd8d3ce6550da63603\",\n  \"feeddefdd0a2fdae6bfd8d3cf16913d948018c2d04\",\n  \"fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d948018c2d04\",\n  \"fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d94801a636037f2704\"\n).map(colors);\n\nexport default ramp(scheme);\n","import {cubehelix} from \"d3-color\";\nimport {interpolateCubehelixLong} from \"d3-interpolate\";\n\nexport default interpolateCubehelixLong(cubehelix(300, 0.5, 0.0), cubehelix(-240, 0.5, 1.0));\n","import {cubehelix} from \"d3-color\";\nimport {interpolateCubehelixLong} from \"d3-interpolate\";\n\nexport var warm = interpolateCubehelixLong(cubehelix(-100, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nexport var cool = interpolateCubehelixLong(cubehelix(260, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nvar c = cubehelix();\n\nexport default function(t) {\n  if (t < 0 || t > 1) t -= Math.floor(t);\n  var ts = Math.abs(t - 0.5);\n  c.h = 360 * t - 100;\n  c.s = 1.5 - 1.5 * ts;\n  c.l = 0.8 - 0.9 * ts;\n  return c + \"\";\n}\n","import {rgb} from \"d3-color\";\n\nvar c = rgb(),\n    pi_1_3 = Math.PI / 3,\n    pi_2_3 = Math.PI * 2 / 3;\n\nexport default function(t) {\n  var x;\n  t = (0.5 - t) * Math.PI;\n  c.r = 255 * (x = Math.sin(t)) * x;\n  c.g = 255 * (x = Math.sin(t + pi_1_3)) * x;\n  c.b = 255 * (x = Math.sin(t + pi_2_3)) * x;\n  return c + \"\";\n}\n","import colors from \"../colors\";\n\nfunction ramp(range) {\n  var n = range.length;\n  return function(t) {\n    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n  };\n}\n\nexport default ramp(colors(\"44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725\"));\n\nexport var magma = ramp(colors(\"00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf\"));\n\nexport var inferno = ramp(colors(\"00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4\"));\n\nexport var plasma = ramp(colors(\"0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921\"));\n","export default function(x) {\n  return function constant() {\n    return x;\n  };\n}\n","export var abs = Math.abs;\nexport var atan2 = Math.atan2;\nexport var cos = Math.cos;\nexport var max = Math.max;\nexport var min = Math.min;\nexport var sin = Math.sin;\nexport var sqrt = Math.sqrt;\n\nexport var epsilon = 1e-12;\nexport var pi = Math.PI;\nexport var halfPi = pi / 2;\nexport var tau = 2 * pi;\n\nexport function acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);\n}\n\nexport function asin(x) {\n  return x >= 1 ? halfPi : x <= -1 ? -halfPi : Math.asin(x);\n}\n","import {path} from \"d3-path\";\nimport constant from \"./constant\";\nimport {abs, acos, asin, atan2, cos, epsilon, halfPi, max, min, pi, sin, sqrt, tau} from \"./math\";\n\nfunction arcInnerRadius(d) {\n  return d.innerRadius;\n}\n\nfunction arcOuterRadius(d) {\n  return d.outerRadius;\n}\n\nfunction arcStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction arcEndAngle(d) {\n  return d.endAngle;\n}\n\nfunction arcPadAngle(d) {\n  return d && d.padAngle; // Note: optional!\n}\n\nfunction intersect(x0, y0, x1, y1, x2, y2, x3, y3) {\n  var x10 = x1 - x0, y10 = y1 - y0,\n      x32 = x3 - x2, y32 = y3 - y2,\n      t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / (y32 * x10 - x32 * y10);\n  return [x0 + t * x10, y0 + t * y10];\n}\n\n// Compute perpendicular offset line of length rc.\n// http://mathworld.wolfram.com/Circle-LineIntersection.html\nfunction cornerTangents(x0, y0, x1, y1, r1, rc, cw) {\n  var x01 = x0 - x1,\n      y01 = y0 - y1,\n      lo = (cw ? rc : -rc) / sqrt(x01 * x01 + y01 * y01),\n      ox = lo * y01,\n      oy = -lo * x01,\n      x11 = x0 + ox,\n      y11 = y0 + oy,\n      x10 = x1 + ox,\n      y10 = y1 + oy,\n      x00 = (x11 + x10) / 2,\n      y00 = (y11 + y10) / 2,\n      dx = x10 - x11,\n      dy = y10 - y11,\n      d2 = dx * dx + dy * dy,\n      r = r1 - rc,\n      D = x11 * y10 - x10 * y11,\n      d = (dy < 0 ? -1 : 1) * sqrt(max(0, r * r * d2 - D * D)),\n      cx0 = (D * dy - dx * d) / d2,\n      cy0 = (-D * dx - dy * d) / d2,\n      cx1 = (D * dy + dx * d) / d2,\n      cy1 = (-D * dx + dy * d) / d2,\n      dx0 = cx0 - x00,\n      dy0 = cy0 - y00,\n      dx1 = cx1 - x00,\n      dy1 = cy1 - y00;\n\n  // Pick the closer of the two intersection points.\n  // TODO Is there a faster way to determine which intersection to use?\n  if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n\n  return {\n    cx: cx0,\n    cy: cy0,\n    x01: -ox,\n    y01: -oy,\n    x11: cx0 * (r1 / r - 1),\n    y11: cy0 * (r1 / r - 1)\n  };\n}\n\nexport default function() {\n  var innerRadius = arcInnerRadius,\n      outerRadius = arcOuterRadius,\n      cornerRadius = constant(0),\n      padRadius = null,\n      startAngle = arcStartAngle,\n      endAngle = arcEndAngle,\n      padAngle = arcPadAngle,\n      context = null;\n\n  function arc() {\n    var buffer,\n        r,\n        r0 = +innerRadius.apply(this, arguments),\n        r1 = +outerRadius.apply(this, arguments),\n        a0 = startAngle.apply(this, arguments) - halfPi,\n        a1 = endAngle.apply(this, arguments) - halfPi,\n        da = abs(a1 - a0),\n        cw = a1 > a0;\n\n    if (!context) context = buffer = path();\n\n    // Ensure that the outer radius is always larger than the inner radius.\n    if (r1 < r0) r = r1, r1 = r0, r0 = r;\n\n    // Is it a point?\n    if (!(r1 > epsilon)) context.moveTo(0, 0);\n\n    // Or is it a circle or annulus?\n    else if (da > tau - epsilon) {\n      context.moveTo(r1 * cos(a0), r1 * sin(a0));\n      context.arc(0, 0, r1, a0, a1, !cw);\n      if (r0 > epsilon) {\n        context.moveTo(r0 * cos(a1), r0 * sin(a1));\n        context.arc(0, 0, r0, a1, a0, cw);\n      }\n    }\n\n    // Or is it a circular or annular sector?\n    else {\n      var a01 = a0,\n          a11 = a1,\n          a00 = a0,\n          a10 = a1,\n          da0 = da,\n          da1 = da,\n          ap = padAngle.apply(this, arguments) / 2,\n          rp = (ap > epsilon) && (padRadius ? +padRadius.apply(this, arguments) : sqrt(r0 * r0 + r1 * r1)),\n          rc = min(abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments)),\n          rc0 = rc,\n          rc1 = rc,\n          t0,\n          t1;\n\n      // Apply padding? Note that since r1 ≥ r0, da1 ≥ da0.\n      if (rp > epsilon) {\n        var p0 = asin(rp / r0 * sin(ap)),\n            p1 = asin(rp / r1 * sin(ap));\n        if ((da0 -= p0 * 2) > epsilon) p0 *= (cw ? 1 : -1), a00 += p0, a10 -= p0;\n        else da0 = 0, a00 = a10 = (a0 + a1) / 2;\n        if ((da1 -= p1 * 2) > epsilon) p1 *= (cw ? 1 : -1), a01 += p1, a11 -= p1;\n        else da1 = 0, a01 = a11 = (a0 + a1) / 2;\n      }\n\n      var x01 = r1 * cos(a01),\n          y01 = r1 * sin(a01),\n          x10 = r0 * cos(a10),\n          y10 = r0 * sin(a10);\n\n      // Apply rounded corners?\n      if (rc > epsilon) {\n        var x11 = r1 * cos(a11),\n            y11 = r1 * sin(a11),\n            x00 = r0 * cos(a00),\n            y00 = r0 * sin(a00);\n\n        // Restrict the corner radius according to the sector angle.\n        if (da < pi) {\n          var oc = da0 > epsilon ? intersect(x01, y01, x00, y00, x11, y11, x10, y10) : [x10, y10],\n              ax = x01 - oc[0],\n              ay = y01 - oc[1],\n              bx = x11 - oc[0],\n              by = y11 - oc[1],\n              kc = 1 / sin(acos((ax * bx + ay * by) / (sqrt(ax * ax + ay * ay) * sqrt(bx * bx + by * by))) / 2),\n              lc = sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n          rc0 = min(rc, (r0 - lc) / (kc - 1));\n          rc1 = min(rc, (r1 - lc) / (kc + 1));\n        }\n      }\n\n      // Is the sector collapsed to a line?\n      if (!(da1 > epsilon)) context.moveTo(x01, y01);\n\n      // Does the sector’s outer ring have rounded corners?\n      else if (rc1 > epsilon) {\n        t0 = cornerTangents(x00, y00, x01, y01, r1, rc1, cw);\n        t1 = cornerTangents(x11, y11, x10, y10, r1, rc1, cw);\n\n        context.moveTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc1 < rc) context.arc(t0.cx, t0.cy, rc1, atan2(t0.y01, t0.x01), atan2(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc1, atan2(t0.y01, t0.x01), atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r1, atan2(t0.cy + t0.y11, t0.cx + t0.x11), atan2(t1.cy + t1.y11, t1.cx + t1.x11), !cw);\n          context.arc(t1.cx, t1.cy, rc1, atan2(t1.y11, t1.x11), atan2(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the outer ring just a circular arc?\n      else context.moveTo(x01, y01), context.arc(0, 0, r1, a01, a11, !cw);\n\n      // Is there no inner ring, and it’s a circular sector?\n      // Or perhaps it’s an annular sector collapsed due to padding?\n      if (!(r0 > epsilon) || !(da0 > epsilon)) context.lineTo(x10, y10);\n\n      // Does the sector’s inner ring (or point) have rounded corners?\n      else if (rc0 > epsilon) {\n        t0 = cornerTangents(x10, y10, x11, y11, r0, -rc0, cw);\n        t1 = cornerTangents(x01, y01, x00, y00, r0, -rc0, cw);\n\n        context.lineTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc0 < rc) context.arc(t0.cx, t0.cy, rc0, atan2(t0.y01, t0.x01), atan2(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc0, atan2(t0.y01, t0.x01), atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r0, atan2(t0.cy + t0.y11, t0.cx + t0.x11), atan2(t1.cy + t1.y11, t1.cx + t1.x11), cw);\n          context.arc(t1.cx, t1.cy, rc0, atan2(t1.y11, t1.x11), atan2(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the inner ring just a circular arc?\n      else context.arc(0, 0, r0, a10, a00, cw);\n    }\n\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  arc.centroid = function() {\n    var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2,\n        a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - pi / 2;\n    return [cos(a) * r, sin(a) * r];\n  };\n\n  arc.innerRadius = function(_) {\n    return arguments.length ? (innerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : innerRadius;\n  };\n\n  arc.outerRadius = function(_) {\n    return arguments.length ? (outerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : outerRadius;\n  };\n\n  arc.cornerRadius = function(_) {\n    return arguments.length ? (cornerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : cornerRadius;\n  };\n\n  arc.padRadius = function(_) {\n    return arguments.length ? (padRadius = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), arc) : padRadius;\n  };\n\n  arc.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : startAngle;\n  };\n\n  arc.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : endAngle;\n  };\n\n  arc.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : padAngle;\n  };\n\n  arc.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), arc) : context;\n  };\n\n  return arc;\n}\n","function Linear(context) {\n  this._context = context;\n}\n\nLinear.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: this._context.lineTo(x, y); break;\n    }\n  }\n};\n\nexport default function(context) {\n  return new Linear(context);\n}\n","export function x(p) {\n  return p[0];\n}\n\nexport function y(p) {\n  return p[1];\n}\n","import {path} from \"d3-path\";\nimport constant from \"./constant\";\nimport curveLinear from \"./curve/linear\";\nimport {x as pointX, y as pointY} from \"./point\";\n\nexport default function() {\n  var x = pointX,\n      y = pointY,\n      defined = constant(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function line(data) {\n    var i,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer;\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) output.lineStart();\n        else output.lineEnd();\n      }\n      if (defined0) output.point(+x(d, i, data), +y(d, i, data));\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  line.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), line) : x;\n  };\n\n  line.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), line) : y;\n  };\n\n  line.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant(!!_), line) : defined;\n  };\n\n  line.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;\n  };\n\n  line.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;\n  };\n\n  return line;\n}\n","import {path} from \"d3-path\";\nimport constant from \"./constant\";\nimport curveLinear from \"./curve/linear\";\nimport line from \"./line\";\nimport {x as pointX, y as pointY} from \"./point\";\n\nexport default function() {\n  var x0 = pointX,\n      x1 = null,\n      y0 = constant(0),\n      y1 = pointY,\n      defined = constant(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function area(data) {\n    var i,\n        j,\n        k,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer,\n        x0z = new Array(n),\n        y0z = new Array(n);\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) {\n          j = i;\n          output.areaStart();\n          output.lineStart();\n        } else {\n          output.lineEnd();\n          output.lineStart();\n          for (k = i - 1; k >= j; --k) {\n            output.point(x0z[k], y0z[k]);\n          }\n          output.lineEnd();\n          output.areaEnd();\n        }\n      }\n      if (defined0) {\n        x0z[i] = +x0(d, i, data), y0z[i] = +y0(d, i, data);\n        output.point(x1 ? +x1(d, i, data) : x0z[i], y1 ? +y1(d, i, data) : y0z[i]);\n      }\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  function arealine() {\n    return line().defined(defined).curve(curve).context(context);\n  }\n\n  area.x = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant(+_), x1 = null, area) : x0;\n  };\n\n  area.x0 = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant(+_), area) : x0;\n  };\n\n  area.x1 = function(_) {\n    return arguments.length ? (x1 = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), area) : x1;\n  };\n\n  area.y = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant(+_), y1 = null, area) : y0;\n  };\n\n  area.y0 = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant(+_), area) : y0;\n  };\n\n  area.y1 = function(_) {\n    return arguments.length ? (y1 = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), area) : y1;\n  };\n\n  area.lineX0 =\n  area.lineY0 = function() {\n    return arealine().x(x0).y(y0);\n  };\n\n  area.lineY1 = function() {\n    return arealine().x(x0).y(y1);\n  };\n\n  area.lineX1 = function() {\n    return arealine().x(x1).y(y0);\n  };\n\n  area.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant(!!_), area) : defined;\n  };\n\n  area.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), area) : curve;\n  };\n\n  area.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), area) : context;\n  };\n\n  return area;\n}\n","export default function(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n}\n","export default function(d) {\n  return d;\n}\n","import constant from \"./constant\";\nimport descending from \"./descending\";\nimport identity from \"./identity\";\nimport {tau} from \"./math\";\n\nexport default function() {\n  var value = identity,\n      sortValues = descending,\n      sort = null,\n      startAngle = constant(0),\n      endAngle = constant(tau),\n      padAngle = constant(0);\n\n  function pie(data) {\n    var i,\n        n = data.length,\n        j,\n        k,\n        sum = 0,\n        index = new Array(n),\n        arcs = new Array(n),\n        a0 = +startAngle.apply(this, arguments),\n        da = Math.min(tau, Math.max(-tau, endAngle.apply(this, arguments) - a0)),\n        a1,\n        p = Math.min(Math.abs(da) / n, padAngle.apply(this, arguments)),\n        pa = p * (da < 0 ? -1 : 1),\n        v;\n\n    for (i = 0; i < n; ++i) {\n      if ((v = arcs[index[i] = i] = +value(data[i], i, data)) > 0) {\n        sum += v;\n      }\n    }\n\n    // Optionally sort the arcs by previously-computed values or by data.\n    if (sortValues != null) index.sort(function(i, j) { return sortValues(arcs[i], arcs[j]); });\n    else if (sort != null) index.sort(function(i, j) { return sort(data[i], data[j]); });\n\n    // Compute the arcs! They are stored in the original data's order.\n    for (i = 0, k = sum ? (da - n * pa) / sum : 0; i < n; ++i, a0 = a1) {\n      j = index[i], v = arcs[j], a1 = a0 + (v > 0 ? v * k : 0) + pa, arcs[j] = {\n        data: data[j],\n        index: i,\n        value: v,\n        startAngle: a0,\n        endAngle: a1,\n        padAngle: p\n      };\n    }\n\n    return arcs;\n  }\n\n  pie.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(+_), pie) : value;\n  };\n\n  pie.sortValues = function(_) {\n    return arguments.length ? (sortValues = _, sort = null, pie) : sortValues;\n  };\n\n  pie.sort = function(_) {\n    return arguments.length ? (sort = _, sortValues = null, pie) : sort;\n  };\n\n  pie.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : startAngle;\n  };\n\n  pie.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : endAngle;\n  };\n\n  pie.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : padAngle;\n  };\n\n  return pie;\n}\n","import curveLinear from \"./linear\";\n\nexport var curveRadialLinear = curveRadial(curveLinear);\n\nfunction Radial(curve) {\n  this._curve = curve;\n}\n\nRadial.prototype = {\n  areaStart: function() {\n    this._curve.areaStart();\n  },\n  areaEnd: function() {\n    this._curve.areaEnd();\n  },\n  lineStart: function() {\n    this._curve.lineStart();\n  },\n  lineEnd: function() {\n    this._curve.lineEnd();\n  },\n  point: function(a, r) {\n    this._curve.point(r * Math.sin(a), r * -Math.cos(a));\n  }\n};\n\nexport default function curveRadial(curve) {\n\n  function radial(context) {\n    return new Radial(curve(context));\n  }\n\n  radial._curve = curve;\n\n  return radial;\n}\n","import curveRadial, {curveRadialLinear} from \"./curve/radial\";\nimport line from \"./line\";\n\nexport function lineRadial(l) {\n  var c = l.curve;\n\n  l.angle = l.x, delete l.x;\n  l.radius = l.y, delete l.y;\n\n  l.curve = function(_) {\n    return arguments.length ? c(curveRadial(_)) : c()._curve;\n  };\n\n  return l;\n}\n\nexport default function() {\n  return lineRadial(line().curve(curveRadialLinear));\n}\n","import curveRadial, {curveRadialLinear} from \"./curve/radial\";\nimport area from \"./area\";\nimport {lineRadial} from \"./lineRadial\"\n\nexport default function() {\n  var a = area().curve(curveRadialLinear),\n      c = a.curve,\n      x0 = a.lineX0,\n      x1 = a.lineX1,\n      y0 = a.lineY0,\n      y1 = a.lineY1;\n\n  a.angle = a.x, delete a.x;\n  a.startAngle = a.x0, delete a.x0;\n  a.endAngle = a.x1, delete a.x1;\n  a.radius = a.y, delete a.y;\n  a.innerRadius = a.y0, delete a.y0;\n  a.outerRadius = a.y1, delete a.y1;\n  a.lineStartAngle = function() { return lineRadial(x0()); }, delete a.lineX0;\n  a.lineEndAngle = function() { return lineRadial(x1()); }, delete a.lineX1;\n  a.lineInnerRadius = function() { return lineRadial(y0()); }, delete a.lineY0;\n  a.lineOuterRadius = function() { return lineRadial(y1()); }, delete a.lineY1;\n\n  a.curve = function(_) {\n    return arguments.length ? c(curveRadial(_)) : c()._curve;\n  };\n\n  return a;\n}\n","export default function(x, y) {\n  return [(y = +y) * Math.cos(x -= Math.PI / 2), y * Math.sin(x)];\n}\n","export var slice = Array.prototype.slice;\n","import {path} from \"d3-path\";\nimport {slice} from \"../array\";\nimport constant from \"../constant\";\nimport {x as pointX, y as pointY} from \"../point\";\nimport pointRadial from \"../pointRadial\";\n\nfunction linkSource(d) {\n  return d.source;\n}\n\nfunction linkTarget(d) {\n  return d.target;\n}\n\nfunction link(curve) {\n  var source = linkSource,\n      target = linkTarget,\n      x = pointX,\n      y = pointY,\n      context = null;\n\n  function link() {\n    var buffer, argv = slice.call(arguments), s = source.apply(this, argv), t = target.apply(this, argv);\n    if (!context) context = buffer = path();\n    curve(context, +x.apply(this, (argv[0] = s, argv)), +y.apply(this, argv), +x.apply(this, (argv[0] = t, argv)), +y.apply(this, argv));\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  link.source = function(_) {\n    return arguments.length ? (source = _, link) : source;\n  };\n\n  link.target = function(_) {\n    return arguments.length ? (target = _, link) : target;\n  };\n\n  link.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), link) : x;\n  };\n\n  link.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), link) : y;\n  };\n\n  link.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), link) : context;\n  };\n\n  return link;\n}\n\nfunction curveHorizontal(context, x0, y0, x1, y1) {\n  context.moveTo(x0, y0);\n  context.bezierCurveTo(x0 = (x0 + x1) / 2, y0, x0, y1, x1, y1);\n}\n\nfunction curveVertical(context, x0, y0, x1, y1) {\n  context.moveTo(x0, y0);\n  context.bezierCurveTo(x0, y0 = (y0 + y1) / 2, x1, y0, x1, y1);\n}\n\nfunction curveRadial(context, x0, y0, x1, y1) {\n  var p0 = pointRadial(x0, y0),\n      p1 = pointRadial(x0, y0 = (y0 + y1) / 2),\n      p2 = pointRadial(x1, y0),\n      p3 = pointRadial(x1, y1);\n  context.moveTo(p0[0], p0[1]);\n  context.bezierCurveTo(p1[0], p1[1], p2[0], p2[1], p3[0], p3[1]);\n}\n\nexport function linkHorizontal() {\n  return link(curveHorizontal);\n}\n\nexport function linkVertical() {\n  return link(curveVertical);\n}\n\nexport function linkRadial() {\n  var l = link(curveRadial);\n  l.angle = l.x, delete l.x;\n  l.radius = l.y, delete l.y;\n  return l;\n}\n","import {pi, tau} from \"../math\";\n\nexport default {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / pi);\n    context.moveTo(r, 0);\n    context.arc(0, 0, r, 0, tau);\n  }\n};\n","export default {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / 5) / 2;\n    context.moveTo(-3 * r, -r);\n    context.lineTo(-r, -r);\n    context.lineTo(-r, -3 * r);\n    context.lineTo(r, -3 * r);\n    context.lineTo(r, -r);\n    context.lineTo(3 * r, -r);\n    context.lineTo(3 * r, r);\n    context.lineTo(r, r);\n    context.lineTo(r, 3 * r);\n    context.lineTo(-r, 3 * r);\n    context.lineTo(-r, r);\n    context.lineTo(-3 * r, r);\n    context.closePath();\n  }\n};\n","var tan30 = Math.sqrt(1 / 3),\n    tan30_2 = tan30 * 2;\n\nexport default {\n  draw: function(context, size) {\n    var y = Math.sqrt(size / tan30_2),\n        x = y * tan30;\n    context.moveTo(0, -y);\n    context.lineTo(x, 0);\n    context.lineTo(0, y);\n    context.lineTo(-x, 0);\n    context.closePath();\n  }\n};\n","import {pi, tau} from \"../math\";\n\nvar ka = 0.89081309152928522810,\n    kr = Math.sin(pi / 10) / Math.sin(7 * pi / 10),\n    kx = Math.sin(tau / 10) * kr,\n    ky = -Math.cos(tau / 10) * kr;\n\nexport default {\n  draw: function(context, size) {\n    var r = Math.sqrt(size * ka),\n        x = kx * r,\n        y = ky * r;\n    context.moveTo(0, -r);\n    context.lineTo(x, y);\n    for (var i = 1; i < 5; ++i) {\n      var a = tau * i / 5,\n          c = Math.cos(a),\n          s = Math.sin(a);\n      context.lineTo(s * r, -c * r);\n      context.lineTo(c * x - s * y, s * x + c * y);\n    }\n    context.closePath();\n  }\n};\n","export default {\n  draw: function(context, size) {\n    var w = Math.sqrt(size),\n        x = -w / 2;\n    context.rect(x, x, w, w);\n  }\n};\n","var sqrt3 = Math.sqrt(3);\n\nexport default {\n  draw: function(context, size) {\n    var y = -Math.sqrt(size / (sqrt3 * 3));\n    context.moveTo(0, y * 2);\n    context.lineTo(-sqrt3 * y, -y);\n    context.lineTo(sqrt3 * y, -y);\n    context.closePath();\n  }\n};\n","var c = -0.5,\n    s = Math.sqrt(3) / 2,\n    k = 1 / Math.sqrt(12),\n    a = (k / 2 + 1) * 3;\n\nexport default {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / a),\n        x0 = r / 2,\n        y0 = r * k,\n        x1 = x0,\n        y1 = r * k + r,\n        x2 = -x1,\n        y2 = y1;\n    context.moveTo(x0, y0);\n    context.lineTo(x1, y1);\n    context.lineTo(x2, y2);\n    context.lineTo(c * x0 - s * y0, s * x0 + c * y0);\n    context.lineTo(c * x1 - s * y1, s * x1 + c * y1);\n    context.lineTo(c * x2 - s * y2, s * x2 + c * y2);\n    context.lineTo(c * x0 + s * y0, c * y0 - s * x0);\n    context.lineTo(c * x1 + s * y1, c * y1 - s * x1);\n    context.lineTo(c * x2 + s * y2, c * y2 - s * x2);\n    context.closePath();\n  }\n};\n","import {path} from \"d3-path\";\nimport circle from \"./symbol/circle\";\nimport cross from \"./symbol/cross\";\nimport diamond from \"./symbol/diamond\";\nimport star from \"./symbol/star\";\nimport square from \"./symbol/square\";\nimport triangle from \"./symbol/triangle\";\nimport wye from \"./symbol/wye\";\nimport constant from \"./constant\";\n\nexport var symbols = [\n  circle,\n  cross,\n  diamond,\n  square,\n  star,\n  triangle,\n  wye\n];\n\nexport default function() {\n  var type = constant(circle),\n      size = constant(64),\n      context = null;\n\n  function symbol() {\n    var buffer;\n    if (!context) context = buffer = path();\n    type.apply(this, arguments).draw(context, +size.apply(this, arguments));\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  symbol.type = function(_) {\n    return arguments.length ? (type = typeof _ === \"function\" ? _ : constant(_), symbol) : type;\n  };\n\n  symbol.size = function(_) {\n    return arguments.length ? (size = typeof _ === \"function\" ? _ : constant(+_), symbol) : size;\n  };\n\n  symbol.context = function(_) {\n    return arguments.length ? (context = _ == null ? null : _, symbol) : context;\n  };\n\n  return symbol;\n}\n","export default function() {}\n","export function point(that, x, y) {\n  that._context.bezierCurveTo(\n    (2 * that._x0 + that._x1) / 3,\n    (2 * that._y0 + that._y1) / 3,\n    (that._x0 + 2 * that._x1) / 3,\n    (that._y0 + 2 * that._y1) / 3,\n    (that._x0 + 4 * that._x1 + x) / 6,\n    (that._y0 + 4 * that._y1 + y) / 6\n  );\n}\n\nexport function Basis(context) {\n  this._context = context;\n}\n\nBasis.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 3: point(this, this._x1, this._y1); // proceed\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._context.lineTo((5 * this._x0 + this._x1) / 6, (5 * this._y0 + this._y1) / 6); // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nexport default function(context) {\n  return new Basis(context);\n}\n","import noop from \"../noop\";\nimport {point} from \"./basis\";\n\nfunction BasisClosed(context) {\n  this._context = context;\n}\n\nBasisClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x2, this._y2);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.moveTo((this._x2 + 2 * this._x3) / 3, (this._y2 + 2 * this._y3) / 3);\n        this._context.lineTo((this._x3 + 2 * this._x2) / 3, (this._y3 + 2 * this._y2) / 3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x2, this._y2);\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x2 = x, this._y2 = y; break;\n      case 1: this._point = 2; this._x3 = x, this._y3 = y; break;\n      case 2: this._point = 3; this._x4 = x, this._y4 = y; this._context.moveTo((this._x0 + 4 * this._x1 + x) / 6, (this._y0 + 4 * this._y1 + y) / 6); break;\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nexport default function(context) {\n  return new BasisClosed(context);\n}\n","import {point} from \"./basis\";\n\nfunction BasisOpen(context) {\n  this._context = context;\n}\n\nBasisOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; var x0 = (this._x0 + 4 * this._x1 + x) / 6, y0 = (this._y0 + 4 * this._y1 + y) / 6; this._line ? this._context.lineTo(x0, y0) : this._context.moveTo(x0, y0); break;\n      case 3: this._point = 4; // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nexport default function(context) {\n  return new BasisOpen(context);\n}\n","import {Basis} from \"./basis\";\n\nfunction Bundle(context, beta) {\n  this._basis = new Basis(context);\n  this._beta = beta;\n}\n\nBundle.prototype = {\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n    this._basis.lineStart();\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        j = x.length - 1;\n\n    if (j > 0) {\n      var x0 = x[0],\n          y0 = y[0],\n          dx = x[j] - x0,\n          dy = y[j] - y0,\n          i = -1,\n          t;\n\n      while (++i <= j) {\n        t = i / j;\n        this._basis.point(\n          this._beta * x[i] + (1 - this._beta) * (x0 + t * dx),\n          this._beta * y[i] + (1 - this._beta) * (y0 + t * dy)\n        );\n      }\n    }\n\n    this._x = this._y = null;\n    this._basis.lineEnd();\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\nexport default (function custom(beta) {\n\n  function bundle(context) {\n    return beta === 1 ? new Basis(context) : new Bundle(context, beta);\n  }\n\n  bundle.beta = function(beta) {\n    return custom(+beta);\n  };\n\n  return bundle;\n})(0.85);\n","export function point(that, x, y) {\n  that._context.bezierCurveTo(\n    that._x1 + that._k * (that._x2 - that._x0),\n    that._y1 + that._k * (that._y2 - that._y0),\n    that._x2 + that._k * (that._x1 - x),\n    that._y2 + that._k * (that._y1 - y),\n    that._x2,\n    that._y2\n  );\n}\n\nexport function Cardinal(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinal.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: point(this, this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; this._x1 = x, this._y1 = y; break;\n      case 2: this._point = 3; // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(tension) {\n\n  function cardinal(context) {\n    return new Cardinal(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n","import noop from \"../noop\";\nimport {point} from \"./cardinal\";\n\nexport function CardinalClosed(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalClosed(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n","import {point} from \"./cardinal\";\n\nexport function CardinalOpen(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalOpen(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n","import {epsilon} from \"../math\";\nimport {Cardinal} from \"./cardinal\";\n\nexport function point(that, x, y) {\n  var x1 = that._x1,\n      y1 = that._y1,\n      x2 = that._x2,\n      y2 = that._y2;\n\n  if (that._l01_a > epsilon) {\n    var a = 2 * that._l01_2a + 3 * that._l01_a * that._l12_a + that._l12_2a,\n        n = 3 * that._l01_a * (that._l01_a + that._l12_a);\n    x1 = (x1 * a - that._x0 * that._l12_2a + that._x2 * that._l01_2a) / n;\n    y1 = (y1 * a - that._y0 * that._l12_2a + that._y2 * that._l01_2a) / n;\n  }\n\n  if (that._l23_a > epsilon) {\n    var b = 2 * that._l23_2a + 3 * that._l23_a * that._l12_a + that._l12_2a,\n        m = 3 * that._l23_a * (that._l23_a + that._l12_a);\n    x2 = (x2 * b + that._x1 * that._l23_2a - x * that._l12_2a) / m;\n    y2 = (y2 * b + that._y1 * that._l23_2a - y * that._l12_2a) / m;\n  }\n\n  that._context.bezierCurveTo(x1, y1, x2, y2, that._x2, that._y2);\n}\n\nfunction CatmullRom(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRom.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: this.point(this._x2, this._y2); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; // proceed\n      default: point(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRom(context, alpha) : new Cardinal(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n","import {CardinalClosed} from \"./cardinalClosed\";\nimport noop from \"../noop\";\nimport {point} from \"./catmullRom\";\n\nfunction CatmullRomClosed(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomClosed(context, alpha) : new CardinalClosed(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n","import {CardinalOpen} from \"./cardinalOpen\";\nimport {point} from \"./catmullRom\";\n\nfunction CatmullRomOpen(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomOpen(context, alpha) : new CardinalOpen(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n","import noop from \"../noop\";\n\nfunction LinearClosed(context) {\n  this._context = context;\n}\n\nLinearClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._point) this._context.closePath();\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    if (this._point) this._context.lineTo(x, y);\n    else this._point = 1, this._context.moveTo(x, y);\n  }\n};\n\nexport default function(context) {\n  return new LinearClosed(context);\n}\n","function sign(x) {\n  return x < 0 ? -1 : 1;\n}\n\n// Calculate the slopes of the tangents (Hermite-type interpolation) based on\n// the following paper: Steffen, M. 1990. A Simple Method for Monotonic\n// Interpolation in One Dimension. Astronomy and Astrophysics, Vol. 239, NO.\n// NOV(II), P. 443, 1990.\nfunction slope3(that, x2, y2) {\n  var h0 = that._x1 - that._x0,\n      h1 = x2 - that._x1,\n      s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0),\n      s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0),\n      p = (s0 * h1 + s1 * h0) / (h0 + h1);\n  return (sign(s0) + sign(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;\n}\n\n// Calculate a one-sided slope.\nfunction slope2(that, t) {\n  var h = that._x1 - that._x0;\n  return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;\n}\n\n// According to https://en.wikipedia.org/wiki/Cubic_Hermite_spline#Representations\n// \"you can express cubic Hermite interpolation in terms of cubic Bézier curves\n// with respect to the four values p0, p0 + m0 / 3, p1 - m1 / 3, p1\".\nfunction point(that, t0, t1) {\n  var x0 = that._x0,\n      y0 = that._y0,\n      x1 = that._x1,\n      y1 = that._y1,\n      dx = (x1 - x0) / 3;\n  that._context.bezierCurveTo(x0 + dx, y0 + dx * t0, x1 - dx, y1 - dx * t1, x1, y1);\n}\n\nfunction MonotoneX(context) {\n  this._context = context;\n}\n\nMonotoneX.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 =\n    this._t0 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n      case 3: point(this, this._t0, slope2(this, this._t0)); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    var t1 = NaN;\n\n    x = +x, y = +y;\n    if (x === this._x1 && y === this._y1) return; // Ignore coincident points.\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; point(this, slope2(this, t1 = slope3(this, x, y)), t1); break;\n      default: point(this, this._t0, t1 = slope3(this, x, y)); break;\n    }\n\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n    this._t0 = t1;\n  }\n}\n\nfunction MonotoneY(context) {\n  this._context = new ReflectContext(context);\n}\n\n(MonotoneY.prototype = Object.create(MonotoneX.prototype)).point = function(x, y) {\n  MonotoneX.prototype.point.call(this, y, x);\n};\n\nfunction ReflectContext(context) {\n  this._context = context;\n}\n\nReflectContext.prototype = {\n  moveTo: function(x, y) { this._context.moveTo(y, x); },\n  closePath: function() { this._context.closePath(); },\n  lineTo: function(x, y) { this._context.lineTo(y, x); },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) { this._context.bezierCurveTo(y1, x1, y2, x2, y, x); }\n};\n\nexport function monotoneX(context) {\n  return new MonotoneX(context);\n}\n\nexport function monotoneY(context) {\n  return new MonotoneY(context);\n}\n","function Natural(context) {\n  this._context = context;\n}\n\nNatural.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        n = x.length;\n\n    if (n) {\n      this._line ? this._context.lineTo(x[0], y[0]) : this._context.moveTo(x[0], y[0]);\n      if (n === 2) {\n        this._context.lineTo(x[1], y[1]);\n      } else {\n        var px = controlPoints(x),\n            py = controlPoints(y);\n        for (var i0 = 0, i1 = 1; i1 < n; ++i0, ++i1) {\n          this._context.bezierCurveTo(px[0][i0], py[0][i0], px[1][i0], py[1][i0], x[i1], y[i1]);\n        }\n      }\n    }\n\n    if (this._line || (this._line !== 0 && n === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n    this._x = this._y = null;\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\n// See https://www.particleincell.com/2012/bezier-splines/ for derivation.\nfunction controlPoints(x) {\n  var i,\n      n = x.length - 1,\n      m,\n      a = new Array(n),\n      b = new Array(n),\n      r = new Array(n);\n  a[0] = 0, b[0] = 2, r[0] = x[0] + 2 * x[1];\n  for (i = 1; i < n - 1; ++i) a[i] = 1, b[i] = 4, r[i] = 4 * x[i] + 2 * x[i + 1];\n  a[n - 1] = 2, b[n - 1] = 7, r[n - 1] = 8 * x[n - 1] + x[n];\n  for (i = 1; i < n; ++i) m = a[i] / b[i - 1], b[i] -= m, r[i] -= m * r[i - 1];\n  a[n - 1] = r[n - 1] / b[n - 1];\n  for (i = n - 2; i >= 0; --i) a[i] = (r[i] - a[i + 1]) / b[i];\n  b[n - 1] = (x[n] + a[n - 1]) / 2;\n  for (i = 0; i < n - 1; ++i) b[i] = 2 * x[i + 1] - a[i + 1];\n  return [a, b];\n}\n\nexport default function(context) {\n  return new Natural(context);\n}\n","function Step(context, t) {\n  this._context = context;\n  this._t = t;\n}\n\nStep.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = this._y = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    if (this._line >= 0) this._t = 1 - this._t, this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: {\n        if (this._t <= 0) {\n          this._context.lineTo(this._x, y);\n          this._context.lineTo(x, y);\n        } else {\n          var x1 = this._x * (1 - this._t) + x * this._t;\n          this._context.lineTo(x1, this._y);\n          this._context.lineTo(x1, y);\n        }\n        break;\n      }\n    }\n    this._x = x, this._y = y;\n  }\n};\n\nexport default function(context) {\n  return new Step(context, 0.5);\n}\n\nexport function stepBefore(context) {\n  return new Step(context, 0);\n}\n\nexport function stepAfter(context) {\n  return new Step(context, 1);\n}\n","export default function(series, order) {\n  if (!((n = series.length) > 1)) return;\n  for (var i = 1, j, s0, s1 = series[order[0]], n, m = s1.length; i < n; ++i) {\n    s0 = s1, s1 = series[order[i]];\n    for (j = 0; j < m; ++j) {\n      s1[j][1] += s1[j][0] = isNaN(s0[j][1]) ? s0[j][0] : s0[j][1];\n    }\n  }\n}\n","export default function(series) {\n  var n = series.length, o = new Array(n);\n  while (--n >= 0) o[n] = n;\n  return o;\n}\n","import {slice} from \"./array\";\nimport constant from \"./constant\";\nimport offsetNone from \"./offset/none\";\nimport orderNone from \"./order/none\";\n\nfunction stackValue(d, key) {\n  return d[key];\n}\n\nexport default function() {\n  var keys = constant([]),\n      order = orderNone,\n      offset = offsetNone,\n      value = stackValue;\n\n  function stack(data) {\n    var kz = keys.apply(this, arguments),\n        i,\n        m = data.length,\n        n = kz.length,\n        sz = new Array(n),\n        oz;\n\n    for (i = 0; i < n; ++i) {\n      for (var ki = kz[i], si = sz[i] = new Array(m), j = 0, sij; j < m; ++j) {\n        si[j] = sij = [0, +value(data[j], ki, j, data)];\n        sij.data = data[j];\n      }\n      si.key = ki;\n    }\n\n    for (i = 0, oz = order(sz); i < n; ++i) {\n      sz[oz[i]].index = i;\n    }\n\n    offset(sz, oz);\n    return sz;\n  }\n\n  stack.keys = function(_) {\n    return arguments.length ? (keys = typeof _ === \"function\" ? _ : constant(slice.call(_)), stack) : keys;\n  };\n\n  stack.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(+_), stack) : value;\n  };\n\n  stack.order = function(_) {\n    return arguments.length ? (order = _ == null ? orderNone : typeof _ === \"function\" ? _ : constant(slice.call(_)), stack) : order;\n  };\n\n  stack.offset = function(_) {\n    return arguments.length ? (offset = _ == null ? offsetNone : _, stack) : offset;\n  };\n\n  return stack;\n}\n","import none from \"./none\";\n\nexport default function(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var i, n, j = 0, m = series[0].length, y; j < m; ++j) {\n    for (y = i = 0; i < n; ++i) y += series[i][j][1] || 0;\n    if (y) for (i = 0; i < n; ++i) series[i][j][1] /= y;\n  }\n  none(series, order);\n}\n","export default function(series, order) {\n  if (!((n = series.length) > 1)) return;\n  for (var i, j = 0, d, dy, yp, yn, n, m = series[order[0]].length; j < m; ++j) {\n    for (yp = yn = 0, i = 0; i < n; ++i) {\n      if ((dy = (d = series[order[i]][j])[1] - d[0]) >= 0) {\n        d[0] = yp, d[1] = yp += dy;\n      } else if (dy < 0) {\n        d[1] = yn, d[0] = yn += dy;\n      } else {\n        d[0] = yp;\n      }\n    }\n  }\n}\n","import none from \"./none\";\n\nexport default function(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var j = 0, s0 = series[order[0]], n, m = s0.length; j < m; ++j) {\n    for (var i = 0, y = 0; i < n; ++i) y += series[i][j][1] || 0;\n    s0[j][1] += s0[j][0] = -y / 2;\n  }\n  none(series, order);\n}\n","import none from \"./none\";\n\nexport default function(series, order) {\n  if (!((n = series.length) > 0) || !((m = (s0 = series[order[0]]).length) > 0)) return;\n  for (var y = 0, j = 1, s0, m, n; j < m; ++j) {\n    for (var i = 0, s1 = 0, s2 = 0; i < n; ++i) {\n      var si = series[order[i]],\n          sij0 = si[j][1] || 0,\n          sij1 = si[j - 1][1] || 0,\n          s3 = (sij0 - sij1) / 2;\n      for (var k = 0; k < i; ++k) {\n        var sk = series[order[k]],\n            skj0 = sk[j][1] || 0,\n            skj1 = sk[j - 1][1] || 0;\n        s3 += skj0 - skj1;\n      }\n      s1 += sij0, s2 += s3 * sij0;\n    }\n    s0[j - 1][1] += s0[j - 1][0] = y;\n    if (s1) y -= s2 / s1;\n  }\n  s0[j - 1][1] += s0[j - 1][0] = y;\n  none(series, order);\n}\n","import none from \"./none\";\n\nexport default function(series) {\n  var sums = series.map(sum);\n  return none(series).sort(function(a, b) { return sums[a] - sums[b]; });\n}\n\nexport function sum(series) {\n  var s = 0, i = -1, n = series.length, v;\n  while (++i < n) if (v = +series[i][1]) s += v;\n  return s;\n}\n","import ascending from \"./ascending\";\n\nexport default function(series) {\n  return ascending(series).reverse();\n}\n","import none from \"./none\";\nimport {sum} from \"./ascending\";\n\nexport default function(series) {\n  var n = series.length,\n      i,\n      j,\n      sums = series.map(sum),\n      order = none(series).sort(function(a, b) { return sums[b] - sums[a]; }),\n      top = 0,\n      bottom = 0,\n      tops = [],\n      bottoms = [];\n\n  for (i = 0; i < n; ++i) {\n    j = order[i];\n    if (top < bottom) {\n      top += sums[j];\n      tops.push(j);\n    } else {\n      bottom += sums[j];\n      bottoms.push(j);\n    }\n  }\n\n  return bottoms.reverse().concat(tops);\n}\n","import none from \"./none\";\n\nexport default function(series) {\n  return none(series).reverse();\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export function x(d) {\n  return d[0];\n}\n\nexport function y(d) {\n  return d[1];\n}\n","function RedBlackTree() {\n  this._ = null; // root node\n}\n\nexport function RedBlackNode(node) {\n  node.U = // parent node\n  node.C = // color - true for red, false for black\n  node.L = // left node\n  node.R = // right node\n  node.P = // previous node\n  node.N = null; // next node\n}\n\nRedBlackTree.prototype = {\n  constructor: RedBlackTree,\n\n  insert: function(after, node) {\n    var parent, grandpa, uncle;\n\n    if (after) {\n      node.P = after;\n      node.N = after.N;\n      if (after.N) after.N.P = node;\n      after.N = node;\n      if (after.R) {\n        after = after.R;\n        while (after.L) after = after.L;\n        after.L = node;\n      } else {\n        after.R = node;\n      }\n      parent = after;\n    } else if (this._) {\n      after = RedBlackFirst(this._);\n      node.P = null;\n      node.N = after;\n      after.P = after.L = node;\n      parent = after;\n    } else {\n      node.P = node.N = null;\n      this._ = node;\n      parent = null;\n    }\n    node.L = node.R = null;\n    node.U = parent;\n    node.C = true;\n\n    after = node;\n    while (parent && parent.C) {\n      grandpa = parent.U;\n      if (parent === grandpa.L) {\n        uncle = grandpa.R;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.R) {\n            RedBlackRotateLeft(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateRight(this, grandpa);\n        }\n      } else {\n        uncle = grandpa.L;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.L) {\n            RedBlackRotateRight(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateLeft(this, grandpa);\n        }\n      }\n      parent = after.U;\n    }\n    this._.C = false;\n  },\n\n  remove: function(node) {\n    if (node.N) node.N.P = node.P;\n    if (node.P) node.P.N = node.N;\n    node.N = node.P = null;\n\n    var parent = node.U,\n        sibling,\n        left = node.L,\n        right = node.R,\n        next,\n        red;\n\n    if (!left) next = right;\n    else if (!right) next = left;\n    else next = RedBlackFirst(right);\n\n    if (parent) {\n      if (parent.L === node) parent.L = next;\n      else parent.R = next;\n    } else {\n      this._ = next;\n    }\n\n    if (left && right) {\n      red = next.C;\n      next.C = node.C;\n      next.L = left;\n      left.U = next;\n      if (next !== right) {\n        parent = next.U;\n        next.U = node.U;\n        node = next.R;\n        parent.L = node;\n        next.R = right;\n        right.U = next;\n      } else {\n        next.U = parent;\n        parent = next;\n        node = next.R;\n      }\n    } else {\n      red = node.C;\n      node = next;\n    }\n\n    if (node) node.U = parent;\n    if (red) return;\n    if (node && node.C) { node.C = false; return; }\n\n    do {\n      if (node === this._) break;\n      if (node === parent.L) {\n        sibling = parent.R;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateLeft(this, parent);\n          sibling = parent.R;\n        }\n        if ((sibling.L && sibling.L.C)\n            || (sibling.R && sibling.R.C)) {\n          if (!sibling.R || !sibling.R.C) {\n            sibling.L.C = false;\n            sibling.C = true;\n            RedBlackRotateRight(this, sibling);\n            sibling = parent.R;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.R.C = false;\n          RedBlackRotateLeft(this, parent);\n          node = this._;\n          break;\n        }\n      } else {\n        sibling = parent.L;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateRight(this, parent);\n          sibling = parent.L;\n        }\n        if ((sibling.L && sibling.L.C)\n          || (sibling.R && sibling.R.C)) {\n          if (!sibling.L || !sibling.L.C) {\n            sibling.R.C = false;\n            sibling.C = true;\n            RedBlackRotateLeft(this, sibling);\n            sibling = parent.L;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.L.C = false;\n          RedBlackRotateRight(this, parent);\n          node = this._;\n          break;\n        }\n      }\n      sibling.C = true;\n      node = parent;\n      parent = parent.U;\n    } while (!node.C);\n\n    if (node) node.C = false;\n  }\n};\n\nfunction RedBlackRotateLeft(tree, node) {\n  var p = node,\n      q = node.R,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.R = q.L;\n  if (p.R) p.R.U = p;\n  q.L = p;\n}\n\nfunction RedBlackRotateRight(tree, node) {\n  var p = node,\n      q = node.L,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.L = q.R;\n  if (p.L) p.L.U = p;\n  q.R = p;\n}\n\nfunction RedBlackFirst(node) {\n  while (node.L) node = node.L;\n  return node;\n}\n\nexport default RedBlackTree;\n","import {cells, edges, epsilon} from \"./Diagram\";\n\nexport function createEdge(left, right, v0, v1) {\n  var edge = [null, null],\n      index = edges.push(edge) - 1;\n  edge.left = left;\n  edge.right = right;\n  if (v0) setEdgeEnd(edge, left, right, v0);\n  if (v1) setEdgeEnd(edge, right, left, v1);\n  cells[left.index].halfedges.push(index);\n  cells[right.index].halfedges.push(index);\n  return edge;\n}\n\nexport function createBorderEdge(left, v0, v1) {\n  var edge = [v0, v1];\n  edge.left = left;\n  return edge;\n}\n\nexport function setEdgeEnd(edge, left, right, vertex) {\n  if (!edge[0] && !edge[1]) {\n    edge[0] = vertex;\n    edge.left = left;\n    edge.right = right;\n  } else if (edge.left === right) {\n    edge[1] = vertex;\n  } else {\n    edge[0] = vertex;\n  }\n}\n\n// Liang–Barsky line clipping.\nfunction clipEdge(edge, x0, y0, x1, y1) {\n  var a = edge[0],\n      b = edge[1],\n      ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (!(t0 > 0) && !(t1 < 1)) return true; // TODO Better check?\n\n  if (t0 > 0) edge[0] = [ax + t0 * dx, ay + t0 * dy];\n  if (t1 < 1) edge[1] = [ax + t1 * dx, ay + t1 * dy];\n  return true;\n}\n\nfunction connectEdge(edge, x0, y0, x1, y1) {\n  var v1 = edge[1];\n  if (v1) return true;\n\n  var v0 = edge[0],\n      left = edge.left,\n      right = edge.right,\n      lx = left[0],\n      ly = left[1],\n      rx = right[0],\n      ry = right[1],\n      fx = (lx + rx) / 2,\n      fy = (ly + ry) / 2,\n      fm,\n      fb;\n\n  if (ry === ly) {\n    if (fx < x0 || fx >= x1) return;\n    if (lx > rx) {\n      if (!v0) v0 = [fx, y0];\n      else if (v0[1] >= y1) return;\n      v1 = [fx, y1];\n    } else {\n      if (!v0) v0 = [fx, y1];\n      else if (v0[1] < y0) return;\n      v1 = [fx, y0];\n    }\n  } else {\n    fm = (lx - rx) / (ry - ly);\n    fb = fy - fm * fx;\n    if (fm < -1 || fm > 1) {\n      if (lx > rx) {\n        if (!v0) v0 = [(y0 - fb) / fm, y0];\n        else if (v0[1] >= y1) return;\n        v1 = [(y1 - fb) / fm, y1];\n      } else {\n        if (!v0) v0 = [(y1 - fb) / fm, y1];\n        else if (v0[1] < y0) return;\n        v1 = [(y0 - fb) / fm, y0];\n      }\n    } else {\n      if (ly < ry) {\n        if (!v0) v0 = [x0, fm * x0 + fb];\n        else if (v0[0] >= x1) return;\n        v1 = [x1, fm * x1 + fb];\n      } else {\n        if (!v0) v0 = [x1, fm * x1 + fb];\n        else if (v0[0] < x0) return;\n        v1 = [x0, fm * x0 + fb];\n      }\n    }\n  }\n\n  edge[0] = v0;\n  edge[1] = v1;\n  return true;\n}\n\nexport function clipEdges(x0, y0, x1, y1) {\n  var i = edges.length,\n      edge;\n\n  while (i--) {\n    if (!connectEdge(edge = edges[i], x0, y0, x1, y1)\n        || !clipEdge(edge, x0, y0, x1, y1)\n        || !(Math.abs(edge[0][0] - edge[1][0]) > epsilon\n            || Math.abs(edge[0][1] - edge[1][1]) > epsilon)) {\n      delete edges[i];\n    }\n  }\n}\n","import {createBorderEdge} from \"./Edge\";\nimport {cells, edges, epsilon} from \"./Diagram\";\n\nexport function createCell(site) {\n  return cells[site.index] = {\n    site: site,\n    halfedges: []\n  };\n}\n\nfunction cellHalfedgeAngle(cell, edge) {\n  var site = cell.site,\n      va = edge.left,\n      vb = edge.right;\n  if (site === vb) vb = va, va = site;\n  if (vb) return Math.atan2(vb[1] - va[1], vb[0] - va[0]);\n  if (site === va) va = edge[1], vb = edge[0];\n  else va = edge[0], vb = edge[1];\n  return Math.atan2(va[0] - vb[0], vb[1] - va[1]);\n}\n\nexport function cellHalfedgeStart(cell, edge) {\n  return edge[+(edge.left !== cell.site)];\n}\n\nexport function cellHalfedgeEnd(cell, edge) {\n  return edge[+(edge.left === cell.site)];\n}\n\nexport function sortCellHalfedges() {\n  for (var i = 0, n = cells.length, cell, halfedges, j, m; i < n; ++i) {\n    if ((cell = cells[i]) && (m = (halfedges = cell.halfedges).length)) {\n      var index = new Array(m),\n          array = new Array(m);\n      for (j = 0; j < m; ++j) index[j] = j, array[j] = cellHalfedgeAngle(cell, edges[halfedges[j]]);\n      index.sort(function(i, j) { return array[j] - array[i]; });\n      for (j = 0; j < m; ++j) array[j] = halfedges[index[j]];\n      for (j = 0; j < m; ++j) halfedges[j] = array[j];\n    }\n  }\n}\n\nexport function clipCells(x0, y0, x1, y1) {\n  var nCells = cells.length,\n      iCell,\n      cell,\n      site,\n      iHalfedge,\n      halfedges,\n      nHalfedges,\n      start,\n      startX,\n      startY,\n      end,\n      endX,\n      endY,\n      cover = true;\n\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      site = cell.site;\n      halfedges = cell.halfedges;\n      iHalfedge = halfedges.length;\n\n      // Remove any dangling clipped edges.\n      while (iHalfedge--) {\n        if (!edges[halfedges[iHalfedge]]) {\n          halfedges.splice(iHalfedge, 1);\n        }\n      }\n\n      // Insert any border edges as necessary.\n      iHalfedge = 0, nHalfedges = halfedges.length;\n      while (iHalfedge < nHalfedges) {\n        end = cellHalfedgeEnd(cell, edges[halfedges[iHalfedge]]), endX = end[0], endY = end[1];\n        start = cellHalfedgeStart(cell, edges[halfedges[++iHalfedge % nHalfedges]]), startX = start[0], startY = start[1];\n        if (Math.abs(endX - startX) > epsilon || Math.abs(endY - startY) > epsilon) {\n          halfedges.splice(iHalfedge, 0, edges.push(createBorderEdge(site, end,\n              Math.abs(endX - x0) < epsilon && y1 - endY > epsilon ? [x0, Math.abs(startX - x0) < epsilon ? startY : y1]\n              : Math.abs(endY - y1) < epsilon && x1 - endX > epsilon ? [Math.abs(startY - y1) < epsilon ? startX : x1, y1]\n              : Math.abs(endX - x1) < epsilon && endY - y0 > epsilon ? [x1, Math.abs(startX - x1) < epsilon ? startY : y0]\n              : Math.abs(endY - y0) < epsilon && endX - x0 > epsilon ? [Math.abs(startY - y0) < epsilon ? startX : x0, y0]\n              : null)) - 1);\n          ++nHalfedges;\n        }\n      }\n\n      if (nHalfedges) cover = false;\n    }\n  }\n\n  // If there weren’t any edges, have the closest site cover the extent.\n  // It doesn’t matter which corner of the extent we measure!\n  if (cover) {\n    var dx, dy, d2, dc = Infinity;\n\n    for (iCell = 0, cover = null; iCell < nCells; ++iCell) {\n      if (cell = cells[iCell]) {\n        site = cell.site;\n        dx = site[0] - x0;\n        dy = site[1] - y0;\n        d2 = dx * dx + dy * dy;\n        if (d2 < dc) dc = d2, cover = cell;\n      }\n    }\n\n    if (cover) {\n      var v00 = [x0, y0], v01 = [x0, y1], v11 = [x1, y1], v10 = [x1, y0];\n      cover.halfedges.push(\n        edges.push(createBorderEdge(site = cover.site, v00, v01)) - 1,\n        edges.push(createBorderEdge(site, v01, v11)) - 1,\n        edges.push(createBorderEdge(site, v11, v10)) - 1,\n        edges.push(createBorderEdge(site, v10, v00)) - 1\n      );\n    }\n  }\n\n  // Lastly delete any cells with no edges; these were entirely clipped.\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      if (!cell.halfedges.length) {\n        delete cells[iCell];\n      }\n    }\n  }\n}\n","import {RedBlackNode} from \"./RedBlackTree\";\nimport {circles, epsilon2} from \"./Diagram\";\n\nvar circlePool = [];\n\nexport var firstCircle;\n\nfunction Circle() {\n  RedBlackNode(this);\n  this.x =\n  this.y =\n  this.arc =\n  this.site =\n  this.cy = null;\n}\n\nexport function attachCircle(arc) {\n  var lArc = arc.P,\n      rArc = arc.N;\n\n  if (!lArc || !rArc) return;\n\n  var lSite = lArc.site,\n      cSite = arc.site,\n      rSite = rArc.site;\n\n  if (lSite === rSite) return;\n\n  var bx = cSite[0],\n      by = cSite[1],\n      ax = lSite[0] - bx,\n      ay = lSite[1] - by,\n      cx = rSite[0] - bx,\n      cy = rSite[1] - by;\n\n  var d = 2 * (ax * cy - ay * cx);\n  if (d >= -epsilon2) return;\n\n  var ha = ax * ax + ay * ay,\n      hc = cx * cx + cy * cy,\n      x = (cy * ha - ay * hc) / d,\n      y = (ax * hc - cx * ha) / d;\n\n  var circle = circlePool.pop() || new Circle;\n  circle.arc = arc;\n  circle.site = cSite;\n  circle.x = x + bx;\n  circle.y = (circle.cy = y + by) + Math.sqrt(x * x + y * y); // y bottom\n\n  arc.circle = circle;\n\n  var before = null,\n      node = circles._;\n\n  while (node) {\n    if (circle.y < node.y || (circle.y === node.y && circle.x <= node.x)) {\n      if (node.L) node = node.L;\n      else { before = node.P; break; }\n    } else {\n      if (node.R) node = node.R;\n      else { before = node; break; }\n    }\n  }\n\n  circles.insert(before, circle);\n  if (!before) firstCircle = circle;\n}\n\nexport function detachCircle(arc) {\n  var circle = arc.circle;\n  if (circle) {\n    if (!circle.P) firstCircle = circle.N;\n    circles.remove(circle);\n    circlePool.push(circle);\n    RedBlackNode(circle);\n    arc.circle = null;\n  }\n}\n","import {RedBlackNode} from \"./RedBlackTree\";\nimport {createCell} from \"./Cell\";\nimport {attachCircle, detachCircle} from \"./Circle\";\nimport {createEdge, setEdgeEnd} from \"./Edge\";\nimport {beaches, epsilon} from \"./Diagram\";\n\nvar beachPool = [];\n\nfunction Beach() {\n  RedBlackNode(this);\n  this.edge =\n  this.site =\n  this.circle = null;\n}\n\nfunction createBeach(site) {\n  var beach = beachPool.pop() || new Beach;\n  beach.site = site;\n  return beach;\n}\n\nfunction detachBeach(beach) {\n  detachCircle(beach);\n  beaches.remove(beach);\n  beachPool.push(beach);\n  RedBlackNode(beach);\n}\n\nexport function removeBeach(beach) {\n  var circle = beach.circle,\n      x = circle.x,\n      y = circle.cy,\n      vertex = [x, y],\n      previous = beach.P,\n      next = beach.N,\n      disappearing = [beach];\n\n  detachBeach(beach);\n\n  var lArc = previous;\n  while (lArc.circle\n      && Math.abs(x - lArc.circle.x) < epsilon\n      && Math.abs(y - lArc.circle.cy) < epsilon) {\n    previous = lArc.P;\n    disappearing.unshift(lArc);\n    detachBeach(lArc);\n    lArc = previous;\n  }\n\n  disappearing.unshift(lArc);\n  detachCircle(lArc);\n\n  var rArc = next;\n  while (rArc.circle\n      && Math.abs(x - rArc.circle.x) < epsilon\n      && Math.abs(y - rArc.circle.cy) < epsilon) {\n    next = rArc.N;\n    disappearing.push(rArc);\n    detachBeach(rArc);\n    rArc = next;\n  }\n\n  disappearing.push(rArc);\n  detachCircle(rArc);\n\n  var nArcs = disappearing.length,\n      iArc;\n  for (iArc = 1; iArc < nArcs; ++iArc) {\n    rArc = disappearing[iArc];\n    lArc = disappearing[iArc - 1];\n    setEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n  }\n\n  lArc = disappearing[0];\n  rArc = disappearing[nArcs - 1];\n  rArc.edge = createEdge(lArc.site, rArc.site, null, vertex);\n\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nexport function addBeach(site) {\n  var x = site[0],\n      directrix = site[1],\n      lArc,\n      rArc,\n      dxl,\n      dxr,\n      node = beaches._;\n\n  while (node) {\n    dxl = leftBreakPoint(node, directrix) - x;\n    if (dxl > epsilon) node = node.L; else {\n      dxr = x - rightBreakPoint(node, directrix);\n      if (dxr > epsilon) {\n        if (!node.R) {\n          lArc = node;\n          break;\n        }\n        node = node.R;\n      } else {\n        if (dxl > -epsilon) {\n          lArc = node.P;\n          rArc = node;\n        } else if (dxr > -epsilon) {\n          lArc = node;\n          rArc = node.N;\n        } else {\n          lArc = rArc = node;\n        }\n        break;\n      }\n    }\n  }\n\n  createCell(site);\n  var newArc = createBeach(site);\n  beaches.insert(lArc, newArc);\n\n  if (!lArc && !rArc) return;\n\n  if (lArc === rArc) {\n    detachCircle(lArc);\n    rArc = createBeach(lArc.site);\n    beaches.insert(newArc, rArc);\n    newArc.edge = rArc.edge = createEdge(lArc.site, newArc.site);\n    attachCircle(lArc);\n    attachCircle(rArc);\n    return;\n  }\n\n  if (!rArc) { // && lArc\n    newArc.edge = createEdge(lArc.site, newArc.site);\n    return;\n  }\n\n  // else lArc !== rArc\n  detachCircle(lArc);\n  detachCircle(rArc);\n\n  var lSite = lArc.site,\n      ax = lSite[0],\n      ay = lSite[1],\n      bx = site[0] - ax,\n      by = site[1] - ay,\n      rSite = rArc.site,\n      cx = rSite[0] - ax,\n      cy = rSite[1] - ay,\n      d = 2 * (bx * cy - by * cx),\n      hb = bx * bx + by * by,\n      hc = cx * cx + cy * cy,\n      vertex = [(cy * hb - by * hc) / d + ax, (bx * hc - cx * hb) / d + ay];\n\n  setEdgeEnd(rArc.edge, lSite, rSite, vertex);\n  newArc.edge = createEdge(lSite, site, null, vertex);\n  rArc.edge = createEdge(site, rSite, null, vertex);\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nfunction leftBreakPoint(arc, directrix) {\n  var site = arc.site,\n      rfocx = site[0],\n      rfocy = site[1],\n      pby2 = rfocy - directrix;\n\n  if (!pby2) return rfocx;\n\n  var lArc = arc.P;\n  if (!lArc) return -Infinity;\n\n  site = lArc.site;\n  var lfocx = site[0],\n      lfocy = site[1],\n      plby2 = lfocy - directrix;\n\n  if (!plby2) return lfocx;\n\n  var hl = lfocx - rfocx,\n      aby2 = 1 / pby2 - 1 / plby2,\n      b = hl / plby2;\n\n  if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n\n  return (rfocx + lfocx) / 2;\n}\n\nfunction rightBreakPoint(arc, directrix) {\n  var rArc = arc.N;\n  if (rArc) return leftBreakPoint(rArc, directrix);\n  var site = arc.site;\n  return site[1] === directrix ? site[0] : Infinity;\n}\n","import {addBeach, removeBeach} from \"./Beach\";\nimport {sortCellHalfedges, cellHalfedgeStart, clipCells} from \"./Cell\";\nimport {firstCircle} from \"./Circle\";\nimport {clipEdges} from \"./Edge\";\nimport RedBlackTree from \"./RedBlackTree\";\n\nexport var epsilon = 1e-6;\nexport var epsilon2 = 1e-12;\nexport var beaches;\nexport var cells;\nexport var circles;\nexport var edges;\n\nfunction triangleArea(a, b, c) {\n  return (a[0] - c[0]) * (b[1] - a[1]) - (a[0] - b[0]) * (c[1] - a[1]);\n}\n\nfunction lexicographic(a, b) {\n  return b[1] - a[1]\n      || b[0] - a[0];\n}\n\nexport default function Diagram(sites, extent) {\n  var site = sites.sort(lexicographic).pop(),\n      x,\n      y,\n      circle;\n\n  edges = [];\n  cells = new Array(sites.length);\n  beaches = new RedBlackTree;\n  circles = new RedBlackTree;\n\n  while (true) {\n    circle = firstCircle;\n    if (site && (!circle || site[1] < circle.y || (site[1] === circle.y && site[0] < circle.x))) {\n      if (site[0] !== x || site[1] !== y) {\n        addBeach(site);\n        x = site[0], y = site[1];\n      }\n      site = sites.pop();\n    } else if (circle) {\n      removeBeach(circle.arc);\n    } else {\n      break;\n    }\n  }\n\n  sortCellHalfedges();\n\n  if (extent) {\n    var x0 = +extent[0][0],\n        y0 = +extent[0][1],\n        x1 = +extent[1][0],\n        y1 = +extent[1][1];\n    clipEdges(x0, y0, x1, y1);\n    clipCells(x0, y0, x1, y1);\n  }\n\n  this.edges = edges;\n  this.cells = cells;\n\n  beaches =\n  circles =\n  edges =\n  cells = null;\n}\n\nDiagram.prototype = {\n  constructor: Diagram,\n\n  polygons: function() {\n    var edges = this.edges;\n\n    return this.cells.map(function(cell) {\n      var polygon = cell.halfedges.map(function(i) { return cellHalfedgeStart(cell, edges[i]); });\n      polygon.data = cell.site.data;\n      return polygon;\n    });\n  },\n\n  triangles: function() {\n    var triangles = [],\n        edges = this.edges;\n\n    this.cells.forEach(function(cell, i) {\n      if (!(m = (halfedges = cell.halfedges).length)) return;\n      var site = cell.site,\n          halfedges,\n          j = -1,\n          m,\n          s0,\n          e1 = edges[halfedges[m - 1]],\n          s1 = e1.left === site ? e1.right : e1.left;\n\n      while (++j < m) {\n        s0 = s1;\n        e1 = edges[halfedges[j]];\n        s1 = e1.left === site ? e1.right : e1.left;\n        if (s0 && s1 && i < s0.index && i < s1.index && triangleArea(site, s0, s1) < 0) {\n          triangles.push([site.data, s0.data, s1.data]);\n        }\n      }\n    });\n\n    return triangles;\n  },\n\n  links: function() {\n    return this.edges.filter(function(edge) {\n      return edge.right;\n    }).map(function(edge) {\n      return {\n        source: edge.left.data,\n        target: edge.right.data\n      };\n    });\n  },\n\n  find: function(x, y, radius) {\n    var that = this, i0, i1 = that._found || 0, n = that.cells.length, cell;\n\n    // Use the previously-found cell, or start with an arbitrary one.\n    while (!(cell = that.cells[i1])) if (++i1 >= n) return null;\n    var dx = x - cell.site[0], dy = y - cell.site[1], d2 = dx * dx + dy * dy;\n\n    // Traverse the half-edges to find a closer cell, if any.\n    do {\n      cell = that.cells[i0 = i1], i1 = null;\n      cell.halfedges.forEach(function(e) {\n        var edge = that.edges[e], v = edge.left;\n        if ((v === cell.site || !v) && !(v = edge.right)) return;\n        var vx = x - v[0], vy = y - v[1], v2 = vx * vx + vy * vy;\n        if (v2 < d2) d2 = v2, i1 = v.index;\n      });\n    } while (i1 !== null);\n\n    that._found = i0;\n\n    return radius == null || d2 <= radius * radius ? cell.site : null;\n  }\n}\n","import constant from \"./constant\";\nimport {x as pointX, y as pointY} from \"./point\";\nimport Diagram, {epsilon} from \"./Diagram\";\n\nexport default function() {\n  var x = pointX,\n      y = pointY,\n      extent = null;\n\n  function voronoi(data) {\n    return new Diagram(data.map(function(d, i) {\n      var s = [Math.round(x(d, i, data) / epsilon) * epsilon, Math.round(y(d, i, data) / epsilon) * epsilon];\n      s.index = i;\n      s.data = d;\n      return s;\n    }), extent);\n  }\n\n  voronoi.polygons = function(data) {\n    return voronoi(data).polygons();\n  };\n\n  voronoi.links = function(data) {\n    return voronoi(data).links();\n  };\n\n  voronoi.triangles = function(data) {\n    return voronoi(data).triangles();\n  };\n\n  voronoi.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), voronoi) : x;\n  };\n\n  voronoi.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), voronoi) : y;\n  };\n\n  voronoi.extent = function(_) {\n    return arguments.length ? (extent = _ == null ? null : [[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]], voronoi) : extent && [[extent[0][0], extent[0][1]], [extent[1][0], extent[1][1]]];\n  };\n\n  voronoi.size = function(_) {\n    return arguments.length ? (extent = _ == null ? null : [[0, 0], [+_[0], +_[1]]], voronoi) : extent && [extent[1][0] - extent[0][0], extent[1][1] - extent[0][1]];\n  };\n\n  return voronoi;\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export function Transform(k, x, y) {\n  this.k = k;\n  this.x = x;\n  this.y = y;\n}\n\nTransform.prototype = {\n  constructor: Transform,\n  scale: function(k) {\n    return k === 1 ? this : new Transform(this.k * k, this.x, this.y);\n  },\n  translate: function(x, y) {\n    return x === 0 & y === 0 ? this : new Transform(this.k, this.x + this.k * x, this.y + this.k * y);\n  },\n  apply: function(point) {\n    return [point[0] * this.k + this.x, point[1] * this.k + this.y];\n  },\n  applyX: function(x) {\n    return x * this.k + this.x;\n  },\n  applyY: function(y) {\n    return y * this.k + this.y;\n  },\n  invert: function(location) {\n    return [(location[0] - this.x) / this.k, (location[1] - this.y) / this.k];\n  },\n  invertX: function(x) {\n    return (x - this.x) / this.k;\n  },\n  invertY: function(y) {\n    return (y - this.y) / this.k;\n  },\n  rescaleX: function(x) {\n    return x.copy().domain(x.range().map(this.invertX, this).map(x.invert, x));\n  },\n  rescaleY: function(y) {\n    return y.copy().domain(y.range().map(this.invertY, this).map(y.invert, y));\n  },\n  toString: function() {\n    return \"translate(\" + this.x + \",\" + this.y + \") scale(\" + this.k + \")\";\n  }\n};\n\nexport var identity = new Transform(1, 0, 0);\n\ntransform.prototype = Transform.prototype;\n\nexport default function transform(node) {\n  return node.__zoom || identity;\n}\n","import {event} from \"d3-selection\";\n\nexport function nopropagation() {\n  event.stopImmediatePropagation();\n}\n\nexport default function() {\n  event.preventDefault();\n  event.stopImmediatePropagation();\n}\n","import {dispatch} from \"d3-dispatch\";\nimport {dragDisable, dragEnable} from \"d3-drag\";\nimport {interpolateZoom} from \"d3-interpolate\";\nimport {event, customEvent, select, mouse, touch} from \"d3-selection\";\nimport {interrupt} from \"d3-transition\";\nimport constant from \"./constant\";\nimport ZoomEvent from \"./event\";\nimport {Transform, identity} from \"./transform\";\nimport noevent, {nopropagation} from \"./noevent\";\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter() {\n  return !event.button;\n}\n\nfunction defaultExtent() {\n  var e = this, w, h;\n  if (e instanceof SVGElement) {\n    e = e.ownerSVGElement || e;\n    w = e.width.baseVal.value;\n    h = e.height.baseVal.value;\n  } else {\n    w = e.clientWidth;\n    h = e.clientHeight;\n  }\n  return [[0, 0], [w, h]];\n}\n\nfunction defaultTransform() {\n  return this.__zoom || identity;\n}\n\nfunction defaultWheelDelta() {\n  return -event.deltaY * (event.deltaMode ? 120 : 1) / 500;\n}\n\nfunction defaultTouchable() {\n  return \"ontouchstart\" in this;\n}\n\nfunction defaultConstrain(transform, extent, translateExtent) {\n  var dx0 = transform.invertX(extent[0][0]) - translateExtent[0][0],\n      dx1 = transform.invertX(extent[1][0]) - translateExtent[1][0],\n      dy0 = transform.invertY(extent[0][1]) - translateExtent[0][1],\n      dy1 = transform.invertY(extent[1][1]) - translateExtent[1][1];\n  return transform.translate(\n    dx1 > dx0 ? (dx0 + dx1) / 2 : Math.min(0, dx0) || Math.max(0, dx1),\n    dy1 > dy0 ? (dy0 + dy1) / 2 : Math.min(0, dy0) || Math.max(0, dy1)\n  );\n}\n\nexport default function() {\n  var filter = defaultFilter,\n      extent = defaultExtent,\n      constrain = defaultConstrain,\n      wheelDelta = defaultWheelDelta,\n      touchable = defaultTouchable,\n      scaleExtent = [0, Infinity],\n      translateExtent = [[-Infinity, -Infinity], [Infinity, Infinity]],\n      duration = 250,\n      interpolate = interpolateZoom,\n      gestures = [],\n      listeners = dispatch(\"start\", \"zoom\", \"end\"),\n      touchstarting,\n      touchending,\n      touchDelay = 500,\n      wheelDelay = 150,\n      clickDistance2 = 0;\n\n  function zoom(selection) {\n    selection\n        .property(\"__zoom\", defaultTransform)\n        .on(\"wheel.zoom\", wheeled)\n        .on(\"mousedown.zoom\", mousedowned)\n        .on(\"dblclick.zoom\", dblclicked)\n      .filter(touchable)\n        .on(\"touchstart.zoom\", touchstarted)\n        .on(\"touchmove.zoom\", touchmoved)\n        .on(\"touchend.zoom touchcancel.zoom\", touchended)\n        .style(\"touch-action\", \"none\")\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n  }\n\n  zoom.transform = function(collection, transform) {\n    var selection = collection.selection ? collection.selection() : collection;\n    selection.property(\"__zoom\", defaultTransform);\n    if (collection !== selection) {\n      schedule(collection, transform);\n    } else {\n      selection.interrupt().each(function() {\n        gesture(this, arguments)\n            .start()\n            .zoom(null, typeof transform === \"function\" ? transform.apply(this, arguments) : transform)\n            .end();\n      });\n    }\n  };\n\n  zoom.scaleBy = function(selection, k) {\n    zoom.scaleTo(selection, function() {\n      var k0 = this.__zoom.k,\n          k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n      return k0 * k1;\n    });\n  };\n\n  zoom.scaleTo = function(selection, k) {\n    zoom.transform(selection, function() {\n      var e = extent.apply(this, arguments),\n          t0 = this.__zoom,\n          p0 = centroid(e),\n          p1 = t0.invert(p0),\n          k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n      return constrain(translate(scale(t0, k1), p0, p1), e, translateExtent);\n    });\n  };\n\n  zoom.translateBy = function(selection, x, y) {\n    zoom.transform(selection, function() {\n      return constrain(this.__zoom.translate(\n        typeof x === \"function\" ? x.apply(this, arguments) : x,\n        typeof y === \"function\" ? y.apply(this, arguments) : y\n      ), extent.apply(this, arguments), translateExtent);\n    });\n  };\n\n  zoom.translateTo = function(selection, x, y) {\n    zoom.transform(selection, function() {\n      var e = extent.apply(this, arguments),\n          t = this.__zoom,\n          p = centroid(e);\n      return constrain(identity.translate(p[0], p[1]).scale(t.k).translate(\n        typeof x === \"function\" ? -x.apply(this, arguments) : -x,\n        typeof y === \"function\" ? -y.apply(this, arguments) : -y\n      ), e, translateExtent);\n    });\n  };\n\n  function scale(transform, k) {\n    k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], k));\n    return k === transform.k ? transform : new Transform(k, transform.x, transform.y);\n  }\n\n  function translate(transform, p0, p1) {\n    var x = p0[0] - p1[0] * transform.k, y = p0[1] - p1[1] * transform.k;\n    return x === transform.x && y === transform.y ? transform : new Transform(transform.k, x, y);\n  }\n\n  function centroid(extent) {\n    return [(+extent[0][0] + +extent[1][0]) / 2, (+extent[0][1] + +extent[1][1]) / 2];\n  }\n\n  function schedule(transition, transform, center) {\n    transition\n        .on(\"start.zoom\", function() { gesture(this, arguments).start(); })\n        .on(\"interrupt.zoom end.zoom\", function() { gesture(this, arguments).end(); })\n        .tween(\"zoom\", function() {\n          var that = this,\n              args = arguments,\n              g = gesture(that, args),\n              e = extent.apply(that, args),\n              p = center || centroid(e),\n              w = Math.max(e[1][0] - e[0][0], e[1][1] - e[0][1]),\n              a = that.__zoom,\n              b = typeof transform === \"function\" ? transform.apply(that, args) : transform,\n              i = interpolate(a.invert(p).concat(w / a.k), b.invert(p).concat(w / b.k));\n          return function(t) {\n            if (t === 1) t = b; // Avoid rounding error on end.\n            else { var l = i(t), k = w / l[2]; t = new Transform(k, p[0] - l[0] * k, p[1] - l[1] * k); }\n            g.zoom(null, t);\n          };\n        });\n  }\n\n  function gesture(that, args) {\n    for (var i = 0, n = gestures.length, g; i < n; ++i) {\n      if ((g = gestures[i]).that === that) {\n        return g;\n      }\n    }\n    return new Gesture(that, args);\n  }\n\n  function Gesture(that, args) {\n    this.that = that;\n    this.args = args;\n    this.index = -1;\n    this.active = 0;\n    this.extent = extent.apply(that, args);\n  }\n\n  Gesture.prototype = {\n    start: function() {\n      if (++this.active === 1) {\n        this.index = gestures.push(this) - 1;\n        this.emit(\"start\");\n      }\n      return this;\n    },\n    zoom: function(key, transform) {\n      if (this.mouse && key !== \"mouse\") this.mouse[1] = transform.invert(this.mouse[0]);\n      if (this.touch0 && key !== \"touch\") this.touch0[1] = transform.invert(this.touch0[0]);\n      if (this.touch1 && key !== \"touch\") this.touch1[1] = transform.invert(this.touch1[0]);\n      this.that.__zoom = transform;\n      this.emit(\"zoom\");\n      return this;\n    },\n    end: function() {\n      if (--this.active === 0) {\n        gestures.splice(this.index, 1);\n        this.index = -1;\n        this.emit(\"end\");\n      }\n      return this;\n    },\n    emit: function(type) {\n      customEvent(new ZoomEvent(zoom, type, this.that.__zoom), listeners.apply, listeners, [type, this.that, this.args]);\n    }\n  };\n\n  function wheeled() {\n    if (!filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        t = this.__zoom,\n        k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], t.k * Math.pow(2, wheelDelta.apply(this, arguments)))),\n        p = mouse(this);\n\n    // If the mouse is in the same location as before, reuse it.\n    // If there were recent wheel events, reset the wheel idle timeout.\n    if (g.wheel) {\n      if (g.mouse[0][0] !== p[0] || g.mouse[0][1] !== p[1]) {\n        g.mouse[1] = t.invert(g.mouse[0] = p);\n      }\n      clearTimeout(g.wheel);\n    }\n\n    // If this wheel event won’t trigger a transform change, ignore it.\n    else if (t.k === k) return;\n\n    // Otherwise, capture the mouse point and location at the start.\n    else {\n      g.mouse = [p, t.invert(p)];\n      interrupt(this);\n      g.start();\n    }\n\n    noevent();\n    g.wheel = setTimeout(wheelidled, wheelDelay);\n    g.zoom(\"mouse\", constrain(translate(scale(t, k), g.mouse[0], g.mouse[1]), g.extent, translateExtent));\n\n    function wheelidled() {\n      g.wheel = null;\n      g.end();\n    }\n  }\n\n  function mousedowned() {\n    if (touchending || !filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        v = select(event.view).on(\"mousemove.zoom\", mousemoved, true).on(\"mouseup.zoom\", mouseupped, true),\n        p = mouse(this),\n        x0 = event.clientX,\n        y0 = event.clientY;\n\n    dragDisable(event.view);\n    nopropagation();\n    g.mouse = [p, this.__zoom.invert(p)];\n    interrupt(this);\n    g.start();\n\n    function mousemoved() {\n      noevent();\n      if (!g.moved) {\n        var dx = event.clientX - x0, dy = event.clientY - y0;\n        g.moved = dx * dx + dy * dy > clickDistance2;\n      }\n      g.zoom(\"mouse\", constrain(translate(g.that.__zoom, g.mouse[0] = mouse(g.that), g.mouse[1]), g.extent, translateExtent));\n    }\n\n    function mouseupped() {\n      v.on(\"mousemove.zoom mouseup.zoom\", null);\n      dragEnable(event.view, g.moved);\n      noevent();\n      g.end();\n    }\n  }\n\n  function dblclicked() {\n    if (!filter.apply(this, arguments)) return;\n    var t0 = this.__zoom,\n        p0 = mouse(this),\n        p1 = t0.invert(p0),\n        k1 = t0.k * (event.shiftKey ? 0.5 : 2),\n        t1 = constrain(translate(scale(t0, k1), p0, p1), extent.apply(this, arguments), translateExtent);\n\n    noevent();\n    if (duration > 0) select(this).transition().duration(duration).call(schedule, t1, p0);\n    else select(this).call(zoom.transform, t1);\n  }\n\n  function touchstarted() {\n    if (!filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        touches = event.changedTouches,\n        started,\n        n = touches.length, i, t, p;\n\n    nopropagation();\n    for (i = 0; i < n; ++i) {\n      t = touches[i], p = touch(this, touches, t.identifier);\n      p = [p, this.__zoom.invert(p), t.identifier];\n      if (!g.touch0) g.touch0 = p, started = true;\n      else if (!g.touch1) g.touch1 = p;\n    }\n\n    // If this is a dbltap, reroute to the (optional) dblclick.zoom handler.\n    if (touchstarting) {\n      touchstarting = clearTimeout(touchstarting);\n      if (!g.touch1) {\n        g.end();\n        p = select(this).on(\"dblclick.zoom\");\n        if (p) p.apply(this, arguments);\n        return;\n      }\n    }\n\n    if (started) {\n      touchstarting = setTimeout(function() { touchstarting = null; }, touchDelay);\n      interrupt(this);\n      g.start();\n    }\n  }\n\n  function touchmoved() {\n    var g = gesture(this, arguments),\n        touches = event.changedTouches,\n        n = touches.length, i, t, p, l;\n\n    noevent();\n    if (touchstarting) touchstarting = clearTimeout(touchstarting);\n    for (i = 0; i < n; ++i) {\n      t = touches[i], p = touch(this, touches, t.identifier);\n      if (g.touch0 && g.touch0[2] === t.identifier) g.touch0[0] = p;\n      else if (g.touch1 && g.touch1[2] === t.identifier) g.touch1[0] = p;\n    }\n    t = g.that.__zoom;\n    if (g.touch1) {\n      var p0 = g.touch0[0], l0 = g.touch0[1],\n          p1 = g.touch1[0], l1 = g.touch1[1],\n          dp = (dp = p1[0] - p0[0]) * dp + (dp = p1[1] - p0[1]) * dp,\n          dl = (dl = l1[0] - l0[0]) * dl + (dl = l1[1] - l0[1]) * dl;\n      t = scale(t, Math.sqrt(dp / dl));\n      p = [(p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2];\n      l = [(l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2];\n    }\n    else if (g.touch0) p = g.touch0[0], l = g.touch0[1];\n    else return;\n    g.zoom(\"touch\", constrain(translate(t, p, l), g.extent, translateExtent));\n  }\n\n  function touchended() {\n    var g = gesture(this, arguments),\n        touches = event.changedTouches,\n        n = touches.length, i, t;\n\n    nopropagation();\n    if (touchending) clearTimeout(touchending);\n    touchending = setTimeout(function() { touchending = null; }, touchDelay);\n    for (i = 0; i < n; ++i) {\n      t = touches[i];\n      if (g.touch0 && g.touch0[2] === t.identifier) delete g.touch0;\n      else if (g.touch1 && g.touch1[2] === t.identifier) delete g.touch1;\n    }\n    if (g.touch1 && !g.touch0) g.touch0 = g.touch1, delete g.touch1;\n    if (g.touch0) g.touch0[1] = this.__zoom.invert(g.touch0[0]);\n    else g.end();\n  }\n\n  zoom.wheelDelta = function(_) {\n    return arguments.length ? (wheelDelta = typeof _ === \"function\" ? _ : constant(+_), zoom) : wheelDelta;\n  };\n\n  zoom.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant(!!_), zoom) : filter;\n  };\n\n  zoom.touchable = function(_) {\n    return arguments.length ? (touchable = typeof _ === \"function\" ? _ : constant(!!_), zoom) : touchable;\n  };\n\n  zoom.extent = function(_) {\n    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), zoom) : extent;\n  };\n\n  zoom.scaleExtent = function(_) {\n    return arguments.length ? (scaleExtent[0] = +_[0], scaleExtent[1] = +_[1], zoom) : [scaleExtent[0], scaleExtent[1]];\n  };\n\n  zoom.translateExtent = function(_) {\n    return arguments.length ? (translateExtent[0][0] = +_[0][0], translateExtent[1][0] = +_[1][0], translateExtent[0][1] = +_[0][1], translateExtent[1][1] = +_[1][1], zoom) : [[translateExtent[0][0], translateExtent[0][1]], [translateExtent[1][0], translateExtent[1][1]]];\n  };\n\n  zoom.constrain = function(_) {\n    return arguments.length ? (constrain = _, zoom) : constrain;\n  };\n\n  zoom.duration = function(_) {\n    return arguments.length ? (duration = +_, zoom) : duration;\n  };\n\n  zoom.interpolate = function(_) {\n    return arguments.length ? (interpolate = _, zoom) : interpolate;\n  };\n\n  zoom.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? zoom : value;\n  };\n\n  zoom.clickDistance = function(_) {\n    return arguments.length ? (clickDistance2 = (_ = +_) * _, zoom) : Math.sqrt(clickDistance2);\n  };\n\n  return zoom;\n}\n","export default function ZoomEvent(target, type, transform) {\n  this.target = target;\n  this.type = type;\n  this.transform = transform;\n}\n"],"sourceRoot":""}