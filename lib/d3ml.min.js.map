{"version":3,"sources":["webpack://d3ml/webpack/universalModuleDefinition","webpack://d3ml/webpack/bootstrap","webpack://d3ml/./src/visualization/defaults.js","webpack://d3ml/./src/visualization/visualization.js","webpack://d3ml/./src/visualization/circle.js","webpack://d3ml/./src/index.js","webpack://d3ml/./src/visualization/validator.js","webpack://d3ml/./src/visualization/knn-visualization.js","webpack://d3ml/./src/algorithms/knn.js","webpack://d3ml/./src/algorithms/machine-learning-algorithm.js","webpack://d3ml/./node_modules/d3/dist/package.js","webpack://d3ml/./node_modules/d3-array/src/ascending.js","webpack://d3ml/./node_modules/d3-array/src/bisector.js","webpack://d3ml/./node_modules/d3-array/src/bisect.js","webpack://d3ml/./node_modules/d3-array/src/pairs.js","webpack://d3ml/./node_modules/d3-array/src/cross.js","webpack://d3ml/./node_modules/d3-array/src/descending.js","webpack://d3ml/./node_modules/d3-array/src/number.js","webpack://d3ml/./node_modules/d3-array/src/variance.js","webpack://d3ml/./node_modules/d3-array/src/deviation.js","webpack://d3ml/./node_modules/d3-array/src/extent.js","webpack://d3ml/./node_modules/d3-array/src/array.js","webpack://d3ml/./node_modules/d3-array/src/constant.js","webpack://d3ml/./node_modules/d3-array/src/identity.js","webpack://d3ml/./node_modules/d3-array/src/range.js","webpack://d3ml/./node_modules/d3-array/src/ticks.js","webpack://d3ml/./node_modules/d3-array/src/threshold/sturges.js","webpack://d3ml/./node_modules/d3-array/src/histogram.js","webpack://d3ml/./node_modules/d3-array/src/quantile.js","webpack://d3ml/./node_modules/d3-array/src/threshold/freedmanDiaconis.js","webpack://d3ml/./node_modules/d3-array/src/threshold/scott.js","webpack://d3ml/./node_modules/d3-array/src/max.js","webpack://d3ml/./node_modules/d3-array/src/mean.js","webpack://d3ml/./node_modules/d3-array/src/median.js","webpack://d3ml/./node_modules/d3-array/src/merge.js","webpack://d3ml/./node_modules/d3-array/src/min.js","webpack://d3ml/./node_modules/d3-array/src/permute.js","webpack://d3ml/./node_modules/d3-array/src/scan.js","webpack://d3ml/./node_modules/d3-array/src/shuffle.js","webpack://d3ml/./node_modules/d3-array/src/sum.js","webpack://d3ml/./node_modules/d3-array/src/transpose.js","webpack://d3ml/./node_modules/d3-array/src/zip.js","webpack://d3ml/./node_modules/d3-axis/src/array.js","webpack://d3ml/./node_modules/d3-axis/src/identity.js","webpack://d3ml/./node_modules/d3-axis/src/axis.js","webpack://d3ml/./node_modules/d3-dispatch/src/dispatch.js","webpack://d3ml/./node_modules/d3-selection/src/namespaces.js","webpack://d3ml/./node_modules/d3-selection/src/namespace.js","webpack://d3ml/./node_modules/d3-selection/src/creator.js","webpack://d3ml/./node_modules/d3-selection/src/selector.js","webpack://d3ml/./node_modules/d3-selection/src/selectorAll.js","webpack://d3ml/./node_modules/d3-selection/src/matcher.js","webpack://d3ml/./node_modules/d3-selection/src/selection/sparse.js","webpack://d3ml/./node_modules/d3-selection/src/selection/enter.js","webpack://d3ml/./node_modules/d3-selection/src/constant.js","webpack://d3ml/./node_modules/d3-selection/src/selection/data.js","webpack://d3ml/./node_modules/d3-selection/src/selection/sort.js","webpack://d3ml/./node_modules/d3-selection/src/selection/attr.js","webpack://d3ml/./node_modules/d3-selection/src/window.js","webpack://d3ml/./node_modules/d3-selection/src/selection/style.js","webpack://d3ml/./node_modules/d3-selection/src/selection/classed.js","webpack://d3ml/./node_modules/d3-selection/src/selection/text.js","webpack://d3ml/./node_modules/d3-selection/src/selection/html.js","webpack://d3ml/./node_modules/d3-selection/src/selection/raise.js","webpack://d3ml/./node_modules/d3-selection/src/selection/lower.js","webpack://d3ml/./node_modules/d3-selection/src/selection/insert.js","webpack://d3ml/./node_modules/d3-selection/src/selection/remove.js","webpack://d3ml/./node_modules/d3-selection/src/selection/clone.js","webpack://d3ml/./node_modules/d3-selection/src/selection/on.js","webpack://d3ml/./node_modules/d3-selection/src/selection/dispatch.js","webpack://d3ml/./node_modules/d3-selection/src/selection/index.js","webpack://d3ml/./node_modules/d3-selection/src/selection/select.js","webpack://d3ml/./node_modules/d3-selection/src/selection/selectAll.js","webpack://d3ml/./node_modules/d3-selection/src/selection/filter.js","webpack://d3ml/./node_modules/d3-selection/src/selection/exit.js","webpack://d3ml/./node_modules/d3-selection/src/selection/merge.js","webpack://d3ml/./node_modules/d3-selection/src/selection/order.js","webpack://d3ml/./node_modules/d3-selection/src/selection/call.js","webpack://d3ml/./node_modules/d3-selection/src/selection/nodes.js","webpack://d3ml/./node_modules/d3-selection/src/selection/node.js","webpack://d3ml/./node_modules/d3-selection/src/selection/size.js","webpack://d3ml/./node_modules/d3-selection/src/selection/empty.js","webpack://d3ml/./node_modules/d3-selection/src/selection/each.js","webpack://d3ml/./node_modules/d3-selection/src/selection/property.js","webpack://d3ml/./node_modules/d3-selection/src/selection/append.js","webpack://d3ml/./node_modules/d3-selection/src/selection/datum.js","webpack://d3ml/./node_modules/d3-selection/src/select.js","webpack://d3ml/./node_modules/d3-selection/src/create.js","webpack://d3ml/./node_modules/d3-selection/src/local.js","webpack://d3ml/./node_modules/d3-selection/src/sourceEvent.js","webpack://d3ml/./node_modules/d3-selection/src/point.js","webpack://d3ml/./node_modules/d3-selection/src/mouse.js","webpack://d3ml/./node_modules/d3-selection/src/selectAll.js","webpack://d3ml/./node_modules/d3-selection/src/touch.js","webpack://d3ml/./node_modules/d3-selection/src/touches.js","webpack://d3ml/./node_modules/d3-drag/src/noevent.js","webpack://d3ml/./node_modules/d3-drag/src/nodrag.js","webpack://d3ml/./node_modules/d3-drag/src/constant.js","webpack://d3ml/./node_modules/d3-drag/src/event.js","webpack://d3ml/./node_modules/d3-drag/src/drag.js","webpack://d3ml/./node_modules/d3-color/src/define.js","webpack://d3ml/./node_modules/d3-color/src/color.js","webpack://d3ml/./node_modules/d3-color/src/math.js","webpack://d3ml/./node_modules/d3-color/src/lab.js","webpack://d3ml/./node_modules/d3-color/src/cubehelix.js","webpack://d3ml/./node_modules/d3-interpolate/src/basis.js","webpack://d3ml/./node_modules/d3-interpolate/src/basisClosed.js","webpack://d3ml/./node_modules/d3-interpolate/src/constant.js","webpack://d3ml/./node_modules/d3-interpolate/src/color.js","webpack://d3ml/./node_modules/d3-interpolate/src/rgb.js","webpack://d3ml/./node_modules/d3-interpolate/src/array.js","webpack://d3ml/./node_modules/d3-interpolate/src/date.js","webpack://d3ml/./node_modules/d3-interpolate/src/number.js","webpack://d3ml/./node_modules/d3-interpolate/src/object.js","webpack://d3ml/./node_modules/d3-interpolate/src/string.js","webpack://d3ml/./node_modules/d3-interpolate/src/transform/parse.js","webpack://d3ml/./node_modules/d3-interpolate/src/value.js","webpack://d3ml/./node_modules/d3-interpolate/src/round.js","webpack://d3ml/./node_modules/d3-interpolate/src/transform/decompose.js","webpack://d3ml/./node_modules/d3-interpolate/src/transform/index.js","webpack://d3ml/./node_modules/d3-interpolate/src/zoom.js","webpack://d3ml/./node_modules/d3-interpolate/src/hsl.js","webpack://d3ml/./node_modules/d3-interpolate/src/lab.js","webpack://d3ml/./node_modules/d3-interpolate/src/hcl.js","webpack://d3ml/./node_modules/d3-interpolate/src/cubehelix.js","webpack://d3ml/./node_modules/d3-interpolate/src/piecewise.js","webpack://d3ml/./node_modules/d3-interpolate/src/quantize.js","webpack://d3ml/./node_modules/d3-timer/src/timer.js","webpack://d3ml/./node_modules/d3-timer/src/timeout.js","webpack://d3ml/./node_modules/d3-timer/src/interval.js","webpack://d3ml/./node_modules/d3-transition/src/transition/schedule.js","webpack://d3ml/./node_modules/d3-transition/src/interrupt.js","webpack://d3ml/./node_modules/d3-transition/src/transition/tween.js","webpack://d3ml/./node_modules/d3-transition/src/transition/interpolate.js","webpack://d3ml/./node_modules/d3-transition/src/transition/remove.js","webpack://d3ml/./node_modules/d3-transition/src/transition/selection.js","webpack://d3ml/./node_modules/d3-transition/src/transition/text.js","webpack://d3ml/./node_modules/d3-transition/src/transition/index.js","webpack://d3ml/./node_modules/d3-ease/src/linear.js","webpack://d3ml/./node_modules/d3-ease/src/quad.js","webpack://d3ml/./node_modules/d3-ease/src/cubic.js","webpack://d3ml/./node_modules/d3-transition/src/transition/select.js","webpack://d3ml/./node_modules/d3-transition/src/transition/selectAll.js","webpack://d3ml/./node_modules/d3-transition/src/transition/filter.js","webpack://d3ml/./node_modules/d3-transition/src/transition/merge.js","webpack://d3ml/./node_modules/d3-transition/src/transition/transition.js","webpack://d3ml/./node_modules/d3-transition/src/transition/on.js","webpack://d3ml/./node_modules/d3-transition/src/transition/attr.js","webpack://d3ml/./node_modules/d3-transition/src/transition/attrTween.js","webpack://d3ml/./node_modules/d3-transition/src/transition/style.js","webpack://d3ml/./node_modules/d3-transition/src/transition/styleTween.js","webpack://d3ml/./node_modules/d3-transition/src/transition/delay.js","webpack://d3ml/./node_modules/d3-transition/src/transition/duration.js","webpack://d3ml/./node_modules/d3-transition/src/transition/ease.js","webpack://d3ml/./node_modules/d3-ease/src/poly.js","webpack://d3ml/./node_modules/d3-ease/src/sin.js","webpack://d3ml/./node_modules/d3-ease/src/exp.js","webpack://d3ml/./node_modules/d3-ease/src/circle.js","webpack://d3ml/./node_modules/d3-ease/src/bounce.js","webpack://d3ml/./node_modules/d3-ease/src/back.js","webpack://d3ml/./node_modules/d3-ease/src/elastic.js","webpack://d3ml/./node_modules/d3-transition/src/selection/transition.js","webpack://d3ml/./node_modules/d3-transition/src/selection/index.js","webpack://d3ml/./node_modules/d3-transition/src/selection/interrupt.js","webpack://d3ml/./node_modules/d3-transition/src/active.js","webpack://d3ml/./node_modules/d3-brush/src/constant.js","webpack://d3ml/./node_modules/d3-brush/src/event.js","webpack://d3ml/./node_modules/d3-brush/src/noevent.js","webpack://d3ml/./node_modules/d3-brush/src/brush.js","webpack://d3ml/./node_modules/d3-chord/src/math.js","webpack://d3ml/./node_modules/d3-chord/src/chord.js","webpack://d3ml/./node_modules/d3-chord/src/array.js","webpack://d3ml/./node_modules/d3-chord/src/constant.js","webpack://d3ml/./node_modules/d3-path/src/path.js","webpack://d3ml/./node_modules/d3-chord/src/ribbon.js","webpack://d3ml/./node_modules/d3-collection/src/map.js","webpack://d3ml/./node_modules/d3-collection/src/nest.js","webpack://d3ml/./node_modules/d3-collection/src/set.js","webpack://d3ml/./node_modules/d3-collection/src/keys.js","webpack://d3ml/./node_modules/d3-collection/src/values.js","webpack://d3ml/./node_modules/d3-collection/src/entries.js","webpack://d3ml/./node_modules/d3-contour/src/array.js","webpack://d3ml/./node_modules/d3-contour/src/ascending.js","webpack://d3ml/./node_modules/d3-contour/src/area.js","webpack://d3ml/./node_modules/d3-contour/src/constant.js","webpack://d3ml/./node_modules/d3-contour/src/contains.js","webpack://d3ml/./node_modules/d3-contour/src/noop.js","webpack://d3ml/./node_modules/d3-contour/src/contours.js","webpack://d3ml/./node_modules/d3-contour/src/blur.js","webpack://d3ml/./node_modules/d3-contour/src/density.js","webpack://d3ml/./node_modules/d3-dsv/src/dsv.js","webpack://d3ml/./node_modules/d3-dsv/src/csv.js","webpack://d3ml/./node_modules/d3-dsv/src/tsv.js","webpack://d3ml/./node_modules/d3-fetch/src/blob.js","webpack://d3ml/./node_modules/d3-fetch/src/buffer.js","webpack://d3ml/./node_modules/d3-fetch/src/text.js","webpack://d3ml/./node_modules/d3-fetch/src/dsv.js","webpack://d3ml/./node_modules/d3-fetch/src/image.js","webpack://d3ml/./node_modules/d3-fetch/src/json.js","webpack://d3ml/./node_modules/d3-fetch/src/xml.js","webpack://d3ml/./node_modules/d3-force/src/center.js","webpack://d3ml/./node_modules/d3-force/src/constant.js","webpack://d3ml/./node_modules/d3-force/src/jiggle.js","webpack://d3ml/./node_modules/d3-quadtree/src/add.js","webpack://d3ml/./node_modules/d3-quadtree/src/cover.js","webpack://d3ml/./node_modules/d3-quadtree/src/quad.js","webpack://d3ml/./node_modules/d3-quadtree/src/x.js","webpack://d3ml/./node_modules/d3-quadtree/src/y.js","webpack://d3ml/./node_modules/d3-quadtree/src/quadtree.js","webpack://d3ml/./node_modules/d3-force/src/collide.js","webpack://d3ml/./node_modules/d3-quadtree/src/data.js","webpack://d3ml/./node_modules/d3-quadtree/src/extent.js","webpack://d3ml/./node_modules/d3-quadtree/src/find.js","webpack://d3ml/./node_modules/d3-quadtree/src/remove.js","webpack://d3ml/./node_modules/d3-quadtree/src/root.js","webpack://d3ml/./node_modules/d3-quadtree/src/size.js","webpack://d3ml/./node_modules/d3-quadtree/src/visit.js","webpack://d3ml/./node_modules/d3-quadtree/src/visitAfter.js","webpack://d3ml/./node_modules/d3-force/src/link.js","webpack://d3ml/./node_modules/d3-force/src/simulation.js","webpack://d3ml/./node_modules/d3-force/src/manyBody.js","webpack://d3ml/./node_modules/d3-force/src/radial.js","webpack://d3ml/./node_modules/d3-force/src/x.js","webpack://d3ml/./node_modules/d3-force/src/y.js","webpack://d3ml/./node_modules/d3-format/src/formatDecimal.js","webpack://d3ml/./node_modules/d3-format/src/exponent.js","webpack://d3ml/./node_modules/d3-format/src/formatSpecifier.js","webpack://d3ml/./node_modules/d3-format/src/formatTrim.js","webpack://d3ml/./node_modules/d3-format/src/formatPrefixAuto.js","webpack://d3ml/./node_modules/d3-format/src/defaultLocale.js","webpack://d3ml/./node_modules/d3-format/src/formatRounded.js","webpack://d3ml/./node_modules/d3-format/src/formatTypes.js","webpack://d3ml/./node_modules/d3-format/src/identity.js","webpack://d3ml/./node_modules/d3-format/src/locale.js","webpack://d3ml/./node_modules/d3-format/src/formatGroup.js","webpack://d3ml/./node_modules/d3-format/src/formatNumerals.js","webpack://d3ml/./node_modules/d3-format/src/precisionFixed.js","webpack://d3ml/./node_modules/d3-format/src/precisionPrefix.js","webpack://d3ml/./node_modules/d3-format/src/precisionRound.js","webpack://d3ml/./node_modules/d3-geo/src/adder.js","webpack://d3ml/./node_modules/d3-geo/src/math.js","webpack://d3ml/./node_modules/d3-geo/src/noop.js","webpack://d3ml/./node_modules/d3-geo/src/stream.js","webpack://d3ml/./node_modules/d3-geo/src/area.js","webpack://d3ml/./node_modules/d3-geo/src/cartesian.js","webpack://d3ml/./node_modules/d3-geo/src/bounds.js","webpack://d3ml/./node_modules/d3-geo/src/centroid.js","webpack://d3ml/./node_modules/d3-geo/src/constant.js","webpack://d3ml/./node_modules/d3-geo/src/compose.js","webpack://d3ml/./node_modules/d3-geo/src/rotation.js","webpack://d3ml/./node_modules/d3-geo/src/circle.js","webpack://d3ml/./node_modules/d3-geo/src/clip/buffer.js","webpack://d3ml/./node_modules/d3-geo/src/pointEqual.js","webpack://d3ml/./node_modules/d3-geo/src/clip/rejoin.js","webpack://d3ml/./node_modules/d3-geo/src/polygonContains.js","webpack://d3ml/./node_modules/d3-geo/src/clip/index.js","webpack://d3ml/./node_modules/d3-geo/src/clip/antimeridian.js","webpack://d3ml/./node_modules/d3-geo/src/clip/circle.js","webpack://d3ml/./node_modules/d3-geo/src/clip/line.js","webpack://d3ml/./node_modules/d3-geo/src/clip/rectangle.js","webpack://d3ml/./node_modules/d3-geo/src/clip/extent.js","webpack://d3ml/./node_modules/d3-geo/src/length.js","webpack://d3ml/./node_modules/d3-geo/src/distance.js","webpack://d3ml/./node_modules/d3-geo/src/contains.js","webpack://d3ml/./node_modules/d3-geo/src/graticule.js","webpack://d3ml/./node_modules/d3-geo/src/interpolate.js","webpack://d3ml/./node_modules/d3-geo/src/path/area.js","webpack://d3ml/./node_modules/d3-geo/src/identity.js","webpack://d3ml/./node_modules/d3-geo/src/path/bounds.js","webpack://d3ml/./node_modules/d3-geo/src/path/centroid.js","webpack://d3ml/./node_modules/d3-geo/src/path/context.js","webpack://d3ml/./node_modules/d3-geo/src/path/measure.js","webpack://d3ml/./node_modules/d3-geo/src/path/string.js","webpack://d3ml/./node_modules/d3-geo/src/path/index.js","webpack://d3ml/./node_modules/d3-geo/src/transform.js","webpack://d3ml/./node_modules/d3-geo/src/projection/fit.js","webpack://d3ml/./node_modules/d3-geo/src/projection/resample.js","webpack://d3ml/./node_modules/d3-geo/src/projection/index.js","webpack://d3ml/./node_modules/d3-geo/src/projection/conic.js","webpack://d3ml/./node_modules/d3-geo/src/projection/conicEqualArea.js","webpack://d3ml/./node_modules/d3-geo/src/projection/cylindricalEqualArea.js","webpack://d3ml/./node_modules/d3-geo/src/projection/albers.js","webpack://d3ml/./node_modules/d3-geo/src/projection/albersUsa.js","webpack://d3ml/./node_modules/d3-geo/src/projection/azimuthal.js","webpack://d3ml/./node_modules/d3-geo/src/projection/azimuthalEqualArea.js","webpack://d3ml/./node_modules/d3-geo/src/projection/azimuthalEquidistant.js","webpack://d3ml/./node_modules/d3-geo/src/projection/mercator.js","webpack://d3ml/./node_modules/d3-geo/src/projection/conicConformal.js","webpack://d3ml/./node_modules/d3-geo/src/projection/equirectangular.js","webpack://d3ml/./node_modules/d3-geo/src/projection/conicEquidistant.js","webpack://d3ml/./node_modules/d3-geo/src/projection/gnomonic.js","webpack://d3ml/./node_modules/d3-geo/src/projection/identity.js","webpack://d3ml/./node_modules/d3-geo/src/projection/naturalEarth1.js","webpack://d3ml/./node_modules/d3-geo/src/projection/orthographic.js","webpack://d3ml/./node_modules/d3-geo/src/projection/stereographic.js","webpack://d3ml/./node_modules/d3-geo/src/projection/transverseMercator.js","webpack://d3ml/./node_modules/d3-hierarchy/src/cluster.js","webpack://d3ml/./node_modules/d3-hierarchy/src/hierarchy/count.js","webpack://d3ml/./node_modules/d3-hierarchy/src/hierarchy/index.js","webpack://d3ml/./node_modules/d3-hierarchy/src/hierarchy/each.js","webpack://d3ml/./node_modules/d3-hierarchy/src/hierarchy/eachAfter.js","webpack://d3ml/./node_modules/d3-hierarchy/src/hierarchy/eachBefore.js","webpack://d3ml/./node_modules/d3-hierarchy/src/hierarchy/sum.js","webpack://d3ml/./node_modules/d3-hierarchy/src/hierarchy/sort.js","webpack://d3ml/./node_modules/d3-hierarchy/src/hierarchy/path.js","webpack://d3ml/./node_modules/d3-hierarchy/src/hierarchy/ancestors.js","webpack://d3ml/./node_modules/d3-hierarchy/src/hierarchy/descendants.js","webpack://d3ml/./node_modules/d3-hierarchy/src/hierarchy/leaves.js","webpack://d3ml/./node_modules/d3-hierarchy/src/hierarchy/links.js","webpack://d3ml/./node_modules/d3-hierarchy/src/array.js","webpack://d3ml/./node_modules/d3-hierarchy/src/pack/enclose.js","webpack://d3ml/./node_modules/d3-hierarchy/src/pack/siblings.js","webpack://d3ml/./node_modules/d3-hierarchy/src/accessors.js","webpack://d3ml/./node_modules/d3-hierarchy/src/constant.js","webpack://d3ml/./node_modules/d3-hierarchy/src/pack/index.js","webpack://d3ml/./node_modules/d3-hierarchy/src/treemap/round.js","webpack://d3ml/./node_modules/d3-hierarchy/src/treemap/dice.js","webpack://d3ml/./node_modules/d3-hierarchy/src/partition.js","webpack://d3ml/./node_modules/d3-hierarchy/src/stratify.js","webpack://d3ml/./node_modules/d3-hierarchy/src/tree.js","webpack://d3ml/./node_modules/d3-hierarchy/src/treemap/slice.js","webpack://d3ml/./node_modules/d3-hierarchy/src/treemap/squarify.js","webpack://d3ml/./node_modules/d3-hierarchy/src/treemap/index.js","webpack://d3ml/./node_modules/d3-hierarchy/src/treemap/binary.js","webpack://d3ml/./node_modules/d3-hierarchy/src/treemap/sliceDice.js","webpack://d3ml/./node_modules/d3-hierarchy/src/treemap/resquarify.js","webpack://d3ml/./node_modules/d3-polygon/src/area.js","webpack://d3ml/./node_modules/d3-polygon/src/centroid.js","webpack://d3ml/./node_modules/d3-polygon/src/cross.js","webpack://d3ml/./node_modules/d3-polygon/src/hull.js","webpack://d3ml/./node_modules/d3-polygon/src/contains.js","webpack://d3ml/./node_modules/d3-polygon/src/length.js","webpack://d3ml/./node_modules/d3-random/src/defaultSource.js","webpack://d3ml/./node_modules/d3-random/src/uniform.js","webpack://d3ml/./node_modules/d3-random/src/normal.js","webpack://d3ml/./node_modules/d3-random/src/logNormal.js","webpack://d3ml/./node_modules/d3-random/src/irwinHall.js","webpack://d3ml/./node_modules/d3-random/src/bates.js","webpack://d3ml/./node_modules/d3-random/src/exponential.js","webpack://d3ml/./node_modules/d3-scale/src/array.js","webpack://d3ml/./node_modules/d3-scale/src/ordinal.js","webpack://d3ml/./node_modules/d3-scale/src/band.js","webpack://d3ml/./node_modules/d3-scale/src/constant.js","webpack://d3ml/./node_modules/d3-scale/src/number.js","webpack://d3ml/./node_modules/d3-scale/src/continuous.js","webpack://d3ml/./node_modules/d3-scale/src/tickFormat.js","webpack://d3ml/./node_modules/d3-scale/src/linear.js","webpack://d3ml/./node_modules/d3-scale/src/identity.js","webpack://d3ml/./node_modules/d3-scale/src/nice.js","webpack://d3ml/./node_modules/d3-scale/src/log.js","webpack://d3ml/./node_modules/d3-scale/src/pow.js","webpack://d3ml/./node_modules/d3-scale/src/quantile.js","webpack://d3ml/./node_modules/d3-scale/src/quantize.js","webpack://d3ml/./node_modules/d3-scale/src/threshold.js","webpack://d3ml/./node_modules/d3-time/src/interval.js","webpack://d3ml/./node_modules/d3-time/src/millisecond.js","webpack://d3ml/./node_modules/d3-time/src/duration.js","webpack://d3ml/./node_modules/d3-time/src/second.js","webpack://d3ml/./node_modules/d3-time/src/minute.js","webpack://d3ml/./node_modules/d3-time/src/hour.js","webpack://d3ml/./node_modules/d3-time/src/day.js","webpack://d3ml/./node_modules/d3-time/src/week.js","webpack://d3ml/./node_modules/d3-time/src/month.js","webpack://d3ml/./node_modules/d3-time/src/year.js","webpack://d3ml/./node_modules/d3-time/src/utcMinute.js","webpack://d3ml/./node_modules/d3-time/src/utcHour.js","webpack://d3ml/./node_modules/d3-time/src/utcDay.js","webpack://d3ml/./node_modules/d3-time/src/utcWeek.js","webpack://d3ml/./node_modules/d3-time/src/utcMonth.js","webpack://d3ml/./node_modules/d3-time/src/utcYear.js","webpack://d3ml/./node_modules/d3-time-format/src/locale.js","webpack://d3ml/./node_modules/d3-time-format/src/defaultLocale.js","webpack://d3ml/./node_modules/d3-time-format/src/isoFormat.js","webpack://d3ml/./node_modules/d3-time-format/src/isoParse.js","webpack://d3ml/./node_modules/d3-scale/src/time.js","webpack://d3ml/./node_modules/d3-scale/src/utcTime.js","webpack://d3ml/./node_modules/d3-scale/src/sequential.js","webpack://d3ml/./node_modules/d3-scale/src/diverging.js","webpack://d3ml/./node_modules/d3-scale-chromatic/src/colors.js","webpack://d3ml/./node_modules/d3-scale-chromatic/src/categorical/category10.js","webpack://d3ml/./node_modules/d3-scale-chromatic/src/categorical/Accent.js","webpack://d3ml/./node_modules/d3-scale-chromatic/src/categorical/Dark2.js","webpack://d3ml/./node_modules/d3-scale-chromatic/src/categorical/Paired.js","webpack://d3ml/./node_modules/d3-scale-chromatic/src/categorical/Pastel1.js","webpack://d3ml/./node_modules/d3-scale-chromatic/src/categorical/Pastel2.js","webpack://d3ml/./node_modules/d3-scale-chromatic/src/categorical/Set1.js","webpack://d3ml/./node_modules/d3-scale-chromatic/src/categorical/Set2.js","webpack://d3ml/./node_modules/d3-scale-chromatic/src/categorical/Set3.js","webpack://d3ml/./node_modules/d3-scale-chromatic/src/ramp.js","webpack://d3ml/./node_modules/d3-scale-chromatic/src/diverging/BrBG.js","webpack://d3ml/./node_modules/d3-scale-chromatic/src/diverging/PRGn.js","webpack://d3ml/./node_modules/d3-scale-chromatic/src/diverging/PiYG.js","webpack://d3ml/./node_modules/d3-scale-chromatic/src/diverging/PuOr.js","webpack://d3ml/./node_modules/d3-scale-chromatic/src/diverging/RdBu.js","webpack://d3ml/./node_modules/d3-scale-chromatic/src/diverging/RdGy.js","webpack://d3ml/./node_modules/d3-scale-chromatic/src/diverging/RdYlBu.js","webpack://d3ml/./node_modules/d3-scale-chromatic/src/diverging/RdYlGn.js","webpack://d3ml/./node_modules/d3-scale-chromatic/src/diverging/Spectral.js","webpack://d3ml/./node_modules/d3-scale-chromatic/src/sequential-multi/BuGn.js","webpack://d3ml/./node_modules/d3-scale-chromatic/src/sequential-multi/BuPu.js","webpack://d3ml/./node_modules/d3-scale-chromatic/src/sequential-multi/GnBu.js","webpack://d3ml/./node_modules/d3-scale-chromatic/src/sequential-multi/OrRd.js","webpack://d3ml/./node_modules/d3-scale-chromatic/src/sequential-multi/PuBuGn.js","webpack://d3ml/./node_modules/d3-scale-chromatic/src/sequential-multi/PuBu.js","webpack://d3ml/./node_modules/d3-scale-chromatic/src/sequential-multi/PuRd.js","webpack://d3ml/./node_modules/d3-scale-chromatic/src/sequential-multi/RdPu.js","webpack://d3ml/./node_modules/d3-scale-chromatic/src/sequential-multi/YlGnBu.js","webpack://d3ml/./node_modules/d3-scale-chromatic/src/sequential-multi/YlGn.js","webpack://d3ml/./node_modules/d3-scale-chromatic/src/sequential-multi/YlOrBr.js","webpack://d3ml/./node_modules/d3-scale-chromatic/src/sequential-multi/YlOrRd.js","webpack://d3ml/./node_modules/d3-scale-chromatic/src/sequential-single/Blues.js","webpack://d3ml/./node_modules/d3-scale-chromatic/src/sequential-single/Greens.js","webpack://d3ml/./node_modules/d3-scale-chromatic/src/sequential-single/Greys.js","webpack://d3ml/./node_modules/d3-scale-chromatic/src/sequential-single/Purples.js","webpack://d3ml/./node_modules/d3-scale-chromatic/src/sequential-single/Reds.js","webpack://d3ml/./node_modules/d3-scale-chromatic/src/sequential-single/Oranges.js","webpack://d3ml/./node_modules/d3-scale-chromatic/src/sequential-multi/cubehelix.js","webpack://d3ml/./node_modules/d3-scale-chromatic/src/sequential-multi/rainbow.js","webpack://d3ml/./node_modules/d3-scale-chromatic/src/sequential-multi/sinebow.js","webpack://d3ml/./node_modules/d3-scale-chromatic/src/sequential-multi/viridis.js","webpack://d3ml/./node_modules/d3-shape/src/constant.js","webpack://d3ml/./node_modules/d3-shape/src/math.js","webpack://d3ml/./node_modules/d3-shape/src/arc.js","webpack://d3ml/./node_modules/d3-shape/src/curve/linear.js","webpack://d3ml/./node_modules/d3-shape/src/point.js","webpack://d3ml/./node_modules/d3-shape/src/line.js","webpack://d3ml/./node_modules/d3-shape/src/area.js","webpack://d3ml/./node_modules/d3-shape/src/descending.js","webpack://d3ml/./node_modules/d3-shape/src/identity.js","webpack://d3ml/./node_modules/d3-shape/src/pie.js","webpack://d3ml/./node_modules/d3-shape/src/curve/radial.js","webpack://d3ml/./node_modules/d3-shape/src/lineRadial.js","webpack://d3ml/./node_modules/d3-shape/src/areaRadial.js","webpack://d3ml/./node_modules/d3-shape/src/pointRadial.js","webpack://d3ml/./node_modules/d3-shape/src/array.js","webpack://d3ml/./node_modules/d3-shape/src/link/index.js","webpack://d3ml/./node_modules/d3-shape/src/symbol/circle.js","webpack://d3ml/./node_modules/d3-shape/src/symbol/cross.js","webpack://d3ml/./node_modules/d3-shape/src/symbol/diamond.js","webpack://d3ml/./node_modules/d3-shape/src/symbol/star.js","webpack://d3ml/./node_modules/d3-shape/src/symbol/square.js","webpack://d3ml/./node_modules/d3-shape/src/symbol/triangle.js","webpack://d3ml/./node_modules/d3-shape/src/symbol/wye.js","webpack://d3ml/./node_modules/d3-shape/src/symbol.js","webpack://d3ml/./node_modules/d3-shape/src/noop.js","webpack://d3ml/./node_modules/d3-shape/src/curve/basis.js","webpack://d3ml/./node_modules/d3-shape/src/curve/basisClosed.js","webpack://d3ml/./node_modules/d3-shape/src/curve/basisOpen.js","webpack://d3ml/./node_modules/d3-shape/src/curve/bundle.js","webpack://d3ml/./node_modules/d3-shape/src/curve/cardinal.js","webpack://d3ml/./node_modules/d3-shape/src/curve/cardinalClosed.js","webpack://d3ml/./node_modules/d3-shape/src/curve/cardinalOpen.js","webpack://d3ml/./node_modules/d3-shape/src/curve/catmullRom.js","webpack://d3ml/./node_modules/d3-shape/src/curve/catmullRomClosed.js","webpack://d3ml/./node_modules/d3-shape/src/curve/catmullRomOpen.js","webpack://d3ml/./node_modules/d3-shape/src/curve/linearClosed.js","webpack://d3ml/./node_modules/d3-shape/src/curve/monotone.js","webpack://d3ml/./node_modules/d3-shape/src/curve/natural.js","webpack://d3ml/./node_modules/d3-shape/src/curve/step.js","webpack://d3ml/./node_modules/d3-shape/src/offset/none.js","webpack://d3ml/./node_modules/d3-shape/src/order/none.js","webpack://d3ml/./node_modules/d3-shape/src/stack.js","webpack://d3ml/./node_modules/d3-shape/src/offset/expand.js","webpack://d3ml/./node_modules/d3-shape/src/offset/diverging.js","webpack://d3ml/./node_modules/d3-shape/src/offset/silhouette.js","webpack://d3ml/./node_modules/d3-shape/src/offset/wiggle.js","webpack://d3ml/./node_modules/d3-shape/src/order/ascending.js","webpack://d3ml/./node_modules/d3-shape/src/order/descending.js","webpack://d3ml/./node_modules/d3-shape/src/order/insideOut.js","webpack://d3ml/./node_modules/d3-shape/src/order/reverse.js","webpack://d3ml/./node_modules/d3-voronoi/src/constant.js","webpack://d3ml/./node_modules/d3-voronoi/src/point.js","webpack://d3ml/./node_modules/d3-voronoi/src/RedBlackTree.js","webpack://d3ml/./node_modules/d3-voronoi/src/Edge.js","webpack://d3ml/./node_modules/d3-voronoi/src/Cell.js","webpack://d3ml/./node_modules/d3-voronoi/src/Circle.js","webpack://d3ml/./node_modules/d3-voronoi/src/Beach.js","webpack://d3ml/./node_modules/d3-voronoi/src/Diagram.js","webpack://d3ml/./node_modules/d3-voronoi/src/voronoi.js","webpack://d3ml/./node_modules/d3-zoom/src/constant.js","webpack://d3ml/./node_modules/d3-zoom/src/transform.js","webpack://d3ml/./node_modules/d3-zoom/src/noevent.js","webpack://d3ml/./node_modules/d3-zoom/src/zoom.js","webpack://d3ml/./node_modules/d3-zoom/src/event.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","defaultOptions","rootNode","width","height","padding","backgroundColor","circleRadius","circleFill","circleStroke","defaultType","defaultTypes","A","B","None","defaultK","defaultClassSelectors","remove","d3ml","settings","settingsGroup","d3","_interopRequireWildcard","_circle","_interopRequireDefault","_defaults","_validator","Visualization","data","options","types","arguments","length","undefined","_classCallCheck","this","initializeOptions","initializeTypes","initializeTypeColorMap","initializeScales","initializeData","createVisualization","clickable","isValidOptions","assign","isValidTypes","typeColorMap","mapTypesToColors","xScale","scaleLinear","domain","min","x","max","range","yScale","y","_this","isValidData","map","mapDataToCircle","containerId","Date","now","appendWrapperContainer","appendSVG","container","createElement","document","querySelector","appendChild","svg","select","concat","append","attr","style","colorScale","scaleOrdinal","schemeSet1","colorMap","reduce","type","fillColor","getFillColor","default","callbacks","_this2","addEventListener","e","clickCallback","_this3","target","newCircle","invert","offsetX","offsetY","forEach","callback","inputId","inputType","_this4","inputChangeCallback","_this5","checked","elementName","attributes","el","setAttribute","childElements","child","labelText","labelAttributes","displayedValue","inputAttributes","span","innerHTML","inputLabel","textContent","input","label","circle","push","selectAll","enter","stroke","fill","radius","cx","cy","cssClass","drawCircles","Circle","distance","_visualization","_knnVisualization","Validator","result","_typeof","Array","isArray","keys","every","val","includes","hasType","validTypes","validKeys","validValues","res","Infinity","k","Number","isInteger","_knn","selectors","rangeK","rangeKLabel","weightedCheckbox","weightedLabel","KNNVisualization","_possibleConstructorReturn","__proto__","getPrototypeOf","knn","appendSettings","addEventListeners","createSettings","createSettingsGroupForK","createSettingsGroupForWeighted","_this$createLabeledIn","createLabeledInput","createSettingsGroup","_this$createLabeledIn2","onClickSvg","svgClickCallback","onChangeInput","inputRangeKChangeCallback","checkboxWeightedChangeCallback","classifiedCircle","getClassifiedCircle","addCircle","boundingCircle","getBoundingCircle","drawConnectingLines","mapClosestNeighborsToConnectingLines","filter","removeElementsAfterTransition","updateIndexRangeKMaximum","weighted","circleType","classify","setType","kClosestNeighbors","setCssClass","x1","x2","y1","y2","strokeWidth","connectingLines","_get","transition","duration","typeColor","selector","that","on","removeElements","_machineLearningAlgorithm","KNN","circles","a","b","Math","sqrt","pow","neighbors","setDistance","calculateDistance","sort","compareDistance","typeDistance","neighbor","inverseDistance","counts","entries","getCircleTypeWeighted","getCircleTypeUnweighted","findKClosestNeighbors","determineCircleType","MachineLearningAlgorithm","ascending","NaN","bisector","compare","f","ascendingComparator","left","lo","hi","mid","right","ascendingBisect","bisectRight","bisectLeft","bisect","pairs","array","pair","cross","values0","values1","i0","i1","value0","n0","n1","values","descending","number","variance","valueof","delta","mean","sum","isNaN","deviation","v","src_extent","array_array","slice","constant","identity","src_range","start","stop","step","ceil","e10","e5","e2","ticks","count","reverse","tickIncrement","isFinite","floor","power","log","LN10","error","tickStep","step0","abs","step1","sturges","LN2","src_histogram","threshold","histogram","xz","x0","tz","shift","pop","bin","bins","_","thresholds","quantile","freedmanDiaconis","scott","src_max","src_mean","median","numbers","src_merge","arrays","merged","j","src_min","permute","indexes","permutes","scan","xi","xj","shuffle","random","src_sum","src_transpose","matrix","transpose_length","transpose","row","zip","array_slice","src_identity","axis_top","axis_right","axis_bottom","axis_left","epsilon","translateX","translateY","entering","__axis","axis_axis","orient","scale","tickArguments","tickValues","tickFormat","tickSizeInner","tickSizeOuter","tickPadding","transform","axis","context","apply","format","spacing","range0","range1","position","bandwidth","offset","round","copy","selection","path","tick","order","tickExit","exit","tickEnter","line","text","merge","insert","getAttribute","parentNode","each","tickSize","axisTop","axisRight","axisBottom","axisLeft","noop","dispatch","Error","Dispatch","set","constructor","typename","T","typenames","trim","split","indexOf","parseTypenames","args","src_dispatch","xhtml","namespaces","xlink","xml","xmlns","namespace","prefix","space","local","creator","fullname","ownerDocument","createElementNS","uri","namespaceURI","documentElement","none","src_selector","selectorAll_empty","selectorAll","querySelectorAll","matcher","matches","matcher_element","vendorMatches","webkitMatchesSelector","msMatchesSelector","mozMatchesSelector","oMatchesSelector","src_matcher","sparse","update","EnterNode","parent","datum","_next","_parent","__data__","insertBefore","next","keyPrefix","bindIndex","group","node","groupLength","dataLength","bindKey","keyValue","nodeByKeyValue","keyValues","sort_ascending","src_window","defaultView","styleValue","getPropertyValue","getComputedStyle","classArray","string","classList","ClassList","_node","_names","classedAdd","names","list","add","classedRemove","join","splice","contains","textRemove","htmlRemove","raise","nextSibling","lower","previousSibling","firstChild","constantNull","removeChild","selection_cloneShallow","cloneNode","selection_cloneDeep","filterEvents","on_event","mouseenter","mouseleave","filterContextListener","listener","index","contextListener","event","related","relatedTarget","compareDocumentPosition","event1","event0","onRemove","__on","removeEventListener","capture","onAdd","wrap","customEvent","sourceEvent","dispatchEvent","params","CustomEvent","createEvent","initEvent","bubbles","cancelable","detail","selection_root","Selection","groups","parents","_groups","_parents","selection_selection","subgroups","subnode","subgroup","match","size","src_constant","enterGroup","updateGroup","previous","_enter","_exit","groups0","groups1","m0","m1","merges","group0","group1","compareNode","sortgroups","sortgroup","nodes","empty","getAttributeNS","removeAttributeNS","removeAttribute","setAttributeNS","priority","removeProperty","setProperty","classed","html","before","clone","deep","on_parseTypenames","src_selection","src_select","src_create","nextId","Local","toString","id","source","current","src_point","ownerSVGElement","createSVGPoint","point","clientX","clientY","matrixTransform","getScreenCTM","inverse","rect","getBoundingClientRect","clientLeft","top","clientTop","mouse","changedTouches","src_selectAll","src_touch","touches","identifier","touch","src_touches","points","nopropagation","stopImmediatePropagation","noevent","preventDefault","nodrag","view","__noselect","MozUserSelect","yesdrag","noclick","setTimeout","d3_drag_src_constant","DragEvent","subject","active","dx","dy","defaultFilter","button","defaultContainer","defaultSubject","defaultTouchable","src_drag","mousedownx","mousedowny","mousemoving","touchending","touchable","gestures","listeners","clickDistance2","drag","mousedowned","touchstarted","touchmoved","touchended","gesture","beforestart","mousemoved","mouseupped","clearTimeout","sublisteners","p0","clickDistance","extend","definition","Color","reI","reN","reP","reHex3","reHex6","reRgbInteger","RegExp","reRgbPercent","reRgbaInteger","reRgbaPercent","reHslPercent","reHslaPercent","named","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","color_color","toLowerCase","exec","Rgb","parseInt","rgbn","rgba","hsla","g","rgbConvert","rgb","opacity","color_rgb","hex","h","Hsl","hsl","hslConvert","hsl2rgb","m2","displayable","brighter","darker","deg2rad","PI","rad2deg","Xn","Yn","Zn","lab_t0","lab_t1","lab_t2","t3","labConvert","Lab","Hcl","cos","sin","z","rgb2lrgb","xyz2lab","lab","lab2xyz","lrgb2rgb","hclConvert","atan2","lch","hcl","C","cubehelix_D","cubehelix_E","ED","EB","BC_DA","cubehelix_cubehelix","Cubehelix","bl","cubehelixConvert","basis","t1","v0","v1","v2","v3","t2","cosh","sinh","src_basis","basisClosed","d3_interpolate_src_constant","linear","color_hue","gamma","nogamma","exponential","rgbGamma","color","end","rgbSpline","spline","colors","rgbBasis","rgbBasisClosed","src_array","nb","na","src_value","src_date","setTime","src_number","src_object","reA","reB","cssNode","cssRoot","cssView","svgNode","src_string","am","bm","bs","bi","lastIndex","q","one","string_zero","src_rgb","valueOf","src_round","degrees","decompose_identity","rotate","skewX","scaleX","scaleY","decompose","atan","interpolateTransform","parse","pxComma","pxParen","degParen","xa","ya","xb","yb","translate","interpolateTransformCss","interpolateTransformSvg","baseVal","consolidate","rho","SQRT2","zoom_cosh","exp","src_zoom","p1","S","ux0","uy0","w0","ux1","uy1","w1","d2","d1","b0","b1","r0","r1","coshr0","u","tanh","zoom_sinh","hsl_hsl","hue","src_hsl","hslLong","lab_lab","hcl_hcl","src_hcl","hclLong","src_cubehelix_cubehelix","cubehelixGamma","cubehelix","src_cubehelix","cubehelixLong","piecewise_piecewise","interpolate","I","taskHead","taskTail","quantize","interpolator","samples","timer_frame","timeout","timer_interval","pokeDelay","clockLast","clockNow","clockSkew","clock","performance","setFrame","requestAnimationFrame","clearNow","Timer","_call","_time","timer","delay","time","restart","timerFlush","wake","t0","sleep","nap","poke","clearInterval","setInterval","TypeError","src_timeout","elapsed","src_interval","total","emptyOn","emptyTween","CREATED","SCHEDULED","STARTING","STARTED","RUNNING","ENDING","ENDED","transition_schedule","timing","schedules","__transition","self","tween","state","ease","schedule_create","schedule_init","schedule","schedule_get","schedule_set","interrupt","tweenValue","_id","transition_interpolate","selection_Selection","transition_id","Transition","_name","src_transition_transition","newId","selection_prototype","linear_linear","quadIn","quadOut","quadInOut","cubicIn","cubicOut","cubicInOut","children","inherit","id0","id1","on0","on1","sit","on_start","onFunction","attrTween","value00","value10","interpolate0","value1","_value","styleTween","style_styleRemove","styleRemoveEnd","style_styleFunction","style_styleConstant","text_textFunction","text_textConstant","removeFunction","tween0","tween1","easeConstant","polyIn","custom","exponent","polyOut","polyInOut","pi","halfPi","sinIn","sinOut","sinInOut","expIn","expOut","expInOut","circleIn","circleOut","circleInOut","bounce_b1","b2","b3","b4","b5","b6","b7","b8","b9","bounce_b0","bounceIn","bounceOut","bounceInOut","backIn","overshoot","backOut","backInOut","tau","elasticIn","asin","amplitude","period","elasticOut","elasticInOut","defaultTiming","transition_inherit","active_root","src_active","d3_brush_src_constant","src_event","noevent_nopropagation","src_noevent","MODE_DRAG","MODE_SPACE","MODE_HANDLE","MODE_CENTER","brush_X","handles","brush_type","output","xy","brush_Y","XY","cursors","overlay","w","nw","ne","se","sw","flipX","flipY","signsX","signsY","brush_defaultFilter","defaultExtent","brush_local","__brush","brush_empty","extent","brushSelection","dim","brushX","brush_brush","brushY","brush","handleSize","initialize","handle","redraw","started","emitter","Emitter","e0","e1","s0","s1","moving","lockX","lockY","metaKey","altKey","signX","signY","W","N","E","shifting","shiftKey","point0","emit","moved","ended","keyCode","move","point1","selection0","selection1","starting","math_pi","math_halfPi","math_tau","math_max","src_chord","padAngle","sortGroups","sortSubgroups","sortChords","chord","groupSums","groupIndex","subgroupIndex","chords","di","dj","a0","a1","subindex","startAngle","endAngle","compareValue","src_array_slice","d3_chord_src_constant","path_pi","path_tau","tauEpsilon","Path","_x0","_y0","_x1","_y1","path_path","moveTo","closePath","lineTo","quadraticCurveTo","bezierCurveTo","arcTo","y0","x21","y21","x01","y01","l01_2","x20","y20","l21_2","l20_2","l21","l01","acos","t01","t21","arc","ccw","cw","da","src_path","defaultSource","defaultTarget","defaultRadius","defaultStartAngle","defaultEndAngle","src_ribbon","ribbon","buffer","argv","sr","sa0","sa1","sx0","sy0","tr","ta0","ta1","Map","map_map","has","clear","src_map","src_nest","sortValues","rollup","nest","sortKeys","depth","createResult","setResult","valuesByKey","createObject","setObject","createMap","setMap","sortKey","Set","proto","set_set","src_set","src_keys","src_values","src_entries","d3_contour_src_array_slice","src_ascending","src_area","ring","area","d3_contour_src_constant","hole","ringContains","yi","pj","yj","segmentContains","collinear","within","src_noop","cases","src_contours","smooth","smoothLinear","contours","contour","polygons","holes","fragmentByStart","fragmentByEnd","stitch","startIndex","endIndex","unshift","isorings","polygon","coordinates","xt","yt","_0","_1","blurX","blurY","defaultX","defaultY","defaultWeight","src_density","weight","density","Float32Array","wi","geometry","transformPolygon","transformRing","transformPoint","resize","cellSize","EOL","EOF","QUOTE","NEWLINE","RETURN","objectConverter","columns","Function","JSON","stringify","dsv","delimiter","reFormat","DELIMITER","charCodeAt","parseRows","rows","eof","eol","token","replace","formatRow","formatValue","test","convert","customConverter","columnSet","column","inferColumns","formatRows","csv","csvParse","csvParseRows","csvFormat","csvFormatRows","tsv","tsvParse","tsvParseRows","tsvFormat","tsvFormatRows","responseBlob","response","ok","status","statusText","blob","init","fetch","then","responseArrayBuffer","arrayBuffer","src_buffer","responseText","src_text","dsvParse","dsv_dsv","dsv_csv","dsv_tsv","src_image","Promise","resolve","reject","image","Image","onerror","onload","src","responseJson","json","parser","DOMParser","parseFromString","xml_html","src_center","force","sx","sy","d3_force_src_constant","jiggle","add_add","tree","xm","ym","xp","yp","bottom","_root","leaf","_x","_y","src_quad","x_defaultX","y_defaultY","quadtree","Quadtree","addAll","leaf_copy","treeProto","collide_x","vx","collide_y","vy","cover","yz","visit","find","x3","y3","quads","retainer","removeAll","visitAfter","collide","radii","strength","iterations","ri","ri2","prepare","quad","rj","link_index","link_find","nodeById","nodeId","links","strengths","distances","bias","link","alpha","initializeStrength","initializeDistance","simulation_x","simulation_y","initialRadius","initialAngle","src_simulation","simulation","alphaMin","alphaDecay","alphaTarget","velocityDecay","forces","stepper","fx","fy","initializeNodes","angle","initializeForce","closest","distanceMin2","distanceMax2","theta2","accumulate","distanceMin","distanceMax","theta","radial","radiuses","d3_force_src_x","d3_force_src_y","formatDecimal","toExponential","coefficient","src_exponent","re","formatSpecifier","specifier","FormatSpecifier","align","sign","symbol","zero","comma","precision","prefixExponent","defaultLocale_locale","defaultLocale_format","defaultLocale_formatPrefix","formatTrim","out","formatRounded","formatTypes","%","toFixed","toPrecision","X","toUpperCase","d3_format_src_identity","prefixes","src_locale","locale","grouping","thousands","substring","formatGroup","currency","decimal","numerals","formatNumerals","percent","newFormat","suffix","formatType","maybeSuffix","valuePrefix","valueSuffix","valueNegative","formatPrefix","defaultLocale","precisionFixed","precisionPrefix","precisionRound","adder","Adder","reset","adder_add","temp","bv","av","math_epsilon","src_math_pi","src_math_halfPi","quarterPi","src_math_tau","math_degrees","radians","math_cos","math_sin","math_sign","haversin","noop_noop","streamGeometry","stream","streamGeometryType","streamObjectType","Feature","FeatureCollection","features","Sphere","sphere","Point","MultiPoint","LineString","streamLine","MultiLineString","Polygon","streamPolygon","MultiPolygon","GeometryCollection","geometries","closed","coordinate","lineStart","lineEnd","polygonStart","polygonEnd","area_lambda00","phi00","area_lambda0","area_cosPhi0","area_sinPhi0","src_stream","areaRingSum","areaSum","areaStream","areaRingStart","areaRingEnd","areaRing","areaPointFirst","areaPoint","lambda","phi","dLambda","sdLambda","adLambda","cosPhi","sinPhi","d3_geo_src_area","cartesian_spherical","cartesian","cartesian_cartesian","spherical","cartesianDot","cartesianCross","cartesianAddInPlace","cartesianScale","vector","cartesianNormalizeInPlace","bounds_lambda0","bounds_phi0","bounds_lambda1","bounds_phi1","bounds_lambda2","bounds_lambda00","bounds_phi00","bounds_p0","ranges","bounds_range","deltaSum","boundsStream","boundsPoint","boundsLineStart","boundsLineEnd","boundsRingPoint","boundsRingStart","boundsRingEnd","bounds_linePoint","normal","inflection","phii","lambdai","antimeridian","bounds_angle","lambda0","lambda1","rangeCompare","rangeContains","W0","W1","centroid_X0","centroid_Y0","Z0","centroid_X1","centroid_Y1","Z1","X2","Y2","Z2","centroid_lambda00","centroid_phi00","centroid_x0","centroid_y0","z0","bounds","feature","deltaMax","centroidStream","centroidPoint","centroidLineStart","centroidLineEnd","centroidRingStart","centroidRingEnd","centroidPointCartesian","centroidLinePointFirst","centroidLinePoint","centroidRingPointFirst","centroidRingPoint","cz","d3_geo_src_constant","compose","rotationIdentity","rotateRadians","deltaLambda","deltaPhi","deltaGamma","rotationLambda","rotationPhiGamma","forwardRotationLambda","rotation","cosDeltaPhi","sinDeltaPhi","cosDeltaGamma","sinDeltaGamma","src_rotation","forward","circleStream","direction","cosRadius","sinRadius","src_circle","center","clip_buffer","lines","rejoin","pointEqual","Intersection","other","entry","segments","compareIntersection","startInside","clip","segment","rejoin_link","isSubject","polygonContains_sum","polygonContains","winding","phi0","sinPhi0","cosPhi0","sinPhi1","cosPhi1","phi1","absDelta","intersection","phiArc","src_clip","pointVisible","clipLine","sink","ringBuffer","ringSink","polygonStarted","pointRing","ringStart","ringEnd","clip_compareIntersection","pointLine","clean","ringSegments","validSegment","sign0","sign1","sinLambda0Lambda1","clipAntimeridianIntersect","from","to","clip_circle","cr","smallRadius","notHemisphere","visible","intersect","two","n2","n2n2","n1n2","determinant","c1","c2","n1xn2","uu","polar","q1","code","c0","v00","point2","clip_line","ax","ay","clipMax","clipMin","clipRectangle","corner","comparePoint","ca","cb","x__","y__","v__","x_","y_","v_","first","activeStream","bufferStream","clipStream","linePoint","polygonInside","cleanInside","length_lambda0","length_sinPhi0","length_cosPhi0","clip_extent","cache","cacheStream","lengthSum","lengthStream","lengthPointFirst","lengthLineEnd","lengthPoint","cosDelta","src_length","distance_coordinates","distance_object","src_distance","containsObjectType","containsGeometry","containsGeometryType","containsPoint","containsLine","containsPolygon","ab","ringRadians","pointRadians","src_contains","graticuleX","graticuleY","graticule_graticule","X1","X0","Y1","Y0","Y","DX","DY","graticule","outline","extentMajor","extentMinor","stepMajor","stepMinor","graticule10","area_x00","area_y00","area_x0","area_y0","src_interpolate","cy0","cy1","sy1","kx0","ky0","kx1","ky1","d3_geo_src_identity","area_areaSum","area_areaRingSum","area_areaStream","area_areaRingStart","area_areaRingEnd","area_areaPointFirst","area_areaPoint","path_area","bounds_x0","bounds_y0","bounds_x1","bounds_y1","centroid_x00","centroid_y00","path_centroid_x0","path_centroid_y0","path_bounds","path_centroid_X0","path_centroid_Y0","centroid_Z0","path_centroid_X1","path_centroid_Y1","centroid_Z1","centroid_X2","centroid_Y2","centroid_Z2","centroid_centroidStream","centroid_centroidPoint","centroid_centroidLineStart","centroid_centroidLineEnd","centroid_centroidRingStart","centroid_centroidRingEnd","centroid","centroidPointFirstLine","centroidPointLine","centroidPointFirstRing","centroidPointRing","path_centroid","PathContext","_context","_radius","pointRadius","_line","_point","lengthRing","measure_x00","measure_y00","measure_x0","measure_y0","measure_lengthSum","measure_lengthStream","measure_lengthPointFirst","measure_lengthPoint","measure","PathString","_string","string_circle","projection","projectionStream","contextStream","src_transform","methods","transformer","TransformStream","fit","fitBounds","clipExtent","fitExtent","fitSize","fitWidth","fitHeight","maxDepth","cosMinDistance","resample","project","delta2","resampleLineTo","phi2","lambda2","dx2","dy2","dz","lambda00","x00","y00","a00","b00","c00","resampleStream","ringPoint","resample_resample","resampleNone","transformRadians","scaleTranslateRotate","cosAlpha","sinAlpha","ai","ci","fi","projection_projection","projectionMutator","projectAt","projectResample","projectTransform","projectRotateTransform","preclip","clip_antimeridian","postclip","recenter","transformRotate","clipAngle","conicProjection","parallels","conicEqualAreaRaw","cylindricalEqualAreaRaw","r0y","conicEqualArea","albers","projection_albersUsa","lower48Point","alaskaPoint","hawaiiPoint","lower48","alaska","hawaii","pointStream","albersUsa","streams","multiplex","azimuthalRaw","azimuthalInvert","sc","cc","azimuthalEqualAreaRaw","cxcy","azimuthalEqualArea","azimuthalEquidistantRaw","azimuthalEquidistant","mercatorRaw","mercator","mercatorProjection","reclip","tany","conicConformalRaw","conicConformal","equirectangularRaw","equirectangular","conicEquidistantRaw","gy","nx","conicEquidistant","gnomonicRaw","gnomonic","identity_scaleTranslate","kx","ky","tx","ty","projection_identity","reflectX","reflectY","naturalEarth1Raw","phi4","naturalEarth1","orthographicRaw","orthographic","stereographicRaw","stereographic","transverseMercatorRaw","transverseMercator","defaultSeparation","meanXReduce","maxYReduce","cluster","separation","nodeSize","previousNode","eachAfter","meanX","maxY","leafLeft","leafRight","count_count","hierarchy","childs","Node","valued","defaultChildren","eachBefore","computeHeight","copyData","ancestor","aNodes","ancestors","bNodes","leastCommonAncestor","descendants","leaves","d3_hierarchy_src_array_slice","enclose","array_shuffle","enclosesWeak","encloseBasis","extendBasis","enclosesWeakAll","enclosesNot","encloseBasis2","encloseBasis3","dr","encloseBasis1","r2","r21","r3","a2","a3","c3","place","intersects","score","siblings_Node","packEnclose","aa","sj","sk","pack","siblings","required","constantZero","d3_hierarchy_src_constant","pack_defaultRadius","src_pack","radiusLeaf","packChildren","translateChild","optional","treemap_round","dice","src_partition","partition","positionNode","stratify_keyPrefix","preroot","ambiguous","defaultId","defaultParentId","parentId","stratify","nodeKey","nodeByKey","tree_defaultSeparation","nextLeft","nextRight","moveSubtree","wm","wp","change","nextAncestor","vim","TreeNode","src_tree","treeRoot","firstWalk","secondWalk","sizeNode","executeShifts","midpoint","vip","vop","vom","sip","sop","sim","som","apportion","treemap_slice","squarify_phi","squarifyRatio","ratio","nodeValue","sumValue","minValue","maxValue","newRatio","minRatio","beta","squarify","src_treemap","tile","paddingStack","paddingInner","paddingTop","paddingRight","paddingBottom","paddingLeft","treemap","paddingOuter","binary","sums","valueOffset","valueTarget","valueLeft","valueRight","xk","yk","sliceDice","treemap_resquarify","resquarify","_squarify","d3_polygon_src_area","d3_polygon_src_centroid","src_cross","lexicographicOrder","computeUpperHullIndexes","hull","sortedPoints","flippedPoints","upperIndexes","lowerIndexes","skipLeft","skipRight","d3_polygon_src_contains","inside","d3_polygon_src_length","perimeter","src_defaultSource","uniform","sourceRandomUniform","randomUniform","src_normal","sourceRandomNormal","randomNormal","mu","sigma","logNormal","sourceRandomLogNormal","randomLogNormal","irwinHall","sourceRandomIrwinHall","randomIrwinHall","bates","sourceRandomBates","randomBates","src_exponential","sourceRandomExponential","randomExponential","d3_scale_src_array_array","array_map","d3_scale_src_array_slice","implicit","ordinal","unknown","band","ordinalRange","rescale","rangeRound","band_point","pointish","d3_scale_src_constant","d3_scale_src_number","unit","deinterpolateLinear","bimap","deinterpolate","reinterpolate","d0","polymap","clamp","continuous","piecewise","deinterpolateClamp","reinterpolateClamp","src_tickFormat","linearish","nice","src_linear_linear","identity_identity","interval","log_deinterpolate","log_reinterpolate","pow10","powp","base","logp","log10","log2","reflect","log_log","logs","pows","pow_raise","pow_pow","pow_sqrt","quantile_quantile","invertExtent","quantiles","quantize_quantize","threshold_threshold","interval_t0","interval_t1","newInterval","floori","offseti","field","date","millisecond_millisecond","src_millisecond","milliseconds","durationMinute","durationWeek","second_second","getUTCSeconds","seconds","minute_minute","getMinutes","minutes","hour_hour","getTimezoneOffset","getHours","src_hour","hours","day_day","setHours","setDate","getDate","src_day","days","weekday","getDay","sunday","monday","tuesday","wednesday","thursday","friday","saturday","sundays","mondays","tuesdays","wednesdays","thursdays","fridays","saturdays","month_month","setMonth","getMonth","getFullYear","src_month","months","year_year","setFullYear","src_year","years","utcMinute","setUTCSeconds","getUTCMinutes","src_utcMinute","utcMinutes","utcHour","setUTCMinutes","getUTCHours","src_utcHour","utcHours","utcDay","setUTCHours","setUTCDate","getUTCDate","utcDays","utcWeekday","getUTCDay","utcSunday","utcMonday","utcTuesday","utcWednesday","utcThursday","utcFriday","utcSaturday","utcSundays","utcMondays","utcTuesdays","utcWednesdays","utcThursdays","utcFridays","utcSaturdays","utcMonth","setUTCMonth","getUTCMonth","getUTCFullYear","src_utcMonth","utcMonths","utcYear","setUTCFullYear","src_utcYear","utcYears","localDate","H","M","L","utcDate","UTC","newYear","formatLocale","locale_dateTime","dateTime","locale_date","locale_time","locale_periods","periods","locale_weekdays","locale_shortWeekdays","shortDays","locale_months","locale_shortMonths","shortMonths","periodRe","formatRe","periodLookup","formatLookup","weekdayRe","weekdayLookup","shortWeekdayRe","shortWeekdayLookup","monthRe","monthLookup","shortMonthRe","shortMonthLookup","formats","formatDayOfMonth","formatMicroseconds","formatHour24","formatHour12","formatDayOfYear","formatMilliseconds","formatMonthNumber","formatMinutes","Q","formatUnixTimestamp","formatUnixTimestampSeconds","formatSeconds","formatWeekdayNumberMonday","U","formatWeekNumberSunday","V","formatWeekNumberISO","formatWeekdayNumberSunday","formatWeekNumberMonday","locale_formatYear","formatFullYear","Z","formatZone","formatLiteralPercent","utcFormats","formatUTCDayOfMonth","formatUTCMicroseconds","formatUTCHour24","formatUTCHour12","formatUTCDayOfYear","formatUTCMilliseconds","formatUTCMonthNumber","formatUTCMinutes","formatUTCSeconds","formatUTCWeekdayNumberMonday","formatUTCWeekNumberSunday","formatUTCWeekNumberISO","formatUTCWeekdayNumberSunday","formatUTCWeekNumberMonday","formatUTCYear","formatUTCFullYear","formatUTCZone","parses","parseSpecifier","parseDayOfMonth","parseMicroseconds","parseHour24","parseDayOfYear","parseMilliseconds","parseMonthNumber","parseMinutes","parseUnixTimestamp","parseUnixTimestampSeconds","parseSeconds","parseWeekdayNumberMonday","parseWeekNumberSunday","parseWeekNumberISO","parseWeekdayNumberSunday","parseWeekNumberMonday","parseYear","parseFullYear","parseZone","parseLiteralPercent","pad","pads","charAt","newParse","newDate","week","day","src_utcDay","utcFormat","utcParse","src_defaultLocale_locale","timeFormat","timeParse","-","0","numberRe","percentRe","requoteRe","requote","getMilliseconds","getSeconds","getUTCMilliseconds","dow","defaultLocale_defaultLocale","isoFormat","toISOString","isoParse","time_durationSecond","time_durationMinute","time_durationHour","time_durationDay","time_durationWeek","durationMonth","durationYear","time_date","time_number","calendar","year","month","hour","minute","second","millisecond","formatMillisecond","formatSecond","formatMinute","formatHour","formatDay","formatWeek","formatMonth","formatYear","tickIntervals","tickInterval","src_time","src_minute","src_second","utcTime","sequential","k10","diverging","k21","src_colors","category10","Accent","Dark2","Paired","Pastel1","Pastel2","Set1","Set2","Set3","ramp","scheme","BrBG_scheme","BrBG","PRGn_scheme","PRGn","PiYG_scheme","PiYG","PuOr_scheme","PuOr","RdBu_scheme","RdBu","RdGy_scheme","RdGy","RdYlBu_scheme","RdYlBu","RdYlGn_scheme","RdYlGn","Spectral_scheme","Spectral","BuGn_scheme","BuGn","BuPu_scheme","BuPu","GnBu_scheme","GnBu","OrRd_scheme","OrRd","PuBuGn_scheme","PuBuGn","PuBu_scheme","PuBu","PuRd_scheme","PuRd","RdPu_scheme","RdPu","YlGnBu_scheme","YlGnBu","YlGn_scheme","YlGn","YlOrBr_scheme","YlOrBr","YlOrRd_scheme","YlOrRd","Blues_scheme","Blues","Greens_scheme","Greens","Greys_scheme","Greys","Purples_scheme","Purples","Reds_scheme","Reds","Oranges_scheme","Oranges","sequential_multi_cubehelix","warm","cool","rainbow_c","rainbow","ts","sinebow_c","pi_1_3","pi_2_3","sinebow","viridis_ramp","magma","inferno","plasma","d3_shape_src_constant","math_abs","math_atan2","src_math_cos","src_math_max","math_min","src_math_sin","math_sqrt","src_math_epsilon","d3_shape_src_math_pi","d3_shape_src_math_halfPi","d3_shape_src_math_tau","math_asin","arcInnerRadius","innerRadius","arcOuterRadius","outerRadius","arcStartAngle","arcEndAngle","arcPadAngle","cornerTangents","rc","ox","oy","x11","y11","x10","y10","D","cx0","cx1","dx0","dy0","dx1","dy1","src_arc","cornerRadius","padRadius","a01","a11","a10","da0","da1","ap","rp","rc0","rc1","oc","x32","y32","arc_intersect","bx","by","kc","math_acos","lc","Linear","areaStart","areaEnd","curve_linear","point_x","point_y","defined","curve","defined0","d3_shape_src_area","x0z","y0z","arealine","src_line","lineX0","lineY0","lineY1","lineX1","src_descending","d3_shape_src_identity","src_pie","pie","arcs","pa","curveRadialLinear","curveRadial","Radial","_curve","lineRadial","src_lineRadial","lineStartAngle","lineEndAngle","lineInnerRadius","lineOuterRadius","pointRadial","d3_shape_src_array_slice","linkSource","linkTarget","link_link","curveHorizontal","curveVertical","link_curveRadial","p2","p3","linkHorizontal","linkVertical","linkRadial","symbol_circle","draw","symbol_cross","tan30","tan30_2","diamond","kr","star_kx","star_ky","star","square","sqrt3","triangle","wye_s","wye_k","wye_a","wye","symbols","src_symbol","d3_shape_src_noop","basis_point","Basis","curve_basis","BasisClosed","_x2","_x3","_x4","_y2","_y3","_y4","curve_basisClosed","BasisOpen","basisOpen","Bundle","_basis","_beta","curve_bundle","bundle","cardinal_point","_k","Cardinal","tension","cardinal","CardinalClosed","_x5","_y5","cardinalClosed","CardinalOpen","cardinalOpen","catmullRom_point","_l01_a","_l01_2a","_l12_a","_l12_2a","_l23_a","_l23_2a","CatmullRom","_alpha","x23","y23","curve_catmullRom","catmullRom","CatmullRomClosed","catmullRomClosed","CatmullRomOpen","catmullRomOpen","LinearClosed","linearClosed","monotone_sign","slope3","h0","h1","slope2","monotone_point","MonotoneX","MonotoneY","ReflectContext","monotoneX","monotoneY","Natural","controlPoints","_t0","px","py","natural","Step","_t","curve_step","stepBefore","stepAfter","offset_none","series","order_none","stackValue","src_stack","stack","oz","kz","sz","sij","ki","si","expand","offset_diverging","yn","silhouette","wiggle","s2","sij0","s3","order_ascending","ascending_sum","order_descending","insideOut","tops","bottoms","order_reverse","d3_voronoi_src_constant","src_point_x","src_point_y","RedBlackTree","RedBlackNode","R","P","RedBlackRotateLeft","RedBlackRotateRight","RedBlackFirst","after","grandpa","uncle","sibling","src_RedBlackTree","createEdge","edge","Diagram_edges","setEdgeEnd","cells","halfedges","createBorderEdge","vertex","clipEdge","connectEdge","fm","fb","lx","ly","rx","ry","cellHalfedgeAngle","cell","site","va","vb","cellHalfedgeStart","cellHalfedgeEnd","firstCircle","circlePool","attachCircle","lArc","rArc","lSite","cSite","rSite","Diagram_epsilon2","ha","hc","Diagram_circles","detachCircle","beachPool","createBeach","beach","detachBeach","beaches","removeBeach","disappearing","Diagram_epsilon","iArc","nArcs","addBeach","dxl","dxr","directrix","leftBreakPoint","rightBreakPoint","createCell","newArc","hb","rfocx","rfocy","pby2","lfocx","lfocy","plby2","hl","aby2","triangleArea","lexicographic","Diagram","sites","sortCellHalfedges","clipEdges","iCell","iHalfedge","nHalfedges","startX","startY","endX","endY","nCells","dc","v01","v11","v10","clipCells","edges","triangles","_found","src_voronoi","voronoi","d3_zoom_src_constant","Transform","applyX","applyY","location","invertX","invertY","rescaleX","rescaleY","transform_identity","transform_transform","__zoom","src_noevent_nopropagation","d3_zoom_src_noevent","zoom_defaultFilter","zoom_defaultExtent","SVGElement","clientWidth","clientHeight","defaultTransform","defaultWheelDelta","deltaY","deltaMode","zoom_defaultTouchable","defaultConstrain","translateExtent","d3_zoom_src_zoom","touchstarting","constrain","wheelDelta","scaleExtent","touchDelay","wheelDelay","zoom","wheeled","dblclicked","Gesture","wheel","k1","touch0","touch1","l0","l1","dp","dl","collection","scaleBy","scaleTo","translateBy","translateTo"],"mappings":"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","file":"d3ml.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"d3ml\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"d3ml\"] = factory();\n\telse\n\t\troot[\"d3ml\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n","const defaultOptions = {\n  rootNode: 'body',\n  width: 500,\n  height: 300,\n  padding: 50,\n  backgroundColor: '#1d1e22',\n  circleRadius: 5,\n  circleFill: 'grey',\n  circleStroke: 'white'\n};\nconst defaultType = 'None';\n\nconst defaultTypes = {\n  A: 'A',\n  B: 'B',\n  None: 'None'\n};\n\nconst defaultK = 3;\n\nconst defaultClassSelectors = {\n  remove: 'remove',\n  d3ml: 'd3ml',\n  settings: 'd3ml__settings',\n  settingsGroup: 'd3ml__settings__group'\n};\n\nexport default {\n  defaultOptions,\n  defaultType,\n  defaultTypes,\n  defaultK,\n  defaultClassSelectors\n};\n","import * as d3 from 'd3';\nimport Circle from './circle';\nimport { defaultOptions, defaultType, defaultClassSelectors } from './defaults';\nimport { isValidOptions, isValidTypes, isValidData } from './validator';\n\nexport default class Visualization {\n  constructor(data, options, types = [defaultType]) {\n    this.initializeOptions(options);\n    this.initializeTypes(types);\n    this.initializeTypeColorMap(this.types);\n    this.initializeScales(data, this.options);\n    this.initializeData(data, types);\n\n    this.createVisualization();\n    this.clickable = true;\n  }\n  initializeOptions(options) {\n    if (!isValidOptions(options)) {\n      options = {};\n    }\n    this.options = Object.assign({}, defaultOptions, options);\n  }\n  initializeTypes(types) {\n    if (!isValidTypes(types)) {\n      types = [];\n    }\n    this.types = types;\n  }\n  initializeTypeColorMap(types) {\n    this.typeColorMap = this.mapTypesToColors(types);\n  }\n  initializeScales(data, options) {\n    this.xScale = d3.scaleLinear()\n      .domain([\n        d3.min(data, function (d) { return d.x; }) - options.padding,\n        d3.max(data, function (d) { return d.x; }) + options.padding\n      ])\n      .range([0, options.width]);\n\n    this.yScale = d3.scaleLinear()\n      .domain([\n        d3.min(data, function (d) { return d.y; }) - options.padding,\n        d3.max(data, function (d) { return d.y; }) + options.padding\n      ])\n      .range([0, options.height]);\n  }\n  initializeData(data, types) {\n    if (!isValidData(data, types)) {\n      this.data = [];\n    } else {\n      this.data = data.map(d => this.mapDataToCircle(d));\n    }\n  }\n  createVisualization() {\n    this.containerId = defaultClassSelectors.d3ml + Date.now();\n    this.appendWrapperContainer();\n    this.appendSVG();\n  }\n  appendWrapperContainer() {\n    const container = this.createElement('div', [['class', defaultClassSelectors.d3ml], ['id', this.containerId]]);\n    const rootNode = document.querySelector(this.options.rootNode);\n    rootNode.appendChild(container);\n  }\n  appendSVG() {\n    this.svg = d3.select(`#${this.containerId}`)\n      .append('svg')\n      .attr('width', this.options.width)\n      .attr('height', this.options.height)\n      .style('background-color', this.options.backgroundColor);\n  }\n  mapTypesToColors(types) {\n    const colorScale = d3.scaleOrdinal(d3.schemeSet1);\n\n    const colorMap = types.reduce((map, type) => {\n      map[type] = colorScale(type);\n\n      return map;\n    }, {});\n    colorMap[defaultType] = colorScale(defaultType);\n\n    return colorMap;\n  }\n  getFillColor(data) {\n    return !!data && data.type && this.typeColorMap.hasOwnProperty(data.type) ?\n      this.typeColorMap[data.type] : this.options.circleFill;\n  }\n  mapDataToCircle(data) {\n    const fillColor = this.getFillColor(data);\n\n    return new Circle(\n      this.xScale(data.x),\n      this.yScale(data.y),\n      this.options.circleRadius,\n      fillColor,\n      this.options.circleStroke,\n      data.type);\n  }\n  onClickSvg(callbacks) {\n    document.querySelector(`#${this.containerId} svg`).addEventListener('click', (e) => {\n      this.clickCallback(e, callbacks);\n    });\n  }\n  clickCallback(e, callbacks) {\n    if (!!e.target && this.clickable) {\n      const newCircle = this.mapDataToCircle({x: this.xScale.invert(e.offsetX), y: this.yScale.invert(e.offsetY)});\n      callbacks.forEach(callback => {\n        callback.call(this, newCircle);\n      });\n    }\n  }\n  onChangeInput(inputId, inputType, callbacks) {\n    document.querySelector(`#${inputId}`).addEventListener('change', (e) => {\n      this.inputChangeCallback(e, inputType, callbacks);\n    });\n  }\n  inputChangeCallback(e, inputType, callbacks) {\n    if (e.target) {\n      const value = inputType === 'checkbox' ? e.target.checked : e.target.value;\n      callbacks.forEach(callback => {\n        callback.call(this, value);\n      });\n    }\n  }\n  createElement(elementName, attributes = []) {\n    const el = document.createElement(elementName);\n    attributes.forEach(attr => {\n      el.setAttribute(attr[0], attr[1]);\n    });\n\n    return el;\n  }\n  createSettingsGroup(childElements) {\n    const settingsGroup = this.createElement('div', [['class', defaultClassSelectors.settingsGroup]]);\n    childElements.forEach(child => {\n      settingsGroup.append(child);\n    });\n\n    return settingsGroup;\n  }\n  createLabeledInput(labelText, labelAttributes, displayedValue, inputAttributes) {\n    const span = this.createElement('span');\n    span.innerHTML = displayedValue;\n\n    const inputLabel = this.createElement('label', labelAttributes);\n    inputLabel.textContent = labelText;\n\n    const input = this.createElement('input', inputAttributes);\n    inputLabel.appendChild(span);\n\n    return {label: inputLabel, input};\n  }\n  addCircle(circle) {\n    this.data.push(circle);\n  }\n  drawCircles() {\n    this.svg.selectAll('circle')\n      .data(this.data)\n      .enter().append('circle')\n      .style('stroke', function (d) { return d.stroke; })\n      .style('fill', function (d) { return d.fill; })\n      .attr('r', function (d) { return d.radius; })\n      .attr('cx', function (d) { return d.cx; })\n      .attr('cy', function (d) { return d.cy; })\n      .attr('class', function (d) { return d.cssClass ? d.cssClass : ''; });\n  }\n  draw() {\n    this.drawCircles();\n  }\n}\n","import { defaultType, defaultOptions } from './defaults';\n\nexport default class Circle {\n  constructor(cx,\n              cy,\n              radius = defaultOptions.circleRadius,\n              fill = defaultOptions.circleFill,\n              stroke = defaultOptions.circleStroke,\n              type = defaultType\n  ) {\n    this.cx = cx;\n    this.cy = cy;\n    this.radius = radius;\n    this.fill = fill;\n    this.stroke = stroke;\n    this.type = type;\n    this.distance = null;\n    this.cssClass = null;\n  }\n  setType(type) {\n    this.type = type;\n  }\n  setDistance(distance) {\n    this.distance = distance;\n  }\n  setCssClass(value) {\n    this.cssClass = value;\n  }\n}\n","import Visualization from './visualization/visualization';\nimport KNNVisualization from './visualization/knn-visualization';\n\nexport {\n  Visualization,\n  KNNVisualization\n};\n","import {defaultOptions} from './defaults';\n\nexport default class Validator {\n  static isValidOptions(options) {\n    let result = false;\n    if (!!options &&\n      typeof options === 'object' &&\n      !Array.isArray(options) &&\n      Object.keys(options).every(val => Object.keys(defaultOptions).includes(val))\n    ) {\n      result = true;\n    }\n\n    return result;\n  }\n  static isValidData(data, types) {\n    let result = false;\n    if (!!data && Array.isArray(data) && data.length > 0) {\n      result = data.every(d => {\n        if (!d) {\n          return false;\n        }\n        let keys = ['x', 'y'];\n        let hasType = false;\n        if (!!types && Array.isArray(types) && types.length > 0) {\n          keys.push('type');\n          hasType = true;\n        }\n        const validTypes = hasType ? Object.keys(d).includes('type') : !Object.keys(d).includes('type');\n        const validKeys = keys.every(key => Object.keys(d).includes(key));\n        const validValues = keys.every(key => {\n          let res;\n          const val = d[key];\n          if (key === 'x' || key === 'y') {\n            res = !!val && typeof val === 'number' && val !== Infinity && val !== -Infinity;\n          } else if (key === 'type') {\n            res = !!val && types.includes(val);\n          }\n\n          return res;\n        });\n\n        return validKeys && validValues && validTypes;\n      });\n    }\n\n    return result;\n  }\n  static isValidTypes(types) {\n    let result = false;\n    if (!!types && Array.isArray(types) && types.every(t => typeof t === 'number' || typeof t === 'string')) {\n      result = true;\n    }\n\n    return result;\n  }\n  static isValidK(k) {\n    let result = false;\n    if (!!k && Number.isInteger(k) && k > 0) {\n      result = true;\n    }\n\n    return result;\n  }\n}\n","import Circle from './circle';\nimport {defaultK, defaultType, defaultClassSelectors} from './defaults';\nimport Visualization from './visualization';\nimport KNN from '../algorithms/knn';\n\nconst selectors = {\n  id: {\n    rangeK: 'range-k',\n    rangeKLabel: 'range-k-label',\n    weightedCheckbox: 'weighted',\n    weightedLabel: 'weighted-label'\n  }\n};\n\nexport default class KNNVisualization extends Visualization {\n  constructor(data, options, types, k = defaultK) {\n    super(data, options, types);\n    this.knn = new KNN(this.data, types, k);\n\n    this.appendSettings();\n    this.addEventListeners();\n  }\n  appendSettings() {\n    document.querySelector(`#${this.containerId}`).appendChild(this.createSettings());\n  }\n  createSettings() {\n    const settings = this.createElement('div', [['class', defaultClassSelectors.settings]]);\n    settings.appendChild(this.createSettingsGroupForK());\n    settings.appendChild(this.createSettingsGroupForWeighted());\n\n    return settings;\n  }\n  createSettingsGroupForK() {\n    const labelText = 'Amount of neighbors, k: ';\n    const labelAttributes = [\n      ['for', selectors.id.rangeK],\n      ['id', selectors.id.rangeKLabel]\n    ];\n    const inputAttributes = [\n      ['id', selectors.id.rangeK],\n      ['type', 'range'],\n      ['min', '1'],\n      ['max', this.data.length],\n      ['value', this.knn.k]\n    ];\n    const { label, input } = this.createLabeledInput(labelText, labelAttributes, this.knn.k, inputAttributes);\n\n    return this.createSettingsGroup([label, input]);\n  }\n  createSettingsGroupForWeighted() {\n    const labelText = 'Use weighted algorithm: ';\n    const labelAttributes = [\n      ['for', selectors.id.weightedCheckbox],\n      ['id', selectors.id.weightedLabel]\n    ];\n    const inputAttributes = [\n      ['id', selectors.id.weightedCheckbox],\n      ['type', 'checkbox']\n    ];\n    const { label, input } = this.createLabeledInput(labelText, labelAttributes, '', inputAttributes);\n\n    return this.createSettingsGroup([label, input]);\n  }\n  addEventListeners() {\n    this.onClickSvg([this.svgClickCallback]);\n    this.onChangeInput(selectors.id.rangeK, 'range', [this.inputRangeKChangeCallback]);\n    this.onChangeInput(selectors.id.weightedCheckbox, 'checkbox', [this.checkboxWeightedChangeCallback]);\n  }\n  svgClickCallback(circle) {\n    this.clickable = false;\n\n    const classifiedCircle = this.getClassifiedCircle(circle);\n    this.addCircle(classifiedCircle);\n    const boundingCircle = this.getBoundingCircle(classifiedCircle);\n    this.addCircle(boundingCircle);\n\n    this.drawCircles();\n    this.drawConnectingLines(this.mapClosestNeighborsToConnectingLines(classifiedCircle));\n\n    this.data = this.data.filter(c => c !== boundingCircle);\n    this.removeElementsAfterTransition(`.${defaultClassSelectors.remove}`);\n\n    this.updateIndexRangeKMaximum(this.data.length);\n  }\n\n  updateIndexRangeKMaximum(max) {// todo: test\n    document.querySelector(`#${selectors.id.rangeK}`).setAttribute('max', max);\n  }\n  inputRangeKChangeCallback(k) {\n    this.k = k;\n    this.knn.k = k;\n    document.querySelector(`#${selectors.id.rangeKLabel} > span`).innerHTML = k;\n  }\n  checkboxWeightedChangeCallback(checked) {\n    this.knn.weighted = checked;\n  }\n  getClassifiedCircle(circle) {\n    const circleType = this.knn.classify(circle, this.data);\n    circle.setType(circleType);\n\n    return circle;\n  }\n  getBoundingCircle(circle) {\n    const furthestNeighbor = this.knn.kClosestNeighbors[this.knn.k - 1];\n    const radius = furthestNeighbor.distance + this.options.circleRadius;\n    const boundingCircle = new Circle(circle.cx, circle.cy, radius, 'transparent', 'white');\n    boundingCircle.setCssClass(defaultClassSelectors.remove);\n\n    return boundingCircle;\n  }\n  mapClosestNeighborsToConnectingLines(circle) {\n    return this.knn.kClosestNeighbors.map(n => {\n      return {\n        x1: n.cx,\n        x2: circle.cx,\n        y1: n.cy,\n        y2: circle.cy,\n        strokeWidth: 2,\n        stroke: 'rgba(230,230,230,0.5)'\n      };\n    });\n  }\n  drawConnectingLines(connectingLines) {\n    this.svg.selectAll('line')\n      .data(connectingLines)\n      .enter().append('line')\n      .style('stroke', function (d) { return d.stroke; })\n      .attr('stroke-width', function (d) { return d.strokeWidth; })\n      .attr('x1', function (d) { return d.x1; })\n      .attr('y1', function (d) { return d.y1; })\n      .attr('x2', function (d) { return d.x2; })\n      .attr('y2', function (d) { return d.y2; })\n      .attr('class', defaultClassSelectors.remove);\n  }\n  drawCircles() {\n    super.drawCircles();\n    const colorMap = this.typeColorMap;\n    this.svg.selectAll('circle')\n      .transition().duration(1500)\n      .style('fill', function (d) {\n        const typeColor = colorMap[d.type];\n\n        return d.type === defaultType || d.fill === typeColor ? d.fill : typeColor;\n      });\n  }\n  removeElementsAfterTransition(selector) {\n    const that = this;\n    this.svg.selectAll(selector)\n      .transition()\n      .duration(2000)\n      .style('stroke', 'transparent')\n      .style('fill', 'transparent')\n      .on('end', function () {\n        that.removeElements(selector);\n        that.clickable = true;\n      });\n  }\n  removeElements(selector) {\n    this.svg.selectAll(selector).remove();\n  }\n};\n","import MachineLearningAlgorithm from './machine-learning-algorithm';\nimport {defaultK} from '../visualization/defaults';\n\nexport default class KNN extends MachineLearningAlgorithm {\n  constructor(circles, types, k = defaultK, weighted = false) {\n    super(circles);\n    this.k = k;\n    this.types = types;\n    this.kClosestNeighbors = null;\n    this.weighted = weighted;\n  }\n  calculateDistance(a, b) {\n    return Math.sqrt(Math.pow((b.cx - a.cx), 2) + Math.pow((b.cy - a.cy), 2));\n  }\n  compareDistance(a, b) {\n    if (a.distance > b.distance) {\n      return 1;\n    } else if (a.distance < b.distance) {\n      return -1;\n    }\n\n    return 0;\n  }\n  findKClosestNeighbors(newCircle, neighbors) {\n    return neighbors.filter(n => n !== newCircle)\n      .map(n => {\n        n.setDistance(this.calculateDistance(n, newCircle));\n\n        return n;\n      })\n      .sort((a, b) => this.compareDistance(a, b))\n      .filter((n, i) => i < this.k);\n\n  }\n  getCircleTypeWeighted(kClosestNeighbors) { // todo: test\n    const typeDistance = this.types.reduce((res, type) => {\n      res[type] = 0;\n\n      return res;\n    }, {max: {type: null, val: 0}});\n    const res = kClosestNeighbors.reduce((res, neighbor) => {\n      const inverseDistance = res[neighbor.type] + 1 / neighbor.distance;\n      if (inverseDistance > res.max.val) {\n        res.max.type = neighbor.type;\n        res.max.val = inverseDistance;\n      }\n      res[neighbor.type] = inverseDistance;\n\n      return res;\n    }, typeDistance);\n\n    return res.max.type;\n  }\n  getCircleTypeUnweighted(kClosestNeighbors) { // todo: test\n    const counts = {};\n    kClosestNeighbors.map(n => n.type)\n      .forEach(type => {\n        counts[type] = counts[type] ? counts[type] + 1 : 1;\n      });\n\n    return Object.entries(counts).sort((a, b) => a[1] < b[1])[0][0];\n  }\n  determineCircleType(kClosestNeighbors) {\n    return this.weighted ?\n      this.getCircleTypeWeighted(kClosestNeighbors) : this.getCircleTypeUnweighted(kClosestNeighbors);\n  }\n  classify(circle, neighbors) {\n    this.kClosestNeighbors = this.findKClosestNeighbors(circle, neighbors);\n\n    return this.determineCircleType(this.kClosestNeighbors);\n  }\n}\n","export default class MachineLearningAlgorithm {\n  constructor(circles) {\n    this.circles = circles;\n  }\n}\n","export var name = \"d3\";\nexport var version = \"5.5.0\";\nexport var description = \"Data-Driven Documents\";\nexport var keywords = [\"dom\",\"visualization\",\"svg\",\"animation\",\"canvas\"];\nexport var homepage = \"https://d3js.org\";\nexport var license = \"BSD-3-Clause\";\nexport var author = {\"name\":\"Mike Bostock\",\"url\":\"https://bost.ocks.org/mike\"};\nexport var main = \"dist/d3.node.js\";\nexport var unpkg = \"dist/d3.min.js\";\nexport var jsdelivr = \"dist/d3.min.js\";\nexport var module = \"index\";\nexport var repository = {\"type\":\"git\",\"url\":\"https://github.com/d3/d3.git\"};\nexport var scripts = {\"pretest\":\"rimraf dist && mkdir dist && json2module package.json > dist/package.js && node rollup.node\",\"test\":\"tape 'test/**/*-test.js'\",\"prepublishOnly\":\"npm run test && rollup -c --banner \\\"$(preamble)\\\" && uglifyjs -b beautify=false,preamble=\\\"'$(preamble)'\\\" dist/d3.js -c negate_iife=false -m -o dist/d3.min.js\",\"postpublish\":\"git push && git push --tags && cd ../d3.github.com && git pull && cp ../d3/dist/d3.js d3.v5.js && cp ../d3/dist/d3.min.js d3.v5.min.js && git add d3.v5.js d3.v5.min.js && git commit -m \\\"d3 ${npm_package_version}\\\" && git push && cd - && cd ../d3-bower && git pull && cp ../d3/LICENSE ../d3/README.md ../d3/dist/d3.js ../d3/dist/d3.min.js . && git add -- LICENSE README.md d3.js d3.min.js && git commit -m \\\"${npm_package_version}\\\" && git tag -am \\\"${npm_package_version}\\\" v${npm_package_version} && git push && git push --tags && cd - && zip -j dist/d3.zip -- LICENSE README.md API.md CHANGES.md dist/d3.js dist/d3.min.js\"};\nexport var devDependencies = {\"json2module\":\"0.0\",\"package-preamble\":\"0.1\",\"rimraf\":\"2\",\"rollup\":\"0.57\",\"rollup-plugin-ascii\":\"0.0\",\"rollup-plugin-node-resolve\":\"3\",\"tape\":\"4\",\"uglify-js\":\"3.2\"};\nexport var dependencies = {\"d3-array\":\"1\",\"d3-axis\":\"1\",\"d3-brush\":\"1\",\"d3-chord\":\"1\",\"d3-collection\":\"1\",\"d3-color\":\"1\",\"d3-contour\":\"1\",\"d3-dispatch\":\"1\",\"d3-drag\":\"1\",\"d3-dsv\":\"1\",\"d3-ease\":\"1\",\"d3-fetch\":\"1\",\"d3-force\":\"1\",\"d3-format\":\"1\",\"d3-geo\":\"1\",\"d3-hierarchy\":\"1\",\"d3-interpolate\":\"1\",\"d3-path\":\"1\",\"d3-polygon\":\"1\",\"d3-quadtree\":\"1\",\"d3-random\":\"1\",\"d3-scale\":\"2\",\"d3-scale-chromatic\":\"1\",\"d3-selection\":\"1\",\"d3-shape\":\"1\",\"d3-time\":\"1\",\"d3-time-format\":\"2\",\"d3-timer\":\"1\",\"d3-transition\":\"1\",\"d3-voronoi\":\"1\",\"d3-zoom\":\"1\"};\n","export default function(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n","import ascending from \"./ascending\";\n\nexport default function(compare) {\n  if (compare.length === 1) compare = ascendingComparator(compare);\n  return {\n    left: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) < 0) lo = mid + 1;\n        else hi = mid;\n      }\n      return lo;\n    },\n    right: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) > 0) hi = mid;\n        else lo = mid + 1;\n      }\n      return lo;\n    }\n  };\n}\n\nfunction ascendingComparator(f) {\n  return function(d, x) {\n    return ascending(f(d), x);\n  };\n}\n","import ascending from \"./ascending\";\nimport bisector from \"./bisector\";\n\nvar ascendingBisect = bisector(ascending);\nexport var bisectRight = ascendingBisect.right;\nexport var bisectLeft = ascendingBisect.left;\nexport default bisectRight;\n","export default function(array, f) {\n  if (f == null) f = pair;\n  var i = 0, n = array.length - 1, p = array[0], pairs = new Array(n < 0 ? 0 : n);\n  while (i < n) pairs[i] = f(p, p = array[++i]);\n  return pairs;\n}\n\nexport function pair(a, b) {\n  return [a, b];\n}\n","import {pair} from \"./pairs\";\n\nexport default function(values0, values1, reduce) {\n  var n0 = values0.length,\n      n1 = values1.length,\n      values = new Array(n0 * n1),\n      i0,\n      i1,\n      i,\n      value0;\n\n  if (reduce == null) reduce = pair;\n\n  for (i0 = i = 0; i0 < n0; ++i0) {\n    for (value0 = values0[i0], i1 = 0; i1 < n1; ++i1, ++i) {\n      values[i] = reduce(value0, values1[i1]);\n    }\n  }\n\n  return values;\n}\n","export default function(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n}\n","export default function(x) {\n  return x === null ? NaN : +x;\n}\n","import number from \"./number\";\n\nexport default function(values, valueof) {\n  var n = values.length,\n      m = 0,\n      i = -1,\n      mean = 0,\n      value,\n      delta,\n      sum = 0;\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (!isNaN(value = number(values[i]))) {\n        delta = value - mean;\n        mean += delta / ++m;\n        sum += delta * (value - mean);\n      }\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(value = number(valueof(values[i], i, values)))) {\n        delta = value - mean;\n        mean += delta / ++m;\n        sum += delta * (value - mean);\n      }\n    }\n  }\n\n  if (m > 1) return sum / (m - 1);\n}\n","import variance from \"./variance\";\n\nexport default function(array, f) {\n  var v = variance(array, f);\n  return v ? Math.sqrt(v) : v;\n}\n","export default function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      min,\n      max;\n\n  if (valueof == null) {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        min = max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = values[i]) != null) {\n            if (min > value) min = value;\n            if (max < value) max = value;\n          }\n        }\n      }\n    }\n  }\n\n  else {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        min = max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null) {\n            if (min > value) min = value;\n            if (max < value) max = value;\n          }\n        }\n      }\n    }\n  }\n\n  return [min, max];\n}\n","var array = Array.prototype;\n\nexport var slice = array.slice;\nexport var map = array.map;\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function(x) {\n  return x;\n}\n","export default function(start, stop, step) {\n  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\n  var i = -1,\n      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n      range = new Array(n);\n\n  while (++i < n) {\n    range[i] = start + i * step;\n  }\n\n  return range;\n}\n","var e10 = Math.sqrt(50),\n    e5 = Math.sqrt(10),\n    e2 = Math.sqrt(2);\n\nexport default function(start, stop, count) {\n  var reverse,\n      i = -1,\n      n,\n      ticks,\n      step;\n\n  stop = +stop, start = +start, count = +count;\n  if (start === stop && count > 0) return [start];\n  if (reverse = stop < start) n = start, start = stop, stop = n;\n  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];\n\n  if (step > 0) {\n    start = Math.ceil(start / step);\n    stop = Math.floor(stop / step);\n    ticks = new Array(n = Math.ceil(stop - start + 1));\n    while (++i < n) ticks[i] = (start + i) * step;\n  } else {\n    start = Math.floor(start * step);\n    stop = Math.ceil(stop * step);\n    ticks = new Array(n = Math.ceil(start - stop + 1));\n    while (++i < n) ticks[i] = (start - i) / step;\n  }\n\n  if (reverse) ticks.reverse();\n\n  return ticks;\n}\n\nexport function tickIncrement(start, stop, count) {\n  var step = (stop - start) / Math.max(0, count),\n      power = Math.floor(Math.log(step) / Math.LN10),\n      error = step / Math.pow(10, power);\n  return power >= 0\n      ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power)\n      : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);\n}\n\nexport function tickStep(start, stop, count) {\n  var step0 = Math.abs(stop - start) / Math.max(0, count),\n      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n      error = step0 / step1;\n  if (error >= e10) step1 *= 10;\n  else if (error >= e5) step1 *= 5;\n  else if (error >= e2) step1 *= 2;\n  return stop < start ? -step1 : step1;\n}\n","export default function(values) {\n  return Math.ceil(Math.log(values.length) / Math.LN2) + 1;\n}\n","import {slice} from \"./array\";\nimport bisect from \"./bisect\";\nimport constant from \"./constant\";\nimport extent from \"./extent\";\nimport identity from \"./identity\";\nimport range from \"./range\";\nimport {tickStep} from \"./ticks\";\nimport sturges from \"./threshold/sturges\";\n\nexport default function() {\n  var value = identity,\n      domain = extent,\n      threshold = sturges;\n\n  function histogram(data) {\n    var i,\n        n = data.length,\n        x,\n        values = new Array(n);\n\n    for (i = 0; i < n; ++i) {\n      values[i] = value(data[i], i, data);\n    }\n\n    var xz = domain(values),\n        x0 = xz[0],\n        x1 = xz[1],\n        tz = threshold(values, x0, x1);\n\n    // Convert number of thresholds into uniform thresholds.\n    if (!Array.isArray(tz)) {\n      tz = tickStep(x0, x1, tz);\n      tz = range(Math.ceil(x0 / tz) * tz, Math.floor(x1 / tz) * tz, tz); // exclusive\n    }\n\n    // Remove any thresholds outside the domain.\n    var m = tz.length;\n    while (tz[0] <= x0) tz.shift(), --m;\n    while (tz[m - 1] > x1) tz.pop(), --m;\n\n    var bins = new Array(m + 1),\n        bin;\n\n    // Initialize bins.\n    for (i = 0; i <= m; ++i) {\n      bin = bins[i] = [];\n      bin.x0 = i > 0 ? tz[i - 1] : x0;\n      bin.x1 = i < m ? tz[i] : x1;\n    }\n\n    // Assign data to bins by value, ignoring any outside the domain.\n    for (i = 0; i < n; ++i) {\n      x = values[i];\n      if (x0 <= x && x <= x1) {\n        bins[bisect(tz, x, 0, m)].push(data[i]);\n      }\n    }\n\n    return bins;\n  }\n\n  histogram.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(_), histogram) : value;\n  };\n\n  histogram.domain = function(_) {\n    return arguments.length ? (domain = typeof _ === \"function\" ? _ : constant([_[0], _[1]]), histogram) : domain;\n  };\n\n  histogram.thresholds = function(_) {\n    return arguments.length ? (threshold = typeof _ === \"function\" ? _ : Array.isArray(_) ? constant(slice.call(_)) : constant(_), histogram) : threshold;\n  };\n\n  return histogram;\n}\n","import number from \"./number\";\n\nexport default function(values, p, valueof) {\n  if (valueof == null) valueof = number;\n  if (!(n = values.length)) return;\n  if ((p = +p) <= 0 || n < 2) return +valueof(values[0], 0, values);\n  if (p >= 1) return +valueof(values[n - 1], n - 1, values);\n  var n,\n      i = (n - 1) * p,\n      i0 = Math.floor(i),\n      value0 = +valueof(values[i0], i0, values),\n      value1 = +valueof(values[i0 + 1], i0 + 1, values);\n  return value0 + (value1 - value0) * (i - i0);\n}\n","import {map} from \"../array\";\nimport ascending from \"../ascending\";\nimport number from \"../number\";\nimport quantile from \"../quantile\";\n\nexport default function(values, min, max) {\n  values = map.call(values, number).sort(ascending);\n  return Math.ceil((max - min) / (2 * (quantile(values, 0.75) - quantile(values, 0.25)) * Math.pow(values.length, -1 / 3)));\n}\n","import deviation from \"../deviation\";\n\nexport default function(values, min, max) {\n  return Math.ceil((max - min) / (3.5 * deviation(values) * Math.pow(values.length, -1 / 3)));\n}\n","export default function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      max;\n\n  if (valueof == null) {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = values[i]) != null && value > max) {\n            max = value;\n          }\n        }\n      }\n    }\n  }\n\n  else {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null && value > max) {\n            max = value;\n          }\n        }\n      }\n    }\n  }\n\n  return max;\n}\n","import number from \"./number\";\n\nexport default function(values, valueof) {\n  var n = values.length,\n      m = n,\n      i = -1,\n      value,\n      sum = 0;\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (!isNaN(value = number(values[i]))) sum += value;\n      else --m;\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(value = number(valueof(values[i], i, values)))) sum += value;\n      else --m;\n    }\n  }\n\n  if (m) return sum / m;\n}\n","import ascending from \"./ascending\";\nimport number from \"./number\";\nimport quantile from \"./quantile\";\n\nexport default function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      numbers = [];\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (!isNaN(value = number(values[i]))) {\n        numbers.push(value);\n      }\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(value = number(valueof(values[i], i, values)))) {\n        numbers.push(value);\n      }\n    }\n  }\n\n  return quantile(numbers.sort(ascending), 0.5);\n}\n","export default function(arrays) {\n  var n = arrays.length,\n      m,\n      i = -1,\n      j = 0,\n      merged,\n      array;\n\n  while (++i < n) j += arrays[i].length;\n  merged = new Array(j);\n\n  while (--n >= 0) {\n    array = arrays[n];\n    m = array.length;\n    while (--m >= 0) {\n      merged[--j] = array[m];\n    }\n  }\n\n  return merged;\n}\n","export default function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      min;\n\n  if (valueof == null) {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        min = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = values[i]) != null && min > value) {\n            min = value;\n          }\n        }\n      }\n    }\n  }\n\n  else {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        min = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null && min > value) {\n            min = value;\n          }\n        }\n      }\n    }\n  }\n\n  return min;\n}\n","export default function(array, indexes) {\n  var i = indexes.length, permutes = new Array(i);\n  while (i--) permutes[i] = array[indexes[i]];\n  return permutes;\n}\n","import ascending from \"./ascending\";\n\nexport default function(values, compare) {\n  if (!(n = values.length)) return;\n  var n,\n      i = 0,\n      j = 0,\n      xi,\n      xj = values[j];\n\n  if (compare == null) compare = ascending;\n\n  while (++i < n) {\n    if (compare(xi = values[i], xj) < 0 || compare(xj, xj) !== 0) {\n      xj = xi, j = i;\n    }\n  }\n\n  if (compare(xj, xj) === 0) return j;\n}\n","export default function(array, i0, i1) {\n  var m = (i1 == null ? array.length : i1) - (i0 = i0 == null ? 0 : +i0),\n      t,\n      i;\n\n  while (m) {\n    i = Math.random() * m-- | 0;\n    t = array[m + i0];\n    array[m + i0] = array[i + i0];\n    array[i + i0] = t;\n  }\n\n  return array;\n}\n","export default function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      sum = 0;\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (value = +values[i]) sum += value; // Note: zero and null are equivalent.\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (value = +valueof(values[i], i, values)) sum += value;\n    }\n  }\n\n  return sum;\n}\n","import min from \"./min\";\n\nexport default function(matrix) {\n  if (!(n = matrix.length)) return [];\n  for (var i = -1, m = min(matrix, length), transpose = new Array(m); ++i < m;) {\n    for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n;) {\n      row[j] = matrix[j][i];\n    }\n  }\n  return transpose;\n}\n\nfunction length(d) {\n  return d.length;\n}\n","import transpose from \"./transpose\";\n\nexport default function() {\n  return transpose(arguments);\n}\n","export var slice = Array.prototype.slice;\n","export default function(x) {\n  return x;\n}\n","import {slice} from \"./array\";\nimport identity from \"./identity\";\n\nvar top = 1,\n    right = 2,\n    bottom = 3,\n    left = 4,\n    epsilon = 1e-6;\n\nfunction translateX(x) {\n  return \"translate(\" + (x + 0.5) + \",0)\";\n}\n\nfunction translateY(y) {\n  return \"translate(0,\" + (y + 0.5) + \")\";\n}\n\nfunction number(scale) {\n  return function(d) {\n    return +scale(d);\n  };\n}\n\nfunction center(scale) {\n  var offset = Math.max(0, scale.bandwidth() - 1) / 2; // Adjust for 0.5px offset.\n  if (scale.round()) offset = Math.round(offset);\n  return function(d) {\n    return +scale(d) + offset;\n  };\n}\n\nfunction entering() {\n  return !this.__axis;\n}\n\nfunction axis(orient, scale) {\n  var tickArguments = [],\n      tickValues = null,\n      tickFormat = null,\n      tickSizeInner = 6,\n      tickSizeOuter = 6,\n      tickPadding = 3,\n      k = orient === top || orient === left ? -1 : 1,\n      x = orient === left || orient === right ? \"x\" : \"y\",\n      transform = orient === top || orient === bottom ? translateX : translateY;\n\n  function axis(context) {\n    var values = tickValues == null ? (scale.ticks ? scale.ticks.apply(scale, tickArguments) : scale.domain()) : tickValues,\n        format = tickFormat == null ? (scale.tickFormat ? scale.tickFormat.apply(scale, tickArguments) : identity) : tickFormat,\n        spacing = Math.max(tickSizeInner, 0) + tickPadding,\n        range = scale.range(),\n        range0 = +range[0] + 0.5,\n        range1 = +range[range.length - 1] + 0.5,\n        position = (scale.bandwidth ? center : number)(scale.copy()),\n        selection = context.selection ? context.selection() : context,\n        path = selection.selectAll(\".domain\").data([null]),\n        tick = selection.selectAll(\".tick\").data(values, scale).order(),\n        tickExit = tick.exit(),\n        tickEnter = tick.enter().append(\"g\").attr(\"class\", \"tick\"),\n        line = tick.select(\"line\"),\n        text = tick.select(\"text\");\n\n    path = path.merge(path.enter().insert(\"path\", \".tick\")\n        .attr(\"class\", \"domain\")\n        .attr(\"stroke\", \"#000\"));\n\n    tick = tick.merge(tickEnter);\n\n    line = line.merge(tickEnter.append(\"line\")\n        .attr(\"stroke\", \"#000\")\n        .attr(x + \"2\", k * tickSizeInner));\n\n    text = text.merge(tickEnter.append(\"text\")\n        .attr(\"fill\", \"#000\")\n        .attr(x, k * spacing)\n        .attr(\"dy\", orient === top ? \"0em\" : orient === bottom ? \"0.71em\" : \"0.32em\"));\n\n    if (context !== selection) {\n      path = path.transition(context);\n      tick = tick.transition(context);\n      line = line.transition(context);\n      text = text.transition(context);\n\n      tickExit = tickExit.transition(context)\n          .attr(\"opacity\", epsilon)\n          .attr(\"transform\", function(d) { return isFinite(d = position(d)) ? transform(d) : this.getAttribute(\"transform\"); });\n\n      tickEnter\n          .attr(\"opacity\", epsilon)\n          .attr(\"transform\", function(d) { var p = this.parentNode.__axis; return transform(p && isFinite(p = p(d)) ? p : position(d)); });\n    }\n\n    tickExit.remove();\n\n    path\n        .attr(\"d\", orient === left || orient == right\n            ? \"M\" + k * tickSizeOuter + \",\" + range0 + \"H0.5V\" + range1 + \"H\" + k * tickSizeOuter\n            : \"M\" + range0 + \",\" + k * tickSizeOuter + \"V0.5H\" + range1 + \"V\" + k * tickSizeOuter);\n\n    tick\n        .attr(\"opacity\", 1)\n        .attr(\"transform\", function(d) { return transform(position(d)); });\n\n    line\n        .attr(x + \"2\", k * tickSizeInner);\n\n    text\n        .attr(x, k * spacing)\n        .text(format);\n\n    selection.filter(entering)\n        .attr(\"fill\", \"none\")\n        .attr(\"font-size\", 10)\n        .attr(\"font-family\", \"sans-serif\")\n        .attr(\"text-anchor\", orient === right ? \"start\" : orient === left ? \"end\" : \"middle\");\n\n    selection\n        .each(function() { this.__axis = position; });\n  }\n\n  axis.scale = function(_) {\n    return arguments.length ? (scale = _, axis) : scale;\n  };\n\n  axis.ticks = function() {\n    return tickArguments = slice.call(arguments), axis;\n  };\n\n  axis.tickArguments = function(_) {\n    return arguments.length ? (tickArguments = _ == null ? [] : slice.call(_), axis) : tickArguments.slice();\n  };\n\n  axis.tickValues = function(_) {\n    return arguments.length ? (tickValues = _ == null ? null : slice.call(_), axis) : tickValues && tickValues.slice();\n  };\n\n  axis.tickFormat = function(_) {\n    return arguments.length ? (tickFormat = _, axis) : tickFormat;\n  };\n\n  axis.tickSize = function(_) {\n    return arguments.length ? (tickSizeInner = tickSizeOuter = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeInner = function(_) {\n    return arguments.length ? (tickSizeInner = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeOuter = function(_) {\n    return arguments.length ? (tickSizeOuter = +_, axis) : tickSizeOuter;\n  };\n\n  axis.tickPadding = function(_) {\n    return arguments.length ? (tickPadding = +_, axis) : tickPadding;\n  };\n\n  return axis;\n}\n\nexport function axisTop(scale) {\n  return axis(top, scale);\n}\n\nexport function axisRight(scale) {\n  return axis(right, scale);\n}\n\nexport function axisBottom(scale) {\n  return axis(bottom, scale);\n}\n\nexport function axisLeft(scale) {\n  return axis(left, scale);\n}\n","var noop = {value: function() {}};\n\nfunction dispatch() {\n  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\n    if (!(t = arguments[i] + \"\") || (t in _)) throw new Error(\"illegal type: \" + t);\n    _[t] = [];\n  }\n  return new Dispatch(_);\n}\n\nfunction Dispatch(_) {\n  this._ = _;\n}\n\nfunction parseTypenames(typenames, types) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\n    return {type: t, name: name};\n  });\n}\n\nDispatch.prototype = dispatch.prototype = {\n  constructor: Dispatch,\n  on: function(typename, callback) {\n    var _ = this._,\n        T = parseTypenames(typename + \"\", _),\n        t,\n        i = -1,\n        n = T.length;\n\n    // If no callback was specified, return the callback of the given type and name.\n    if (arguments.length < 2) {\n      while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\n      return;\n    }\n\n    // If a type was specified, set the callback for the given type and name.\n    // Otherwise, if a null callback was specified, remove callbacks of the given name.\n    if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    while (++i < n) {\n      if (t = (typename = T[i]).type) _[t] = set(_[t], typename.name, callback);\n      else if (callback == null) for (t in _) _[t] = set(_[t], typename.name, null);\n    }\n\n    return this;\n  },\n  copy: function() {\n    var copy = {}, _ = this._;\n    for (var t in _) copy[t] = _[t].slice();\n    return new Dispatch(copy);\n  },\n  call: function(type, that) {\n    if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  },\n  apply: function(type, that, args) {\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  }\n};\n\nfunction get(type, name) {\n  for (var i = 0, n = type.length, c; i < n; ++i) {\n    if ((c = type[i]).name === name) {\n      return c.value;\n    }\n  }\n}\n\nfunction set(type, name, callback) {\n  for (var i = 0, n = type.length; i < n; ++i) {\n    if (type[i].name === name) {\n      type[i] = noop, type = type.slice(0, i).concat(type.slice(i + 1));\n      break;\n    }\n  }\n  if (callback != null) type.push({name: name, value: callback});\n  return type;\n}\n\nexport default dispatch;\n","export var xhtml = \"http://www.w3.org/1999/xhtml\";\n\nexport default {\n  svg: \"http://www.w3.org/2000/svg\",\n  xhtml: xhtml,\n  xlink: \"http://www.w3.org/1999/xlink\",\n  xml: \"http://www.w3.org/XML/1998/namespace\",\n  xmlns: \"http://www.w3.org/2000/xmlns/\"\n};\n","import namespaces from \"./namespaces\";\n\nexport default function(name) {\n  var prefix = name += \"\", i = prefix.indexOf(\":\");\n  if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n  return namespaces.hasOwnProperty(prefix) ? {space: namespaces[prefix], local: name} : name;\n}\n","import namespace from \"./namespace\";\nimport {xhtml} from \"./namespaces\";\n\nfunction creatorInherit(name) {\n  return function() {\n    var document = this.ownerDocument,\n        uri = this.namespaceURI;\n    return uri === xhtml && document.documentElement.namespaceURI === xhtml\n        ? document.createElement(name)\n        : document.createElementNS(uri, name);\n  };\n}\n\nfunction creatorFixed(fullname) {\n  return function() {\n    return this.ownerDocument.createElementNS(fullname.space, fullname.local);\n  };\n}\n\nexport default function(name) {\n  var fullname = namespace(name);\n  return (fullname.local\n      ? creatorFixed\n      : creatorInherit)(fullname);\n}\n","function none() {}\n\nexport default function(selector) {\n  return selector == null ? none : function() {\n    return this.querySelector(selector);\n  };\n}\n","function empty() {\n  return [];\n}\n\nexport default function(selector) {\n  return selector == null ? empty : function() {\n    return this.querySelectorAll(selector);\n  };\n}\n","var matcher = function(selector) {\n  return function() {\n    return this.matches(selector);\n  };\n};\n\nif (typeof document !== \"undefined\") {\n  var element = document.documentElement;\n  if (!element.matches) {\n    var vendorMatches = element.webkitMatchesSelector\n        || element.msMatchesSelector\n        || element.mozMatchesSelector\n        || element.oMatchesSelector;\n    matcher = function(selector) {\n      return function() {\n        return vendorMatches.call(this, selector);\n      };\n    };\n  }\n}\n\nexport default matcher;\n","export default function(update) {\n  return new Array(update.length);\n}\n","import sparse from \"./sparse\";\nimport {Selection} from \"./index\";\n\nexport default function() {\n  return new Selection(this._enter || this._groups.map(sparse), this._parents);\n}\n\nexport function EnterNode(parent, datum) {\n  this.ownerDocument = parent.ownerDocument;\n  this.namespaceURI = parent.namespaceURI;\n  this._next = null;\n  this._parent = parent;\n  this.__data__ = datum;\n}\n\nEnterNode.prototype = {\n  constructor: EnterNode,\n  appendChild: function(child) { return this._parent.insertBefore(child, this._next); },\n  insertBefore: function(child, next) { return this._parent.insertBefore(child, next); },\n  querySelector: function(selector) { return this._parent.querySelector(selector); },\n  querySelectorAll: function(selector) { return this._parent.querySelectorAll(selector); }\n};\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","import {Selection} from \"./index\";\nimport {EnterNode} from \"./enter\";\nimport constant from \"../constant\";\n\nvar keyPrefix = \"$\"; // Protect against keys like “__proto__”.\n\nfunction bindIndex(parent, group, enter, update, exit, data) {\n  var i = 0,\n      node,\n      groupLength = group.length,\n      dataLength = data.length;\n\n  // Put any non-null nodes that fit into update.\n  // Put any null nodes into enter.\n  // Put any remaining data into enter.\n  for (; i < dataLength; ++i) {\n    if (node = group[i]) {\n      node.__data__ = data[i];\n      update[i] = node;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Put any non-null nodes that don’t fit into exit.\n  for (; i < groupLength; ++i) {\n    if (node = group[i]) {\n      exit[i] = node;\n    }\n  }\n}\n\nfunction bindKey(parent, group, enter, update, exit, data, key) {\n  var i,\n      node,\n      nodeByKeyValue = {},\n      groupLength = group.length,\n      dataLength = data.length,\n      keyValues = new Array(groupLength),\n      keyValue;\n\n  // Compute the key for each node.\n  // If multiple nodes have the same key, the duplicates are added to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if (node = group[i]) {\n      keyValues[i] = keyValue = keyPrefix + key.call(node, node.__data__, i, group);\n      if (keyValue in nodeByKeyValue) {\n        exit[i] = node;\n      } else {\n        nodeByKeyValue[keyValue] = node;\n      }\n    }\n  }\n\n  // Compute the key for each datum.\n  // If there a node associated with this key, join and add it to update.\n  // If there is not (or the key is a duplicate), add it to enter.\n  for (i = 0; i < dataLength; ++i) {\n    keyValue = keyPrefix + key.call(parent, data[i], i, data);\n    if (node = nodeByKeyValue[keyValue]) {\n      update[i] = node;\n      node.__data__ = data[i];\n      nodeByKeyValue[keyValue] = null;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Add any remaining nodes that were not bound to data to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if ((node = group[i]) && (nodeByKeyValue[keyValues[i]] === node)) {\n      exit[i] = node;\n    }\n  }\n}\n\nexport default function(value, key) {\n  if (!value) {\n    data = new Array(this.size()), j = -1;\n    this.each(function(d) { data[++j] = d; });\n    return data;\n  }\n\n  var bind = key ? bindKey : bindIndex,\n      parents = this._parents,\n      groups = this._groups;\n\n  if (typeof value !== \"function\") value = constant(value);\n\n  for (var m = groups.length, update = new Array(m), enter = new Array(m), exit = new Array(m), j = 0; j < m; ++j) {\n    var parent = parents[j],\n        group = groups[j],\n        groupLength = group.length,\n        data = value.call(parent, parent && parent.__data__, j, parents),\n        dataLength = data.length,\n        enterGroup = enter[j] = new Array(dataLength),\n        updateGroup = update[j] = new Array(dataLength),\n        exitGroup = exit[j] = new Array(groupLength);\n\n    bind(parent, group, enterGroup, updateGroup, exitGroup, data, key);\n\n    // Now connect the enter nodes to their following update node, such that\n    // appendChild can insert the materialized enter node before this node,\n    // rather than at the end of the parent node.\n    for (var i0 = 0, i1 = 0, previous, next; i0 < dataLength; ++i0) {\n      if (previous = enterGroup[i0]) {\n        if (i0 >= i1) i1 = i0 + 1;\n        while (!(next = updateGroup[i1]) && ++i1 < dataLength);\n        previous._next = next || null;\n      }\n    }\n  }\n\n  update = new Selection(update, parents);\n  update._enter = enter;\n  update._exit = exit;\n  return update;\n}\n","import {Selection} from \"./index\";\n\nexport default function(compare) {\n  if (!compare) compare = ascending;\n\n  function compareNode(a, b) {\n    return a && b ? compare(a.__data__, b.__data__) : !a - !b;\n  }\n\n  for (var groups = this._groups, m = groups.length, sortgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, sortgroup = sortgroups[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        sortgroup[i] = node;\n      }\n    }\n    sortgroup.sort(compareNode);\n  }\n\n  return new Selection(sortgroups, this._parents).order();\n}\n\nfunction ascending(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n","import namespace from \"../namespace\";\n\nfunction attrRemove(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, value) {\n  return function() {\n    this.setAttribute(name, value);\n  };\n}\n\nfunction attrConstantNS(fullname, value) {\n  return function() {\n    this.setAttributeNS(fullname.space, fullname.local, value);\n  };\n}\n\nfunction attrFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttribute(name);\n    else this.setAttribute(name, v);\n  };\n}\n\nfunction attrFunctionNS(fullname, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttributeNS(fullname.space, fullname.local);\n    else this.setAttributeNS(fullname.space, fullname.local, v);\n  };\n}\n\nexport default function(name, value) {\n  var fullname = namespace(name);\n\n  if (arguments.length < 2) {\n    var node = this.node();\n    return fullname.local\n        ? node.getAttributeNS(fullname.space, fullname.local)\n        : node.getAttribute(fullname);\n  }\n\n  return this.each((value == null\n      ? (fullname.local ? attrRemoveNS : attrRemove) : (typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS : attrFunction)\n      : (fullname.local ? attrConstantNS : attrConstant)))(fullname, value));\n}\n","export default function(node) {\n  return (node.ownerDocument && node.ownerDocument.defaultView) // node is a Node\n      || (node.document && node) // node is a Window\n      || node.defaultView; // node is a Document\n}\n","import defaultView from \"../window\";\n\nfunction styleRemove(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, value, priority) {\n  return function() {\n    this.style.setProperty(name, value, priority);\n  };\n}\n\nfunction styleFunction(name, value, priority) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.style.removeProperty(name);\n    else this.style.setProperty(name, v, priority);\n  };\n}\n\nexport default function(name, value, priority) {\n  return arguments.length > 1\n      ? this.each((value == null\n            ? styleRemove : typeof value === \"function\"\n            ? styleFunction\n            : styleConstant)(name, value, priority == null ? \"\" : priority))\n      : styleValue(this.node(), name);\n}\n\nexport function styleValue(node, name) {\n  return node.style.getPropertyValue(name)\n      || defaultView(node).getComputedStyle(node, null).getPropertyValue(name);\n}\n","function classArray(string) {\n  return string.trim().split(/^|\\s+/);\n}\n\nfunction classList(node) {\n  return node.classList || new ClassList(node);\n}\n\nfunction ClassList(node) {\n  this._node = node;\n  this._names = classArray(node.getAttribute(\"class\") || \"\");\n}\n\nClassList.prototype = {\n  add: function(name) {\n    var i = this._names.indexOf(name);\n    if (i < 0) {\n      this._names.push(name);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  remove: function(name) {\n    var i = this._names.indexOf(name);\n    if (i >= 0) {\n      this._names.splice(i, 1);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  contains: function(name) {\n    return this._names.indexOf(name) >= 0;\n  }\n};\n\nfunction classedAdd(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.add(names[i]);\n}\n\nfunction classedRemove(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.remove(names[i]);\n}\n\nfunction classedTrue(names) {\n  return function() {\n    classedAdd(this, names);\n  };\n}\n\nfunction classedFalse(names) {\n  return function() {\n    classedRemove(this, names);\n  };\n}\n\nfunction classedFunction(names, value) {\n  return function() {\n    (value.apply(this, arguments) ? classedAdd : classedRemove)(this, names);\n  };\n}\n\nexport default function(name, value) {\n  var names = classArray(name + \"\");\n\n  if (arguments.length < 2) {\n    var list = classList(this.node()), i = -1, n = names.length;\n    while (++i < n) if (!list.contains(names[i])) return false;\n    return true;\n  }\n\n  return this.each((typeof value === \"function\"\n      ? classedFunction : value\n      ? classedTrue\n      : classedFalse)(names, value));\n}\n","function textRemove() {\n  this.textContent = \"\";\n}\n\nfunction textConstant(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.textContent = v == null ? \"\" : v;\n  };\n}\n\nexport default function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? textRemove : (typeof value === \"function\"\n          ? textFunction\n          : textConstant)(value))\n      : this.node().textContent;\n}\n","function htmlRemove() {\n  this.innerHTML = \"\";\n}\n\nfunction htmlConstant(value) {\n  return function() {\n    this.innerHTML = value;\n  };\n}\n\nfunction htmlFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.innerHTML = v == null ? \"\" : v;\n  };\n}\n\nexport default function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? htmlRemove : (typeof value === \"function\"\n          ? htmlFunction\n          : htmlConstant)(value))\n      : this.node().innerHTML;\n}\n","function raise() {\n  if (this.nextSibling) this.parentNode.appendChild(this);\n}\n\nexport default function() {\n  return this.each(raise);\n}\n","function lower() {\n  if (this.previousSibling) this.parentNode.insertBefore(this, this.parentNode.firstChild);\n}\n\nexport default function() {\n  return this.each(lower);\n}\n","import creator from \"../creator\";\nimport selector from \"../selector\";\n\nfunction constantNull() {\n  return null;\n}\n\nexport default function(name, before) {\n  var create = typeof name === \"function\" ? name : creator(name),\n      select = before == null ? constantNull : typeof before === \"function\" ? before : selector(before);\n  return this.select(function() {\n    return this.insertBefore(create.apply(this, arguments), select.apply(this, arguments) || null);\n  });\n}\n","function remove() {\n  var parent = this.parentNode;\n  if (parent) parent.removeChild(this);\n}\n\nexport default function() {\n  return this.each(remove);\n}\n","function selection_cloneShallow() {\n  return this.parentNode.insertBefore(this.cloneNode(false), this.nextSibling);\n}\n\nfunction selection_cloneDeep() {\n  return this.parentNode.insertBefore(this.cloneNode(true), this.nextSibling);\n}\n\nexport default function(deep) {\n  return this.select(deep ? selection_cloneDeep : selection_cloneShallow);\n}\n","var filterEvents = {};\n\nexport var event = null;\n\nif (typeof document !== \"undefined\") {\n  var element = document.documentElement;\n  if (!(\"onmouseenter\" in element)) {\n    filterEvents = {mouseenter: \"mouseover\", mouseleave: \"mouseout\"};\n  }\n}\n\nfunction filterContextListener(listener, index, group) {\n  listener = contextListener(listener, index, group);\n  return function(event) {\n    var related = event.relatedTarget;\n    if (!related || (related !== this && !(related.compareDocumentPosition(this) & 8))) {\n      listener.call(this, event);\n    }\n  };\n}\n\nfunction contextListener(listener, index, group) {\n  return function(event1) {\n    var event0 = event; // Events can be reentrant (e.g., focus).\n    event = event1;\n    try {\n      listener.call(this, this.__data__, index, group);\n    } finally {\n      event = event0;\n    }\n  };\n}\n\nfunction parseTypenames(typenames) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    return {type: t, name: name};\n  });\n}\n\nfunction onRemove(typename) {\n  return function() {\n    var on = this.__on;\n    if (!on) return;\n    for (var j = 0, i = -1, m = on.length, o; j < m; ++j) {\n      if (o = on[j], (!typename.type || o.type === typename.type) && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n      } else {\n        on[++i] = o;\n      }\n    }\n    if (++i) on.length = i;\n    else delete this.__on;\n  };\n}\n\nfunction onAdd(typename, value, capture) {\n  var wrap = filterEvents.hasOwnProperty(typename.type) ? filterContextListener : contextListener;\n  return function(d, i, group) {\n    var on = this.__on, o, listener = wrap(value, i, group);\n    if (on) for (var j = 0, m = on.length; j < m; ++j) {\n      if ((o = on[j]).type === typename.type && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n        this.addEventListener(o.type, o.listener = listener, o.capture = capture);\n        o.value = value;\n        return;\n      }\n    }\n    this.addEventListener(typename.type, listener, capture);\n    o = {type: typename.type, name: typename.name, value: value, listener: listener, capture: capture};\n    if (!on) this.__on = [o];\n    else on.push(o);\n  };\n}\n\nexport default function(typename, value, capture) {\n  var typenames = parseTypenames(typename + \"\"), i, n = typenames.length, t;\n\n  if (arguments.length < 2) {\n    var on = this.node().__on;\n    if (on) for (var j = 0, m = on.length, o; j < m; ++j) {\n      for (i = 0, o = on[j]; i < n; ++i) {\n        if ((t = typenames[i]).type === o.type && t.name === o.name) {\n          return o.value;\n        }\n      }\n    }\n    return;\n  }\n\n  on = value ? onAdd : onRemove;\n  if (capture == null) capture = false;\n  for (i = 0; i < n; ++i) this.each(on(typenames[i], value, capture));\n  return this;\n}\n\nexport function customEvent(event1, listener, that, args) {\n  var event0 = event;\n  event1.sourceEvent = event;\n  event = event1;\n  try {\n    return listener.apply(that, args);\n  } finally {\n    event = event0;\n  }\n}\n","import defaultView from \"../window\";\n\nfunction dispatchEvent(node, type, params) {\n  var window = defaultView(node),\n      event = window.CustomEvent;\n\n  if (typeof event === \"function\") {\n    event = new event(type, params);\n  } else {\n    event = window.document.createEvent(\"Event\");\n    if (params) event.initEvent(type, params.bubbles, params.cancelable), event.detail = params.detail;\n    else event.initEvent(type, false, false);\n  }\n\n  node.dispatchEvent(event);\n}\n\nfunction dispatchConstant(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params);\n  };\n}\n\nfunction dispatchFunction(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params.apply(this, arguments));\n  };\n}\n\nexport default function(type, params) {\n  return this.each((typeof params === \"function\"\n      ? dispatchFunction\n      : dispatchConstant)(type, params));\n}\n","import selection_select from \"./select\";\nimport selection_selectAll from \"./selectAll\";\nimport selection_filter from \"./filter\";\nimport selection_data from \"./data\";\nimport selection_enter from \"./enter\";\nimport selection_exit from \"./exit\";\nimport selection_merge from \"./merge\";\nimport selection_order from \"./order\";\nimport selection_sort from \"./sort\";\nimport selection_call from \"./call\";\nimport selection_nodes from \"./nodes\";\nimport selection_node from \"./node\";\nimport selection_size from \"./size\";\nimport selection_empty from \"./empty\";\nimport selection_each from \"./each\";\nimport selection_attr from \"./attr\";\nimport selection_style from \"./style\";\nimport selection_property from \"./property\";\nimport selection_classed from \"./classed\";\nimport selection_text from \"./text\";\nimport selection_html from \"./html\";\nimport selection_raise from \"./raise\";\nimport selection_lower from \"./lower\";\nimport selection_append from \"./append\";\nimport selection_insert from \"./insert\";\nimport selection_remove from \"./remove\";\nimport selection_clone from \"./clone\";\nimport selection_datum from \"./datum\";\nimport selection_on from \"./on\";\nimport selection_dispatch from \"./dispatch\";\n\nexport var root = [null];\n\nexport function Selection(groups, parents) {\n  this._groups = groups;\n  this._parents = parents;\n}\n\nfunction selection() {\n  return new Selection([[document.documentElement]], root);\n}\n\nSelection.prototype = selection.prototype = {\n  constructor: Selection,\n  select: selection_select,\n  selectAll: selection_selectAll,\n  filter: selection_filter,\n  data: selection_data,\n  enter: selection_enter,\n  exit: selection_exit,\n  merge: selection_merge,\n  order: selection_order,\n  sort: selection_sort,\n  call: selection_call,\n  nodes: selection_nodes,\n  node: selection_node,\n  size: selection_size,\n  empty: selection_empty,\n  each: selection_each,\n  attr: selection_attr,\n  style: selection_style,\n  property: selection_property,\n  classed: selection_classed,\n  text: selection_text,\n  html: selection_html,\n  raise: selection_raise,\n  lower: selection_lower,\n  append: selection_append,\n  insert: selection_insert,\n  remove: selection_remove,\n  clone: selection_clone,\n  datum: selection_datum,\n  on: selection_on,\n  dispatch: selection_dispatch\n};\n\nexport default selection;\n","import {Selection} from \"./index\";\nimport selector from \"../selector\";\n\nexport default function(select) {\n  if (typeof select !== \"function\") select = selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n}\n","import {Selection} from \"./index\";\nimport selectorAll from \"../selectorAll\";\n\nexport default function(select) {\n  if (typeof select !== \"function\") select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        subgroups.push(select.call(node, node.__data__, i, group));\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, parents);\n}\n","import {Selection} from \"./index\";\nimport matcher from \"../matcher\";\n\nexport default function(match) {\n  if (typeof match !== \"function\") match = matcher(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n}\n","import sparse from \"./sparse\";\nimport {Selection} from \"./index\";\n\nexport default function() {\n  return new Selection(this._exit || this._groups.map(sparse), this._parents);\n}\n","import {Selection} from \"./index\";\n\nexport default function(selection) {\n\n  for (var groups0 = this._groups, groups1 = selection._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Selection(merges, this._parents);\n}\n","export default function() {\n\n  for (var groups = this._groups, j = -1, m = groups.length; ++j < m;) {\n    for (var group = groups[j], i = group.length - 1, next = group[i], node; --i >= 0;) {\n      if (node = group[i]) {\n        if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n        next = node;\n      }\n    }\n  }\n\n  return this;\n}\n","export default function() {\n  var callback = arguments[0];\n  arguments[0] = this;\n  callback.apply(null, arguments);\n  return this;\n}\n","export default function() {\n  var nodes = new Array(this.size()), i = -1;\n  this.each(function() { nodes[++i] = this; });\n  return nodes;\n}\n","export default function() {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length; i < n; ++i) {\n      var node = group[i];\n      if (node) return node;\n    }\n  }\n\n  return null;\n}\n","export default function() {\n  var size = 0;\n  this.each(function() { ++size; });\n  return size;\n}\n","export default function() {\n  return !this.node();\n}\n","export default function(callback) {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {\n      if (node = group[i]) callback.call(node, node.__data__, i, group);\n    }\n  }\n\n  return this;\n}\n","function propertyRemove(name) {\n  return function() {\n    delete this[name];\n  };\n}\n\nfunction propertyConstant(name, value) {\n  return function() {\n    this[name] = value;\n  };\n}\n\nfunction propertyFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) delete this[name];\n    else this[name] = v;\n  };\n}\n\nexport default function(name, value) {\n  return arguments.length > 1\n      ? this.each((value == null\n          ? propertyRemove : typeof value === \"function\"\n          ? propertyFunction\n          : propertyConstant)(name, value))\n      : this.node()[name];\n}\n","import creator from \"../creator\";\n\nexport default function(name) {\n  var create = typeof name === \"function\" ? name : creator(name);\n  return this.select(function() {\n    return this.appendChild(create.apply(this, arguments));\n  });\n}\n","export default function(value) {\n  return arguments.length\n      ? this.property(\"__data__\", value)\n      : this.node().__data__;\n}\n","import {Selection, root} from \"./selection/index\";\n\nexport default function(selector) {\n  return typeof selector === \"string\"\n      ? new Selection([[document.querySelector(selector)]], [document.documentElement])\n      : new Selection([[selector]], root);\n}\n","import creator from \"./creator\";\nimport select from \"./select\";\n\nexport default function(name) {\n  return select(creator(name).call(document.documentElement));\n}\n","var nextId = 0;\n\nexport default function local() {\n  return new Local;\n}\n\nfunction Local() {\n  this._ = \"@\" + (++nextId).toString(36);\n}\n\nLocal.prototype = local.prototype = {\n  constructor: Local,\n  get: function(node) {\n    var id = this._;\n    while (!(id in node)) if (!(node = node.parentNode)) return;\n    return node[id];\n  },\n  set: function(node, value) {\n    return node[this._] = value;\n  },\n  remove: function(node) {\n    return this._ in node && delete node[this._];\n  },\n  toString: function() {\n    return this._;\n  }\n};\n","import {event} from \"./selection/on\";\n\nexport default function() {\n  var current = event, source;\n  while (source = current.sourceEvent) current = source;\n  return current;\n}\n","export default function(node, event) {\n  var svg = node.ownerSVGElement || node;\n\n  if (svg.createSVGPoint) {\n    var point = svg.createSVGPoint();\n    point.x = event.clientX, point.y = event.clientY;\n    point = point.matrixTransform(node.getScreenCTM().inverse());\n    return [point.x, point.y];\n  }\n\n  var rect = node.getBoundingClientRect();\n  return [event.clientX - rect.left - node.clientLeft, event.clientY - rect.top - node.clientTop];\n}\n","import sourceEvent from \"./sourceEvent\";\nimport point from \"./point\";\n\nexport default function(node) {\n  var event = sourceEvent();\n  if (event.changedTouches) event = event.changedTouches[0];\n  return point(node, event);\n}\n","import {Selection, root} from \"./selection/index\";\n\nexport default function(selector) {\n  return typeof selector === \"string\"\n      ? new Selection([document.querySelectorAll(selector)], [document.documentElement])\n      : new Selection([selector == null ? [] : selector], root);\n}\n","import sourceEvent from \"./sourceEvent\";\nimport point from \"./point\";\n\nexport default function(node, touches, identifier) {\n  if (arguments.length < 3) identifier = touches, touches = sourceEvent().changedTouches;\n\n  for (var i = 0, n = touches ? touches.length : 0, touch; i < n; ++i) {\n    if ((touch = touches[i]).identifier === identifier) {\n      return point(node, touch);\n    }\n  }\n\n  return null;\n}\n","import sourceEvent from \"./sourceEvent\";\nimport point from \"./point\";\n\nexport default function(node, touches) {\n  if (touches == null) touches = sourceEvent().touches;\n\n  for (var i = 0, n = touches ? touches.length : 0, points = new Array(n); i < n; ++i) {\n    points[i] = point(node, touches[i]);\n  }\n\n  return points;\n}\n","import {event} from \"d3-selection\";\n\nexport function nopropagation() {\n  event.stopImmediatePropagation();\n}\n\nexport default function() {\n  event.preventDefault();\n  event.stopImmediatePropagation();\n}\n","import {select} from \"d3-selection\";\nimport noevent from \"./noevent\";\n\nexport default function(view) {\n  var root = view.document.documentElement,\n      selection = select(view).on(\"dragstart.drag\", noevent, true);\n  if (\"onselectstart\" in root) {\n    selection.on(\"selectstart.drag\", noevent, true);\n  } else {\n    root.__noselect = root.style.MozUserSelect;\n    root.style.MozUserSelect = \"none\";\n  }\n}\n\nexport function yesdrag(view, noclick) {\n  var root = view.document.documentElement,\n      selection = select(view).on(\"dragstart.drag\", null);\n  if (noclick) {\n    selection.on(\"click.drag\", noevent, true);\n    setTimeout(function() { selection.on(\"click.drag\", null); }, 0);\n  }\n  if (\"onselectstart\" in root) {\n    selection.on(\"selectstart.drag\", null);\n  } else {\n    root.style.MozUserSelect = root.__noselect;\n    delete root.__noselect;\n  }\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function DragEvent(target, type, subject, id, active, x, y, dx, dy, dispatch) {\n  this.target = target;\n  this.type = type;\n  this.subject = subject;\n  this.identifier = id;\n  this.active = active;\n  this.x = x;\n  this.y = y;\n  this.dx = dx;\n  this.dy = dy;\n  this._ = dispatch;\n}\n\nDragEvent.prototype.on = function() {\n  var value = this._.on.apply(this._, arguments);\n  return value === this._ ? this : value;\n};\n","import {dispatch} from \"d3-dispatch\";\nimport {event, customEvent, select, mouse, touch} from \"d3-selection\";\nimport nodrag, {yesdrag} from \"./nodrag\";\nimport noevent, {nopropagation} from \"./noevent\";\nimport constant from \"./constant\";\nimport DragEvent from \"./event\";\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter() {\n  return !event.button;\n}\n\nfunction defaultContainer() {\n  return this.parentNode;\n}\n\nfunction defaultSubject(d) {\n  return d == null ? {x: event.x, y: event.y} : d;\n}\n\nfunction defaultTouchable() {\n  return \"ontouchstart\" in this;\n}\n\nexport default function() {\n  var filter = defaultFilter,\n      container = defaultContainer,\n      subject = defaultSubject,\n      touchable = defaultTouchable,\n      gestures = {},\n      listeners = dispatch(\"start\", \"drag\", \"end\"),\n      active = 0,\n      mousedownx,\n      mousedowny,\n      mousemoving,\n      touchending,\n      clickDistance2 = 0;\n\n  function drag(selection) {\n    selection\n        .on(\"mousedown.drag\", mousedowned)\n      .filter(touchable)\n        .on(\"touchstart.drag\", touchstarted)\n        .on(\"touchmove.drag\", touchmoved)\n        .on(\"touchend.drag touchcancel.drag\", touchended)\n        .style(\"touch-action\", \"none\")\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n  }\n\n  function mousedowned() {\n    if (touchending || !filter.apply(this, arguments)) return;\n    var gesture = beforestart(\"mouse\", container.apply(this, arguments), mouse, this, arguments);\n    if (!gesture) return;\n    select(event.view).on(\"mousemove.drag\", mousemoved, true).on(\"mouseup.drag\", mouseupped, true);\n    nodrag(event.view);\n    nopropagation();\n    mousemoving = false;\n    mousedownx = event.clientX;\n    mousedowny = event.clientY;\n    gesture(\"start\");\n  }\n\n  function mousemoved() {\n    noevent();\n    if (!mousemoving) {\n      var dx = event.clientX - mousedownx, dy = event.clientY - mousedowny;\n      mousemoving = dx * dx + dy * dy > clickDistance2;\n    }\n    gestures.mouse(\"drag\");\n  }\n\n  function mouseupped() {\n    select(event.view).on(\"mousemove.drag mouseup.drag\", null);\n    yesdrag(event.view, mousemoving);\n    noevent();\n    gestures.mouse(\"end\");\n  }\n\n  function touchstarted() {\n    if (!filter.apply(this, arguments)) return;\n    var touches = event.changedTouches,\n        c = container.apply(this, arguments),\n        n = touches.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = beforestart(touches[i].identifier, c, touch, this, arguments)) {\n        nopropagation();\n        gesture(\"start\");\n      }\n    }\n  }\n\n  function touchmoved() {\n    var touches = event.changedTouches,\n        n = touches.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches[i].identifier]) {\n        noevent();\n        gesture(\"drag\");\n      }\n    }\n  }\n\n  function touchended() {\n    var touches = event.changedTouches,\n        n = touches.length, i, gesture;\n\n    if (touchending) clearTimeout(touchending);\n    touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches[i].identifier]) {\n        nopropagation();\n        gesture(\"end\");\n      }\n    }\n  }\n\n  function beforestart(id, container, point, that, args) {\n    var p = point(container, id), s, dx, dy,\n        sublisteners = listeners.copy();\n\n    if (!customEvent(new DragEvent(drag, \"beforestart\", s, id, active, p[0], p[1], 0, 0, sublisteners), function() {\n      if ((event.subject = s = subject.apply(that, args)) == null) return false;\n      dx = s.x - p[0] || 0;\n      dy = s.y - p[1] || 0;\n      return true;\n    })) return;\n\n    return function gesture(type) {\n      var p0 = p, n;\n      switch (type) {\n        case \"start\": gestures[id] = gesture, n = active++; break;\n        case \"end\": delete gestures[id], --active; // nobreak\n        case \"drag\": p = point(container, id), n = active; break;\n      }\n      customEvent(new DragEvent(drag, type, s, id, n, p[0] + dx, p[1] + dy, p[0] - p0[0], p[1] - p0[1], sublisteners), sublisteners.apply, sublisteners, [type, that, args]);\n    };\n  }\n\n  drag.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant(!!_), drag) : filter;\n  };\n\n  drag.container = function(_) {\n    return arguments.length ? (container = typeof _ === \"function\" ? _ : constant(_), drag) : container;\n  };\n\n  drag.subject = function(_) {\n    return arguments.length ? (subject = typeof _ === \"function\" ? _ : constant(_), drag) : subject;\n  };\n\n  drag.touchable = function(_) {\n    return arguments.length ? (touchable = typeof _ === \"function\" ? _ : constant(!!_), drag) : touchable;\n  };\n\n  drag.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? drag : value;\n  };\n\n  drag.clickDistance = function(_) {\n    return arguments.length ? (clickDistance2 = (_ = +_) * _, drag) : Math.sqrt(clickDistance2);\n  };\n\n  return drag;\n}\n","export default function(constructor, factory, prototype) {\n  constructor.prototype = factory.prototype = prototype;\n  prototype.constructor = constructor;\n}\n\nexport function extend(parent, definition) {\n  var prototype = Object.create(parent.prototype);\n  for (var key in definition) prototype[key] = definition[key];\n  return prototype;\n}\n","import define, {extend} from \"./define\";\n\nexport function Color() {}\n\nexport var darker = 0.7;\nexport var brighter = 1 / darker;\n\nvar reI = \"\\\\s*([+-]?\\\\d+)\\\\s*\",\n    reN = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)\\\\s*\",\n    reP = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)%\\\\s*\",\n    reHex3 = /^#([0-9a-f]{3})$/,\n    reHex6 = /^#([0-9a-f]{6})$/,\n    reRgbInteger = new RegExp(\"^rgb\\\\(\" + [reI, reI, reI] + \"\\\\)$\"),\n    reRgbPercent = new RegExp(\"^rgb\\\\(\" + [reP, reP, reP] + \"\\\\)$\"),\n    reRgbaInteger = new RegExp(\"^rgba\\\\(\" + [reI, reI, reI, reN] + \"\\\\)$\"),\n    reRgbaPercent = new RegExp(\"^rgba\\\\(\" + [reP, reP, reP, reN] + \"\\\\)$\"),\n    reHslPercent = new RegExp(\"^hsl\\\\(\" + [reN, reP, reP] + \"\\\\)$\"),\n    reHslaPercent = new RegExp(\"^hsla\\\\(\" + [reN, reP, reP, reN] + \"\\\\)$\");\n\nvar named = {\n  aliceblue: 0xf0f8ff,\n  antiquewhite: 0xfaebd7,\n  aqua: 0x00ffff,\n  aquamarine: 0x7fffd4,\n  azure: 0xf0ffff,\n  beige: 0xf5f5dc,\n  bisque: 0xffe4c4,\n  black: 0x000000,\n  blanchedalmond: 0xffebcd,\n  blue: 0x0000ff,\n  blueviolet: 0x8a2be2,\n  brown: 0xa52a2a,\n  burlywood: 0xdeb887,\n  cadetblue: 0x5f9ea0,\n  chartreuse: 0x7fff00,\n  chocolate: 0xd2691e,\n  coral: 0xff7f50,\n  cornflowerblue: 0x6495ed,\n  cornsilk: 0xfff8dc,\n  crimson: 0xdc143c,\n  cyan: 0x00ffff,\n  darkblue: 0x00008b,\n  darkcyan: 0x008b8b,\n  darkgoldenrod: 0xb8860b,\n  darkgray: 0xa9a9a9,\n  darkgreen: 0x006400,\n  darkgrey: 0xa9a9a9,\n  darkkhaki: 0xbdb76b,\n  darkmagenta: 0x8b008b,\n  darkolivegreen: 0x556b2f,\n  darkorange: 0xff8c00,\n  darkorchid: 0x9932cc,\n  darkred: 0x8b0000,\n  darksalmon: 0xe9967a,\n  darkseagreen: 0x8fbc8f,\n  darkslateblue: 0x483d8b,\n  darkslategray: 0x2f4f4f,\n  darkslategrey: 0x2f4f4f,\n  darkturquoise: 0x00ced1,\n  darkviolet: 0x9400d3,\n  deeppink: 0xff1493,\n  deepskyblue: 0x00bfff,\n  dimgray: 0x696969,\n  dimgrey: 0x696969,\n  dodgerblue: 0x1e90ff,\n  firebrick: 0xb22222,\n  floralwhite: 0xfffaf0,\n  forestgreen: 0x228b22,\n  fuchsia: 0xff00ff,\n  gainsboro: 0xdcdcdc,\n  ghostwhite: 0xf8f8ff,\n  gold: 0xffd700,\n  goldenrod: 0xdaa520,\n  gray: 0x808080,\n  green: 0x008000,\n  greenyellow: 0xadff2f,\n  grey: 0x808080,\n  honeydew: 0xf0fff0,\n  hotpink: 0xff69b4,\n  indianred: 0xcd5c5c,\n  indigo: 0x4b0082,\n  ivory: 0xfffff0,\n  khaki: 0xf0e68c,\n  lavender: 0xe6e6fa,\n  lavenderblush: 0xfff0f5,\n  lawngreen: 0x7cfc00,\n  lemonchiffon: 0xfffacd,\n  lightblue: 0xadd8e6,\n  lightcoral: 0xf08080,\n  lightcyan: 0xe0ffff,\n  lightgoldenrodyellow: 0xfafad2,\n  lightgray: 0xd3d3d3,\n  lightgreen: 0x90ee90,\n  lightgrey: 0xd3d3d3,\n  lightpink: 0xffb6c1,\n  lightsalmon: 0xffa07a,\n  lightseagreen: 0x20b2aa,\n  lightskyblue: 0x87cefa,\n  lightslategray: 0x778899,\n  lightslategrey: 0x778899,\n  lightsteelblue: 0xb0c4de,\n  lightyellow: 0xffffe0,\n  lime: 0x00ff00,\n  limegreen: 0x32cd32,\n  linen: 0xfaf0e6,\n  magenta: 0xff00ff,\n  maroon: 0x800000,\n  mediumaquamarine: 0x66cdaa,\n  mediumblue: 0x0000cd,\n  mediumorchid: 0xba55d3,\n  mediumpurple: 0x9370db,\n  mediumseagreen: 0x3cb371,\n  mediumslateblue: 0x7b68ee,\n  mediumspringgreen: 0x00fa9a,\n  mediumturquoise: 0x48d1cc,\n  mediumvioletred: 0xc71585,\n  midnightblue: 0x191970,\n  mintcream: 0xf5fffa,\n  mistyrose: 0xffe4e1,\n  moccasin: 0xffe4b5,\n  navajowhite: 0xffdead,\n  navy: 0x000080,\n  oldlace: 0xfdf5e6,\n  olive: 0x808000,\n  olivedrab: 0x6b8e23,\n  orange: 0xffa500,\n  orangered: 0xff4500,\n  orchid: 0xda70d6,\n  palegoldenrod: 0xeee8aa,\n  palegreen: 0x98fb98,\n  paleturquoise: 0xafeeee,\n  palevioletred: 0xdb7093,\n  papayawhip: 0xffefd5,\n  peachpuff: 0xffdab9,\n  peru: 0xcd853f,\n  pink: 0xffc0cb,\n  plum: 0xdda0dd,\n  powderblue: 0xb0e0e6,\n  purple: 0x800080,\n  rebeccapurple: 0x663399,\n  red: 0xff0000,\n  rosybrown: 0xbc8f8f,\n  royalblue: 0x4169e1,\n  saddlebrown: 0x8b4513,\n  salmon: 0xfa8072,\n  sandybrown: 0xf4a460,\n  seagreen: 0x2e8b57,\n  seashell: 0xfff5ee,\n  sienna: 0xa0522d,\n  silver: 0xc0c0c0,\n  skyblue: 0x87ceeb,\n  slateblue: 0x6a5acd,\n  slategray: 0x708090,\n  slategrey: 0x708090,\n  snow: 0xfffafa,\n  springgreen: 0x00ff7f,\n  steelblue: 0x4682b4,\n  tan: 0xd2b48c,\n  teal: 0x008080,\n  thistle: 0xd8bfd8,\n  tomato: 0xff6347,\n  turquoise: 0x40e0d0,\n  violet: 0xee82ee,\n  wheat: 0xf5deb3,\n  white: 0xffffff,\n  whitesmoke: 0xf5f5f5,\n  yellow: 0xffff00,\n  yellowgreen: 0x9acd32\n};\n\ndefine(Color, color, {\n  displayable: function() {\n    return this.rgb().displayable();\n  },\n  hex: function() {\n    return this.rgb().hex();\n  },\n  toString: function() {\n    return this.rgb() + \"\";\n  }\n});\n\nexport default function color(format) {\n  var m;\n  format = (format + \"\").trim().toLowerCase();\n  return (m = reHex3.exec(format)) ? (m = parseInt(m[1], 16), new Rgb((m >> 8 & 0xf) | (m >> 4 & 0x0f0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1)) // #f00\n      : (m = reHex6.exec(format)) ? rgbn(parseInt(m[1], 16)) // #ff0000\n      : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\n      : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)\n      : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\n      : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)\n      : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\n      : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\n      : named.hasOwnProperty(format) ? rgbn(named[format])\n      : format === \"transparent\" ? new Rgb(NaN, NaN, NaN, 0)\n      : null;\n}\n\nfunction rgbn(n) {\n  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);\n}\n\nfunction rgba(r, g, b, a) {\n  if (a <= 0) r = g = b = NaN;\n  return new Rgb(r, g, b, a);\n}\n\nexport function rgbConvert(o) {\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Rgb;\n  o = o.rgb();\n  return new Rgb(o.r, o.g, o.b, o.opacity);\n}\n\nexport function rgb(r, g, b, opacity) {\n  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);\n}\n\nexport function Rgb(r, g, b, opacity) {\n  this.r = +r;\n  this.g = +g;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Rgb, rgb, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  rgb: function() {\n    return this;\n  },\n  displayable: function() {\n    return (0 <= this.r && this.r <= 255)\n        && (0 <= this.g && this.g <= 255)\n        && (0 <= this.b && this.b <= 255)\n        && (0 <= this.opacity && this.opacity <= 1);\n  },\n  hex: function() {\n    return \"#\" + hex(this.r) + hex(this.g) + hex(this.b);\n  },\n  toString: function() {\n    var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n    return (a === 1 ? \"rgb(\" : \"rgba(\")\n        + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.b) || 0))\n        + (a === 1 ? \")\" : \", \" + a + \")\");\n  }\n}));\n\nfunction hex(value) {\n  value = Math.max(0, Math.min(255, Math.round(value) || 0));\n  return (value < 16 ? \"0\" : \"\") + value.toString(16);\n}\n\nfunction hsla(h, s, l, a) {\n  if (a <= 0) h = s = l = NaN;\n  else if (l <= 0 || l >= 1) h = s = NaN;\n  else if (s <= 0) h = NaN;\n  return new Hsl(h, s, l, a);\n}\n\nexport function hslConvert(o) {\n  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Hsl;\n  if (o instanceof Hsl) return o;\n  o = o.rgb();\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      h = NaN,\n      s = max - min,\n      l = (max + min) / 2;\n  if (s) {\n    if (r === max) h = (g - b) / s + (g < b) * 6;\n    else if (g === max) h = (b - r) / s + 2;\n    else h = (r - g) / s + 4;\n    s /= l < 0.5 ? max + min : 2 - max - min;\n    h *= 60;\n  } else {\n    s = l > 0 && l < 1 ? 0 : h;\n  }\n  return new Hsl(h, s, l, o.opacity);\n}\n\nexport function hsl(h, s, l, opacity) {\n  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hsl(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hsl, hsl, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = this.h % 360 + (this.h < 0) * 360,\n        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n        l = this.l,\n        m2 = l + (l < 0.5 ? l : 1 - l) * s,\n        m1 = 2 * l - m2;\n    return new Rgb(\n      hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),\n      hsl2rgb(h, m1, m2),\n      hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),\n      this.opacity\n    );\n  },\n  displayable: function() {\n    return (0 <= this.s && this.s <= 1 || isNaN(this.s))\n        && (0 <= this.l && this.l <= 1)\n        && (0 <= this.opacity && this.opacity <= 1);\n  }\n}));\n\n/* From FvD 13.37, CSS Color Module Level 3 */\nfunction hsl2rgb(h, m1, m2) {\n  return (h < 60 ? m1 + (m2 - m1) * h / 60\n      : h < 180 ? m2\n      : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60\n      : m1) * 255;\n}\n","export var deg2rad = Math.PI / 180;\nexport var rad2deg = 180 / Math.PI;\n","import define, {extend} from \"./define\";\nimport {Color, rgbConvert, Rgb} from \"./color\";\nimport {deg2rad, rad2deg} from \"./math\";\n\n// https://beta.observablehq.com/@mbostock/lab-and-rgb\nvar K = 18,\n    Xn = 0.96422,\n    Yn = 1,\n    Zn = 0.82521,\n    t0 = 4 / 29,\n    t1 = 6 / 29,\n    t2 = 3 * t1 * t1,\n    t3 = t1 * t1 * t1;\n\nfunction labConvert(o) {\n  if (o instanceof Lab) return new Lab(o.l, o.a, o.b, o.opacity);\n  if (o instanceof Hcl) {\n    if (isNaN(o.h)) return new Lab(o.l, 0, 0, o.opacity);\n    var h = o.h * deg2rad;\n    return new Lab(o.l, Math.cos(h) * o.c, Math.sin(h) * o.c, o.opacity);\n  }\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = rgb2lrgb(o.r),\n      g = rgb2lrgb(o.g),\n      b = rgb2lrgb(o.b),\n      y = xyz2lab((0.2225045 * r + 0.7168786 * g + 0.0606169 * b) / Yn), x, z;\n  if (r === g && g === b) x = z = y; else {\n    x = xyz2lab((0.4360747 * r + 0.3850649 * g + 0.1430804 * b) / Xn);\n    z = xyz2lab((0.0139322 * r + 0.0971045 * g + 0.7141733 * b) / Zn);\n  }\n  return new Lab(116 * y - 16, 500 * (x - y), 200 * (y - z), o.opacity);\n}\n\nexport function gray(l, opacity) {\n  return new Lab(l, 0, 0, opacity == null ? 1 : opacity);\n}\n\nexport default function lab(l, a, b, opacity) {\n  return arguments.length === 1 ? labConvert(l) : new Lab(l, a, b, opacity == null ? 1 : opacity);\n}\n\nexport function Lab(l, a, b, opacity) {\n  this.l = +l;\n  this.a = +a;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Lab, lab, extend(Color, {\n  brighter: function(k) {\n    return new Lab(this.l + K * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  darker: function(k) {\n    return new Lab(this.l - K * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  rgb: function() {\n    var y = (this.l + 16) / 116,\n        x = isNaN(this.a) ? y : y + this.a / 500,\n        z = isNaN(this.b) ? y : y - this.b / 200;\n    x = Xn * lab2xyz(x);\n    y = Yn * lab2xyz(y);\n    z = Zn * lab2xyz(z);\n    return new Rgb(\n      lrgb2rgb( 3.1338561 * x - 1.6168667 * y - 0.4906146 * z),\n      lrgb2rgb(-0.9787684 * x + 1.9161415 * y + 0.0334540 * z),\n      lrgb2rgb( 0.0719453 * x - 0.2289914 * y + 1.4052427 * z),\n      this.opacity\n    );\n  }\n}));\n\nfunction xyz2lab(t) {\n  return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;\n}\n\nfunction lab2xyz(t) {\n  return t > t1 ? t * t * t : t2 * (t - t0);\n}\n\nfunction lrgb2rgb(x) {\n  return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\n}\n\nfunction rgb2lrgb(x) {\n  return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n}\n\nfunction hclConvert(o) {\n  if (o instanceof Hcl) return new Hcl(o.h, o.c, o.l, o.opacity);\n  if (!(o instanceof Lab)) o = labConvert(o);\n  if (o.a === 0 && o.b === 0) return new Hcl(NaN, 0, o.l, o.opacity);\n  var h = Math.atan2(o.b, o.a) * rad2deg;\n  return new Hcl(h < 0 ? h + 360 : h, Math.sqrt(o.a * o.a + o.b * o.b), o.l, o.opacity);\n}\n\nexport function lch(l, c, h, opacity) {\n  return arguments.length === 1 ? hclConvert(l) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\n\nexport function hcl(h, c, l, opacity) {\n  return arguments.length === 1 ? hclConvert(h) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\n\nexport function Hcl(h, c, l, opacity) {\n  this.h = +h;\n  this.c = +c;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hcl, hcl, extend(Color, {\n  brighter: function(k) {\n    return new Hcl(this.h, this.c, this.l + K * (k == null ? 1 : k), this.opacity);\n  },\n  darker: function(k) {\n    return new Hcl(this.h, this.c, this.l - K * (k == null ? 1 : k), this.opacity);\n  },\n  rgb: function() {\n    return labConvert(this).rgb();\n  }\n}));\n","import define, {extend} from \"./define\";\nimport {Color, rgbConvert, Rgb, darker, brighter} from \"./color\";\nimport {deg2rad, rad2deg} from \"./math\";\n\nvar A = -0.14861,\n    B = +1.78277,\n    C = -0.29227,\n    D = -0.90649,\n    E = +1.97294,\n    ED = E * D,\n    EB = E * B,\n    BC_DA = B * C - D * A;\n\nfunction cubehelixConvert(o) {\n  if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB),\n      bl = b - l,\n      k = (E * (g - l) - C * bl) / D,\n      s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)), // NaN if l=0 or l=1\n      h = s ? Math.atan2(k, bl) * rad2deg - 120 : NaN;\n  return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);\n}\n\nexport default function cubehelix(h, s, l, opacity) {\n  return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);\n}\n\nexport function Cubehelix(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Cubehelix, cubehelix, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = isNaN(this.h) ? 0 : (this.h + 120) * deg2rad,\n        l = +this.l,\n        a = isNaN(this.s) ? 0 : this.s * l * (1 - l),\n        cosh = Math.cos(h),\n        sinh = Math.sin(h);\n    return new Rgb(\n      255 * (l + a * (A * cosh + B * sinh)),\n      255 * (l + a * (C * cosh + D * sinh)),\n      255 * (l + a * (E * cosh)),\n      this.opacity\n    );\n  }\n}));\n","export function basis(t1, v0, v1, v2, v3) {\n  var t2 = t1 * t1, t3 = t2 * t1;\n  return ((1 - 3 * t1 + 3 * t2 - t3) * v0\n      + (4 - 6 * t2 + 3 * t3) * v1\n      + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2\n      + t3 * v3) / 6;\n}\n\nexport default function(values) {\n  var n = values.length - 1;\n  return function(t) {\n    var i = t <= 0 ? (t = 0) : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),\n        v1 = values[i],\n        v2 = values[i + 1],\n        v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,\n        v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n}\n","import {basis} from \"./basis\";\n\nexport default function(values) {\n  var n = values.length;\n  return function(t) {\n    var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n),\n        v0 = values[(i + n - 1) % n],\n        v1 = values[i % n],\n        v2 = values[(i + 1) % n],\n        v3 = values[(i + 2) % n];\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","import constant from \"./constant\";\n\nfunction linear(a, d) {\n  return function(t) {\n    return a + t * d;\n  };\n}\n\nfunction exponential(a, b, y) {\n  return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function(t) {\n    return Math.pow(a + t * b, y);\n  };\n}\n\nexport function hue(a, b) {\n  var d = b - a;\n  return d ? linear(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : constant(isNaN(a) ? b : a);\n}\n\nexport function gamma(y) {\n  return (y = +y) === 1 ? nogamma : function(a, b) {\n    return b - a ? exponential(a, b, y) : constant(isNaN(a) ? b : a);\n  };\n}\n\nexport default function nogamma(a, b) {\n  var d = b - a;\n  return d ? linear(a, d) : constant(isNaN(a) ? b : a);\n}\n","import {rgb as colorRgb} from \"d3-color\";\nimport basis from \"./basis\";\nimport basisClosed from \"./basisClosed\";\nimport nogamma, {gamma} from \"./color\";\n\nexport default (function rgbGamma(y) {\n  var color = gamma(y);\n\n  function rgb(start, end) {\n    var r = color((start = colorRgb(start)).r, (end = colorRgb(end)).r),\n        g = color(start.g, end.g),\n        b = color(start.b, end.b),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.r = r(t);\n      start.g = g(t);\n      start.b = b(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n\n  rgb.gamma = rgbGamma;\n\n  return rgb;\n})(1);\n\nfunction rgbSpline(spline) {\n  return function(colors) {\n    var n = colors.length,\n        r = new Array(n),\n        g = new Array(n),\n        b = new Array(n),\n        i, color;\n    for (i = 0; i < n; ++i) {\n      color = colorRgb(colors[i]);\n      r[i] = color.r || 0;\n      g[i] = color.g || 0;\n      b[i] = color.b || 0;\n    }\n    r = spline(r);\n    g = spline(g);\n    b = spline(b);\n    color.opacity = 1;\n    return function(t) {\n      color.r = r(t);\n      color.g = g(t);\n      color.b = b(t);\n      return color + \"\";\n    };\n  };\n}\n\nexport var rgbBasis = rgbSpline(basis);\nexport var rgbBasisClosed = rgbSpline(basisClosed);\n","import value from \"./value\";\n\nexport default function(a, b) {\n  var nb = b ? b.length : 0,\n      na = a ? Math.min(nb, a.length) : 0,\n      x = new Array(na),\n      c = new Array(nb),\n      i;\n\n  for (i = 0; i < na; ++i) x[i] = value(a[i], b[i]);\n  for (; i < nb; ++i) c[i] = b[i];\n\n  return function(t) {\n    for (i = 0; i < na; ++i) c[i] = x[i](t);\n    return c;\n  };\n}\n","export default function(a, b) {\n  var d = new Date;\n  return a = +a, b -= a, function(t) {\n    return d.setTime(a + b * t), d;\n  };\n}\n","export default function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return a + b * t;\n  };\n}\n","import value from \"./value\";\n\nexport default function(a, b) {\n  var i = {},\n      c = {},\n      k;\n\n  if (a === null || typeof a !== \"object\") a = {};\n  if (b === null || typeof b !== \"object\") b = {};\n\n  for (k in b) {\n    if (k in a) {\n      i[k] = value(a[k], b[k]);\n    } else {\n      c[k] = b[k];\n    }\n  }\n\n  return function(t) {\n    for (k in i) c[k] = i[k](t);\n    return c;\n  };\n}\n","import number from \"./number\";\n\nvar reA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g,\n    reB = new RegExp(reA.source, \"g\");\n\nfunction zero(b) {\n  return function() {\n    return b;\n  };\n}\n\nfunction one(b) {\n  return function(t) {\n    return b(t) + \"\";\n  };\n}\n\nexport default function(a, b) {\n  var bi = reA.lastIndex = reB.lastIndex = 0, // scan index for next number in b\n      am, // current match in a\n      bm, // current match in b\n      bs, // string preceding current number in b, if any\n      i = -1, // index in s\n      s = [], // string constants and placeholders\n      q = []; // number interpolators\n\n  // Coerce inputs to strings.\n  a = a + \"\", b = b + \"\";\n\n  // Interpolate pairs of numbers in a & b.\n  while ((am = reA.exec(a))\n      && (bm = reB.exec(b))) {\n    if ((bs = bm.index) > bi) { // a string precedes the next number in b\n      bs = b.slice(bi, bs);\n      if (s[i]) s[i] += bs; // coalesce with previous string\n      else s[++i] = bs;\n    }\n    if ((am = am[0]) === (bm = bm[0])) { // numbers in a & b match\n      if (s[i]) s[i] += bm; // coalesce with previous string\n      else s[++i] = bm;\n    } else { // interpolate non-matching numbers\n      s[++i] = null;\n      q.push({i: i, x: number(am, bm)});\n    }\n    bi = reB.lastIndex;\n  }\n\n  // Add remains of b.\n  if (bi < b.length) {\n    bs = b.slice(bi);\n    if (s[i]) s[i] += bs; // coalesce with previous string\n    else s[++i] = bs;\n  }\n\n  // Special optimization for only a single match.\n  // Otherwise, interpolate each of the numbers and rejoin the string.\n  return s.length < 2 ? (q[0]\n      ? one(q[0].x)\n      : zero(b))\n      : (b = q.length, function(t) {\n          for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n          return s.join(\"\");\n        });\n}\n","import decompose, {identity} from \"./decompose\";\n\nvar cssNode,\n    cssRoot,\n    cssView,\n    svgNode;\n\nexport function parseCss(value) {\n  if (value === \"none\") return identity;\n  if (!cssNode) cssNode = document.createElement(\"DIV\"), cssRoot = document.documentElement, cssView = document.defaultView;\n  cssNode.style.transform = value;\n  value = cssView.getComputedStyle(cssRoot.appendChild(cssNode), null).getPropertyValue(\"transform\");\n  cssRoot.removeChild(cssNode);\n  value = value.slice(7, -1).split(\",\");\n  return decompose(+value[0], +value[1], +value[2], +value[3], +value[4], +value[5]);\n}\n\nexport function parseSvg(value) {\n  if (value == null) return identity;\n  if (!svgNode) svgNode = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n  svgNode.setAttribute(\"transform\", value);\n  if (!(value = svgNode.transform.baseVal.consolidate())) return identity;\n  value = value.matrix;\n  return decompose(value.a, value.b, value.c, value.d, value.e, value.f);\n}\n","import {color} from \"d3-color\";\nimport rgb from \"./rgb\";\nimport array from \"./array\";\nimport date from \"./date\";\nimport number from \"./number\";\nimport object from \"./object\";\nimport string from \"./string\";\nimport constant from \"./constant\";\n\nexport default function(a, b) {\n  var t = typeof b, c;\n  return b == null || t === \"boolean\" ? constant(b)\n      : (t === \"number\" ? number\n      : t === \"string\" ? ((c = color(b)) ? (b = c, rgb) : string)\n      : b instanceof color ? rgb\n      : b instanceof Date ? date\n      : Array.isArray(b) ? array\n      : typeof b.valueOf !== \"function\" && typeof b.toString !== \"function\" || isNaN(b) ? object\n      : number)(a, b);\n}\n","export default function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return Math.round(a + b * t);\n  };\n}\n","var degrees = 180 / Math.PI;\n\nexport var identity = {\n  translateX: 0,\n  translateY: 0,\n  rotate: 0,\n  skewX: 0,\n  scaleX: 1,\n  scaleY: 1\n};\n\nexport default function(a, b, c, d, e, f) {\n  var scaleX, scaleY, skewX;\n  if (scaleX = Math.sqrt(a * a + b * b)) a /= scaleX, b /= scaleX;\n  if (skewX = a * c + b * d) c -= a * skewX, d -= b * skewX;\n  if (scaleY = Math.sqrt(c * c + d * d)) c /= scaleY, d /= scaleY, skewX /= scaleY;\n  if (a * d < b * c) a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;\n  return {\n    translateX: e,\n    translateY: f,\n    rotate: Math.atan2(b, a) * degrees,\n    skewX: Math.atan(skewX) * degrees,\n    scaleX: scaleX,\n    scaleY: scaleY\n  };\n}\n","import number from \"../number\";\nimport {parseCss, parseSvg} from \"./parse\";\n\nfunction interpolateTransform(parse, pxComma, pxParen, degParen) {\n\n  function pop(s) {\n    return s.length ? s.pop() + \" \" : \"\";\n  }\n\n  function translate(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(\"translate(\", null, pxComma, null, pxParen);\n      q.push({i: i - 4, x: number(xa, xb)}, {i: i - 2, x: number(ya, yb)});\n    } else if (xb || yb) {\n      s.push(\"translate(\" + xb + pxComma + yb + pxParen);\n    }\n  }\n\n  function rotate(a, b, s, q) {\n    if (a !== b) {\n      if (a - b > 180) b += 360; else if (b - a > 180) a += 360; // shortest path\n      q.push({i: s.push(pop(s) + \"rotate(\", null, degParen) - 2, x: number(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"rotate(\" + b + degParen);\n    }\n  }\n\n  function skewX(a, b, s, q) {\n    if (a !== b) {\n      q.push({i: s.push(pop(s) + \"skewX(\", null, degParen) - 2, x: number(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"skewX(\" + b + degParen);\n    }\n  }\n\n  function scale(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(pop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({i: i - 4, x: number(xa, xb)}, {i: i - 2, x: number(ya, yb)});\n    } else if (xb !== 1 || yb !== 1) {\n      s.push(pop(s) + \"scale(\" + xb + \",\" + yb + \")\");\n    }\n  }\n\n  return function(a, b) {\n    var s = [], // string constants and placeholders\n        q = []; // number interpolators\n    a = parse(a), b = parse(b);\n    translate(a.translateX, a.translateY, b.translateX, b.translateY, s, q);\n    rotate(a.rotate, b.rotate, s, q);\n    skewX(a.skewX, b.skewX, s, q);\n    scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s, q);\n    a = b = null; // gc\n    return function(t) {\n      var i = -1, n = q.length, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  };\n}\n\nexport var interpolateTransformCss = interpolateTransform(parseCss, \"px, \", \"px)\", \"deg)\");\nexport var interpolateTransformSvg = interpolateTransform(parseSvg, \", \", \")\", \")\");\n","var rho = Math.SQRT2,\n    rho2 = 2,\n    rho4 = 4,\n    epsilon2 = 1e-12;\n\nfunction cosh(x) {\n  return ((x = Math.exp(x)) + 1 / x) / 2;\n}\n\nfunction sinh(x) {\n  return ((x = Math.exp(x)) - 1 / x) / 2;\n}\n\nfunction tanh(x) {\n  return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n}\n\n// p0 = [ux0, uy0, w0]\n// p1 = [ux1, uy1, w1]\nexport default function(p0, p1) {\n  var ux0 = p0[0], uy0 = p0[1], w0 = p0[2],\n      ux1 = p1[0], uy1 = p1[1], w1 = p1[2],\n      dx = ux1 - ux0,\n      dy = uy1 - uy0,\n      d2 = dx * dx + dy * dy,\n      i,\n      S;\n\n  // Special case for u0 ≅ u1.\n  if (d2 < epsilon2) {\n    S = Math.log(w1 / w0) / rho;\n    i = function(t) {\n      return [\n        ux0 + t * dx,\n        uy0 + t * dy,\n        w0 * Math.exp(rho * t * S)\n      ];\n    }\n  }\n\n  // General case.\n  else {\n    var d1 = Math.sqrt(d2),\n        b0 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1),\n        b1 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1),\n        r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),\n        r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n    S = (r1 - r0) / rho;\n    i = function(t) {\n      var s = t * S,\n          coshr0 = cosh(r0),\n          u = w0 / (rho2 * d1) * (coshr0 * tanh(rho * s + r0) - sinh(r0));\n      return [\n        ux0 + u * dx,\n        uy0 + u * dy,\n        w0 * coshr0 / cosh(rho * s + r0)\n      ];\n    }\n  }\n\n  i.duration = S * 1000;\n\n  return i;\n}\n","import {hsl as colorHsl} from \"d3-color\";\nimport color, {hue} from \"./color\";\n\nfunction hsl(hue) {\n  return function(start, end) {\n    var h = hue((start = colorHsl(start)).h, (end = colorHsl(end)).h),\n        s = color(start.s, end.s),\n        l = color(start.l, end.l),\n        opacity = color(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.s = s(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nexport default hsl(hue);\nexport var hslLong = hsl(color);\n","import {lab as colorLab} from \"d3-color\";\nimport color from \"./color\";\n\nexport default function lab(start, end) {\n  var l = color((start = colorLab(start)).l, (end = colorLab(end)).l),\n      a = color(start.a, end.a),\n      b = color(start.b, end.b),\n      opacity = color(start.opacity, end.opacity);\n  return function(t) {\n    start.l = l(t);\n    start.a = a(t);\n    start.b = b(t);\n    start.opacity = opacity(t);\n    return start + \"\";\n  };\n}\n","import {hcl as colorHcl} from \"d3-color\";\nimport color, {hue} from \"./color\";\n\nfunction hcl(hue) {\n  return function(start, end) {\n    var h = hue((start = colorHcl(start)).h, (end = colorHcl(end)).h),\n        c = color(start.c, end.c),\n        l = color(start.l, end.l),\n        opacity = color(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.c = c(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nexport default hcl(hue);\nexport var hclLong = hcl(color);\n","import {cubehelix as colorCubehelix} from \"d3-color\";\nimport color, {hue} from \"./color\";\n\nfunction cubehelix(hue) {\n  return (function cubehelixGamma(y) {\n    y = +y;\n\n    function cubehelix(start, end) {\n      var h = hue((start = colorCubehelix(start)).h, (end = colorCubehelix(end)).h),\n          s = color(start.s, end.s),\n          l = color(start.l, end.l),\n          opacity = color(start.opacity, end.opacity);\n      return function(t) {\n        start.h = h(t);\n        start.s = s(t);\n        start.l = l(Math.pow(t, y));\n        start.opacity = opacity(t);\n        return start + \"\";\n      };\n    }\n\n    cubehelix.gamma = cubehelixGamma;\n\n    return cubehelix;\n  })(1);\n}\n\nexport default cubehelix(hue);\nexport var cubehelixLong = cubehelix(color);\n","export default function piecewise(interpolate, values) {\n  var i = 0, n = values.length - 1, v = values[0], I = new Array(n < 0 ? 0 : n);\n  while (i < n) I[i] = interpolate(v, v = values[++i]);\n  return function(t) {\n    var i = Math.max(0, Math.min(n - 1, Math.floor(t *= n)));\n    return I[i](t - i);\n  };\n}\n","export default function(interpolator, n) {\n  var samples = new Array(n);\n  for (var i = 0; i < n; ++i) samples[i] = interpolator(i / (n - 1));\n  return samples;\n}\n","var frame = 0, // is an animation frame pending?\n    timeout = 0, // is a timeout pending?\n    interval = 0, // are any timers active?\n    pokeDelay = 1000, // how frequently we check for clock skew\n    taskHead,\n    taskTail,\n    clockLast = 0,\n    clockNow = 0,\n    clockSkew = 0,\n    clock = typeof performance === \"object\" && performance.now ? performance : Date,\n    setFrame = typeof window === \"object\" && window.requestAnimationFrame ? window.requestAnimationFrame.bind(window) : function(f) { setTimeout(f, 17); };\n\nexport function now() {\n  return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);\n}\n\nfunction clearNow() {\n  clockNow = 0;\n}\n\nexport function Timer() {\n  this._call =\n  this._time =\n  this._next = null;\n}\n\nTimer.prototype = timer.prototype = {\n  constructor: Timer,\n  restart: function(callback, delay, time) {\n    if (typeof callback !== \"function\") throw new TypeError(\"callback is not a function\");\n    time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);\n    if (!this._next && taskTail !== this) {\n      if (taskTail) taskTail._next = this;\n      else taskHead = this;\n      taskTail = this;\n    }\n    this._call = callback;\n    this._time = time;\n    sleep();\n  },\n  stop: function() {\n    if (this._call) {\n      this._call = null;\n      this._time = Infinity;\n      sleep();\n    }\n  }\n};\n\nexport function timer(callback, delay, time) {\n  var t = new Timer;\n  t.restart(callback, delay, time);\n  return t;\n}\n\nexport function timerFlush() {\n  now(); // Get the current time, if not already set.\n  ++frame; // Pretend we’ve set an alarm, if we haven’t already.\n  var t = taskHead, e;\n  while (t) {\n    if ((e = clockNow - t._time) >= 0) t._call.call(null, e);\n    t = t._next;\n  }\n  --frame;\n}\n\nfunction wake() {\n  clockNow = (clockLast = clock.now()) + clockSkew;\n  frame = timeout = 0;\n  try {\n    timerFlush();\n  } finally {\n    frame = 0;\n    nap();\n    clockNow = 0;\n  }\n}\n\nfunction poke() {\n  var now = clock.now(), delay = now - clockLast;\n  if (delay > pokeDelay) clockSkew -= delay, clockLast = now;\n}\n\nfunction nap() {\n  var t0, t1 = taskHead, t2, time = Infinity;\n  while (t1) {\n    if (t1._call) {\n      if (time > t1._time) time = t1._time;\n      t0 = t1, t1 = t1._next;\n    } else {\n      t2 = t1._next, t1._next = null;\n      t1 = t0 ? t0._next = t2 : taskHead = t2;\n    }\n  }\n  taskTail = t0;\n  sleep(time);\n}\n\nfunction sleep(time) {\n  if (frame) return; // Soonest alarm already set, or will be.\n  if (timeout) timeout = clearTimeout(timeout);\n  var delay = time - clockNow; // Strictly less than if we recomputed clockNow.\n  if (delay > 24) {\n    if (time < Infinity) timeout = setTimeout(wake, time - clock.now() - clockSkew);\n    if (interval) interval = clearInterval(interval);\n  } else {\n    if (!interval) clockLast = clock.now(), interval = setInterval(poke, pokeDelay);\n    frame = 1, setFrame(wake);\n  }\n}\n","import {Timer} from \"./timer\";\n\nexport default function(callback, delay, time) {\n  var t = new Timer;\n  delay = delay == null ? 0 : +delay;\n  t.restart(function(elapsed) {\n    t.stop();\n    callback(elapsed + delay);\n  }, delay, time);\n  return t;\n}\n","import {Timer, now} from \"./timer\";\n\nexport default function(callback, delay, time) {\n  var t = new Timer, total = delay;\n  if (delay == null) return t.restart(callback, delay, time), t;\n  delay = +delay, time = time == null ? now() : +time;\n  t.restart(function tick(elapsed) {\n    elapsed += total;\n    t.restart(tick, total += delay, time);\n    callback(elapsed);\n  }, delay, time);\n  return t;\n}\n","import {dispatch} from \"d3-dispatch\";\nimport {timer, timeout} from \"d3-timer\";\n\nvar emptyOn = dispatch(\"start\", \"end\", \"interrupt\");\nvar emptyTween = [];\n\nexport var CREATED = 0;\nexport var SCHEDULED = 1;\nexport var STARTING = 2;\nexport var STARTED = 3;\nexport var RUNNING = 4;\nexport var ENDING = 5;\nexport var ENDED = 6;\n\nexport default function(node, name, id, index, group, timing) {\n  var schedules = node.__transition;\n  if (!schedules) node.__transition = {};\n  else if (id in schedules) return;\n  create(node, id, {\n    name: name,\n    index: index, // For context during callback.\n    group: group, // For context during callback.\n    on: emptyOn,\n    tween: emptyTween,\n    time: timing.time,\n    delay: timing.delay,\n    duration: timing.duration,\n    ease: timing.ease,\n    timer: null,\n    state: CREATED\n  });\n}\n\nexport function init(node, id) {\n  var schedule = get(node, id);\n  if (schedule.state > CREATED) throw new Error(\"too late; already scheduled\");\n  return schedule;\n}\n\nexport function set(node, id) {\n  var schedule = get(node, id);\n  if (schedule.state > STARTING) throw new Error(\"too late; already started\");\n  return schedule;\n}\n\nexport function get(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id])) throw new Error(\"transition not found\");\n  return schedule;\n}\n\nfunction create(node, id, self) {\n  var schedules = node.__transition,\n      tween;\n\n  // Initialize the self timer when the transition is created.\n  // Note the actual delay is not known until the first callback!\n  schedules[id] = self;\n  self.timer = timer(schedule, 0, self.time);\n\n  function schedule(elapsed) {\n    self.state = SCHEDULED;\n    self.timer.restart(start, self.delay, self.time);\n\n    // If the elapsed delay is less than our first sleep, start immediately.\n    if (self.delay <= elapsed) start(elapsed - self.delay);\n  }\n\n  function start(elapsed) {\n    var i, j, n, o;\n\n    // If the state is not SCHEDULED, then we previously errored on start.\n    if (self.state !== SCHEDULED) return stop();\n\n    for (i in schedules) {\n      o = schedules[i];\n      if (o.name !== self.name) continue;\n\n      // While this element already has a starting transition during this frame,\n      // defer starting an interrupting transition until that transition has a\n      // chance to tick (and possibly end); see d3/d3-transition#54!\n      if (o.state === STARTED) return timeout(start);\n\n      // Interrupt the active transition, if any.\n      // Dispatch the interrupt event.\n      if (o.state === RUNNING) {\n        o.state = ENDED;\n        o.timer.stop();\n        o.on.call(\"interrupt\", node, node.__data__, o.index, o.group);\n        delete schedules[i];\n      }\n\n      // Cancel any pre-empted transitions. No interrupt event is dispatched\n      // because the cancelled transitions never started. Note that this also\n      // removes this transition from the pending list!\n      else if (+i < id) {\n        o.state = ENDED;\n        o.timer.stop();\n        delete schedules[i];\n      }\n    }\n\n    // Defer the first tick to end of the current frame; see d3/d3#1576.\n    // Note the transition may be canceled after start and before the first tick!\n    // Note this must be scheduled before the start event; see d3/d3-transition#16!\n    // Assuming this is successful, subsequent callbacks go straight to tick.\n    timeout(function() {\n      if (self.state === STARTED) {\n        self.state = RUNNING;\n        self.timer.restart(tick, self.delay, self.time);\n        tick(elapsed);\n      }\n    });\n\n    // Dispatch the start event.\n    // Note this must be done before the tween are initialized.\n    self.state = STARTING;\n    self.on.call(\"start\", node, node.__data__, self.index, self.group);\n    if (self.state !== STARTING) return; // interrupted\n    self.state = STARTED;\n\n    // Initialize the tween, deleting null tween.\n    tween = new Array(n = self.tween.length);\n    for (i = 0, j = -1; i < n; ++i) {\n      if (o = self.tween[i].value.call(node, node.__data__, self.index, self.group)) {\n        tween[++j] = o;\n      }\n    }\n    tween.length = j + 1;\n  }\n\n  function tick(elapsed) {\n    var t = elapsed < self.duration ? self.ease.call(null, elapsed / self.duration) : (self.timer.restart(stop), self.state = ENDING, 1),\n        i = -1,\n        n = tween.length;\n\n    while (++i < n) {\n      tween[i].call(null, t);\n    }\n\n    // Dispatch the end event.\n    if (self.state === ENDING) {\n      self.on.call(\"end\", node, node.__data__, self.index, self.group);\n      stop();\n    }\n  }\n\n  function stop() {\n    self.state = ENDED;\n    self.timer.stop();\n    delete schedules[id];\n    for (var i in schedules) return; // eslint-disable-line no-unused-vars\n    delete node.__transition;\n  }\n}\n","import {STARTING, ENDING, ENDED} from \"./transition/schedule\";\n\nexport default function(node, name) {\n  var schedules = node.__transition,\n      schedule,\n      active,\n      empty = true,\n      i;\n\n  if (!schedules) return;\n\n  name = name == null ? null : name + \"\";\n\n  for (i in schedules) {\n    if ((schedule = schedules[i]).name !== name) { empty = false; continue; }\n    active = schedule.state > STARTING && schedule.state < ENDING;\n    schedule.state = ENDED;\n    schedule.timer.stop();\n    if (active) schedule.on.call(\"interrupt\", node, node.__data__, schedule.index, schedule.group);\n    delete schedules[i];\n  }\n\n  if (empty) delete node.__transition;\n}\n","import {get, set} from \"./schedule\";\n\nfunction tweenRemove(id, name) {\n  var tween0, tween1;\n  return function() {\n    var schedule = set(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = tween0 = tween;\n      for (var i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1 = tween1.slice();\n          tween1.splice(i, 1);\n          break;\n        }\n      }\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nfunction tweenFunction(id, name, value) {\n  var tween0, tween1;\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    var schedule = set(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = (tween0 = tween).slice();\n      for (var t = {name: name, value: value}, i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1[i] = t;\n          break;\n        }\n      }\n      if (i === n) tween1.push(t);\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nexport default function(name, value) {\n  var id = this._id;\n\n  name += \"\";\n\n  if (arguments.length < 2) {\n    var tween = get(this.node(), id).tween;\n    for (var i = 0, n = tween.length, t; i < n; ++i) {\n      if ((t = tween[i]).name === name) {\n        return t.value;\n      }\n    }\n    return null;\n  }\n\n  return this.each((value == null ? tweenRemove : tweenFunction)(id, name, value));\n}\n\nexport function tweenValue(transition, name, value) {\n  var id = transition._id;\n\n  transition.each(function() {\n    var schedule = set(this, id);\n    (schedule.value || (schedule.value = {}))[name] = value.apply(this, arguments);\n  });\n\n  return function(node) {\n    return get(node, id).value[name];\n  };\n}\n","import {color} from \"d3-color\";\nimport {interpolateNumber, interpolateRgb, interpolateString} from \"d3-interpolate\";\n\nexport default function(a, b) {\n  var c;\n  return (typeof b === \"number\" ? interpolateNumber\n      : b instanceof color ? interpolateRgb\n      : (c = color(b)) ? (b = c, interpolateRgb)\n      : interpolateString)(a, b);\n}\n","function removeFunction(id) {\n  return function() {\n    var parent = this.parentNode;\n    for (var i in this.__transition) if (+i !== id) return;\n    if (parent) parent.removeChild(this);\n  };\n}\n\nexport default function() {\n  return this.on(\"end.remove\", removeFunction(this._id));\n}\n","import {selection} from \"d3-selection\";\n\nvar Selection = selection.prototype.constructor;\n\nexport default function() {\n  return new Selection(this._groups, this._parents);\n}\n","import {tweenValue} from \"./tween\";\n\nfunction textConstant(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function() {\n    var value1 = value(this);\n    this.textContent = value1 == null ? \"\" : value1;\n  };\n}\n\nexport default function(value) {\n  return this.tween(\"text\", typeof value === \"function\"\n      ? textFunction(tweenValue(this, \"text\", value))\n      : textConstant(value == null ? \"\" : value + \"\"));\n}\n","import {selection} from \"d3-selection\";\nimport transition_attr from \"./attr\";\nimport transition_attrTween from \"./attrTween\";\nimport transition_delay from \"./delay\";\nimport transition_duration from \"./duration\";\nimport transition_ease from \"./ease\";\nimport transition_filter from \"./filter\";\nimport transition_merge from \"./merge\";\nimport transition_on from \"./on\";\nimport transition_remove from \"./remove\";\nimport transition_select from \"./select\";\nimport transition_selectAll from \"./selectAll\";\nimport transition_selection from \"./selection\";\nimport transition_style from \"./style\";\nimport transition_styleTween from \"./styleTween\";\nimport transition_text from \"./text\";\nimport transition_transition from \"./transition\";\nimport transition_tween from \"./tween\";\n\nvar id = 0;\n\nexport function Transition(groups, parents, name, id) {\n  this._groups = groups;\n  this._parents = parents;\n  this._name = name;\n  this._id = id;\n}\n\nexport default function transition(name) {\n  return selection().transition(name);\n}\n\nexport function newId() {\n  return ++id;\n}\n\nvar selection_prototype = selection.prototype;\n\nTransition.prototype = transition.prototype = {\n  constructor: Transition,\n  select: transition_select,\n  selectAll: transition_selectAll,\n  filter: transition_filter,\n  merge: transition_merge,\n  selection: transition_selection,\n  transition: transition_transition,\n  call: selection_prototype.call,\n  nodes: selection_prototype.nodes,\n  node: selection_prototype.node,\n  size: selection_prototype.size,\n  empty: selection_prototype.empty,\n  each: selection_prototype.each,\n  on: transition_on,\n  attr: transition_attr,\n  attrTween: transition_attrTween,\n  style: transition_style,\n  styleTween: transition_styleTween,\n  text: transition_text,\n  remove: transition_remove,\n  tween: transition_tween,\n  delay: transition_delay,\n  duration: transition_duration,\n  ease: transition_ease\n};\n","export function linear(t) {\n  return +t;\n}\n","export function quadIn(t) {\n  return t * t;\n}\n\nexport function quadOut(t) {\n  return t * (2 - t);\n}\n\nexport function quadInOut(t) {\n  return ((t *= 2) <= 1 ? t * t : --t * (2 - t) + 1) / 2;\n}\n","export function cubicIn(t) {\n  return t * t * t;\n}\n\nexport function cubicOut(t) {\n  return --t * t * t + 1;\n}\n\nexport function cubicInOut(t) {\n  return ((t *= 2) <= 1 ? t * t * t : (t -= 2) * t * t + 2) / 2;\n}\n","import {selector} from \"d3-selection\";\nimport {Transition} from \"./index\";\nimport schedule, {get} from \"./schedule\";\n\nexport default function(select) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select !== \"function\") select = selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n        schedule(subgroup[i], name, id, i, subgroup, get(node, id));\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, name, id);\n}\n","import {selectorAll} from \"d3-selection\";\nimport {Transition} from \"./index\";\nimport schedule, {get} from \"./schedule\";\n\nexport default function(select) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select !== \"function\") select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        for (var children = select.call(node, node.__data__, i, group), child, inherit = get(node, id), k = 0, l = children.length; k < l; ++k) {\n          if (child = children[k]) {\n            schedule(child, name, id, k, children, inherit);\n          }\n        }\n        subgroups.push(children);\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, parents, name, id);\n}\n","import {matcher} from \"d3-selection\";\nimport {Transition} from \"./index\";\n\nexport default function(match) {\n  if (typeof match !== \"function\") match = matcher(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, this._name, this._id);\n}\n","import {Transition} from \"./index\";\n\nexport default function(transition) {\n  if (transition._id !== this._id) throw new Error;\n\n  for (var groups0 = this._groups, groups1 = transition._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Transition(merges, this._parents, this._name, this._id);\n}\n","import {Transition, newId} from \"./index\";\nimport schedule, {get} from \"./schedule\";\n\nexport default function() {\n  var name = this._name,\n      id0 = this._id,\n      id1 = newId();\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        var inherit = get(node, id0);\n        schedule(node, name, id1, i, group, {\n          time: inherit.time + inherit.delay + inherit.duration,\n          delay: 0,\n          duration: inherit.duration,\n          ease: inherit.ease\n        });\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id1);\n}\n","import {get, set, init} from \"./schedule\";\n\nfunction start(name) {\n  return (name + \"\").trim().split(/^|\\s+/).every(function(t) {\n    var i = t.indexOf(\".\");\n    if (i >= 0) t = t.slice(0, i);\n    return !t || t === \"start\";\n  });\n}\n\nfunction onFunction(id, name, listener) {\n  var on0, on1, sit = start(name) ? init : set;\n  return function() {\n    var schedule = sit(this, id),\n        on = schedule.on;\n\n    // If this node shared a dispatch with the previous node,\n    // just assign the updated shared dispatch and we’re done!\n    // Otherwise, copy-on-write.\n    if (on !== on0) (on1 = (on0 = on).copy()).on(name, listener);\n\n    schedule.on = on1;\n  };\n}\n\nexport default function(name, listener) {\n  var id = this._id;\n\n  return arguments.length < 2\n      ? get(this.node(), id).on.on(name)\n      : this.each(onFunction(id, name, listener));\n}\n","import {interpolateTransformSvg as interpolateTransform} from \"d3-interpolate\";\nimport {namespace} from \"d3-selection\";\nimport {tweenValue} from \"./tween\";\nimport interpolate from \"./interpolate\";\n\nfunction attrRemove(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, interpolate, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = this.getAttribute(name);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value1);\n  };\n}\n\nfunction attrConstantNS(fullname, interpolate, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = this.getAttributeNS(fullname.space, fullname.local);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value1);\n  };\n}\n\nfunction attrFunction(name, interpolate, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0, value1 = value(this);\n    if (value1 == null) return void this.removeAttribute(name);\n    value0 = this.getAttribute(name);\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value10 = value1);\n  };\n}\n\nfunction attrFunctionNS(fullname, interpolate, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0, value1 = value(this);\n    if (value1 == null) return void this.removeAttributeNS(fullname.space, fullname.local);\n    value0 = this.getAttributeNS(fullname.space, fullname.local);\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value10 = value1);\n  };\n}\n\nexport default function(name, value) {\n  var fullname = namespace(name), i = fullname === \"transform\" ? interpolateTransform : interpolate;\n  return this.attrTween(name, typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS : attrFunction)(fullname, i, tweenValue(this, \"attr.\" + name, value))\n      : value == null ? (fullname.local ? attrRemoveNS : attrRemove)(fullname)\n      : (fullname.local ? attrConstantNS : attrConstant)(fullname, i, value + \"\"));\n}\n","import {namespace} from \"d3-selection\";\n\nfunction attrTweenNS(fullname, value) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.setAttributeNS(fullname.space, fullname.local, i(t));\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nfunction attrTween(name, value) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.setAttribute(name, i(t));\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nexport default function(name, value) {\n  var key = \"attr.\" + name;\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  var fullname = namespace(name);\n  return this.tween(key, (fullname.local ? attrTweenNS : attrTween)(fullname, value));\n}\n","import {interpolateTransformCss as interpolateTransform} from \"d3-interpolate\";\nimport {style} from \"d3-selection\";\nimport {tweenValue} from \"./tween\";\nimport interpolate from \"./interpolate\";\n\nfunction styleRemove(name, interpolate) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0 = style(this, name),\n        value1 = (this.style.removeProperty(name), style(this, name));\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value10 = value1);\n  };\n}\n\nfunction styleRemoveEnd(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, interpolate, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = style(this, name);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value1);\n  };\n}\n\nfunction styleFunction(name, interpolate, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0 = style(this, name),\n        value1 = value(this);\n    if (value1 == null) value1 = (this.style.removeProperty(name), style(this, name));\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value10 = value1);\n  };\n}\n\nexport default function(name, value, priority) {\n  var i = (name += \"\") === \"transform\" ? interpolateTransform : interpolate;\n  return value == null ? this\n          .styleTween(name, styleRemove(name, i))\n          .on(\"end.style.\" + name, styleRemoveEnd(name))\n      : this.styleTween(name, typeof value === \"function\"\n          ? styleFunction(name, i, tweenValue(this, \"style.\" + name, value))\n          : styleConstant(name, i, value + \"\"), priority);\n}\n","function styleTween(name, value, priority) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.style.setProperty(name, i(t), priority);\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nexport default function(name, value, priority) {\n  var key = \"style.\" + (name += \"\");\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  return this.tween(key, styleTween(name, value, priority == null ? \"\" : priority));\n}\n","import {get, init} from \"./schedule\";\n\nfunction delayFunction(id, value) {\n  return function() {\n    init(this, id).delay = +value.apply(this, arguments);\n  };\n}\n\nfunction delayConstant(id, value) {\n  return value = +value, function() {\n    init(this, id).delay = value;\n  };\n}\n\nexport default function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? delayFunction\n          : delayConstant)(id, value))\n      : get(this.node(), id).delay;\n}\n","import {get, set} from \"./schedule\";\n\nfunction durationFunction(id, value) {\n  return function() {\n    set(this, id).duration = +value.apply(this, arguments);\n  };\n}\n\nfunction durationConstant(id, value) {\n  return value = +value, function() {\n    set(this, id).duration = value;\n  };\n}\n\nexport default function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? durationFunction\n          : durationConstant)(id, value))\n      : get(this.node(), id).duration;\n}\n","import {get, set} from \"./schedule\";\n\nfunction easeConstant(id, value) {\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    set(this, id).ease = value;\n  };\n}\n\nexport default function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each(easeConstant(id, value))\n      : get(this.node(), id).ease;\n}\n","var exponent = 3;\n\nexport var polyIn = (function custom(e) {\n  e = +e;\n\n  function polyIn(t) {\n    return Math.pow(t, e);\n  }\n\n  polyIn.exponent = custom;\n\n  return polyIn;\n})(exponent);\n\nexport var polyOut = (function custom(e) {\n  e = +e;\n\n  function polyOut(t) {\n    return 1 - Math.pow(1 - t, e);\n  }\n\n  polyOut.exponent = custom;\n\n  return polyOut;\n})(exponent);\n\nexport var polyInOut = (function custom(e) {\n  e = +e;\n\n  function polyInOut(t) {\n    return ((t *= 2) <= 1 ? Math.pow(t, e) : 2 - Math.pow(2 - t, e)) / 2;\n  }\n\n  polyInOut.exponent = custom;\n\n  return polyInOut;\n})(exponent);\n","var pi = Math.PI,\n    halfPi = pi / 2;\n\nexport function sinIn(t) {\n  return 1 - Math.cos(t * halfPi);\n}\n\nexport function sinOut(t) {\n  return Math.sin(t * halfPi);\n}\n\nexport function sinInOut(t) {\n  return (1 - Math.cos(pi * t)) / 2;\n}\n","export function expIn(t) {\n  return Math.pow(2, 10 * t - 10);\n}\n\nexport function expOut(t) {\n  return 1 - Math.pow(2, -10 * t);\n}\n\nexport function expInOut(t) {\n  return ((t *= 2) <= 1 ? Math.pow(2, 10 * t - 10) : 2 - Math.pow(2, 10 - 10 * t)) / 2;\n}\n","export function circleIn(t) {\n  return 1 - Math.sqrt(1 - t * t);\n}\n\nexport function circleOut(t) {\n  return Math.sqrt(1 - --t * t);\n}\n\nexport function circleInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - Math.sqrt(1 - t * t) : Math.sqrt(1 - (t -= 2) * t) + 1) / 2;\n}\n","var b1 = 4 / 11,\n    b2 = 6 / 11,\n    b3 = 8 / 11,\n    b4 = 3 / 4,\n    b5 = 9 / 11,\n    b6 = 10 / 11,\n    b7 = 15 / 16,\n    b8 = 21 / 22,\n    b9 = 63 / 64,\n    b0 = 1 / b1 / b1;\n\nexport function bounceIn(t) {\n  return 1 - bounceOut(1 - t);\n}\n\nexport function bounceOut(t) {\n  return (t = +t) < b1 ? b0 * t * t : t < b3 ? b0 * (t -= b2) * t + b4 : t < b6 ? b0 * (t -= b5) * t + b7 : b0 * (t -= b8) * t + b9;\n}\n\nexport function bounceInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - bounceOut(1 - t) : bounceOut(t - 1) + 1) / 2;\n}\n","var overshoot = 1.70158;\n\nexport var backIn = (function custom(s) {\n  s = +s;\n\n  function backIn(t) {\n    return t * t * ((s + 1) * t - s);\n  }\n\n  backIn.overshoot = custom;\n\n  return backIn;\n})(overshoot);\n\nexport var backOut = (function custom(s) {\n  s = +s;\n\n  function backOut(t) {\n    return --t * t * ((s + 1) * t + s) + 1;\n  }\n\n  backOut.overshoot = custom;\n\n  return backOut;\n})(overshoot);\n\nexport var backInOut = (function custom(s) {\n  s = +s;\n\n  function backInOut(t) {\n    return ((t *= 2) < 1 ? t * t * ((s + 1) * t - s) : (t -= 2) * t * ((s + 1) * t + s) + 2) / 2;\n  }\n\n  backInOut.overshoot = custom;\n\n  return backInOut;\n})(overshoot);\n","var tau = 2 * Math.PI,\n    amplitude = 1,\n    period = 0.3;\n\nexport var elasticIn = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticIn(t) {\n    return a * Math.pow(2, 10 * --t) * Math.sin((s - t) / p);\n  }\n\n  elasticIn.amplitude = function(a) { return custom(a, p * tau); };\n  elasticIn.period = function(p) { return custom(a, p); };\n\n  return elasticIn;\n})(amplitude, period);\n\nexport var elasticOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticOut(t) {\n    return 1 - a * Math.pow(2, -10 * (t = +t)) * Math.sin((t + s) / p);\n  }\n\n  elasticOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticOut.period = function(p) { return custom(a, p); };\n\n  return elasticOut;\n})(amplitude, period);\n\nexport var elasticInOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticInOut(t) {\n    return ((t = t * 2 - 1) < 0\n        ? a * Math.pow(2, 10 * t) * Math.sin((s - t) / p)\n        : 2 - a * Math.pow(2, -10 * t) * Math.sin((s + t) / p)) / 2;\n  }\n\n  elasticInOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticInOut.period = function(p) { return custom(a, p); };\n\n  return elasticInOut;\n})(amplitude, period);\n","import {Transition, newId} from \"../transition/index\";\nimport schedule from \"../transition/schedule\";\nimport {easeCubicInOut} from \"d3-ease\";\nimport {now} from \"d3-timer\";\n\nvar defaultTiming = {\n  time: null, // Set on use.\n  delay: 0,\n  duration: 250,\n  ease: easeCubicInOut\n};\n\nfunction inherit(node, id) {\n  var timing;\n  while (!(timing = node.__transition) || !(timing = timing[id])) {\n    if (!(node = node.parentNode)) {\n      return defaultTiming.time = now(), defaultTiming;\n    }\n  }\n  return timing;\n}\n\nexport default function(name) {\n  var id,\n      timing;\n\n  if (name instanceof Transition) {\n    id = name._id, name = name._name;\n  } else {\n    id = newId(), (timing = defaultTiming).time = now(), name = name == null ? null : name + \"\";\n  }\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        schedule(node, name, id, i, group, timing || inherit(node, id));\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id);\n}\n","import {selection} from \"d3-selection\";\nimport selection_interrupt from \"./interrupt\";\nimport selection_transition from \"./transition\";\n\nselection.prototype.interrupt = selection_interrupt;\nselection.prototype.transition = selection_transition;\n","import interrupt from \"../interrupt\";\n\nexport default function(name) {\n  return this.each(function() {\n    interrupt(this, name);\n  });\n}\n","import {Transition} from \"./transition/index\";\nimport {SCHEDULED} from \"./transition/schedule\";\n\nvar root = [null];\n\nexport default function(node, name) {\n  var schedules = node.__transition,\n      schedule,\n      i;\n\n  if (schedules) {\n    name = name == null ? null : name + \"\";\n    for (i in schedules) {\n      if ((schedule = schedules[i]).state > SCHEDULED && schedule.name === name) {\n        return new Transition([[node]], root, name, +i);\n      }\n    }\n  }\n\n  return null;\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function(target, type, selection) {\n  this.target = target;\n  this.type = type;\n  this.selection = selection;\n}\n","import {event} from \"d3-selection\";\n\nexport function nopropagation() {\n  event.stopImmediatePropagation();\n}\n\nexport default function() {\n  event.preventDefault();\n  event.stopImmediatePropagation();\n}\n","import {dispatch} from \"d3-dispatch\";\nimport {dragDisable, dragEnable} from \"d3-drag\";\nimport {interpolate} from \"d3-interpolate\";\nimport {customEvent, event, mouse, select} from \"d3-selection\";\nimport {interrupt} from \"d3-transition\";\nimport constant from \"./constant\";\nimport BrushEvent from \"./event\";\nimport noevent, {nopropagation} from \"./noevent\";\n\nvar MODE_DRAG = {name: \"drag\"},\n    MODE_SPACE = {name: \"space\"},\n    MODE_HANDLE = {name: \"handle\"},\n    MODE_CENTER = {name: \"center\"};\n\nvar X = {\n  name: \"x\",\n  handles: [\"e\", \"w\"].map(type),\n  input: function(x, e) { return x && [[x[0], e[0][1]], [x[1], e[1][1]]]; },\n  output: function(xy) { return xy && [xy[0][0], xy[1][0]]; }\n};\n\nvar Y = {\n  name: \"y\",\n  handles: [\"n\", \"s\"].map(type),\n  input: function(y, e) { return y && [[e[0][0], y[0]], [e[1][0], y[1]]]; },\n  output: function(xy) { return xy && [xy[0][1], xy[1][1]]; }\n};\n\nvar XY = {\n  name: \"xy\",\n  handles: [\"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\"].map(type),\n  input: function(xy) { return xy; },\n  output: function(xy) { return xy; }\n};\n\nvar cursors = {\n  overlay: \"crosshair\",\n  selection: \"move\",\n  n: \"ns-resize\",\n  e: \"ew-resize\",\n  s: \"ns-resize\",\n  w: \"ew-resize\",\n  nw: \"nwse-resize\",\n  ne: \"nesw-resize\",\n  se: \"nwse-resize\",\n  sw: \"nesw-resize\"\n};\n\nvar flipX = {\n  e: \"w\",\n  w: \"e\",\n  nw: \"ne\",\n  ne: \"nw\",\n  se: \"sw\",\n  sw: \"se\"\n};\n\nvar flipY = {\n  n: \"s\",\n  s: \"n\",\n  nw: \"sw\",\n  ne: \"se\",\n  se: \"ne\",\n  sw: \"nw\"\n};\n\nvar signsX = {\n  overlay: +1,\n  selection: +1,\n  n: null,\n  e: +1,\n  s: null,\n  w: -1,\n  nw: -1,\n  ne: +1,\n  se: +1,\n  sw: -1\n};\n\nvar signsY = {\n  overlay: +1,\n  selection: +1,\n  n: -1,\n  e: null,\n  s: +1,\n  w: null,\n  nw: -1,\n  ne: -1,\n  se: +1,\n  sw: +1\n};\n\nfunction type(t) {\n  return {type: t};\n}\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter() {\n  return !event.button;\n}\n\nfunction defaultExtent() {\n  var svg = this.ownerSVGElement || this;\n  return [[0, 0], [svg.width.baseVal.value, svg.height.baseVal.value]];\n}\n\n// Like d3.local, but with the name “__brush” rather than auto-generated.\nfunction local(node) {\n  while (!node.__brush) if (!(node = node.parentNode)) return;\n  return node.__brush;\n}\n\nfunction empty(extent) {\n  return extent[0][0] === extent[1][0]\n      || extent[0][1] === extent[1][1];\n}\n\nexport function brushSelection(node) {\n  var state = node.__brush;\n  return state ? state.dim.output(state.selection) : null;\n}\n\nexport function brushX() {\n  return brush(X);\n}\n\nexport function brushY() {\n  return brush(Y);\n}\n\nexport default function() {\n  return brush(XY);\n}\n\nfunction brush(dim) {\n  var extent = defaultExtent,\n      filter = defaultFilter,\n      listeners = dispatch(brush, \"start\", \"brush\", \"end\"),\n      handleSize = 6,\n      touchending;\n\n  function brush(group) {\n    var overlay = group\n        .property(\"__brush\", initialize)\n      .selectAll(\".overlay\")\n      .data([type(\"overlay\")]);\n\n    overlay.enter().append(\"rect\")\n        .attr(\"class\", \"overlay\")\n        .attr(\"pointer-events\", \"all\")\n        .attr(\"cursor\", cursors.overlay)\n      .merge(overlay)\n        .each(function() {\n          var extent = local(this).extent;\n          select(this)\n              .attr(\"x\", extent[0][0])\n              .attr(\"y\", extent[0][1])\n              .attr(\"width\", extent[1][0] - extent[0][0])\n              .attr(\"height\", extent[1][1] - extent[0][1]);\n        });\n\n    group.selectAll(\".selection\")\n      .data([type(\"selection\")])\n      .enter().append(\"rect\")\n        .attr(\"class\", \"selection\")\n        .attr(\"cursor\", cursors.selection)\n        .attr(\"fill\", \"#777\")\n        .attr(\"fill-opacity\", 0.3)\n        .attr(\"stroke\", \"#fff\")\n        .attr(\"shape-rendering\", \"crispEdges\");\n\n    var handle = group.selectAll(\".handle\")\n      .data(dim.handles, function(d) { return d.type; });\n\n    handle.exit().remove();\n\n    handle.enter().append(\"rect\")\n        .attr(\"class\", function(d) { return \"handle handle--\" + d.type; })\n        .attr(\"cursor\", function(d) { return cursors[d.type]; });\n\n    group\n        .each(redraw)\n        .attr(\"fill\", \"none\")\n        .attr(\"pointer-events\", \"all\")\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\")\n        .on(\"mousedown.brush touchstart.brush\", started);\n  }\n\n  brush.move = function(group, selection) {\n    if (group.selection) {\n      group\n          .on(\"start.brush\", function() { emitter(this, arguments).beforestart().start(); })\n          .on(\"interrupt.brush end.brush\", function() { emitter(this, arguments).end(); })\n          .tween(\"brush\", function() {\n            var that = this,\n                state = that.__brush,\n                emit = emitter(that, arguments),\n                selection0 = state.selection,\n                selection1 = dim.input(typeof selection === \"function\" ? selection.apply(this, arguments) : selection, state.extent),\n                i = interpolate(selection0, selection1);\n\n            function tween(t) {\n              state.selection = t === 1 && empty(selection1) ? null : i(t);\n              redraw.call(that);\n              emit.brush();\n            }\n\n            return selection0 && selection1 ? tween : tween(1);\n          });\n    } else {\n      group\n          .each(function() {\n            var that = this,\n                args = arguments,\n                state = that.__brush,\n                selection1 = dim.input(typeof selection === \"function\" ? selection.apply(that, args) : selection, state.extent),\n                emit = emitter(that, args).beforestart();\n\n            interrupt(that);\n            state.selection = selection1 == null || empty(selection1) ? null : selection1;\n            redraw.call(that);\n            emit.start().brush().end();\n          });\n    }\n  };\n\n  function redraw() {\n    var group = select(this),\n        selection = local(this).selection;\n\n    if (selection) {\n      group.selectAll(\".selection\")\n          .style(\"display\", null)\n          .attr(\"x\", selection[0][0])\n          .attr(\"y\", selection[0][1])\n          .attr(\"width\", selection[1][0] - selection[0][0])\n          .attr(\"height\", selection[1][1] - selection[0][1]);\n\n      group.selectAll(\".handle\")\n          .style(\"display\", null)\n          .attr(\"x\", function(d) { return d.type[d.type.length - 1] === \"e\" ? selection[1][0] - handleSize / 2 : selection[0][0] - handleSize / 2; })\n          .attr(\"y\", function(d) { return d.type[0] === \"s\" ? selection[1][1] - handleSize / 2 : selection[0][1] - handleSize / 2; })\n          .attr(\"width\", function(d) { return d.type === \"n\" || d.type === \"s\" ? selection[1][0] - selection[0][0] + handleSize : handleSize; })\n          .attr(\"height\", function(d) { return d.type === \"e\" || d.type === \"w\" ? selection[1][1] - selection[0][1] + handleSize : handleSize; });\n    }\n\n    else {\n      group.selectAll(\".selection,.handle\")\n          .style(\"display\", \"none\")\n          .attr(\"x\", null)\n          .attr(\"y\", null)\n          .attr(\"width\", null)\n          .attr(\"height\", null);\n    }\n  }\n\n  function emitter(that, args) {\n    return that.__brush.emitter || new Emitter(that, args);\n  }\n\n  function Emitter(that, args) {\n    this.that = that;\n    this.args = args;\n    this.state = that.__brush;\n    this.active = 0;\n  }\n\n  Emitter.prototype = {\n    beforestart: function() {\n      if (++this.active === 1) this.state.emitter = this, this.starting = true;\n      return this;\n    },\n    start: function() {\n      if (this.starting) this.starting = false, this.emit(\"start\");\n      return this;\n    },\n    brush: function() {\n      this.emit(\"brush\");\n      return this;\n    },\n    end: function() {\n      if (--this.active === 0) delete this.state.emitter, this.emit(\"end\");\n      return this;\n    },\n    emit: function(type) {\n      customEvent(new BrushEvent(brush, type, dim.output(this.state.selection)), listeners.apply, listeners, [type, this.that, this.args]);\n    }\n  };\n\n  function started() {\n    if (event.touches) { if (event.changedTouches.length < event.touches.length) return noevent(); }\n    else if (touchending) return;\n    if (!filter.apply(this, arguments)) return;\n\n    var that = this,\n        type = event.target.__data__.type,\n        mode = (event.metaKey ? type = \"overlay\" : type) === \"selection\" ? MODE_DRAG : (event.altKey ? MODE_CENTER : MODE_HANDLE),\n        signX = dim === Y ? null : signsX[type],\n        signY = dim === X ? null : signsY[type],\n        state = local(that),\n        extent = state.extent,\n        selection = state.selection,\n        W = extent[0][0], w0, w1,\n        N = extent[0][1], n0, n1,\n        E = extent[1][0], e0, e1,\n        S = extent[1][1], s0, s1,\n        dx,\n        dy,\n        moving,\n        shifting = signX && signY && event.shiftKey,\n        lockX,\n        lockY,\n        point0 = mouse(that),\n        point = point0,\n        emit = emitter(that, arguments).beforestart();\n\n    if (type === \"overlay\") {\n      state.selection = selection = [\n        [w0 = dim === Y ? W : point0[0], n0 = dim === X ? N : point0[1]],\n        [e0 = dim === Y ? E : w0, s0 = dim === X ? S : n0]\n      ];\n    } else {\n      w0 = selection[0][0];\n      n0 = selection[0][1];\n      e0 = selection[1][0];\n      s0 = selection[1][1];\n    }\n\n    w1 = w0;\n    n1 = n0;\n    e1 = e0;\n    s1 = s0;\n\n    var group = select(that)\n        .attr(\"pointer-events\", \"none\");\n\n    var overlay = group.selectAll(\".overlay\")\n        .attr(\"cursor\", cursors[type]);\n\n    if (event.touches) {\n      group\n          .on(\"touchmove.brush\", moved, true)\n          .on(\"touchend.brush touchcancel.brush\", ended, true);\n    } else {\n      var view = select(event.view)\n          .on(\"keydown.brush\", keydowned, true)\n          .on(\"keyup.brush\", keyupped, true)\n          .on(\"mousemove.brush\", moved, true)\n          .on(\"mouseup.brush\", ended, true);\n\n      dragDisable(event.view);\n    }\n\n    nopropagation();\n    interrupt(that);\n    redraw.call(that);\n    emit.start();\n\n    function moved() {\n      var point1 = mouse(that);\n      if (shifting && !lockX && !lockY) {\n        if (Math.abs(point1[0] - point[0]) > Math.abs(point1[1] - point[1])) lockY = true;\n        else lockX = true;\n      }\n      point = point1;\n      moving = true;\n      noevent();\n      move();\n    }\n\n    function move() {\n      var t;\n\n      dx = point[0] - point0[0];\n      dy = point[1] - point0[1];\n\n      switch (mode) {\n        case MODE_SPACE:\n        case MODE_DRAG: {\n          if (signX) dx = Math.max(W - w0, Math.min(E - e0, dx)), w1 = w0 + dx, e1 = e0 + dx;\n          if (signY) dy = Math.max(N - n0, Math.min(S - s0, dy)), n1 = n0 + dy, s1 = s0 + dy;\n          break;\n        }\n        case MODE_HANDLE: {\n          if (signX < 0) dx = Math.max(W - w0, Math.min(E - w0, dx)), w1 = w0 + dx, e1 = e0;\n          else if (signX > 0) dx = Math.max(W - e0, Math.min(E - e0, dx)), w1 = w0, e1 = e0 + dx;\n          if (signY < 0) dy = Math.max(N - n0, Math.min(S - n0, dy)), n1 = n0 + dy, s1 = s0;\n          else if (signY > 0) dy = Math.max(N - s0, Math.min(S - s0, dy)), n1 = n0, s1 = s0 + dy;\n          break;\n        }\n        case MODE_CENTER: {\n          if (signX) w1 = Math.max(W, Math.min(E, w0 - dx * signX)), e1 = Math.max(W, Math.min(E, e0 + dx * signX));\n          if (signY) n1 = Math.max(N, Math.min(S, n0 - dy * signY)), s1 = Math.max(N, Math.min(S, s0 + dy * signY));\n          break;\n        }\n      }\n\n      if (e1 < w1) {\n        signX *= -1;\n        t = w0, w0 = e0, e0 = t;\n        t = w1, w1 = e1, e1 = t;\n        if (type in flipX) overlay.attr(\"cursor\", cursors[type = flipX[type]]);\n      }\n\n      if (s1 < n1) {\n        signY *= -1;\n        t = n0, n0 = s0, s0 = t;\n        t = n1, n1 = s1, s1 = t;\n        if (type in flipY) overlay.attr(\"cursor\", cursors[type = flipY[type]]);\n      }\n\n      if (state.selection) selection = state.selection; // May be set by brush.move!\n      if (lockX) w1 = selection[0][0], e1 = selection[1][0];\n      if (lockY) n1 = selection[0][1], s1 = selection[1][1];\n\n      if (selection[0][0] !== w1\n          || selection[0][1] !== n1\n          || selection[1][0] !== e1\n          || selection[1][1] !== s1) {\n        state.selection = [[w1, n1], [e1, s1]];\n        redraw.call(that);\n        emit.brush();\n      }\n    }\n\n    function ended() {\n      nopropagation();\n      if (event.touches) {\n        if (event.touches.length) return;\n        if (touchending) clearTimeout(touchending);\n        touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n        group.on(\"touchmove.brush touchend.brush touchcancel.brush\", null);\n      } else {\n        dragEnable(event.view, moving);\n        view.on(\"keydown.brush keyup.brush mousemove.brush mouseup.brush\", null);\n      }\n      group.attr(\"pointer-events\", \"all\");\n      overlay.attr(\"cursor\", cursors.overlay);\n      if (state.selection) selection = state.selection; // May be set by brush.move (on start)!\n      if (empty(selection)) state.selection = null, redraw.call(that);\n      emit.end();\n    }\n\n    function keydowned() {\n      switch (event.keyCode) {\n        case 16: { // SHIFT\n          shifting = signX && signY;\n          break;\n        }\n        case 18: { // ALT\n          if (mode === MODE_HANDLE) {\n            if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n            if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n            mode = MODE_CENTER;\n            move();\n          }\n          break;\n        }\n        case 32: { // SPACE; takes priority over ALT\n          if (mode === MODE_HANDLE || mode === MODE_CENTER) {\n            if (signX < 0) e0 = e1 - dx; else if (signX > 0) w0 = w1 - dx;\n            if (signY < 0) s0 = s1 - dy; else if (signY > 0) n0 = n1 - dy;\n            mode = MODE_SPACE;\n            overlay.attr(\"cursor\", cursors.selection);\n            move();\n          }\n          break;\n        }\n        default: return;\n      }\n      noevent();\n    }\n\n    function keyupped() {\n      switch (event.keyCode) {\n        case 16: { // SHIFT\n          if (shifting) {\n            lockX = lockY = shifting = false;\n            move();\n          }\n          break;\n        }\n        case 18: { // ALT\n          if (mode === MODE_CENTER) {\n            if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n            if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n            mode = MODE_HANDLE;\n            move();\n          }\n          break;\n        }\n        case 32: { // SPACE\n          if (mode === MODE_SPACE) {\n            if (event.altKey) {\n              if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n              if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n              mode = MODE_CENTER;\n            } else {\n              if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n              if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n              mode = MODE_HANDLE;\n            }\n            overlay.attr(\"cursor\", cursors[type]);\n            move();\n          }\n          break;\n        }\n        default: return;\n      }\n      noevent();\n    }\n  }\n\n  function initialize() {\n    var state = this.__brush || {selection: null};\n    state.extent = extent.apply(this, arguments);\n    state.dim = dim;\n    return state;\n  }\n\n  brush.extent = function(_) {\n    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), brush) : extent;\n  };\n\n  brush.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant(!!_), brush) : filter;\n  };\n\n  brush.handleSize = function(_) {\n    return arguments.length ? (handleSize = +_, brush) : handleSize;\n  };\n\n  brush.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? brush : value;\n  };\n\n  return brush;\n}\n","export var cos = Math.cos;\nexport var sin = Math.sin;\nexport var pi = Math.PI;\nexport var halfPi = pi / 2;\nexport var tau = pi * 2;\nexport var max = Math.max;\n","import {range} from \"d3-array\";\nimport {max, tau} from \"./math\";\n\nfunction compareValue(compare) {\n  return function(a, b) {\n    return compare(\n      a.source.value + a.target.value,\n      b.source.value + b.target.value\n    );\n  };\n}\n\nexport default function() {\n  var padAngle = 0,\n      sortGroups = null,\n      sortSubgroups = null,\n      sortChords = null;\n\n  function chord(matrix) {\n    var n = matrix.length,\n        groupSums = [],\n        groupIndex = range(n),\n        subgroupIndex = [],\n        chords = [],\n        groups = chords.groups = new Array(n),\n        subgroups = new Array(n * n),\n        k,\n        x,\n        x0,\n        dx,\n        i,\n        j;\n\n    // Compute the sum.\n    k = 0, i = -1; while (++i < n) {\n      x = 0, j = -1; while (++j < n) {\n        x += matrix[i][j];\n      }\n      groupSums.push(x);\n      subgroupIndex.push(range(n));\n      k += x;\n    }\n\n    // Sort groups…\n    if (sortGroups) groupIndex.sort(function(a, b) {\n      return sortGroups(groupSums[a], groupSums[b]);\n    });\n\n    // Sort subgroups…\n    if (sortSubgroups) subgroupIndex.forEach(function(d, i) {\n      d.sort(function(a, b) {\n        return sortSubgroups(matrix[i][a], matrix[i][b]);\n      });\n    });\n\n    // Convert the sum to scaling factor for [0, 2pi].\n    // TODO Allow start and end angle to be specified?\n    // TODO Allow padding to be specified as percentage?\n    k = max(0, tau - padAngle * n) / k;\n    dx = k ? padAngle : tau / n;\n\n    // Compute the start and end angle for each group and subgroup.\n    // Note: Opera has a bug reordering object literal properties!\n    x = 0, i = -1; while (++i < n) {\n      x0 = x, j = -1; while (++j < n) {\n        var di = groupIndex[i],\n            dj = subgroupIndex[di][j],\n            v = matrix[di][dj],\n            a0 = x,\n            a1 = x += v * k;\n        subgroups[dj * n + di] = {\n          index: di,\n          subindex: dj,\n          startAngle: a0,\n          endAngle: a1,\n          value: v\n        };\n      }\n      groups[di] = {\n        index: di,\n        startAngle: x0,\n        endAngle: x,\n        value: groupSums[di]\n      };\n      x += dx;\n    }\n\n    // Generate chords for each (non-empty) subgroup-subgroup link.\n    i = -1; while (++i < n) {\n      j = i - 1; while (++j < n) {\n        var source = subgroups[j * n + i],\n            target = subgroups[i * n + j];\n        if (source.value || target.value) {\n          chords.push(source.value < target.value\n              ? {source: target, target: source}\n              : {source: source, target: target});\n        }\n      }\n    }\n\n    return sortChords ? chords.sort(sortChords) : chords;\n  }\n\n  chord.padAngle = function(_) {\n    return arguments.length ? (padAngle = max(0, _), chord) : padAngle;\n  };\n\n  chord.sortGroups = function(_) {\n    return arguments.length ? (sortGroups = _, chord) : sortGroups;\n  };\n\n  chord.sortSubgroups = function(_) {\n    return arguments.length ? (sortSubgroups = _, chord) : sortSubgroups;\n  };\n\n  chord.sortChords = function(_) {\n    return arguments.length ? (_ == null ? sortChords = null : (sortChords = compareValue(_))._ = _, chord) : sortChords && sortChords._;\n  };\n\n  return chord;\n}\n","export var slice = Array.prototype.slice;\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","var pi = Math.PI,\n    tau = 2 * pi,\n    epsilon = 1e-6,\n    tauEpsilon = tau - epsilon;\n\nfunction Path() {\n  this._x0 = this._y0 = // start of current subpath\n  this._x1 = this._y1 = null; // end of current subpath\n  this._ = \"\";\n}\n\nfunction path() {\n  return new Path;\n}\n\nPath.prototype = path.prototype = {\n  constructor: Path,\n  moveTo: function(x, y) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y);\n  },\n  closePath: function() {\n    if (this._x1 !== null) {\n      this._x1 = this._x0, this._y1 = this._y0;\n      this._ += \"Z\";\n    }\n  },\n  lineTo: function(x, y) {\n    this._ += \"L\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  quadraticCurveTo: function(x1, y1, x, y) {\n    this._ += \"Q\" + (+x1) + \",\" + (+y1) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) {\n    this._ += \"C\" + (+x1) + \",\" + (+y1) + \",\" + (+x2) + \",\" + (+y2) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  arcTo: function(x1, y1, x2, y2, r) {\n    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\n    var x0 = this._x1,\n        y0 = this._y1,\n        x21 = x2 - x1,\n        y21 = y2 - y1,\n        x01 = x0 - x1,\n        y01 = y0 - y1,\n        l01_2 = x01 * x01 + y01 * y01;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x1,y1).\n    if (this._x1 === null) {\n      this._ += \"M\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\n    else if (!(l01_2 > epsilon)) {}\n\n    // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\n    // Equivalently, is (x1,y1) coincident with (x2,y2)?\n    // Or, is the radius zero? Line to (x1,y1).\n    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon) || !r) {\n      this._ += \"L\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Otherwise, draw an arc!\n    else {\n      var x20 = x2 - x0,\n          y20 = y2 - y0,\n          l21_2 = x21 * x21 + y21 * y21,\n          l20_2 = x20 * x20 + y20 * y20,\n          l21 = Math.sqrt(l21_2),\n          l01 = Math.sqrt(l01_2),\n          l = r * Math.tan((pi - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\n          t01 = l / l01,\n          t21 = l / l21;\n\n      // If the start tangent is not coincident with (x0,y0), line to.\n      if (Math.abs(t01 - 1) > epsilon) {\n        this._ += \"L\" + (x1 + t01 * x01) + \",\" + (y1 + t01 * y01);\n      }\n\n      this._ += \"A\" + r + \",\" + r + \",0,0,\" + (+(y01 * x20 > x01 * y20)) + \",\" + (this._x1 = x1 + t21 * x21) + \",\" + (this._y1 = y1 + t21 * y21);\n    }\n  },\n  arc: function(x, y, r, a0, a1, ccw) {\n    x = +x, y = +y, r = +r;\n    var dx = r * Math.cos(a0),\n        dy = r * Math.sin(a0),\n        x0 = x + dx,\n        y0 = y + dy,\n        cw = 1 ^ ccw,\n        da = ccw ? a0 - a1 : a1 - a0;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x0,y0).\n    if (this._x1 === null) {\n      this._ += \"M\" + x0 + \",\" + y0;\n    }\n\n    // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\n    else if (Math.abs(this._x1 - x0) > epsilon || Math.abs(this._y1 - y0) > epsilon) {\n      this._ += \"L\" + x0 + \",\" + y0;\n    }\n\n    // Is this arc empty? We’re done.\n    if (!r) return;\n\n    // Does the angle go the wrong way? Flip the direction.\n    if (da < 0) da = da % tau + tau;\n\n    // Is this a complete circle? Draw two arcs to complete the circle.\n    if (da > tauEpsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (x - dx) + \",\" + (y - dy) + \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (this._x1 = x0) + \",\" + (this._y1 = y0);\n    }\n\n    // Is this arc non-empty? Draw an arc!\n    else if (da > epsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,\" + (+(da >= pi)) + \",\" + cw + \",\" + (this._x1 = x + r * Math.cos(a1)) + \",\" + (this._y1 = y + r * Math.sin(a1));\n    }\n  },\n  rect: function(x, y, w, h) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y) + \"h\" + (+w) + \"v\" + (+h) + \"h\" + (-w) + \"Z\";\n  },\n  toString: function() {\n    return this._;\n  }\n};\n\nexport default path;\n","import {slice} from \"./array\";\nimport constant from \"./constant\";\nimport {cos, halfPi, sin} from \"./math\";\nimport {path} from \"d3-path\";\n\nfunction defaultSource(d) {\n  return d.source;\n}\n\nfunction defaultTarget(d) {\n  return d.target;\n}\n\nfunction defaultRadius(d) {\n  return d.radius;\n}\n\nfunction defaultStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction defaultEndAngle(d) {\n  return d.endAngle;\n}\n\nexport default function() {\n  var source = defaultSource,\n      target = defaultTarget,\n      radius = defaultRadius,\n      startAngle = defaultStartAngle,\n      endAngle = defaultEndAngle,\n      context = null;\n\n  function ribbon() {\n    var buffer,\n        argv = slice.call(arguments),\n        s = source.apply(this, argv),\n        t = target.apply(this, argv),\n        sr = +radius.apply(this, (argv[0] = s, argv)),\n        sa0 = startAngle.apply(this, argv) - halfPi,\n        sa1 = endAngle.apply(this, argv) - halfPi,\n        sx0 = sr * cos(sa0),\n        sy0 = sr * sin(sa0),\n        tr = +radius.apply(this, (argv[0] = t, argv)),\n        ta0 = startAngle.apply(this, argv) - halfPi,\n        ta1 = endAngle.apply(this, argv) - halfPi;\n\n    if (!context) context = buffer = path();\n\n    context.moveTo(sx0, sy0);\n    context.arc(0, 0, sr, sa0, sa1);\n    if (sa0 !== ta0 || sa1 !== ta1) { // TODO sr !== tr?\n      context.quadraticCurveTo(0, 0, tr * cos(ta0), tr * sin(ta0));\n      context.arc(0, 0, tr, ta0, ta1);\n    }\n    context.quadraticCurveTo(0, 0, sx0, sy0);\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  ribbon.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant(+_), ribbon) : radius;\n  };\n\n  ribbon.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant(+_), ribbon) : startAngle;\n  };\n\n  ribbon.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant(+_), ribbon) : endAngle;\n  };\n\n  ribbon.source = function(_) {\n    return arguments.length ? (source = _, ribbon) : source;\n  };\n\n  ribbon.target = function(_) {\n    return arguments.length ? (target = _, ribbon) : target;\n  };\n\n  ribbon.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), ribbon) : context;\n  };\n\n  return ribbon;\n}\n","export var prefix = \"$\";\n\nfunction Map() {}\n\nMap.prototype = map.prototype = {\n  constructor: Map,\n  has: function(key) {\n    return (prefix + key) in this;\n  },\n  get: function(key) {\n    return this[prefix + key];\n  },\n  set: function(key, value) {\n    this[prefix + key] = value;\n    return this;\n  },\n  remove: function(key) {\n    var property = prefix + key;\n    return property in this && delete this[property];\n  },\n  clear: function() {\n    for (var property in this) if (property[0] === prefix) delete this[property];\n  },\n  keys: function() {\n    var keys = [];\n    for (var property in this) if (property[0] === prefix) keys.push(property.slice(1));\n    return keys;\n  },\n  values: function() {\n    var values = [];\n    for (var property in this) if (property[0] === prefix) values.push(this[property]);\n    return values;\n  },\n  entries: function() {\n    var entries = [];\n    for (var property in this) if (property[0] === prefix) entries.push({key: property.slice(1), value: this[property]});\n    return entries;\n  },\n  size: function() {\n    var size = 0;\n    for (var property in this) if (property[0] === prefix) ++size;\n    return size;\n  },\n  empty: function() {\n    for (var property in this) if (property[0] === prefix) return false;\n    return true;\n  },\n  each: function(f) {\n    for (var property in this) if (property[0] === prefix) f(this[property], property.slice(1), this);\n  }\n};\n\nfunction map(object, f) {\n  var map = new Map;\n\n  // Copy constructor.\n  if (object instanceof Map) object.each(function(value, key) { map.set(key, value); });\n\n  // Index array by numeric index or specified key function.\n  else if (Array.isArray(object)) {\n    var i = -1,\n        n = object.length,\n        o;\n\n    if (f == null) while (++i < n) map.set(i, object[i]);\n    else while (++i < n) map.set(f(o = object[i], i, object), o);\n  }\n\n  // Convert object to map.\n  else if (object) for (var key in object) map.set(key, object[key]);\n\n  return map;\n}\n\nexport default map;\n","import map from \"./map\";\n\nexport default function() {\n  var keys = [],\n      sortKeys = [],\n      sortValues,\n      rollup,\n      nest;\n\n  function apply(array, depth, createResult, setResult) {\n    if (depth >= keys.length) {\n      if (sortValues != null) array.sort(sortValues);\n      return rollup != null ? rollup(array) : array;\n    }\n\n    var i = -1,\n        n = array.length,\n        key = keys[depth++],\n        keyValue,\n        value,\n        valuesByKey = map(),\n        values,\n        result = createResult();\n\n    while (++i < n) {\n      if (values = valuesByKey.get(keyValue = key(value = array[i]) + \"\")) {\n        values.push(value);\n      } else {\n        valuesByKey.set(keyValue, [value]);\n      }\n    }\n\n    valuesByKey.each(function(values, key) {\n      setResult(result, key, apply(values, depth, createResult, setResult));\n    });\n\n    return result;\n  }\n\n  function entries(map, depth) {\n    if (++depth > keys.length) return map;\n    var array, sortKey = sortKeys[depth - 1];\n    if (rollup != null && depth >= keys.length) array = map.entries();\n    else array = [], map.each(function(v, k) { array.push({key: k, values: entries(v, depth)}); });\n    return sortKey != null ? array.sort(function(a, b) { return sortKey(a.key, b.key); }) : array;\n  }\n\n  return nest = {\n    object: function(array) { return apply(array, 0, createObject, setObject); },\n    map: function(array) { return apply(array, 0, createMap, setMap); },\n    entries: function(array) { return entries(apply(array, 0, createMap, setMap), 0); },\n    key: function(d) { keys.push(d); return nest; },\n    sortKeys: function(order) { sortKeys[keys.length - 1] = order; return nest; },\n    sortValues: function(order) { sortValues = order; return nest; },\n    rollup: function(f) { rollup = f; return nest; }\n  };\n}\n\nfunction createObject() {\n  return {};\n}\n\nfunction setObject(object, key, value) {\n  object[key] = value;\n}\n\nfunction createMap() {\n  return map();\n}\n\nfunction setMap(map, key, value) {\n  map.set(key, value);\n}\n","import {default as map, prefix} from \"./map\";\n\nfunction Set() {}\n\nvar proto = map.prototype;\n\nSet.prototype = set.prototype = {\n  constructor: Set,\n  has: proto.has,\n  add: function(value) {\n    value += \"\";\n    this[prefix + value] = value;\n    return this;\n  },\n  remove: proto.remove,\n  clear: proto.clear,\n  values: proto.keys,\n  size: proto.size,\n  empty: proto.empty,\n  each: proto.each\n};\n\nfunction set(object, f) {\n  var set = new Set;\n\n  // Copy constructor.\n  if (object instanceof Set) object.each(function(value) { set.add(value); });\n\n  // Otherwise, assume it’s an array.\n  else if (object) {\n    var i = -1, n = object.length;\n    if (f == null) while (++i < n) set.add(object[i]);\n    else while (++i < n) set.add(f(object[i], i, object));\n  }\n\n  return set;\n}\n\nexport default set;\n","export default function(map) {\n  var keys = [];\n  for (var key in map) keys.push(key);\n  return keys;\n}\n","export default function(map) {\n  var values = [];\n  for (var key in map) values.push(map[key]);\n  return values;\n}\n","export default function(map) {\n  var entries = [];\n  for (var key in map) entries.push({key: key, value: map[key]});\n  return entries;\n}\n","var array = Array.prototype;\n\nexport var slice = array.slice;\n","export default function(a, b) {\n  return a - b;\n}\n","export default function(ring) {\n  var i = 0, n = ring.length, area = ring[n - 1][1] * ring[0][0] - ring[n - 1][0] * ring[0][1];\n  while (++i < n) area += ring[i - 1][1] * ring[i][0] - ring[i - 1][0] * ring[i][1];\n  return area;\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function(ring, hole) {\n  var i = -1, n = hole.length, c;\n  while (++i < n) if (c = ringContains(ring, hole[i])) return c;\n  return 0;\n}\n\nfunction ringContains(ring, point) {\n  var x = point[0], y = point[1], contains = -1;\n  for (var i = 0, n = ring.length, j = n - 1; i < n; j = i++) {\n    var pi = ring[i], xi = pi[0], yi = pi[1], pj = ring[j], xj = pj[0], yj = pj[1];\n    if (segmentContains(pi, pj, point)) return 0;\n    if (((yi > y) !== (yj > y)) && ((x < (xj - xi) * (y - yi) / (yj - yi) + xi))) contains = -contains;\n  }\n  return contains;\n}\n\nfunction segmentContains(a, b, c) {\n  var i; return collinear(a, b, c) && within(a[i = +(a[0] === b[0])], c[i], b[i]);\n}\n\nfunction collinear(a, b, c) {\n  return (b[0] - a[0]) * (c[1] - a[1]) === (c[0] - a[0]) * (b[1] - a[1]);\n}\n\nfunction within(p, q, r) {\n  return p <= q && q <= r || r <= q && q <= p;\n}\n","export default function() {}\n","import {extent, thresholdSturges, tickStep, range} from \"d3-array\";\nimport {slice} from \"./array\";\nimport ascending from \"./ascending\";\nimport area from \"./area\";\nimport constant from \"./constant\";\nimport contains from \"./contains\";\nimport noop from \"./noop\";\n\nvar cases = [\n  [],\n  [[[1.0, 1.5], [0.5, 1.0]]],\n  [[[1.5, 1.0], [1.0, 1.5]]],\n  [[[1.5, 1.0], [0.5, 1.0]]],\n  [[[1.0, 0.5], [1.5, 1.0]]],\n  [[[1.0, 1.5], [0.5, 1.0]], [[1.0, 0.5], [1.5, 1.0]]],\n  [[[1.0, 0.5], [1.0, 1.5]]],\n  [[[1.0, 0.5], [0.5, 1.0]]],\n  [[[0.5, 1.0], [1.0, 0.5]]],\n  [[[1.0, 1.5], [1.0, 0.5]]],\n  [[[0.5, 1.0], [1.0, 0.5]], [[1.5, 1.0], [1.0, 1.5]]],\n  [[[1.5, 1.0], [1.0, 0.5]]],\n  [[[0.5, 1.0], [1.5, 1.0]]],\n  [[[1.0, 1.5], [1.5, 1.0]]],\n  [[[0.5, 1.0], [1.0, 1.5]]],\n  []\n];\n\nexport default function() {\n  var dx = 1,\n      dy = 1,\n      threshold = thresholdSturges,\n      smooth = smoothLinear;\n\n  function contours(values) {\n    var tz = threshold(values);\n\n    // Convert number of thresholds into uniform thresholds.\n    if (!Array.isArray(tz)) {\n      var domain = extent(values), start = domain[0], stop = domain[1];\n      tz = tickStep(start, stop, tz);\n      tz = range(Math.floor(start / tz) * tz, Math.floor(stop / tz) * tz, tz);\n    } else {\n      tz = tz.slice().sort(ascending);\n    }\n\n    return tz.map(function(value) {\n      return contour(values, value);\n    });\n  }\n\n  // Accumulate, smooth contour rings, assign holes to exterior rings.\n  // Based on https://github.com/mbostock/shapefile/blob/v0.6.2/shp/polygon.js\n  function contour(values, value) {\n    var polygons = [],\n        holes = [];\n\n    isorings(values, value, function(ring) {\n      smooth(ring, values, value);\n      if (area(ring) > 0) polygons.push([ring]);\n      else holes.push(ring);\n    });\n\n    holes.forEach(function(hole) {\n      for (var i = 0, n = polygons.length, polygon; i < n; ++i) {\n        if (contains((polygon = polygons[i])[0], hole) !== -1) {\n          polygon.push(hole);\n          return;\n        }\n      }\n    });\n\n    return {\n      type: \"MultiPolygon\",\n      value: value,\n      coordinates: polygons\n    };\n  }\n\n  // Marching squares with isolines stitched into rings.\n  // Based on https://github.com/topojson/topojson-client/blob/v3.0.0/src/stitch.js\n  function isorings(values, value, callback) {\n    var fragmentByStart = new Array,\n        fragmentByEnd = new Array,\n        x, y, t0, t1, t2, t3;\n\n    // Special case for the first row (y = -1, t2 = t3 = 0).\n    x = y = -1;\n    t1 = values[0] >= value;\n    cases[t1 << 1].forEach(stitch);\n    while (++x < dx - 1) {\n      t0 = t1, t1 = values[x + 1] >= value;\n      cases[t0 | t1 << 1].forEach(stitch);\n    }\n    cases[t1 << 0].forEach(stitch);\n\n    // General case for the intermediate rows.\n    while (++y < dy - 1) {\n      x = -1;\n      t1 = values[y * dx + dx] >= value;\n      t2 = values[y * dx] >= value;\n      cases[t1 << 1 | t2 << 2].forEach(stitch);\n      while (++x < dx - 1) {\n        t0 = t1, t1 = values[y * dx + dx + x + 1] >= value;\n        t3 = t2, t2 = values[y * dx + x + 1] >= value;\n        cases[t0 | t1 << 1 | t2 << 2 | t3 << 3].forEach(stitch);\n      }\n      cases[t1 | t2 << 3].forEach(stitch);\n    }\n\n    // Special case for the last row (y = dy - 1, t0 = t1 = 0).\n    x = -1;\n    t2 = values[y * dx] >= value;\n    cases[t2 << 2].forEach(stitch);\n    while (++x < dx - 1) {\n      t3 = t2, t2 = values[y * dx + x + 1] >= value;\n      cases[t2 << 2 | t3 << 3].forEach(stitch);\n    }\n    cases[t2 << 3].forEach(stitch);\n\n    function stitch(line) {\n      var start = [line[0][0] + x, line[0][1] + y],\n          end = [line[1][0] + x, line[1][1] + y],\n          startIndex = index(start),\n          endIndex = index(end),\n          f, g;\n      if (f = fragmentByEnd[startIndex]) {\n        if (g = fragmentByStart[endIndex]) {\n          delete fragmentByEnd[f.end];\n          delete fragmentByStart[g.start];\n          if (f === g) {\n            f.ring.push(end);\n            callback(f.ring);\n          } else {\n            fragmentByStart[f.start] = fragmentByEnd[g.end] = {start: f.start, end: g.end, ring: f.ring.concat(g.ring)};\n          }\n        } else {\n          delete fragmentByEnd[f.end];\n          f.ring.push(end);\n          fragmentByEnd[f.end = endIndex] = f;\n        }\n      } else if (f = fragmentByStart[endIndex]) {\n        if (g = fragmentByEnd[startIndex]) {\n          delete fragmentByStart[f.start];\n          delete fragmentByEnd[g.end];\n          if (f === g) {\n            f.ring.push(end);\n            callback(f.ring);\n          } else {\n            fragmentByStart[g.start] = fragmentByEnd[f.end] = {start: g.start, end: f.end, ring: g.ring.concat(f.ring)};\n          }\n        } else {\n          delete fragmentByStart[f.start];\n          f.ring.unshift(start);\n          fragmentByStart[f.start = startIndex] = f;\n        }\n      } else {\n        fragmentByStart[startIndex] = fragmentByEnd[endIndex] = {start: startIndex, end: endIndex, ring: [start, end]};\n      }\n    }\n  }\n\n  function index(point) {\n    return point[0] * 2 + point[1] * (dx + 1) * 4;\n  }\n\n  function smoothLinear(ring, values, value) {\n    ring.forEach(function(point) {\n      var x = point[0],\n          y = point[1],\n          xt = x | 0,\n          yt = y | 0,\n          v0,\n          v1 = values[yt * dx + xt];\n      if (x > 0 && x < dx && xt === x) {\n        v0 = values[yt * dx + xt - 1];\n        point[0] = x + (value - v0) / (v1 - v0) - 0.5;\n      }\n      if (y > 0 && y < dy && yt === y) {\n        v0 = values[(yt - 1) * dx + xt];\n        point[1] = y + (value - v0) / (v1 - v0) - 0.5;\n      }\n    });\n  }\n\n  contours.contour = contour;\n\n  contours.size = function(_) {\n    if (!arguments.length) return [dx, dy];\n    var _0 = Math.ceil(_[0]), _1 = Math.ceil(_[1]);\n    if (!(_0 > 0) || !(_1 > 0)) throw new Error(\"invalid size\");\n    return dx = _0, dy = _1, contours;\n  };\n\n  contours.thresholds = function(_) {\n    return arguments.length ? (threshold = typeof _ === \"function\" ? _ : Array.isArray(_) ? constant(slice.call(_)) : constant(_), contours) : threshold;\n  };\n\n  contours.smooth = function(_) {\n    return arguments.length ? (smooth = _ ? smoothLinear : noop, contours) : smooth === smoothLinear;\n  };\n\n  return contours;\n}\n","// TODO Optimize edge cases.\n// TODO Optimize index calculation.\n// TODO Optimize arguments.\nexport function blurX(source, target, r) {\n  var n = source.width,\n      m = source.height,\n      w = (r << 1) + 1;\n  for (var j = 0; j < m; ++j) {\n    for (var i = 0, sr = 0; i < n + r; ++i) {\n      if (i < n) {\n        sr += source.data[i + j * n];\n      }\n      if (i >= r) {\n        if (i >= w) {\n          sr -= source.data[i - w + j * n];\n        }\n        target.data[i - r + j * n] = sr / Math.min(i + 1, n - 1 + w - i, w);\n      }\n    }\n  }\n}\n\n// TODO Optimize edge cases.\n// TODO Optimize index calculation.\n// TODO Optimize arguments.\nexport function blurY(source, target, r) {\n  var n = source.width,\n      m = source.height,\n      w = (r << 1) + 1;\n  for (var i = 0; i < n; ++i) {\n    for (var j = 0, sr = 0; j < m + r; ++j) {\n      if (j < m) {\n        sr += source.data[i + j * n];\n      }\n      if (j >= r) {\n        if (j >= w) {\n          sr -= source.data[i + (j - w) * n];\n        }\n        target.data[i + (j - r) * n] = sr / Math.min(j + 1, m - 1 + w - j, w);\n      }\n    }\n  }\n}\n","import {max, range, tickStep} from \"d3-array\";\nimport {slice} from \"./array\";\nimport {blurX, blurY} from \"./blur\";\nimport constant from \"./constant\";\nimport contours from \"./contours\";\n\nfunction defaultX(d) {\n  return d[0];\n}\n\nfunction defaultY(d) {\n  return d[1];\n}\n\nfunction defaultWeight() {\n  return 1;\n}\n\nexport default function() {\n  var x = defaultX,\n      y = defaultY,\n      weight = defaultWeight,\n      dx = 960,\n      dy = 500,\n      r = 20, // blur radius\n      k = 2, // log2(grid cell size)\n      o = r * 3, // grid offset, to pad for blur\n      n = (dx + o * 2) >> k, // grid width\n      m = (dy + o * 2) >> k, // grid height\n      threshold = constant(20);\n\n  function density(data) {\n    var values0 = new Float32Array(n * m),\n        values1 = new Float32Array(n * m);\n\n    data.forEach(function(d, i, data) {\n      var xi = (+x(d, i, data) + o) >> k,\n          yi = (+y(d, i, data) + o) >> k,\n          wi = +weight(d, i, data);\n      if (xi >= 0 && xi < n && yi >= 0 && yi < m) {\n        values0[xi + yi * n] += wi;\n      }\n    });\n\n    // TODO Optimize.\n    blurX({width: n, height: m, data: values0}, {width: n, height: m, data: values1}, r >> k);\n    blurY({width: n, height: m, data: values1}, {width: n, height: m, data: values0}, r >> k);\n    blurX({width: n, height: m, data: values0}, {width: n, height: m, data: values1}, r >> k);\n    blurY({width: n, height: m, data: values1}, {width: n, height: m, data: values0}, r >> k);\n    blurX({width: n, height: m, data: values0}, {width: n, height: m, data: values1}, r >> k);\n    blurY({width: n, height: m, data: values1}, {width: n, height: m, data: values0}, r >> k);\n\n    var tz = threshold(values0);\n\n    // Convert number of thresholds into uniform thresholds.\n    if (!Array.isArray(tz)) {\n      var stop = max(values0);\n      tz = tickStep(0, stop, tz);\n      tz = range(0, Math.floor(stop / tz) * tz, tz);\n      tz.shift();\n    }\n\n    return contours()\n        .thresholds(tz)\n        .size([n, m])\n      (values0)\n        .map(transform);\n  }\n\n  function transform(geometry) {\n    geometry.value *= Math.pow(2, -2 * k); // Density in points per square pixel.\n    geometry.coordinates.forEach(transformPolygon);\n    return geometry;\n  }\n\n  function transformPolygon(coordinates) {\n    coordinates.forEach(transformRing);\n  }\n\n  function transformRing(coordinates) {\n    coordinates.forEach(transformPoint);\n  }\n\n  // TODO Optimize.\n  function transformPoint(coordinates) {\n    coordinates[0] = coordinates[0] * Math.pow(2, k) - o;\n    coordinates[1] = coordinates[1] * Math.pow(2, k) - o;\n  }\n\n  function resize() {\n    o = r * 3;\n    n = (dx + o * 2) >> k;\n    m = (dy + o * 2) >> k;\n    return density;\n  }\n\n  density.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), density) : x;\n  };\n\n  density.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), density) : y;\n  };\n\n  density.weight = function(_) {\n    return arguments.length ? (weight = typeof _ === \"function\" ? _ : constant(+_), density) : weight;\n  };\n\n  density.size = function(_) {\n    if (!arguments.length) return [dx, dy];\n    var _0 = Math.ceil(_[0]), _1 = Math.ceil(_[1]);\n    if (!(_0 >= 0) && !(_0 >= 0)) throw new Error(\"invalid size\");\n    return dx = _0, dy = _1, resize();\n  };\n\n  density.cellSize = function(_) {\n    if (!arguments.length) return 1 << k;\n    if (!((_ = +_) >= 1)) throw new Error(\"invalid cell size\");\n    return k = Math.floor(Math.log(_) / Math.LN2), resize();\n  };\n\n  density.thresholds = function(_) {\n    return arguments.length ? (threshold = typeof _ === \"function\" ? _ : Array.isArray(_) ? constant(slice.call(_)) : constant(_), density) : threshold;\n  };\n\n  density.bandwidth = function(_) {\n    if (!arguments.length) return Math.sqrt(r * (r + 1));\n    if (!((_ = +_) >= 0)) throw new Error(\"invalid bandwidth\");\n    return r = Math.round((Math.sqrt(4 * _ * _ + 1) - 1) / 2), resize();\n  };\n\n  return density;\n}\n","var EOL = {},\n    EOF = {},\n    QUOTE = 34,\n    NEWLINE = 10,\n    RETURN = 13;\n\nfunction objectConverter(columns) {\n  return new Function(\"d\", \"return {\" + columns.map(function(name, i) {\n    return JSON.stringify(name) + \": d[\" + i + \"]\";\n  }).join(\",\") + \"}\");\n}\n\nfunction customConverter(columns, f) {\n  var object = objectConverter(columns);\n  return function(row, i) {\n    return f(object(row), i, columns);\n  };\n}\n\n// Compute unique columns in order of discovery.\nfunction inferColumns(rows) {\n  var columnSet = Object.create(null),\n      columns = [];\n\n  rows.forEach(function(row) {\n    for (var column in row) {\n      if (!(column in columnSet)) {\n        columns.push(columnSet[column] = column);\n      }\n    }\n  });\n\n  return columns;\n}\n\nexport default function(delimiter) {\n  var reFormat = new RegExp(\"[\\\"\" + delimiter + \"\\n\\r]\"),\n      DELIMITER = delimiter.charCodeAt(0);\n\n  function parse(text, f) {\n    var convert, columns, rows = parseRows(text, function(row, i) {\n      if (convert) return convert(row, i - 1);\n      columns = row, convert = f ? customConverter(row, f) : objectConverter(row);\n    });\n    rows.columns = columns || [];\n    return rows;\n  }\n\n  function parseRows(text, f) {\n    var rows = [], // output rows\n        N = text.length,\n        I = 0, // current character index\n        n = 0, // current line number\n        t, // current token\n        eof = N <= 0, // current token followed by EOF?\n        eol = false; // current token followed by EOL?\n\n    // Strip the trailing newline.\n    if (text.charCodeAt(N - 1) === NEWLINE) --N;\n    if (text.charCodeAt(N - 1) === RETURN) --N;\n\n    function token() {\n      if (eof) return EOF;\n      if (eol) return eol = false, EOL;\n\n      // Unescape quotes.\n      var i, j = I, c;\n      if (text.charCodeAt(j) === QUOTE) {\n        while (I++ < N && text.charCodeAt(I) !== QUOTE || text.charCodeAt(++I) === QUOTE);\n        if ((i = I) >= N) eof = true;\n        else if ((c = text.charCodeAt(I++)) === NEWLINE) eol = true;\n        else if (c === RETURN) { eol = true; if (text.charCodeAt(I) === NEWLINE) ++I; }\n        return text.slice(j + 1, i - 1).replace(/\"\"/g, \"\\\"\");\n      }\n\n      // Find next delimiter or newline.\n      while (I < N) {\n        if ((c = text.charCodeAt(i = I++)) === NEWLINE) eol = true;\n        else if (c === RETURN) { eol = true; if (text.charCodeAt(I) === NEWLINE) ++I; }\n        else if (c !== DELIMITER) continue;\n        return text.slice(j, i);\n      }\n\n      // Return last token before EOF.\n      return eof = true, text.slice(j, N);\n    }\n\n    while ((t = token()) !== EOF) {\n      var row = [];\n      while (t !== EOL && t !== EOF) row.push(t), t = token();\n      if (f && (row = f(row, n++)) == null) continue;\n      rows.push(row);\n    }\n\n    return rows;\n  }\n\n  function format(rows, columns) {\n    if (columns == null) columns = inferColumns(rows);\n    return [columns.map(formatValue).join(delimiter)].concat(rows.map(function(row) {\n      return columns.map(function(column) {\n        return formatValue(row[column]);\n      }).join(delimiter);\n    })).join(\"\\n\");\n  }\n\n  function formatRows(rows) {\n    return rows.map(formatRow).join(\"\\n\");\n  }\n\n  function formatRow(row) {\n    return row.map(formatValue).join(delimiter);\n  }\n\n  function formatValue(text) {\n    return text == null ? \"\"\n        : reFormat.test(text += \"\") ? \"\\\"\" + text.replace(/\"/g, \"\\\"\\\"\") + \"\\\"\"\n        : text;\n  }\n\n  return {\n    parse: parse,\n    parseRows: parseRows,\n    format: format,\n    formatRows: formatRows\n  };\n}\n","import dsv from \"./dsv\";\n\nvar csv = dsv(\",\");\n\nexport var csvParse = csv.parse;\nexport var csvParseRows = csv.parseRows;\nexport var csvFormat = csv.format;\nexport var csvFormatRows = csv.formatRows;\n","import dsv from \"./dsv\";\n\nvar tsv = dsv(\"\\t\");\n\nexport var tsvParse = tsv.parse;\nexport var tsvParseRows = tsv.parseRows;\nexport var tsvFormat = tsv.format;\nexport var tsvFormatRows = tsv.formatRows;\n","function responseBlob(response) {\n  if (!response.ok) throw new Error(response.status + \" \" + response.statusText);\n  return response.blob();\n}\n\nexport default function(input, init) {\n  return fetch(input, init).then(responseBlob);\n}\n","function responseArrayBuffer(response) {\n  if (!response.ok) throw new Error(response.status + \" \" + response.statusText);\n  return response.arrayBuffer();\n}\n\nexport default function(input, init) {\n  return fetch(input, init).then(responseArrayBuffer);\n}\n","function responseText(response) {\n  if (!response.ok) throw new Error(response.status + \" \" + response.statusText);\n  return response.text();\n}\n\nexport default function(input, init) {\n  return fetch(input, init).then(responseText);\n}\n","import {csvParse, dsvFormat, tsvParse} from \"d3-dsv\";\nimport text from \"./text\";\n\nfunction dsvParse(parse) {\n  return function(input, init, row) {\n    if (arguments.length === 2 && typeof init === \"function\") row = init, init = undefined;\n    return text(input, init).then(function(response) {\n      return parse(response, row);\n    });\n  };\n}\n\nexport default function dsv(delimiter, input, init, row) {\n  if (arguments.length === 3 && typeof init === \"function\") row = init, init = undefined;\n  var format = dsvFormat(delimiter);\n  return text(input, init).then(function(response) {\n    return format.parse(response, row);\n  });\n}\n\nexport var csv = dsvParse(csvParse);\nexport var tsv = dsvParse(tsvParse);\n","export default function(input, init) {\n  return new Promise(function(resolve, reject) {\n    var image = new Image;\n    for (var key in init) image[key] = init[key];\n    image.onerror = reject;\n    image.onload = function() { resolve(image); };\n    image.src = input;\n  });\n}\n","function responseJson(response) {\n  if (!response.ok) throw new Error(response.status + \" \" + response.statusText);\n  return response.json();\n}\n\nexport default function(input, init) {\n  return fetch(input, init).then(responseJson);\n}\n","import text from \"./text\";\n\nfunction parser(type) {\n  return function(input, init)  {\n    return text(input, init).then(function(text) {\n      return (new DOMParser).parseFromString(text, type);\n    });\n  };\n}\n\nexport default parser(\"application/xml\");\n\nexport var html = parser(\"text/html\");\n\nexport var svg = parser(\"image/svg+xml\");\n","export default function(x, y) {\n  var nodes;\n\n  if (x == null) x = 0;\n  if (y == null) y = 0;\n\n  function force() {\n    var i,\n        n = nodes.length,\n        node,\n        sx = 0,\n        sy = 0;\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i], sx += node.x, sy += node.y;\n    }\n\n    for (sx = sx / n - x, sy = sy / n - y, i = 0; i < n; ++i) {\n      node = nodes[i], node.x -= sx, node.y -= sy;\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = +_, force) : x;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = +_, force) : y;\n  };\n\n  return force;\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function() {\n  return (Math.random() - 0.5) * 1e-6;\n}\n","export default function(d) {\n  var x = +this._x.call(null, d),\n      y = +this._y.call(null, d);\n  return add(this.cover(x, y), x, y, d);\n}\n\nfunction add(tree, x, y, d) {\n  if (isNaN(x) || isNaN(y)) return tree; // ignore invalid points\n\n  var parent,\n      node = tree._root,\n      leaf = {data: d},\n      x0 = tree._x0,\n      y0 = tree._y0,\n      x1 = tree._x1,\n      y1 = tree._y1,\n      xm,\n      ym,\n      xp,\n      yp,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return tree._root = leaf, tree;\n\n  // Find the existing leaf for the new point, or add it.\n  while (node.length) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (parent = node, !(node = node[i = bottom << 1 | right])) return parent[i] = leaf, tree;\n  }\n\n  // Is the new point is exactly coincident with the existing point?\n  xp = +tree._x.call(null, node.data);\n  yp = +tree._y.call(null, node.data);\n  if (x === xp && y === yp) return leaf.next = node, parent ? parent[i] = leaf : tree._root = leaf, tree;\n\n  // Otherwise, split the leaf node until the old and new point are separated.\n  do {\n    parent = parent ? parent[i] = new Array(4) : tree._root = new Array(4);\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n  } while ((i = bottom << 1 | right) === (j = (yp >= ym) << 1 | (xp >= xm)));\n  return parent[j] = node, parent[i] = leaf, tree;\n}\n\nexport function addAll(data) {\n  var d, i, n = data.length,\n      x,\n      y,\n      xz = new Array(n),\n      yz = new Array(n),\n      x0 = Infinity,\n      y0 = Infinity,\n      x1 = -Infinity,\n      y1 = -Infinity;\n\n  // Compute the points and their extent.\n  for (i = 0; i < n; ++i) {\n    if (isNaN(x = +this._x.call(null, d = data[i])) || isNaN(y = +this._y.call(null, d))) continue;\n    xz[i] = x;\n    yz[i] = y;\n    if (x < x0) x0 = x;\n    if (x > x1) x1 = x;\n    if (y < y0) y0 = y;\n    if (y > y1) y1 = y;\n  }\n\n  // If there were no (valid) points, inherit the existing extent.\n  if (x1 < x0) x0 = this._x0, x1 = this._x1;\n  if (y1 < y0) y0 = this._y0, y1 = this._y1;\n\n  // Expand the tree to cover the new points.\n  this.cover(x0, y0).cover(x1, y1);\n\n  // Add the new points.\n  for (i = 0; i < n; ++i) {\n    add(this, xz[i], yz[i], data[i]);\n  }\n\n  return this;\n}\n","export default function(x, y) {\n  if (isNaN(x = +x) || isNaN(y = +y)) return this; // ignore invalid points\n\n  var x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1;\n\n  // If the quadtree has no extent, initialize them.\n  // Integer extent are necessary so that if we later double the extent,\n  // the existing quadrant boundaries don’t change due to floating point error!\n  if (isNaN(x0)) {\n    x1 = (x0 = Math.floor(x)) + 1;\n    y1 = (y0 = Math.floor(y)) + 1;\n  }\n\n  // Otherwise, double repeatedly to cover.\n  else if (x0 > x || x > x1 || y0 > y || y > y1) {\n    var z = x1 - x0,\n        node = this._root,\n        parent,\n        i;\n\n    switch (i = (y < (y0 + y1) / 2) << 1 | (x < (x0 + x1) / 2)) {\n      case 0: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x1 = x0 + z, y1 = y0 + z, x > x1 || y > y1);\n        break;\n      }\n      case 1: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x0 = x1 - z, y1 = y0 + z, x0 > x || y > y1);\n        break;\n      }\n      case 2: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x1 = x0 + z, y0 = y1 - z, x > x1 || y0 > y);\n        break;\n      }\n      case 3: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x0 = x1 - z, y0 = y1 - z, x0 > x || y0 > y);\n        break;\n      }\n    }\n\n    if (this._root && this._root.length) this._root = node;\n  }\n\n  // If the quadtree covers the point already, just return.\n  else return this;\n\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  return this;\n}\n","export default function(node, x0, y0, x1, y1) {\n  this.node = node;\n  this.x0 = x0;\n  this.y0 = y0;\n  this.x1 = x1;\n  this.y1 = y1;\n}\n","export function defaultX(d) {\n  return d[0];\n}\n\nexport default function(_) {\n  return arguments.length ? (this._x = _, this) : this._x;\n}\n","export function defaultY(d) {\n  return d[1];\n}\n\nexport default function(_) {\n  return arguments.length ? (this._y = _, this) : this._y;\n}\n","import tree_add, {addAll as tree_addAll} from \"./add\";\nimport tree_cover from \"./cover\";\nimport tree_data from \"./data\";\nimport tree_extent from \"./extent\";\nimport tree_find from \"./find\";\nimport tree_remove, {removeAll as tree_removeAll} from \"./remove\";\nimport tree_root from \"./root\";\nimport tree_size from \"./size\";\nimport tree_visit from \"./visit\";\nimport tree_visitAfter from \"./visitAfter\";\nimport tree_x, {defaultX} from \"./x\";\nimport tree_y, {defaultY} from \"./y\";\n\nexport default function quadtree(nodes, x, y) {\n  var tree = new Quadtree(x == null ? defaultX : x, y == null ? defaultY : y, NaN, NaN, NaN, NaN);\n  return nodes == null ? tree : tree.addAll(nodes);\n}\n\nfunction Quadtree(x, y, x0, y0, x1, y1) {\n  this._x = x;\n  this._y = y;\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  this._root = undefined;\n}\n\nfunction leaf_copy(leaf) {\n  var copy = {data: leaf.data}, next = copy;\n  while (leaf = leaf.next) next = next.next = {data: leaf.data};\n  return copy;\n}\n\nvar treeProto = quadtree.prototype = Quadtree.prototype;\n\ntreeProto.copy = function() {\n  var copy = new Quadtree(this._x, this._y, this._x0, this._y0, this._x1, this._y1),\n      node = this._root,\n      nodes,\n      child;\n\n  if (!node) return copy;\n\n  if (!node.length) return copy._root = leaf_copy(node), copy;\n\n  nodes = [{source: node, target: copy._root = new Array(4)}];\n  while (node = nodes.pop()) {\n    for (var i = 0; i < 4; ++i) {\n      if (child = node.source[i]) {\n        if (child.length) nodes.push({source: child, target: node.target[i] = new Array(4)});\n        else node.target[i] = leaf_copy(child);\n      }\n    }\n  }\n\n  return copy;\n};\n\ntreeProto.add = tree_add;\ntreeProto.addAll = tree_addAll;\ntreeProto.cover = tree_cover;\ntreeProto.data = tree_data;\ntreeProto.extent = tree_extent;\ntreeProto.find = tree_find;\ntreeProto.remove = tree_remove;\ntreeProto.removeAll = tree_removeAll;\ntreeProto.root = tree_root;\ntreeProto.size = tree_size;\ntreeProto.visit = tree_visit;\ntreeProto.visitAfter = tree_visitAfter;\ntreeProto.x = tree_x;\ntreeProto.y = tree_y;\n","import constant from \"./constant\";\nimport jiggle from \"./jiggle\";\nimport {quadtree} from \"d3-quadtree\";\n\nfunction x(d) {\n  return d.x + d.vx;\n}\n\nfunction y(d) {\n  return d.y + d.vy;\n}\n\nexport default function(radius) {\n  var nodes,\n      radii,\n      strength = 1,\n      iterations = 1;\n\n  if (typeof radius !== \"function\") radius = constant(radius == null ? 1 : +radius);\n\n  function force() {\n    var i, n = nodes.length,\n        tree,\n        node,\n        xi,\n        yi,\n        ri,\n        ri2;\n\n    for (var k = 0; k < iterations; ++k) {\n      tree = quadtree(nodes, x, y).visitAfter(prepare);\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        ri = radii[node.index], ri2 = ri * ri;\n        xi = node.x + node.vx;\n        yi = node.y + node.vy;\n        tree.visit(apply);\n      }\n    }\n\n    function apply(quad, x0, y0, x1, y1) {\n      var data = quad.data, rj = quad.r, r = ri + rj;\n      if (data) {\n        if (data.index > node.index) {\n          var x = xi - data.x - data.vx,\n              y = yi - data.y - data.vy,\n              l = x * x + y * y;\n          if (l < r * r) {\n            if (x === 0) x = jiggle(), l += x * x;\n            if (y === 0) y = jiggle(), l += y * y;\n            l = (r - (l = Math.sqrt(l))) / l * strength;\n            node.vx += (x *= l) * (r = (rj *= rj) / (ri2 + rj));\n            node.vy += (y *= l) * r;\n            data.vx -= x * (r = 1 - r);\n            data.vy -= y * r;\n          }\n        }\n        return;\n      }\n      return x0 > xi + r || x1 < xi - r || y0 > yi + r || y1 < yi - r;\n    }\n  }\n\n  function prepare(quad) {\n    if (quad.data) return quad.r = radii[quad.data.index];\n    for (var i = quad.r = 0; i < 4; ++i) {\n      if (quad[i] && quad[i].r > quad.r) {\n        quad.r = quad[i].r;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length, node;\n    radii = new Array(n);\n    for (i = 0; i < n; ++i) node = nodes[i], radii[node.index] = +radius(node, i, nodes);\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.iterations = function(_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = +_, force) : strength;\n  };\n\n  force.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : radius;\n  };\n\n  return force;\n}\n","export default function() {\n  var data = [];\n  this.visit(function(node) {\n    if (!node.length) do data.push(node.data); while (node = node.next)\n  });\n  return data;\n}\n","export default function(_) {\n  return arguments.length\n      ? this.cover(+_[0][0], +_[0][1]).cover(+_[1][0], +_[1][1])\n      : isNaN(this._x0) ? undefined : [[this._x0, this._y0], [this._x1, this._y1]];\n}\n","import Quad from \"./quad\";\n\nexport default function(x, y, radius) {\n  var data,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1,\n      y1,\n      x2,\n      y2,\n      x3 = this._x1,\n      y3 = this._y1,\n      quads = [],\n      node = this._root,\n      q,\n      i;\n\n  if (node) quads.push(new Quad(node, x0, y0, x3, y3));\n  if (radius == null) radius = Infinity;\n  else {\n    x0 = x - radius, y0 = y - radius;\n    x3 = x + radius, y3 = y + radius;\n    radius *= radius;\n  }\n\n  while (q = quads.pop()) {\n\n    // Stop searching if this quadrant can’t contain a closer node.\n    if (!(node = q.node)\n        || (x1 = q.x0) > x3\n        || (y1 = q.y0) > y3\n        || (x2 = q.x1) < x0\n        || (y2 = q.y1) < y0) continue;\n\n    // Bisect the current quadrant.\n    if (node.length) {\n      var xm = (x1 + x2) / 2,\n          ym = (y1 + y2) / 2;\n\n      quads.push(\n        new Quad(node[3], xm, ym, x2, y2),\n        new Quad(node[2], x1, ym, xm, y2),\n        new Quad(node[1], xm, y1, x2, ym),\n        new Quad(node[0], x1, y1, xm, ym)\n      );\n\n      // Visit the closest quadrant first.\n      if (i = (y >= ym) << 1 | (x >= xm)) {\n        q = quads[quads.length - 1];\n        quads[quads.length - 1] = quads[quads.length - 1 - i];\n        quads[quads.length - 1 - i] = q;\n      }\n    }\n\n    // Visit this point. (Visiting coincident points isn’t necessary!)\n    else {\n      var dx = x - +this._x.call(null, node.data),\n          dy = y - +this._y.call(null, node.data),\n          d2 = dx * dx + dy * dy;\n      if (d2 < radius) {\n        var d = Math.sqrt(radius = d2);\n        x0 = x - d, y0 = y - d;\n        x3 = x + d, y3 = y + d;\n        data = node.data;\n      }\n    }\n  }\n\n  return data;\n}\n","export default function(d) {\n  if (isNaN(x = +this._x.call(null, d)) || isNaN(y = +this._y.call(null, d))) return this; // ignore invalid points\n\n  var parent,\n      node = this._root,\n      retainer,\n      previous,\n      next,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1,\n      x,\n      y,\n      xm,\n      ym,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return this;\n\n  // Find the leaf node for the point.\n  // While descending, also retain the deepest parent with a non-removed sibling.\n  if (node.length) while (true) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (!(parent = node, node = node[i = bottom << 1 | right])) return this;\n    if (!node.length) break;\n    if (parent[(i + 1) & 3] || parent[(i + 2) & 3] || parent[(i + 3) & 3]) retainer = parent, j = i;\n  }\n\n  // Find the point to remove.\n  while (node.data !== d) if (!(previous = node, node = node.next)) return this;\n  if (next = node.next) delete node.next;\n\n  // If there are multiple coincident points, remove just the point.\n  if (previous) return (next ? previous.next = next : delete previous.next), this;\n\n  // If this is the root point, remove it.\n  if (!parent) return this._root = next, this;\n\n  // Remove this leaf.\n  next ? parent[i] = next : delete parent[i];\n\n  // If the parent now contains exactly one leaf, collapse superfluous parents.\n  if ((node = parent[0] || parent[1] || parent[2] || parent[3])\n      && node === (parent[3] || parent[2] || parent[1] || parent[0])\n      && !node.length) {\n    if (retainer) retainer[j] = node;\n    else this._root = node;\n  }\n\n  return this;\n}\n\nexport function removeAll(data) {\n  for (var i = 0, n = data.length; i < n; ++i) this.remove(data[i]);\n  return this;\n}\n","export default function() {\n  return this._root;\n}\n","export default function() {\n  var size = 0;\n  this.visit(function(node) {\n    if (!node.length) do ++size; while (node = node.next)\n  });\n  return size;\n}\n","import Quad from \"./quad\";\n\nexport default function(callback) {\n  var quads = [], q, node = this._root, child, x0, y0, x1, y1;\n  if (node) quads.push(new Quad(node, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    if (!callback(node = q.node, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1) && node.length) {\n      var xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n    }\n  }\n  return this;\n}\n","import Quad from \"./quad\";\n\nexport default function(callback) {\n  var quads = [], next = [], q;\n  if (this._root) quads.push(new Quad(this._root, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    var node = q.node;\n    if (node.length) {\n      var child, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1, xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n    }\n    next.push(q);\n  }\n  while (q = next.pop()) {\n    callback(q.node, q.x0, q.y0, q.x1, q.y1);\n  }\n  return this;\n}\n","import constant from \"./constant\";\nimport jiggle from \"./jiggle\";\nimport {map} from \"d3-collection\";\n\nfunction index(d) {\n  return d.index;\n}\n\nfunction find(nodeById, nodeId) {\n  var node = nodeById.get(nodeId);\n  if (!node) throw new Error(\"missing: \" + nodeId);\n  return node;\n}\n\nexport default function(links) {\n  var id = index,\n      strength = defaultStrength,\n      strengths,\n      distance = constant(30),\n      distances,\n      nodes,\n      count,\n      bias,\n      iterations = 1;\n\n  if (links == null) links = [];\n\n  function defaultStrength(link) {\n    return 1 / Math.min(count[link.source.index], count[link.target.index]);\n  }\n\n  function force(alpha) {\n    for (var k = 0, n = links.length; k < iterations; ++k) {\n      for (var i = 0, link, source, target, x, y, l, b; i < n; ++i) {\n        link = links[i], source = link.source, target = link.target;\n        x = target.x + target.vx - source.x - source.vx || jiggle();\n        y = target.y + target.vy - source.y - source.vy || jiggle();\n        l = Math.sqrt(x * x + y * y);\n        l = (l - distances[i]) / l * alpha * strengths[i];\n        x *= l, y *= l;\n        target.vx -= x * (b = bias[i]);\n        target.vy -= y * b;\n        source.vx += x * (b = 1 - b);\n        source.vy += y * b;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n\n    var i,\n        n = nodes.length,\n        m = links.length,\n        nodeById = map(nodes, id),\n        link;\n\n    for (i = 0, count = new Array(n); i < m; ++i) {\n      link = links[i], link.index = i;\n      if (typeof link.source !== \"object\") link.source = find(nodeById, link.source);\n      if (typeof link.target !== \"object\") link.target = find(nodeById, link.target);\n      count[link.source.index] = (count[link.source.index] || 0) + 1;\n      count[link.target.index] = (count[link.target.index] || 0) + 1;\n    }\n\n    for (i = 0, bias = new Array(m); i < m; ++i) {\n      link = links[i], bias[i] = count[link.source.index] / (count[link.source.index] + count[link.target.index]);\n    }\n\n    strengths = new Array(m), initializeStrength();\n    distances = new Array(m), initializeDistance();\n  }\n\n  function initializeStrength() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      strengths[i] = +strength(links[i], i, links);\n    }\n  }\n\n  function initializeDistance() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      distances[i] = +distance(links[i], i, links);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.links = function(_) {\n    return arguments.length ? (links = _, initialize(), force) : links;\n  };\n\n  force.id = function(_) {\n    return arguments.length ? (id = _, force) : id;\n  };\n\n  force.iterations = function(_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initializeStrength(), force) : strength;\n  };\n\n  force.distance = function(_) {\n    return arguments.length ? (distance = typeof _ === \"function\" ? _ : constant(+_), initializeDistance(), force) : distance;\n  };\n\n  return force;\n}\n","import {dispatch} from \"d3-dispatch\";\nimport {map} from \"d3-collection\";\nimport {timer} from \"d3-timer\";\n\nexport function x(d) {\n  return d.x;\n}\n\nexport function y(d) {\n  return d.y;\n}\n\nvar initialRadius = 10,\n    initialAngle = Math.PI * (3 - Math.sqrt(5));\n\nexport default function(nodes) {\n  var simulation,\n      alpha = 1,\n      alphaMin = 0.001,\n      alphaDecay = 1 - Math.pow(alphaMin, 1 / 300),\n      alphaTarget = 0,\n      velocityDecay = 0.6,\n      forces = map(),\n      stepper = timer(step),\n      event = dispatch(\"tick\", \"end\");\n\n  if (nodes == null) nodes = [];\n\n  function step() {\n    tick();\n    event.call(\"tick\", simulation);\n    if (alpha < alphaMin) {\n      stepper.stop();\n      event.call(\"end\", simulation);\n    }\n  }\n\n  function tick() {\n    var i, n = nodes.length, node;\n\n    alpha += (alphaTarget - alpha) * alphaDecay;\n\n    forces.each(function(force) {\n      force(alpha);\n    });\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i];\n      if (node.fx == null) node.x += node.vx *= velocityDecay;\n      else node.x = node.fx, node.vx = 0;\n      if (node.fy == null) node.y += node.vy *= velocityDecay;\n      else node.y = node.fy, node.vy = 0;\n    }\n  }\n\n  function initializeNodes() {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.index = i;\n      if (isNaN(node.x) || isNaN(node.y)) {\n        var radius = initialRadius * Math.sqrt(i), angle = i * initialAngle;\n        node.x = radius * Math.cos(angle);\n        node.y = radius * Math.sin(angle);\n      }\n      if (isNaN(node.vx) || isNaN(node.vy)) {\n        node.vx = node.vy = 0;\n      }\n    }\n  }\n\n  function initializeForce(force) {\n    if (force.initialize) force.initialize(nodes);\n    return force;\n  }\n\n  initializeNodes();\n\n  return simulation = {\n    tick: tick,\n\n    restart: function() {\n      return stepper.restart(step), simulation;\n    },\n\n    stop: function() {\n      return stepper.stop(), simulation;\n    },\n\n    nodes: function(_) {\n      return arguments.length ? (nodes = _, initializeNodes(), forces.each(initializeForce), simulation) : nodes;\n    },\n\n    alpha: function(_) {\n      return arguments.length ? (alpha = +_, simulation) : alpha;\n    },\n\n    alphaMin: function(_) {\n      return arguments.length ? (alphaMin = +_, simulation) : alphaMin;\n    },\n\n    alphaDecay: function(_) {\n      return arguments.length ? (alphaDecay = +_, simulation) : +alphaDecay;\n    },\n\n    alphaTarget: function(_) {\n      return arguments.length ? (alphaTarget = +_, simulation) : alphaTarget;\n    },\n\n    velocityDecay: function(_) {\n      return arguments.length ? (velocityDecay = 1 - _, simulation) : 1 - velocityDecay;\n    },\n\n    force: function(name, _) {\n      return arguments.length > 1 ? ((_ == null ? forces.remove(name) : forces.set(name, initializeForce(_))), simulation) : forces.get(name);\n    },\n\n    find: function(x, y, radius) {\n      var i = 0,\n          n = nodes.length,\n          dx,\n          dy,\n          d2,\n          node,\n          closest;\n\n      if (radius == null) radius = Infinity;\n      else radius *= radius;\n\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        dx = x - node.x;\n        dy = y - node.y;\n        d2 = dx * dx + dy * dy;\n        if (d2 < radius) closest = node, radius = d2;\n      }\n\n      return closest;\n    },\n\n    on: function(name, _) {\n      return arguments.length > 1 ? (event.on(name, _), simulation) : event.on(name);\n    }\n  };\n}\n","import constant from \"./constant\";\nimport jiggle from \"./jiggle\";\nimport {quadtree} from \"d3-quadtree\";\nimport {x, y} from \"./simulation\";\n\nexport default function() {\n  var nodes,\n      node,\n      alpha,\n      strength = constant(-30),\n      strengths,\n      distanceMin2 = 1,\n      distanceMax2 = Infinity,\n      theta2 = 0.81;\n\n  function force(_) {\n    var i, n = nodes.length, tree = quadtree(nodes, x, y).visitAfter(accumulate);\n    for (alpha = _, i = 0; i < n; ++i) node = nodes[i], tree.visit(apply);\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length, node;\n    strengths = new Array(n);\n    for (i = 0; i < n; ++i) node = nodes[i], strengths[node.index] = +strength(node, i, nodes);\n  }\n\n  function accumulate(quad) {\n    var strength = 0, q, c, weight = 0, x, y, i;\n\n    // For internal nodes, accumulate forces from child quadrants.\n    if (quad.length) {\n      for (x = y = i = 0; i < 4; ++i) {\n        if ((q = quad[i]) && (c = Math.abs(q.value))) {\n          strength += q.value, weight += c, x += c * q.x, y += c * q.y;\n        }\n      }\n      quad.x = x / weight;\n      quad.y = y / weight;\n    }\n\n    // For leaf nodes, accumulate forces from coincident quadrants.\n    else {\n      q = quad;\n      q.x = q.data.x;\n      q.y = q.data.y;\n      do strength += strengths[q.data.index];\n      while (q = q.next);\n    }\n\n    quad.value = strength;\n  }\n\n  function apply(quad, x1, _, x2) {\n    if (!quad.value) return true;\n\n    var x = quad.x - node.x,\n        y = quad.y - node.y,\n        w = x2 - x1,\n        l = x * x + y * y;\n\n    // Apply the Barnes-Hut approximation if possible.\n    // Limit forces for very close nodes; randomize direction if coincident.\n    if (w * w / theta2 < l) {\n      if (l < distanceMax2) {\n        if (x === 0) x = jiggle(), l += x * x;\n        if (y === 0) y = jiggle(), l += y * y;\n        if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n        node.vx += x * quad.value * alpha / l;\n        node.vy += y * quad.value * alpha / l;\n      }\n      return true;\n    }\n\n    // Otherwise, process points directly.\n    else if (quad.length || l >= distanceMax2) return;\n\n    // Limit forces for very close nodes; randomize direction if coincident.\n    if (quad.data !== node || quad.next) {\n      if (x === 0) x = jiggle(), l += x * x;\n      if (y === 0) y = jiggle(), l += y * y;\n      if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n    }\n\n    do if (quad.data !== node) {\n      w = strengths[quad.data.index] * alpha / l;\n      node.vx += x * w;\n      node.vy += y * w;\n    } while (quad = quad.next);\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : strength;\n  };\n\n  force.distanceMin = function(_) {\n    return arguments.length ? (distanceMin2 = _ * _, force) : Math.sqrt(distanceMin2);\n  };\n\n  force.distanceMax = function(_) {\n    return arguments.length ? (distanceMax2 = _ * _, force) : Math.sqrt(distanceMax2);\n  };\n\n  force.theta = function(_) {\n    return arguments.length ? (theta2 = _ * _, force) : Math.sqrt(theta2);\n  };\n\n  return force;\n}\n","import constant from \"./constant\";\n\nexport default function(radius, x, y) {\n  var nodes,\n      strength = constant(0.1),\n      strengths,\n      radiuses;\n\n  if (typeof radius !== \"function\") radius = constant(+radius);\n  if (x == null) x = 0;\n  if (y == null) y = 0;\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length; i < n; ++i) {\n      var node = nodes[i],\n          dx = node.x - x || 1e-6,\n          dy = node.y - y || 1e-6,\n          r = Math.sqrt(dx * dx + dy * dy),\n          k = (radiuses[i] - r) * strengths[i] * alpha / r;\n      node.vx += dx * k;\n      node.vy += dy * k;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    radiuses = new Array(n);\n    for (i = 0; i < n; ++i) {\n      radiuses[i] = +radius(nodes[i], i, nodes);\n      strengths[i] = isNaN(radiuses[i]) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _, initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : strength;\n  };\n\n  force.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : radius;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = +_, force) : x;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = +_, force) : y;\n  };\n\n  return force;\n}\n","import constant from \"./constant\";\n\nexport default function(x) {\n  var strength = constant(0.1),\n      nodes,\n      strengths,\n      xz;\n\n  if (typeof x !== \"function\") x = constant(x == null ? 0 : +x);\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vx += (xz[i] - node.x) * strengths[i] * alpha;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    xz = new Array(n);\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(xz[i] = +x(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : strength;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : x;\n  };\n\n  return force;\n}\n","import constant from \"./constant\";\n\nexport default function(y) {\n  var strength = constant(0.1),\n      nodes,\n      strengths,\n      yz;\n\n  if (typeof y !== \"function\") y = constant(y == null ? 0 : +y);\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vy += (yz[i] - node.y) * strengths[i] * alpha;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    yz = new Array(n);\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(yz[i] = +y(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : strength;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : y;\n  };\n\n  return force;\n}\n","// Computes the decimal coefficient and exponent of the specified number x with\n// significant digits p, where x is positive and p is in [1, 21] or undefined.\n// For example, formatDecimal(1.23) returns [\"123\", 0].\nexport default function(x, p) {\n  if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf(\"e\")) < 0) return null; // NaN, ±Infinity\n  var i, coefficient = x.slice(0, i);\n\n  // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\n  // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\n  return [\n    coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,\n    +x.slice(i + 1)\n  ];\n}\n","import formatDecimal from \"./formatDecimal\";\n\nexport default function(x) {\n  return x = formatDecimal(Math.abs(x)), x ? x[1] : NaN;\n}\n","// [[fill]align][sign][symbol][0][width][,][.precision][~][type]\nvar re = /^(?:(.)?([<>=^]))?([+\\-\\( ])?([$#])?(0)?(\\d+)?(,)?(\\.\\d+)?(~)?([a-z%])?$/i;\n\nexport default function formatSpecifier(specifier) {\n  return new FormatSpecifier(specifier);\n}\n\nformatSpecifier.prototype = FormatSpecifier.prototype; // instanceof\n\nfunction FormatSpecifier(specifier) {\n  if (!(match = re.exec(specifier))) throw new Error(\"invalid format: \" + specifier);\n  var match;\n  this.fill = match[1] || \" \";\n  this.align = match[2] || \">\";\n  this.sign = match[3] || \"-\";\n  this.symbol = match[4] || \"\";\n  this.zero = !!match[5];\n  this.width = match[6] && +match[6];\n  this.comma = !!match[7];\n  this.precision = match[8] && +match[8].slice(1);\n  this.trim = !!match[9];\n  this.type = match[10] || \"\";\n}\n\nFormatSpecifier.prototype.toString = function() {\n  return this.fill\n      + this.align\n      + this.sign\n      + this.symbol\n      + (this.zero ? \"0\" : \"\")\n      + (this.width == null ? \"\" : Math.max(1, this.width | 0))\n      + (this.comma ? \",\" : \"\")\n      + (this.precision == null ? \"\" : \".\" + Math.max(0, this.precision | 0))\n      + (this.trim ? \"~\" : \"\")\n      + this.type;\n};\n","// Trims insignificant zeros, e.g., replaces 1.2000k with 1.2k.\nexport default function(s) {\n  out: for (var n = s.length, i = 1, i0 = -1, i1; i < n; ++i) {\n    switch (s[i]) {\n      case \".\": i0 = i1 = i; break;\n      case \"0\": if (i0 === 0) i0 = i; i1 = i; break;\n      default: if (i0 > 0) { if (!+s[i]) break out; i0 = 0; } break;\n    }\n  }\n  return i0 > 0 ? s.slice(0, i0) + s.slice(i1 + 1) : s;\n}\n","import formatDecimal from \"./formatDecimal\";\n\nexport var prefixExponent;\n\nexport default function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1],\n      i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,\n      n = coefficient.length;\n  return i === n ? coefficient\n      : i > n ? coefficient + new Array(i - n + 1).join(\"0\")\n      : i > 0 ? coefficient.slice(0, i) + \".\" + coefficient.slice(i)\n      : \"0.\" + new Array(1 - i).join(\"0\") + formatDecimal(x, Math.max(0, p + i - 1))[0]; // less than 1y!\n}\n","import formatLocale from \"./locale\";\n\nvar locale;\nexport var format;\nexport var formatPrefix;\n\ndefaultLocale({\n  decimal: \".\",\n  thousands: \",\",\n  grouping: [3],\n  currency: [\"$\", \"\"]\n});\n\nexport default function defaultLocale(definition) {\n  locale = formatLocale(definition);\n  format = locale.format;\n  formatPrefix = locale.formatPrefix;\n  return locale;\n}\n","import formatDecimal from \"./formatDecimal\";\n\nexport default function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1];\n  return exponent < 0 ? \"0.\" + new Array(-exponent).join(\"0\") + coefficient\n      : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + \".\" + coefficient.slice(exponent + 1)\n      : coefficient + new Array(exponent - coefficient.length + 2).join(\"0\");\n}\n","import formatPrefixAuto from \"./formatPrefixAuto\";\nimport formatRounded from \"./formatRounded\";\n\nexport default {\n  \"%\": function(x, p) { return (x * 100).toFixed(p); },\n  \"b\": function(x) { return Math.round(x).toString(2); },\n  \"c\": function(x) { return x + \"\"; },\n  \"d\": function(x) { return Math.round(x).toString(10); },\n  \"e\": function(x, p) { return x.toExponential(p); },\n  \"f\": function(x, p) { return x.toFixed(p); },\n  \"g\": function(x, p) { return x.toPrecision(p); },\n  \"o\": function(x) { return Math.round(x).toString(8); },\n  \"p\": function(x, p) { return formatRounded(x * 100, p); },\n  \"r\": formatRounded,\n  \"s\": formatPrefixAuto,\n  \"X\": function(x) { return Math.round(x).toString(16).toUpperCase(); },\n  \"x\": function(x) { return Math.round(x).toString(16); }\n};\n","export default function(x) {\n  return x;\n}\n","import exponent from \"./exponent\";\nimport formatGroup from \"./formatGroup\";\nimport formatNumerals from \"./formatNumerals\";\nimport formatSpecifier from \"./formatSpecifier\";\nimport formatTrim from \"./formatTrim\";\nimport formatTypes from \"./formatTypes\";\nimport {prefixExponent} from \"./formatPrefixAuto\";\nimport identity from \"./identity\";\n\nvar prefixes = [\"y\",\"z\",\"a\",\"f\",\"p\",\"n\",\"µ\",\"m\",\"\",\"k\",\"M\",\"G\",\"T\",\"P\",\"E\",\"Z\",\"Y\"];\n\nexport default function(locale) {\n  var group = locale.grouping && locale.thousands ? formatGroup(locale.grouping, locale.thousands) : identity,\n      currency = locale.currency,\n      decimal = locale.decimal,\n      numerals = locale.numerals ? formatNumerals(locale.numerals) : identity,\n      percent = locale.percent || \"%\";\n\n  function newFormat(specifier) {\n    specifier = formatSpecifier(specifier);\n\n    var fill = specifier.fill,\n        align = specifier.align,\n        sign = specifier.sign,\n        symbol = specifier.symbol,\n        zero = specifier.zero,\n        width = specifier.width,\n        comma = specifier.comma,\n        precision = specifier.precision,\n        trim = specifier.trim,\n        type = specifier.type;\n\n    // The \"n\" type is an alias for \",g\".\n    if (type === \"n\") comma = true, type = \"g\";\n\n    // The \"\" type, and any invalid type, is an alias for \".12~g\".\n    else if (!formatTypes[type]) precision == null && (precision = 12), trim = true, type = \"g\";\n\n    // If zero fill is specified, padding goes after sign and before digits.\n    if (zero || (fill === \"0\" && align === \"=\")) zero = true, fill = \"0\", align = \"=\";\n\n    // Compute the prefix and suffix.\n    // For SI-prefix, the suffix is lazily computed.\n    var prefix = symbol === \"$\" ? currency[0] : symbol === \"#\" && /[boxX]/.test(type) ? \"0\" + type.toLowerCase() : \"\",\n        suffix = symbol === \"$\" ? currency[1] : /[%p]/.test(type) ? percent : \"\";\n\n    // What format function should we use?\n    // Is this an integer type?\n    // Can this type generate exponential notation?\n    var formatType = formatTypes[type],\n        maybeSuffix = /[defgprs%]/.test(type);\n\n    // Set the default precision if not specified,\n    // or clamp the specified precision to the supported range.\n    // For significant precision, it must be in [1, 21].\n    // For fixed precision, it must be in [0, 20].\n    precision = precision == null ? 6\n        : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision))\n        : Math.max(0, Math.min(20, precision));\n\n    function format(value) {\n      var valuePrefix = prefix,\n          valueSuffix = suffix,\n          i, n, c;\n\n      if (type === \"c\") {\n        valueSuffix = formatType(value) + valueSuffix;\n        value = \"\";\n      } else {\n        value = +value;\n\n        // Perform the initial formatting.\n        var valueNegative = value < 0;\n        value = formatType(Math.abs(value), precision);\n\n        // Trim insignificant zeros.\n        if (trim) value = formatTrim(value);\n\n        // If a negative value rounds to zero during formatting, treat as positive.\n        if (valueNegative && +value === 0) valueNegative = false;\n\n        // Compute the prefix and suffix.\n        valuePrefix = (valueNegative ? (sign === \"(\" ? sign : \"-\") : sign === \"-\" || sign === \"(\" ? \"\" : sign) + valuePrefix;\n        valueSuffix = (type === \"s\" ? prefixes[8 + prefixExponent / 3] : \"\") + valueSuffix + (valueNegative && sign === \"(\" ? \")\" : \"\");\n\n        // Break the formatted value into the integer “value” part that can be\n        // grouped, and fractional or exponential “suffix” part that is not.\n        if (maybeSuffix) {\n          i = -1, n = value.length;\n          while (++i < n) {\n            if (c = value.charCodeAt(i), 48 > c || c > 57) {\n              valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;\n              value = value.slice(0, i);\n              break;\n            }\n          }\n        }\n      }\n\n      // If the fill character is not \"0\", grouping is applied before padding.\n      if (comma && !zero) value = group(value, Infinity);\n\n      // Compute the padding.\n      var length = valuePrefix.length + value.length + valueSuffix.length,\n          padding = length < width ? new Array(width - length + 1).join(fill) : \"\";\n\n      // If the fill character is \"0\", grouping is applied after padding.\n      if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = \"\";\n\n      // Reconstruct the final output based on the desired alignment.\n      switch (align) {\n        case \"<\": value = valuePrefix + value + valueSuffix + padding; break;\n        case \"=\": value = valuePrefix + padding + value + valueSuffix; break;\n        case \"^\": value = padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length); break;\n        default: value = padding + valuePrefix + value + valueSuffix; break;\n      }\n\n      return numerals(value);\n    }\n\n    format.toString = function() {\n      return specifier + \"\";\n    };\n\n    return format;\n  }\n\n  function formatPrefix(specifier, value) {\n    var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = \"f\", specifier)),\n        e = Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3,\n        k = Math.pow(10, -e),\n        prefix = prefixes[8 + e / 3];\n    return function(value) {\n      return f(k * value) + prefix;\n    };\n  }\n\n  return {\n    format: newFormat,\n    formatPrefix: formatPrefix\n  };\n}\n","export default function(grouping, thousands) {\n  return function(value, width) {\n    var i = value.length,\n        t = [],\n        j = 0,\n        g = grouping[0],\n        length = 0;\n\n    while (i > 0 && g > 0) {\n      if (length + g + 1 > width) g = Math.max(1, width - length);\n      t.push(value.substring(i -= g, i + g));\n      if ((length += g + 1) > width) break;\n      g = grouping[j = (j + 1) % grouping.length];\n    }\n\n    return t.reverse().join(thousands);\n  };\n}\n","export default function(numerals) {\n  return function(value) {\n    return value.replace(/[0-9]/g, function(i) {\n      return numerals[+i];\n    });\n  };\n}\n","import exponent from \"./exponent\";\n\nexport default function(step) {\n  return Math.max(0, -exponent(Math.abs(step)));\n}\n","import exponent from \"./exponent\";\n\nexport default function(step, value) {\n  return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3 - exponent(Math.abs(step)));\n}\n","import exponent from \"./exponent\";\n\nexport default function(step, max) {\n  step = Math.abs(step), max = Math.abs(max) - step;\n  return Math.max(0, exponent(max) - exponent(step)) + 1;\n}\n","// Adds floating point numbers with twice the normal precision.\n// Reference: J. R. Shewchuk, Adaptive Precision Floating-Point Arithmetic and\n// Fast Robust Geometric Predicates, Discrete & Computational Geometry 18(3)\n// 305–363 (1997).\n// Code adapted from GeographicLib by Charles F. F. Karney,\n// http://geographiclib.sourceforge.net/\n\nexport default function() {\n  return new Adder;\n}\n\nfunction Adder() {\n  this.reset();\n}\n\nAdder.prototype = {\n  constructor: Adder,\n  reset: function() {\n    this.s = // rounded value\n    this.t = 0; // exact error\n  },\n  add: function(y) {\n    add(temp, y, this.t);\n    add(this, temp.s, this.s);\n    if (this.s) this.t += temp.t;\n    else this.s = temp.t;\n  },\n  valueOf: function() {\n    return this.s;\n  }\n};\n\nvar temp = new Adder;\n\nfunction add(adder, a, b) {\n  var x = adder.s = a + b,\n      bv = x - a,\n      av = x - bv;\n  adder.t = (a - av) + (b - bv);\n}\n","export var epsilon = 1e-6;\nexport var epsilon2 = 1e-12;\nexport var pi = Math.PI;\nexport var halfPi = pi / 2;\nexport var quarterPi = pi / 4;\nexport var tau = pi * 2;\n\nexport var degrees = 180 / pi;\nexport var radians = pi / 180;\n\nexport var abs = Math.abs;\nexport var atan = Math.atan;\nexport var atan2 = Math.atan2;\nexport var cos = Math.cos;\nexport var ceil = Math.ceil;\nexport var exp = Math.exp;\nexport var floor = Math.floor;\nexport var log = Math.log;\nexport var pow = Math.pow;\nexport var sin = Math.sin;\nexport var sign = Math.sign || function(x) { return x > 0 ? 1 : x < 0 ? -1 : 0; };\nexport var sqrt = Math.sqrt;\nexport var tan = Math.tan;\n\nexport function acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);\n}\n\nexport function asin(x) {\n  return x > 1 ? halfPi : x < -1 ? -halfPi : Math.asin(x);\n}\n\nexport function haversin(x) {\n  return (x = sin(x / 2)) * x;\n}\n","export default function noop() {}\n","function streamGeometry(geometry, stream) {\n  if (geometry && streamGeometryType.hasOwnProperty(geometry.type)) {\n    streamGeometryType[geometry.type](geometry, stream);\n  }\n}\n\nvar streamObjectType = {\n  Feature: function(object, stream) {\n    streamGeometry(object.geometry, stream);\n  },\n  FeatureCollection: function(object, stream) {\n    var features = object.features, i = -1, n = features.length;\n    while (++i < n) streamGeometry(features[i].geometry, stream);\n  }\n};\n\nvar streamGeometryType = {\n  Sphere: function(object, stream) {\n    stream.sphere();\n  },\n  Point: function(object, stream) {\n    object = object.coordinates;\n    stream.point(object[0], object[1], object[2]);\n  },\n  MultiPoint: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) object = coordinates[i], stream.point(object[0], object[1], object[2]);\n  },\n  LineString: function(object, stream) {\n    streamLine(object.coordinates, stream, 0);\n  },\n  MultiLineString: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamLine(coordinates[i], stream, 0);\n  },\n  Polygon: function(object, stream) {\n    streamPolygon(object.coordinates, stream);\n  },\n  MultiPolygon: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamPolygon(coordinates[i], stream);\n  },\n  GeometryCollection: function(object, stream) {\n    var geometries = object.geometries, i = -1, n = geometries.length;\n    while (++i < n) streamGeometry(geometries[i], stream);\n  }\n};\n\nfunction streamLine(coordinates, stream, closed) {\n  var i = -1, n = coordinates.length - closed, coordinate;\n  stream.lineStart();\n  while (++i < n) coordinate = coordinates[i], stream.point(coordinate[0], coordinate[1], coordinate[2]);\n  stream.lineEnd();\n}\n\nfunction streamPolygon(coordinates, stream) {\n  var i = -1, n = coordinates.length;\n  stream.polygonStart();\n  while (++i < n) streamLine(coordinates[i], stream, 1);\n  stream.polygonEnd();\n}\n\nexport default function(object, stream) {\n  if (object && streamObjectType.hasOwnProperty(object.type)) {\n    streamObjectType[object.type](object, stream);\n  } else {\n    streamGeometry(object, stream);\n  }\n}\n","import adder from \"./adder\";\nimport {atan2, cos, quarterPi, radians, sin, tau} from \"./math\";\nimport noop from \"./noop\";\nimport stream from \"./stream\";\n\nexport var areaRingSum = adder();\n\nvar areaSum = adder(),\n    lambda00,\n    phi00,\n    lambda0,\n    cosPhi0,\n    sinPhi0;\n\nexport var areaStream = {\n  point: noop,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: function() {\n    areaRingSum.reset();\n    areaStream.lineStart = areaRingStart;\n    areaStream.lineEnd = areaRingEnd;\n  },\n  polygonEnd: function() {\n    var areaRing = +areaRingSum;\n    areaSum.add(areaRing < 0 ? tau + areaRing : areaRing);\n    this.lineStart = this.lineEnd = this.point = noop;\n  },\n  sphere: function() {\n    areaSum.add(tau);\n  }\n};\n\nfunction areaRingStart() {\n  areaStream.point = areaPointFirst;\n}\n\nfunction areaRingEnd() {\n  areaPoint(lambda00, phi00);\n}\n\nfunction areaPointFirst(lambda, phi) {\n  areaStream.point = areaPoint;\n  lambda00 = lambda, phi00 = phi;\n  lambda *= radians, phi *= radians;\n  lambda0 = lambda, cosPhi0 = cos(phi = phi / 2 + quarterPi), sinPhi0 = sin(phi);\n}\n\nfunction areaPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  phi = phi / 2 + quarterPi; // half the angular distance from south pole\n\n  // Spherical excess E for a spherical triangle with vertices: south pole,\n  // previous point, current point.  Uses a formula derived from Cagnoli’s\n  // theorem.  See Todhunter, Spherical Trig. (1871), Sec. 103, Eq. (2).\n  var dLambda = lambda - lambda0,\n      sdLambda = dLambda >= 0 ? 1 : -1,\n      adLambda = sdLambda * dLambda,\n      cosPhi = cos(phi),\n      sinPhi = sin(phi),\n      k = sinPhi0 * sinPhi,\n      u = cosPhi0 * cosPhi + k * cos(adLambda),\n      v = k * sdLambda * sin(adLambda);\n  areaRingSum.add(atan2(v, u));\n\n  // Advance the previous points.\n  lambda0 = lambda, cosPhi0 = cosPhi, sinPhi0 = sinPhi;\n}\n\nexport default function(object) {\n  areaSum.reset();\n  stream(object, areaStream);\n  return areaSum * 2;\n}\n","import {asin, atan2, cos, sin, sqrt} from \"./math\";\n\nexport function spherical(cartesian) {\n  return [atan2(cartesian[1], cartesian[0]), asin(cartesian[2])];\n}\n\nexport function cartesian(spherical) {\n  var lambda = spherical[0], phi = spherical[1], cosPhi = cos(phi);\n  return [cosPhi * cos(lambda), cosPhi * sin(lambda), sin(phi)];\n}\n\nexport function cartesianDot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n\nexport function cartesianCross(a, b) {\n  return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];\n}\n\n// TODO return a\nexport function cartesianAddInPlace(a, b) {\n  a[0] += b[0], a[1] += b[1], a[2] += b[2];\n}\n\nexport function cartesianScale(vector, k) {\n  return [vector[0] * k, vector[1] * k, vector[2] * k];\n}\n\n// TODO return d\nexport function cartesianNormalizeInPlace(d) {\n  var l = sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n  d[0] /= l, d[1] /= l, d[2] /= l;\n}\n","import adder from \"./adder\";\nimport {areaStream, areaRingSum} from \"./area\";\nimport {cartesian, cartesianCross, cartesianNormalizeInPlace, spherical} from \"./cartesian\";\nimport {abs, degrees, epsilon, radians} from \"./math\";\nimport stream from \"./stream\";\n\nvar lambda0, phi0, lambda1, phi1, // bounds\n    lambda2, // previous lambda-coordinate\n    lambda00, phi00, // first point\n    p0, // previous 3D point\n    deltaSum = adder(),\n    ranges,\n    range;\n\nvar boundsStream = {\n  point: boundsPoint,\n  lineStart: boundsLineStart,\n  lineEnd: boundsLineEnd,\n  polygonStart: function() {\n    boundsStream.point = boundsRingPoint;\n    boundsStream.lineStart = boundsRingStart;\n    boundsStream.lineEnd = boundsRingEnd;\n    deltaSum.reset();\n    areaStream.polygonStart();\n  },\n  polygonEnd: function() {\n    areaStream.polygonEnd();\n    boundsStream.point = boundsPoint;\n    boundsStream.lineStart = boundsLineStart;\n    boundsStream.lineEnd = boundsLineEnd;\n    if (areaRingSum < 0) lambda0 = -(lambda1 = 180), phi0 = -(phi1 = 90);\n    else if (deltaSum > epsilon) phi1 = 90;\n    else if (deltaSum < -epsilon) phi0 = -90;\n    range[0] = lambda0, range[1] = lambda1;\n  }\n};\n\nfunction boundsPoint(lambda, phi) {\n  ranges.push(range = [lambda0 = lambda, lambda1 = lambda]);\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n}\n\nfunction linePoint(lambda, phi) {\n  var p = cartesian([lambda * radians, phi * radians]);\n  if (p0) {\n    var normal = cartesianCross(p0, p),\n        equatorial = [normal[1], -normal[0], 0],\n        inflection = cartesianCross(equatorial, normal);\n    cartesianNormalizeInPlace(inflection);\n    inflection = spherical(inflection);\n    var delta = lambda - lambda2,\n        sign = delta > 0 ? 1 : -1,\n        lambdai = inflection[0] * degrees * sign,\n        phii,\n        antimeridian = abs(delta) > 180;\n    if (antimeridian ^ (sign * lambda2 < lambdai && lambdai < sign * lambda)) {\n      phii = inflection[1] * degrees;\n      if (phii > phi1) phi1 = phii;\n    } else if (lambdai = (lambdai + 360) % 360 - 180, antimeridian ^ (sign * lambda2 < lambdai && lambdai < sign * lambda)) {\n      phii = -inflection[1] * degrees;\n      if (phii < phi0) phi0 = phii;\n    } else {\n      if (phi < phi0) phi0 = phi;\n      if (phi > phi1) phi1 = phi;\n    }\n    if (antimeridian) {\n      if (lambda < lambda2) {\n        if (angle(lambda0, lambda) > angle(lambda0, lambda1)) lambda1 = lambda;\n      } else {\n        if (angle(lambda, lambda1) > angle(lambda0, lambda1)) lambda0 = lambda;\n      }\n    } else {\n      if (lambda1 >= lambda0) {\n        if (lambda < lambda0) lambda0 = lambda;\n        if (lambda > lambda1) lambda1 = lambda;\n      } else {\n        if (lambda > lambda2) {\n          if (angle(lambda0, lambda) > angle(lambda0, lambda1)) lambda1 = lambda;\n        } else {\n          if (angle(lambda, lambda1) > angle(lambda0, lambda1)) lambda0 = lambda;\n        }\n      }\n    }\n  } else {\n    ranges.push(range = [lambda0 = lambda, lambda1 = lambda]);\n  }\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n  p0 = p, lambda2 = lambda;\n}\n\nfunction boundsLineStart() {\n  boundsStream.point = linePoint;\n}\n\nfunction boundsLineEnd() {\n  range[0] = lambda0, range[1] = lambda1;\n  boundsStream.point = boundsPoint;\n  p0 = null;\n}\n\nfunction boundsRingPoint(lambda, phi) {\n  if (p0) {\n    var delta = lambda - lambda2;\n    deltaSum.add(abs(delta) > 180 ? delta + (delta > 0 ? 360 : -360) : delta);\n  } else {\n    lambda00 = lambda, phi00 = phi;\n  }\n  areaStream.point(lambda, phi);\n  linePoint(lambda, phi);\n}\n\nfunction boundsRingStart() {\n  areaStream.lineStart();\n}\n\nfunction boundsRingEnd() {\n  boundsRingPoint(lambda00, phi00);\n  areaStream.lineEnd();\n  if (abs(deltaSum) > epsilon) lambda0 = -(lambda1 = 180);\n  range[0] = lambda0, range[1] = lambda1;\n  p0 = null;\n}\n\n// Finds the left-right distance between two longitudes.\n// This is almost the same as (lambda1 - lambda0 + 360°) % 360°, except that we want\n// the distance between ±180° to be 360°.\nfunction angle(lambda0, lambda1) {\n  return (lambda1 -= lambda0) < 0 ? lambda1 + 360 : lambda1;\n}\n\nfunction rangeCompare(a, b) {\n  return a[0] - b[0];\n}\n\nfunction rangeContains(range, x) {\n  return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n}\n\nexport default function(feature) {\n  var i, n, a, b, merged, deltaMax, delta;\n\n  phi1 = lambda1 = -(lambda0 = phi0 = Infinity);\n  ranges = [];\n  stream(feature, boundsStream);\n\n  // First, sort ranges by their minimum longitudes.\n  if (n = ranges.length) {\n    ranges.sort(rangeCompare);\n\n    // Then, merge any ranges that overlap.\n    for (i = 1, a = ranges[0], merged = [a]; i < n; ++i) {\n      b = ranges[i];\n      if (rangeContains(a, b[0]) || rangeContains(a, b[1])) {\n        if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n        if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n      } else {\n        merged.push(a = b);\n      }\n    }\n\n    // Finally, find the largest gap between the merged ranges.\n    // The final bounding box will be the inverse of this gap.\n    for (deltaMax = -Infinity, n = merged.length - 1, i = 0, a = merged[n]; i <= n; a = b, ++i) {\n      b = merged[i];\n      if ((delta = angle(a[1], b[0])) > deltaMax) deltaMax = delta, lambda0 = b[0], lambda1 = a[1];\n    }\n  }\n\n  ranges = range = null;\n\n  return lambda0 === Infinity || phi0 === Infinity\n      ? [[NaN, NaN], [NaN, NaN]]\n      : [[lambda0, phi0], [lambda1, phi1]];\n}\n","import {asin, atan2, cos, degrees, epsilon, epsilon2, radians, sin, sqrt} from \"./math\";\nimport noop from \"./noop\";\nimport stream from \"./stream\";\n\nvar W0, W1,\n    X0, Y0, Z0,\n    X1, Y1, Z1,\n    X2, Y2, Z2,\n    lambda00, phi00, // first point\n    x0, y0, z0; // previous point\n\nvar centroidStream = {\n  sphere: noop,\n  point: centroidPoint,\n  lineStart: centroidLineStart,\n  lineEnd: centroidLineEnd,\n  polygonStart: function() {\n    centroidStream.lineStart = centroidRingStart;\n    centroidStream.lineEnd = centroidRingEnd;\n  },\n  polygonEnd: function() {\n    centroidStream.lineStart = centroidLineStart;\n    centroidStream.lineEnd = centroidLineEnd;\n  }\n};\n\n// Arithmetic mean of Cartesian vectors.\nfunction centroidPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi);\n  centroidPointCartesian(cosPhi * cos(lambda), cosPhi * sin(lambda), sin(phi));\n}\n\nfunction centroidPointCartesian(x, y, z) {\n  ++W0;\n  X0 += (x - X0) / W0;\n  Y0 += (y - Y0) / W0;\n  Z0 += (z - Z0) / W0;\n}\n\nfunction centroidLineStart() {\n  centroidStream.point = centroidLinePointFirst;\n}\n\nfunction centroidLinePointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi);\n  x0 = cosPhi * cos(lambda);\n  y0 = cosPhi * sin(lambda);\n  z0 = sin(phi);\n  centroidStream.point = centroidLinePoint;\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLinePoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi),\n      x = cosPhi * cos(lambda),\n      y = cosPhi * sin(lambda),\n      z = sin(phi),\n      w = atan2(sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLineEnd() {\n  centroidStream.point = centroidPoint;\n}\n\n// See J. E. Brock, The Inertia Tensor for a Spherical Triangle,\n// J. Applied Mechanics 42, 239 (1975).\nfunction centroidRingStart() {\n  centroidStream.point = centroidRingPointFirst;\n}\n\nfunction centroidRingEnd() {\n  centroidRingPoint(lambda00, phi00);\n  centroidStream.point = centroidPoint;\n}\n\nfunction centroidRingPointFirst(lambda, phi) {\n  lambda00 = lambda, phi00 = phi;\n  lambda *= radians, phi *= radians;\n  centroidStream.point = centroidRingPoint;\n  var cosPhi = cos(phi);\n  x0 = cosPhi * cos(lambda);\n  y0 = cosPhi * sin(lambda);\n  z0 = sin(phi);\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidRingPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi),\n      x = cosPhi * cos(lambda),\n      y = cosPhi * sin(lambda),\n      z = sin(phi),\n      cx = y0 * z - z0 * y,\n      cy = z0 * x - x0 * z,\n      cz = x0 * y - y0 * x,\n      m = sqrt(cx * cx + cy * cy + cz * cz),\n      w = asin(m), // line weight = angle\n      v = m && -w / m; // area weight multiplier\n  X2 += v * cx;\n  Y2 += v * cy;\n  Z2 += v * cz;\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nexport default function(object) {\n  W0 = W1 =\n  X0 = Y0 = Z0 =\n  X1 = Y1 = Z1 =\n  X2 = Y2 = Z2 = 0;\n  stream(object, centroidStream);\n\n  var x = X2,\n      y = Y2,\n      z = Z2,\n      m = x * x + y * y + z * z;\n\n  // If the area-weighted ccentroid is undefined, fall back to length-weighted ccentroid.\n  if (m < epsilon2) {\n    x = X1, y = Y1, z = Z1;\n    // If the feature has zero length, fall back to arithmetic mean of point vectors.\n    if (W1 < epsilon) x = X0, y = Y0, z = Z0;\n    m = x * x + y * y + z * z;\n    // If the feature still has an undefined ccentroid, then return.\n    if (m < epsilon2) return [NaN, NaN];\n  }\n\n  return [atan2(y, x) * degrees, asin(z / sqrt(m)) * degrees];\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function(a, b) {\n\n  function compose(x, y) {\n    return x = a(x, y), b(x[0], x[1]);\n  }\n\n  if (a.invert && b.invert) compose.invert = function(x, y) {\n    return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n  };\n\n  return compose;\n}\n","import compose from \"./compose\";\nimport {asin, atan2, cos, degrees, pi, radians, sin, tau} from \"./math\";\n\nfunction rotationIdentity(lambda, phi) {\n  return [lambda > pi ? lambda - tau : lambda < -pi ? lambda + tau : lambda, phi];\n}\n\nrotationIdentity.invert = rotationIdentity;\n\nexport function rotateRadians(deltaLambda, deltaPhi, deltaGamma) {\n  return (deltaLambda %= tau) ? (deltaPhi || deltaGamma ? compose(rotationLambda(deltaLambda), rotationPhiGamma(deltaPhi, deltaGamma))\n    : rotationLambda(deltaLambda))\n    : (deltaPhi || deltaGamma ? rotationPhiGamma(deltaPhi, deltaGamma)\n    : rotationIdentity);\n}\n\nfunction forwardRotationLambda(deltaLambda) {\n  return function(lambda, phi) {\n    return lambda += deltaLambda, [lambda > pi ? lambda - tau : lambda < -pi ? lambda + tau : lambda, phi];\n  };\n}\n\nfunction rotationLambda(deltaLambda) {\n  var rotation = forwardRotationLambda(deltaLambda);\n  rotation.invert = forwardRotationLambda(-deltaLambda);\n  return rotation;\n}\n\nfunction rotationPhiGamma(deltaPhi, deltaGamma) {\n  var cosDeltaPhi = cos(deltaPhi),\n      sinDeltaPhi = sin(deltaPhi),\n      cosDeltaGamma = cos(deltaGamma),\n      sinDeltaGamma = sin(deltaGamma);\n\n  function rotation(lambda, phi) {\n    var cosPhi = cos(phi),\n        x = cos(lambda) * cosPhi,\n        y = sin(lambda) * cosPhi,\n        z = sin(phi),\n        k = z * cosDeltaPhi + x * sinDeltaPhi;\n    return [\n      atan2(y * cosDeltaGamma - k * sinDeltaGamma, x * cosDeltaPhi - z * sinDeltaPhi),\n      asin(k * cosDeltaGamma + y * sinDeltaGamma)\n    ];\n  }\n\n  rotation.invert = function(lambda, phi) {\n    var cosPhi = cos(phi),\n        x = cos(lambda) * cosPhi,\n        y = sin(lambda) * cosPhi,\n        z = sin(phi),\n        k = z * cosDeltaGamma - y * sinDeltaGamma;\n    return [\n      atan2(y * cosDeltaGamma + z * sinDeltaGamma, x * cosDeltaPhi + k * sinDeltaPhi),\n      asin(k * cosDeltaPhi - x * sinDeltaPhi)\n    ];\n  };\n\n  return rotation;\n}\n\nexport default function(rotate) {\n  rotate = rotateRadians(rotate[0] * radians, rotate[1] * radians, rotate.length > 2 ? rotate[2] * radians : 0);\n\n  function forward(coordinates) {\n    coordinates = rotate(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees, coordinates[1] *= degrees, coordinates;\n  }\n\n  forward.invert = function(coordinates) {\n    coordinates = rotate.invert(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees, coordinates[1] *= degrees, coordinates;\n  };\n\n  return forward;\n}\n","import {cartesian, cartesianNormalizeInPlace, spherical} from \"./cartesian\";\nimport constant from \"./constant\";\nimport {acos, cos, degrees, epsilon, radians, sin, tau} from \"./math\";\nimport {rotateRadians} from \"./rotation\";\n\n// Generates a circle centered at [0°, 0°], with a given radius and precision.\nexport function circleStream(stream, radius, delta, direction, t0, t1) {\n  if (!delta) return;\n  var cosRadius = cos(radius),\n      sinRadius = sin(radius),\n      step = direction * delta;\n  if (t0 == null) {\n    t0 = radius + direction * tau;\n    t1 = radius - step / 2;\n  } else {\n    t0 = circleRadius(cosRadius, t0);\n    t1 = circleRadius(cosRadius, t1);\n    if (direction > 0 ? t0 < t1 : t0 > t1) t0 += direction * tau;\n  }\n  for (var point, t = t0; direction > 0 ? t > t1 : t < t1; t -= step) {\n    point = spherical([cosRadius, -sinRadius * cos(t), -sinRadius * sin(t)]);\n    stream.point(point[0], point[1]);\n  }\n}\n\n// Returns the signed angle of a cartesian point relative to [cosRadius, 0, 0].\nfunction circleRadius(cosRadius, point) {\n  point = cartesian(point), point[0] -= cosRadius;\n  cartesianNormalizeInPlace(point);\n  var radius = acos(-point[1]);\n  return ((-point[2] < 0 ? -radius : radius) + tau - epsilon) % tau;\n}\n\nexport default function() {\n  var center = constant([0, 0]),\n      radius = constant(90),\n      precision = constant(6),\n      ring,\n      rotate,\n      stream = {point: point};\n\n  function point(x, y) {\n    ring.push(x = rotate(x, y));\n    x[0] *= degrees, x[1] *= degrees;\n  }\n\n  function circle() {\n    var c = center.apply(this, arguments),\n        r = radius.apply(this, arguments) * radians,\n        p = precision.apply(this, arguments) * radians;\n    ring = [];\n    rotate = rotateRadians(-c[0] * radians, -c[1] * radians, 0).invert;\n    circleStream(stream, r, p, 1);\n    c = {type: \"Polygon\", coordinates: [ring]};\n    ring = rotate = null;\n    return c;\n  }\n\n  circle.center = function(_) {\n    return arguments.length ? (center = typeof _ === \"function\" ? _ : constant([+_[0], +_[1]]), circle) : center;\n  };\n\n  circle.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant(+_), circle) : radius;\n  };\n\n  circle.precision = function(_) {\n    return arguments.length ? (precision = typeof _ === \"function\" ? _ : constant(+_), circle) : precision;\n  };\n\n  return circle;\n}\n","import noop from \"../noop\";\n\nexport default function() {\n  var lines = [],\n      line;\n  return {\n    point: function(x, y) {\n      line.push([x, y]);\n    },\n    lineStart: function() {\n      lines.push(line = []);\n    },\n    lineEnd: noop,\n    rejoin: function() {\n      if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n    },\n    result: function() {\n      var result = lines;\n      lines = [];\n      line = null;\n      return result;\n    }\n  };\n}\n","import {abs, epsilon} from \"./math\";\n\nexport default function(a, b) {\n  return abs(a[0] - b[0]) < epsilon && abs(a[1] - b[1]) < epsilon;\n}\n","import pointEqual from \"../pointEqual\";\n\nfunction Intersection(point, points, other, entry) {\n  this.x = point;\n  this.z = points;\n  this.o = other; // another intersection\n  this.e = entry; // is an entry?\n  this.v = false; // visited\n  this.n = this.p = null; // next & previous\n}\n\n// A generalized polygon clipping algorithm: given a polygon that has been cut\n// into its visible line segments, and rejoins the segments by interpolating\n// along the clip edge.\nexport default function(segments, compareIntersection, startInside, interpolate, stream) {\n  var subject = [],\n      clip = [],\n      i,\n      n;\n\n  segments.forEach(function(segment) {\n    if ((n = segment.length - 1) <= 0) return;\n    var n, p0 = segment[0], p1 = segment[n], x;\n\n    // If the first and last points of a segment are coincident, then treat as a\n    // closed ring. TODO if all rings are closed, then the winding order of the\n    // exterior ring should be checked.\n    if (pointEqual(p0, p1)) {\n      stream.lineStart();\n      for (i = 0; i < n; ++i) stream.point((p0 = segment[i])[0], p0[1]);\n      stream.lineEnd();\n      return;\n    }\n\n    subject.push(x = new Intersection(p0, segment, null, true));\n    clip.push(x.o = new Intersection(p0, null, x, false));\n    subject.push(x = new Intersection(p1, segment, null, false));\n    clip.push(x.o = new Intersection(p1, null, x, true));\n  });\n\n  if (!subject.length) return;\n\n  clip.sort(compareIntersection);\n  link(subject);\n  link(clip);\n\n  for (i = 0, n = clip.length; i < n; ++i) {\n    clip[i].e = startInside = !startInside;\n  }\n\n  var start = subject[0],\n      points,\n      point;\n\n  while (1) {\n    // Find first unvisited intersection.\n    var current = start,\n        isSubject = true;\n    while (current.v) if ((current = current.n) === start) return;\n    points = current.z;\n    stream.lineStart();\n    do {\n      current.v = current.o.v = true;\n      if (current.e) {\n        if (isSubject) {\n          for (i = 0, n = points.length; i < n; ++i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.n.x, 1, stream);\n        }\n        current = current.n;\n      } else {\n        if (isSubject) {\n          points = current.p.z;\n          for (i = points.length - 1; i >= 0; --i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.p.x, -1, stream);\n        }\n        current = current.p;\n      }\n      current = current.o;\n      points = current.z;\n      isSubject = !isSubject;\n    } while (!current.v);\n    stream.lineEnd();\n  }\n}\n\nfunction link(array) {\n  if (!(n = array.length)) return;\n  var n,\n      i = 0,\n      a = array[0],\n      b;\n  while (++i < n) {\n    a.n = b = array[i];\n    b.p = a;\n    a = b;\n  }\n  a.n = b = array[0];\n  b.p = a;\n}\n","import adder from \"./adder\";\nimport {cartesian, cartesianCross, cartesianNormalizeInPlace} from \"./cartesian\";\nimport {asin, atan2, cos, epsilon, halfPi, pi, quarterPi, sin, tau} from \"./math\";\n\nvar sum = adder();\n\nexport default function(polygon, point) {\n  var lambda = point[0],\n      phi = point[1],\n      sinPhi = sin(phi),\n      normal = [sin(lambda), -cos(lambda), 0],\n      angle = 0,\n      winding = 0;\n\n  sum.reset();\n\n  if (sinPhi === 1) phi = halfPi + epsilon;\n  else if (sinPhi === -1) phi = -halfPi - epsilon;\n\n  for (var i = 0, n = polygon.length; i < n; ++i) {\n    if (!(m = (ring = polygon[i]).length)) continue;\n    var ring,\n        m,\n        point0 = ring[m - 1],\n        lambda0 = point0[0],\n        phi0 = point0[1] / 2 + quarterPi,\n        sinPhi0 = sin(phi0),\n        cosPhi0 = cos(phi0);\n\n    for (var j = 0; j < m; ++j, lambda0 = lambda1, sinPhi0 = sinPhi1, cosPhi0 = cosPhi1, point0 = point1) {\n      var point1 = ring[j],\n          lambda1 = point1[0],\n          phi1 = point1[1] / 2 + quarterPi,\n          sinPhi1 = sin(phi1),\n          cosPhi1 = cos(phi1),\n          delta = lambda1 - lambda0,\n          sign = delta >= 0 ? 1 : -1,\n          absDelta = sign * delta,\n          antimeridian = absDelta > pi,\n          k = sinPhi0 * sinPhi1;\n\n      sum.add(atan2(k * sign * sin(absDelta), cosPhi0 * cosPhi1 + k * cos(absDelta)));\n      angle += antimeridian ? delta + sign * tau : delta;\n\n      // Are the longitudes either side of the point’s meridian (lambda),\n      // and are the latitudes smaller than the parallel (phi)?\n      if (antimeridian ^ lambda0 >= lambda ^ lambda1 >= lambda) {\n        var arc = cartesianCross(cartesian(point0), cartesian(point1));\n        cartesianNormalizeInPlace(arc);\n        var intersection = cartesianCross(normal, arc);\n        cartesianNormalizeInPlace(intersection);\n        var phiArc = (antimeridian ^ delta >= 0 ? -1 : 1) * asin(intersection[2]);\n        if (phi > phiArc || phi === phiArc && (arc[0] || arc[1])) {\n          winding += antimeridian ^ delta >= 0 ? 1 : -1;\n        }\n      }\n    }\n  }\n\n  // First, determine whether the South pole is inside or outside:\n  //\n  // It is inside if:\n  // * the polygon winds around it in a clockwise direction.\n  // * the polygon does not (cumulatively) wind around it, but has a negative\n  //   (counter-clockwise) area.\n  //\n  // Second, count the (signed) number of times a segment crosses a lambda\n  // from the point to the South pole.  If it is zero, then the point is the\n  // same side as the South pole.\n\n  return (angle < -epsilon || angle < epsilon && sum < -epsilon) ^ (winding & 1);\n}\n","import clipBuffer from \"./buffer\";\nimport clipRejoin from \"./rejoin\";\nimport {epsilon, halfPi} from \"../math\";\nimport polygonContains from \"../polygonContains\";\nimport {merge} from \"d3-array\";\n\nexport default function(pointVisible, clipLine, interpolate, start) {\n  return function(sink) {\n    var line = clipLine(sink),\n        ringBuffer = clipBuffer(),\n        ringSink = clipLine(ringBuffer),\n        polygonStarted = false,\n        polygon,\n        segments,\n        ring;\n\n    var clip = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        clip.point = pointRing;\n        clip.lineStart = ringStart;\n        clip.lineEnd = ringEnd;\n        segments = [];\n        polygon = [];\n      },\n      polygonEnd: function() {\n        clip.point = point;\n        clip.lineStart = lineStart;\n        clip.lineEnd = lineEnd;\n        segments = merge(segments);\n        var startInside = polygonContains(polygon, start);\n        if (segments.length) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          clipRejoin(segments, compareIntersection, startInside, interpolate, sink);\n        } else if (startInside) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          interpolate(null, null, 1, sink);\n          sink.lineEnd();\n        }\n        if (polygonStarted) sink.polygonEnd(), polygonStarted = false;\n        segments = polygon = null;\n      },\n      sphere: function() {\n        sink.polygonStart();\n        sink.lineStart();\n        interpolate(null, null, 1, sink);\n        sink.lineEnd();\n        sink.polygonEnd();\n      }\n    };\n\n    function point(lambda, phi) {\n      if (pointVisible(lambda, phi)) sink.point(lambda, phi);\n    }\n\n    function pointLine(lambda, phi) {\n      line.point(lambda, phi);\n    }\n\n    function lineStart() {\n      clip.point = pointLine;\n      line.lineStart();\n    }\n\n    function lineEnd() {\n      clip.point = point;\n      line.lineEnd();\n    }\n\n    function pointRing(lambda, phi) {\n      ring.push([lambda, phi]);\n      ringSink.point(lambda, phi);\n    }\n\n    function ringStart() {\n      ringSink.lineStart();\n      ring = [];\n    }\n\n    function ringEnd() {\n      pointRing(ring[0][0], ring[0][1]);\n      ringSink.lineEnd();\n\n      var clean = ringSink.clean(),\n          ringSegments = ringBuffer.result(),\n          i, n = ringSegments.length, m,\n          segment,\n          point;\n\n      ring.pop();\n      polygon.push(ring);\n      ring = null;\n\n      if (!n) return;\n\n      // No intersections.\n      if (clean & 1) {\n        segment = ringSegments[0];\n        if ((m = segment.length - 1) > 0) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          for (i = 0; i < m; ++i) sink.point((point = segment[i])[0], point[1]);\n          sink.lineEnd();\n        }\n        return;\n      }\n\n      // Rejoin connected segments.\n      // TODO reuse ringBuffer.rejoin()?\n      if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n\n      segments.push(ringSegments.filter(validSegment));\n    }\n\n    return clip;\n  };\n}\n\nfunction validSegment(segment) {\n  return segment.length > 1;\n}\n\n// Intersections are sorted along the clip edge. For both antimeridian cutting\n// and circle clipping, the same comparison is used.\nfunction compareIntersection(a, b) {\n  return ((a = a.x)[0] < 0 ? a[1] - halfPi - epsilon : halfPi - a[1])\n       - ((b = b.x)[0] < 0 ? b[1] - halfPi - epsilon : halfPi - b[1]);\n}\n","import clip from \"./index\";\nimport {abs, atan, cos, epsilon, halfPi, pi, sin} from \"../math\";\n\nexport default clip(\n  function() { return true; },\n  clipAntimeridianLine,\n  clipAntimeridianInterpolate,\n  [-pi, -halfPi]\n);\n\n// Takes a line and cuts into visible segments. Return values: 0 - there were\n// intersections or the line was empty; 1 - no intersections; 2 - there were\n// intersections, and the first and last segments should be rejoined.\nfunction clipAntimeridianLine(stream) {\n  var lambda0 = NaN,\n      phi0 = NaN,\n      sign0 = NaN,\n      clean; // no intersections\n\n  return {\n    lineStart: function() {\n      stream.lineStart();\n      clean = 1;\n    },\n    point: function(lambda1, phi1) {\n      var sign1 = lambda1 > 0 ? pi : -pi,\n          delta = abs(lambda1 - lambda0);\n      if (abs(delta - pi) < epsilon) { // line crosses a pole\n        stream.point(lambda0, phi0 = (phi0 + phi1) / 2 > 0 ? halfPi : -halfPi);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        stream.point(lambda1, phi0);\n        clean = 0;\n      } else if (sign0 !== sign1 && delta >= pi) { // line crosses antimeridian\n        if (abs(lambda0 - sign0) < epsilon) lambda0 -= sign0 * epsilon; // handle degeneracies\n        if (abs(lambda1 - sign1) < epsilon) lambda1 -= sign1 * epsilon;\n        phi0 = clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        clean = 0;\n      }\n      stream.point(lambda0 = lambda1, phi0 = phi1);\n      sign0 = sign1;\n    },\n    lineEnd: function() {\n      stream.lineEnd();\n      lambda0 = phi0 = NaN;\n    },\n    clean: function() {\n      return 2 - clean; // if intersections, rejoin first and last segments\n    }\n  };\n}\n\nfunction clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1) {\n  var cosPhi0,\n      cosPhi1,\n      sinLambda0Lambda1 = sin(lambda0 - lambda1);\n  return abs(sinLambda0Lambda1) > epsilon\n      ? atan((sin(phi0) * (cosPhi1 = cos(phi1)) * sin(lambda1)\n          - sin(phi1) * (cosPhi0 = cos(phi0)) * sin(lambda0))\n          / (cosPhi0 * cosPhi1 * sinLambda0Lambda1))\n      : (phi0 + phi1) / 2;\n}\n\nfunction clipAntimeridianInterpolate(from, to, direction, stream) {\n  var phi;\n  if (from == null) {\n    phi = direction * halfPi;\n    stream.point(-pi, phi);\n    stream.point(0, phi);\n    stream.point(pi, phi);\n    stream.point(pi, 0);\n    stream.point(pi, -phi);\n    stream.point(0, -phi);\n    stream.point(-pi, -phi);\n    stream.point(-pi, 0);\n    stream.point(-pi, phi);\n  } else if (abs(from[0] - to[0]) > epsilon) {\n    var lambda = from[0] < to[0] ? pi : -pi;\n    phi = direction * lambda / 2;\n    stream.point(-lambda, phi);\n    stream.point(0, phi);\n    stream.point(lambda, phi);\n  } else {\n    stream.point(to[0], to[1]);\n  }\n}\n","import {cartesian, cartesianAddInPlace, cartesianCross, cartesianDot, cartesianScale, spherical} from \"../cartesian\";\nimport {circleStream} from \"../circle\";\nimport {abs, cos, epsilon, pi, radians, sqrt} from \"../math\";\nimport pointEqual from \"../pointEqual\";\nimport clip from \"./index\";\n\nexport default function(radius) {\n  var cr = cos(radius),\n      delta = 6 * radians,\n      smallRadius = cr > 0,\n      notHemisphere = abs(cr) > epsilon; // TODO optimise for this common case\n\n  function interpolate(from, to, direction, stream) {\n    circleStream(stream, radius, delta, direction, from, to);\n  }\n\n  function visible(lambda, phi) {\n    return cos(lambda) * cos(phi) > cr;\n  }\n\n  // Takes a line and cuts into visible segments. Return values used for polygon\n  // clipping: 0 - there were intersections or the line was empty; 1 - no\n  // intersections 2 - there were intersections, and the first and last segments\n  // should be rejoined.\n  function clipLine(stream) {\n    var point0, // previous point\n        c0, // code for previous point\n        v0, // visibility of previous point\n        v00, // visibility of first point\n        clean; // no intersections\n    return {\n      lineStart: function() {\n        v00 = v0 = false;\n        clean = 1;\n      },\n      point: function(lambda, phi) {\n        var point1 = [lambda, phi],\n            point2,\n            v = visible(lambda, phi),\n            c = smallRadius\n              ? v ? 0 : code(lambda, phi)\n              : v ? code(lambda + (lambda < 0 ? pi : -pi), phi) : 0;\n        if (!point0 && (v00 = v0 = v)) stream.lineStart();\n        // Handle degeneracies.\n        // TODO ignore if not clipping polygons.\n        if (v !== v0) {\n          point2 = intersect(point0, point1);\n          if (!point2 || pointEqual(point0, point2) || pointEqual(point1, point2)) {\n            point1[0] += epsilon;\n            point1[1] += epsilon;\n            v = visible(point1[0], point1[1]);\n          }\n        }\n        if (v !== v0) {\n          clean = 0;\n          if (v) {\n            // outside going in\n            stream.lineStart();\n            point2 = intersect(point1, point0);\n            stream.point(point2[0], point2[1]);\n          } else {\n            // inside going out\n            point2 = intersect(point0, point1);\n            stream.point(point2[0], point2[1]);\n            stream.lineEnd();\n          }\n          point0 = point2;\n        } else if (notHemisphere && point0 && smallRadius ^ v) {\n          var t;\n          // If the codes for two points are different, or are both zero,\n          // and there this segment intersects with the small circle.\n          if (!(c & c0) && (t = intersect(point1, point0, true))) {\n            clean = 0;\n            if (smallRadius) {\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n            } else {\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n            }\n          }\n        }\n        if (v && (!point0 || !pointEqual(point0, point1))) {\n          stream.point(point1[0], point1[1]);\n        }\n        point0 = point1, v0 = v, c0 = c;\n      },\n      lineEnd: function() {\n        if (v0) stream.lineEnd();\n        point0 = null;\n      },\n      // Rejoin first and last segments if there were intersections and the first\n      // and last points were visible.\n      clean: function() {\n        return clean | ((v00 && v0) << 1);\n      }\n    };\n  }\n\n  // Intersects the great circle between a and b with the clip circle.\n  function intersect(a, b, two) {\n    var pa = cartesian(a),\n        pb = cartesian(b);\n\n    // We have two planes, n1.p = d1 and n2.p = d2.\n    // Find intersection line p(t) = c1 n1 + c2 n2 + t (n1 ⨯ n2).\n    var n1 = [1, 0, 0], // normal\n        n2 = cartesianCross(pa, pb),\n        n2n2 = cartesianDot(n2, n2),\n        n1n2 = n2[0], // cartesianDot(n1, n2),\n        determinant = n2n2 - n1n2 * n1n2;\n\n    // Two polar points.\n    if (!determinant) return !two && a;\n\n    var c1 =  cr * n2n2 / determinant,\n        c2 = -cr * n1n2 / determinant,\n        n1xn2 = cartesianCross(n1, n2),\n        A = cartesianScale(n1, c1),\n        B = cartesianScale(n2, c2);\n    cartesianAddInPlace(A, B);\n\n    // Solve |p(t)|^2 = 1.\n    var u = n1xn2,\n        w = cartesianDot(A, u),\n        uu = cartesianDot(u, u),\n        t2 = w * w - uu * (cartesianDot(A, A) - 1);\n\n    if (t2 < 0) return;\n\n    var t = sqrt(t2),\n        q = cartesianScale(u, (-w - t) / uu);\n    cartesianAddInPlace(q, A);\n    q = spherical(q);\n\n    if (!two) return q;\n\n    // Two intersection points.\n    var lambda0 = a[0],\n        lambda1 = b[0],\n        phi0 = a[1],\n        phi1 = b[1],\n        z;\n\n    if (lambda1 < lambda0) z = lambda0, lambda0 = lambda1, lambda1 = z;\n\n    var delta = lambda1 - lambda0,\n        polar = abs(delta - pi) < epsilon,\n        meridian = polar || delta < epsilon;\n\n    if (!polar && phi1 < phi0) z = phi0, phi0 = phi1, phi1 = z;\n\n    // Check that the first point is between a and b.\n    if (meridian\n        ? polar\n          ? phi0 + phi1 > 0 ^ q[1] < (abs(q[0] - lambda0) < epsilon ? phi0 : phi1)\n          : phi0 <= q[1] && q[1] <= phi1\n        : delta > pi ^ (lambda0 <= q[0] && q[0] <= lambda1)) {\n      var q1 = cartesianScale(u, (-w + t) / uu);\n      cartesianAddInPlace(q1, A);\n      return [q, spherical(q1)];\n    }\n  }\n\n  // Generates a 4-bit vector representing the location of a point relative to\n  // the small circle's bounding box.\n  function code(lambda, phi) {\n    var r = smallRadius ? radius : pi - radius,\n        code = 0;\n    if (lambda < -r) code |= 1; // left\n    else if (lambda > r) code |= 2; // right\n    if (phi < -r) code |= 4; // below\n    else if (phi > r) code |= 8; // above\n    return code;\n  }\n\n  return clip(visible, clipLine, interpolate, smallRadius ? [0, -radius] : [-pi, radius - pi]);\n}\n","export default function(a, b, x0, y0, x1, y1) {\n  var ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (t0 > 0) a[0] = ax + t0 * dx, a[1] = ay + t0 * dy;\n  if (t1 < 1) b[0] = ax + t1 * dx, b[1] = ay + t1 * dy;\n  return true;\n}\n","import {abs, epsilon} from \"../math\";\nimport clipBuffer from \"./buffer\";\nimport clipLine from \"./line\";\nimport clipRejoin from \"./rejoin\";\nimport {merge} from \"d3-array\";\n\nvar clipMax = 1e9, clipMin = -clipMax;\n\n// TODO Use d3-polygon’s polygonContains here for the ring check?\n// TODO Eliminate duplicate buffering in clipBuffer and polygon.push?\n\nexport default function clipRectangle(x0, y0, x1, y1) {\n\n  function visible(x, y) {\n    return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n  }\n\n  function interpolate(from, to, direction, stream) {\n    var a = 0, a1 = 0;\n    if (from == null\n        || (a = corner(from, direction)) !== (a1 = corner(to, direction))\n        || comparePoint(from, to) < 0 ^ direction > 0) {\n      do stream.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n      while ((a = (a + direction + 4) % 4) !== a1);\n    } else {\n      stream.point(to[0], to[1]);\n    }\n  }\n\n  function corner(p, direction) {\n    return abs(p[0] - x0) < epsilon ? direction > 0 ? 0 : 3\n        : abs(p[0] - x1) < epsilon ? direction > 0 ? 2 : 1\n        : abs(p[1] - y0) < epsilon ? direction > 0 ? 1 : 0\n        : direction > 0 ? 3 : 2; // abs(p[1] - y1) < epsilon\n  }\n\n  function compareIntersection(a, b) {\n    return comparePoint(a.x, b.x);\n  }\n\n  function comparePoint(a, b) {\n    var ca = corner(a, 1),\n        cb = corner(b, 1);\n    return ca !== cb ? ca - cb\n        : ca === 0 ? b[1] - a[1]\n        : ca === 1 ? a[0] - b[0]\n        : ca === 2 ? a[1] - b[1]\n        : b[0] - a[0];\n  }\n\n  return function(stream) {\n    var activeStream = stream,\n        bufferStream = clipBuffer(),\n        segments,\n        polygon,\n        ring,\n        x__, y__, v__, // first point\n        x_, y_, v_, // previous point\n        first,\n        clean;\n\n    var clipStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: polygonStart,\n      polygonEnd: polygonEnd\n    };\n\n    function point(x, y) {\n      if (visible(x, y)) activeStream.point(x, y);\n    }\n\n    function polygonInside() {\n      var winding = 0;\n\n      for (var i = 0, n = polygon.length; i < n; ++i) {\n        for (var ring = polygon[i], j = 1, m = ring.length, point = ring[0], a0, a1, b0 = point[0], b1 = point[1]; j < m; ++j) {\n          a0 = b0, a1 = b1, point = ring[j], b0 = point[0], b1 = point[1];\n          if (a1 <= y1) { if (b1 > y1 && (b0 - a0) * (y1 - a1) > (b1 - a1) * (x0 - a0)) ++winding; }\n          else { if (b1 <= y1 && (b0 - a0) * (y1 - a1) < (b1 - a1) * (x0 - a0)) --winding; }\n        }\n      }\n\n      return winding;\n    }\n\n    // Buffer geometry within a polygon and then clip it en masse.\n    function polygonStart() {\n      activeStream = bufferStream, segments = [], polygon = [], clean = true;\n    }\n\n    function polygonEnd() {\n      var startInside = polygonInside(),\n          cleanInside = clean && startInside,\n          visible = (segments = merge(segments)).length;\n      if (cleanInside || visible) {\n        stream.polygonStart();\n        if (cleanInside) {\n          stream.lineStart();\n          interpolate(null, null, 1, stream);\n          stream.lineEnd();\n        }\n        if (visible) {\n          clipRejoin(segments, compareIntersection, startInside, interpolate, stream);\n        }\n        stream.polygonEnd();\n      }\n      activeStream = stream, segments = polygon = ring = null;\n    }\n\n    function lineStart() {\n      clipStream.point = linePoint;\n      if (polygon) polygon.push(ring = []);\n      first = true;\n      v_ = false;\n      x_ = y_ = NaN;\n    }\n\n    // TODO rather than special-case polygons, simply handle them separately.\n    // Ideally, coincident intersection points should be jittered to avoid\n    // clipping issues.\n    function lineEnd() {\n      if (segments) {\n        linePoint(x__, y__);\n        if (v__ && v_) bufferStream.rejoin();\n        segments.push(bufferStream.result());\n      }\n      clipStream.point = point;\n      if (v_) activeStream.lineEnd();\n    }\n\n    function linePoint(x, y) {\n      var v = visible(x, y);\n      if (polygon) ring.push([x, y]);\n      if (first) {\n        x__ = x, y__ = y, v__ = v;\n        first = false;\n        if (v) {\n          activeStream.lineStart();\n          activeStream.point(x, y);\n        }\n      } else {\n        if (v && v_) activeStream.point(x, y);\n        else {\n          var a = [x_ = Math.max(clipMin, Math.min(clipMax, x_)), y_ = Math.max(clipMin, Math.min(clipMax, y_))],\n              b = [x = Math.max(clipMin, Math.min(clipMax, x)), y = Math.max(clipMin, Math.min(clipMax, y))];\n          if (clipLine(a, b, x0, y0, x1, y1)) {\n            if (!v_) {\n              activeStream.lineStart();\n              activeStream.point(a[0], a[1]);\n            }\n            activeStream.point(b[0], b[1]);\n            if (!v) activeStream.lineEnd();\n            clean = false;\n          } else if (v) {\n            activeStream.lineStart();\n            activeStream.point(x, y);\n            clean = false;\n          }\n        }\n      }\n      x_ = x, y_ = y, v_ = v;\n    }\n\n    return clipStream;\n  };\n}\n","import clipRectangle from \"./rectangle\";\n\nexport default function() {\n  var x0 = 0,\n      y0 = 0,\n      x1 = 960,\n      y1 = 500,\n      cache,\n      cacheStream,\n      clip;\n\n  return clip = {\n    stream: function(stream) {\n      return cache && cacheStream === stream ? cache : cache = clipRectangle(x0, y0, x1, y1)(cacheStream = stream);\n    },\n    extent: function(_) {\n      return arguments.length ? (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1], cache = cacheStream = null, clip) : [[x0, y0], [x1, y1]];\n    }\n  };\n}\n","import adder from \"./adder\";\nimport {abs, atan2, cos, radians, sin, sqrt} from \"./math\";\nimport noop from \"./noop\";\nimport stream from \"./stream\";\n\nvar lengthSum = adder(),\n    lambda0,\n    sinPhi0,\n    cosPhi0;\n\nvar lengthStream = {\n  sphere: noop,\n  point: noop,\n  lineStart: lengthLineStart,\n  lineEnd: noop,\n  polygonStart: noop,\n  polygonEnd: noop\n};\n\nfunction lengthLineStart() {\n  lengthStream.point = lengthPointFirst;\n  lengthStream.lineEnd = lengthLineEnd;\n}\n\nfunction lengthLineEnd() {\n  lengthStream.point = lengthStream.lineEnd = noop;\n}\n\nfunction lengthPointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  lambda0 = lambda, sinPhi0 = sin(phi), cosPhi0 = cos(phi);\n  lengthStream.point = lengthPoint;\n}\n\nfunction lengthPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var sinPhi = sin(phi),\n      cosPhi = cos(phi),\n      delta = abs(lambda - lambda0),\n      cosDelta = cos(delta),\n      sinDelta = sin(delta),\n      x = cosPhi * sinDelta,\n      y = cosPhi0 * sinPhi - sinPhi0 * cosPhi * cosDelta,\n      z = sinPhi0 * sinPhi + cosPhi0 * cosPhi * cosDelta;\n  lengthSum.add(atan2(sqrt(x * x + y * y), z));\n  lambda0 = lambda, sinPhi0 = sinPhi, cosPhi0 = cosPhi;\n}\n\nexport default function(object) {\n  lengthSum.reset();\n  stream(object, lengthStream);\n  return +lengthSum;\n}\n","import length from \"./length\";\n\nvar coordinates = [null, null],\n    object = {type: \"LineString\", coordinates: coordinates};\n\nexport default function(a, b) {\n  coordinates[0] = a;\n  coordinates[1] = b;\n  return length(object);\n}\n","import {default as polygonContains} from \"./polygonContains\";\nimport {default as distance} from \"./distance\";\nimport {epsilon, radians} from \"./math\";\n\nvar containsObjectType = {\n  Feature: function(object, point) {\n    return containsGeometry(object.geometry, point);\n  },\n  FeatureCollection: function(object, point) {\n    var features = object.features, i = -1, n = features.length;\n    while (++i < n) if (containsGeometry(features[i].geometry, point)) return true;\n    return false;\n  }\n};\n\nvar containsGeometryType = {\n  Sphere: function() {\n    return true;\n  },\n  Point: function(object, point) {\n    return containsPoint(object.coordinates, point);\n  },\n  MultiPoint: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsPoint(coordinates[i], point)) return true;\n    return false;\n  },\n  LineString: function(object, point) {\n    return containsLine(object.coordinates, point);\n  },\n  MultiLineString: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsLine(coordinates[i], point)) return true;\n    return false;\n  },\n  Polygon: function(object, point) {\n    return containsPolygon(object.coordinates, point);\n  },\n  MultiPolygon: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsPolygon(coordinates[i], point)) return true;\n    return false;\n  },\n  GeometryCollection: function(object, point) {\n    var geometries = object.geometries, i = -1, n = geometries.length;\n    while (++i < n) if (containsGeometry(geometries[i], point)) return true;\n    return false;\n  }\n};\n\nfunction containsGeometry(geometry, point) {\n  return geometry && containsGeometryType.hasOwnProperty(geometry.type)\n      ? containsGeometryType[geometry.type](geometry, point)\n      : false;\n}\n\nfunction containsPoint(coordinates, point) {\n  return distance(coordinates, point) === 0;\n}\n\nfunction containsLine(coordinates, point) {\n  var ab = distance(coordinates[0], coordinates[1]),\n      ao = distance(coordinates[0], point),\n      ob = distance(point, coordinates[1]);\n  return ao + ob <= ab + epsilon;\n}\n\nfunction containsPolygon(coordinates, point) {\n  return !!polygonContains(coordinates.map(ringRadians), pointRadians(point));\n}\n\nfunction ringRadians(ring) {\n  return ring = ring.map(pointRadians), ring.pop(), ring;\n}\n\nfunction pointRadians(point) {\n  return [point[0] * radians, point[1] * radians];\n}\n\nexport default function(object, point) {\n  return (object && containsObjectType.hasOwnProperty(object.type)\n      ? containsObjectType[object.type]\n      : containsGeometry)(object, point);\n}\n","import {range} from \"d3-array\";\nimport {abs, ceil, epsilon} from \"./math\";\n\nfunction graticuleX(y0, y1, dy) {\n  var y = range(y0, y1 - epsilon, dy).concat(y1);\n  return function(x) { return y.map(function(y) { return [x, y]; }); };\n}\n\nfunction graticuleY(x0, x1, dx) {\n  var x = range(x0, x1 - epsilon, dx).concat(x1);\n  return function(y) { return x.map(function(x) { return [x, y]; }); };\n}\n\nexport default function graticule() {\n  var x1, x0, X1, X0,\n      y1, y0, Y1, Y0,\n      dx = 10, dy = dx, DX = 90, DY = 360,\n      x, y, X, Y,\n      precision = 2.5;\n\n  function graticule() {\n    return {type: \"MultiLineString\", coordinates: lines()};\n  }\n\n  function lines() {\n    return range(ceil(X0 / DX) * DX, X1, DX).map(X)\n        .concat(range(ceil(Y0 / DY) * DY, Y1, DY).map(Y))\n        .concat(range(ceil(x0 / dx) * dx, x1, dx).filter(function(x) { return abs(x % DX) > epsilon; }).map(x))\n        .concat(range(ceil(y0 / dy) * dy, y1, dy).filter(function(y) { return abs(y % DY) > epsilon; }).map(y));\n  }\n\n  graticule.lines = function() {\n    return lines().map(function(coordinates) { return {type: \"LineString\", coordinates: coordinates}; });\n  };\n\n  graticule.outline = function() {\n    return {\n      type: \"Polygon\",\n      coordinates: [\n        X(X0).concat(\n        Y(Y1).slice(1),\n        X(X1).reverse().slice(1),\n        Y(Y0).reverse().slice(1))\n      ]\n    };\n  };\n\n  graticule.extent = function(_) {\n    if (!arguments.length) return graticule.extentMinor();\n    return graticule.extentMajor(_).extentMinor(_);\n  };\n\n  graticule.extentMajor = function(_) {\n    if (!arguments.length) return [[X0, Y0], [X1, Y1]];\n    X0 = +_[0][0], X1 = +_[1][0];\n    Y0 = +_[0][1], Y1 = +_[1][1];\n    if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n    if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.extentMinor = function(_) {\n    if (!arguments.length) return [[x0, y0], [x1, y1]];\n    x0 = +_[0][0], x1 = +_[1][0];\n    y0 = +_[0][1], y1 = +_[1][1];\n    if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n    if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.step = function(_) {\n    if (!arguments.length) return graticule.stepMinor();\n    return graticule.stepMajor(_).stepMinor(_);\n  };\n\n  graticule.stepMajor = function(_) {\n    if (!arguments.length) return [DX, DY];\n    DX = +_[0], DY = +_[1];\n    return graticule;\n  };\n\n  graticule.stepMinor = function(_) {\n    if (!arguments.length) return [dx, dy];\n    dx = +_[0], dy = +_[1];\n    return graticule;\n  };\n\n  graticule.precision = function(_) {\n    if (!arguments.length) return precision;\n    precision = +_;\n    x = graticuleX(y0, y1, 90);\n    y = graticuleY(x0, x1, precision);\n    X = graticuleX(Y0, Y1, 90);\n    Y = graticuleY(X0, X1, precision);\n    return graticule;\n  };\n\n  return graticule\n      .extentMajor([[-180, -90 + epsilon], [180, 90 - epsilon]])\n      .extentMinor([[-180, -80 - epsilon], [180, 80 + epsilon]]);\n}\n\nexport function graticule10() {\n  return graticule()();\n}\n","import {asin, atan2, cos, degrees, haversin, radians, sin, sqrt} from \"./math\";\n\nexport default function(a, b) {\n  var x0 = a[0] * radians,\n      y0 = a[1] * radians,\n      x1 = b[0] * radians,\n      y1 = b[1] * radians,\n      cy0 = cos(y0),\n      sy0 = sin(y0),\n      cy1 = cos(y1),\n      sy1 = sin(y1),\n      kx0 = cy0 * cos(x0),\n      ky0 = cy0 * sin(x0),\n      kx1 = cy1 * cos(x1),\n      ky1 = cy1 * sin(x1),\n      d = 2 * asin(sqrt(haversin(y1 - y0) + cy0 * cy1 * haversin(x1 - x0))),\n      k = sin(d);\n\n  var interpolate = d ? function(t) {\n    var B = sin(t *= d) / k,\n        A = sin(d - t) / k,\n        x = A * kx0 + B * kx1,\n        y = A * ky0 + B * ky1,\n        z = A * sy0 + B * sy1;\n    return [\n      atan2(y, x) * degrees,\n      atan2(z, sqrt(x * x + y * y)) * degrees\n    ];\n  } : function() {\n    return [x0 * degrees, y0 * degrees];\n  };\n\n  interpolate.distance = d;\n\n  return interpolate;\n}\n","import adder from \"../adder\";\nimport {abs} from \"../math\";\nimport noop from \"../noop\";\n\nvar areaSum = adder(),\n    areaRingSum = adder(),\n    x00,\n    y00,\n    x0,\n    y0;\n\nvar areaStream = {\n  point: noop,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: function() {\n    areaStream.lineStart = areaRingStart;\n    areaStream.lineEnd = areaRingEnd;\n  },\n  polygonEnd: function() {\n    areaStream.lineStart = areaStream.lineEnd = areaStream.point = noop;\n    areaSum.add(abs(areaRingSum));\n    areaRingSum.reset();\n  },\n  result: function() {\n    var area = areaSum / 2;\n    areaSum.reset();\n    return area;\n  }\n};\n\nfunction areaRingStart() {\n  areaStream.point = areaPointFirst;\n}\n\nfunction areaPointFirst(x, y) {\n  areaStream.point = areaPoint;\n  x00 = x0 = x, y00 = y0 = y;\n}\n\nfunction areaPoint(x, y) {\n  areaRingSum.add(y0 * x - x0 * y);\n  x0 = x, y0 = y;\n}\n\nfunction areaRingEnd() {\n  areaPoint(x00, y00);\n}\n\nexport default areaStream;\n","export default function(x) {\n  return x;\n}\n","import noop from \"../noop\";\n\nvar x0 = Infinity,\n    y0 = x0,\n    x1 = -x0,\n    y1 = x1;\n\nvar boundsStream = {\n  point: boundsPoint,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: noop,\n  polygonEnd: noop,\n  result: function() {\n    var bounds = [[x0, y0], [x1, y1]];\n    x1 = y1 = -(y0 = x0 = Infinity);\n    return bounds;\n  }\n};\n\nfunction boundsPoint(x, y) {\n  if (x < x0) x0 = x;\n  if (x > x1) x1 = x;\n  if (y < y0) y0 = y;\n  if (y > y1) y1 = y;\n}\n\nexport default boundsStream;\n","import {sqrt} from \"../math\";\n\n// TODO Enforce positive area for exterior, negative area for interior?\n\nvar X0 = 0,\n    Y0 = 0,\n    Z0 = 0,\n    X1 = 0,\n    Y1 = 0,\n    Z1 = 0,\n    X2 = 0,\n    Y2 = 0,\n    Z2 = 0,\n    x00,\n    y00,\n    x0,\n    y0;\n\nvar centroidStream = {\n  point: centroidPoint,\n  lineStart: centroidLineStart,\n  lineEnd: centroidLineEnd,\n  polygonStart: function() {\n    centroidStream.lineStart = centroidRingStart;\n    centroidStream.lineEnd = centroidRingEnd;\n  },\n  polygonEnd: function() {\n    centroidStream.point = centroidPoint;\n    centroidStream.lineStart = centroidLineStart;\n    centroidStream.lineEnd = centroidLineEnd;\n  },\n  result: function() {\n    var centroid = Z2 ? [X2 / Z2, Y2 / Z2]\n        : Z1 ? [X1 / Z1, Y1 / Z1]\n        : Z0 ? [X0 / Z0, Y0 / Z0]\n        : [NaN, NaN];\n    X0 = Y0 = Z0 =\n    X1 = Y1 = Z1 =\n    X2 = Y2 = Z2 = 0;\n    return centroid;\n  }\n};\n\nfunction centroidPoint(x, y) {\n  X0 += x;\n  Y0 += y;\n  ++Z0;\n}\n\nfunction centroidLineStart() {\n  centroidStream.point = centroidPointFirstLine;\n}\n\nfunction centroidPointFirstLine(x, y) {\n  centroidStream.point = centroidPointLine;\n  centroidPoint(x0 = x, y0 = y);\n}\n\nfunction centroidPointLine(x, y) {\n  var dx = x - x0, dy = y - y0, z = sqrt(dx * dx + dy * dy);\n  X1 += z * (x0 + x) / 2;\n  Y1 += z * (y0 + y) / 2;\n  Z1 += z;\n  centroidPoint(x0 = x, y0 = y);\n}\n\nfunction centroidLineEnd() {\n  centroidStream.point = centroidPoint;\n}\n\nfunction centroidRingStart() {\n  centroidStream.point = centroidPointFirstRing;\n}\n\nfunction centroidRingEnd() {\n  centroidPointRing(x00, y00);\n}\n\nfunction centroidPointFirstRing(x, y) {\n  centroidStream.point = centroidPointRing;\n  centroidPoint(x00 = x0 = x, y00 = y0 = y);\n}\n\nfunction centroidPointRing(x, y) {\n  var dx = x - x0,\n      dy = y - y0,\n      z = sqrt(dx * dx + dy * dy);\n\n  X1 += z * (x0 + x) / 2;\n  Y1 += z * (y0 + y) / 2;\n  Z1 += z;\n\n  z = y0 * x - x0 * y;\n  X2 += z * (x0 + x);\n  Y2 += z * (y0 + y);\n  Z2 += z * 3;\n  centroidPoint(x0 = x, y0 = y);\n}\n\nexport default centroidStream;\n","import {tau} from \"../math\";\nimport noop from \"../noop\";\n\nexport default function PathContext(context) {\n  this._context = context;\n}\n\nPathContext.prototype = {\n  _radius: 4.5,\n  pointRadius: function(_) {\n    return this._radius = _, this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._context.closePath();\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._context.moveTo(x, y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._context.lineTo(x, y);\n        break;\n      }\n      default: {\n        this._context.moveTo(x + this._radius, y);\n        this._context.arc(x, y, this._radius, 0, tau);\n        break;\n      }\n    }\n  },\n  result: noop\n};\n","import adder from \"../adder\";\nimport {sqrt} from \"../math\";\nimport noop from \"../noop\";\n\nvar lengthSum = adder(),\n    lengthRing,\n    x00,\n    y00,\n    x0,\n    y0;\n\nvar lengthStream = {\n  point: noop,\n  lineStart: function() {\n    lengthStream.point = lengthPointFirst;\n  },\n  lineEnd: function() {\n    if (lengthRing) lengthPoint(x00, y00);\n    lengthStream.point = noop;\n  },\n  polygonStart: function() {\n    lengthRing = true;\n  },\n  polygonEnd: function() {\n    lengthRing = null;\n  },\n  result: function() {\n    var length = +lengthSum;\n    lengthSum.reset();\n    return length;\n  }\n};\n\nfunction lengthPointFirst(x, y) {\n  lengthStream.point = lengthPoint;\n  x00 = x0 = x, y00 = y0 = y;\n}\n\nfunction lengthPoint(x, y) {\n  x0 -= x, y0 -= y;\n  lengthSum.add(sqrt(x0 * x0 + y0 * y0));\n  x0 = x, y0 = y;\n}\n\nexport default lengthStream;\n","export default function PathString() {\n  this._string = [];\n}\n\nPathString.prototype = {\n  _radius: 4.5,\n  _circle: circle(4.5),\n  pointRadius: function(_) {\n    if ((_ = +_) !== this._radius) this._radius = _, this._circle = null;\n    return this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._string.push(\"Z\");\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._string.push(\"M\", x, \",\", y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._string.push(\"L\", x, \",\", y);\n        break;\n      }\n      default: {\n        if (this._circle == null) this._circle = circle(this._radius);\n        this._string.push(\"M\", x, \",\", y, this._circle);\n        break;\n      }\n    }\n  },\n  result: function() {\n    if (this._string.length) {\n      var result = this._string.join(\"\");\n      this._string = [];\n      return result;\n    } else {\n      return null;\n    }\n  }\n};\n\nfunction circle(radius) {\n  return \"m0,\" + radius\n      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius\n      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius\n      + \"z\";\n}\n","import identity from \"../identity\";\nimport stream from \"../stream\";\nimport pathArea from \"./area\";\nimport pathBounds from \"./bounds\";\nimport pathCentroid from \"./centroid\";\nimport PathContext from \"./context\";\nimport pathMeasure from \"./measure\";\nimport PathString from \"./string\";\n\nexport default function(projection, context) {\n  var pointRadius = 4.5,\n      projectionStream,\n      contextStream;\n\n  function path(object) {\n    if (object) {\n      if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n      stream(object, projectionStream(contextStream));\n    }\n    return contextStream.result();\n  }\n\n  path.area = function(object) {\n    stream(object, projectionStream(pathArea));\n    return pathArea.result();\n  };\n\n  path.measure = function(object) {\n    stream(object, projectionStream(pathMeasure));\n    return pathMeasure.result();\n  };\n\n  path.bounds = function(object) {\n    stream(object, projectionStream(pathBounds));\n    return pathBounds.result();\n  };\n\n  path.centroid = function(object) {\n    stream(object, projectionStream(pathCentroid));\n    return pathCentroid.result();\n  };\n\n  path.projection = function(_) {\n    return arguments.length ? (projectionStream = _ == null ? (projection = null, identity) : (projection = _).stream, path) : projection;\n  };\n\n  path.context = function(_) {\n    if (!arguments.length) return context;\n    contextStream = _ == null ? (context = null, new PathString) : new PathContext(context = _);\n    if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n    return path;\n  };\n\n  path.pointRadius = function(_) {\n    if (!arguments.length) return pointRadius;\n    pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n    return path;\n  };\n\n  return path.projection(projection).context(context);\n}\n","export default function(methods) {\n  return {\n    stream: transformer(methods)\n  };\n}\n\nexport function transformer(methods) {\n  return function(stream) {\n    var s = new TransformStream;\n    for (var key in methods) s[key] = methods[key];\n    s.stream = stream;\n    return s;\n  };\n}\n\nfunction TransformStream() {}\n\nTransformStream.prototype = {\n  constructor: TransformStream,\n  point: function(x, y) { this.stream.point(x, y); },\n  sphere: function() { this.stream.sphere(); },\n  lineStart: function() { this.stream.lineStart(); },\n  lineEnd: function() { this.stream.lineEnd(); },\n  polygonStart: function() { this.stream.polygonStart(); },\n  polygonEnd: function() { this.stream.polygonEnd(); }\n};\n","import {default as geoStream} from \"../stream\";\nimport boundsStream from \"../path/bounds\";\n\nfunction fit(projection, fitBounds, object) {\n  var clip = projection.clipExtent && projection.clipExtent();\n  projection.scale(150).translate([0, 0]);\n  if (clip != null) projection.clipExtent(null);\n  geoStream(object, projection.stream(boundsStream));\n  fitBounds(boundsStream.result());\n  if (clip != null) projection.clipExtent(clip);\n  return projection;\n}\n\nexport function fitExtent(projection, extent, object) {\n  return fit(projection, function(b) {\n    var w = extent[1][0] - extent[0][0],\n        h = extent[1][1] - extent[0][1],\n        k = Math.min(w / (b[1][0] - b[0][0]), h / (b[1][1] - b[0][1])),\n        x = +extent[0][0] + (w - k * (b[1][0] + b[0][0])) / 2,\n        y = +extent[0][1] + (h - k * (b[1][1] + b[0][1])) / 2;\n    projection.scale(150 * k).translate([x, y]);\n  }, object);\n}\n\nexport function fitSize(projection, size, object) {\n  return fitExtent(projection, [[0, 0], size], object);\n}\n\nexport function fitWidth(projection, width, object) {\n  return fit(projection, function(b) {\n    var w = +width,\n        k = w / (b[1][0] - b[0][0]),\n        x = (w - k * (b[1][0] + b[0][0])) / 2,\n        y = -k * b[0][1];\n    projection.scale(150 * k).translate([x, y]);\n  }, object);\n}\n\nexport function fitHeight(projection, height, object) {\n  return fit(projection, function(b) {\n    var h = +height,\n        k = h / (b[1][1] - b[0][1]),\n        x = -k * b[0][0],\n        y = (h - k * (b[1][1] + b[0][1])) / 2;\n    projection.scale(150 * k).translate([x, y]);\n  }, object);\n}\n","import {cartesian} from \"../cartesian\";\nimport {abs, asin, atan2, cos, epsilon, radians, sqrt} from \"../math\";\nimport {transformer} from \"../transform\";\n\nvar maxDepth = 16, // maximum depth of subdivision\n    cosMinDistance = cos(30 * radians); // cos(minimum angular distance)\n\nexport default function(project, delta2) {\n  return +delta2 ? resample(project, delta2) : resampleNone(project);\n}\n\nfunction resampleNone(project) {\n  return transformer({\n    point: function(x, y) {\n      x = project(x, y);\n      this.stream.point(x[0], x[1]);\n    }\n  });\n}\n\nfunction resample(project, delta2) {\n\n  function resampleLineTo(x0, y0, lambda0, a0, b0, c0, x1, y1, lambda1, a1, b1, c1, depth, stream) {\n    var dx = x1 - x0,\n        dy = y1 - y0,\n        d2 = dx * dx + dy * dy;\n    if (d2 > 4 * delta2 && depth--) {\n      var a = a0 + a1,\n          b = b0 + b1,\n          c = c0 + c1,\n          m = sqrt(a * a + b * b + c * c),\n          phi2 = asin(c /= m),\n          lambda2 = abs(abs(c) - 1) < epsilon || abs(lambda0 - lambda1) < epsilon ? (lambda0 + lambda1) / 2 : atan2(b, a),\n          p = project(lambda2, phi2),\n          x2 = p[0],\n          y2 = p[1],\n          dx2 = x2 - x0,\n          dy2 = y2 - y0,\n          dz = dy * dx2 - dx * dy2;\n      if (dz * dz / d2 > delta2 // perpendicular projected distance\n          || abs((dx * dx2 + dy * dy2) / d2 - 0.5) > 0.3 // midpoint close to an end\n          || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) { // angular distance\n        resampleLineTo(x0, y0, lambda0, a0, b0, c0, x2, y2, lambda2, a /= m, b /= m, c, depth, stream);\n        stream.point(x2, y2);\n        resampleLineTo(x2, y2, lambda2, a, b, c, x1, y1, lambda1, a1, b1, c1, depth, stream);\n      }\n    }\n  }\n  return function(stream) {\n    var lambda00, x00, y00, a00, b00, c00, // first point\n        lambda0, x0, y0, a0, b0, c0; // previous point\n\n    var resampleStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() { stream.polygonStart(); resampleStream.lineStart = ringStart; },\n      polygonEnd: function() { stream.polygonEnd(); resampleStream.lineStart = lineStart; }\n    };\n\n    function point(x, y) {\n      x = project(x, y);\n      stream.point(x[0], x[1]);\n    }\n\n    function lineStart() {\n      x0 = NaN;\n      resampleStream.point = linePoint;\n      stream.lineStart();\n    }\n\n    function linePoint(lambda, phi) {\n      var c = cartesian([lambda, phi]), p = project(lambda, phi);\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x0 = p[0], y0 = p[1], lambda0 = lambda, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n      stream.point(x0, y0);\n    }\n\n    function lineEnd() {\n      resampleStream.point = point;\n      stream.lineEnd();\n    }\n\n    function ringStart() {\n      lineStart();\n      resampleStream.point = ringPoint;\n      resampleStream.lineEnd = ringEnd;\n    }\n\n    function ringPoint(lambda, phi) {\n      linePoint(lambda00 = lambda, phi), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n      resampleStream.point = linePoint;\n    }\n\n    function ringEnd() {\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x00, y00, lambda00, a00, b00, c00, maxDepth, stream);\n      resampleStream.lineEnd = lineEnd;\n      lineEnd();\n    }\n\n    return resampleStream;\n  };\n}\n","import clipAntimeridian from \"../clip/antimeridian\";\nimport clipCircle from \"../clip/circle\";\nimport clipRectangle from \"../clip/rectangle\";\nimport compose from \"../compose\";\nimport identity from \"../identity\";\nimport {cos, degrees, radians, sin, sqrt} from \"../math\";\nimport {rotateRadians} from \"../rotation\";\nimport {transformer} from \"../transform\";\nimport {fitExtent, fitSize, fitWidth, fitHeight} from \"./fit\";\nimport resample from \"./resample\";\n\nvar transformRadians = transformer({\n  point: function(x, y) {\n    this.stream.point(x * radians, y * radians);\n  }\n});\n\nfunction transformRotate(rotate) {\n  return transformer({\n    point: function(x, y) {\n      var r = rotate(x, y);\n      return this.stream.point(r[0], r[1]);\n    }\n  });\n}\n\nfunction scaleTranslate(k, dx, dy) {\n  function transform(x, y) {\n    return [dx + k * x, dy - k * y];\n  }\n  transform.invert = function(x, y) {\n    return [(x - dx) / k, (dy - y) / k];\n  };\n  return transform;\n}\n\nfunction scaleTranslateRotate(k, dx, dy, alpha) {\n  var cosAlpha = cos(alpha),\n      sinAlpha = sin(alpha),\n      a = cosAlpha * k,\n      b = sinAlpha * k,\n      ai = cosAlpha / k,\n      bi = sinAlpha / k,\n      ci = (sinAlpha * dy - cosAlpha * dx) / k,\n      fi = (sinAlpha * dx + cosAlpha * dy) / k;\n  function transform(x, y) {\n    return [a * x - b * y + dx, dy - b * x - a * y];\n  }\n  transform.invert = function(x, y) {\n    return [ai * x - bi * y + ci, fi - bi * x - ai * y];\n  };\n  return transform;\n}\n\nexport default function projection(project) {\n  return projectionMutator(function() { return project; })();\n}\n\nexport function projectionMutator(projectAt) {\n  var project,\n      k = 150, // scale\n      x = 480, y = 250, // translate\n      lambda = 0, phi = 0, // center\n      deltaLambda = 0, deltaPhi = 0, deltaGamma = 0, rotate, // pre-rotate\n      alpha = 0, // post-rotate\n      theta = null, preclip = clipAntimeridian, // pre-clip angle\n      x0 = null, y0, x1, y1, postclip = identity, // post-clip extent\n      delta2 = 0.5, // precision\n      projectResample,\n      projectTransform,\n      projectRotateTransform,\n      cache,\n      cacheStream;\n\n  function projection(point) {\n    return projectRotateTransform(point[0] * radians, point[1] * radians);\n  }\n\n  function invert(point) {\n    point = projectRotateTransform.invert(point[0], point[1]);\n    return point && [point[0] * degrees, point[1] * degrees];\n  }\n\n  projection.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = transformRadians(transformRotate(rotate)(preclip(projectResample(postclip(cacheStream = stream)))));\n  };\n\n  projection.preclip = function(_) {\n    return arguments.length ? (preclip = _, theta = undefined, reset()) : preclip;\n  };\n\n  projection.postclip = function(_) {\n    return arguments.length ? (postclip = _, x0 = y0 = x1 = y1 = null, reset()) : postclip;\n  };\n\n  projection.clipAngle = function(_) {\n    return arguments.length ? (preclip = +_ ? clipCircle(theta = _ * radians) : (theta = null, clipAntimeridian), reset()) : theta * degrees;\n  };\n\n  projection.clipExtent = function(_) {\n    return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity) : clipRectangle(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  projection.scale = function(_) {\n    return arguments.length ? (k = +_, recenter()) : k;\n  };\n\n  projection.translate = function(_) {\n    return arguments.length ? (x = +_[0], y = +_[1], recenter()) : [x, y];\n  };\n\n  projection.center = function(_) {\n    return arguments.length ? (lambda = _[0] % 360 * radians, phi = _[1] % 360 * radians, recenter()) : [lambda * degrees, phi * degrees];\n  };\n\n  projection.rotate = function(_) {\n    return arguments.length ? (deltaLambda = _[0] % 360 * radians, deltaPhi = _[1] % 360 * radians, deltaGamma = _.length > 2 ? _[2] % 360 * radians : 0, recenter()) : [deltaLambda * degrees, deltaPhi * degrees, deltaGamma * degrees];\n  };\n\n  projection.angle = function(_) {\n    return arguments.length ? (alpha = _ % 360 * radians, recenter()) : alpha * degrees;\n  };\n\n  projection.precision = function(_) {\n    return arguments.length ? (projectResample = resample(projectTransform, delta2 = _ * _), reset()) : sqrt(delta2);\n  };\n\n  projection.fitExtent = function(extent, object) {\n    return fitExtent(projection, extent, object);\n  };\n\n  projection.fitSize = function(size, object) {\n    return fitSize(projection, size, object);\n  };\n\n  projection.fitWidth = function(width, object) {\n    return fitWidth(projection, width, object);\n  };\n\n  projection.fitHeight = function(height, object) {\n    return fitHeight(projection, height, object);\n  };\n\n  function recenter() {\n    var center = scaleTranslateRotate(k, 0, 0, alpha).apply(null, project(lambda, phi)),\n        transform = (alpha ? scaleTranslateRotate : scaleTranslate)(k, x - center[0], y - center[1], alpha);\n    rotate = rotateRadians(deltaLambda, deltaPhi, deltaGamma);\n    projectTransform = compose(project, transform);\n    projectRotateTransform = compose(rotate, projectTransform);\n    projectResample = resample(projectTransform, delta2);\n    return reset();\n  }\n\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  return function() {\n    project = projectAt.apply(this, arguments);\n    projection.invert = project.invert && invert;\n    return recenter();\n  };\n}\n","import {degrees, pi, radians} from \"../math\";\nimport {projectionMutator} from \"./index\";\n\nexport function conicProjection(projectAt) {\n  var phi0 = 0,\n      phi1 = pi / 3,\n      m = projectionMutator(projectAt),\n      p = m(phi0, phi1);\n\n  p.parallels = function(_) {\n    return arguments.length ? m(phi0 = _[0] * radians, phi1 = _[1] * radians) : [phi0 * degrees, phi1 * degrees];\n  };\n\n  return p;\n}\n","import {abs, asin, atan2, cos, epsilon, sign, sin, sqrt} from \"../math\";\nimport {conicProjection} from \"./conic\";\nimport {cylindricalEqualAreaRaw} from \"./cylindricalEqualArea\";\n\nexport function conicEqualAreaRaw(y0, y1) {\n  var sy0 = sin(y0), n = (sy0 + sin(y1)) / 2;\n\n  // Are the parallels symmetrical around the Equator?\n  if (abs(n) < epsilon) return cylindricalEqualAreaRaw(y0);\n\n  var c = 1 + sy0 * (2 * n - sy0), r0 = sqrt(c) / n;\n\n  function project(x, y) {\n    var r = sqrt(c - 2 * n * sin(y)) / n;\n    return [r * sin(x *= n), r0 - r * cos(x)];\n  }\n\n  project.invert = function(x, y) {\n    var r0y = r0 - y;\n    return [atan2(x, abs(r0y)) / n * sign(r0y), asin((c - (x * x + r0y * r0y) * n * n) / (2 * n))];\n  };\n\n  return project;\n}\n\nexport default function() {\n  return conicProjection(conicEqualAreaRaw)\n      .scale(155.424)\n      .center([0, 33.6442]);\n}\n","import {asin, cos, sin} from \"../math\";\n\nexport function cylindricalEqualAreaRaw(phi0) {\n  var cosPhi0 = cos(phi0);\n\n  function forward(lambda, phi) {\n    return [lambda * cosPhi0, sin(phi) / cosPhi0];\n  }\n\n  forward.invert = function(x, y) {\n    return [x / cosPhi0, asin(y * cosPhi0)];\n  };\n\n  return forward;\n}\n","import conicEqualArea from \"./conicEqualArea\";\n\nexport default function() {\n  return conicEqualArea()\n      .parallels([29.5, 45.5])\n      .scale(1070)\n      .translate([480, 250])\n      .rotate([96, 0])\n      .center([-0.6, 38.7]);\n}\n","import {epsilon} from \"../math\";\nimport albers from \"./albers\";\nimport conicEqualArea from \"./conicEqualArea\";\nimport {fitExtent, fitSize, fitWidth, fitHeight} from \"./fit\";\n\n// The projections must have mutually exclusive clip regions on the sphere,\n// as this will avoid emitting interleaving lines and polygons.\nfunction multiplex(streams) {\n  var n = streams.length;\n  return {\n    point: function(x, y) { var i = -1; while (++i < n) streams[i].point(x, y); },\n    sphere: function() { var i = -1; while (++i < n) streams[i].sphere(); },\n    lineStart: function() { var i = -1; while (++i < n) streams[i].lineStart(); },\n    lineEnd: function() { var i = -1; while (++i < n) streams[i].lineEnd(); },\n    polygonStart: function() { var i = -1; while (++i < n) streams[i].polygonStart(); },\n    polygonEnd: function() { var i = -1; while (++i < n) streams[i].polygonEnd(); }\n  };\n}\n\n// A composite projection for the United States, configured by default for\n// 960×500. The projection also works quite well at 960×600 if you change the\n// scale to 1285 and adjust the translate accordingly. The set of standard\n// parallels for each region comes from USGS, which is published here:\n// http://egsc.usgs.gov/isb/pubs/MapProjections/projections.html#albers\nexport default function() {\n  var cache,\n      cacheStream,\n      lower48 = albers(), lower48Point,\n      alaska = conicEqualArea().rotate([154, 0]).center([-2, 58.5]).parallels([55, 65]), alaskaPoint, // EPSG:3338\n      hawaii = conicEqualArea().rotate([157, 0]).center([-3, 19.9]).parallels([8, 18]), hawaiiPoint, // ESRI:102007\n      point, pointStream = {point: function(x, y) { point = [x, y]; }};\n\n  function albersUsa(coordinates) {\n    var x = coordinates[0], y = coordinates[1];\n    return point = null,\n        (lower48Point.point(x, y), point)\n        || (alaskaPoint.point(x, y), point)\n        || (hawaiiPoint.point(x, y), point);\n  }\n\n  albersUsa.invert = function(coordinates) {\n    var k = lower48.scale(),\n        t = lower48.translate(),\n        x = (coordinates[0] - t[0]) / k,\n        y = (coordinates[1] - t[1]) / k;\n    return (y >= 0.120 && y < 0.234 && x >= -0.425 && x < -0.214 ? alaska\n        : y >= 0.166 && y < 0.234 && x >= -0.214 && x < -0.115 ? hawaii\n        : lower48).invert(coordinates);\n  };\n\n  albersUsa.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = multiplex([lower48.stream(cacheStream = stream), alaska.stream(stream), hawaii.stream(stream)]);\n  };\n\n  albersUsa.precision = function(_) {\n    if (!arguments.length) return lower48.precision();\n    lower48.precision(_), alaska.precision(_), hawaii.precision(_);\n    return reset();\n  };\n\n  albersUsa.scale = function(_) {\n    if (!arguments.length) return lower48.scale();\n    lower48.scale(_), alaska.scale(_ * 0.35), hawaii.scale(_);\n    return albersUsa.translate(lower48.translate());\n  };\n\n  albersUsa.translate = function(_) {\n    if (!arguments.length) return lower48.translate();\n    var k = lower48.scale(), x = +_[0], y = +_[1];\n\n    lower48Point = lower48\n        .translate(_)\n        .clipExtent([[x - 0.455 * k, y - 0.238 * k], [x + 0.455 * k, y + 0.238 * k]])\n        .stream(pointStream);\n\n    alaskaPoint = alaska\n        .translate([x - 0.307 * k, y + 0.201 * k])\n        .clipExtent([[x - 0.425 * k + epsilon, y + 0.120 * k + epsilon], [x - 0.214 * k - epsilon, y + 0.234 * k - epsilon]])\n        .stream(pointStream);\n\n    hawaiiPoint = hawaii\n        .translate([x - 0.205 * k, y + 0.212 * k])\n        .clipExtent([[x - 0.214 * k + epsilon, y + 0.166 * k + epsilon], [x - 0.115 * k - epsilon, y + 0.234 * k - epsilon]])\n        .stream(pointStream);\n\n    return reset();\n  };\n\n  albersUsa.fitExtent = function(extent, object) {\n    return fitExtent(albersUsa, extent, object);\n  };\n\n  albersUsa.fitSize = function(size, object) {\n    return fitSize(albersUsa, size, object);\n  };\n\n  albersUsa.fitWidth = function(width, object) {\n    return fitWidth(albersUsa, width, object);\n  };\n\n  albersUsa.fitHeight = function(height, object) {\n    return fitHeight(albersUsa, height, object);\n  };\n\n  function reset() {\n    cache = cacheStream = null;\n    return albersUsa;\n  }\n\n  return albersUsa.scale(1070);\n}\n","import {asin, atan2, cos, sin, sqrt} from \"../math\";\n\nexport function azimuthalRaw(scale) {\n  return function(x, y) {\n    var cx = cos(x),\n        cy = cos(y),\n        k = scale(cx * cy);\n    return [\n      k * cy * sin(x),\n      k * sin(y)\n    ];\n  }\n}\n\nexport function azimuthalInvert(angle) {\n  return function(x, y) {\n    var z = sqrt(x * x + y * y),\n        c = angle(z),\n        sc = sin(c),\n        cc = cos(c);\n    return [\n      atan2(x * sc, z * cc),\n      asin(z && y * sc / z)\n    ];\n  }\n}\n","import {asin, sqrt} from \"../math\";\nimport {azimuthalRaw, azimuthalInvert} from \"./azimuthal\";\nimport projection from \"./index\";\n\nexport var azimuthalEqualAreaRaw = azimuthalRaw(function(cxcy) {\n  return sqrt(2 / (1 + cxcy));\n});\n\nazimuthalEqualAreaRaw.invert = azimuthalInvert(function(z) {\n  return 2 * asin(z / 2);\n});\n\nexport default function() {\n  return projection(azimuthalEqualAreaRaw)\n      .scale(124.75)\n      .clipAngle(180 - 1e-3);\n}\n","import {acos, sin} from \"../math\";\nimport {azimuthalRaw, azimuthalInvert} from \"./azimuthal\";\nimport projection from \"./index\";\n\nexport var azimuthalEquidistantRaw = azimuthalRaw(function(c) {\n  return (c = acos(c)) && c / sin(c);\n});\n\nazimuthalEquidistantRaw.invert = azimuthalInvert(function(z) {\n  return z;\n});\n\nexport default function() {\n  return projection(azimuthalEquidistantRaw)\n      .scale(79.4188)\n      .clipAngle(180 - 1e-3);\n}\n","import {atan, exp, halfPi, log, pi, tan, tau} from \"../math\";\nimport rotation from \"../rotation\";\nimport projection from \"./index\";\n\nexport function mercatorRaw(lambda, phi) {\n  return [lambda, log(tan((halfPi + phi) / 2))];\n}\n\nmercatorRaw.invert = function(x, y) {\n  return [x, 2 * atan(exp(y)) - halfPi];\n};\n\nexport default function() {\n  return mercatorProjection(mercatorRaw)\n      .scale(961 / tau);\n}\n\nexport function mercatorProjection(project) {\n  var m = projection(project),\n      center = m.center,\n      scale = m.scale,\n      translate = m.translate,\n      clipExtent = m.clipExtent,\n      x0 = null, y0, x1, y1; // clip extent\n\n  m.scale = function(_) {\n    return arguments.length ? (scale(_), reclip()) : scale();\n  };\n\n  m.translate = function(_) {\n    return arguments.length ? (translate(_), reclip()) : translate();\n  };\n\n  m.center = function(_) {\n    return arguments.length ? (center(_), reclip()) : center();\n  };\n\n  m.clipExtent = function(_) {\n    return arguments.length ? ((_ == null ? x0 = y0 = x1 = y1 = null : (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1])), reclip()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  function reclip() {\n    var k = pi * scale(),\n        t = m(rotation(m.rotate()).invert([0, 0]));\n    return clipExtent(x0 == null\n        ? [[t[0] - k, t[1] - k], [t[0] + k, t[1] + k]] : project === mercatorRaw\n        ? [[Math.max(t[0] - k, x0), y0], [Math.min(t[0] + k, x1), y1]]\n        : [[x0, Math.max(t[1] - k, y0)], [x1, Math.min(t[1] + k, y1)]]);\n  }\n\n  return reclip();\n}\n","import {abs, atan, atan2, cos, epsilon, halfPi, log, pow, sign, sin, sqrt, tan} from \"../math\";\nimport {conicProjection} from \"./conic\";\nimport {mercatorRaw} from \"./mercator\";\n\nfunction tany(y) {\n  return tan((halfPi + y) / 2);\n}\n\nexport function conicConformalRaw(y0, y1) {\n  var cy0 = cos(y0),\n      n = y0 === y1 ? sin(y0) : log(cy0 / cos(y1)) / log(tany(y1) / tany(y0)),\n      f = cy0 * pow(tany(y0), n) / n;\n\n  if (!n) return mercatorRaw;\n\n  function project(x, y) {\n    if (f > 0) { if (y < -halfPi + epsilon) y = -halfPi + epsilon; }\n    else { if (y > halfPi - epsilon) y = halfPi - epsilon; }\n    var r = f / pow(tany(y), n);\n    return [r * sin(n * x), f - r * cos(n * x)];\n  }\n\n  project.invert = function(x, y) {\n    var fy = f - y, r = sign(n) * sqrt(x * x + fy * fy);\n    return [atan2(x, abs(fy)) / n * sign(fy), 2 * atan(pow(f / r, 1 / n)) - halfPi];\n  };\n\n  return project;\n}\n\nexport default function() {\n  return conicProjection(conicConformalRaw)\n      .scale(109.5)\n      .parallels([30, 30]);\n}\n","import projection from \"./index\";\n\nexport function equirectangularRaw(lambda, phi) {\n  return [lambda, phi];\n}\n\nequirectangularRaw.invert = equirectangularRaw;\n\nexport default function() {\n  return projection(equirectangularRaw)\n      .scale(152.63);\n}\n","import {abs, atan2, cos, epsilon, sign, sin, sqrt} from \"../math\";\nimport {conicProjection} from \"./conic\";\nimport {equirectangularRaw} from \"./equirectangular\";\n\nexport function conicEquidistantRaw(y0, y1) {\n  var cy0 = cos(y0),\n      n = y0 === y1 ? sin(y0) : (cy0 - cos(y1)) / (y1 - y0),\n      g = cy0 / n + y0;\n\n  if (abs(n) < epsilon) return equirectangularRaw;\n\n  function project(x, y) {\n    var gy = g - y, nx = n * x;\n    return [gy * sin(nx), g - gy * cos(nx)];\n  }\n\n  project.invert = function(x, y) {\n    var gy = g - y;\n    return [atan2(x, abs(gy)) / n * sign(gy), g - sign(n) * sqrt(x * x + gy * gy)];\n  };\n\n  return project;\n}\n\nexport default function() {\n  return conicProjection(conicEquidistantRaw)\n      .scale(131.154)\n      .center([0, 13.9389]);\n}\n","import {atan, cos, sin} from \"../math\";\nimport {azimuthalInvert} from \"./azimuthal\";\nimport projection from \"./index\";\n\nexport function gnomonicRaw(x, y) {\n  var cy = cos(y), k = cos(x) * cy;\n  return [cy * sin(x) / k, sin(y) / k];\n}\n\ngnomonicRaw.invert = azimuthalInvert(atan);\n\nexport default function() {\n  return projection(gnomonicRaw)\n      .scale(144.049)\n      .clipAngle(60);\n}\n","import clipRectangle from \"../clip/rectangle\";\nimport identity from \"../identity\";\nimport {transformer} from \"../transform\";\nimport {fitExtent, fitSize, fitWidth, fitHeight} from \"./fit\";\n\nfunction scaleTranslate(kx, ky, tx, ty) {\n  return kx === 1 && ky === 1 && tx === 0 && ty === 0 ? identity : transformer({\n    point: function(x, y) {\n      this.stream.point(x * kx + tx, y * ky + ty);\n    }\n  });\n}\n\nexport default function() {\n  var k = 1, tx = 0, ty = 0, sx = 1, sy = 1, transform = identity, // scale, translate and reflect\n      x0 = null, y0, x1, y1, // clip extent\n      postclip = identity,\n      cache,\n      cacheStream,\n      projection;\n\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  return projection = {\n    stream: function(stream) {\n      return cache && cacheStream === stream ? cache : cache = transform(postclip(cacheStream = stream));\n    },\n    postclip: function(_) {\n      return arguments.length ? (postclip = _, x0 = y0 = x1 = y1 = null, reset()) : postclip;\n    },\n    clipExtent: function(_) {\n      return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity) : clipRectangle(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n    },\n    scale: function(_) {\n      return arguments.length ? (transform = scaleTranslate((k = +_) * sx, k * sy, tx, ty), reset()) : k;\n    },\n    translate: function(_) {\n      return arguments.length ? (transform = scaleTranslate(k * sx, k * sy, tx = +_[0], ty = +_[1]), reset()) : [tx, ty];\n    },\n    reflectX: function(_) {\n      return arguments.length ? (transform = scaleTranslate(k * (sx = _ ? -1 : 1), k * sy, tx, ty), reset()) : sx < 0;\n    },\n    reflectY: function(_) {\n      return arguments.length ? (transform = scaleTranslate(k * sx, k * (sy = _ ? -1 : 1), tx, ty), reset()) : sy < 0;\n    },\n    fitExtent: function(extent, object) {\n      return fitExtent(projection, extent, object);\n    },\n    fitSize: function(size, object) {\n      return fitSize(projection, size, object);\n    },\n    fitWidth: function(width, object) {\n      return fitWidth(projection, width, object);\n    },\n    fitHeight: function(height, object) {\n      return fitHeight(projection, height, object);\n    }\n  };\n}\n","import projection from \"./index\";\nimport {abs, epsilon} from \"../math\";\n\nexport function naturalEarth1Raw(lambda, phi) {\n  var phi2 = phi * phi, phi4 = phi2 * phi2;\n  return [\n    lambda * (0.8707 - 0.131979 * phi2 + phi4 * (-0.013791 + phi4 * (0.003971 * phi2 - 0.001529 * phi4))),\n    phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4)))\n  ];\n}\n\nnaturalEarth1Raw.invert = function(x, y) {\n  var phi = y, i = 25, delta;\n  do {\n    var phi2 = phi * phi, phi4 = phi2 * phi2;\n    phi -= delta = (phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4))) - y) /\n        (1.007226 + phi2 * (0.015085 * 3 + phi4 * (-0.044475 * 7 + 0.028874 * 9 * phi2 - 0.005916 * 11 * phi4)));\n  } while (abs(delta) > epsilon && --i > 0);\n  return [\n    x / (0.8707 + (phi2 = phi * phi) * (-0.131979 + phi2 * (-0.013791 + phi2 * phi2 * phi2 * (0.003971 - 0.001529 * phi2)))),\n    phi\n  ];\n};\n\nexport default function() {\n  return projection(naturalEarth1Raw)\n      .scale(175.295);\n}\n","import {asin, cos, epsilon, sin} from \"../math\";\nimport {azimuthalInvert} from \"./azimuthal\";\nimport projection from \"./index\";\n\nexport function orthographicRaw(x, y) {\n  return [cos(y) * sin(x), sin(y)];\n}\n\northographicRaw.invert = azimuthalInvert(asin);\n\nexport default function() {\n  return projection(orthographicRaw)\n      .scale(249.5)\n      .clipAngle(90 + epsilon);\n}\n","import {atan, cos, sin} from \"../math\";\nimport {azimuthalInvert} from \"./azimuthal\";\nimport projection from \"./index\";\n\nexport function stereographicRaw(x, y) {\n  var cy = cos(y), k = 1 + cos(x) * cy;\n  return [cy * sin(x) / k, sin(y) / k];\n}\n\nstereographicRaw.invert = azimuthalInvert(function(z) {\n  return 2 * atan(z);\n});\n\nexport default function() {\n  return projection(stereographicRaw)\n      .scale(250)\n      .clipAngle(142);\n}\n","import {atan, exp, halfPi, log, tan} from \"../math\";\nimport {mercatorProjection} from \"./mercator\";\n\nexport function transverseMercatorRaw(lambda, phi) {\n  return [log(tan((halfPi + phi) / 2)), -lambda];\n}\n\ntransverseMercatorRaw.invert = function(x, y) {\n  return [-y, 2 * atan(exp(x)) - halfPi];\n};\n\nexport default function() {\n  var m = mercatorProjection(transverseMercatorRaw),\n      center = m.center,\n      rotate = m.rotate;\n\n  m.center = function(_) {\n    return arguments.length ? center([-_[1], _[0]]) : (_ = center(), [_[1], -_[0]]);\n  };\n\n  m.rotate = function(_) {\n    return arguments.length ? rotate([_[0], _[1], _.length > 2 ? _[2] + 90 : 90]) : (_ = rotate(), [_[0], _[1], _[2] - 90]);\n  };\n\n  return rotate([0, 0, 90])\n      .scale(159.155);\n}\n","function defaultSeparation(a, b) {\n  return a.parent === b.parent ? 1 : 2;\n}\n\nfunction meanX(children) {\n  return children.reduce(meanXReduce, 0) / children.length;\n}\n\nfunction meanXReduce(x, c) {\n  return x + c.x;\n}\n\nfunction maxY(children) {\n  return 1 + children.reduce(maxYReduce, 0);\n}\n\nfunction maxYReduce(y, c) {\n  return Math.max(y, c.y);\n}\n\nfunction leafLeft(node) {\n  var children;\n  while (children = node.children) node = children[0];\n  return node;\n}\n\nfunction leafRight(node) {\n  var children;\n  while (children = node.children) node = children[children.length - 1];\n  return node;\n}\n\nexport default function() {\n  var separation = defaultSeparation,\n      dx = 1,\n      dy = 1,\n      nodeSize = false;\n\n  function cluster(root) {\n    var previousNode,\n        x = 0;\n\n    // First walk, computing the initial x & y values.\n    root.eachAfter(function(node) {\n      var children = node.children;\n      if (children) {\n        node.x = meanX(children);\n        node.y = maxY(children);\n      } else {\n        node.x = previousNode ? x += separation(node, previousNode) : 0;\n        node.y = 0;\n        previousNode = node;\n      }\n    });\n\n    var left = leafLeft(root),\n        right = leafRight(root),\n        x0 = left.x - separation(left, right) / 2,\n        x1 = right.x + separation(right, left) / 2;\n\n    // Second walk, normalizing x & y to the desired size.\n    return root.eachAfter(nodeSize ? function(node) {\n      node.x = (node.x - root.x) * dx;\n      node.y = (root.y - node.y) * dy;\n    } : function(node) {\n      node.x = (node.x - x0) / (x1 - x0) * dx;\n      node.y = (1 - (root.y ? node.y / root.y : 1)) * dy;\n    });\n  }\n\n  cluster.separation = function(x) {\n    return arguments.length ? (separation = x, cluster) : separation;\n  };\n\n  cluster.size = function(x) {\n    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? null : [dx, dy]);\n  };\n\n  cluster.nodeSize = function(x) {\n    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? [dx, dy] : null);\n  };\n\n  return cluster;\n}\n","function count(node) {\n  var sum = 0,\n      children = node.children,\n      i = children && children.length;\n  if (!i) sum = 1;\n  else while (--i >= 0) sum += children[i].value;\n  node.value = sum;\n}\n\nexport default function() {\n  return this.eachAfter(count);\n}\n","import node_count from \"./count\";\nimport node_each from \"./each\";\nimport node_eachBefore from \"./eachBefore\";\nimport node_eachAfter from \"./eachAfter\";\nimport node_sum from \"./sum\";\nimport node_sort from \"./sort\";\nimport node_path from \"./path\";\nimport node_ancestors from \"./ancestors\";\nimport node_descendants from \"./descendants\";\nimport node_leaves from \"./leaves\";\nimport node_links from \"./links\";\n\nexport default function hierarchy(data, children) {\n  var root = new Node(data),\n      valued = +data.value && (root.value = data.value),\n      node,\n      nodes = [root],\n      child,\n      childs,\n      i,\n      n;\n\n  if (children == null) children = defaultChildren;\n\n  while (node = nodes.pop()) {\n    if (valued) node.value = +node.data.value;\n    if ((childs = children(node.data)) && (n = childs.length)) {\n      node.children = new Array(n);\n      for (i = n - 1; i >= 0; --i) {\n        nodes.push(child = node.children[i] = new Node(childs[i]));\n        child.parent = node;\n        child.depth = node.depth + 1;\n      }\n    }\n  }\n\n  return root.eachBefore(computeHeight);\n}\n\nfunction node_copy() {\n  return hierarchy(this).eachBefore(copyData);\n}\n\nfunction defaultChildren(d) {\n  return d.children;\n}\n\nfunction copyData(node) {\n  node.data = node.data.data;\n}\n\nexport function computeHeight(node) {\n  var height = 0;\n  do node.height = height;\n  while ((node = node.parent) && (node.height < ++height));\n}\n\nexport function Node(data) {\n  this.data = data;\n  this.depth =\n  this.height = 0;\n  this.parent = null;\n}\n\nNode.prototype = hierarchy.prototype = {\n  constructor: Node,\n  count: node_count,\n  each: node_each,\n  eachAfter: node_eachAfter,\n  eachBefore: node_eachBefore,\n  sum: node_sum,\n  sort: node_sort,\n  path: node_path,\n  ancestors: node_ancestors,\n  descendants: node_descendants,\n  leaves: node_leaves,\n  links: node_links,\n  copy: node_copy\n};\n","export default function(callback) {\n  var node = this, current, next = [node], children, i, n;\n  do {\n    current = next.reverse(), next = [];\n    while (node = current.pop()) {\n      callback(node), children = node.children;\n      if (children) for (i = 0, n = children.length; i < n; ++i) {\n        next.push(children[i]);\n      }\n    }\n  } while (next.length);\n  return this;\n}\n","export default function(callback) {\n  var node = this, nodes = [node], next = [], children, i, n;\n  while (node = nodes.pop()) {\n    next.push(node), children = node.children;\n    if (children) for (i = 0, n = children.length; i < n; ++i) {\n      nodes.push(children[i]);\n    }\n  }\n  while (node = next.pop()) {\n    callback(node);\n  }\n  return this;\n}\n","export default function(callback) {\n  var node = this, nodes = [node], children, i;\n  while (node = nodes.pop()) {\n    callback(node), children = node.children;\n    if (children) for (i = children.length - 1; i >= 0; --i) {\n      nodes.push(children[i]);\n    }\n  }\n  return this;\n}\n","export default function(value) {\n  return this.eachAfter(function(node) {\n    var sum = +value(node.data) || 0,\n        children = node.children,\n        i = children && children.length;\n    while (--i >= 0) sum += children[i].value;\n    node.value = sum;\n  });\n}\n","export default function(compare) {\n  return this.eachBefore(function(node) {\n    if (node.children) {\n      node.children.sort(compare);\n    }\n  });\n}\n","export default function(end) {\n  var start = this,\n      ancestor = leastCommonAncestor(start, end),\n      nodes = [start];\n  while (start !== ancestor) {\n    start = start.parent;\n    nodes.push(start);\n  }\n  var k = nodes.length;\n  while (end !== ancestor) {\n    nodes.splice(k, 0, end);\n    end = end.parent;\n  }\n  return nodes;\n}\n\nfunction leastCommonAncestor(a, b) {\n  if (a === b) return a;\n  var aNodes = a.ancestors(),\n      bNodes = b.ancestors(),\n      c = null;\n  a = aNodes.pop();\n  b = bNodes.pop();\n  while (a === b) {\n    c = a;\n    a = aNodes.pop();\n    b = bNodes.pop();\n  }\n  return c;\n}\n","export default function() {\n  var node = this, nodes = [node];\n  while (node = node.parent) {\n    nodes.push(node);\n  }\n  return nodes;\n}\n","export default function() {\n  var nodes = [];\n  this.each(function(node) {\n    nodes.push(node);\n  });\n  return nodes;\n}\n","export default function() {\n  var leaves = [];\n  this.eachBefore(function(node) {\n    if (!node.children) {\n      leaves.push(node);\n    }\n  });\n  return leaves;\n}\n","export default function() {\n  var root = this, links = [];\n  root.each(function(node) {\n    if (node !== root) { // Don’t include the root’s parent, if any.\n      links.push({source: node.parent, target: node});\n    }\n  });\n  return links;\n}\n","export var slice = Array.prototype.slice;\n\nexport function shuffle(array) {\n  var m = array.length,\n      t,\n      i;\n\n  while (m) {\n    i = Math.random() * m-- | 0;\n    t = array[m];\n    array[m] = array[i];\n    array[i] = t;\n  }\n\n  return array;\n}\n","import {shuffle, slice} from \"../array\";\n\nexport default function(circles) {\n  var i = 0, n = (circles = shuffle(slice.call(circles))).length, B = [], p, e;\n\n  while (i < n) {\n    p = circles[i];\n    if (e && enclosesWeak(e, p)) ++i;\n    else e = encloseBasis(B = extendBasis(B, p)), i = 0;\n  }\n\n  return e;\n}\n\nfunction extendBasis(B, p) {\n  var i, j;\n\n  if (enclosesWeakAll(p, B)) return [p];\n\n  // If we get here then B must have at least one element.\n  for (i = 0; i < B.length; ++i) {\n    if (enclosesNot(p, B[i])\n        && enclosesWeakAll(encloseBasis2(B[i], p), B)) {\n      return [B[i], p];\n    }\n  }\n\n  // If we get here then B must have at least two elements.\n  for (i = 0; i < B.length - 1; ++i) {\n    for (j = i + 1; j < B.length; ++j) {\n      if (enclosesNot(encloseBasis2(B[i], B[j]), p)\n          && enclosesNot(encloseBasis2(B[i], p), B[j])\n          && enclosesNot(encloseBasis2(B[j], p), B[i])\n          && enclosesWeakAll(encloseBasis3(B[i], B[j], p), B)) {\n        return [B[i], B[j], p];\n      }\n    }\n  }\n\n  // If we get here then something is very wrong.\n  throw new Error;\n}\n\nfunction enclosesNot(a, b) {\n  var dr = a.r - b.r, dx = b.x - a.x, dy = b.y - a.y;\n  return dr < 0 || dr * dr < dx * dx + dy * dy;\n}\n\nfunction enclosesWeak(a, b) {\n  var dr = a.r - b.r + 1e-6, dx = b.x - a.x, dy = b.y - a.y;\n  return dr > 0 && dr * dr > dx * dx + dy * dy;\n}\n\nfunction enclosesWeakAll(a, B) {\n  for (var i = 0; i < B.length; ++i) {\n    if (!enclosesWeak(a, B[i])) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction encloseBasis(B) {\n  switch (B.length) {\n    case 1: return encloseBasis1(B[0]);\n    case 2: return encloseBasis2(B[0], B[1]);\n    case 3: return encloseBasis3(B[0], B[1], B[2]);\n  }\n}\n\nfunction encloseBasis1(a) {\n  return {\n    x: a.x,\n    y: a.y,\n    r: a.r\n  };\n}\n\nfunction encloseBasis2(a, b) {\n  var x1 = a.x, y1 = a.y, r1 = a.r,\n      x2 = b.x, y2 = b.y, r2 = b.r,\n      x21 = x2 - x1, y21 = y2 - y1, r21 = r2 - r1,\n      l = Math.sqrt(x21 * x21 + y21 * y21);\n  return {\n    x: (x1 + x2 + x21 / l * r21) / 2,\n    y: (y1 + y2 + y21 / l * r21) / 2,\n    r: (l + r1 + r2) / 2\n  };\n}\n\nfunction encloseBasis3(a, b, c) {\n  var x1 = a.x, y1 = a.y, r1 = a.r,\n      x2 = b.x, y2 = b.y, r2 = b.r,\n      x3 = c.x, y3 = c.y, r3 = c.r,\n      a2 = x1 - x2,\n      a3 = x1 - x3,\n      b2 = y1 - y2,\n      b3 = y1 - y3,\n      c2 = r2 - r1,\n      c3 = r3 - r1,\n      d1 = x1 * x1 + y1 * y1 - r1 * r1,\n      d2 = d1 - x2 * x2 - y2 * y2 + r2 * r2,\n      d3 = d1 - x3 * x3 - y3 * y3 + r3 * r3,\n      ab = a3 * b2 - a2 * b3,\n      xa = (b2 * d3 - b3 * d2) / (ab * 2) - x1,\n      xb = (b3 * c2 - b2 * c3) / ab,\n      ya = (a3 * d2 - a2 * d3) / (ab * 2) - y1,\n      yb = (a2 * c3 - a3 * c2) / ab,\n      A = xb * xb + yb * yb - 1,\n      B = 2 * (r1 + xa * xb + ya * yb),\n      C = xa * xa + ya * ya - r1 * r1,\n      r = -(A ? (B + Math.sqrt(B * B - 4 * A * C)) / (2 * A) : C / B);\n  return {\n    x: x1 + xa + xb * r,\n    y: y1 + ya + yb * r,\n    r: r\n  };\n}\n","import enclose from \"./enclose\";\n\nfunction place(b, a, c) {\n  var dx = b.x - a.x, x, a2,\n      dy = b.y - a.y, y, b2,\n      d2 = dx * dx + dy * dy;\n  if (d2) {\n    a2 = a.r + c.r, a2 *= a2;\n    b2 = b.r + c.r, b2 *= b2;\n    if (a2 > b2) {\n      x = (d2 + b2 - a2) / (2 * d2);\n      y = Math.sqrt(Math.max(0, b2 / d2 - x * x));\n      c.x = b.x - x * dx - y * dy;\n      c.y = b.y - x * dy + y * dx;\n    } else {\n      x = (d2 + a2 - b2) / (2 * d2);\n      y = Math.sqrt(Math.max(0, a2 / d2 - x * x));\n      c.x = a.x + x * dx - y * dy;\n      c.y = a.y + x * dy + y * dx;\n    }\n  } else {\n    c.x = a.x + c.r;\n    c.y = a.y;\n  }\n}\n\nfunction intersects(a, b) {\n  var dr = a.r + b.r - 1e-6, dx = b.x - a.x, dy = b.y - a.y;\n  return dr > 0 && dr * dr > dx * dx + dy * dy;\n}\n\nfunction score(node) {\n  var a = node._,\n      b = node.next._,\n      ab = a.r + b.r,\n      dx = (a.x * b.r + b.x * a.r) / ab,\n      dy = (a.y * b.r + b.y * a.r) / ab;\n  return dx * dx + dy * dy;\n}\n\nfunction Node(circle) {\n  this._ = circle;\n  this.next = null;\n  this.previous = null;\n}\n\nexport function packEnclose(circles) {\n  if (!(n = circles.length)) return 0;\n\n  var a, b, c, n, aa, ca, i, j, k, sj, sk;\n\n  // Place the first circle.\n  a = circles[0], a.x = 0, a.y = 0;\n  if (!(n > 1)) return a.r;\n\n  // Place the second circle.\n  b = circles[1], a.x = -b.r, b.x = a.r, b.y = 0;\n  if (!(n > 2)) return a.r + b.r;\n\n  // Place the third circle.\n  place(b, a, c = circles[2]);\n\n  // Initialize the front-chain using the first three circles a, b and c.\n  a = new Node(a), b = new Node(b), c = new Node(c);\n  a.next = c.previous = b;\n  b.next = a.previous = c;\n  c.next = b.previous = a;\n\n  // Attempt to place each remaining circle…\n  pack: for (i = 3; i < n; ++i) {\n    place(a._, b._, c = circles[i]), c = new Node(c);\n\n    // Find the closest intersecting circle on the front-chain, if any.\n    // “Closeness” is determined by linear distance along the front-chain.\n    // “Ahead” or “behind” is likewise determined by linear distance.\n    j = b.next, k = a.previous, sj = b._.r, sk = a._.r;\n    do {\n      if (sj <= sk) {\n        if (intersects(j._, c._)) {\n          b = j, a.next = b, b.previous = a, --i;\n          continue pack;\n        }\n        sj += j._.r, j = j.next;\n      } else {\n        if (intersects(k._, c._)) {\n          a = k, a.next = b, b.previous = a, --i;\n          continue pack;\n        }\n        sk += k._.r, k = k.previous;\n      }\n    } while (j !== k.next);\n\n    // Success! Insert the new circle c between a and b.\n    c.previous = a, c.next = b, a.next = b.previous = b = c;\n\n    // Compute the new closest circle pair to the centroid.\n    aa = score(a);\n    while ((c = c.next) !== b) {\n      if ((ca = score(c)) < aa) {\n        a = c, aa = ca;\n      }\n    }\n    b = a.next;\n  }\n\n  // Compute the enclosing circle of the front chain.\n  a = [b._], c = b; while ((c = c.next) !== b) a.push(c._); c = enclose(a);\n\n  // Translate the circles to put the enclosing circle around the origin.\n  for (i = 0; i < n; ++i) a = circles[i], a.x -= c.x, a.y -= c.y;\n\n  return c.r;\n}\n\nexport default function(circles) {\n  packEnclose(circles);\n  return circles;\n}\n","export function optional(f) {\n  return f == null ? null : required(f);\n}\n\nexport function required(f) {\n  if (typeof f !== \"function\") throw new Error;\n  return f;\n}\n","export function constantZero() {\n  return 0;\n}\n\nexport default function(x) {\n  return function() {\n    return x;\n  };\n}\n","import {packEnclose} from \"./siblings\";\nimport {optional} from \"../accessors\";\nimport constant, {constantZero} from \"../constant\";\n\nfunction defaultRadius(d) {\n  return Math.sqrt(d.value);\n}\n\nexport default function() {\n  var radius = null,\n      dx = 1,\n      dy = 1,\n      padding = constantZero;\n\n  function pack(root) {\n    root.x = dx / 2, root.y = dy / 2;\n    if (radius) {\n      root.eachBefore(radiusLeaf(radius))\n          .eachAfter(packChildren(padding, 0.5))\n          .eachBefore(translateChild(1));\n    } else {\n      root.eachBefore(radiusLeaf(defaultRadius))\n          .eachAfter(packChildren(constantZero, 1))\n          .eachAfter(packChildren(padding, root.r / Math.min(dx, dy)))\n          .eachBefore(translateChild(Math.min(dx, dy) / (2 * root.r)));\n    }\n    return root;\n  }\n\n  pack.radius = function(x) {\n    return arguments.length ? (radius = optional(x), pack) : radius;\n  };\n\n  pack.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], pack) : [dx, dy];\n  };\n\n  pack.padding = function(x) {\n    return arguments.length ? (padding = typeof x === \"function\" ? x : constant(+x), pack) : padding;\n  };\n\n  return pack;\n}\n\nfunction radiusLeaf(radius) {\n  return function(node) {\n    if (!node.children) {\n      node.r = Math.max(0, +radius(node) || 0);\n    }\n  };\n}\n\nfunction packChildren(padding, k) {\n  return function(node) {\n    if (children = node.children) {\n      var children,\n          i,\n          n = children.length,\n          r = padding(node) * k || 0,\n          e;\n\n      if (r) for (i = 0; i < n; ++i) children[i].r += r;\n      e = packEnclose(children);\n      if (r) for (i = 0; i < n; ++i) children[i].r -= r;\n      node.r = e + r;\n    }\n  };\n}\n\nfunction translateChild(k) {\n  return function(node) {\n    var parent = node.parent;\n    node.r *= k;\n    if (parent) {\n      node.x = parent.x + k * node.x;\n      node.y = parent.y + k * node.y;\n    }\n  };\n}\n","export default function(node) {\n  node.x0 = Math.round(node.x0);\n  node.y0 = Math.round(node.y0);\n  node.x1 = Math.round(node.x1);\n  node.y1 = Math.round(node.y1);\n}\n","export default function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      node,\n      i = -1,\n      n = nodes.length,\n      k = parent.value && (x1 - x0) / parent.value;\n\n  while (++i < n) {\n    node = nodes[i], node.y0 = y0, node.y1 = y1;\n    node.x0 = x0, node.x1 = x0 += node.value * k;\n  }\n}\n","import roundNode from \"./treemap/round\";\nimport treemapDice from \"./treemap/dice\";\n\nexport default function() {\n  var dx = 1,\n      dy = 1,\n      padding = 0,\n      round = false;\n\n  function partition(root) {\n    var n = root.height + 1;\n    root.x0 =\n    root.y0 = padding;\n    root.x1 = dx;\n    root.y1 = dy / n;\n    root.eachBefore(positionNode(dy, n));\n    if (round) root.eachBefore(roundNode);\n    return root;\n  }\n\n  function positionNode(dy, n) {\n    return function(node) {\n      if (node.children) {\n        treemapDice(node, node.x0, dy * (node.depth + 1) / n, node.x1, dy * (node.depth + 2) / n);\n      }\n      var x0 = node.x0,\n          y0 = node.y0,\n          x1 = node.x1 - padding,\n          y1 = node.y1 - padding;\n      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n      node.x0 = x0;\n      node.y0 = y0;\n      node.x1 = x1;\n      node.y1 = y1;\n    };\n  }\n\n  partition.round = function(x) {\n    return arguments.length ? (round = !!x, partition) : round;\n  };\n\n  partition.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], partition) : [dx, dy];\n  };\n\n  partition.padding = function(x) {\n    return arguments.length ? (padding = +x, partition) : padding;\n  };\n\n  return partition;\n}\n","import {required} from \"./accessors\";\nimport {Node, computeHeight} from \"./hierarchy/index\";\n\nvar keyPrefix = \"$\", // Protect against keys like “__proto__”.\n    preroot = {depth: -1},\n    ambiguous = {};\n\nfunction defaultId(d) {\n  return d.id;\n}\n\nfunction defaultParentId(d) {\n  return d.parentId;\n}\n\nexport default function() {\n  var id = defaultId,\n      parentId = defaultParentId;\n\n  function stratify(data) {\n    var d,\n        i,\n        n = data.length,\n        root,\n        parent,\n        node,\n        nodes = new Array(n),\n        nodeId,\n        nodeKey,\n        nodeByKey = {};\n\n    for (i = 0; i < n; ++i) {\n      d = data[i], node = nodes[i] = new Node(d);\n      if ((nodeId = id(d, i, data)) != null && (nodeId += \"\")) {\n        nodeKey = keyPrefix + (node.id = nodeId);\n        nodeByKey[nodeKey] = nodeKey in nodeByKey ? ambiguous : node;\n      }\n    }\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i], nodeId = parentId(data[i], i, data);\n      if (nodeId == null || !(nodeId += \"\")) {\n        if (root) throw new Error(\"multiple roots\");\n        root = node;\n      } else {\n        parent = nodeByKey[keyPrefix + nodeId];\n        if (!parent) throw new Error(\"missing: \" + nodeId);\n        if (parent === ambiguous) throw new Error(\"ambiguous: \" + nodeId);\n        if (parent.children) parent.children.push(node);\n        else parent.children = [node];\n        node.parent = parent;\n      }\n    }\n\n    if (!root) throw new Error(\"no root\");\n    root.parent = preroot;\n    root.eachBefore(function(node) { node.depth = node.parent.depth + 1; --n; }).eachBefore(computeHeight);\n    root.parent = null;\n    if (n > 0) throw new Error(\"cycle\");\n\n    return root;\n  }\n\n  stratify.id = function(x) {\n    return arguments.length ? (id = required(x), stratify) : id;\n  };\n\n  stratify.parentId = function(x) {\n    return arguments.length ? (parentId = required(x), stratify) : parentId;\n  };\n\n  return stratify;\n}\n","import {Node} from \"./hierarchy/index\";\n\nfunction defaultSeparation(a, b) {\n  return a.parent === b.parent ? 1 : 2;\n}\n\n// function radialSeparation(a, b) {\n//   return (a.parent === b.parent ? 1 : 2) / a.depth;\n// }\n\n// This function is used to traverse the left contour of a subtree (or\n// subforest). It returns the successor of v on this contour. This successor is\n// either given by the leftmost child of v or by the thread of v. The function\n// returns null if and only if v is on the highest level of its subtree.\nfunction nextLeft(v) {\n  var children = v.children;\n  return children ? children[0] : v.t;\n}\n\n// This function works analogously to nextLeft.\nfunction nextRight(v) {\n  var children = v.children;\n  return children ? children[children.length - 1] : v.t;\n}\n\n// Shifts the current subtree rooted at w+. This is done by increasing\n// prelim(w+) and mod(w+) by shift.\nfunction moveSubtree(wm, wp, shift) {\n  var change = shift / (wp.i - wm.i);\n  wp.c -= change;\n  wp.s += shift;\n  wm.c += change;\n  wp.z += shift;\n  wp.m += shift;\n}\n\n// All other shifts, applied to the smaller subtrees between w- and w+, are\n// performed by this function. To prepare the shifts, we have to adjust\n// change(w+), shift(w+), and change(w-).\nfunction executeShifts(v) {\n  var shift = 0,\n      change = 0,\n      children = v.children,\n      i = children.length,\n      w;\n  while (--i >= 0) {\n    w = children[i];\n    w.z += shift;\n    w.m += shift;\n    shift += w.s + (change += w.c);\n  }\n}\n\n// If vi-’s ancestor is a sibling of v, returns vi-’s ancestor. Otherwise,\n// returns the specified (default) ancestor.\nfunction nextAncestor(vim, v, ancestor) {\n  return vim.a.parent === v.parent ? vim.a : ancestor;\n}\n\nfunction TreeNode(node, i) {\n  this._ = node;\n  this.parent = null;\n  this.children = null;\n  this.A = null; // default ancestor\n  this.a = this; // ancestor\n  this.z = 0; // prelim\n  this.m = 0; // mod\n  this.c = 0; // change\n  this.s = 0; // shift\n  this.t = null; // thread\n  this.i = i; // number\n}\n\nTreeNode.prototype = Object.create(Node.prototype);\n\nfunction treeRoot(root) {\n  var tree = new TreeNode(root, 0),\n      node,\n      nodes = [tree],\n      child,\n      children,\n      i,\n      n;\n\n  while (node = nodes.pop()) {\n    if (children = node._.children) {\n      node.children = new Array(n = children.length);\n      for (i = n - 1; i >= 0; --i) {\n        nodes.push(child = node.children[i] = new TreeNode(children[i], i));\n        child.parent = node;\n      }\n    }\n  }\n\n  (tree.parent = new TreeNode(null, 0)).children = [tree];\n  return tree;\n}\n\n// Node-link tree diagram using the Reingold-Tilford \"tidy\" algorithm\nexport default function() {\n  var separation = defaultSeparation,\n      dx = 1,\n      dy = 1,\n      nodeSize = null;\n\n  function tree(root) {\n    var t = treeRoot(root);\n\n    // Compute the layout using Buchheim et al.’s algorithm.\n    t.eachAfter(firstWalk), t.parent.m = -t.z;\n    t.eachBefore(secondWalk);\n\n    // If a fixed node size is specified, scale x and y.\n    if (nodeSize) root.eachBefore(sizeNode);\n\n    // If a fixed tree size is specified, scale x and y based on the extent.\n    // Compute the left-most, right-most, and depth-most nodes for extents.\n    else {\n      var left = root,\n          right = root,\n          bottom = root;\n      root.eachBefore(function(node) {\n        if (node.x < left.x) left = node;\n        if (node.x > right.x) right = node;\n        if (node.depth > bottom.depth) bottom = node;\n      });\n      var s = left === right ? 1 : separation(left, right) / 2,\n          tx = s - left.x,\n          kx = dx / (right.x + s + tx),\n          ky = dy / (bottom.depth || 1);\n      root.eachBefore(function(node) {\n        node.x = (node.x + tx) * kx;\n        node.y = node.depth * ky;\n      });\n    }\n\n    return root;\n  }\n\n  // Computes a preliminary x-coordinate for v. Before that, FIRST WALK is\n  // applied recursively to the children of v, as well as the function\n  // APPORTION. After spacing out the children by calling EXECUTE SHIFTS, the\n  // node v is placed to the midpoint of its outermost children.\n  function firstWalk(v) {\n    var children = v.children,\n        siblings = v.parent.children,\n        w = v.i ? siblings[v.i - 1] : null;\n    if (children) {\n      executeShifts(v);\n      var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n      if (w) {\n        v.z = w.z + separation(v._, w._);\n        v.m = v.z - midpoint;\n      } else {\n        v.z = midpoint;\n      }\n    } else if (w) {\n      v.z = w.z + separation(v._, w._);\n    }\n    v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n  }\n\n  // Computes all real x-coordinates by summing up the modifiers recursively.\n  function secondWalk(v) {\n    v._.x = v.z + v.parent.m;\n    v.m += v.parent.m;\n  }\n\n  // The core of the algorithm. Here, a new subtree is combined with the\n  // previous subtrees. Threads are used to traverse the inside and outside\n  // contours of the left and right subtree up to the highest common level. The\n  // vertices used for the traversals are vi+, vi-, vo-, and vo+, where the\n  // superscript o means outside and i means inside, the subscript - means left\n  // subtree and + means right subtree. For summing up the modifiers along the\n  // contour, we use respective variables si+, si-, so-, and so+. Whenever two\n  // nodes of the inside contours conflict, we compute the left one of the\n  // greatest uncommon ancestors using the function ANCESTOR and call MOVE\n  // SUBTREE to shift the subtree and prepare the shifts of smaller subtrees.\n  // Finally, we add a new thread (if necessary).\n  function apportion(v, w, ancestor) {\n    if (w) {\n      var vip = v,\n          vop = v,\n          vim = w,\n          vom = vip.parent.children[0],\n          sip = vip.m,\n          sop = vop.m,\n          sim = vim.m,\n          som = vom.m,\n          shift;\n      while (vim = nextRight(vim), vip = nextLeft(vip), vim && vip) {\n        vom = nextLeft(vom);\n        vop = nextRight(vop);\n        vop.a = v;\n        shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n        if (shift > 0) {\n          moveSubtree(nextAncestor(vim, v, ancestor), v, shift);\n          sip += shift;\n          sop += shift;\n        }\n        sim += vim.m;\n        sip += vip.m;\n        som += vom.m;\n        sop += vop.m;\n      }\n      if (vim && !nextRight(vop)) {\n        vop.t = vim;\n        vop.m += sim - sop;\n      }\n      if (vip && !nextLeft(vom)) {\n        vom.t = vip;\n        vom.m += sip - som;\n        ancestor = v;\n      }\n    }\n    return ancestor;\n  }\n\n  function sizeNode(node) {\n    node.x *= dx;\n    node.y = node.depth * dy;\n  }\n\n  tree.separation = function(x) {\n    return arguments.length ? (separation = x, tree) : separation;\n  };\n\n  tree.size = function(x) {\n    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], tree) : (nodeSize ? null : [dx, dy]);\n  };\n\n  tree.nodeSize = function(x) {\n    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], tree) : (nodeSize ? [dx, dy] : null);\n  };\n\n  return tree;\n}\n","export default function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      node,\n      i = -1,\n      n = nodes.length,\n      k = parent.value && (y1 - y0) / parent.value;\n\n  while (++i < n) {\n    node = nodes[i], node.x0 = x0, node.x1 = x1;\n    node.y0 = y0, node.y1 = y0 += node.value * k;\n  }\n}\n","import treemapDice from \"./dice\";\nimport treemapSlice from \"./slice\";\n\nexport var phi = (1 + Math.sqrt(5)) / 2;\n\nexport function squarifyRatio(ratio, parent, x0, y0, x1, y1) {\n  var rows = [],\n      nodes = parent.children,\n      row,\n      nodeValue,\n      i0 = 0,\n      i1 = 0,\n      n = nodes.length,\n      dx, dy,\n      value = parent.value,\n      sumValue,\n      minValue,\n      maxValue,\n      newRatio,\n      minRatio,\n      alpha,\n      beta;\n\n  while (i0 < n) {\n    dx = x1 - x0, dy = y1 - y0;\n\n    // Find the next non-empty node.\n    do sumValue = nodes[i1++].value; while (!sumValue && i1 < n);\n    minValue = maxValue = sumValue;\n    alpha = Math.max(dy / dx, dx / dy) / (value * ratio);\n    beta = sumValue * sumValue * alpha;\n    minRatio = Math.max(maxValue / beta, beta / minValue);\n\n    // Keep adding nodes while the aspect ratio maintains or improves.\n    for (; i1 < n; ++i1) {\n      sumValue += nodeValue = nodes[i1].value;\n      if (nodeValue < minValue) minValue = nodeValue;\n      if (nodeValue > maxValue) maxValue = nodeValue;\n      beta = sumValue * sumValue * alpha;\n      newRatio = Math.max(maxValue / beta, beta / minValue);\n      if (newRatio > minRatio) { sumValue -= nodeValue; break; }\n      minRatio = newRatio;\n    }\n\n    // Position and record the row orientation.\n    rows.push(row = {value: sumValue, dice: dx < dy, children: nodes.slice(i0, i1)});\n    if (row.dice) treemapDice(row, x0, y0, x1, value ? y0 += dy * sumValue / value : y1);\n    else treemapSlice(row, x0, y0, value ? x0 += dx * sumValue / value : x1, y1);\n    value -= sumValue, i0 = i1;\n  }\n\n  return rows;\n}\n\nexport default (function custom(ratio) {\n\n  function squarify(parent, x0, y0, x1, y1) {\n    squarifyRatio(ratio, parent, x0, y0, x1, y1);\n  }\n\n  squarify.ratio = function(x) {\n    return custom((x = +x) > 1 ? x : 1);\n  };\n\n  return squarify;\n})(phi);\n","import roundNode from \"./round\";\nimport squarify from \"./squarify\";\nimport {required} from \"../accessors\";\nimport constant, {constantZero} from \"../constant\";\n\nexport default function() {\n  var tile = squarify,\n      round = false,\n      dx = 1,\n      dy = 1,\n      paddingStack = [0],\n      paddingInner = constantZero,\n      paddingTop = constantZero,\n      paddingRight = constantZero,\n      paddingBottom = constantZero,\n      paddingLeft = constantZero;\n\n  function treemap(root) {\n    root.x0 =\n    root.y0 = 0;\n    root.x1 = dx;\n    root.y1 = dy;\n    root.eachBefore(positionNode);\n    paddingStack = [0];\n    if (round) root.eachBefore(roundNode);\n    return root;\n  }\n\n  function positionNode(node) {\n    var p = paddingStack[node.depth],\n        x0 = node.x0 + p,\n        y0 = node.y0 + p,\n        x1 = node.x1 - p,\n        y1 = node.y1 - p;\n    if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n    if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n    node.x0 = x0;\n    node.y0 = y0;\n    node.x1 = x1;\n    node.y1 = y1;\n    if (node.children) {\n      p = paddingStack[node.depth + 1] = paddingInner(node) / 2;\n      x0 += paddingLeft(node) - p;\n      y0 += paddingTop(node) - p;\n      x1 -= paddingRight(node) - p;\n      y1 -= paddingBottom(node) - p;\n      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n      tile(node, x0, y0, x1, y1);\n    }\n  }\n\n  treemap.round = function(x) {\n    return arguments.length ? (round = !!x, treemap) : round;\n  };\n\n  treemap.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], treemap) : [dx, dy];\n  };\n\n  treemap.tile = function(x) {\n    return arguments.length ? (tile = required(x), treemap) : tile;\n  };\n\n  treemap.padding = function(x) {\n    return arguments.length ? treemap.paddingInner(x).paddingOuter(x) : treemap.paddingInner();\n  };\n\n  treemap.paddingInner = function(x) {\n    return arguments.length ? (paddingInner = typeof x === \"function\" ? x : constant(+x), treemap) : paddingInner;\n  };\n\n  treemap.paddingOuter = function(x) {\n    return arguments.length ? treemap.paddingTop(x).paddingRight(x).paddingBottom(x).paddingLeft(x) : treemap.paddingTop();\n  };\n\n  treemap.paddingTop = function(x) {\n    return arguments.length ? (paddingTop = typeof x === \"function\" ? x : constant(+x), treemap) : paddingTop;\n  };\n\n  treemap.paddingRight = function(x) {\n    return arguments.length ? (paddingRight = typeof x === \"function\" ? x : constant(+x), treemap) : paddingRight;\n  };\n\n  treemap.paddingBottom = function(x) {\n    return arguments.length ? (paddingBottom = typeof x === \"function\" ? x : constant(+x), treemap) : paddingBottom;\n  };\n\n  treemap.paddingLeft = function(x) {\n    return arguments.length ? (paddingLeft = typeof x === \"function\" ? x : constant(+x), treemap) : paddingLeft;\n  };\n\n  return treemap;\n}\n","export default function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      i, n = nodes.length,\n      sum, sums = new Array(n + 1);\n\n  for (sums[0] = sum = i = 0; i < n; ++i) {\n    sums[i + 1] = sum += nodes[i].value;\n  }\n\n  partition(0, n, parent.value, x0, y0, x1, y1);\n\n  function partition(i, j, value, x0, y0, x1, y1) {\n    if (i >= j - 1) {\n      var node = nodes[i];\n      node.x0 = x0, node.y0 = y0;\n      node.x1 = x1, node.y1 = y1;\n      return;\n    }\n\n    var valueOffset = sums[i],\n        valueTarget = (value / 2) + valueOffset,\n        k = i + 1,\n        hi = j - 1;\n\n    while (k < hi) {\n      var mid = k + hi >>> 1;\n      if (sums[mid] < valueTarget) k = mid + 1;\n      else hi = mid;\n    }\n\n    if ((valueTarget - sums[k - 1]) < (sums[k] - valueTarget) && i + 1 < k) --k;\n\n    var valueLeft = sums[k] - valueOffset,\n        valueRight = value - valueLeft;\n\n    if ((x1 - x0) > (y1 - y0)) {\n      var xk = (x0 * valueRight + x1 * valueLeft) / value;\n      partition(i, k, valueLeft, x0, y0, xk, y1);\n      partition(k, j, valueRight, xk, y0, x1, y1);\n    } else {\n      var yk = (y0 * valueRight + y1 * valueLeft) / value;\n      partition(i, k, valueLeft, x0, y0, x1, yk);\n      partition(k, j, valueRight, x0, yk, x1, y1);\n    }\n  }\n}\n","import dice from \"./dice\";\nimport slice from \"./slice\";\n\nexport default function(parent, x0, y0, x1, y1) {\n  (parent.depth & 1 ? slice : dice)(parent, x0, y0, x1, y1);\n}\n","import treemapDice from \"./dice\";\nimport treemapSlice from \"./slice\";\nimport {phi, squarifyRatio} from \"./squarify\";\n\nexport default (function custom(ratio) {\n\n  function resquarify(parent, x0, y0, x1, y1) {\n    if ((rows = parent._squarify) && (rows.ratio === ratio)) {\n      var rows,\n          row,\n          nodes,\n          i,\n          j = -1,\n          n,\n          m = rows.length,\n          value = parent.value;\n\n      while (++j < m) {\n        row = rows[j], nodes = row.children;\n        for (i = row.value = 0, n = nodes.length; i < n; ++i) row.value += nodes[i].value;\n        if (row.dice) treemapDice(row, x0, y0, x1, y0 += (y1 - y0) * row.value / value);\n        else treemapSlice(row, x0, y0, x0 += (x1 - x0) * row.value / value, y1);\n        value -= row.value;\n      }\n    } else {\n      parent._squarify = rows = squarifyRatio(ratio, parent, x0, y0, x1, y1);\n      rows.ratio = ratio;\n    }\n  }\n\n  resquarify.ratio = function(x) {\n    return custom((x = +x) > 1 ? x : 1);\n  };\n\n  return resquarify;\n})(phi);\n","export default function(polygon) {\n  var i = -1,\n      n = polygon.length,\n      a,\n      b = polygon[n - 1],\n      area = 0;\n\n  while (++i < n) {\n    a = b;\n    b = polygon[i];\n    area += a[1] * b[0] - a[0] * b[1];\n  }\n\n  return area / 2;\n}\n","export default function(polygon) {\n  var i = -1,\n      n = polygon.length,\n      x = 0,\n      y = 0,\n      a,\n      b = polygon[n - 1],\n      c,\n      k = 0;\n\n  while (++i < n) {\n    a = b;\n    b = polygon[i];\n    k += c = a[0] * b[1] - b[0] * a[1];\n    x += (a[0] + b[0]) * c;\n    y += (a[1] + b[1]) * c;\n  }\n\n  return k *= 3, [x / k, y / k];\n}\n","// Returns the 2D cross product of AB and AC vectors, i.e., the z-component of\n// the 3D cross product in a quadrant I Cartesian coordinate system (+x is\n// right, +y is up). Returns a positive value if ABC is counter-clockwise,\n// negative if clockwise, and zero if the points are collinear.\nexport default function(a, b, c) {\n  return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n}\n","import cross from \"./cross\";\n\nfunction lexicographicOrder(a, b) {\n  return a[0] - b[0] || a[1] - b[1];\n}\n\n// Computes the upper convex hull per the monotone chain algorithm.\n// Assumes points.length >= 3, is sorted by x, unique in y.\n// Returns an array of indices into points in left-to-right order.\nfunction computeUpperHullIndexes(points) {\n  var n = points.length,\n      indexes = [0, 1],\n      size = 2;\n\n  for (var i = 2; i < n; ++i) {\n    while (size > 1 && cross(points[indexes[size - 2]], points[indexes[size - 1]], points[i]) <= 0) --size;\n    indexes[size++] = i;\n  }\n\n  return indexes.slice(0, size); // remove popped points\n}\n\nexport default function(points) {\n  if ((n = points.length) < 3) return null;\n\n  var i,\n      n,\n      sortedPoints = new Array(n),\n      flippedPoints = new Array(n);\n\n  for (i = 0; i < n; ++i) sortedPoints[i] = [+points[i][0], +points[i][1], i];\n  sortedPoints.sort(lexicographicOrder);\n  for (i = 0; i < n; ++i) flippedPoints[i] = [sortedPoints[i][0], -sortedPoints[i][1]];\n\n  var upperIndexes = computeUpperHullIndexes(sortedPoints),\n      lowerIndexes = computeUpperHullIndexes(flippedPoints);\n\n  // Construct the hull polygon, removing possible duplicate endpoints.\n  var skipLeft = lowerIndexes[0] === upperIndexes[0],\n      skipRight = lowerIndexes[lowerIndexes.length - 1] === upperIndexes[upperIndexes.length - 1],\n      hull = [];\n\n  // Add upper hull in right-to-l order.\n  // Then add lower hull in left-to-right order.\n  for (i = upperIndexes.length - 1; i >= 0; --i) hull.push(points[sortedPoints[upperIndexes[i]][2]]);\n  for (i = +skipLeft; i < lowerIndexes.length - skipRight; ++i) hull.push(points[sortedPoints[lowerIndexes[i]][2]]);\n\n  return hull;\n}\n","export default function(polygon, point) {\n  var n = polygon.length,\n      p = polygon[n - 1],\n      x = point[0], y = point[1],\n      x0 = p[0], y0 = p[1],\n      x1, y1,\n      inside = false;\n\n  for (var i = 0; i < n; ++i) {\n    p = polygon[i], x1 = p[0], y1 = p[1];\n    if (((y1 > y) !== (y0 > y)) && (x < (x0 - x1) * (y - y1) / (y0 - y1) + x1)) inside = !inside;\n    x0 = x1, y0 = y1;\n  }\n\n  return inside;\n}\n","export default function(polygon) {\n  var i = -1,\n      n = polygon.length,\n      b = polygon[n - 1],\n      xa,\n      ya,\n      xb = b[0],\n      yb = b[1],\n      perimeter = 0;\n\n  while (++i < n) {\n    xa = xb;\n    ya = yb;\n    b = polygon[i];\n    xb = b[0];\n    yb = b[1];\n    xa -= xb;\n    ya -= yb;\n    perimeter += Math.sqrt(xa * xa + ya * ya);\n  }\n\n  return perimeter;\n}\n","export default function() {\n  return Math.random();\n}\n","import defaultSource from \"./defaultSource\";\n\nexport default (function sourceRandomUniform(source) {\n  function randomUniform(min, max) {\n    min = min == null ? 0 : +min;\n    max = max == null ? 1 : +max;\n    if (arguments.length === 1) max = min, min = 0;\n    else max -= min;\n    return function() {\n      return source() * max + min;\n    };\n  }\n\n  randomUniform.source = sourceRandomUniform;\n\n  return randomUniform;\n})(defaultSource);\n","import defaultSource from \"./defaultSource\";\n\nexport default (function sourceRandomNormal(source) {\n  function randomNormal(mu, sigma) {\n    var x, r;\n    mu = mu == null ? 0 : +mu;\n    sigma = sigma == null ? 1 : +sigma;\n    return function() {\n      var y;\n\n      // If available, use the second previously-generated uniform random.\n      if (x != null) y = x, x = null;\n\n      // Otherwise, generate a new x and y.\n      else do {\n        x = source() * 2 - 1;\n        y = source() * 2 - 1;\n        r = x * x + y * y;\n      } while (!r || r > 1);\n\n      return mu + sigma * y * Math.sqrt(-2 * Math.log(r) / r);\n    };\n  }\n\n  randomNormal.source = sourceRandomNormal;\n\n  return randomNormal;\n})(defaultSource);\n","import defaultSource from \"./defaultSource\";\nimport normal from \"./normal\";\n\nexport default (function sourceRandomLogNormal(source) {\n  function randomLogNormal() {\n    var randomNormal = normal.source(source).apply(this, arguments);\n    return function() {\n      return Math.exp(randomNormal());\n    };\n  }\n\n  randomLogNormal.source = sourceRandomLogNormal;\n\n  return randomLogNormal;\n})(defaultSource);\n","import defaultSource from \"./defaultSource\";\n\nexport default (function sourceRandomIrwinHall(source) {\n  function randomIrwinHall(n) {\n    return function() {\n      for (var sum = 0, i = 0; i < n; ++i) sum += source();\n      return sum;\n    };\n  }\n\n  randomIrwinHall.source = sourceRandomIrwinHall;\n\n  return randomIrwinHall;\n})(defaultSource);\n","import defaultSource from \"./defaultSource\";\nimport irwinHall from \"./irwinHall\";\n\nexport default (function sourceRandomBates(source) {\n  function randomBates(n) {\n    var randomIrwinHall = irwinHall.source(source)(n);\n    return function() {\n      return randomIrwinHall() / n;\n    };\n  }\n\n  randomBates.source = sourceRandomBates;\n\n  return randomBates;\n})(defaultSource);\n","import defaultSource from \"./defaultSource\";\n\nexport default (function sourceRandomExponential(source) {\n  function randomExponential(lambda) {\n    return function() {\n      return -Math.log(1 - source()) / lambda;\n    };\n  }\n\n  randomExponential.source = sourceRandomExponential;\n\n  return randomExponential;\n})(defaultSource);\n","var array = Array.prototype;\n\nexport var map = array.map;\nexport var slice = array.slice;\n","import {map} from \"d3-collection\";\nimport {slice} from \"./array\";\n\nexport var implicit = {name: \"implicit\"};\n\nexport default function ordinal(range) {\n  var index = map(),\n      domain = [],\n      unknown = implicit;\n\n  range = range == null ? [] : slice.call(range);\n\n  function scale(d) {\n    var key = d + \"\", i = index.get(key);\n    if (!i) {\n      if (unknown !== implicit) return unknown;\n      index.set(key, i = domain.push(d));\n    }\n    return range[(i - 1) % range.length];\n  }\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [], index = map();\n    var i = -1, n = _.length, d, key;\n    while (++i < n) if (!index.has(key = (d = _[i]) + \"\")) index.set(key, domain.push(d));\n    return scale;\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), scale) : range.slice();\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  scale.copy = function() {\n    return ordinal()\n        .domain(domain)\n        .range(range)\n        .unknown(unknown);\n  };\n\n  return scale;\n}\n","import {range as sequence} from \"d3-array\";\nimport ordinal from \"./ordinal\";\n\nexport default function band() {\n  var scale = ordinal().unknown(undefined),\n      domain = scale.domain,\n      ordinalRange = scale.range,\n      range = [0, 1],\n      step,\n      bandwidth,\n      round = false,\n      paddingInner = 0,\n      paddingOuter = 0,\n      align = 0.5;\n\n  delete scale.unknown;\n\n  function rescale() {\n    var n = domain().length,\n        reverse = range[1] < range[0],\n        start = range[reverse - 0],\n        stop = range[1 - reverse];\n    step = (stop - start) / Math.max(1, n - paddingInner + paddingOuter * 2);\n    if (round) step = Math.floor(step);\n    start += (stop - start - step * (n - paddingInner)) * align;\n    bandwidth = step * (1 - paddingInner);\n    if (round) start = Math.round(start), bandwidth = Math.round(bandwidth);\n    var values = sequence(n).map(function(i) { return start + step * i; });\n    return ordinalRange(reverse ? values.reverse() : values);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = [+_[0], +_[1]], rescale()) : range.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range = [+_[0], +_[1]], round = true, rescale();\n  };\n\n  scale.bandwidth = function() {\n    return bandwidth;\n  };\n\n  scale.step = function() {\n    return step;\n  };\n\n  scale.round = function(_) {\n    return arguments.length ? (round = !!_, rescale()) : round;\n  };\n\n  scale.padding = function(_) {\n    return arguments.length ? (paddingInner = paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n  };\n\n  scale.paddingInner = function(_) {\n    return arguments.length ? (paddingInner = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n  };\n\n  scale.paddingOuter = function(_) {\n    return arguments.length ? (paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingOuter;\n  };\n\n  scale.align = function(_) {\n    return arguments.length ? (align = Math.max(0, Math.min(1, _)), rescale()) : align;\n  };\n\n  scale.copy = function() {\n    return band()\n        .domain(domain())\n        .range(range)\n        .round(round)\n        .paddingInner(paddingInner)\n        .paddingOuter(paddingOuter)\n        .align(align);\n  };\n\n  return rescale();\n}\n\nfunction pointish(scale) {\n  var copy = scale.copy;\n\n  scale.padding = scale.paddingOuter;\n  delete scale.paddingInner;\n  delete scale.paddingOuter;\n\n  scale.copy = function() {\n    return pointish(copy());\n  };\n\n  return scale;\n}\n\nexport function point() {\n  return pointish(band().paddingInner(1));\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function(x) {\n  return +x;\n}\n","import {bisect} from \"d3-array\";\nimport {interpolate as interpolateValue, interpolateRound} from \"d3-interpolate\";\nimport {map, slice} from \"./array\";\nimport constant from \"./constant\";\nimport number from \"./number\";\n\nvar unit = [0, 1];\n\nexport function deinterpolateLinear(a, b) {\n  return (b -= (a = +a))\n      ? function(x) { return (x - a) / b; }\n      : constant(b);\n}\n\nfunction deinterpolateClamp(deinterpolate) {\n  return function(a, b) {\n    var d = deinterpolate(a = +a, b = +b);\n    return function(x) { return x <= a ? 0 : x >= b ? 1 : d(x); };\n  };\n}\n\nfunction reinterpolateClamp(reinterpolate) {\n  return function(a, b) {\n    var r = reinterpolate(a = +a, b = +b);\n    return function(t) { return t <= 0 ? a : t >= 1 ? b : r(t); };\n  };\n}\n\nfunction bimap(domain, range, deinterpolate, reinterpolate) {\n  var d0 = domain[0], d1 = domain[1], r0 = range[0], r1 = range[1];\n  if (d1 < d0) d0 = deinterpolate(d1, d0), r0 = reinterpolate(r1, r0);\n  else d0 = deinterpolate(d0, d1), r0 = reinterpolate(r0, r1);\n  return function(x) { return r0(d0(x)); };\n}\n\nfunction polymap(domain, range, deinterpolate, reinterpolate) {\n  var j = Math.min(domain.length, range.length) - 1,\n      d = new Array(j),\n      r = new Array(j),\n      i = -1;\n\n  // Reverse descending domains.\n  if (domain[j] < domain[0]) {\n    domain = domain.slice().reverse();\n    range = range.slice().reverse();\n  }\n\n  while (++i < j) {\n    d[i] = deinterpolate(domain[i], domain[i + 1]);\n    r[i] = reinterpolate(range[i], range[i + 1]);\n  }\n\n  return function(x) {\n    var i = bisect(domain, x, 1, j) - 1;\n    return r[i](d[i](x));\n  };\n}\n\nexport function copy(source, target) {\n  return target\n      .domain(source.domain())\n      .range(source.range())\n      .interpolate(source.interpolate())\n      .clamp(source.clamp());\n}\n\n// deinterpolate(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].\n// reinterpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding domain value x in [a,b].\nexport default function continuous(deinterpolate, reinterpolate) {\n  var domain = unit,\n      range = unit,\n      interpolate = interpolateValue,\n      clamp = false,\n      piecewise,\n      output,\n      input;\n\n  function rescale() {\n    piecewise = Math.min(domain.length, range.length) > 2 ? polymap : bimap;\n    output = input = null;\n    return scale;\n  }\n\n  function scale(x) {\n    return (output || (output = piecewise(domain, range, clamp ? deinterpolateClamp(deinterpolate) : deinterpolate, interpolate)))(+x);\n  }\n\n  scale.invert = function(y) {\n    return (input || (input = piecewise(range, domain, deinterpolateLinear, clamp ? reinterpolateClamp(reinterpolate) : reinterpolate)))(+y);\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = map.call(_, number), rescale()) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), rescale()) : range.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range = slice.call(_), interpolate = interpolateRound, rescale();\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, rescale()) : clamp;\n  };\n\n  scale.interpolate = function(_) {\n    return arguments.length ? (interpolate = _, rescale()) : interpolate;\n  };\n\n  return rescale();\n}\n","import {tickStep} from \"d3-array\";\nimport {format, formatPrefix, formatSpecifier, precisionFixed, precisionPrefix, precisionRound} from \"d3-format\";\n\nexport default function(domain, count, specifier) {\n  var start = domain[0],\n      stop = domain[domain.length - 1],\n      step = tickStep(start, stop, count == null ? 10 : count),\n      precision;\n  specifier = formatSpecifier(specifier == null ? \",f\" : specifier);\n  switch (specifier.type) {\n    case \"s\": {\n      var value = Math.max(Math.abs(start), Math.abs(stop));\n      if (specifier.precision == null && !isNaN(precision = precisionPrefix(step, value))) specifier.precision = precision;\n      return formatPrefix(specifier, value);\n    }\n    case \"\":\n    case \"e\":\n    case \"g\":\n    case \"p\":\n    case \"r\": {\n      if (specifier.precision == null && !isNaN(precision = precisionRound(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === \"e\");\n      break;\n    }\n    case \"f\":\n    case \"%\": {\n      if (specifier.precision == null && !isNaN(precision = precisionFixed(step))) specifier.precision = precision - (specifier.type === \"%\") * 2;\n      break;\n    }\n  }\n  return format(specifier);\n}\n","import {ticks, tickIncrement} from \"d3-array\";\nimport {interpolateNumber as reinterpolate} from \"d3-interpolate\";\nimport {default as continuous, copy, deinterpolateLinear as deinterpolate} from \"./continuous\";\nimport tickFormat from \"./tickFormat\";\n\nexport function linearish(scale) {\n  var domain = scale.domain;\n\n  scale.ticks = function(count) {\n    var d = domain();\n    return ticks(d[0], d[d.length - 1], count == null ? 10 : count);\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return tickFormat(domain(), count, specifier);\n  };\n\n  scale.nice = function(count) {\n    if (count == null) count = 10;\n\n    var d = domain(),\n        i0 = 0,\n        i1 = d.length - 1,\n        start = d[i0],\n        stop = d[i1],\n        step;\n\n    if (stop < start) {\n      step = start, start = stop, stop = step;\n      step = i0, i0 = i1, i1 = step;\n    }\n\n    step = tickIncrement(start, stop, count);\n\n    if (step > 0) {\n      start = Math.floor(start / step) * step;\n      stop = Math.ceil(stop / step) * step;\n      step = tickIncrement(start, stop, count);\n    } else if (step < 0) {\n      start = Math.ceil(start * step) / step;\n      stop = Math.floor(stop * step) / step;\n      step = tickIncrement(start, stop, count);\n    }\n\n    if (step > 0) {\n      d[i0] = Math.floor(start / step) * step;\n      d[i1] = Math.ceil(stop / step) * step;\n      domain(d);\n    } else if (step < 0) {\n      d[i0] = Math.ceil(start * step) / step;\n      d[i1] = Math.floor(stop * step) / step;\n      domain(d);\n    }\n\n    return scale;\n  };\n\n  return scale;\n}\n\nexport default function linear() {\n  var scale = continuous(deinterpolate, reinterpolate);\n\n  scale.copy = function() {\n    return copy(scale, linear());\n  };\n\n  return linearish(scale);\n}\n","import {map} from \"./array\";\nimport {linearish} from \"./linear\";\nimport number from \"./number\";\n\nexport default function identity() {\n  var domain = [0, 1];\n\n  function scale(x) {\n    return +x;\n  }\n\n  scale.invert = scale;\n\n  scale.domain = scale.range = function(_) {\n    return arguments.length ? (domain = map.call(_, number), scale) : domain.slice();\n  };\n\n  scale.copy = function() {\n    return identity().domain(domain);\n  };\n\n  return linearish(scale);\n}\n","export default function(domain, interval) {\n  domain = domain.slice();\n\n  var i0 = 0,\n      i1 = domain.length - 1,\n      x0 = domain[i0],\n      x1 = domain[i1],\n      t;\n\n  if (x1 < x0) {\n    t = i0, i0 = i1, i1 = t;\n    t = x0, x0 = x1, x1 = t;\n  }\n\n  domain[i0] = interval.floor(x0);\n  domain[i1] = interval.ceil(x1);\n  return domain;\n}\n","import {ticks} from \"d3-array\";\nimport {format} from \"d3-format\";\nimport constant from \"./constant\";\nimport nice from \"./nice\";\nimport {default as continuous, copy} from \"./continuous\";\n\nfunction deinterpolate(a, b) {\n  return (b = Math.log(b / a))\n      ? function(x) { return Math.log(x / a) / b; }\n      : constant(b);\n}\n\nfunction reinterpolate(a, b) {\n  return a < 0\n      ? function(t) { return -Math.pow(-b, t) * Math.pow(-a, 1 - t); }\n      : function(t) { return Math.pow(b, t) * Math.pow(a, 1 - t); };\n}\n\nfunction pow10(x) {\n  return isFinite(x) ? +(\"1e\" + x) : x < 0 ? 0 : x;\n}\n\nfunction powp(base) {\n  return base === 10 ? pow10\n      : base === Math.E ? Math.exp\n      : function(x) { return Math.pow(base, x); };\n}\n\nfunction logp(base) {\n  return base === Math.E ? Math.log\n      : base === 10 && Math.log10\n      || base === 2 && Math.log2\n      || (base = Math.log(base), function(x) { return Math.log(x) / base; });\n}\n\nfunction reflect(f) {\n  return function(x) {\n    return -f(-x);\n  };\n}\n\nexport default function log() {\n  var scale = continuous(deinterpolate, reinterpolate).domain([1, 10]),\n      domain = scale.domain,\n      base = 10,\n      logs = logp(10),\n      pows = powp(10);\n\n  function rescale() {\n    logs = logp(base), pows = powp(base);\n    if (domain()[0] < 0) logs = reflect(logs), pows = reflect(pows);\n    return scale;\n  }\n\n  scale.base = function(_) {\n    return arguments.length ? (base = +_, rescale()) : base;\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.ticks = function(count) {\n    var d = domain(),\n        u = d[0],\n        v = d[d.length - 1],\n        r;\n\n    if (r = v < u) i = u, u = v, v = i;\n\n    var i = logs(u),\n        j = logs(v),\n        p,\n        k,\n        t,\n        n = count == null ? 10 : +count,\n        z = [];\n\n    if (!(base % 1) && j - i < n) {\n      i = Math.round(i) - 1, j = Math.round(j) + 1;\n      if (u > 0) for (; i < j; ++i) {\n        for (k = 1, p = pows(i); k < base; ++k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      } else for (; i < j; ++i) {\n        for (k = base - 1, p = pows(i); k >= 1; --k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      }\n    } else {\n      z = ticks(i, j, Math.min(j - i, n)).map(pows);\n    }\n\n    return r ? z.reverse() : z;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    if (specifier == null) specifier = base === 10 ? \".0e\" : \",\";\n    if (typeof specifier !== \"function\") specifier = format(specifier);\n    if (count === Infinity) return specifier;\n    if (count == null) count = 10;\n    var k = Math.max(1, base * count / scale.ticks().length); // TODO fast estimate?\n    return function(d) {\n      var i = d / pows(Math.round(logs(d)));\n      if (i * base < base - 0.5) i *= base;\n      return i <= k ? specifier(d) : \"\";\n    };\n  };\n\n  scale.nice = function() {\n    return domain(nice(domain(), {\n      floor: function(x) { return pows(Math.floor(logs(x))); },\n      ceil: function(x) { return pows(Math.ceil(logs(x))); }\n    }));\n  };\n\n  scale.copy = function() {\n    return copy(scale, log().base(base));\n  };\n\n  return scale;\n}\n","import constant from \"./constant\";\nimport {linearish} from \"./linear\";\nimport {default as continuous, copy} from \"./continuous\";\n\nfunction raise(x, exponent) {\n  return x < 0 ? -Math.pow(-x, exponent) : Math.pow(x, exponent);\n}\n\nexport default function pow() {\n  var exponent = 1,\n      scale = continuous(deinterpolate, reinterpolate),\n      domain = scale.domain;\n\n  function deinterpolate(a, b) {\n    return (b = raise(b, exponent) - (a = raise(a, exponent)))\n        ? function(x) { return (raise(x, exponent) - a) / b; }\n        : constant(b);\n  }\n\n  function reinterpolate(a, b) {\n    b = raise(b, exponent) - (a = raise(a, exponent));\n    return function(t) { return raise(a + b * t, 1 / exponent); };\n  }\n\n  scale.exponent = function(_) {\n    return arguments.length ? (exponent = +_, domain(domain())) : exponent;\n  };\n\n  scale.copy = function() {\n    return copy(scale, pow().exponent(exponent));\n  };\n\n  return linearish(scale);\n}\n\nexport function sqrt() {\n  return pow().exponent(0.5);\n}\n","import {ascending, bisect, quantile as threshold} from \"d3-array\";\nimport {slice} from \"./array\";\n\nexport default function quantile() {\n  var domain = [],\n      range = [],\n      thresholds = [];\n\n  function rescale() {\n    var i = 0, n = Math.max(1, range.length);\n    thresholds = new Array(n - 1);\n    while (++i < n) thresholds[i - 1] = threshold(domain, i / n);\n    return scale;\n  }\n\n  function scale(x) {\n    if (!isNaN(x = +x)) return range[bisect(thresholds, x)];\n  }\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return i < 0 ? [NaN, NaN] : [\n      i > 0 ? thresholds[i - 1] : domain[0],\n      i < thresholds.length ? thresholds[i] : domain[domain.length - 1]\n    ];\n  };\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [];\n    for (var i = 0, n = _.length, d; i < n; ++i) if (d = _[i], d != null && !isNaN(d = +d)) domain.push(d);\n    domain.sort(ascending);\n    return rescale();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), rescale()) : range.slice();\n  };\n\n  scale.quantiles = function() {\n    return thresholds.slice();\n  };\n\n  scale.copy = function() {\n    return quantile()\n        .domain(domain)\n        .range(range);\n  };\n\n  return scale;\n}\n","import {bisect} from \"d3-array\";\nimport {slice} from \"./array\";\nimport {linearish} from \"./linear\";\n\nexport default function quantize() {\n  var x0 = 0,\n      x1 = 1,\n      n = 1,\n      domain = [0.5],\n      range = [0, 1];\n\n  function scale(x) {\n    if (x <= x) return range[bisect(domain, x, 0, n)];\n  }\n\n  function rescale() {\n    var i = -1;\n    domain = new Array(n);\n    while (++i < n) domain[i] = ((i + 1) * x1 - (i - n) * x0) / (n + 1);\n    return scale;\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], rescale()) : [x0, x1];\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (n = (range = slice.call(_)).length - 1, rescale()) : range.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return i < 0 ? [NaN, NaN]\n        : i < 1 ? [x0, domain[0]]\n        : i >= n ? [domain[n - 1], x1]\n        : [domain[i - 1], domain[i]];\n  };\n\n  scale.copy = function() {\n    return quantize()\n        .domain([x0, x1])\n        .range(range);\n  };\n\n  return linearish(scale);\n}\n","import {bisect} from \"d3-array\";\nimport {slice} from \"./array\";\n\nexport default function threshold() {\n  var domain = [0.5],\n      range = [0, 1],\n      n = 1;\n\n  function scale(x) {\n    if (x <= x) return range[bisect(domain, x, 0, n)];\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = slice.call(_), n = Math.min(domain.length, range.length - 1), scale) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), n = Math.min(domain.length, range.length - 1), scale) : range.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return [domain[i - 1], domain[i]];\n  };\n\n  scale.copy = function() {\n    return threshold()\n        .domain(domain)\n        .range(range);\n  };\n\n  return scale;\n}\n","var t0 = new Date,\n    t1 = new Date;\n\nexport default function newInterval(floori, offseti, count, field) {\n\n  function interval(date) {\n    return floori(date = new Date(+date)), date;\n  }\n\n  interval.floor = interval;\n\n  interval.ceil = function(date) {\n    return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;\n  };\n\n  interval.round = function(date) {\n    var d0 = interval(date),\n        d1 = interval.ceil(date);\n    return date - d0 < d1 - date ? d0 : d1;\n  };\n\n  interval.offset = function(date, step) {\n    return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;\n  };\n\n  interval.range = function(start, stop, step) {\n    var range = [], previous;\n    start = interval.ceil(start);\n    step = step == null ? 1 : Math.floor(step);\n    if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date\n    do range.push(previous = new Date(+start)), offseti(start, step), floori(start);\n    while (previous < start && start < stop);\n    return range;\n  };\n\n  interval.filter = function(test) {\n    return newInterval(function(date) {\n      if (date >= date) while (floori(date), !test(date)) date.setTime(date - 1);\n    }, function(date, step) {\n      if (date >= date) {\n        if (step < 0) while (++step <= 0) {\n          while (offseti(date, -1), !test(date)) {} // eslint-disable-line no-empty\n        } else while (--step >= 0) {\n          while (offseti(date, +1), !test(date)) {} // eslint-disable-line no-empty\n        }\n      }\n    });\n  };\n\n  if (count) {\n    interval.count = function(start, end) {\n      t0.setTime(+start), t1.setTime(+end);\n      floori(t0), floori(t1);\n      return Math.floor(count(t0, t1));\n    };\n\n    interval.every = function(step) {\n      step = Math.floor(step);\n      return !isFinite(step) || !(step > 0) ? null\n          : !(step > 1) ? interval\n          : interval.filter(field\n              ? function(d) { return field(d) % step === 0; }\n              : function(d) { return interval.count(0, d) % step === 0; });\n    };\n  }\n\n  return interval;\n}\n","import interval from \"./interval\";\n\nvar millisecond = interval(function() {\n  // noop\n}, function(date, step) {\n  date.setTime(+date + step);\n}, function(start, end) {\n  return end - start;\n});\n\n// An optimized implementation for this simple case.\nmillisecond.every = function(k) {\n  k = Math.floor(k);\n  if (!isFinite(k) || !(k > 0)) return null;\n  if (!(k > 1)) return millisecond;\n  return interval(function(date) {\n    date.setTime(Math.floor(date / k) * k);\n  }, function(date, step) {\n    date.setTime(+date + step * k);\n  }, function(start, end) {\n    return (end - start) / k;\n  });\n};\n\nexport default millisecond;\nexport var milliseconds = millisecond.range;\n","export var durationSecond = 1e3;\nexport var durationMinute = 6e4;\nexport var durationHour = 36e5;\nexport var durationDay = 864e5;\nexport var durationWeek = 6048e5;\n","import interval from \"./interval\";\nimport {durationSecond} from \"./duration\";\n\nvar second = interval(function(date) {\n  date.setTime(Math.floor(date / durationSecond) * durationSecond);\n}, function(date, step) {\n  date.setTime(+date + step * durationSecond);\n}, function(start, end) {\n  return (end - start) / durationSecond;\n}, function(date) {\n  return date.getUTCSeconds();\n});\n\nexport default second;\nexport var seconds = second.range;\n","import interval from \"./interval\";\nimport {durationMinute} from \"./duration\";\n\nvar minute = interval(function(date) {\n  date.setTime(Math.floor(date / durationMinute) * durationMinute);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute);\n}, function(start, end) {\n  return (end - start) / durationMinute;\n}, function(date) {\n  return date.getMinutes();\n});\n\nexport default minute;\nexport var minutes = minute.range;\n","import interval from \"./interval\";\nimport {durationHour, durationMinute} from \"./duration\";\n\nvar hour = interval(function(date) {\n  var offset = date.getTimezoneOffset() * durationMinute % durationHour;\n  if (offset < 0) offset += durationHour;\n  date.setTime(Math.floor((+date - offset) / durationHour) * durationHour + offset);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour);\n}, function(start, end) {\n  return (end - start) / durationHour;\n}, function(date) {\n  return date.getHours();\n});\n\nexport default hour;\nexport var hours = hour.range;\n","import interval from \"./interval\";\nimport {durationDay, durationMinute} from \"./duration\";\n\nvar day = interval(function(date) {\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setDate(date.getDate() + step);\n}, function(start, end) {\n  return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationDay;\n}, function(date) {\n  return date.getDate() - 1;\n});\n\nexport default day;\nexport var days = day.range;\n","import interval from \"./interval\";\nimport {durationMinute, durationWeek} from \"./duration\";\n\nfunction weekday(i) {\n  return interval(function(date) {\n    date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setDate(date.getDate() + step * 7);\n  }, function(start, end) {\n    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationWeek;\n  });\n}\n\nexport var sunday = weekday(0);\nexport var monday = weekday(1);\nexport var tuesday = weekday(2);\nexport var wednesday = weekday(3);\nexport var thursday = weekday(4);\nexport var friday = weekday(5);\nexport var saturday = weekday(6);\n\nexport var sundays = sunday.range;\nexport var mondays = monday.range;\nexport var tuesdays = tuesday.range;\nexport var wednesdays = wednesday.range;\nexport var thursdays = thursday.range;\nexport var fridays = friday.range;\nexport var saturdays = saturday.range;\n","import interval from \"./interval\";\n\nvar month = interval(function(date) {\n  date.setDate(1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setMonth(date.getMonth() + step);\n}, function(start, end) {\n  return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;\n}, function(date) {\n  return date.getMonth();\n});\n\nexport default month;\nexport var months = month.range;\n","import interval from \"./interval\";\n\nvar year = interval(function(date) {\n  date.setMonth(0, 1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setFullYear(date.getFullYear() + step);\n}, function(start, end) {\n  return end.getFullYear() - start.getFullYear();\n}, function(date) {\n  return date.getFullYear();\n});\n\n// An optimized implementation for this simple case.\nyear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : interval(function(date) {\n    date.setFullYear(Math.floor(date.getFullYear() / k) * k);\n    date.setMonth(0, 1);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setFullYear(date.getFullYear() + step * k);\n  });\n};\n\nexport default year;\nexport var years = year.range;\n","import interval from \"./interval\";\nimport {durationMinute} from \"./duration\";\n\nvar utcMinute = interval(function(date) {\n  date.setUTCSeconds(0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute);\n}, function(start, end) {\n  return (end - start) / durationMinute;\n}, function(date) {\n  return date.getUTCMinutes();\n});\n\nexport default utcMinute;\nexport var utcMinutes = utcMinute.range;\n","import interval from \"./interval\";\nimport {durationHour} from \"./duration\";\n\nvar utcHour = interval(function(date) {\n  date.setUTCMinutes(0, 0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour);\n}, function(start, end) {\n  return (end - start) / durationHour;\n}, function(date) {\n  return date.getUTCHours();\n});\n\nexport default utcHour;\nexport var utcHours = utcHour.range;\n","import interval from \"./interval\";\nimport {durationDay} from \"./duration\";\n\nvar utcDay = interval(function(date) {\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCDate(date.getUTCDate() + step);\n}, function(start, end) {\n  return (end - start) / durationDay;\n}, function(date) {\n  return date.getUTCDate() - 1;\n});\n\nexport default utcDay;\nexport var utcDays = utcDay.range;\n","import interval from \"./interval\";\nimport {durationWeek} from \"./duration\";\n\nfunction utcWeekday(i) {\n  return interval(function(date) {\n    date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCDate(date.getUTCDate() + step * 7);\n  }, function(start, end) {\n    return (end - start) / durationWeek;\n  });\n}\n\nexport var utcSunday = utcWeekday(0);\nexport var utcMonday = utcWeekday(1);\nexport var utcTuesday = utcWeekday(2);\nexport var utcWednesday = utcWeekday(3);\nexport var utcThursday = utcWeekday(4);\nexport var utcFriday = utcWeekday(5);\nexport var utcSaturday = utcWeekday(6);\n\nexport var utcSundays = utcSunday.range;\nexport var utcMondays = utcMonday.range;\nexport var utcTuesdays = utcTuesday.range;\nexport var utcWednesdays = utcWednesday.range;\nexport var utcThursdays = utcThursday.range;\nexport var utcFridays = utcFriday.range;\nexport var utcSaturdays = utcSaturday.range;\n","import interval from \"./interval\";\n\nvar utcMonth = interval(function(date) {\n  date.setUTCDate(1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCMonth(date.getUTCMonth() + step);\n}, function(start, end) {\n  return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;\n}, function(date) {\n  return date.getUTCMonth();\n});\n\nexport default utcMonth;\nexport var utcMonths = utcMonth.range;\n","import interval from \"./interval\";\n\nvar utcYear = interval(function(date) {\n  date.setUTCMonth(0, 1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCFullYear(date.getUTCFullYear() + step);\n}, function(start, end) {\n  return end.getUTCFullYear() - start.getUTCFullYear();\n}, function(date) {\n  return date.getUTCFullYear();\n});\n\n// An optimized implementation for this simple case.\nutcYear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : interval(function(date) {\n    date.setUTCFullYear(Math.floor(date.getUTCFullYear() / k) * k);\n    date.setUTCMonth(0, 1);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCFullYear(date.getUTCFullYear() + step * k);\n  });\n};\n\nexport default utcYear;\nexport var utcYears = utcYear.range;\n","import {\n  timeDay,\n  timeSunday,\n  timeMonday,\n  timeThursday,\n  timeYear,\n  utcDay,\n  utcSunday,\n  utcMonday,\n  utcThursday,\n  utcYear\n} from \"d3-time\";\n\nfunction localDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(-1, d.m, d.d, d.H, d.M, d.S, d.L);\n    date.setFullYear(d.y);\n    return date;\n  }\n  return new Date(d.y, d.m, d.d, d.H, d.M, d.S, d.L);\n}\n\nfunction utcDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(Date.UTC(-1, d.m, d.d, d.H, d.M, d.S, d.L));\n    date.setUTCFullYear(d.y);\n    return date;\n  }\n  return new Date(Date.UTC(d.y, d.m, d.d, d.H, d.M, d.S, d.L));\n}\n\nfunction newYear(y) {\n  return {y: y, m: 0, d: 1, H: 0, M: 0, S: 0, L: 0};\n}\n\nexport default function formatLocale(locale) {\n  var locale_dateTime = locale.dateTime,\n      locale_date = locale.date,\n      locale_time = locale.time,\n      locale_periods = locale.periods,\n      locale_weekdays = locale.days,\n      locale_shortWeekdays = locale.shortDays,\n      locale_months = locale.months,\n      locale_shortMonths = locale.shortMonths;\n\n  var periodRe = formatRe(locale_periods),\n      periodLookup = formatLookup(locale_periods),\n      weekdayRe = formatRe(locale_weekdays),\n      weekdayLookup = formatLookup(locale_weekdays),\n      shortWeekdayRe = formatRe(locale_shortWeekdays),\n      shortWeekdayLookup = formatLookup(locale_shortWeekdays),\n      monthRe = formatRe(locale_months),\n      monthLookup = formatLookup(locale_months),\n      shortMonthRe = formatRe(locale_shortMonths),\n      shortMonthLookup = formatLookup(locale_shortMonths);\n\n  var formats = {\n    \"a\": formatShortWeekday,\n    \"A\": formatWeekday,\n    \"b\": formatShortMonth,\n    \"B\": formatMonth,\n    \"c\": null,\n    \"d\": formatDayOfMonth,\n    \"e\": formatDayOfMonth,\n    \"f\": formatMicroseconds,\n    \"H\": formatHour24,\n    \"I\": formatHour12,\n    \"j\": formatDayOfYear,\n    \"L\": formatMilliseconds,\n    \"m\": formatMonthNumber,\n    \"M\": formatMinutes,\n    \"p\": formatPeriod,\n    \"Q\": formatUnixTimestamp,\n    \"s\": formatUnixTimestampSeconds,\n    \"S\": formatSeconds,\n    \"u\": formatWeekdayNumberMonday,\n    \"U\": formatWeekNumberSunday,\n    \"V\": formatWeekNumberISO,\n    \"w\": formatWeekdayNumberSunday,\n    \"W\": formatWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatYear,\n    \"Y\": formatFullYear,\n    \"Z\": formatZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var utcFormats = {\n    \"a\": formatUTCShortWeekday,\n    \"A\": formatUTCWeekday,\n    \"b\": formatUTCShortMonth,\n    \"B\": formatUTCMonth,\n    \"c\": null,\n    \"d\": formatUTCDayOfMonth,\n    \"e\": formatUTCDayOfMonth,\n    \"f\": formatUTCMicroseconds,\n    \"H\": formatUTCHour24,\n    \"I\": formatUTCHour12,\n    \"j\": formatUTCDayOfYear,\n    \"L\": formatUTCMilliseconds,\n    \"m\": formatUTCMonthNumber,\n    \"M\": formatUTCMinutes,\n    \"p\": formatUTCPeriod,\n    \"Q\": formatUnixTimestamp,\n    \"s\": formatUnixTimestampSeconds,\n    \"S\": formatUTCSeconds,\n    \"u\": formatUTCWeekdayNumberMonday,\n    \"U\": formatUTCWeekNumberSunday,\n    \"V\": formatUTCWeekNumberISO,\n    \"w\": formatUTCWeekdayNumberSunday,\n    \"W\": formatUTCWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatUTCYear,\n    \"Y\": formatUTCFullYear,\n    \"Z\": formatUTCZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var parses = {\n    \"a\": parseShortWeekday,\n    \"A\": parseWeekday,\n    \"b\": parseShortMonth,\n    \"B\": parseMonth,\n    \"c\": parseLocaleDateTime,\n    \"d\": parseDayOfMonth,\n    \"e\": parseDayOfMonth,\n    \"f\": parseMicroseconds,\n    \"H\": parseHour24,\n    \"I\": parseHour24,\n    \"j\": parseDayOfYear,\n    \"L\": parseMilliseconds,\n    \"m\": parseMonthNumber,\n    \"M\": parseMinutes,\n    \"p\": parsePeriod,\n    \"Q\": parseUnixTimestamp,\n    \"s\": parseUnixTimestampSeconds,\n    \"S\": parseSeconds,\n    \"u\": parseWeekdayNumberMonday,\n    \"U\": parseWeekNumberSunday,\n    \"V\": parseWeekNumberISO,\n    \"w\": parseWeekdayNumberSunday,\n    \"W\": parseWeekNumberMonday,\n    \"x\": parseLocaleDate,\n    \"X\": parseLocaleTime,\n    \"y\": parseYear,\n    \"Y\": parseFullYear,\n    \"Z\": parseZone,\n    \"%\": parseLiteralPercent\n  };\n\n  // These recursive directive definitions must be deferred.\n  formats.x = newFormat(locale_date, formats);\n  formats.X = newFormat(locale_time, formats);\n  formats.c = newFormat(locale_dateTime, formats);\n  utcFormats.x = newFormat(locale_date, utcFormats);\n  utcFormats.X = newFormat(locale_time, utcFormats);\n  utcFormats.c = newFormat(locale_dateTime, utcFormats);\n\n  function newFormat(specifier, formats) {\n    return function(date) {\n      var string = [],\n          i = -1,\n          j = 0,\n          n = specifier.length,\n          c,\n          pad,\n          format;\n\n      if (!(date instanceof Date)) date = new Date(+date);\n\n      while (++i < n) {\n        if (specifier.charCodeAt(i) === 37) {\n          string.push(specifier.slice(j, i));\n          if ((pad = pads[c = specifier.charAt(++i)]) != null) c = specifier.charAt(++i);\n          else pad = c === \"e\" ? \" \" : \"0\";\n          if (format = formats[c]) c = format(date, pad);\n          string.push(c);\n          j = i + 1;\n        }\n      }\n\n      string.push(specifier.slice(j, i));\n      return string.join(\"\");\n    };\n  }\n\n  function newParse(specifier, newDate) {\n    return function(string) {\n      var d = newYear(1900),\n          i = parseSpecifier(d, specifier, string += \"\", 0),\n          week, day;\n      if (i != string.length) return null;\n\n      // If a UNIX timestamp is specified, return it.\n      if (\"Q\" in d) return new Date(d.Q);\n\n      // The am-pm flag is 0 for AM, and 1 for PM.\n      if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n\n      // Convert day-of-week and week-of-year to day-of-year.\n      if (\"V\" in d) {\n        if (d.V < 1 || d.V > 53) return null;\n        if (!(\"w\" in d)) d.w = 1;\n        if (\"Z\" in d) {\n          week = utcDate(newYear(d.y)), day = week.getUTCDay();\n          week = day > 4 || day === 0 ? utcMonday.ceil(week) : utcMonday(week);\n          week = utcDay.offset(week, (d.V - 1) * 7);\n          d.y = week.getUTCFullYear();\n          d.m = week.getUTCMonth();\n          d.d = week.getUTCDate() + (d.w + 6) % 7;\n        } else {\n          week = newDate(newYear(d.y)), day = week.getDay();\n          week = day > 4 || day === 0 ? timeMonday.ceil(week) : timeMonday(week);\n          week = timeDay.offset(week, (d.V - 1) * 7);\n          d.y = week.getFullYear();\n          d.m = week.getMonth();\n          d.d = week.getDate() + (d.w + 6) % 7;\n        }\n      } else if (\"W\" in d || \"U\" in d) {\n        if (!(\"w\" in d)) d.w = \"u\" in d ? d.u % 7 : \"W\" in d ? 1 : 0;\n        day = \"Z\" in d ? utcDate(newYear(d.y)).getUTCDay() : newDate(newYear(d.y)).getDay();\n        d.m = 0;\n        d.d = \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (day + 5) % 7 : d.w + d.U * 7 - (day + 6) % 7;\n      }\n\n      // If a time zone is specified, all fields are interpreted as UTC and then\n      // offset according to the specified time zone.\n      if (\"Z\" in d) {\n        d.H += d.Z / 100 | 0;\n        d.M += d.Z % 100;\n        return utcDate(d);\n      }\n\n      // Otherwise, all fields are in local time.\n      return newDate(d);\n    };\n  }\n\n  function parseSpecifier(d, specifier, string, j) {\n    var i = 0,\n        n = specifier.length,\n        m = string.length,\n        c,\n        parse;\n\n    while (i < n) {\n      if (j >= m) return -1;\n      c = specifier.charCodeAt(i++);\n      if (c === 37) {\n        c = specifier.charAt(i++);\n        parse = parses[c in pads ? specifier.charAt(i++) : c];\n        if (!parse || ((j = parse(d, string, j)) < 0)) return -1;\n      } else if (c != string.charCodeAt(j++)) {\n        return -1;\n      }\n    }\n\n    return j;\n  }\n\n  function parsePeriod(d, string, i) {\n    var n = periodRe.exec(string.slice(i));\n    return n ? (d.p = periodLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortWeekday(d, string, i) {\n    var n = shortWeekdayRe.exec(string.slice(i));\n    return n ? (d.w = shortWeekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseWeekday(d, string, i) {\n    var n = weekdayRe.exec(string.slice(i));\n    return n ? (d.w = weekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortMonth(d, string, i) {\n    var n = shortMonthRe.exec(string.slice(i));\n    return n ? (d.m = shortMonthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseMonth(d, string, i) {\n    var n = monthRe.exec(string.slice(i));\n    return n ? (d.m = monthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseLocaleDateTime(d, string, i) {\n    return parseSpecifier(d, locale_dateTime, string, i);\n  }\n\n  function parseLocaleDate(d, string, i) {\n    return parseSpecifier(d, locale_date, string, i);\n  }\n\n  function parseLocaleTime(d, string, i) {\n    return parseSpecifier(d, locale_time, string, i);\n  }\n\n  function formatShortWeekday(d) {\n    return locale_shortWeekdays[d.getDay()];\n  }\n\n  function formatWeekday(d) {\n    return locale_weekdays[d.getDay()];\n  }\n\n  function formatShortMonth(d) {\n    return locale_shortMonths[d.getMonth()];\n  }\n\n  function formatMonth(d) {\n    return locale_months[d.getMonth()];\n  }\n\n  function formatPeriod(d) {\n    return locale_periods[+(d.getHours() >= 12)];\n  }\n\n  function formatUTCShortWeekday(d) {\n    return locale_shortWeekdays[d.getUTCDay()];\n  }\n\n  function formatUTCWeekday(d) {\n    return locale_weekdays[d.getUTCDay()];\n  }\n\n  function formatUTCShortMonth(d) {\n    return locale_shortMonths[d.getUTCMonth()];\n  }\n\n  function formatUTCMonth(d) {\n    return locale_months[d.getUTCMonth()];\n  }\n\n  function formatUTCPeriod(d) {\n    return locale_periods[+(d.getUTCHours() >= 12)];\n  }\n\n  return {\n    format: function(specifier) {\n      var f = newFormat(specifier += \"\", formats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    parse: function(specifier) {\n      var p = newParse(specifier += \"\", localDate);\n      p.toString = function() { return specifier; };\n      return p;\n    },\n    utcFormat: function(specifier) {\n      var f = newFormat(specifier += \"\", utcFormats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    utcParse: function(specifier) {\n      var p = newParse(specifier, utcDate);\n      p.toString = function() { return specifier; };\n      return p;\n    }\n  };\n}\n\nvar pads = {\"-\": \"\", \"_\": \" \", \"0\": \"0\"},\n    numberRe = /^\\s*\\d+/, // note: ignores next directive\n    percentRe = /^%/,\n    requoteRe = /[\\\\^$*+?|[\\]().{}]/g;\n\nfunction pad(value, fill, width) {\n  var sign = value < 0 ? \"-\" : \"\",\n      string = (sign ? -value : value) + \"\",\n      length = string.length;\n  return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n}\n\nfunction requote(s) {\n  return s.replace(requoteRe, \"\\\\$&\");\n}\n\nfunction formatRe(names) {\n  return new RegExp(\"^(?:\" + names.map(requote).join(\"|\") + \")\", \"i\");\n}\n\nfunction formatLookup(names) {\n  var map = {}, i = -1, n = names.length;\n  while (++i < n) map[names[i].toLowerCase()] = i;\n  return map;\n}\n\nfunction parseWeekdayNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.w = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekdayNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.u = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.U = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberISO(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.V = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.W = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseFullYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 4));\n  return n ? (d.y = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.y = +n[0] + (+n[0] > 68 ? 1900 : 2000), i + n[0].length) : -1;\n}\n\nfunction parseZone(d, string, i) {\n  var n = /^(Z)|([+-]\\d\\d)(?::?(\\d\\d))?/.exec(string.slice(i, i + 6));\n  return n ? (d.Z = n[1] ? 0 : -(n[2] + (n[3] || \"00\")), i + n[0].length) : -1;\n}\n\nfunction parseMonthNumber(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.m = n[0] - 1, i + n[0].length) : -1;\n}\n\nfunction parseDayOfMonth(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseDayOfYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.m = 0, d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseHour24(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.H = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMinutes(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.M = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.S = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMilliseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.L = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMicroseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 6));\n  return n ? (d.L = Math.floor(n[0] / 1000), i + n[0].length) : -1;\n}\n\nfunction parseLiteralPercent(d, string, i) {\n  var n = percentRe.exec(string.slice(i, i + 1));\n  return n ? i + n[0].length : -1;\n}\n\nfunction parseUnixTimestamp(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.Q = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseUnixTimestampSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.Q = (+n[0]) * 1000, i + n[0].length) : -1;\n}\n\nfunction formatDayOfMonth(d, p) {\n  return pad(d.getDate(), p, 2);\n}\n\nfunction formatHour24(d, p) {\n  return pad(d.getHours(), p, 2);\n}\n\nfunction formatHour12(d, p) {\n  return pad(d.getHours() % 12 || 12, p, 2);\n}\n\nfunction formatDayOfYear(d, p) {\n  return pad(1 + timeDay.count(timeYear(d), d), p, 3);\n}\n\nfunction formatMilliseconds(d, p) {\n  return pad(d.getMilliseconds(), p, 3);\n}\n\nfunction formatMicroseconds(d, p) {\n  return formatMilliseconds(d, p) + \"000\";\n}\n\nfunction formatMonthNumber(d, p) {\n  return pad(d.getMonth() + 1, p, 2);\n}\n\nfunction formatMinutes(d, p) {\n  return pad(d.getMinutes(), p, 2);\n}\n\nfunction formatSeconds(d, p) {\n  return pad(d.getSeconds(), p, 2);\n}\n\nfunction formatWeekdayNumberMonday(d) {\n  var day = d.getDay();\n  return day === 0 ? 7 : day;\n}\n\nfunction formatWeekNumberSunday(d, p) {\n  return pad(timeSunday.count(timeYear(d), d), p, 2);\n}\n\nfunction formatWeekNumberISO(d, p) {\n  var day = d.getDay();\n  d = (day >= 4 || day === 0) ? timeThursday(d) : timeThursday.ceil(d);\n  return pad(timeThursday.count(timeYear(d), d) + (timeYear(d).getDay() === 4), p, 2);\n}\n\nfunction formatWeekdayNumberSunday(d) {\n  return d.getDay();\n}\n\nfunction formatWeekNumberMonday(d, p) {\n  return pad(timeMonday.count(timeYear(d), d), p, 2);\n}\n\nfunction formatYear(d, p) {\n  return pad(d.getFullYear() % 100, p, 2);\n}\n\nfunction formatFullYear(d, p) {\n  return pad(d.getFullYear() % 10000, p, 4);\n}\n\nfunction formatZone(d) {\n  var z = d.getTimezoneOffset();\n  return (z > 0 ? \"-\" : (z *= -1, \"+\"))\n      + pad(z / 60 | 0, \"0\", 2)\n      + pad(z % 60, \"0\", 2);\n}\n\nfunction formatUTCDayOfMonth(d, p) {\n  return pad(d.getUTCDate(), p, 2);\n}\n\nfunction formatUTCHour24(d, p) {\n  return pad(d.getUTCHours(), p, 2);\n}\n\nfunction formatUTCHour12(d, p) {\n  return pad(d.getUTCHours() % 12 || 12, p, 2);\n}\n\nfunction formatUTCDayOfYear(d, p) {\n  return pad(1 + utcDay.count(utcYear(d), d), p, 3);\n}\n\nfunction formatUTCMilliseconds(d, p) {\n  return pad(d.getUTCMilliseconds(), p, 3);\n}\n\nfunction formatUTCMicroseconds(d, p) {\n  return formatUTCMilliseconds(d, p) + \"000\";\n}\n\nfunction formatUTCMonthNumber(d, p) {\n  return pad(d.getUTCMonth() + 1, p, 2);\n}\n\nfunction formatUTCMinutes(d, p) {\n  return pad(d.getUTCMinutes(), p, 2);\n}\n\nfunction formatUTCSeconds(d, p) {\n  return pad(d.getUTCSeconds(), p, 2);\n}\n\nfunction formatUTCWeekdayNumberMonday(d) {\n  var dow = d.getUTCDay();\n  return dow === 0 ? 7 : dow;\n}\n\nfunction formatUTCWeekNumberSunday(d, p) {\n  return pad(utcSunday.count(utcYear(d), d), p, 2);\n}\n\nfunction formatUTCWeekNumberISO(d, p) {\n  var day = d.getUTCDay();\n  d = (day >= 4 || day === 0) ? utcThursday(d) : utcThursday.ceil(d);\n  return pad(utcThursday.count(utcYear(d), d) + (utcYear(d).getUTCDay() === 4), p, 2);\n}\n\nfunction formatUTCWeekdayNumberSunday(d) {\n  return d.getUTCDay();\n}\n\nfunction formatUTCWeekNumberMonday(d, p) {\n  return pad(utcMonday.count(utcYear(d), d), p, 2);\n}\n\nfunction formatUTCYear(d, p) {\n  return pad(d.getUTCFullYear() % 100, p, 2);\n}\n\nfunction formatUTCFullYear(d, p) {\n  return pad(d.getUTCFullYear() % 10000, p, 4);\n}\n\nfunction formatUTCZone() {\n  return \"+0000\";\n}\n\nfunction formatLiteralPercent() {\n  return \"%\";\n}\n\nfunction formatUnixTimestamp(d) {\n  return +d;\n}\n\nfunction formatUnixTimestampSeconds(d) {\n  return Math.floor(+d / 1000);\n}\n","import formatLocale from \"./locale\";\n\nvar locale;\nexport var timeFormat;\nexport var timeParse;\nexport var utcFormat;\nexport var utcParse;\n\ndefaultLocale({\n  dateTime: \"%x, %X\",\n  date: \"%-m/%-d/%Y\",\n  time: \"%-I:%M:%S %p\",\n  periods: [\"AM\", \"PM\"],\n  days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n  shortDays: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n  months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n  shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n});\n\nexport default function defaultLocale(definition) {\n  locale = formatLocale(definition);\n  timeFormat = locale.format;\n  timeParse = locale.parse;\n  utcFormat = locale.utcFormat;\n  utcParse = locale.utcParse;\n  return locale;\n}\n","import {utcFormat} from \"./defaultLocale\";\n\nexport var isoSpecifier = \"%Y-%m-%dT%H:%M:%S.%LZ\";\n\nfunction formatIsoNative(date) {\n  return date.toISOString();\n}\n\nvar formatIso = Date.prototype.toISOString\n    ? formatIsoNative\n    : utcFormat(isoSpecifier);\n\nexport default formatIso;\n","import {isoSpecifier} from \"./isoFormat\";\nimport {utcParse} from \"./defaultLocale\";\n\nfunction parseIsoNative(string) {\n  var date = new Date(string);\n  return isNaN(date) ? null : date;\n}\n\nvar parseIso = +new Date(\"2000-01-01T00:00:00.000Z\")\n    ? parseIsoNative\n    : utcParse(isoSpecifier);\n\nexport default parseIso;\n","import {bisector, tickStep} from \"d3-array\";\nimport {interpolateNumber as reinterpolate} from \"d3-interpolate\";\nimport {timeYear, timeMonth, timeWeek, timeDay, timeHour, timeMinute, timeSecond, timeMillisecond} from \"d3-time\";\nimport {timeFormat} from \"d3-time-format\";\nimport {map} from \"./array\";\nimport {default as continuous, copy, deinterpolateLinear as deinterpolate} from \"./continuous\";\nimport nice from \"./nice\";\n\nvar durationSecond = 1000,\n    durationMinute = durationSecond * 60,\n    durationHour = durationMinute * 60,\n    durationDay = durationHour * 24,\n    durationWeek = durationDay * 7,\n    durationMonth = durationDay * 30,\n    durationYear = durationDay * 365;\n\nfunction date(t) {\n  return new Date(t);\n}\n\nfunction number(t) {\n  return t instanceof Date ? +t : +new Date(+t);\n}\n\nexport function calendar(year, month, week, day, hour, minute, second, millisecond, format) {\n  var scale = continuous(deinterpolate, reinterpolate),\n      invert = scale.invert,\n      domain = scale.domain;\n\n  var formatMillisecond = format(\".%L\"),\n      formatSecond = format(\":%S\"),\n      formatMinute = format(\"%I:%M\"),\n      formatHour = format(\"%I %p\"),\n      formatDay = format(\"%a %d\"),\n      formatWeek = format(\"%b %d\"),\n      formatMonth = format(\"%B\"),\n      formatYear = format(\"%Y\");\n\n  var tickIntervals = [\n    [second,  1,      durationSecond],\n    [second,  5,  5 * durationSecond],\n    [second, 15, 15 * durationSecond],\n    [second, 30, 30 * durationSecond],\n    [minute,  1,      durationMinute],\n    [minute,  5,  5 * durationMinute],\n    [minute, 15, 15 * durationMinute],\n    [minute, 30, 30 * durationMinute],\n    [  hour,  1,      durationHour  ],\n    [  hour,  3,  3 * durationHour  ],\n    [  hour,  6,  6 * durationHour  ],\n    [  hour, 12, 12 * durationHour  ],\n    [   day,  1,      durationDay   ],\n    [   day,  2,  2 * durationDay   ],\n    [  week,  1,      durationWeek  ],\n    [ month,  1,      durationMonth ],\n    [ month,  3,  3 * durationMonth ],\n    [  year,  1,      durationYear  ]\n  ];\n\n  function tickFormat(date) {\n    return (second(date) < date ? formatMillisecond\n        : minute(date) < date ? formatSecond\n        : hour(date) < date ? formatMinute\n        : day(date) < date ? formatHour\n        : month(date) < date ? (week(date) < date ? formatDay : formatWeek)\n        : year(date) < date ? formatMonth\n        : formatYear)(date);\n  }\n\n  function tickInterval(interval, start, stop, step) {\n    if (interval == null) interval = 10;\n\n    // If a desired tick count is specified, pick a reasonable tick interval\n    // based on the extent of the domain and a rough estimate of tick size.\n    // Otherwise, assume interval is already a time interval and use it.\n    if (typeof interval === \"number\") {\n      var target = Math.abs(stop - start) / interval,\n          i = bisector(function(i) { return i[2]; }).right(tickIntervals, target);\n      if (i === tickIntervals.length) {\n        step = tickStep(start / durationYear, stop / durationYear, interval);\n        interval = year;\n      } else if (i) {\n        i = tickIntervals[target / tickIntervals[i - 1][2] < tickIntervals[i][2] / target ? i - 1 : i];\n        step = i[1];\n        interval = i[0];\n      } else {\n        step = Math.max(tickStep(start, stop, interval), 1);\n        interval = millisecond;\n      }\n    }\n\n    return step == null ? interval : interval.every(step);\n  }\n\n  scale.invert = function(y) {\n    return new Date(invert(y));\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? domain(map.call(_, number)) : domain().map(date);\n  };\n\n  scale.ticks = function(interval, step) {\n    var d = domain(),\n        t0 = d[0],\n        t1 = d[d.length - 1],\n        r = t1 < t0,\n        t;\n    if (r) t = t0, t0 = t1, t1 = t;\n    t = tickInterval(interval, t0, t1, step);\n    t = t ? t.range(t0, t1 + 1) : []; // inclusive stop\n    return r ? t.reverse() : t;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return specifier == null ? tickFormat : format(specifier);\n  };\n\n  scale.nice = function(interval, step) {\n    var d = domain();\n    return (interval = tickInterval(interval, d[0], d[d.length - 1], step))\n        ? domain(nice(d, interval))\n        : scale;\n  };\n\n  scale.copy = function() {\n    return copy(scale, calendar(year, month, week, day, hour, minute, second, millisecond, format));\n  };\n\n  return scale;\n}\n\nexport default function() {\n  return calendar(timeYear, timeMonth, timeWeek, timeDay, timeHour, timeMinute, timeSecond, timeMillisecond, timeFormat).domain([new Date(2000, 0, 1), new Date(2000, 0, 2)]);\n}\n","import {calendar} from \"./time\";\nimport {utcFormat} from \"d3-time-format\";\nimport {utcYear, utcMonth, utcWeek, utcDay, utcHour, utcMinute, utcSecond, utcMillisecond} from \"d3-time\";\n\nexport default function() {\n  return calendar(utcYear, utcMonth, utcWeek, utcDay, utcHour, utcMinute, utcSecond, utcMillisecond, utcFormat).domain([Date.UTC(2000, 0, 1), Date.UTC(2000, 0, 2)]);\n}\n","import {linearish} from \"./linear\";\n\nexport default function sequential(interpolator) {\n  var x0 = 0,\n      x1 = 1,\n      k10 = 1,\n      clamp = false;\n\n  function scale(x) {\n    var t = (x - x0) * k10;\n    return interpolator(clamp ? Math.max(0, Math.min(1, t)) : t);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], k10 = x0 === x1 ? 0 : 1 / (x1 - x0), scale) : [x0, x1];\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, scale) : clamp;\n  };\n\n  scale.interpolator = function(_) {\n    return arguments.length ? (interpolator = _, scale) : interpolator;\n  };\n\n  scale.copy = function() {\n    return sequential(interpolator).domain([x0, x1]).clamp(clamp);\n  };\n\n  return linearish(scale);\n}\n","import {linearish} from \"./linear\";\n\nexport default function diverging(interpolator) {\n  var x0 = 0,\n      x1 = 0.5,\n      x2 = 1,\n      k10 = 1,\n      k21 = 1,\n      clamp = false;\n\n  function scale(x) {\n    var t = 0.5 + ((x = +x) - x1) * (x < x1 ? k10 : k21);\n    return interpolator(clamp ? Math.max(0, Math.min(1, t)) : t);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], x2 = +_[2], k10 = x0 === x1 ? 0 : 0.5 / (x1 - x0), k21 = x1 === x2 ? 0 : 0.5 / (x2 - x1), scale) : [x0, x1, x2];\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, scale) : clamp;\n  };\n\n  scale.interpolator = function(_) {\n    return arguments.length ? (interpolator = _, scale) : interpolator;\n  };\n\n  scale.copy = function() {\n    return diverging(interpolator).domain([x0, x1, x2]).clamp(clamp);\n  };\n\n  return linearish(scale);\n}\n","export default function(specifier) {\n  var n = specifier.length / 6 | 0, colors = new Array(n), i = 0;\n  while (i < n) colors[i] = \"#\" + specifier.slice(i * 6, ++i * 6);\n  return colors;\n}\n","import colors from \"../colors\";\n\nexport default colors(\"1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf\");\n","import colors from \"../colors\";\n\nexport default colors(\"7fc97fbeaed4fdc086ffff99386cb0f0027fbf5b17666666\");\n","import colors from \"../colors\";\n\nexport default colors(\"1b9e77d95f027570b3e7298a66a61ee6ab02a6761d666666\");\n","import colors from \"../colors\";\n\nexport default colors(\"a6cee31f78b4b2df8a33a02cfb9a99e31a1cfdbf6fff7f00cab2d66a3d9affff99b15928\");\n","import colors from \"../colors\";\n\nexport default colors(\"fbb4aeb3cde3ccebc5decbe4fed9a6ffffcce5d8bdfddaecf2f2f2\");\n","import colors from \"../colors\";\n\nexport default colors(\"b3e2cdfdcdaccbd5e8f4cae4e6f5c9fff2aef1e2cccccccc\");\n","import colors from \"../colors\";\n\nexport default colors(\"e41a1c377eb84daf4a984ea3ff7f00ffff33a65628f781bf999999\");\n","import colors from \"../colors\";\n\nexport default colors(\"66c2a5fc8d628da0cbe78ac3a6d854ffd92fe5c494b3b3b3\");\n","import colors from \"../colors\";\n\nexport default colors(\"8dd3c7ffffb3bebadafb807280b1d3fdb462b3de69fccde5d9d9d9bc80bdccebc5ffed6f\");\n","import {interpolateRgbBasis} from \"d3-interpolate\";\n\nexport default function(scheme) {\n  return interpolateRgbBasis(scheme[scheme.length - 1]);\n}\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"d8b365f5f5f55ab4ac\",\n  \"a6611adfc27d80cdc1018571\",\n  \"a6611adfc27df5f5f580cdc1018571\",\n  \"8c510ad8b365f6e8c3c7eae55ab4ac01665e\",\n  \"8c510ad8b365f6e8c3f5f5f5c7eae55ab4ac01665e\",\n  \"8c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e\",\n  \"8c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e\",\n  \"5430058c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e003c30\",\n  \"5430058c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e003c30\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"af8dc3f7f7f77fbf7b\",\n  \"7b3294c2a5cfa6dba0008837\",\n  \"7b3294c2a5cff7f7f7a6dba0008837\",\n  \"762a83af8dc3e7d4e8d9f0d37fbf7b1b7837\",\n  \"762a83af8dc3e7d4e8f7f7f7d9f0d37fbf7b1b7837\",\n  \"762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b7837\",\n  \"762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b7837\",\n  \"40004b762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b783700441b\",\n  \"40004b762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b783700441b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e9a3c9f7f7f7a1d76a\",\n  \"d01c8bf1b6dab8e1864dac26\",\n  \"d01c8bf1b6daf7f7f7b8e1864dac26\",\n  \"c51b7de9a3c9fde0efe6f5d0a1d76a4d9221\",\n  \"c51b7de9a3c9fde0eff7f7f7e6f5d0a1d76a4d9221\",\n  \"c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221\",\n  \"c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221\",\n  \"8e0152c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221276419\",\n  \"8e0152c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221276419\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"998ec3f7f7f7f1a340\",\n  \"5e3c99b2abd2fdb863e66101\",\n  \"5e3c99b2abd2f7f7f7fdb863e66101\",\n  \"542788998ec3d8daebfee0b6f1a340b35806\",\n  \"542788998ec3d8daebf7f7f7fee0b6f1a340b35806\",\n  \"5427888073acb2abd2d8daebfee0b6fdb863e08214b35806\",\n  \"5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b35806\",\n  \"2d004b5427888073acb2abd2d8daebfee0b6fdb863e08214b358067f3b08\",\n  \"2d004b5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b358067f3b08\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ef8a62f7f7f767a9cf\",\n  \"ca0020f4a58292c5de0571b0\",\n  \"ca0020f4a582f7f7f792c5de0571b0\",\n  \"b2182bef8a62fddbc7d1e5f067a9cf2166ac\",\n  \"b2182bef8a62fddbc7f7f7f7d1e5f067a9cf2166ac\",\n  \"b2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac\",\n  \"b2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac\",\n  \"67001fb2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac053061\",\n  \"67001fb2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac053061\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ef8a62ffffff999999\",\n  \"ca0020f4a582bababa404040\",\n  \"ca0020f4a582ffffffbababa404040\",\n  \"b2182bef8a62fddbc7e0e0e09999994d4d4d\",\n  \"b2182bef8a62fddbc7ffffffe0e0e09999994d4d4d\",\n  \"b2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d\",\n  \"b2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d\",\n  \"67001fb2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d1a1a1a\",\n  \"67001fb2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d1a1a1a\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fc8d59ffffbf91bfdb\",\n  \"d7191cfdae61abd9e92c7bb6\",\n  \"d7191cfdae61ffffbfabd9e92c7bb6\",\n  \"d73027fc8d59fee090e0f3f891bfdb4575b4\",\n  \"d73027fc8d59fee090ffffbfe0f3f891bfdb4575b4\",\n  \"d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4\",\n  \"d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4\",\n  \"a50026d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4313695\",\n  \"a50026d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4313695\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fc8d59ffffbf91cf60\",\n  \"d7191cfdae61a6d96a1a9641\",\n  \"d7191cfdae61ffffbfa6d96a1a9641\",\n  \"d73027fc8d59fee08bd9ef8b91cf601a9850\",\n  \"d73027fc8d59fee08bffffbfd9ef8b91cf601a9850\",\n  \"d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850\",\n  \"d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850\",\n  \"a50026d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850006837\",\n  \"a50026d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850006837\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fc8d59ffffbf99d594\",\n  \"d7191cfdae61abdda42b83ba\",\n  \"d7191cfdae61ffffbfabdda42b83ba\",\n  \"d53e4ffc8d59fee08be6f59899d5943288bd\",\n  \"d53e4ffc8d59fee08bffffbfe6f59899d5943288bd\",\n  \"d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd\",\n  \"d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd\",\n  \"9e0142d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd5e4fa2\",\n  \"9e0142d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd5e4fa2\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e5f5f999d8c92ca25f\",\n  \"edf8fbb2e2e266c2a4238b45\",\n  \"edf8fbb2e2e266c2a42ca25f006d2c\",\n  \"edf8fbccece699d8c966c2a42ca25f006d2c\",\n  \"edf8fbccece699d8c966c2a441ae76238b45005824\",\n  \"f7fcfde5f5f9ccece699d8c966c2a441ae76238b45005824\",\n  \"f7fcfde5f5f9ccece699d8c966c2a441ae76238b45006d2c00441b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e0ecf49ebcda8856a7\",\n  \"edf8fbb3cde38c96c688419d\",\n  \"edf8fbb3cde38c96c68856a7810f7c\",\n  \"edf8fbbfd3e69ebcda8c96c68856a7810f7c\",\n  \"edf8fbbfd3e69ebcda8c96c68c6bb188419d6e016b\",\n  \"f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d6e016b\",\n  \"f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d810f7c4d004b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e0f3dba8ddb543a2ca\",\n  \"f0f9e8bae4bc7bccc42b8cbe\",\n  \"f0f9e8bae4bc7bccc443a2ca0868ac\",\n  \"f0f9e8ccebc5a8ddb57bccc443a2ca0868ac\",\n  \"f0f9e8ccebc5a8ddb57bccc44eb3d32b8cbe08589e\",\n  \"f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe08589e\",\n  \"f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe0868ac084081\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fee8c8fdbb84e34a33\",\n  \"fef0d9fdcc8afc8d59d7301f\",\n  \"fef0d9fdcc8afc8d59e34a33b30000\",\n  \"fef0d9fdd49efdbb84fc8d59e34a33b30000\",\n  \"fef0d9fdd49efdbb84fc8d59ef6548d7301f990000\",\n  \"fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301f990000\",\n  \"fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301fb300007f0000\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ece2f0a6bddb1c9099\",\n  \"f6eff7bdc9e167a9cf02818a\",\n  \"f6eff7bdc9e167a9cf1c9099016c59\",\n  \"f6eff7d0d1e6a6bddb67a9cf1c9099016c59\",\n  \"f6eff7d0d1e6a6bddb67a9cf3690c002818a016450\",\n  \"fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016450\",\n  \"fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016c59014636\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ece7f2a6bddb2b8cbe\",\n  \"f1eef6bdc9e174a9cf0570b0\",\n  \"f1eef6bdc9e174a9cf2b8cbe045a8d\",\n  \"f1eef6d0d1e6a6bddb74a9cf2b8cbe045a8d\",\n  \"f1eef6d0d1e6a6bddb74a9cf3690c00570b0034e7b\",\n  \"fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0034e7b\",\n  \"fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0045a8d023858\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e7e1efc994c7dd1c77\",\n  \"f1eef6d7b5d8df65b0ce1256\",\n  \"f1eef6d7b5d8df65b0dd1c77980043\",\n  \"f1eef6d4b9dac994c7df65b0dd1c77980043\",\n  \"f1eef6d4b9dac994c7df65b0e7298ace125691003f\",\n  \"f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125691003f\",\n  \"f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125698004367001f\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fde0ddfa9fb5c51b8a\",\n  \"feebe2fbb4b9f768a1ae017e\",\n  \"feebe2fbb4b9f768a1c51b8a7a0177\",\n  \"feebe2fcc5c0fa9fb5f768a1c51b8a7a0177\",\n  \"feebe2fcc5c0fa9fb5f768a1dd3497ae017e7a0177\",\n  \"fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a0177\",\n  \"fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a017749006a\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"edf8b17fcdbb2c7fb8\",\n  \"ffffcca1dab441b6c4225ea8\",\n  \"ffffcca1dab441b6c42c7fb8253494\",\n  \"ffffccc7e9b47fcdbb41b6c42c7fb8253494\",\n  \"ffffccc7e9b47fcdbb41b6c41d91c0225ea80c2c84\",\n  \"ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea80c2c84\",\n  \"ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea8253494081d58\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"f7fcb9addd8e31a354\",\n  \"ffffccc2e69978c679238443\",\n  \"ffffccc2e69978c67931a354006837\",\n  \"ffffccd9f0a3addd8e78c67931a354006837\",\n  \"ffffccd9f0a3addd8e78c67941ab5d238443005a32\",\n  \"ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443005a32\",\n  \"ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443006837004529\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fff7bcfec44fd95f0e\",\n  \"ffffd4fed98efe9929cc4c02\",\n  \"ffffd4fed98efe9929d95f0e993404\",\n  \"ffffd4fee391fec44ffe9929d95f0e993404\",\n  \"ffffd4fee391fec44ffe9929ec7014cc4c028c2d04\",\n  \"ffffe5fff7bcfee391fec44ffe9929ec7014cc4c028c2d04\",\n  \"ffffe5fff7bcfee391fec44ffe9929ec7014cc4c02993404662506\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ffeda0feb24cf03b20\",\n  \"ffffb2fecc5cfd8d3ce31a1c\",\n  \"ffffb2fecc5cfd8d3cf03b20bd0026\",\n  \"ffffb2fed976feb24cfd8d3cf03b20bd0026\",\n  \"ffffb2fed976feb24cfd8d3cfc4e2ae31a1cb10026\",\n  \"ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cb10026\",\n  \"ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cbd0026800026\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"deebf79ecae13182bd\",\n  \"eff3ffbdd7e76baed62171b5\",\n  \"eff3ffbdd7e76baed63182bd08519c\",\n  \"eff3ffc6dbef9ecae16baed63182bd08519c\",\n  \"eff3ffc6dbef9ecae16baed64292c62171b5084594\",\n  \"f7fbffdeebf7c6dbef9ecae16baed64292c62171b5084594\",\n  \"f7fbffdeebf7c6dbef9ecae16baed64292c62171b508519c08306b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e5f5e0a1d99b31a354\",\n  \"edf8e9bae4b374c476238b45\",\n  \"edf8e9bae4b374c47631a354006d2c\",\n  \"edf8e9c7e9c0a1d99b74c47631a354006d2c\",\n  \"edf8e9c7e9c0a1d99b74c47641ab5d238b45005a32\",\n  \"f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45005a32\",\n  \"f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45006d2c00441b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"f0f0f0bdbdbd636363\",\n  \"f7f7f7cccccc969696525252\",\n  \"f7f7f7cccccc969696636363252525\",\n  \"f7f7f7d9d9d9bdbdbd969696636363252525\",\n  \"f7f7f7d9d9d9bdbdbd969696737373525252252525\",\n  \"fffffff0f0f0d9d9d9bdbdbd969696737373525252252525\",\n  \"fffffff0f0f0d9d9d9bdbdbd969696737373525252252525000000\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"efedf5bcbddc756bb1\",\n  \"f2f0f7cbc9e29e9ac86a51a3\",\n  \"f2f0f7cbc9e29e9ac8756bb154278f\",\n  \"f2f0f7dadaebbcbddc9e9ac8756bb154278f\",\n  \"f2f0f7dadaebbcbddc9e9ac8807dba6a51a34a1486\",\n  \"fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a34a1486\",\n  \"fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a354278f3f007d\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fee0d2fc9272de2d26\",\n  \"fee5d9fcae91fb6a4acb181d\",\n  \"fee5d9fcae91fb6a4ade2d26a50f15\",\n  \"fee5d9fcbba1fc9272fb6a4ade2d26a50f15\",\n  \"fee5d9fcbba1fc9272fb6a4aef3b2ccb181d99000d\",\n  \"fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181d99000d\",\n  \"fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181da50f1567000d\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fee6cefdae6be6550d\",\n  \"feeddefdbe85fd8d3cd94701\",\n  \"feeddefdbe85fd8d3ce6550da63603\",\n  \"feeddefdd0a2fdae6bfd8d3ce6550da63603\",\n  \"feeddefdd0a2fdae6bfd8d3cf16913d948018c2d04\",\n  \"fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d948018c2d04\",\n  \"fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d94801a636037f2704\"\n).map(colors);\n\nexport default ramp(scheme);\n","import {cubehelix} from \"d3-color\";\nimport {interpolateCubehelixLong} from \"d3-interpolate\";\n\nexport default interpolateCubehelixLong(cubehelix(300, 0.5, 0.0), cubehelix(-240, 0.5, 1.0));\n","import {cubehelix} from \"d3-color\";\nimport {interpolateCubehelixLong} from \"d3-interpolate\";\n\nexport var warm = interpolateCubehelixLong(cubehelix(-100, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nexport var cool = interpolateCubehelixLong(cubehelix(260, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nvar c = cubehelix();\n\nexport default function(t) {\n  if (t < 0 || t > 1) t -= Math.floor(t);\n  var ts = Math.abs(t - 0.5);\n  c.h = 360 * t - 100;\n  c.s = 1.5 - 1.5 * ts;\n  c.l = 0.8 - 0.9 * ts;\n  return c + \"\";\n}\n","import {rgb} from \"d3-color\";\n\nvar c = rgb(),\n    pi_1_3 = Math.PI / 3,\n    pi_2_3 = Math.PI * 2 / 3;\n\nexport default function(t) {\n  var x;\n  t = (0.5 - t) * Math.PI;\n  c.r = 255 * (x = Math.sin(t)) * x;\n  c.g = 255 * (x = Math.sin(t + pi_1_3)) * x;\n  c.b = 255 * (x = Math.sin(t + pi_2_3)) * x;\n  return c + \"\";\n}\n","import colors from \"../colors\";\n\nfunction ramp(range) {\n  var n = range.length;\n  return function(t) {\n    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n  };\n}\n\nexport default ramp(colors(\"44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725\"));\n\nexport var magma = ramp(colors(\"00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf\"));\n\nexport var inferno = ramp(colors(\"00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4\"));\n\nexport var plasma = ramp(colors(\"0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921\"));\n","export default function(x) {\n  return function constant() {\n    return x;\n  };\n}\n","export var abs = Math.abs;\nexport var atan2 = Math.atan2;\nexport var cos = Math.cos;\nexport var max = Math.max;\nexport var min = Math.min;\nexport var sin = Math.sin;\nexport var sqrt = Math.sqrt;\n\nexport var epsilon = 1e-12;\nexport var pi = Math.PI;\nexport var halfPi = pi / 2;\nexport var tau = 2 * pi;\n\nexport function acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);\n}\n\nexport function asin(x) {\n  return x >= 1 ? halfPi : x <= -1 ? -halfPi : Math.asin(x);\n}\n","import {path} from \"d3-path\";\nimport constant from \"./constant\";\nimport {abs, acos, asin, atan2, cos, epsilon, halfPi, max, min, pi, sin, sqrt, tau} from \"./math\";\n\nfunction arcInnerRadius(d) {\n  return d.innerRadius;\n}\n\nfunction arcOuterRadius(d) {\n  return d.outerRadius;\n}\n\nfunction arcStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction arcEndAngle(d) {\n  return d.endAngle;\n}\n\nfunction arcPadAngle(d) {\n  return d && d.padAngle; // Note: optional!\n}\n\nfunction intersect(x0, y0, x1, y1, x2, y2, x3, y3) {\n  var x10 = x1 - x0, y10 = y1 - y0,\n      x32 = x3 - x2, y32 = y3 - y2,\n      t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / (y32 * x10 - x32 * y10);\n  return [x0 + t * x10, y0 + t * y10];\n}\n\n// Compute perpendicular offset line of length rc.\n// http://mathworld.wolfram.com/Circle-LineIntersection.html\nfunction cornerTangents(x0, y0, x1, y1, r1, rc, cw) {\n  var x01 = x0 - x1,\n      y01 = y0 - y1,\n      lo = (cw ? rc : -rc) / sqrt(x01 * x01 + y01 * y01),\n      ox = lo * y01,\n      oy = -lo * x01,\n      x11 = x0 + ox,\n      y11 = y0 + oy,\n      x10 = x1 + ox,\n      y10 = y1 + oy,\n      x00 = (x11 + x10) / 2,\n      y00 = (y11 + y10) / 2,\n      dx = x10 - x11,\n      dy = y10 - y11,\n      d2 = dx * dx + dy * dy,\n      r = r1 - rc,\n      D = x11 * y10 - x10 * y11,\n      d = (dy < 0 ? -1 : 1) * sqrt(max(0, r * r * d2 - D * D)),\n      cx0 = (D * dy - dx * d) / d2,\n      cy0 = (-D * dx - dy * d) / d2,\n      cx1 = (D * dy + dx * d) / d2,\n      cy1 = (-D * dx + dy * d) / d2,\n      dx0 = cx0 - x00,\n      dy0 = cy0 - y00,\n      dx1 = cx1 - x00,\n      dy1 = cy1 - y00;\n\n  // Pick the closer of the two intersection points.\n  // TODO Is there a faster way to determine which intersection to use?\n  if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n\n  return {\n    cx: cx0,\n    cy: cy0,\n    x01: -ox,\n    y01: -oy,\n    x11: cx0 * (r1 / r - 1),\n    y11: cy0 * (r1 / r - 1)\n  };\n}\n\nexport default function() {\n  var innerRadius = arcInnerRadius,\n      outerRadius = arcOuterRadius,\n      cornerRadius = constant(0),\n      padRadius = null,\n      startAngle = arcStartAngle,\n      endAngle = arcEndAngle,\n      padAngle = arcPadAngle,\n      context = null;\n\n  function arc() {\n    var buffer,\n        r,\n        r0 = +innerRadius.apply(this, arguments),\n        r1 = +outerRadius.apply(this, arguments),\n        a0 = startAngle.apply(this, arguments) - halfPi,\n        a1 = endAngle.apply(this, arguments) - halfPi,\n        da = abs(a1 - a0),\n        cw = a1 > a0;\n\n    if (!context) context = buffer = path();\n\n    // Ensure that the outer radius is always larger than the inner radius.\n    if (r1 < r0) r = r1, r1 = r0, r0 = r;\n\n    // Is it a point?\n    if (!(r1 > epsilon)) context.moveTo(0, 0);\n\n    // Or is it a circle or annulus?\n    else if (da > tau - epsilon) {\n      context.moveTo(r1 * cos(a0), r1 * sin(a0));\n      context.arc(0, 0, r1, a0, a1, !cw);\n      if (r0 > epsilon) {\n        context.moveTo(r0 * cos(a1), r0 * sin(a1));\n        context.arc(0, 0, r0, a1, a0, cw);\n      }\n    }\n\n    // Or is it a circular or annular sector?\n    else {\n      var a01 = a0,\n          a11 = a1,\n          a00 = a0,\n          a10 = a1,\n          da0 = da,\n          da1 = da,\n          ap = padAngle.apply(this, arguments) / 2,\n          rp = (ap > epsilon) && (padRadius ? +padRadius.apply(this, arguments) : sqrt(r0 * r0 + r1 * r1)),\n          rc = min(abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments)),\n          rc0 = rc,\n          rc1 = rc,\n          t0,\n          t1;\n\n      // Apply padding? Note that since r1 ≥ r0, da1 ≥ da0.\n      if (rp > epsilon) {\n        var p0 = asin(rp / r0 * sin(ap)),\n            p1 = asin(rp / r1 * sin(ap));\n        if ((da0 -= p0 * 2) > epsilon) p0 *= (cw ? 1 : -1), a00 += p0, a10 -= p0;\n        else da0 = 0, a00 = a10 = (a0 + a1) / 2;\n        if ((da1 -= p1 * 2) > epsilon) p1 *= (cw ? 1 : -1), a01 += p1, a11 -= p1;\n        else da1 = 0, a01 = a11 = (a0 + a1) / 2;\n      }\n\n      var x01 = r1 * cos(a01),\n          y01 = r1 * sin(a01),\n          x10 = r0 * cos(a10),\n          y10 = r0 * sin(a10);\n\n      // Apply rounded corners?\n      if (rc > epsilon) {\n        var x11 = r1 * cos(a11),\n            y11 = r1 * sin(a11),\n            x00 = r0 * cos(a00),\n            y00 = r0 * sin(a00);\n\n        // Restrict the corner radius according to the sector angle.\n        if (da < pi) {\n          var oc = da0 > epsilon ? intersect(x01, y01, x00, y00, x11, y11, x10, y10) : [x10, y10],\n              ax = x01 - oc[0],\n              ay = y01 - oc[1],\n              bx = x11 - oc[0],\n              by = y11 - oc[1],\n              kc = 1 / sin(acos((ax * bx + ay * by) / (sqrt(ax * ax + ay * ay) * sqrt(bx * bx + by * by))) / 2),\n              lc = sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n          rc0 = min(rc, (r0 - lc) / (kc - 1));\n          rc1 = min(rc, (r1 - lc) / (kc + 1));\n        }\n      }\n\n      // Is the sector collapsed to a line?\n      if (!(da1 > epsilon)) context.moveTo(x01, y01);\n\n      // Does the sector’s outer ring have rounded corners?\n      else if (rc1 > epsilon) {\n        t0 = cornerTangents(x00, y00, x01, y01, r1, rc1, cw);\n        t1 = cornerTangents(x11, y11, x10, y10, r1, rc1, cw);\n\n        context.moveTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc1 < rc) context.arc(t0.cx, t0.cy, rc1, atan2(t0.y01, t0.x01), atan2(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc1, atan2(t0.y01, t0.x01), atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r1, atan2(t0.cy + t0.y11, t0.cx + t0.x11), atan2(t1.cy + t1.y11, t1.cx + t1.x11), !cw);\n          context.arc(t1.cx, t1.cy, rc1, atan2(t1.y11, t1.x11), atan2(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the outer ring just a circular arc?\n      else context.moveTo(x01, y01), context.arc(0, 0, r1, a01, a11, !cw);\n\n      // Is there no inner ring, and it’s a circular sector?\n      // Or perhaps it’s an annular sector collapsed due to padding?\n      if (!(r0 > epsilon) || !(da0 > epsilon)) context.lineTo(x10, y10);\n\n      // Does the sector’s inner ring (or point) have rounded corners?\n      else if (rc0 > epsilon) {\n        t0 = cornerTangents(x10, y10, x11, y11, r0, -rc0, cw);\n        t1 = cornerTangents(x01, y01, x00, y00, r0, -rc0, cw);\n\n        context.lineTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc0 < rc) context.arc(t0.cx, t0.cy, rc0, atan2(t0.y01, t0.x01), atan2(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc0, atan2(t0.y01, t0.x01), atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r0, atan2(t0.cy + t0.y11, t0.cx + t0.x11), atan2(t1.cy + t1.y11, t1.cx + t1.x11), cw);\n          context.arc(t1.cx, t1.cy, rc0, atan2(t1.y11, t1.x11), atan2(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the inner ring just a circular arc?\n      else context.arc(0, 0, r0, a10, a00, cw);\n    }\n\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  arc.centroid = function() {\n    var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2,\n        a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - pi / 2;\n    return [cos(a) * r, sin(a) * r];\n  };\n\n  arc.innerRadius = function(_) {\n    return arguments.length ? (innerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : innerRadius;\n  };\n\n  arc.outerRadius = function(_) {\n    return arguments.length ? (outerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : outerRadius;\n  };\n\n  arc.cornerRadius = function(_) {\n    return arguments.length ? (cornerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : cornerRadius;\n  };\n\n  arc.padRadius = function(_) {\n    return arguments.length ? (padRadius = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), arc) : padRadius;\n  };\n\n  arc.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : startAngle;\n  };\n\n  arc.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : endAngle;\n  };\n\n  arc.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : padAngle;\n  };\n\n  arc.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), arc) : context;\n  };\n\n  return arc;\n}\n","function Linear(context) {\n  this._context = context;\n}\n\nLinear.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: this._context.lineTo(x, y); break;\n    }\n  }\n};\n\nexport default function(context) {\n  return new Linear(context);\n}\n","export function x(p) {\n  return p[0];\n}\n\nexport function y(p) {\n  return p[1];\n}\n","import {path} from \"d3-path\";\nimport constant from \"./constant\";\nimport curveLinear from \"./curve/linear\";\nimport {x as pointX, y as pointY} from \"./point\";\n\nexport default function() {\n  var x = pointX,\n      y = pointY,\n      defined = constant(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function line(data) {\n    var i,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer;\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) output.lineStart();\n        else output.lineEnd();\n      }\n      if (defined0) output.point(+x(d, i, data), +y(d, i, data));\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  line.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), line) : x;\n  };\n\n  line.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), line) : y;\n  };\n\n  line.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant(!!_), line) : defined;\n  };\n\n  line.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;\n  };\n\n  line.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;\n  };\n\n  return line;\n}\n","import {path} from \"d3-path\";\nimport constant from \"./constant\";\nimport curveLinear from \"./curve/linear\";\nimport line from \"./line\";\nimport {x as pointX, y as pointY} from \"./point\";\n\nexport default function() {\n  var x0 = pointX,\n      x1 = null,\n      y0 = constant(0),\n      y1 = pointY,\n      defined = constant(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function area(data) {\n    var i,\n        j,\n        k,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer,\n        x0z = new Array(n),\n        y0z = new Array(n);\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) {\n          j = i;\n          output.areaStart();\n          output.lineStart();\n        } else {\n          output.lineEnd();\n          output.lineStart();\n          for (k = i - 1; k >= j; --k) {\n            output.point(x0z[k], y0z[k]);\n          }\n          output.lineEnd();\n          output.areaEnd();\n        }\n      }\n      if (defined0) {\n        x0z[i] = +x0(d, i, data), y0z[i] = +y0(d, i, data);\n        output.point(x1 ? +x1(d, i, data) : x0z[i], y1 ? +y1(d, i, data) : y0z[i]);\n      }\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  function arealine() {\n    return line().defined(defined).curve(curve).context(context);\n  }\n\n  area.x = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant(+_), x1 = null, area) : x0;\n  };\n\n  area.x0 = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant(+_), area) : x0;\n  };\n\n  area.x1 = function(_) {\n    return arguments.length ? (x1 = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), area) : x1;\n  };\n\n  area.y = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant(+_), y1 = null, area) : y0;\n  };\n\n  area.y0 = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant(+_), area) : y0;\n  };\n\n  area.y1 = function(_) {\n    return arguments.length ? (y1 = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), area) : y1;\n  };\n\n  area.lineX0 =\n  area.lineY0 = function() {\n    return arealine().x(x0).y(y0);\n  };\n\n  area.lineY1 = function() {\n    return arealine().x(x0).y(y1);\n  };\n\n  area.lineX1 = function() {\n    return arealine().x(x1).y(y0);\n  };\n\n  area.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant(!!_), area) : defined;\n  };\n\n  area.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), area) : curve;\n  };\n\n  area.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), area) : context;\n  };\n\n  return area;\n}\n","export default function(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n}\n","export default function(d) {\n  return d;\n}\n","import constant from \"./constant\";\nimport descending from \"./descending\";\nimport identity from \"./identity\";\nimport {tau} from \"./math\";\n\nexport default function() {\n  var value = identity,\n      sortValues = descending,\n      sort = null,\n      startAngle = constant(0),\n      endAngle = constant(tau),\n      padAngle = constant(0);\n\n  function pie(data) {\n    var i,\n        n = data.length,\n        j,\n        k,\n        sum = 0,\n        index = new Array(n),\n        arcs = new Array(n),\n        a0 = +startAngle.apply(this, arguments),\n        da = Math.min(tau, Math.max(-tau, endAngle.apply(this, arguments) - a0)),\n        a1,\n        p = Math.min(Math.abs(da) / n, padAngle.apply(this, arguments)),\n        pa = p * (da < 0 ? -1 : 1),\n        v;\n\n    for (i = 0; i < n; ++i) {\n      if ((v = arcs[index[i] = i] = +value(data[i], i, data)) > 0) {\n        sum += v;\n      }\n    }\n\n    // Optionally sort the arcs by previously-computed values or by data.\n    if (sortValues != null) index.sort(function(i, j) { return sortValues(arcs[i], arcs[j]); });\n    else if (sort != null) index.sort(function(i, j) { return sort(data[i], data[j]); });\n\n    // Compute the arcs! They are stored in the original data's order.\n    for (i = 0, k = sum ? (da - n * pa) / sum : 0; i < n; ++i, a0 = a1) {\n      j = index[i], v = arcs[j], a1 = a0 + (v > 0 ? v * k : 0) + pa, arcs[j] = {\n        data: data[j],\n        index: i,\n        value: v,\n        startAngle: a0,\n        endAngle: a1,\n        padAngle: p\n      };\n    }\n\n    return arcs;\n  }\n\n  pie.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(+_), pie) : value;\n  };\n\n  pie.sortValues = function(_) {\n    return arguments.length ? (sortValues = _, sort = null, pie) : sortValues;\n  };\n\n  pie.sort = function(_) {\n    return arguments.length ? (sort = _, sortValues = null, pie) : sort;\n  };\n\n  pie.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : startAngle;\n  };\n\n  pie.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : endAngle;\n  };\n\n  pie.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : padAngle;\n  };\n\n  return pie;\n}\n","import curveLinear from \"./linear\";\n\nexport var curveRadialLinear = curveRadial(curveLinear);\n\nfunction Radial(curve) {\n  this._curve = curve;\n}\n\nRadial.prototype = {\n  areaStart: function() {\n    this._curve.areaStart();\n  },\n  areaEnd: function() {\n    this._curve.areaEnd();\n  },\n  lineStart: function() {\n    this._curve.lineStart();\n  },\n  lineEnd: function() {\n    this._curve.lineEnd();\n  },\n  point: function(a, r) {\n    this._curve.point(r * Math.sin(a), r * -Math.cos(a));\n  }\n};\n\nexport default function curveRadial(curve) {\n\n  function radial(context) {\n    return new Radial(curve(context));\n  }\n\n  radial._curve = curve;\n\n  return radial;\n}\n","import curveRadial, {curveRadialLinear} from \"./curve/radial\";\nimport line from \"./line\";\n\nexport function lineRadial(l) {\n  var c = l.curve;\n\n  l.angle = l.x, delete l.x;\n  l.radius = l.y, delete l.y;\n\n  l.curve = function(_) {\n    return arguments.length ? c(curveRadial(_)) : c()._curve;\n  };\n\n  return l;\n}\n\nexport default function() {\n  return lineRadial(line().curve(curveRadialLinear));\n}\n","import curveRadial, {curveRadialLinear} from \"./curve/radial\";\nimport area from \"./area\";\nimport {lineRadial} from \"./lineRadial\"\n\nexport default function() {\n  var a = area().curve(curveRadialLinear),\n      c = a.curve,\n      x0 = a.lineX0,\n      x1 = a.lineX1,\n      y0 = a.lineY0,\n      y1 = a.lineY1;\n\n  a.angle = a.x, delete a.x;\n  a.startAngle = a.x0, delete a.x0;\n  a.endAngle = a.x1, delete a.x1;\n  a.radius = a.y, delete a.y;\n  a.innerRadius = a.y0, delete a.y0;\n  a.outerRadius = a.y1, delete a.y1;\n  a.lineStartAngle = function() { return lineRadial(x0()); }, delete a.lineX0;\n  a.lineEndAngle = function() { return lineRadial(x1()); }, delete a.lineX1;\n  a.lineInnerRadius = function() { return lineRadial(y0()); }, delete a.lineY0;\n  a.lineOuterRadius = function() { return lineRadial(y1()); }, delete a.lineY1;\n\n  a.curve = function(_) {\n    return arguments.length ? c(curveRadial(_)) : c()._curve;\n  };\n\n  return a;\n}\n","export default function(x, y) {\n  return [(y = +y) * Math.cos(x -= Math.PI / 2), y * Math.sin(x)];\n}\n","export var slice = Array.prototype.slice;\n","import {path} from \"d3-path\";\nimport {slice} from \"../array\";\nimport constant from \"../constant\";\nimport {x as pointX, y as pointY} from \"../point\";\nimport pointRadial from \"../pointRadial\";\n\nfunction linkSource(d) {\n  return d.source;\n}\n\nfunction linkTarget(d) {\n  return d.target;\n}\n\nfunction link(curve) {\n  var source = linkSource,\n      target = linkTarget,\n      x = pointX,\n      y = pointY,\n      context = null;\n\n  function link() {\n    var buffer, argv = slice.call(arguments), s = source.apply(this, argv), t = target.apply(this, argv);\n    if (!context) context = buffer = path();\n    curve(context, +x.apply(this, (argv[0] = s, argv)), +y.apply(this, argv), +x.apply(this, (argv[0] = t, argv)), +y.apply(this, argv));\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  link.source = function(_) {\n    return arguments.length ? (source = _, link) : source;\n  };\n\n  link.target = function(_) {\n    return arguments.length ? (target = _, link) : target;\n  };\n\n  link.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), link) : x;\n  };\n\n  link.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), link) : y;\n  };\n\n  link.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), link) : context;\n  };\n\n  return link;\n}\n\nfunction curveHorizontal(context, x0, y0, x1, y1) {\n  context.moveTo(x0, y0);\n  context.bezierCurveTo(x0 = (x0 + x1) / 2, y0, x0, y1, x1, y1);\n}\n\nfunction curveVertical(context, x0, y0, x1, y1) {\n  context.moveTo(x0, y0);\n  context.bezierCurveTo(x0, y0 = (y0 + y1) / 2, x1, y0, x1, y1);\n}\n\nfunction curveRadial(context, x0, y0, x1, y1) {\n  var p0 = pointRadial(x0, y0),\n      p1 = pointRadial(x0, y0 = (y0 + y1) / 2),\n      p2 = pointRadial(x1, y0),\n      p3 = pointRadial(x1, y1);\n  context.moveTo(p0[0], p0[1]);\n  context.bezierCurveTo(p1[0], p1[1], p2[0], p2[1], p3[0], p3[1]);\n}\n\nexport function linkHorizontal() {\n  return link(curveHorizontal);\n}\n\nexport function linkVertical() {\n  return link(curveVertical);\n}\n\nexport function linkRadial() {\n  var l = link(curveRadial);\n  l.angle = l.x, delete l.x;\n  l.radius = l.y, delete l.y;\n  return l;\n}\n","import {pi, tau} from \"../math\";\n\nexport default {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / pi);\n    context.moveTo(r, 0);\n    context.arc(0, 0, r, 0, tau);\n  }\n};\n","export default {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / 5) / 2;\n    context.moveTo(-3 * r, -r);\n    context.lineTo(-r, -r);\n    context.lineTo(-r, -3 * r);\n    context.lineTo(r, -3 * r);\n    context.lineTo(r, -r);\n    context.lineTo(3 * r, -r);\n    context.lineTo(3 * r, r);\n    context.lineTo(r, r);\n    context.lineTo(r, 3 * r);\n    context.lineTo(-r, 3 * r);\n    context.lineTo(-r, r);\n    context.lineTo(-3 * r, r);\n    context.closePath();\n  }\n};\n","var tan30 = Math.sqrt(1 / 3),\n    tan30_2 = tan30 * 2;\n\nexport default {\n  draw: function(context, size) {\n    var y = Math.sqrt(size / tan30_2),\n        x = y * tan30;\n    context.moveTo(0, -y);\n    context.lineTo(x, 0);\n    context.lineTo(0, y);\n    context.lineTo(-x, 0);\n    context.closePath();\n  }\n};\n","import {pi, tau} from \"../math\";\n\nvar ka = 0.89081309152928522810,\n    kr = Math.sin(pi / 10) / Math.sin(7 * pi / 10),\n    kx = Math.sin(tau / 10) * kr,\n    ky = -Math.cos(tau / 10) * kr;\n\nexport default {\n  draw: function(context, size) {\n    var r = Math.sqrt(size * ka),\n        x = kx * r,\n        y = ky * r;\n    context.moveTo(0, -r);\n    context.lineTo(x, y);\n    for (var i = 1; i < 5; ++i) {\n      var a = tau * i / 5,\n          c = Math.cos(a),\n          s = Math.sin(a);\n      context.lineTo(s * r, -c * r);\n      context.lineTo(c * x - s * y, s * x + c * y);\n    }\n    context.closePath();\n  }\n};\n","export default {\n  draw: function(context, size) {\n    var w = Math.sqrt(size),\n        x = -w / 2;\n    context.rect(x, x, w, w);\n  }\n};\n","var sqrt3 = Math.sqrt(3);\n\nexport default {\n  draw: function(context, size) {\n    var y = -Math.sqrt(size / (sqrt3 * 3));\n    context.moveTo(0, y * 2);\n    context.lineTo(-sqrt3 * y, -y);\n    context.lineTo(sqrt3 * y, -y);\n    context.closePath();\n  }\n};\n","var c = -0.5,\n    s = Math.sqrt(3) / 2,\n    k = 1 / Math.sqrt(12),\n    a = (k / 2 + 1) * 3;\n\nexport default {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / a),\n        x0 = r / 2,\n        y0 = r * k,\n        x1 = x0,\n        y1 = r * k + r,\n        x2 = -x1,\n        y2 = y1;\n    context.moveTo(x0, y0);\n    context.lineTo(x1, y1);\n    context.lineTo(x2, y2);\n    context.lineTo(c * x0 - s * y0, s * x0 + c * y0);\n    context.lineTo(c * x1 - s * y1, s * x1 + c * y1);\n    context.lineTo(c * x2 - s * y2, s * x2 + c * y2);\n    context.lineTo(c * x0 + s * y0, c * y0 - s * x0);\n    context.lineTo(c * x1 + s * y1, c * y1 - s * x1);\n    context.lineTo(c * x2 + s * y2, c * y2 - s * x2);\n    context.closePath();\n  }\n};\n","import {path} from \"d3-path\";\nimport circle from \"./symbol/circle\";\nimport cross from \"./symbol/cross\";\nimport diamond from \"./symbol/diamond\";\nimport star from \"./symbol/star\";\nimport square from \"./symbol/square\";\nimport triangle from \"./symbol/triangle\";\nimport wye from \"./symbol/wye\";\nimport constant from \"./constant\";\n\nexport var symbols = [\n  circle,\n  cross,\n  diamond,\n  square,\n  star,\n  triangle,\n  wye\n];\n\nexport default function() {\n  var type = constant(circle),\n      size = constant(64),\n      context = null;\n\n  function symbol() {\n    var buffer;\n    if (!context) context = buffer = path();\n    type.apply(this, arguments).draw(context, +size.apply(this, arguments));\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  symbol.type = function(_) {\n    return arguments.length ? (type = typeof _ === \"function\" ? _ : constant(_), symbol) : type;\n  };\n\n  symbol.size = function(_) {\n    return arguments.length ? (size = typeof _ === \"function\" ? _ : constant(+_), symbol) : size;\n  };\n\n  symbol.context = function(_) {\n    return arguments.length ? (context = _ == null ? null : _, symbol) : context;\n  };\n\n  return symbol;\n}\n","export default function() {}\n","export function point(that, x, y) {\n  that._context.bezierCurveTo(\n    (2 * that._x0 + that._x1) / 3,\n    (2 * that._y0 + that._y1) / 3,\n    (that._x0 + 2 * that._x1) / 3,\n    (that._y0 + 2 * that._y1) / 3,\n    (that._x0 + 4 * that._x1 + x) / 6,\n    (that._y0 + 4 * that._y1 + y) / 6\n  );\n}\n\nexport function Basis(context) {\n  this._context = context;\n}\n\nBasis.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 3: point(this, this._x1, this._y1); // proceed\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._context.lineTo((5 * this._x0 + this._x1) / 6, (5 * this._y0 + this._y1) / 6); // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nexport default function(context) {\n  return new Basis(context);\n}\n","import noop from \"../noop\";\nimport {point} from \"./basis\";\n\nfunction BasisClosed(context) {\n  this._context = context;\n}\n\nBasisClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x2, this._y2);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.moveTo((this._x2 + 2 * this._x3) / 3, (this._y2 + 2 * this._y3) / 3);\n        this._context.lineTo((this._x3 + 2 * this._x2) / 3, (this._y3 + 2 * this._y2) / 3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x2, this._y2);\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x2 = x, this._y2 = y; break;\n      case 1: this._point = 2; this._x3 = x, this._y3 = y; break;\n      case 2: this._point = 3; this._x4 = x, this._y4 = y; this._context.moveTo((this._x0 + 4 * this._x1 + x) / 6, (this._y0 + 4 * this._y1 + y) / 6); break;\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nexport default function(context) {\n  return new BasisClosed(context);\n}\n","import {point} from \"./basis\";\n\nfunction BasisOpen(context) {\n  this._context = context;\n}\n\nBasisOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; var x0 = (this._x0 + 4 * this._x1 + x) / 6, y0 = (this._y0 + 4 * this._y1 + y) / 6; this._line ? this._context.lineTo(x0, y0) : this._context.moveTo(x0, y0); break;\n      case 3: this._point = 4; // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nexport default function(context) {\n  return new BasisOpen(context);\n}\n","import {Basis} from \"./basis\";\n\nfunction Bundle(context, beta) {\n  this._basis = new Basis(context);\n  this._beta = beta;\n}\n\nBundle.prototype = {\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n    this._basis.lineStart();\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        j = x.length - 1;\n\n    if (j > 0) {\n      var x0 = x[0],\n          y0 = y[0],\n          dx = x[j] - x0,\n          dy = y[j] - y0,\n          i = -1,\n          t;\n\n      while (++i <= j) {\n        t = i / j;\n        this._basis.point(\n          this._beta * x[i] + (1 - this._beta) * (x0 + t * dx),\n          this._beta * y[i] + (1 - this._beta) * (y0 + t * dy)\n        );\n      }\n    }\n\n    this._x = this._y = null;\n    this._basis.lineEnd();\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\nexport default (function custom(beta) {\n\n  function bundle(context) {\n    return beta === 1 ? new Basis(context) : new Bundle(context, beta);\n  }\n\n  bundle.beta = function(beta) {\n    return custom(+beta);\n  };\n\n  return bundle;\n})(0.85);\n","export function point(that, x, y) {\n  that._context.bezierCurveTo(\n    that._x1 + that._k * (that._x2 - that._x0),\n    that._y1 + that._k * (that._y2 - that._y0),\n    that._x2 + that._k * (that._x1 - x),\n    that._y2 + that._k * (that._y1 - y),\n    that._x2,\n    that._y2\n  );\n}\n\nexport function Cardinal(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinal.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: point(this, this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; this._x1 = x, this._y1 = y; break;\n      case 2: this._point = 3; // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(tension) {\n\n  function cardinal(context) {\n    return new Cardinal(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n","import noop from \"../noop\";\nimport {point} from \"./cardinal\";\n\nexport function CardinalClosed(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalClosed(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n","import {point} from \"./cardinal\";\n\nexport function CardinalOpen(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalOpen(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n","import {epsilon} from \"../math\";\nimport {Cardinal} from \"./cardinal\";\n\nexport function point(that, x, y) {\n  var x1 = that._x1,\n      y1 = that._y1,\n      x2 = that._x2,\n      y2 = that._y2;\n\n  if (that._l01_a > epsilon) {\n    var a = 2 * that._l01_2a + 3 * that._l01_a * that._l12_a + that._l12_2a,\n        n = 3 * that._l01_a * (that._l01_a + that._l12_a);\n    x1 = (x1 * a - that._x0 * that._l12_2a + that._x2 * that._l01_2a) / n;\n    y1 = (y1 * a - that._y0 * that._l12_2a + that._y2 * that._l01_2a) / n;\n  }\n\n  if (that._l23_a > epsilon) {\n    var b = 2 * that._l23_2a + 3 * that._l23_a * that._l12_a + that._l12_2a,\n        m = 3 * that._l23_a * (that._l23_a + that._l12_a);\n    x2 = (x2 * b + that._x1 * that._l23_2a - x * that._l12_2a) / m;\n    y2 = (y2 * b + that._y1 * that._l23_2a - y * that._l12_2a) / m;\n  }\n\n  that._context.bezierCurveTo(x1, y1, x2, y2, that._x2, that._y2);\n}\n\nfunction CatmullRom(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRom.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: this.point(this._x2, this._y2); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; // proceed\n      default: point(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRom(context, alpha) : new Cardinal(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n","import {CardinalClosed} from \"./cardinalClosed\";\nimport noop from \"../noop\";\nimport {point} from \"./catmullRom\";\n\nfunction CatmullRomClosed(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomClosed(context, alpha) : new CardinalClosed(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n","import {CardinalOpen} from \"./cardinalOpen\";\nimport {point} from \"./catmullRom\";\n\nfunction CatmullRomOpen(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomOpen(context, alpha) : new CardinalOpen(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n","import noop from \"../noop\";\n\nfunction LinearClosed(context) {\n  this._context = context;\n}\n\nLinearClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._point) this._context.closePath();\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    if (this._point) this._context.lineTo(x, y);\n    else this._point = 1, this._context.moveTo(x, y);\n  }\n};\n\nexport default function(context) {\n  return new LinearClosed(context);\n}\n","function sign(x) {\n  return x < 0 ? -1 : 1;\n}\n\n// Calculate the slopes of the tangents (Hermite-type interpolation) based on\n// the following paper: Steffen, M. 1990. A Simple Method for Monotonic\n// Interpolation in One Dimension. Astronomy and Astrophysics, Vol. 239, NO.\n// NOV(II), P. 443, 1990.\nfunction slope3(that, x2, y2) {\n  var h0 = that._x1 - that._x0,\n      h1 = x2 - that._x1,\n      s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0),\n      s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0),\n      p = (s0 * h1 + s1 * h0) / (h0 + h1);\n  return (sign(s0) + sign(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;\n}\n\n// Calculate a one-sided slope.\nfunction slope2(that, t) {\n  var h = that._x1 - that._x0;\n  return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;\n}\n\n// According to https://en.wikipedia.org/wiki/Cubic_Hermite_spline#Representations\n// \"you can express cubic Hermite interpolation in terms of cubic Bézier curves\n// with respect to the four values p0, p0 + m0 / 3, p1 - m1 / 3, p1\".\nfunction point(that, t0, t1) {\n  var x0 = that._x0,\n      y0 = that._y0,\n      x1 = that._x1,\n      y1 = that._y1,\n      dx = (x1 - x0) / 3;\n  that._context.bezierCurveTo(x0 + dx, y0 + dx * t0, x1 - dx, y1 - dx * t1, x1, y1);\n}\n\nfunction MonotoneX(context) {\n  this._context = context;\n}\n\nMonotoneX.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 =\n    this._t0 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n      case 3: point(this, this._t0, slope2(this, this._t0)); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    var t1 = NaN;\n\n    x = +x, y = +y;\n    if (x === this._x1 && y === this._y1) return; // Ignore coincident points.\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; point(this, slope2(this, t1 = slope3(this, x, y)), t1); break;\n      default: point(this, this._t0, t1 = slope3(this, x, y)); break;\n    }\n\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n    this._t0 = t1;\n  }\n}\n\nfunction MonotoneY(context) {\n  this._context = new ReflectContext(context);\n}\n\n(MonotoneY.prototype = Object.create(MonotoneX.prototype)).point = function(x, y) {\n  MonotoneX.prototype.point.call(this, y, x);\n};\n\nfunction ReflectContext(context) {\n  this._context = context;\n}\n\nReflectContext.prototype = {\n  moveTo: function(x, y) { this._context.moveTo(y, x); },\n  closePath: function() { this._context.closePath(); },\n  lineTo: function(x, y) { this._context.lineTo(y, x); },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) { this._context.bezierCurveTo(y1, x1, y2, x2, y, x); }\n};\n\nexport function monotoneX(context) {\n  return new MonotoneX(context);\n}\n\nexport function monotoneY(context) {\n  return new MonotoneY(context);\n}\n","function Natural(context) {\n  this._context = context;\n}\n\nNatural.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        n = x.length;\n\n    if (n) {\n      this._line ? this._context.lineTo(x[0], y[0]) : this._context.moveTo(x[0], y[0]);\n      if (n === 2) {\n        this._context.lineTo(x[1], y[1]);\n      } else {\n        var px = controlPoints(x),\n            py = controlPoints(y);\n        for (var i0 = 0, i1 = 1; i1 < n; ++i0, ++i1) {\n          this._context.bezierCurveTo(px[0][i0], py[0][i0], px[1][i0], py[1][i0], x[i1], y[i1]);\n        }\n      }\n    }\n\n    if (this._line || (this._line !== 0 && n === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n    this._x = this._y = null;\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\n// See https://www.particleincell.com/2012/bezier-splines/ for derivation.\nfunction controlPoints(x) {\n  var i,\n      n = x.length - 1,\n      m,\n      a = new Array(n),\n      b = new Array(n),\n      r = new Array(n);\n  a[0] = 0, b[0] = 2, r[0] = x[0] + 2 * x[1];\n  for (i = 1; i < n - 1; ++i) a[i] = 1, b[i] = 4, r[i] = 4 * x[i] + 2 * x[i + 1];\n  a[n - 1] = 2, b[n - 1] = 7, r[n - 1] = 8 * x[n - 1] + x[n];\n  for (i = 1; i < n; ++i) m = a[i] / b[i - 1], b[i] -= m, r[i] -= m * r[i - 1];\n  a[n - 1] = r[n - 1] / b[n - 1];\n  for (i = n - 2; i >= 0; --i) a[i] = (r[i] - a[i + 1]) / b[i];\n  b[n - 1] = (x[n] + a[n - 1]) / 2;\n  for (i = 0; i < n - 1; ++i) b[i] = 2 * x[i + 1] - a[i + 1];\n  return [a, b];\n}\n\nexport default function(context) {\n  return new Natural(context);\n}\n","function Step(context, t) {\n  this._context = context;\n  this._t = t;\n}\n\nStep.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = this._y = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    if (this._line >= 0) this._t = 1 - this._t, this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: {\n        if (this._t <= 0) {\n          this._context.lineTo(this._x, y);\n          this._context.lineTo(x, y);\n        } else {\n          var x1 = this._x * (1 - this._t) + x * this._t;\n          this._context.lineTo(x1, this._y);\n          this._context.lineTo(x1, y);\n        }\n        break;\n      }\n    }\n    this._x = x, this._y = y;\n  }\n};\n\nexport default function(context) {\n  return new Step(context, 0.5);\n}\n\nexport function stepBefore(context) {\n  return new Step(context, 0);\n}\n\nexport function stepAfter(context) {\n  return new Step(context, 1);\n}\n","export default function(series, order) {\n  if (!((n = series.length) > 1)) return;\n  for (var i = 1, j, s0, s1 = series[order[0]], n, m = s1.length; i < n; ++i) {\n    s0 = s1, s1 = series[order[i]];\n    for (j = 0; j < m; ++j) {\n      s1[j][1] += s1[j][0] = isNaN(s0[j][1]) ? s0[j][0] : s0[j][1];\n    }\n  }\n}\n","export default function(series) {\n  var n = series.length, o = new Array(n);\n  while (--n >= 0) o[n] = n;\n  return o;\n}\n","import {slice} from \"./array\";\nimport constant from \"./constant\";\nimport offsetNone from \"./offset/none\";\nimport orderNone from \"./order/none\";\n\nfunction stackValue(d, key) {\n  return d[key];\n}\n\nexport default function() {\n  var keys = constant([]),\n      order = orderNone,\n      offset = offsetNone,\n      value = stackValue;\n\n  function stack(data) {\n    var kz = keys.apply(this, arguments),\n        i,\n        m = data.length,\n        n = kz.length,\n        sz = new Array(n),\n        oz;\n\n    for (i = 0; i < n; ++i) {\n      for (var ki = kz[i], si = sz[i] = new Array(m), j = 0, sij; j < m; ++j) {\n        si[j] = sij = [0, +value(data[j], ki, j, data)];\n        sij.data = data[j];\n      }\n      si.key = ki;\n    }\n\n    for (i = 0, oz = order(sz); i < n; ++i) {\n      sz[oz[i]].index = i;\n    }\n\n    offset(sz, oz);\n    return sz;\n  }\n\n  stack.keys = function(_) {\n    return arguments.length ? (keys = typeof _ === \"function\" ? _ : constant(slice.call(_)), stack) : keys;\n  };\n\n  stack.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(+_), stack) : value;\n  };\n\n  stack.order = function(_) {\n    return arguments.length ? (order = _ == null ? orderNone : typeof _ === \"function\" ? _ : constant(slice.call(_)), stack) : order;\n  };\n\n  stack.offset = function(_) {\n    return arguments.length ? (offset = _ == null ? offsetNone : _, stack) : offset;\n  };\n\n  return stack;\n}\n","import none from \"./none\";\n\nexport default function(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var i, n, j = 0, m = series[0].length, y; j < m; ++j) {\n    for (y = i = 0; i < n; ++i) y += series[i][j][1] || 0;\n    if (y) for (i = 0; i < n; ++i) series[i][j][1] /= y;\n  }\n  none(series, order);\n}\n","export default function(series, order) {\n  if (!((n = series.length) > 1)) return;\n  for (var i, j = 0, d, dy, yp, yn, n, m = series[order[0]].length; j < m; ++j) {\n    for (yp = yn = 0, i = 0; i < n; ++i) {\n      if ((dy = (d = series[order[i]][j])[1] - d[0]) >= 0) {\n        d[0] = yp, d[1] = yp += dy;\n      } else if (dy < 0) {\n        d[1] = yn, d[0] = yn += dy;\n      } else {\n        d[0] = yp;\n      }\n    }\n  }\n}\n","import none from \"./none\";\n\nexport default function(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var j = 0, s0 = series[order[0]], n, m = s0.length; j < m; ++j) {\n    for (var i = 0, y = 0; i < n; ++i) y += series[i][j][1] || 0;\n    s0[j][1] += s0[j][0] = -y / 2;\n  }\n  none(series, order);\n}\n","import none from \"./none\";\n\nexport default function(series, order) {\n  if (!((n = series.length) > 0) || !((m = (s0 = series[order[0]]).length) > 0)) return;\n  for (var y = 0, j = 1, s0, m, n; j < m; ++j) {\n    for (var i = 0, s1 = 0, s2 = 0; i < n; ++i) {\n      var si = series[order[i]],\n          sij0 = si[j][1] || 0,\n          sij1 = si[j - 1][1] || 0,\n          s3 = (sij0 - sij1) / 2;\n      for (var k = 0; k < i; ++k) {\n        var sk = series[order[k]],\n            skj0 = sk[j][1] || 0,\n            skj1 = sk[j - 1][1] || 0;\n        s3 += skj0 - skj1;\n      }\n      s1 += sij0, s2 += s3 * sij0;\n    }\n    s0[j - 1][1] += s0[j - 1][0] = y;\n    if (s1) y -= s2 / s1;\n  }\n  s0[j - 1][1] += s0[j - 1][0] = y;\n  none(series, order);\n}\n","import none from \"./none\";\n\nexport default function(series) {\n  var sums = series.map(sum);\n  return none(series).sort(function(a, b) { return sums[a] - sums[b]; });\n}\n\nexport function sum(series) {\n  var s = 0, i = -1, n = series.length, v;\n  while (++i < n) if (v = +series[i][1]) s += v;\n  return s;\n}\n","import ascending from \"./ascending\";\n\nexport default function(series) {\n  return ascending(series).reverse();\n}\n","import none from \"./none\";\nimport {sum} from \"./ascending\";\n\nexport default function(series) {\n  var n = series.length,\n      i,\n      j,\n      sums = series.map(sum),\n      order = none(series).sort(function(a, b) { return sums[b] - sums[a]; }),\n      top = 0,\n      bottom = 0,\n      tops = [],\n      bottoms = [];\n\n  for (i = 0; i < n; ++i) {\n    j = order[i];\n    if (top < bottom) {\n      top += sums[j];\n      tops.push(j);\n    } else {\n      bottom += sums[j];\n      bottoms.push(j);\n    }\n  }\n\n  return bottoms.reverse().concat(tops);\n}\n","import none from \"./none\";\n\nexport default function(series) {\n  return none(series).reverse();\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export function x(d) {\n  return d[0];\n}\n\nexport function y(d) {\n  return d[1];\n}\n","function RedBlackTree() {\n  this._ = null; // root node\n}\n\nexport function RedBlackNode(node) {\n  node.U = // parent node\n  node.C = // color - true for red, false for black\n  node.L = // left node\n  node.R = // right node\n  node.P = // previous node\n  node.N = null; // next node\n}\n\nRedBlackTree.prototype = {\n  constructor: RedBlackTree,\n\n  insert: function(after, node) {\n    var parent, grandpa, uncle;\n\n    if (after) {\n      node.P = after;\n      node.N = after.N;\n      if (after.N) after.N.P = node;\n      after.N = node;\n      if (after.R) {\n        after = after.R;\n        while (after.L) after = after.L;\n        after.L = node;\n      } else {\n        after.R = node;\n      }\n      parent = after;\n    } else if (this._) {\n      after = RedBlackFirst(this._);\n      node.P = null;\n      node.N = after;\n      after.P = after.L = node;\n      parent = after;\n    } else {\n      node.P = node.N = null;\n      this._ = node;\n      parent = null;\n    }\n    node.L = node.R = null;\n    node.U = parent;\n    node.C = true;\n\n    after = node;\n    while (parent && parent.C) {\n      grandpa = parent.U;\n      if (parent === grandpa.L) {\n        uncle = grandpa.R;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.R) {\n            RedBlackRotateLeft(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateRight(this, grandpa);\n        }\n      } else {\n        uncle = grandpa.L;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.L) {\n            RedBlackRotateRight(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateLeft(this, grandpa);\n        }\n      }\n      parent = after.U;\n    }\n    this._.C = false;\n  },\n\n  remove: function(node) {\n    if (node.N) node.N.P = node.P;\n    if (node.P) node.P.N = node.N;\n    node.N = node.P = null;\n\n    var parent = node.U,\n        sibling,\n        left = node.L,\n        right = node.R,\n        next,\n        red;\n\n    if (!left) next = right;\n    else if (!right) next = left;\n    else next = RedBlackFirst(right);\n\n    if (parent) {\n      if (parent.L === node) parent.L = next;\n      else parent.R = next;\n    } else {\n      this._ = next;\n    }\n\n    if (left && right) {\n      red = next.C;\n      next.C = node.C;\n      next.L = left;\n      left.U = next;\n      if (next !== right) {\n        parent = next.U;\n        next.U = node.U;\n        node = next.R;\n        parent.L = node;\n        next.R = right;\n        right.U = next;\n      } else {\n        next.U = parent;\n        parent = next;\n        node = next.R;\n      }\n    } else {\n      red = node.C;\n      node = next;\n    }\n\n    if (node) node.U = parent;\n    if (red) return;\n    if (node && node.C) { node.C = false; return; }\n\n    do {\n      if (node === this._) break;\n      if (node === parent.L) {\n        sibling = parent.R;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateLeft(this, parent);\n          sibling = parent.R;\n        }\n        if ((sibling.L && sibling.L.C)\n            || (sibling.R && sibling.R.C)) {\n          if (!sibling.R || !sibling.R.C) {\n            sibling.L.C = false;\n            sibling.C = true;\n            RedBlackRotateRight(this, sibling);\n            sibling = parent.R;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.R.C = false;\n          RedBlackRotateLeft(this, parent);\n          node = this._;\n          break;\n        }\n      } else {\n        sibling = parent.L;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateRight(this, parent);\n          sibling = parent.L;\n        }\n        if ((sibling.L && sibling.L.C)\n          || (sibling.R && sibling.R.C)) {\n          if (!sibling.L || !sibling.L.C) {\n            sibling.R.C = false;\n            sibling.C = true;\n            RedBlackRotateLeft(this, sibling);\n            sibling = parent.L;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.L.C = false;\n          RedBlackRotateRight(this, parent);\n          node = this._;\n          break;\n        }\n      }\n      sibling.C = true;\n      node = parent;\n      parent = parent.U;\n    } while (!node.C);\n\n    if (node) node.C = false;\n  }\n};\n\nfunction RedBlackRotateLeft(tree, node) {\n  var p = node,\n      q = node.R,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.R = q.L;\n  if (p.R) p.R.U = p;\n  q.L = p;\n}\n\nfunction RedBlackRotateRight(tree, node) {\n  var p = node,\n      q = node.L,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.L = q.R;\n  if (p.L) p.L.U = p;\n  q.R = p;\n}\n\nfunction RedBlackFirst(node) {\n  while (node.L) node = node.L;\n  return node;\n}\n\nexport default RedBlackTree;\n","import {cells, edges, epsilon} from \"./Diagram\";\n\nexport function createEdge(left, right, v0, v1) {\n  var edge = [null, null],\n      index = edges.push(edge) - 1;\n  edge.left = left;\n  edge.right = right;\n  if (v0) setEdgeEnd(edge, left, right, v0);\n  if (v1) setEdgeEnd(edge, right, left, v1);\n  cells[left.index].halfedges.push(index);\n  cells[right.index].halfedges.push(index);\n  return edge;\n}\n\nexport function createBorderEdge(left, v0, v1) {\n  var edge = [v0, v1];\n  edge.left = left;\n  return edge;\n}\n\nexport function setEdgeEnd(edge, left, right, vertex) {\n  if (!edge[0] && !edge[1]) {\n    edge[0] = vertex;\n    edge.left = left;\n    edge.right = right;\n  } else if (edge.left === right) {\n    edge[1] = vertex;\n  } else {\n    edge[0] = vertex;\n  }\n}\n\n// Liang–Barsky line clipping.\nfunction clipEdge(edge, x0, y0, x1, y1) {\n  var a = edge[0],\n      b = edge[1],\n      ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (!(t0 > 0) && !(t1 < 1)) return true; // TODO Better check?\n\n  if (t0 > 0) edge[0] = [ax + t0 * dx, ay + t0 * dy];\n  if (t1 < 1) edge[1] = [ax + t1 * dx, ay + t1 * dy];\n  return true;\n}\n\nfunction connectEdge(edge, x0, y0, x1, y1) {\n  var v1 = edge[1];\n  if (v1) return true;\n\n  var v0 = edge[0],\n      left = edge.left,\n      right = edge.right,\n      lx = left[0],\n      ly = left[1],\n      rx = right[0],\n      ry = right[1],\n      fx = (lx + rx) / 2,\n      fy = (ly + ry) / 2,\n      fm,\n      fb;\n\n  if (ry === ly) {\n    if (fx < x0 || fx >= x1) return;\n    if (lx > rx) {\n      if (!v0) v0 = [fx, y0];\n      else if (v0[1] >= y1) return;\n      v1 = [fx, y1];\n    } else {\n      if (!v0) v0 = [fx, y1];\n      else if (v0[1] < y0) return;\n      v1 = [fx, y0];\n    }\n  } else {\n    fm = (lx - rx) / (ry - ly);\n    fb = fy - fm * fx;\n    if (fm < -1 || fm > 1) {\n      if (lx > rx) {\n        if (!v0) v0 = [(y0 - fb) / fm, y0];\n        else if (v0[1] >= y1) return;\n        v1 = [(y1 - fb) / fm, y1];\n      } else {\n        if (!v0) v0 = [(y1 - fb) / fm, y1];\n        else if (v0[1] < y0) return;\n        v1 = [(y0 - fb) / fm, y0];\n      }\n    } else {\n      if (ly < ry) {\n        if (!v0) v0 = [x0, fm * x0 + fb];\n        else if (v0[0] >= x1) return;\n        v1 = [x1, fm * x1 + fb];\n      } else {\n        if (!v0) v0 = [x1, fm * x1 + fb];\n        else if (v0[0] < x0) return;\n        v1 = [x0, fm * x0 + fb];\n      }\n    }\n  }\n\n  edge[0] = v0;\n  edge[1] = v1;\n  return true;\n}\n\nexport function clipEdges(x0, y0, x1, y1) {\n  var i = edges.length,\n      edge;\n\n  while (i--) {\n    if (!connectEdge(edge = edges[i], x0, y0, x1, y1)\n        || !clipEdge(edge, x0, y0, x1, y1)\n        || !(Math.abs(edge[0][0] - edge[1][0]) > epsilon\n            || Math.abs(edge[0][1] - edge[1][1]) > epsilon)) {\n      delete edges[i];\n    }\n  }\n}\n","import {createBorderEdge} from \"./Edge\";\nimport {cells, edges, epsilon} from \"./Diagram\";\n\nexport function createCell(site) {\n  return cells[site.index] = {\n    site: site,\n    halfedges: []\n  };\n}\n\nfunction cellHalfedgeAngle(cell, edge) {\n  var site = cell.site,\n      va = edge.left,\n      vb = edge.right;\n  if (site === vb) vb = va, va = site;\n  if (vb) return Math.atan2(vb[1] - va[1], vb[0] - va[0]);\n  if (site === va) va = edge[1], vb = edge[0];\n  else va = edge[0], vb = edge[1];\n  return Math.atan2(va[0] - vb[0], vb[1] - va[1]);\n}\n\nexport function cellHalfedgeStart(cell, edge) {\n  return edge[+(edge.left !== cell.site)];\n}\n\nexport function cellHalfedgeEnd(cell, edge) {\n  return edge[+(edge.left === cell.site)];\n}\n\nexport function sortCellHalfedges() {\n  for (var i = 0, n = cells.length, cell, halfedges, j, m; i < n; ++i) {\n    if ((cell = cells[i]) && (m = (halfedges = cell.halfedges).length)) {\n      var index = new Array(m),\n          array = new Array(m);\n      for (j = 0; j < m; ++j) index[j] = j, array[j] = cellHalfedgeAngle(cell, edges[halfedges[j]]);\n      index.sort(function(i, j) { return array[j] - array[i]; });\n      for (j = 0; j < m; ++j) array[j] = halfedges[index[j]];\n      for (j = 0; j < m; ++j) halfedges[j] = array[j];\n    }\n  }\n}\n\nexport function clipCells(x0, y0, x1, y1) {\n  var nCells = cells.length,\n      iCell,\n      cell,\n      site,\n      iHalfedge,\n      halfedges,\n      nHalfedges,\n      start,\n      startX,\n      startY,\n      end,\n      endX,\n      endY,\n      cover = true;\n\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      site = cell.site;\n      halfedges = cell.halfedges;\n      iHalfedge = halfedges.length;\n\n      // Remove any dangling clipped edges.\n      while (iHalfedge--) {\n        if (!edges[halfedges[iHalfedge]]) {\n          halfedges.splice(iHalfedge, 1);\n        }\n      }\n\n      // Insert any border edges as necessary.\n      iHalfedge = 0, nHalfedges = halfedges.length;\n      while (iHalfedge < nHalfedges) {\n        end = cellHalfedgeEnd(cell, edges[halfedges[iHalfedge]]), endX = end[0], endY = end[1];\n        start = cellHalfedgeStart(cell, edges[halfedges[++iHalfedge % nHalfedges]]), startX = start[0], startY = start[1];\n        if (Math.abs(endX - startX) > epsilon || Math.abs(endY - startY) > epsilon) {\n          halfedges.splice(iHalfedge, 0, edges.push(createBorderEdge(site, end,\n              Math.abs(endX - x0) < epsilon && y1 - endY > epsilon ? [x0, Math.abs(startX - x0) < epsilon ? startY : y1]\n              : Math.abs(endY - y1) < epsilon && x1 - endX > epsilon ? [Math.abs(startY - y1) < epsilon ? startX : x1, y1]\n              : Math.abs(endX - x1) < epsilon && endY - y0 > epsilon ? [x1, Math.abs(startX - x1) < epsilon ? startY : y0]\n              : Math.abs(endY - y0) < epsilon && endX - x0 > epsilon ? [Math.abs(startY - y0) < epsilon ? startX : x0, y0]\n              : null)) - 1);\n          ++nHalfedges;\n        }\n      }\n\n      if (nHalfedges) cover = false;\n    }\n  }\n\n  // If there weren’t any edges, have the closest site cover the extent.\n  // It doesn’t matter which corner of the extent we measure!\n  if (cover) {\n    var dx, dy, d2, dc = Infinity;\n\n    for (iCell = 0, cover = null; iCell < nCells; ++iCell) {\n      if (cell = cells[iCell]) {\n        site = cell.site;\n        dx = site[0] - x0;\n        dy = site[1] - y0;\n        d2 = dx * dx + dy * dy;\n        if (d2 < dc) dc = d2, cover = cell;\n      }\n    }\n\n    if (cover) {\n      var v00 = [x0, y0], v01 = [x0, y1], v11 = [x1, y1], v10 = [x1, y0];\n      cover.halfedges.push(\n        edges.push(createBorderEdge(site = cover.site, v00, v01)) - 1,\n        edges.push(createBorderEdge(site, v01, v11)) - 1,\n        edges.push(createBorderEdge(site, v11, v10)) - 1,\n        edges.push(createBorderEdge(site, v10, v00)) - 1\n      );\n    }\n  }\n\n  // Lastly delete any cells with no edges; these were entirely clipped.\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      if (!cell.halfedges.length) {\n        delete cells[iCell];\n      }\n    }\n  }\n}\n","import {RedBlackNode} from \"./RedBlackTree\";\nimport {circles, epsilon2} from \"./Diagram\";\n\nvar circlePool = [];\n\nexport var firstCircle;\n\nfunction Circle() {\n  RedBlackNode(this);\n  this.x =\n  this.y =\n  this.arc =\n  this.site =\n  this.cy = null;\n}\n\nexport function attachCircle(arc) {\n  var lArc = arc.P,\n      rArc = arc.N;\n\n  if (!lArc || !rArc) return;\n\n  var lSite = lArc.site,\n      cSite = arc.site,\n      rSite = rArc.site;\n\n  if (lSite === rSite) return;\n\n  var bx = cSite[0],\n      by = cSite[1],\n      ax = lSite[0] - bx,\n      ay = lSite[1] - by,\n      cx = rSite[0] - bx,\n      cy = rSite[1] - by;\n\n  var d = 2 * (ax * cy - ay * cx);\n  if (d >= -epsilon2) return;\n\n  var ha = ax * ax + ay * ay,\n      hc = cx * cx + cy * cy,\n      x = (cy * ha - ay * hc) / d,\n      y = (ax * hc - cx * ha) / d;\n\n  var circle = circlePool.pop() || new Circle;\n  circle.arc = arc;\n  circle.site = cSite;\n  circle.x = x + bx;\n  circle.y = (circle.cy = y + by) + Math.sqrt(x * x + y * y); // y bottom\n\n  arc.circle = circle;\n\n  var before = null,\n      node = circles._;\n\n  while (node) {\n    if (circle.y < node.y || (circle.y === node.y && circle.x <= node.x)) {\n      if (node.L) node = node.L;\n      else { before = node.P; break; }\n    } else {\n      if (node.R) node = node.R;\n      else { before = node; break; }\n    }\n  }\n\n  circles.insert(before, circle);\n  if (!before) firstCircle = circle;\n}\n\nexport function detachCircle(arc) {\n  var circle = arc.circle;\n  if (circle) {\n    if (!circle.P) firstCircle = circle.N;\n    circles.remove(circle);\n    circlePool.push(circle);\n    RedBlackNode(circle);\n    arc.circle = null;\n  }\n}\n","import {RedBlackNode} from \"./RedBlackTree\";\nimport {createCell} from \"./Cell\";\nimport {attachCircle, detachCircle} from \"./Circle\";\nimport {createEdge, setEdgeEnd} from \"./Edge\";\nimport {beaches, epsilon} from \"./Diagram\";\n\nvar beachPool = [];\n\nfunction Beach() {\n  RedBlackNode(this);\n  this.edge =\n  this.site =\n  this.circle = null;\n}\n\nfunction createBeach(site) {\n  var beach = beachPool.pop() || new Beach;\n  beach.site = site;\n  return beach;\n}\n\nfunction detachBeach(beach) {\n  detachCircle(beach);\n  beaches.remove(beach);\n  beachPool.push(beach);\n  RedBlackNode(beach);\n}\n\nexport function removeBeach(beach) {\n  var circle = beach.circle,\n      x = circle.x,\n      y = circle.cy,\n      vertex = [x, y],\n      previous = beach.P,\n      next = beach.N,\n      disappearing = [beach];\n\n  detachBeach(beach);\n\n  var lArc = previous;\n  while (lArc.circle\n      && Math.abs(x - lArc.circle.x) < epsilon\n      && Math.abs(y - lArc.circle.cy) < epsilon) {\n    previous = lArc.P;\n    disappearing.unshift(lArc);\n    detachBeach(lArc);\n    lArc = previous;\n  }\n\n  disappearing.unshift(lArc);\n  detachCircle(lArc);\n\n  var rArc = next;\n  while (rArc.circle\n      && Math.abs(x - rArc.circle.x) < epsilon\n      && Math.abs(y - rArc.circle.cy) < epsilon) {\n    next = rArc.N;\n    disappearing.push(rArc);\n    detachBeach(rArc);\n    rArc = next;\n  }\n\n  disappearing.push(rArc);\n  detachCircle(rArc);\n\n  var nArcs = disappearing.length,\n      iArc;\n  for (iArc = 1; iArc < nArcs; ++iArc) {\n    rArc = disappearing[iArc];\n    lArc = disappearing[iArc - 1];\n    setEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n  }\n\n  lArc = disappearing[0];\n  rArc = disappearing[nArcs - 1];\n  rArc.edge = createEdge(lArc.site, rArc.site, null, vertex);\n\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nexport function addBeach(site) {\n  var x = site[0],\n      directrix = site[1],\n      lArc,\n      rArc,\n      dxl,\n      dxr,\n      node = beaches._;\n\n  while (node) {\n    dxl = leftBreakPoint(node, directrix) - x;\n    if (dxl > epsilon) node = node.L; else {\n      dxr = x - rightBreakPoint(node, directrix);\n      if (dxr > epsilon) {\n        if (!node.R) {\n          lArc = node;\n          break;\n        }\n        node = node.R;\n      } else {\n        if (dxl > -epsilon) {\n          lArc = node.P;\n          rArc = node;\n        } else if (dxr > -epsilon) {\n          lArc = node;\n          rArc = node.N;\n        } else {\n          lArc = rArc = node;\n        }\n        break;\n      }\n    }\n  }\n\n  createCell(site);\n  var newArc = createBeach(site);\n  beaches.insert(lArc, newArc);\n\n  if (!lArc && !rArc) return;\n\n  if (lArc === rArc) {\n    detachCircle(lArc);\n    rArc = createBeach(lArc.site);\n    beaches.insert(newArc, rArc);\n    newArc.edge = rArc.edge = createEdge(lArc.site, newArc.site);\n    attachCircle(lArc);\n    attachCircle(rArc);\n    return;\n  }\n\n  if (!rArc) { // && lArc\n    newArc.edge = createEdge(lArc.site, newArc.site);\n    return;\n  }\n\n  // else lArc !== rArc\n  detachCircle(lArc);\n  detachCircle(rArc);\n\n  var lSite = lArc.site,\n      ax = lSite[0],\n      ay = lSite[1],\n      bx = site[0] - ax,\n      by = site[1] - ay,\n      rSite = rArc.site,\n      cx = rSite[0] - ax,\n      cy = rSite[1] - ay,\n      d = 2 * (bx * cy - by * cx),\n      hb = bx * bx + by * by,\n      hc = cx * cx + cy * cy,\n      vertex = [(cy * hb - by * hc) / d + ax, (bx * hc - cx * hb) / d + ay];\n\n  setEdgeEnd(rArc.edge, lSite, rSite, vertex);\n  newArc.edge = createEdge(lSite, site, null, vertex);\n  rArc.edge = createEdge(site, rSite, null, vertex);\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nfunction leftBreakPoint(arc, directrix) {\n  var site = arc.site,\n      rfocx = site[0],\n      rfocy = site[1],\n      pby2 = rfocy - directrix;\n\n  if (!pby2) return rfocx;\n\n  var lArc = arc.P;\n  if (!lArc) return -Infinity;\n\n  site = lArc.site;\n  var lfocx = site[0],\n      lfocy = site[1],\n      plby2 = lfocy - directrix;\n\n  if (!plby2) return lfocx;\n\n  var hl = lfocx - rfocx,\n      aby2 = 1 / pby2 - 1 / plby2,\n      b = hl / plby2;\n\n  if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n\n  return (rfocx + lfocx) / 2;\n}\n\nfunction rightBreakPoint(arc, directrix) {\n  var rArc = arc.N;\n  if (rArc) return leftBreakPoint(rArc, directrix);\n  var site = arc.site;\n  return site[1] === directrix ? site[0] : Infinity;\n}\n","import {addBeach, removeBeach} from \"./Beach\";\nimport {sortCellHalfedges, cellHalfedgeStart, clipCells} from \"./Cell\";\nimport {firstCircle} from \"./Circle\";\nimport {clipEdges} from \"./Edge\";\nimport RedBlackTree from \"./RedBlackTree\";\n\nexport var epsilon = 1e-6;\nexport var epsilon2 = 1e-12;\nexport var beaches;\nexport var cells;\nexport var circles;\nexport var edges;\n\nfunction triangleArea(a, b, c) {\n  return (a[0] - c[0]) * (b[1] - a[1]) - (a[0] - b[0]) * (c[1] - a[1]);\n}\n\nfunction lexicographic(a, b) {\n  return b[1] - a[1]\n      || b[0] - a[0];\n}\n\nexport default function Diagram(sites, extent) {\n  var site = sites.sort(lexicographic).pop(),\n      x,\n      y,\n      circle;\n\n  edges = [];\n  cells = new Array(sites.length);\n  beaches = new RedBlackTree;\n  circles = new RedBlackTree;\n\n  while (true) {\n    circle = firstCircle;\n    if (site && (!circle || site[1] < circle.y || (site[1] === circle.y && site[0] < circle.x))) {\n      if (site[0] !== x || site[1] !== y) {\n        addBeach(site);\n        x = site[0], y = site[1];\n      }\n      site = sites.pop();\n    } else if (circle) {\n      removeBeach(circle.arc);\n    } else {\n      break;\n    }\n  }\n\n  sortCellHalfedges();\n\n  if (extent) {\n    var x0 = +extent[0][0],\n        y0 = +extent[0][1],\n        x1 = +extent[1][0],\n        y1 = +extent[1][1];\n    clipEdges(x0, y0, x1, y1);\n    clipCells(x0, y0, x1, y1);\n  }\n\n  this.edges = edges;\n  this.cells = cells;\n\n  beaches =\n  circles =\n  edges =\n  cells = null;\n}\n\nDiagram.prototype = {\n  constructor: Diagram,\n\n  polygons: function() {\n    var edges = this.edges;\n\n    return this.cells.map(function(cell) {\n      var polygon = cell.halfedges.map(function(i) { return cellHalfedgeStart(cell, edges[i]); });\n      polygon.data = cell.site.data;\n      return polygon;\n    });\n  },\n\n  triangles: function() {\n    var triangles = [],\n        edges = this.edges;\n\n    this.cells.forEach(function(cell, i) {\n      if (!(m = (halfedges = cell.halfedges).length)) return;\n      var site = cell.site,\n          halfedges,\n          j = -1,\n          m,\n          s0,\n          e1 = edges[halfedges[m - 1]],\n          s1 = e1.left === site ? e1.right : e1.left;\n\n      while (++j < m) {\n        s0 = s1;\n        e1 = edges[halfedges[j]];\n        s1 = e1.left === site ? e1.right : e1.left;\n        if (s0 && s1 && i < s0.index && i < s1.index && triangleArea(site, s0, s1) < 0) {\n          triangles.push([site.data, s0.data, s1.data]);\n        }\n      }\n    });\n\n    return triangles;\n  },\n\n  links: function() {\n    return this.edges.filter(function(edge) {\n      return edge.right;\n    }).map(function(edge) {\n      return {\n        source: edge.left.data,\n        target: edge.right.data\n      };\n    });\n  },\n\n  find: function(x, y, radius) {\n    var that = this, i0, i1 = that._found || 0, n = that.cells.length, cell;\n\n    // Use the previously-found cell, or start with an arbitrary one.\n    while (!(cell = that.cells[i1])) if (++i1 >= n) return null;\n    var dx = x - cell.site[0], dy = y - cell.site[1], d2 = dx * dx + dy * dy;\n\n    // Traverse the half-edges to find a closer cell, if any.\n    do {\n      cell = that.cells[i0 = i1], i1 = null;\n      cell.halfedges.forEach(function(e) {\n        var edge = that.edges[e], v = edge.left;\n        if ((v === cell.site || !v) && !(v = edge.right)) return;\n        var vx = x - v[0], vy = y - v[1], v2 = vx * vx + vy * vy;\n        if (v2 < d2) d2 = v2, i1 = v.index;\n      });\n    } while (i1 !== null);\n\n    that._found = i0;\n\n    return radius == null || d2 <= radius * radius ? cell.site : null;\n  }\n}\n","import constant from \"./constant\";\nimport {x as pointX, y as pointY} from \"./point\";\nimport Diagram, {epsilon} from \"./Diagram\";\n\nexport default function() {\n  var x = pointX,\n      y = pointY,\n      extent = null;\n\n  function voronoi(data) {\n    return new Diagram(data.map(function(d, i) {\n      var s = [Math.round(x(d, i, data) / epsilon) * epsilon, Math.round(y(d, i, data) / epsilon) * epsilon];\n      s.index = i;\n      s.data = d;\n      return s;\n    }), extent);\n  }\n\n  voronoi.polygons = function(data) {\n    return voronoi(data).polygons();\n  };\n\n  voronoi.links = function(data) {\n    return voronoi(data).links();\n  };\n\n  voronoi.triangles = function(data) {\n    return voronoi(data).triangles();\n  };\n\n  voronoi.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), voronoi) : x;\n  };\n\n  voronoi.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), voronoi) : y;\n  };\n\n  voronoi.extent = function(_) {\n    return arguments.length ? (extent = _ == null ? null : [[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]], voronoi) : extent && [[extent[0][0], extent[0][1]], [extent[1][0], extent[1][1]]];\n  };\n\n  voronoi.size = function(_) {\n    return arguments.length ? (extent = _ == null ? null : [[0, 0], [+_[0], +_[1]]], voronoi) : extent && [extent[1][0] - extent[0][0], extent[1][1] - extent[0][1]];\n  };\n\n  return voronoi;\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export function Transform(k, x, y) {\n  this.k = k;\n  this.x = x;\n  this.y = y;\n}\n\nTransform.prototype = {\n  constructor: Transform,\n  scale: function(k) {\n    return k === 1 ? this : new Transform(this.k * k, this.x, this.y);\n  },\n  translate: function(x, y) {\n    return x === 0 & y === 0 ? this : new Transform(this.k, this.x + this.k * x, this.y + this.k * y);\n  },\n  apply: function(point) {\n    return [point[0] * this.k + this.x, point[1] * this.k + this.y];\n  },\n  applyX: function(x) {\n    return x * this.k + this.x;\n  },\n  applyY: function(y) {\n    return y * this.k + this.y;\n  },\n  invert: function(location) {\n    return [(location[0] - this.x) / this.k, (location[1] - this.y) / this.k];\n  },\n  invertX: function(x) {\n    return (x - this.x) / this.k;\n  },\n  invertY: function(y) {\n    return (y - this.y) / this.k;\n  },\n  rescaleX: function(x) {\n    return x.copy().domain(x.range().map(this.invertX, this).map(x.invert, x));\n  },\n  rescaleY: function(y) {\n    return y.copy().domain(y.range().map(this.invertY, this).map(y.invert, y));\n  },\n  toString: function() {\n    return \"translate(\" + this.x + \",\" + this.y + \") scale(\" + this.k + \")\";\n  }\n};\n\nexport var identity = new Transform(1, 0, 0);\n\ntransform.prototype = Transform.prototype;\n\nexport default function transform(node) {\n  return node.__zoom || identity;\n}\n","import {event} from \"d3-selection\";\n\nexport function nopropagation() {\n  event.stopImmediatePropagation();\n}\n\nexport default function() {\n  event.preventDefault();\n  event.stopImmediatePropagation();\n}\n","import {dispatch} from \"d3-dispatch\";\nimport {dragDisable, dragEnable} from \"d3-drag\";\nimport {interpolateZoom} from \"d3-interpolate\";\nimport {event, customEvent, select, mouse, touch} from \"d3-selection\";\nimport {interrupt} from \"d3-transition\";\nimport constant from \"./constant\";\nimport ZoomEvent from \"./event\";\nimport {Transform, identity} from \"./transform\";\nimport noevent, {nopropagation} from \"./noevent\";\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter() {\n  return !event.button;\n}\n\nfunction defaultExtent() {\n  var e = this, w, h;\n  if (e instanceof SVGElement) {\n    e = e.ownerSVGElement || e;\n    w = e.width.baseVal.value;\n    h = e.height.baseVal.value;\n  } else {\n    w = e.clientWidth;\n    h = e.clientHeight;\n  }\n  return [[0, 0], [w, h]];\n}\n\nfunction defaultTransform() {\n  return this.__zoom || identity;\n}\n\nfunction defaultWheelDelta() {\n  return -event.deltaY * (event.deltaMode ? 120 : 1) / 500;\n}\n\nfunction defaultTouchable() {\n  return \"ontouchstart\" in this;\n}\n\nfunction defaultConstrain(transform, extent, translateExtent) {\n  var dx0 = transform.invertX(extent[0][0]) - translateExtent[0][0],\n      dx1 = transform.invertX(extent[1][0]) - translateExtent[1][0],\n      dy0 = transform.invertY(extent[0][1]) - translateExtent[0][1],\n      dy1 = transform.invertY(extent[1][1]) - translateExtent[1][1];\n  return transform.translate(\n    dx1 > dx0 ? (dx0 + dx1) / 2 : Math.min(0, dx0) || Math.max(0, dx1),\n    dy1 > dy0 ? (dy0 + dy1) / 2 : Math.min(0, dy0) || Math.max(0, dy1)\n  );\n}\n\nexport default function() {\n  var filter = defaultFilter,\n      extent = defaultExtent,\n      constrain = defaultConstrain,\n      wheelDelta = defaultWheelDelta,\n      touchable = defaultTouchable,\n      scaleExtent = [0, Infinity],\n      translateExtent = [[-Infinity, -Infinity], [Infinity, Infinity]],\n      duration = 250,\n      interpolate = interpolateZoom,\n      gestures = [],\n      listeners = dispatch(\"start\", \"zoom\", \"end\"),\n      touchstarting,\n      touchending,\n      touchDelay = 500,\n      wheelDelay = 150,\n      clickDistance2 = 0;\n\n  function zoom(selection) {\n    selection\n        .property(\"__zoom\", defaultTransform)\n        .on(\"wheel.zoom\", wheeled)\n        .on(\"mousedown.zoom\", mousedowned)\n        .on(\"dblclick.zoom\", dblclicked)\n      .filter(touchable)\n        .on(\"touchstart.zoom\", touchstarted)\n        .on(\"touchmove.zoom\", touchmoved)\n        .on(\"touchend.zoom touchcancel.zoom\", touchended)\n        .style(\"touch-action\", \"none\")\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n  }\n\n  zoom.transform = function(collection, transform) {\n    var selection = collection.selection ? collection.selection() : collection;\n    selection.property(\"__zoom\", defaultTransform);\n    if (collection !== selection) {\n      schedule(collection, transform);\n    } else {\n      selection.interrupt().each(function() {\n        gesture(this, arguments)\n            .start()\n            .zoom(null, typeof transform === \"function\" ? transform.apply(this, arguments) : transform)\n            .end();\n      });\n    }\n  };\n\n  zoom.scaleBy = function(selection, k) {\n    zoom.scaleTo(selection, function() {\n      var k0 = this.__zoom.k,\n          k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n      return k0 * k1;\n    });\n  };\n\n  zoom.scaleTo = function(selection, k) {\n    zoom.transform(selection, function() {\n      var e = extent.apply(this, arguments),\n          t0 = this.__zoom,\n          p0 = centroid(e),\n          p1 = t0.invert(p0),\n          k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n      return constrain(translate(scale(t0, k1), p0, p1), e, translateExtent);\n    });\n  };\n\n  zoom.translateBy = function(selection, x, y) {\n    zoom.transform(selection, function() {\n      return constrain(this.__zoom.translate(\n        typeof x === \"function\" ? x.apply(this, arguments) : x,\n        typeof y === \"function\" ? y.apply(this, arguments) : y\n      ), extent.apply(this, arguments), translateExtent);\n    });\n  };\n\n  zoom.translateTo = function(selection, x, y) {\n    zoom.transform(selection, function() {\n      var e = extent.apply(this, arguments),\n          t = this.__zoom,\n          p = centroid(e);\n      return constrain(identity.translate(p[0], p[1]).scale(t.k).translate(\n        typeof x === \"function\" ? -x.apply(this, arguments) : -x,\n        typeof y === \"function\" ? -y.apply(this, arguments) : -y\n      ), e, translateExtent);\n    });\n  };\n\n  function scale(transform, k) {\n    k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], k));\n    return k === transform.k ? transform : new Transform(k, transform.x, transform.y);\n  }\n\n  function translate(transform, p0, p1) {\n    var x = p0[0] - p1[0] * transform.k, y = p0[1] - p1[1] * transform.k;\n    return x === transform.x && y === transform.y ? transform : new Transform(transform.k, x, y);\n  }\n\n  function centroid(extent) {\n    return [(+extent[0][0] + +extent[1][0]) / 2, (+extent[0][1] + +extent[1][1]) / 2];\n  }\n\n  function schedule(transition, transform, center) {\n    transition\n        .on(\"start.zoom\", function() { gesture(this, arguments).start(); })\n        .on(\"interrupt.zoom end.zoom\", function() { gesture(this, arguments).end(); })\n        .tween(\"zoom\", function() {\n          var that = this,\n              args = arguments,\n              g = gesture(that, args),\n              e = extent.apply(that, args),\n              p = center || centroid(e),\n              w = Math.max(e[1][0] - e[0][0], e[1][1] - e[0][1]),\n              a = that.__zoom,\n              b = typeof transform === \"function\" ? transform.apply(that, args) : transform,\n              i = interpolate(a.invert(p).concat(w / a.k), b.invert(p).concat(w / b.k));\n          return function(t) {\n            if (t === 1) t = b; // Avoid rounding error on end.\n            else { var l = i(t), k = w / l[2]; t = new Transform(k, p[0] - l[0] * k, p[1] - l[1] * k); }\n            g.zoom(null, t);\n          };\n        });\n  }\n\n  function gesture(that, args) {\n    for (var i = 0, n = gestures.length, g; i < n; ++i) {\n      if ((g = gestures[i]).that === that) {\n        return g;\n      }\n    }\n    return new Gesture(that, args);\n  }\n\n  function Gesture(that, args) {\n    this.that = that;\n    this.args = args;\n    this.index = -1;\n    this.active = 0;\n    this.extent = extent.apply(that, args);\n  }\n\n  Gesture.prototype = {\n    start: function() {\n      if (++this.active === 1) {\n        this.index = gestures.push(this) - 1;\n        this.emit(\"start\");\n      }\n      return this;\n    },\n    zoom: function(key, transform) {\n      if (this.mouse && key !== \"mouse\") this.mouse[1] = transform.invert(this.mouse[0]);\n      if (this.touch0 && key !== \"touch\") this.touch0[1] = transform.invert(this.touch0[0]);\n      if (this.touch1 && key !== \"touch\") this.touch1[1] = transform.invert(this.touch1[0]);\n      this.that.__zoom = transform;\n      this.emit(\"zoom\");\n      return this;\n    },\n    end: function() {\n      if (--this.active === 0) {\n        gestures.splice(this.index, 1);\n        this.index = -1;\n        this.emit(\"end\");\n      }\n      return this;\n    },\n    emit: function(type) {\n      customEvent(new ZoomEvent(zoom, type, this.that.__zoom), listeners.apply, listeners, [type, this.that, this.args]);\n    }\n  };\n\n  function wheeled() {\n    if (!filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        t = this.__zoom,\n        k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], t.k * Math.pow(2, wheelDelta.apply(this, arguments)))),\n        p = mouse(this);\n\n    // If the mouse is in the same location as before, reuse it.\n    // If there were recent wheel events, reset the wheel idle timeout.\n    if (g.wheel) {\n      if (g.mouse[0][0] !== p[0] || g.mouse[0][1] !== p[1]) {\n        g.mouse[1] = t.invert(g.mouse[0] = p);\n      }\n      clearTimeout(g.wheel);\n    }\n\n    // If this wheel event won’t trigger a transform change, ignore it.\n    else if (t.k === k) return;\n\n    // Otherwise, capture the mouse point and location at the start.\n    else {\n      g.mouse = [p, t.invert(p)];\n      interrupt(this);\n      g.start();\n    }\n\n    noevent();\n    g.wheel = setTimeout(wheelidled, wheelDelay);\n    g.zoom(\"mouse\", constrain(translate(scale(t, k), g.mouse[0], g.mouse[1]), g.extent, translateExtent));\n\n    function wheelidled() {\n      g.wheel = null;\n      g.end();\n    }\n  }\n\n  function mousedowned() {\n    if (touchending || !filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        v = select(event.view).on(\"mousemove.zoom\", mousemoved, true).on(\"mouseup.zoom\", mouseupped, true),\n        p = mouse(this),\n        x0 = event.clientX,\n        y0 = event.clientY;\n\n    dragDisable(event.view);\n    nopropagation();\n    g.mouse = [p, this.__zoom.invert(p)];\n    interrupt(this);\n    g.start();\n\n    function mousemoved() {\n      noevent();\n      if (!g.moved) {\n        var dx = event.clientX - x0, dy = event.clientY - y0;\n        g.moved = dx * dx + dy * dy > clickDistance2;\n      }\n      g.zoom(\"mouse\", constrain(translate(g.that.__zoom, g.mouse[0] = mouse(g.that), g.mouse[1]), g.extent, translateExtent));\n    }\n\n    function mouseupped() {\n      v.on(\"mousemove.zoom mouseup.zoom\", null);\n      dragEnable(event.view, g.moved);\n      noevent();\n      g.end();\n    }\n  }\n\n  function dblclicked() {\n    if (!filter.apply(this, arguments)) return;\n    var t0 = this.__zoom,\n        p0 = mouse(this),\n        p1 = t0.invert(p0),\n        k1 = t0.k * (event.shiftKey ? 0.5 : 2),\n        t1 = constrain(translate(scale(t0, k1), p0, p1), extent.apply(this, arguments), translateExtent);\n\n    noevent();\n    if (duration > 0) select(this).transition().duration(duration).call(schedule, t1, p0);\n    else select(this).call(zoom.transform, t1);\n  }\n\n  function touchstarted() {\n    if (!filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        touches = event.changedTouches,\n        started,\n        n = touches.length, i, t, p;\n\n    nopropagation();\n    for (i = 0; i < n; ++i) {\n      t = touches[i], p = touch(this, touches, t.identifier);\n      p = [p, this.__zoom.invert(p), t.identifier];\n      if (!g.touch0) g.touch0 = p, started = true;\n      else if (!g.touch1) g.touch1 = p;\n    }\n\n    // If this is a dbltap, reroute to the (optional) dblclick.zoom handler.\n    if (touchstarting) {\n      touchstarting = clearTimeout(touchstarting);\n      if (!g.touch1) {\n        g.end();\n        p = select(this).on(\"dblclick.zoom\");\n        if (p) p.apply(this, arguments);\n        return;\n      }\n    }\n\n    if (started) {\n      touchstarting = setTimeout(function() { touchstarting = null; }, touchDelay);\n      interrupt(this);\n      g.start();\n    }\n  }\n\n  function touchmoved() {\n    var g = gesture(this, arguments),\n        touches = event.changedTouches,\n        n = touches.length, i, t, p, l;\n\n    noevent();\n    if (touchstarting) touchstarting = clearTimeout(touchstarting);\n    for (i = 0; i < n; ++i) {\n      t = touches[i], p = touch(this, touches, t.identifier);\n      if (g.touch0 && g.touch0[2] === t.identifier) g.touch0[0] = p;\n      else if (g.touch1 && g.touch1[2] === t.identifier) g.touch1[0] = p;\n    }\n    t = g.that.__zoom;\n    if (g.touch1) {\n      var p0 = g.touch0[0], l0 = g.touch0[1],\n          p1 = g.touch1[0], l1 = g.touch1[1],\n          dp = (dp = p1[0] - p0[0]) * dp + (dp = p1[1] - p0[1]) * dp,\n          dl = (dl = l1[0] - l0[0]) * dl + (dl = l1[1] - l0[1]) * dl;\n      t = scale(t, Math.sqrt(dp / dl));\n      p = [(p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2];\n      l = [(l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2];\n    }\n    else if (g.touch0) p = g.touch0[0], l = g.touch0[1];\n    else return;\n    g.zoom(\"touch\", constrain(translate(t, p, l), g.extent, translateExtent));\n  }\n\n  function touchended() {\n    var g = gesture(this, arguments),\n        touches = event.changedTouches,\n        n = touches.length, i, t;\n\n    nopropagation();\n    if (touchending) clearTimeout(touchending);\n    touchending = setTimeout(function() { touchending = null; }, touchDelay);\n    for (i = 0; i < n; ++i) {\n      t = touches[i];\n      if (g.touch0 && g.touch0[2] === t.identifier) delete g.touch0;\n      else if (g.touch1 && g.touch1[2] === t.identifier) delete g.touch1;\n    }\n    if (g.touch1 && !g.touch0) g.touch0 = g.touch1, delete g.touch1;\n    if (g.touch0) g.touch0[1] = this.__zoom.invert(g.touch0[0]);\n    else g.end();\n  }\n\n  zoom.wheelDelta = function(_) {\n    return arguments.length ? (wheelDelta = typeof _ === \"function\" ? _ : constant(+_), zoom) : wheelDelta;\n  };\n\n  zoom.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant(!!_), zoom) : filter;\n  };\n\n  zoom.touchable = function(_) {\n    return arguments.length ? (touchable = typeof _ === \"function\" ? _ : constant(!!_), zoom) : touchable;\n  };\n\n  zoom.extent = function(_) {\n    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), zoom) : extent;\n  };\n\n  zoom.scaleExtent = function(_) {\n    return arguments.length ? (scaleExtent[0] = +_[0], scaleExtent[1] = +_[1], zoom) : [scaleExtent[0], scaleExtent[1]];\n  };\n\n  zoom.translateExtent = function(_) {\n    return arguments.length ? (translateExtent[0][0] = +_[0][0], translateExtent[1][0] = +_[1][0], translateExtent[0][1] = +_[0][1], translateExtent[1][1] = +_[1][1], zoom) : [[translateExtent[0][0], translateExtent[0][1]], [translateExtent[1][0], translateExtent[1][1]]];\n  };\n\n  zoom.constrain = function(_) {\n    return arguments.length ? (constrain = _, zoom) : constrain;\n  };\n\n  zoom.duration = function(_) {\n    return arguments.length ? (duration = +_, zoom) : duration;\n  };\n\n  zoom.interpolate = function(_) {\n    return arguments.length ? (interpolate = _, zoom) : interpolate;\n  };\n\n  zoom.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? zoom : value;\n  };\n\n  zoom.clickDistance = function(_) {\n    return arguments.length ? (clickDistance2 = (_ = +_) * _, zoom) : Math.sqrt(clickDistance2);\n  };\n\n  return zoom;\n}\n","export default function ZoomEvent(target, type, transform) {\n  this.target = target;\n  this.type = type;\n  this.transform = transform;\n}\n"],"sourceRoot":""}