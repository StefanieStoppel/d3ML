{"version":3,"sources":["webpack://d3ml/webpack/universalModuleDefinition","webpack://d3ml/webpack/bootstrap","webpack://d3ml/./src/visualization/defaults.js","webpack://d3ml/./src/visualization/visualization.js","webpack://d3ml/./src/visualization/painter.js","webpack://d3ml/./src/visualization/circle.js","webpack://d3ml/./src/index.js","webpack://d3ml/./src/validation/validator.js","webpack://d3ml/./src/visualization/knn-visualization.js","webpack://d3ml/./src/algorithms/knn.js","webpack://d3ml/./src/algorithms/machine-learning-algorithm.js","webpack://d3ml/./src/visualization/linear-regression-visualization.js","webpack://d3ml/./src/algorithms/linear-regression.js","webpack://d3ml/./node_modules/d3/dist/package.js","webpack://d3ml/./node_modules/d3-array/src/ascending.js","webpack://d3ml/./node_modules/d3-array/src/bisector.js","webpack://d3ml/./node_modules/d3-array/src/bisect.js","webpack://d3ml/./node_modules/d3-array/src/pairs.js","webpack://d3ml/./node_modules/d3-array/src/cross.js","webpack://d3ml/./node_modules/d3-array/src/descending.js","webpack://d3ml/./node_modules/d3-array/src/number.js","webpack://d3ml/./node_modules/d3-array/src/variance.js","webpack://d3ml/./node_modules/d3-array/src/deviation.js","webpack://d3ml/./node_modules/d3-array/src/extent.js","webpack://d3ml/./node_modules/d3-array/src/array.js","webpack://d3ml/./node_modules/d3-array/src/constant.js","webpack://d3ml/./node_modules/d3-array/src/identity.js","webpack://d3ml/./node_modules/d3-array/src/range.js","webpack://d3ml/./node_modules/d3-array/src/ticks.js","webpack://d3ml/./node_modules/d3-array/src/threshold/sturges.js","webpack://d3ml/./node_modules/d3-array/src/histogram.js","webpack://d3ml/./node_modules/d3-array/src/quantile.js","webpack://d3ml/./node_modules/d3-array/src/threshold/freedmanDiaconis.js","webpack://d3ml/./node_modules/d3-array/src/threshold/scott.js","webpack://d3ml/./node_modules/d3-array/src/max.js","webpack://d3ml/./node_modules/d3-array/src/mean.js","webpack://d3ml/./node_modules/d3-array/src/median.js","webpack://d3ml/./node_modules/d3-array/src/merge.js","webpack://d3ml/./node_modules/d3-array/src/min.js","webpack://d3ml/./node_modules/d3-array/src/permute.js","webpack://d3ml/./node_modules/d3-array/src/scan.js","webpack://d3ml/./node_modules/d3-array/src/shuffle.js","webpack://d3ml/./node_modules/d3-array/src/sum.js","webpack://d3ml/./node_modules/d3-array/src/transpose.js","webpack://d3ml/./node_modules/d3-array/src/zip.js","webpack://d3ml/./node_modules/d3-axis/src/array.js","webpack://d3ml/./node_modules/d3-axis/src/identity.js","webpack://d3ml/./node_modules/d3-axis/src/axis.js","webpack://d3ml/./node_modules/d3-dispatch/src/dispatch.js","webpack://d3ml/./node_modules/d3-selection/src/namespaces.js","webpack://d3ml/./node_modules/d3-selection/src/namespace.js","webpack://d3ml/./node_modules/d3-selection/src/creator.js","webpack://d3ml/./node_modules/d3-selection/src/selector.js","webpack://d3ml/./node_modules/d3-selection/src/selectorAll.js","webpack://d3ml/./node_modules/d3-selection/src/matcher.js","webpack://d3ml/./node_modules/d3-selection/src/selection/sparse.js","webpack://d3ml/./node_modules/d3-selection/src/selection/enter.js","webpack://d3ml/./node_modules/d3-selection/src/constant.js","webpack://d3ml/./node_modules/d3-selection/src/selection/data.js","webpack://d3ml/./node_modules/d3-selection/src/selection/sort.js","webpack://d3ml/./node_modules/d3-selection/src/selection/attr.js","webpack://d3ml/./node_modules/d3-selection/src/window.js","webpack://d3ml/./node_modules/d3-selection/src/selection/style.js","webpack://d3ml/./node_modules/d3-selection/src/selection/classed.js","webpack://d3ml/./node_modules/d3-selection/src/selection/text.js","webpack://d3ml/./node_modules/d3-selection/src/selection/html.js","webpack://d3ml/./node_modules/d3-selection/src/selection/raise.js","webpack://d3ml/./node_modules/d3-selection/src/selection/lower.js","webpack://d3ml/./node_modules/d3-selection/src/selection/insert.js","webpack://d3ml/./node_modules/d3-selection/src/selection/remove.js","webpack://d3ml/./node_modules/d3-selection/src/selection/clone.js","webpack://d3ml/./node_modules/d3-selection/src/selection/on.js","webpack://d3ml/./node_modules/d3-selection/src/selection/dispatch.js","webpack://d3ml/./node_modules/d3-selection/src/selection/index.js","webpack://d3ml/./node_modules/d3-selection/src/selection/select.js","webpack://d3ml/./node_modules/d3-selection/src/selection/selectAll.js","webpack://d3ml/./node_modules/d3-selection/src/selection/filter.js","webpack://d3ml/./node_modules/d3-selection/src/selection/exit.js","webpack://d3ml/./node_modules/d3-selection/src/selection/merge.js","webpack://d3ml/./node_modules/d3-selection/src/selection/order.js","webpack://d3ml/./node_modules/d3-selection/src/selection/call.js","webpack://d3ml/./node_modules/d3-selection/src/selection/nodes.js","webpack://d3ml/./node_modules/d3-selection/src/selection/node.js","webpack://d3ml/./node_modules/d3-selection/src/selection/size.js","webpack://d3ml/./node_modules/d3-selection/src/selection/empty.js","webpack://d3ml/./node_modules/d3-selection/src/selection/each.js","webpack://d3ml/./node_modules/d3-selection/src/selection/property.js","webpack://d3ml/./node_modules/d3-selection/src/selection/append.js","webpack://d3ml/./node_modules/d3-selection/src/selection/datum.js","webpack://d3ml/./node_modules/d3-selection/src/select.js","webpack://d3ml/./node_modules/d3-selection/src/create.js","webpack://d3ml/./node_modules/d3-selection/src/local.js","webpack://d3ml/./node_modules/d3-selection/src/sourceEvent.js","webpack://d3ml/./node_modules/d3-selection/src/point.js","webpack://d3ml/./node_modules/d3-selection/src/mouse.js","webpack://d3ml/./node_modules/d3-selection/src/selectAll.js","webpack://d3ml/./node_modules/d3-selection/src/touch.js","webpack://d3ml/./node_modules/d3-selection/src/touches.js","webpack://d3ml/./node_modules/d3-drag/src/noevent.js","webpack://d3ml/./node_modules/d3-drag/src/nodrag.js","webpack://d3ml/./node_modules/d3-drag/src/constant.js","webpack://d3ml/./node_modules/d3-drag/src/event.js","webpack://d3ml/./node_modules/d3-drag/src/drag.js","webpack://d3ml/./node_modules/d3-color/src/define.js","webpack://d3ml/./node_modules/d3-color/src/color.js","webpack://d3ml/./node_modules/d3-color/src/math.js","webpack://d3ml/./node_modules/d3-color/src/lab.js","webpack://d3ml/./node_modules/d3-color/src/cubehelix.js","webpack://d3ml/./node_modules/d3-interpolate/src/basis.js","webpack://d3ml/./node_modules/d3-interpolate/src/basisClosed.js","webpack://d3ml/./node_modules/d3-interpolate/src/constant.js","webpack://d3ml/./node_modules/d3-interpolate/src/color.js","webpack://d3ml/./node_modules/d3-interpolate/src/rgb.js","webpack://d3ml/./node_modules/d3-interpolate/src/array.js","webpack://d3ml/./node_modules/d3-interpolate/src/date.js","webpack://d3ml/./node_modules/d3-interpolate/src/number.js","webpack://d3ml/./node_modules/d3-interpolate/src/object.js","webpack://d3ml/./node_modules/d3-interpolate/src/string.js","webpack://d3ml/./node_modules/d3-interpolate/src/transform/parse.js","webpack://d3ml/./node_modules/d3-interpolate/src/value.js","webpack://d3ml/./node_modules/d3-interpolate/src/round.js","webpack://d3ml/./node_modules/d3-interpolate/src/transform/decompose.js","webpack://d3ml/./node_modules/d3-interpolate/src/transform/index.js","webpack://d3ml/./node_modules/d3-interpolate/src/zoom.js","webpack://d3ml/./node_modules/d3-interpolate/src/hsl.js","webpack://d3ml/./node_modules/d3-interpolate/src/lab.js","webpack://d3ml/./node_modules/d3-interpolate/src/hcl.js","webpack://d3ml/./node_modules/d3-interpolate/src/cubehelix.js","webpack://d3ml/./node_modules/d3-interpolate/src/piecewise.js","webpack://d3ml/./node_modules/d3-interpolate/src/quantize.js","webpack://d3ml/./node_modules/d3-timer/src/timer.js","webpack://d3ml/./node_modules/d3-timer/src/timeout.js","webpack://d3ml/./node_modules/d3-timer/src/interval.js","webpack://d3ml/./node_modules/d3-transition/src/transition/schedule.js","webpack://d3ml/./node_modules/d3-transition/src/interrupt.js","webpack://d3ml/./node_modules/d3-transition/src/transition/tween.js","webpack://d3ml/./node_modules/d3-transition/src/transition/interpolate.js","webpack://d3ml/./node_modules/d3-transition/src/transition/remove.js","webpack://d3ml/./node_modules/d3-transition/src/transition/selection.js","webpack://d3ml/./node_modules/d3-transition/src/transition/text.js","webpack://d3ml/./node_modules/d3-transition/src/transition/index.js","webpack://d3ml/./node_modules/d3-ease/src/linear.js","webpack://d3ml/./node_modules/d3-ease/src/quad.js","webpack://d3ml/./node_modules/d3-ease/src/cubic.js","webpack://d3ml/./node_modules/d3-transition/src/transition/select.js","webpack://d3ml/./node_modules/d3-transition/src/transition/selectAll.js","webpack://d3ml/./node_modules/d3-transition/src/transition/filter.js","webpack://d3ml/./node_modules/d3-transition/src/transition/merge.js","webpack://d3ml/./node_modules/d3-transition/src/transition/transition.js","webpack://d3ml/./node_modules/d3-transition/src/transition/on.js","webpack://d3ml/./node_modules/d3-transition/src/transition/attr.js","webpack://d3ml/./node_modules/d3-transition/src/transition/attrTween.js","webpack://d3ml/./node_modules/d3-transition/src/transition/style.js","webpack://d3ml/./node_modules/d3-transition/src/transition/styleTween.js","webpack://d3ml/./node_modules/d3-transition/src/transition/delay.js","webpack://d3ml/./node_modules/d3-transition/src/transition/duration.js","webpack://d3ml/./node_modules/d3-transition/src/transition/ease.js","webpack://d3ml/./node_modules/d3-ease/src/poly.js","webpack://d3ml/./node_modules/d3-ease/src/sin.js","webpack://d3ml/./node_modules/d3-ease/src/exp.js","webpack://d3ml/./node_modules/d3-ease/src/circle.js","webpack://d3ml/./node_modules/d3-ease/src/bounce.js","webpack://d3ml/./node_modules/d3-ease/src/back.js","webpack://d3ml/./node_modules/d3-ease/src/elastic.js","webpack://d3ml/./node_modules/d3-transition/src/selection/transition.js","webpack://d3ml/./node_modules/d3-transition/src/selection/index.js","webpack://d3ml/./node_modules/d3-transition/src/selection/interrupt.js","webpack://d3ml/./node_modules/d3-transition/src/active.js","webpack://d3ml/./node_modules/d3-brush/src/constant.js","webpack://d3ml/./node_modules/d3-brush/src/event.js","webpack://d3ml/./node_modules/d3-brush/src/noevent.js","webpack://d3ml/./node_modules/d3-brush/src/brush.js","webpack://d3ml/./node_modules/d3-chord/src/math.js","webpack://d3ml/./node_modules/d3-chord/src/chord.js","webpack://d3ml/./node_modules/d3-chord/src/array.js","webpack://d3ml/./node_modules/d3-chord/src/constant.js","webpack://d3ml/./node_modules/d3-path/src/path.js","webpack://d3ml/./node_modules/d3-chord/src/ribbon.js","webpack://d3ml/./node_modules/d3-collection/src/map.js","webpack://d3ml/./node_modules/d3-collection/src/nest.js","webpack://d3ml/./node_modules/d3-collection/src/set.js","webpack://d3ml/./node_modules/d3-collection/src/keys.js","webpack://d3ml/./node_modules/d3-collection/src/values.js","webpack://d3ml/./node_modules/d3-collection/src/entries.js","webpack://d3ml/./node_modules/d3-contour/src/array.js","webpack://d3ml/./node_modules/d3-contour/src/ascending.js","webpack://d3ml/./node_modules/d3-contour/src/area.js","webpack://d3ml/./node_modules/d3-contour/src/constant.js","webpack://d3ml/./node_modules/d3-contour/src/contains.js","webpack://d3ml/./node_modules/d3-contour/src/noop.js","webpack://d3ml/./node_modules/d3-contour/src/contours.js","webpack://d3ml/./node_modules/d3-contour/src/blur.js","webpack://d3ml/./node_modules/d3-contour/src/density.js","webpack://d3ml/./node_modules/d3-dsv/src/dsv.js","webpack://d3ml/./node_modules/d3-dsv/src/csv.js","webpack://d3ml/./node_modules/d3-dsv/src/tsv.js","webpack://d3ml/./node_modules/d3-fetch/src/blob.js","webpack://d3ml/./node_modules/d3-fetch/src/buffer.js","webpack://d3ml/./node_modules/d3-fetch/src/text.js","webpack://d3ml/./node_modules/d3-fetch/src/dsv.js","webpack://d3ml/./node_modules/d3-fetch/src/image.js","webpack://d3ml/./node_modules/d3-fetch/src/json.js","webpack://d3ml/./node_modules/d3-fetch/src/xml.js","webpack://d3ml/./node_modules/d3-force/src/center.js","webpack://d3ml/./node_modules/d3-force/src/constant.js","webpack://d3ml/./node_modules/d3-force/src/jiggle.js","webpack://d3ml/./node_modules/d3-quadtree/src/add.js","webpack://d3ml/./node_modules/d3-quadtree/src/cover.js","webpack://d3ml/./node_modules/d3-quadtree/src/quad.js","webpack://d3ml/./node_modules/d3-quadtree/src/x.js","webpack://d3ml/./node_modules/d3-quadtree/src/y.js","webpack://d3ml/./node_modules/d3-quadtree/src/quadtree.js","webpack://d3ml/./node_modules/d3-force/src/collide.js","webpack://d3ml/./node_modules/d3-quadtree/src/data.js","webpack://d3ml/./node_modules/d3-quadtree/src/extent.js","webpack://d3ml/./node_modules/d3-quadtree/src/find.js","webpack://d3ml/./node_modules/d3-quadtree/src/remove.js","webpack://d3ml/./node_modules/d3-quadtree/src/root.js","webpack://d3ml/./node_modules/d3-quadtree/src/size.js","webpack://d3ml/./node_modules/d3-quadtree/src/visit.js","webpack://d3ml/./node_modules/d3-quadtree/src/visitAfter.js","webpack://d3ml/./node_modules/d3-force/src/link.js","webpack://d3ml/./node_modules/d3-force/src/simulation.js","webpack://d3ml/./node_modules/d3-force/src/manyBody.js","webpack://d3ml/./node_modules/d3-force/src/radial.js","webpack://d3ml/./node_modules/d3-force/src/x.js","webpack://d3ml/./node_modules/d3-force/src/y.js","webpack://d3ml/./node_modules/d3-format/src/formatDecimal.js","webpack://d3ml/./node_modules/d3-format/src/exponent.js","webpack://d3ml/./node_modules/d3-format/src/formatSpecifier.js","webpack://d3ml/./node_modules/d3-format/src/formatTrim.js","webpack://d3ml/./node_modules/d3-format/src/formatPrefixAuto.js","webpack://d3ml/./node_modules/d3-format/src/defaultLocale.js","webpack://d3ml/./node_modules/d3-format/src/formatRounded.js","webpack://d3ml/./node_modules/d3-format/src/formatTypes.js","webpack://d3ml/./node_modules/d3-format/src/identity.js","webpack://d3ml/./node_modules/d3-format/src/locale.js","webpack://d3ml/./node_modules/d3-format/src/formatGroup.js","webpack://d3ml/./node_modules/d3-format/src/formatNumerals.js","webpack://d3ml/./node_modules/d3-format/src/precisionFixed.js","webpack://d3ml/./node_modules/d3-format/src/precisionPrefix.js","webpack://d3ml/./node_modules/d3-format/src/precisionRound.js","webpack://d3ml/./node_modules/d3-geo/src/adder.js","webpack://d3ml/./node_modules/d3-geo/src/math.js","webpack://d3ml/./node_modules/d3-geo/src/noop.js","webpack://d3ml/./node_modules/d3-geo/src/stream.js","webpack://d3ml/./node_modules/d3-geo/src/area.js","webpack://d3ml/./node_modules/d3-geo/src/cartesian.js","webpack://d3ml/./node_modules/d3-geo/src/bounds.js","webpack://d3ml/./node_modules/d3-geo/src/centroid.js","webpack://d3ml/./node_modules/d3-geo/src/constant.js","webpack://d3ml/./node_modules/d3-geo/src/compose.js","webpack://d3ml/./node_modules/d3-geo/src/rotation.js","webpack://d3ml/./node_modules/d3-geo/src/circle.js","webpack://d3ml/./node_modules/d3-geo/src/clip/buffer.js","webpack://d3ml/./node_modules/d3-geo/src/pointEqual.js","webpack://d3ml/./node_modules/d3-geo/src/clip/rejoin.js","webpack://d3ml/./node_modules/d3-geo/src/polygonContains.js","webpack://d3ml/./node_modules/d3-geo/src/clip/index.js","webpack://d3ml/./node_modules/d3-geo/src/clip/antimeridian.js","webpack://d3ml/./node_modules/d3-geo/src/clip/circle.js","webpack://d3ml/./node_modules/d3-geo/src/clip/line.js","webpack://d3ml/./node_modules/d3-geo/src/clip/rectangle.js","webpack://d3ml/./node_modules/d3-geo/src/clip/extent.js","webpack://d3ml/./node_modules/d3-geo/src/length.js","webpack://d3ml/./node_modules/d3-geo/src/distance.js","webpack://d3ml/./node_modules/d3-geo/src/contains.js","webpack://d3ml/./node_modules/d3-geo/src/graticule.js","webpack://d3ml/./node_modules/d3-geo/src/interpolate.js","webpack://d3ml/./node_modules/d3-geo/src/path/area.js","webpack://d3ml/./node_modules/d3-geo/src/identity.js","webpack://d3ml/./node_modules/d3-geo/src/path/bounds.js","webpack://d3ml/./node_modules/d3-geo/src/path/centroid.js","webpack://d3ml/./node_modules/d3-geo/src/path/context.js","webpack://d3ml/./node_modules/d3-geo/src/path/measure.js","webpack://d3ml/./node_modules/d3-geo/src/path/string.js","webpack://d3ml/./node_modules/d3-geo/src/path/index.js","webpack://d3ml/./node_modules/d3-geo/src/transform.js","webpack://d3ml/./node_modules/d3-geo/src/projection/fit.js","webpack://d3ml/./node_modules/d3-geo/src/projection/resample.js","webpack://d3ml/./node_modules/d3-geo/src/projection/index.js","webpack://d3ml/./node_modules/d3-geo/src/projection/conic.js","webpack://d3ml/./node_modules/d3-geo/src/projection/conicEqualArea.js","webpack://d3ml/./node_modules/d3-geo/src/projection/cylindricalEqualArea.js","webpack://d3ml/./node_modules/d3-geo/src/projection/albers.js","webpack://d3ml/./node_modules/d3-geo/src/projection/albersUsa.js","webpack://d3ml/./node_modules/d3-geo/src/projection/azimuthal.js","webpack://d3ml/./node_modules/d3-geo/src/projection/azimuthalEqualArea.js","webpack://d3ml/./node_modules/d3-geo/src/projection/azimuthalEquidistant.js","webpack://d3ml/./node_modules/d3-geo/src/projection/mercator.js","webpack://d3ml/./node_modules/d3-geo/src/projection/conicConformal.js","webpack://d3ml/./node_modules/d3-geo/src/projection/equirectangular.js","webpack://d3ml/./node_modules/d3-geo/src/projection/conicEquidistant.js","webpack://d3ml/./node_modules/d3-geo/src/projection/gnomonic.js","webpack://d3ml/./node_modules/d3-geo/src/projection/identity.js","webpack://d3ml/./node_modules/d3-geo/src/projection/naturalEarth1.js","webpack://d3ml/./node_modules/d3-geo/src/projection/orthographic.js","webpack://d3ml/./node_modules/d3-geo/src/projection/stereographic.js","webpack://d3ml/./node_modules/d3-geo/src/projection/transverseMercator.js","webpack://d3ml/./node_modules/d3-hierarchy/src/cluster.js","webpack://d3ml/./node_modules/d3-hierarchy/src/hierarchy/count.js","webpack://d3ml/./node_modules/d3-hierarchy/src/hierarchy/index.js","webpack://d3ml/./node_modules/d3-hierarchy/src/hierarchy/each.js","webpack://d3ml/./node_modules/d3-hierarchy/src/hierarchy/eachAfter.js","webpack://d3ml/./node_modules/d3-hierarchy/src/hierarchy/eachBefore.js","webpack://d3ml/./node_modules/d3-hierarchy/src/hierarchy/sum.js","webpack://d3ml/./node_modules/d3-hierarchy/src/hierarchy/sort.js","webpack://d3ml/./node_modules/d3-hierarchy/src/hierarchy/path.js","webpack://d3ml/./node_modules/d3-hierarchy/src/hierarchy/ancestors.js","webpack://d3ml/./node_modules/d3-hierarchy/src/hierarchy/descendants.js","webpack://d3ml/./node_modules/d3-hierarchy/src/hierarchy/leaves.js","webpack://d3ml/./node_modules/d3-hierarchy/src/hierarchy/links.js","webpack://d3ml/./node_modules/d3-hierarchy/src/array.js","webpack://d3ml/./node_modules/d3-hierarchy/src/pack/enclose.js","webpack://d3ml/./node_modules/d3-hierarchy/src/pack/siblings.js","webpack://d3ml/./node_modules/d3-hierarchy/src/accessors.js","webpack://d3ml/./node_modules/d3-hierarchy/src/constant.js","webpack://d3ml/./node_modules/d3-hierarchy/src/pack/index.js","webpack://d3ml/./node_modules/d3-hierarchy/src/treemap/round.js","webpack://d3ml/./node_modules/d3-hierarchy/src/treemap/dice.js","webpack://d3ml/./node_modules/d3-hierarchy/src/partition.js","webpack://d3ml/./node_modules/d3-hierarchy/src/stratify.js","webpack://d3ml/./node_modules/d3-hierarchy/src/tree.js","webpack://d3ml/./node_modules/d3-hierarchy/src/treemap/slice.js","webpack://d3ml/./node_modules/d3-hierarchy/src/treemap/squarify.js","webpack://d3ml/./node_modules/d3-hierarchy/src/treemap/index.js","webpack://d3ml/./node_modules/d3-hierarchy/src/treemap/binary.js","webpack://d3ml/./node_modules/d3-hierarchy/src/treemap/sliceDice.js","webpack://d3ml/./node_modules/d3-hierarchy/src/treemap/resquarify.js","webpack://d3ml/./node_modules/d3-polygon/src/area.js","webpack://d3ml/./node_modules/d3-polygon/src/centroid.js","webpack://d3ml/./node_modules/d3-polygon/src/cross.js","webpack://d3ml/./node_modules/d3-polygon/src/hull.js","webpack://d3ml/./node_modules/d3-polygon/src/contains.js","webpack://d3ml/./node_modules/d3-polygon/src/length.js","webpack://d3ml/./node_modules/d3-random/src/defaultSource.js","webpack://d3ml/./node_modules/d3-random/src/uniform.js","webpack://d3ml/./node_modules/d3-random/src/normal.js","webpack://d3ml/./node_modules/d3-random/src/logNormal.js","webpack://d3ml/./node_modules/d3-random/src/irwinHall.js","webpack://d3ml/./node_modules/d3-random/src/bates.js","webpack://d3ml/./node_modules/d3-random/src/exponential.js","webpack://d3ml/./node_modules/d3-scale/src/array.js","webpack://d3ml/./node_modules/d3-scale/src/ordinal.js","webpack://d3ml/./node_modules/d3-scale/src/band.js","webpack://d3ml/./node_modules/d3-scale/src/constant.js","webpack://d3ml/./node_modules/d3-scale/src/number.js","webpack://d3ml/./node_modules/d3-scale/src/continuous.js","webpack://d3ml/./node_modules/d3-scale/src/tickFormat.js","webpack://d3ml/./node_modules/d3-scale/src/linear.js","webpack://d3ml/./node_modules/d3-scale/src/identity.js","webpack://d3ml/./node_modules/d3-scale/src/nice.js","webpack://d3ml/./node_modules/d3-scale/src/log.js","webpack://d3ml/./node_modules/d3-scale/src/pow.js","webpack://d3ml/./node_modules/d3-scale/src/quantile.js","webpack://d3ml/./node_modules/d3-scale/src/quantize.js","webpack://d3ml/./node_modules/d3-scale/src/threshold.js","webpack://d3ml/./node_modules/d3-time/src/interval.js","webpack://d3ml/./node_modules/d3-time/src/millisecond.js","webpack://d3ml/./node_modules/d3-time/src/duration.js","webpack://d3ml/./node_modules/d3-time/src/second.js","webpack://d3ml/./node_modules/d3-time/src/minute.js","webpack://d3ml/./node_modules/d3-time/src/hour.js","webpack://d3ml/./node_modules/d3-time/src/day.js","webpack://d3ml/./node_modules/d3-time/src/week.js","webpack://d3ml/./node_modules/d3-time/src/month.js","webpack://d3ml/./node_modules/d3-time/src/year.js","webpack://d3ml/./node_modules/d3-time/src/utcMinute.js","webpack://d3ml/./node_modules/d3-time/src/utcHour.js","webpack://d3ml/./node_modules/d3-time/src/utcDay.js","webpack://d3ml/./node_modules/d3-time/src/utcWeek.js","webpack://d3ml/./node_modules/d3-time/src/utcMonth.js","webpack://d3ml/./node_modules/d3-time/src/utcYear.js","webpack://d3ml/./node_modules/d3-time-format/src/locale.js","webpack://d3ml/./node_modules/d3-time-format/src/defaultLocale.js","webpack://d3ml/./node_modules/d3-time-format/src/isoFormat.js","webpack://d3ml/./node_modules/d3-time-format/src/isoParse.js","webpack://d3ml/./node_modules/d3-scale/src/time.js","webpack://d3ml/./node_modules/d3-scale/src/utcTime.js","webpack://d3ml/./node_modules/d3-scale/src/sequential.js","webpack://d3ml/./node_modules/d3-scale/src/diverging.js","webpack://d3ml/./node_modules/d3-scale-chromatic/src/colors.js","webpack://d3ml/./node_modules/d3-scale-chromatic/src/categorical/category10.js","webpack://d3ml/./node_modules/d3-scale-chromatic/src/categorical/Accent.js","webpack://d3ml/./node_modules/d3-scale-chromatic/src/categorical/Dark2.js","webpack://d3ml/./node_modules/d3-scale-chromatic/src/categorical/Paired.js","webpack://d3ml/./node_modules/d3-scale-chromatic/src/categorical/Pastel1.js","webpack://d3ml/./node_modules/d3-scale-chromatic/src/categorical/Pastel2.js","webpack://d3ml/./node_modules/d3-scale-chromatic/src/categorical/Set1.js","webpack://d3ml/./node_modules/d3-scale-chromatic/src/categorical/Set2.js","webpack://d3ml/./node_modules/d3-scale-chromatic/src/categorical/Set3.js","webpack://d3ml/./node_modules/d3-scale-chromatic/src/ramp.js","webpack://d3ml/./node_modules/d3-scale-chromatic/src/diverging/BrBG.js","webpack://d3ml/./node_modules/d3-scale-chromatic/src/diverging/PRGn.js","webpack://d3ml/./node_modules/d3-scale-chromatic/src/diverging/PiYG.js","webpack://d3ml/./node_modules/d3-scale-chromatic/src/diverging/PuOr.js","webpack://d3ml/./node_modules/d3-scale-chromatic/src/diverging/RdBu.js","webpack://d3ml/./node_modules/d3-scale-chromatic/src/diverging/RdGy.js","webpack://d3ml/./node_modules/d3-scale-chromatic/src/diverging/RdYlBu.js","webpack://d3ml/./node_modules/d3-scale-chromatic/src/diverging/RdYlGn.js","webpack://d3ml/./node_modules/d3-scale-chromatic/src/diverging/Spectral.js","webpack://d3ml/./node_modules/d3-scale-chromatic/src/sequential-multi/BuGn.js","webpack://d3ml/./node_modules/d3-scale-chromatic/src/sequential-multi/BuPu.js","webpack://d3ml/./node_modules/d3-scale-chromatic/src/sequential-multi/GnBu.js","webpack://d3ml/./node_modules/d3-scale-chromatic/src/sequential-multi/OrRd.js","webpack://d3ml/./node_modules/d3-scale-chromatic/src/sequential-multi/PuBuGn.js","webpack://d3ml/./node_modules/d3-scale-chromatic/src/sequential-multi/PuBu.js","webpack://d3ml/./node_modules/d3-scale-chromatic/src/sequential-multi/PuRd.js","webpack://d3ml/./node_modules/d3-scale-chromatic/src/sequential-multi/RdPu.js","webpack://d3ml/./node_modules/d3-scale-chromatic/src/sequential-multi/YlGnBu.js","webpack://d3ml/./node_modules/d3-scale-chromatic/src/sequential-multi/YlGn.js","webpack://d3ml/./node_modules/d3-scale-chromatic/src/sequential-multi/YlOrBr.js","webpack://d3ml/./node_modules/d3-scale-chromatic/src/sequential-multi/YlOrRd.js","webpack://d3ml/./node_modules/d3-scale-chromatic/src/sequential-single/Blues.js","webpack://d3ml/./node_modules/d3-scale-chromatic/src/sequential-single/Greens.js","webpack://d3ml/./node_modules/d3-scale-chromatic/src/sequential-single/Greys.js","webpack://d3ml/./node_modules/d3-scale-chromatic/src/sequential-single/Purples.js","webpack://d3ml/./node_modules/d3-scale-chromatic/src/sequential-single/Reds.js","webpack://d3ml/./node_modules/d3-scale-chromatic/src/sequential-single/Oranges.js","webpack://d3ml/./node_modules/d3-scale-chromatic/src/sequential-multi/cubehelix.js","webpack://d3ml/./node_modules/d3-scale-chromatic/src/sequential-multi/rainbow.js","webpack://d3ml/./node_modules/d3-scale-chromatic/src/sequential-multi/sinebow.js","webpack://d3ml/./node_modules/d3-scale-chromatic/src/sequential-multi/viridis.js","webpack://d3ml/./node_modules/d3-shape/src/constant.js","webpack://d3ml/./node_modules/d3-shape/src/math.js","webpack://d3ml/./node_modules/d3-shape/src/arc.js","webpack://d3ml/./node_modules/d3-shape/src/curve/linear.js","webpack://d3ml/./node_modules/d3-shape/src/point.js","webpack://d3ml/./node_modules/d3-shape/src/line.js","webpack://d3ml/./node_modules/d3-shape/src/area.js","webpack://d3ml/./node_modules/d3-shape/src/descending.js","webpack://d3ml/./node_modules/d3-shape/src/identity.js","webpack://d3ml/./node_modules/d3-shape/src/pie.js","webpack://d3ml/./node_modules/d3-shape/src/curve/radial.js","webpack://d3ml/./node_modules/d3-shape/src/lineRadial.js","webpack://d3ml/./node_modules/d3-shape/src/areaRadial.js","webpack://d3ml/./node_modules/d3-shape/src/pointRadial.js","webpack://d3ml/./node_modules/d3-shape/src/array.js","webpack://d3ml/./node_modules/d3-shape/src/link/index.js","webpack://d3ml/./node_modules/d3-shape/src/symbol/circle.js","webpack://d3ml/./node_modules/d3-shape/src/symbol/cross.js","webpack://d3ml/./node_modules/d3-shape/src/symbol/diamond.js","webpack://d3ml/./node_modules/d3-shape/src/symbol/star.js","webpack://d3ml/./node_modules/d3-shape/src/symbol/square.js","webpack://d3ml/./node_modules/d3-shape/src/symbol/triangle.js","webpack://d3ml/./node_modules/d3-shape/src/symbol/wye.js","webpack://d3ml/./node_modules/d3-shape/src/symbol.js","webpack://d3ml/./node_modules/d3-shape/src/noop.js","webpack://d3ml/./node_modules/d3-shape/src/curve/basis.js","webpack://d3ml/./node_modules/d3-shape/src/curve/basisClosed.js","webpack://d3ml/./node_modules/d3-shape/src/curve/basisOpen.js","webpack://d3ml/./node_modules/d3-shape/src/curve/bundle.js","webpack://d3ml/./node_modules/d3-shape/src/curve/cardinal.js","webpack://d3ml/./node_modules/d3-shape/src/curve/cardinalClosed.js","webpack://d3ml/./node_modules/d3-shape/src/curve/cardinalOpen.js","webpack://d3ml/./node_modules/d3-shape/src/curve/catmullRom.js","webpack://d3ml/./node_modules/d3-shape/src/curve/catmullRomClosed.js","webpack://d3ml/./node_modules/d3-shape/src/curve/catmullRomOpen.js","webpack://d3ml/./node_modules/d3-shape/src/curve/linearClosed.js","webpack://d3ml/./node_modules/d3-shape/src/curve/monotone.js","webpack://d3ml/./node_modules/d3-shape/src/curve/natural.js","webpack://d3ml/./node_modules/d3-shape/src/curve/step.js","webpack://d3ml/./node_modules/d3-shape/src/offset/none.js","webpack://d3ml/./node_modules/d3-shape/src/order/none.js","webpack://d3ml/./node_modules/d3-shape/src/stack.js","webpack://d3ml/./node_modules/d3-shape/src/offset/expand.js","webpack://d3ml/./node_modules/d3-shape/src/offset/diverging.js","webpack://d3ml/./node_modules/d3-shape/src/offset/silhouette.js","webpack://d3ml/./node_modules/d3-shape/src/offset/wiggle.js","webpack://d3ml/./node_modules/d3-shape/src/order/ascending.js","webpack://d3ml/./node_modules/d3-shape/src/order/descending.js","webpack://d3ml/./node_modules/d3-shape/src/order/insideOut.js","webpack://d3ml/./node_modules/d3-shape/src/order/reverse.js","webpack://d3ml/./node_modules/d3-voronoi/src/constant.js","webpack://d3ml/./node_modules/d3-voronoi/src/point.js","webpack://d3ml/./node_modules/d3-voronoi/src/RedBlackTree.js","webpack://d3ml/./node_modules/d3-voronoi/src/Edge.js","webpack://d3ml/./node_modules/d3-voronoi/src/Cell.js","webpack://d3ml/./node_modules/d3-voronoi/src/Circle.js","webpack://d3ml/./node_modules/d3-voronoi/src/Beach.js","webpack://d3ml/./node_modules/d3-voronoi/src/Diagram.js","webpack://d3ml/./node_modules/d3-voronoi/src/voronoi.js","webpack://d3ml/./node_modules/d3-zoom/src/constant.js","webpack://d3ml/./node_modules/d3-zoom/src/transform.js","webpack://d3ml/./node_modules/d3-zoom/src/noevent.js","webpack://d3ml/./node_modules/d3-zoom/src/zoom.js","webpack://d3ml/./node_modules/d3-zoom/src/event.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","defaultOptions","rootNode","width","height","padding","backgroundColor","circleRadius","circleFill","circleStroke","defaultType","defaultTypes","A","B","None","defaultK","defaultClassSelectors","remove","d3ml","settings","settingsGroup","d3","_interopRequireWildcard","_circle","_interopRequireDefault","_defaults","_validator","_painter","Visualization","data","options","types","arguments","length","undefined","_classCallCheck","this","initializeOptions","initializeTypes","initializeTypeColorMap","initializeScales","initializeData","createVisualization","clickable","isValidOptions","assign","isValidTypes","typeColorMap","mapTypesToColors","xScale","scaleLinear","domain","min","x","max","range","yScale","y","_this","isValidData","map","mapDataToCircle","containerId","Date","now","appendWrapperContainer","appendSVG","container","createElement","document","querySelector","appendChild","svg","select","concat","append","attr","style","colorScale","scaleOrdinal","schemeSet1","colorMap","reduce","type","fillColor","getFillColor","default","callbacks","_this2","addEventListener","e","clickCallback","_this3","target","newCircle","invert","offsetX","offsetY","forEach","callback","inputId","inputType","_this4","inputChangeCallback","_this5","checked","elementName","attributes","el","setAttribute","childElements","child","labelText","labelAttributes","displayedValue","inputAttributes","span","innerHTML","inputLabel","textContent","input","label","circle","push","drawCircles","Painter","lines","selectAll","enter","stroke","strokeWidth","x1","y1","x2","y2","cssClass","line","transitionDuration","transition","duration","circles","fill","radius","cx","cy","Circle","distance","_visualization","_knnVisualization","_linearRegressionVisualization","Validator","result","_typeof","Array","isArray","keys","every","val","includes","hasType","validTypes","validKeys","validValues","res","Infinity","k","Number","isInteger","_knn","selectors","rangeK","rangeKLabel","weightedCheckbox","weightedLabel","KNNVisualization","_possibleConstructorReturn","__proto__","getPrototypeOf","knn","appendSettings","addEventListeners","createSettings","createSettingsGroupForK","createSettingsGroupForWeighted","_this$createLabeledIn","createLabeledInput","createSettingsGroup","_this$createLabeledIn2","onClickSvg","svgClickCallback","onChangeInput","inputRangeKChangeCallback","checkboxWeightedChangeCallback","classifiedCircle","getClassifiedCircle","addCircle","boundingCircle","getBoundingCircle","drawConnectingLines","mapClosestNeighborsToConnectingLines","filter","removeElementsAfterTransition","updateIndexRangeKMaximum","weighted","circleType","classify","setType","kClosestNeighbors","setCssClass","connectingLines","drawLines","typeColor","selector","that","on","removeElements","_machineLearningAlgorithm","KNN","a","b","Math","sqrt","pow","neighbors","setDistance","calculateDistance","sort","compareDistance","typeDistance","neighbor","inverseDistance","counts","entries","getCircleTypeWeighted","getCircleTypeUnweighted","findKClosestNeighbors","determineCircleType","MachineLearningAlgorithm","_linearRegression","LinearRegressionVisualization","linearRegression","redraw","transitionLines","getLinesToDraw","linesCopy","from","newLine","_this$linearRegressio","performRegression","slope","intercept","regressionLine","getRegressionLine","getConnectingLines","createLine","LinearRegression","sum","meanX","meanY","f","up","down","calculateMean","calculateSlope","calculateIntercept","ascending","NaN","bisector","compare","ascendingComparator","left","lo","hi","mid","right","ascendingBisect","bisectRight","bisectLeft","bisect","pairs","array","pair","cross","values0","values1","i0","i1","value0","n0","n1","values","descending","number","variance","valueof","delta","mean","isNaN","deviation","v","src_extent","array_array","slice","constant","identity","src_range","start","stop","step","ceil","e10","e5","e2","ticks","count","reverse","tickIncrement","isFinite","floor","power","log","LN10","error","tickStep","step0","abs","step1","sturges","LN2","src_histogram","threshold","histogram","xz","x0","tz","shift","pop","bin","bins","_","thresholds","quantile","freedmanDiaconis","scott","src_max","src_mean","median","numbers","src_merge","arrays","merged","j","src_min","permute","indexes","permutes","scan","xi","xj","shuffle","random","src_sum","src_transpose","matrix","transpose_length","transpose","row","zip","array_slice","src_identity","axis_top","axis_right","axis_bottom","axis_left","epsilon","translateX","translateY","entering","__axis","axis_axis","orient","scale","tickArguments","tickValues","tickFormat","tickSizeInner","tickSizeOuter","tickPadding","transform","axis","context","apply","format","spacing","range0","range1","position","bandwidth","offset","round","copy","selection","path","tick","order","tickExit","exit","tickEnter","text","merge","insert","getAttribute","parentNode","each","tickSize","axisTop","axisRight","axisBottom","axisLeft","noop","dispatch","Error","Dispatch","set","constructor","typename","T","typenames","trim","split","indexOf","parseTypenames","args","src_dispatch","xhtml","namespaces","xlink","xml","xmlns","namespace","prefix","space","local","creator","fullname","ownerDocument","createElementNS","uri","namespaceURI","documentElement","none","src_selector","selectorAll_empty","selectorAll","querySelectorAll","matcher","matches","matcher_element","vendorMatches","webkitMatchesSelector","msMatchesSelector","mozMatchesSelector","oMatchesSelector","src_matcher","sparse","update","EnterNode","parent","datum","_next","_parent","__data__","insertBefore","next","keyPrefix","bindIndex","group","node","groupLength","dataLength","bindKey","keyValue","nodeByKeyValue","keyValues","sort_ascending","src_window","defaultView","styleValue","getPropertyValue","getComputedStyle","classArray","string","classList","ClassList","_node","_names","classedAdd","names","list","add","classedRemove","join","splice","contains","textRemove","htmlRemove","raise","nextSibling","lower","previousSibling","firstChild","constantNull","removeChild","selection_cloneShallow","cloneNode","selection_cloneDeep","filterEvents","on_event","mouseenter","mouseleave","filterContextListener","listener","index","contextListener","event","related","relatedTarget","compareDocumentPosition","event1","event0","onRemove","__on","removeEventListener","capture","onAdd","wrap","customEvent","sourceEvent","dispatchEvent","params","CustomEvent","createEvent","initEvent","bubbles","cancelable","detail","selection_root","Selection","groups","parents","_groups","_parents","selection_selection","subgroups","subnode","subgroup","match","size","src_constant","enterGroup","updateGroup","previous","_enter","_exit","groups0","groups1","m0","m1","merges","group0","group1","compareNode","sortgroups","sortgroup","nodes","empty","getAttributeNS","removeAttributeNS","removeAttribute","setAttributeNS","priority","removeProperty","setProperty","classed","html","before","clone","deep","on_parseTypenames","src_selection","src_select","src_create","nextId","Local","toString","id","source","current","src_point","ownerSVGElement","createSVGPoint","point","clientX","clientY","matrixTransform","getScreenCTM","inverse","rect","getBoundingClientRect","clientLeft","top","clientTop","mouse","changedTouches","src_selectAll","src_touch","touches","identifier","touch","src_touches","points","nopropagation","stopImmediatePropagation","noevent","preventDefault","nodrag","view","__noselect","MozUserSelect","yesdrag","noclick","setTimeout","d3_drag_src_constant","DragEvent","subject","active","dx","dy","defaultFilter","button","defaultContainer","defaultSubject","defaultTouchable","src_drag","mousedownx","mousedowny","mousemoving","touchending","touchable","gestures","listeners","clickDistance2","drag","mousedowned","touchstarted","touchmoved","touchended","gesture","beforestart","mousemoved","mouseupped","clearTimeout","sublisteners","p0","clickDistance","extend","definition","Color","reI","reN","reP","reHex3","reHex6","reRgbInteger","RegExp","reRgbPercent","reRgbaInteger","reRgbaPercent","reHslPercent","reHslaPercent","named","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","color_color","toLowerCase","exec","Rgb","parseInt","rgbn","rgba","hsla","g","rgbConvert","rgb","opacity","color_rgb","hex","h","Hsl","hsl","hslConvert","hsl2rgb","m2","displayable","brighter","darker","deg2rad","PI","rad2deg","Xn","Yn","Zn","lab_t0","lab_t1","lab_t2","t3","labConvert","Lab","Hcl","cos","sin","z","rgb2lrgb","xyz2lab","lab","lab2xyz","lrgb2rgb","hclConvert","atan2","lch","hcl","C","cubehelix_D","cubehelix_E","ED","EB","BC_DA","cubehelix_cubehelix","Cubehelix","bl","cubehelixConvert","basis","t1","v0","v1","v2","v3","t2","cosh","sinh","src_basis","basisClosed","d3_interpolate_src_constant","linear","color_hue","gamma","nogamma","exponential","rgbGamma","color","end","rgbSpline","spline","colors","rgbBasis","rgbBasisClosed","src_array","nb","na","src_value","src_date","setTime","src_number","src_object","reA","reB","cssNode","cssRoot","cssView","svgNode","src_string","am","bm","bs","bi","lastIndex","q","one","string_zero","src_rgb","valueOf","src_round","degrees","decompose_identity","rotate","skewX","scaleX","scaleY","decompose","atan","interpolateTransform","parse","pxComma","pxParen","degParen","xa","ya","xb","yb","translate","interpolateTransformCss","interpolateTransformSvg","baseVal","consolidate","rho","SQRT2","zoom_cosh","exp","src_zoom","p1","S","ux0","uy0","w0","ux1","uy1","w1","d2","d1","b0","b1","r0","r1","coshr0","u","tanh","zoom_sinh","hsl_hsl","hue","src_hsl","hslLong","lab_lab","hcl_hcl","src_hcl","hclLong","src_cubehelix_cubehelix","cubehelixGamma","cubehelix","src_cubehelix","cubehelixLong","piecewise_piecewise","interpolate","I","taskHead","taskTail","quantize","interpolator","samples","timer_frame","timeout","timer_interval","pokeDelay","clockLast","clockNow","clockSkew","clock","performance","setFrame","requestAnimationFrame","clearNow","Timer","_call","_time","timer","delay","time","restart","timerFlush","wake","t0","sleep","nap","poke","clearInterval","setInterval","TypeError","src_timeout","elapsed","src_interval","total","emptyOn","emptyTween","CREATED","SCHEDULED","STARTING","STARTED","RUNNING","ENDING","ENDED","transition_schedule","timing","schedules","__transition","self","tween","state","ease","schedule_create","schedule_init","schedule","schedule_get","schedule_set","interrupt","tweenValue","_id","transition_interpolate","selection_Selection","transition_id","Transition","_name","src_transition_transition","newId","selection_prototype","linear_linear","quadIn","quadOut","quadInOut","cubicIn","cubicOut","cubicInOut","children","inherit","id0","id1","on0","on1","sit","on_start","onFunction","attrTween","value00","value10","interpolate0","value1","_value","styleTween","style_styleRemove","styleRemoveEnd","style_styleFunction","style_styleConstant","text_textFunction","text_textConstant","removeFunction","tween0","tween1","easeConstant","polyIn","custom","exponent","polyOut","polyInOut","pi","halfPi","sinIn","sinOut","sinInOut","expIn","expOut","expInOut","circleIn","circleOut","circleInOut","bounce_b1","b2","b3","b4","b5","b6","b7","b8","b9","bounce_b0","bounceIn","bounceOut","bounceInOut","backIn","overshoot","backOut","backInOut","tau","elasticIn","asin","amplitude","period","elasticOut","elasticInOut","defaultTiming","transition_inherit","active_root","src_active","d3_brush_src_constant","src_event","noevent_nopropagation","src_noevent","MODE_DRAG","MODE_SPACE","MODE_HANDLE","MODE_CENTER","brush_X","handles","brush_type","output","xy","brush_Y","XY","cursors","overlay","w","nw","ne","se","sw","flipX","flipY","signsX","signsY","brush_defaultFilter","defaultExtent","brush_local","__brush","brush_empty","extent","brushSelection","dim","brushX","brush_brush","brushY","brush","handleSize","initialize","handle","started","emitter","Emitter","e0","e1","s0","s1","moving","lockX","lockY","metaKey","altKey","signX","signY","W","N","E","shifting","shiftKey","point0","emit","moved","ended","keyCode","move","point1","selection0","selection1","starting","math_pi","math_halfPi","math_tau","math_max","src_chord","padAngle","sortGroups","sortSubgroups","sortChords","chord","groupSums","groupIndex","subgroupIndex","chords","di","dj","a0","a1","subindex","startAngle","endAngle","compareValue","src_array_slice","d3_chord_src_constant","path_pi","path_tau","tauEpsilon","Path","_x0","_y0","_x1","_y1","path_path","moveTo","closePath","lineTo","quadraticCurveTo","bezierCurveTo","arcTo","y0","x21","y21","x01","y01","l01_2","x20","y20","l21_2","l20_2","l21","l01","acos","t01","t21","arc","ccw","cw","da","src_path","defaultSource","defaultTarget","defaultRadius","defaultStartAngle","defaultEndAngle","src_ribbon","ribbon","buffer","argv","sr","sa0","sa1","sx0","sy0","tr","ta0","ta1","Map","map_map","has","clear","src_map","src_nest","sortValues","rollup","nest","sortKeys","depth","createResult","setResult","valuesByKey","createObject","setObject","createMap","setMap","sortKey","Set","proto","set_set","src_set","src_keys","src_values","src_entries","d3_contour_src_array_slice","src_ascending","src_area","ring","area","d3_contour_src_constant","hole","ringContains","yi","pj","yj","segmentContains","collinear","within","src_noop","cases","src_contours","smooth","smoothLinear","contours","contour","polygons","holes","fragmentByStart","fragmentByEnd","stitch","startIndex","endIndex","unshift","isorings","polygon","coordinates","xt","yt","_0","_1","blurX","blurY","defaultX","defaultY","defaultWeight","src_density","weight","density","Float32Array","wi","geometry","transformPolygon","transformRing","transformPoint","resize","cellSize","EOL","EOF","QUOTE","NEWLINE","RETURN","objectConverter","columns","Function","JSON","stringify","dsv","delimiter","reFormat","DELIMITER","charCodeAt","parseRows","rows","eof","eol","token","replace","formatRow","formatValue","test","convert","customConverter","columnSet","column","inferColumns","formatRows","csv","csvParse","csvParseRows","csvFormat","csvFormatRows","tsv","tsvParse","tsvParseRows","tsvFormat","tsvFormatRows","responseBlob","response","ok","status","statusText","blob","init","fetch","then","responseArrayBuffer","arrayBuffer","src_buffer","responseText","src_text","dsvParse","dsv_dsv","dsv_csv","dsv_tsv","src_image","Promise","resolve","reject","image","Image","onerror","onload","src","responseJson","json","parser","DOMParser","parseFromString","xml_html","src_center","force","sx","sy","d3_force_src_constant","jiggle","add_add","tree","xm","ym","xp","yp","bottom","_root","leaf","_x","_y","src_quad","x_defaultX","y_defaultY","quadtree","Quadtree","addAll","leaf_copy","treeProto","collide_x","vx","collide_y","vy","cover","yz","visit","find","x3","y3","quads","retainer","removeAll","visitAfter","collide","radii","strength","iterations","ri","ri2","prepare","quad","rj","link_index","link_find","nodeById","nodeId","links","strengths","distances","bias","link","alpha","initializeStrength","initializeDistance","simulation_x","simulation_y","initialRadius","initialAngle","src_simulation","simulation","alphaMin","alphaDecay","alphaTarget","velocityDecay","forces","stepper","fx","fy","initializeNodes","angle","initializeForce","closest","distanceMin2","distanceMax2","theta2","accumulate","distanceMin","distanceMax","theta","radial","radiuses","d3_force_src_x","d3_force_src_y","formatDecimal","toExponential","coefficient","src_exponent","re","formatSpecifier","specifier","FormatSpecifier","align","sign","symbol","zero","comma","precision","prefixExponent","defaultLocale_locale","defaultLocale_format","defaultLocale_formatPrefix","formatTrim","out","formatRounded","formatTypes","%","toFixed","toPrecision","X","toUpperCase","d3_format_src_identity","prefixes","src_locale","locale","grouping","thousands","substring","formatGroup","currency","decimal","numerals","formatNumerals","percent","newFormat","suffix","formatType","maybeSuffix","valuePrefix","valueSuffix","valueNegative","formatPrefix","defaultLocale","precisionFixed","precisionPrefix","precisionRound","adder","Adder","reset","adder_add","temp","bv","av","math_epsilon","src_math_pi","src_math_halfPi","quarterPi","src_math_tau","math_degrees","radians","math_cos","math_sin","math_sign","haversin","noop_noop","streamGeometry","stream","streamGeometryType","streamObjectType","Feature","FeatureCollection","features","Sphere","sphere","Point","MultiPoint","LineString","streamLine","MultiLineString","Polygon","streamPolygon","MultiPolygon","GeometryCollection","geometries","closed","coordinate","lineStart","lineEnd","polygonStart","polygonEnd","area_lambda00","phi00","area_lambda0","area_cosPhi0","area_sinPhi0","src_stream","areaRingSum","areaSum","areaStream","areaRingStart","areaRingEnd","areaRing","areaPointFirst","areaPoint","lambda","phi","dLambda","sdLambda","adLambda","cosPhi","sinPhi","d3_geo_src_area","cartesian_spherical","cartesian","cartesian_cartesian","spherical","cartesianDot","cartesianCross","cartesianAddInPlace","cartesianScale","vector","cartesianNormalizeInPlace","bounds_lambda0","bounds_phi0","bounds_lambda1","bounds_phi1","bounds_lambda2","bounds_lambda00","bounds_phi00","bounds_p0","ranges","bounds_range","deltaSum","boundsStream","boundsPoint","boundsLineStart","boundsLineEnd","boundsRingPoint","boundsRingStart","boundsRingEnd","bounds_linePoint","normal","inflection","phii","lambdai","antimeridian","bounds_angle","lambda0","lambda1","rangeCompare","rangeContains","W0","W1","centroid_X0","centroid_Y0","Z0","centroid_X1","centroid_Y1","Z1","X2","Y2","Z2","centroid_lambda00","centroid_phi00","centroid_x0","centroid_y0","z0","bounds","feature","deltaMax","centroidStream","centroidPoint","centroidLineStart","centroidLineEnd","centroidRingStart","centroidRingEnd","centroidPointCartesian","centroidLinePointFirst","centroidLinePoint","centroidRingPointFirst","centroidRingPoint","cz","d3_geo_src_constant","compose","rotationIdentity","rotateRadians","deltaLambda","deltaPhi","deltaGamma","rotationLambda","rotationPhiGamma","forwardRotationLambda","rotation","cosDeltaPhi","sinDeltaPhi","cosDeltaGamma","sinDeltaGamma","src_rotation","forward","circleStream","direction","cosRadius","sinRadius","src_circle","center","clip_buffer","rejoin","pointEqual","Intersection","other","entry","segments","compareIntersection","startInside","clip","segment","rejoin_link","isSubject","polygonContains_sum","polygonContains","winding","phi0","sinPhi0","cosPhi0","sinPhi1","cosPhi1","phi1","absDelta","intersection","phiArc","src_clip","pointVisible","clipLine","sink","ringBuffer","ringSink","polygonStarted","pointRing","ringStart","ringEnd","clip_compareIntersection","pointLine","clean","ringSegments","validSegment","sign0","sign1","sinLambda0Lambda1","clipAntimeridianIntersect","to","clip_circle","cr","smallRadius","notHemisphere","visible","intersect","two","n2","n2n2","n1n2","determinant","c1","c2","n1xn2","uu","polar","q1","code","c0","v00","point2","clip_line","ax","ay","clipMax","clipMin","clipRectangle","corner","comparePoint","ca","cb","x__","y__","v__","x_","y_","v_","first","activeStream","bufferStream","clipStream","linePoint","polygonInside","cleanInside","length_lambda0","length_sinPhi0","length_cosPhi0","clip_extent","cache","cacheStream","lengthSum","lengthStream","lengthPointFirst","lengthLineEnd","lengthPoint","cosDelta","src_length","distance_coordinates","distance_object","src_distance","containsObjectType","containsGeometry","containsGeometryType","containsPoint","containsLine","containsPolygon","ab","ringRadians","pointRadians","src_contains","graticuleX","graticuleY","graticule_graticule","X1","X0","Y1","Y0","Y","DX","DY","graticule","outline","extentMajor","extentMinor","stepMajor","stepMinor","graticule10","area_x00","area_y00","area_x0","area_y0","src_interpolate","cy0","cy1","sy1","kx0","ky0","kx1","ky1","d3_geo_src_identity","area_areaSum","area_areaRingSum","area_areaStream","area_areaRingStart","area_areaRingEnd","area_areaPointFirst","area_areaPoint","path_area","bounds_x0","bounds_y0","bounds_x1","bounds_y1","centroid_x00","centroid_y00","path_centroid_x0","path_centroid_y0","path_bounds","path_centroid_X0","path_centroid_Y0","centroid_Z0","path_centroid_X1","path_centroid_Y1","centroid_Z1","centroid_X2","centroid_Y2","centroid_Z2","centroid_centroidStream","centroid_centroidPoint","centroid_centroidLineStart","centroid_centroidLineEnd","centroid_centroidRingStart","centroid_centroidRingEnd","centroid","centroidPointFirstLine","centroidPointLine","centroidPointFirstRing","centroidPointRing","path_centroid","PathContext","_context","_radius","pointRadius","_line","_point","lengthRing","measure_x00","measure_y00","measure_x0","measure_y0","measure_lengthSum","measure_lengthStream","measure_lengthPointFirst","measure_lengthPoint","measure","PathString","_string","string_circle","projection","projectionStream","contextStream","src_transform","methods","transformer","TransformStream","fit","fitBounds","clipExtent","fitExtent","fitSize","fitWidth","fitHeight","maxDepth","cosMinDistance","resample","project","delta2","resampleLineTo","phi2","lambda2","dx2","dy2","dz","lambda00","x00","y00","a00","b00","c00","resampleStream","ringPoint","resample_resample","resampleNone","transformRadians","scaleTranslateRotate","cosAlpha","sinAlpha","ai","ci","fi","projection_projection","projectionMutator","projectAt","projectResample","projectTransform","projectRotateTransform","preclip","clip_antimeridian","postclip","recenter","transformRotate","clipAngle","conicProjection","parallels","conicEqualAreaRaw","cylindricalEqualAreaRaw","r0y","conicEqualArea","albers","projection_albersUsa","lower48Point","alaskaPoint","hawaiiPoint","lower48","alaska","hawaii","pointStream","albersUsa","streams","multiplex","azimuthalRaw","azimuthalInvert","sc","cc","azimuthalEqualAreaRaw","cxcy","azimuthalEqualArea","azimuthalEquidistantRaw","azimuthalEquidistant","mercatorRaw","mercator","mercatorProjection","reclip","tany","conicConformalRaw","conicConformal","equirectangularRaw","equirectangular","conicEquidistantRaw","gy","nx","conicEquidistant","gnomonicRaw","gnomonic","identity_scaleTranslate","kx","ky","tx","ty","projection_identity","reflectX","reflectY","naturalEarth1Raw","phi4","naturalEarth1","orthographicRaw","orthographic","stereographicRaw","stereographic","transverseMercatorRaw","transverseMercator","defaultSeparation","meanXReduce","maxYReduce","cluster","separation","nodeSize","previousNode","eachAfter","maxY","leafLeft","leafRight","count_count","hierarchy","childs","Node","valued","defaultChildren","eachBefore","computeHeight","copyData","ancestor","aNodes","ancestors","bNodes","leastCommonAncestor","descendants","leaves","d3_hierarchy_src_array_slice","enclose","array_shuffle","enclosesWeak","encloseBasis","extendBasis","enclosesWeakAll","enclosesNot","encloseBasis2","encloseBasis3","dr","encloseBasis1","r2","r21","r3","a2","a3","c3","place","intersects","score","siblings_Node","packEnclose","aa","sj","sk","pack","siblings","required","constantZero","d3_hierarchy_src_constant","pack_defaultRadius","src_pack","radiusLeaf","packChildren","translateChild","optional","treemap_round","dice","src_partition","partition","positionNode","stratify_keyPrefix","preroot","ambiguous","defaultId","defaultParentId","parentId","stratify","nodeKey","nodeByKey","tree_defaultSeparation","nextLeft","nextRight","moveSubtree","wm","wp","change","nextAncestor","vim","TreeNode","src_tree","treeRoot","firstWalk","secondWalk","sizeNode","executeShifts","midpoint","vip","vop","vom","sip","sop","sim","som","apportion","treemap_slice","squarify_phi","squarifyRatio","ratio","nodeValue","sumValue","minValue","maxValue","newRatio","minRatio","beta","squarify","src_treemap","tile","paddingStack","paddingInner","paddingTop","paddingRight","paddingBottom","paddingLeft","treemap","paddingOuter","binary","sums","valueOffset","valueTarget","valueLeft","valueRight","xk","yk","sliceDice","treemap_resquarify","resquarify","_squarify","d3_polygon_src_area","d3_polygon_src_centroid","src_cross","lexicographicOrder","computeUpperHullIndexes","hull","sortedPoints","flippedPoints","upperIndexes","lowerIndexes","skipLeft","skipRight","d3_polygon_src_contains","inside","d3_polygon_src_length","perimeter","src_defaultSource","uniform","sourceRandomUniform","randomUniform","src_normal","sourceRandomNormal","randomNormal","mu","sigma","logNormal","sourceRandomLogNormal","randomLogNormal","irwinHall","sourceRandomIrwinHall","randomIrwinHall","bates","sourceRandomBates","randomBates","src_exponential","sourceRandomExponential","randomExponential","d3_scale_src_array_array","array_map","d3_scale_src_array_slice","implicit","ordinal","unknown","band","ordinalRange","rescale","rangeRound","band_point","pointish","d3_scale_src_constant","d3_scale_src_number","unit","deinterpolateLinear","bimap","deinterpolate","reinterpolate","d0","polymap","clamp","continuous","piecewise","deinterpolateClamp","reinterpolateClamp","src_tickFormat","linearish","nice","src_linear_linear","identity_identity","interval","log_deinterpolate","log_reinterpolate","pow10","powp","base","logp","log10","log2","reflect","log_log","logs","pows","pow_raise","pow_pow","pow_sqrt","quantile_quantile","invertExtent","quantiles","quantize_quantize","threshold_threshold","interval_t0","interval_t1","newInterval","floori","offseti","field","date","millisecond_millisecond","src_millisecond","milliseconds","durationMinute","durationWeek","second_second","getUTCSeconds","seconds","minute_minute","getMinutes","minutes","hour_hour","getTimezoneOffset","getHours","src_hour","hours","day_day","setHours","setDate","getDate","src_day","days","weekday","getDay","sunday","monday","tuesday","wednesday","thursday","friday","saturday","sundays","mondays","tuesdays","wednesdays","thursdays","fridays","saturdays","month_month","setMonth","getMonth","getFullYear","src_month","months","year_year","setFullYear","src_year","years","utcMinute","setUTCSeconds","getUTCMinutes","src_utcMinute","utcMinutes","utcHour","setUTCMinutes","getUTCHours","src_utcHour","utcHours","utcDay","setUTCHours","setUTCDate","getUTCDate","utcDays","utcWeekday","getUTCDay","utcSunday","utcMonday","utcTuesday","utcWednesday","utcThursday","utcFriday","utcSaturday","utcSundays","utcMondays","utcTuesdays","utcWednesdays","utcThursdays","utcFridays","utcSaturdays","utcMonth","setUTCMonth","getUTCMonth","getUTCFullYear","src_utcMonth","utcMonths","utcYear","setUTCFullYear","src_utcYear","utcYears","localDate","H","M","L","utcDate","UTC","newYear","formatLocale","locale_dateTime","dateTime","locale_date","locale_time","locale_periods","periods","locale_weekdays","locale_shortWeekdays","shortDays","locale_months","locale_shortMonths","shortMonths","periodRe","formatRe","periodLookup","formatLookup","weekdayRe","weekdayLookup","shortWeekdayRe","shortWeekdayLookup","monthRe","monthLookup","shortMonthRe","shortMonthLookup","formats","formatDayOfMonth","formatMicroseconds","formatHour24","formatHour12","formatDayOfYear","formatMilliseconds","formatMonthNumber","formatMinutes","Q","formatUnixTimestamp","formatUnixTimestampSeconds","formatSeconds","formatWeekdayNumberMonday","U","formatWeekNumberSunday","V","formatWeekNumberISO","formatWeekdayNumberSunday","formatWeekNumberMonday","locale_formatYear","formatFullYear","Z","formatZone","formatLiteralPercent","utcFormats","formatUTCDayOfMonth","formatUTCMicroseconds","formatUTCHour24","formatUTCHour12","formatUTCDayOfYear","formatUTCMilliseconds","formatUTCMonthNumber","formatUTCMinutes","formatUTCSeconds","formatUTCWeekdayNumberMonday","formatUTCWeekNumberSunday","formatUTCWeekNumberISO","formatUTCWeekdayNumberSunday","formatUTCWeekNumberMonday","formatUTCYear","formatUTCFullYear","formatUTCZone","parses","parseSpecifier","parseDayOfMonth","parseMicroseconds","parseHour24","parseDayOfYear","parseMilliseconds","parseMonthNumber","parseMinutes","parseUnixTimestamp","parseUnixTimestampSeconds","parseSeconds","parseWeekdayNumberMonday","parseWeekNumberSunday","parseWeekNumberISO","parseWeekdayNumberSunday","parseWeekNumberMonday","parseYear","parseFullYear","parseZone","parseLiteralPercent","pad","pads","charAt","newParse","newDate","week","day","src_utcDay","utcFormat","utcParse","src_defaultLocale_locale","timeFormat","timeParse","-","0","numberRe","percentRe","requoteRe","requote","getMilliseconds","getSeconds","getUTCMilliseconds","dow","defaultLocale_defaultLocale","isoFormat","toISOString","isoParse","time_durationSecond","time_durationMinute","time_durationHour","time_durationDay","time_durationWeek","durationMonth","durationYear","time_date","time_number","calendar","year","month","hour","minute","second","millisecond","formatMillisecond","formatSecond","formatMinute","formatHour","formatDay","formatWeek","formatMonth","formatYear","tickIntervals","tickInterval","src_time","src_minute","src_second","utcTime","sequential","k10","diverging","k21","src_colors","category10","Accent","Dark2","Paired","Pastel1","Pastel2","Set1","Set2","Set3","ramp","scheme","BrBG_scheme","BrBG","PRGn_scheme","PRGn","PiYG_scheme","PiYG","PuOr_scheme","PuOr","RdBu_scheme","RdBu","RdGy_scheme","RdGy","RdYlBu_scheme","RdYlBu","RdYlGn_scheme","RdYlGn","Spectral_scheme","Spectral","BuGn_scheme","BuGn","BuPu_scheme","BuPu","GnBu_scheme","GnBu","OrRd_scheme","OrRd","PuBuGn_scheme","PuBuGn","PuBu_scheme","PuBu","PuRd_scheme","PuRd","RdPu_scheme","RdPu","YlGnBu_scheme","YlGnBu","YlGn_scheme","YlGn","YlOrBr_scheme","YlOrBr","YlOrRd_scheme","YlOrRd","Blues_scheme","Blues","Greens_scheme","Greens","Greys_scheme","Greys","Purples_scheme","Purples","Reds_scheme","Reds","Oranges_scheme","Oranges","sequential_multi_cubehelix","warm","cool","rainbow_c","rainbow","ts","sinebow_c","pi_1_3","pi_2_3","sinebow","viridis_ramp","magma","inferno","plasma","d3_shape_src_constant","math_abs","math_atan2","src_math_cos","src_math_max","math_min","src_math_sin","math_sqrt","src_math_epsilon","d3_shape_src_math_pi","d3_shape_src_math_halfPi","d3_shape_src_math_tau","math_asin","arcInnerRadius","innerRadius","arcOuterRadius","outerRadius","arcStartAngle","arcEndAngle","arcPadAngle","cornerTangents","rc","ox","oy","x11","y11","x10","y10","D","cx0","cx1","dx0","dy0","dx1","dy1","src_arc","cornerRadius","padRadius","a01","a11","a10","da0","da1","ap","rp","rc0","rc1","oc","x32","y32","arc_intersect","bx","by","kc","math_acos","lc","Linear","areaStart","areaEnd","curve_linear","point_x","point_y","defined","curve","defined0","d3_shape_src_area","x0z","y0z","arealine","src_line","lineX0","lineY0","lineY1","lineX1","src_descending","d3_shape_src_identity","src_pie","pie","arcs","pa","curveRadialLinear","curveRadial","Radial","_curve","lineRadial","src_lineRadial","lineStartAngle","lineEndAngle","lineInnerRadius","lineOuterRadius","pointRadial","d3_shape_src_array_slice","linkSource","linkTarget","link_link","curveHorizontal","curveVertical","link_curveRadial","p2","p3","linkHorizontal","linkVertical","linkRadial","symbol_circle","draw","symbol_cross","tan30","tan30_2","diamond","kr","star_kx","star_ky","star","square","sqrt3","triangle","wye_s","wye_k","wye_a","wye","symbols","src_symbol","d3_shape_src_noop","basis_point","Basis","curve_basis","BasisClosed","_x2","_x3","_x4","_y2","_y3","_y4","curve_basisClosed","BasisOpen","basisOpen","Bundle","_basis","_beta","curve_bundle","bundle","cardinal_point","_k","Cardinal","tension","cardinal","CardinalClosed","_x5","_y5","cardinalClosed","CardinalOpen","cardinalOpen","catmullRom_point","_l01_a","_l01_2a","_l12_a","_l12_2a","_l23_a","_l23_2a","CatmullRom","_alpha","x23","y23","curve_catmullRom","catmullRom","CatmullRomClosed","catmullRomClosed","CatmullRomOpen","catmullRomOpen","LinearClosed","linearClosed","monotone_sign","slope3","h0","h1","slope2","monotone_point","MonotoneX","MonotoneY","ReflectContext","monotoneX","monotoneY","Natural","controlPoints","_t0","px","py","natural","Step","_t","curve_step","stepBefore","stepAfter","offset_none","series","order_none","stackValue","src_stack","stack","oz","kz","sz","sij","ki","si","expand","offset_diverging","yn","silhouette","wiggle","s2","sij0","s3","order_ascending","ascending_sum","order_descending","insideOut","tops","bottoms","order_reverse","d3_voronoi_src_constant","src_point_x","src_point_y","RedBlackTree","RedBlackNode","R","P","RedBlackRotateLeft","RedBlackRotateRight","RedBlackFirst","after","grandpa","uncle","sibling","src_RedBlackTree","createEdge","edge","Diagram_edges","setEdgeEnd","cells","halfedges","createBorderEdge","vertex","clipEdge","connectEdge","fm","fb","lx","ly","rx","ry","cellHalfedgeAngle","cell","site","va","vb","cellHalfedgeStart","cellHalfedgeEnd","firstCircle","circlePool","attachCircle","lArc","rArc","lSite","cSite","rSite","Diagram_epsilon2","ha","hc","Diagram_circles","detachCircle","beachPool","createBeach","beach","detachBeach","beaches","removeBeach","disappearing","Diagram_epsilon","iArc","nArcs","addBeach","dxl","dxr","directrix","leftBreakPoint","rightBreakPoint","createCell","newArc","hb","rfocx","rfocy","pby2","lfocx","lfocy","plby2","hl","aby2","triangleArea","lexicographic","Diagram","sites","sortCellHalfedges","clipEdges","iCell","iHalfedge","nHalfedges","startX","startY","endX","endY","nCells","dc","v01","v11","v10","clipCells","edges","triangles","_found","src_voronoi","voronoi","d3_zoom_src_constant","Transform","applyX","applyY","location","invertX","invertY","rescaleX","rescaleY","transform_identity","transform_transform","__zoom","src_noevent_nopropagation","d3_zoom_src_noevent","zoom_defaultFilter","zoom_defaultExtent","SVGElement","clientWidth","clientHeight","defaultTransform","defaultWheelDelta","deltaY","deltaMode","zoom_defaultTouchable","defaultConstrain","translateExtent","d3_zoom_src_zoom","touchstarting","constrain","wheelDelta","scaleExtent","touchDelay","wheelDelay","zoom","wheeled","dblclicked","Gesture","wheel","k1","touch0","touch1","l0","l1","dp","dl","collection","scaleBy","scaleTo","translateBy","translateTo"],"mappings":"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","file":"d3ml.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"d3ml\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"d3ml\"] = factory();\n\telse\n\t\troot[\"d3ml\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 4);\n","const defaultOptions = {\n  rootNode: 'body',\n  width: 500,\n  height: 300,\n  padding: 50,\n  backgroundColor: '#1d1e22',\n  circleRadius: 5,\n  circleFill: 'grey',\n  circleStroke: 'white'\n};\nconst defaultType = 'None';\n\nconst defaultTypes = {\n  A: 'A',\n  B: 'B',\n  None: 'None'\n};\n\nconst defaultK = 3;\n\nconst defaultClassSelectors = {\n  remove: 'remove',\n  d3ml: 'd3ml',\n  settings: 'd3ml__settings',\n  settingsGroup: 'd3ml__settings__group'\n};\n\nexport default {\n  defaultOptions,\n  defaultType,\n  defaultTypes,\n  defaultK,\n  defaultClassSelectors\n};\n","import * as d3 from 'd3';\nimport Circle from './circle';\nimport { defaultOptions, defaultType, defaultClassSelectors } from './defaults';\nimport { isValidOptions, isValidTypes, isValidData } from '../validation/validator';\nimport Painter from './painter';\n\nexport default class Visualization {\n  constructor(data, options, types = [defaultType]) {\n    this.initializeOptions(options);\n    this.initializeTypes(types);\n    this.initializeTypeColorMap(this.types);\n    this.initializeScales(data, this.options);\n    this.initializeData(data, types);\n\n    this.createVisualization();\n    this.clickable = true;\n  }\n  initializeOptions(options) {\n    if (!isValidOptions(options)) {\n      options = {};\n    }\n    this.options = Object.assign({}, defaultOptions, options);\n  }\n  initializeTypes(types) {\n    if (!isValidTypes(types)) {\n      types = [];\n    }\n    this.types = types;\n  }\n  initializeTypeColorMap(types) {\n    this.typeColorMap = this.mapTypesToColors(types);\n  }\n  initializeScales(data, options) {\n    this.xScale = d3.scaleLinear()\n      .domain([\n        d3.min(data, function (d) { return d.x; }) - options.padding,\n        d3.max(data, function (d) { return d.x; }) + options.padding\n      ])\n      .range([0, options.width]);\n\n    this.yScale = d3.scaleLinear()\n      .domain([\n        d3.min(data, function (d) { return d.y; }) - options.padding,\n        d3.max(data, function (d) { return d.y; }) + options.padding\n      ])\n      .range([options.height, 0]);\n  }\n  initializeData(data, types) {\n    if (!isValidData(data, types)) {\n      this.data = [];\n    } else {\n      this.data = data.map(d => this.mapDataToCircle(d));\n    }\n  }\n  createVisualization() {\n    this.containerId = defaultClassSelectors.d3ml + Date.now();\n    this.appendWrapperContainer();\n    this.appendSVG();\n  }\n  appendWrapperContainer() {\n    const container = this.createElement('div', [['class', defaultClassSelectors.d3ml], ['id', this.containerId]]);\n    const rootNode = document.querySelector(this.options.rootNode);\n    rootNode.appendChild(container);\n  }\n  appendSVG() {\n    this.svg = d3.select(`#${this.containerId}`)\n      .append('svg')\n      .attr('width', this.options.width)\n      .attr('height', this.options.height)\n      .style('background-color', this.options.backgroundColor);\n  }\n  mapTypesToColors(types) {\n    const colorScale = d3.scaleOrdinal(d3.schemeSet1);\n\n    const colorMap = types.reduce((map, type) => {\n      map[type] = colorScale(type);\n\n      return map;\n    }, {});\n    colorMap[defaultType] = colorScale(defaultType);\n\n    return colorMap;\n  }\n  getFillColor(data) {\n    return !!data && data.type && this.typeColorMap.hasOwnProperty(data.type) ?\n      this.typeColorMap[data.type] : this.options.circleFill;\n  }\n  mapDataToCircle(data) {\n    const fillColor = this.getFillColor(data);\n\n    return new Circle(\n      this.xScale(data.x),\n      this.yScale(data.y),\n      this.options.circleRadius,\n      fillColor,\n      this.options.circleStroke,\n      data.type);\n  }\n  onClickSvg(callbacks) {\n    document.querySelector(`#${this.containerId} svg`).addEventListener('click', (e) => {\n      this.clickCallback(e, callbacks);\n    });\n  }\n  clickCallback(e, callbacks) {\n    if (!!e.target && this.clickable) {\n      const newCircle = this.mapDataToCircle({x: this.xScale.invert(e.offsetX), y: this.yScale.invert(e.offsetY)});\n      callbacks.forEach(callback => {\n        callback.call(this, newCircle);\n      });\n    }\n  }\n  onChangeInput(inputId, inputType, callbacks) {\n    document.querySelector(`#${inputId}`).addEventListener('change', (e) => {\n      this.inputChangeCallback(e, inputType, callbacks);\n    });\n  }\n  inputChangeCallback(e, inputType, callbacks) {\n    if (e.target) {\n      const value = inputType === 'checkbox' ? e.target.checked : e.target.value;\n      callbacks.forEach(callback => {\n        callback.call(this, value);\n      });\n    }\n  }\n  createElement(elementName, attributes = []) {\n    const el = document.createElement(elementName);\n    attributes.forEach(attr => {\n      el.setAttribute(attr[0], attr[1]);\n    });\n\n    return el;\n  }\n  createSettingsGroup(childElements) {\n    const settingsGroup = this.createElement('div', [['class', defaultClassSelectors.settingsGroup]]);\n    childElements.forEach(child => {\n      settingsGroup.append(child);\n    });\n\n    return settingsGroup;\n  }\n  createLabeledInput(labelText, labelAttributes, displayedValue, inputAttributes) {\n    const span = this.createElement('span');\n    span.innerHTML = displayedValue;\n\n    const inputLabel = this.createElement('label', labelAttributes);\n    inputLabel.textContent = labelText;\n\n    const input = this.createElement('input', inputAttributes);\n    inputLabel.appendChild(span);\n\n    return {label: inputLabel, input};\n  }\n  addCircle(circle) {\n    this.data.push(circle);\n  }\n  draw() {\n    Painter.drawCircles(this.svg, this.data);\n  }\n}\n","export default class Painter {\n  static drawLines(svg, lines) {\n    svg.selectAll('line').data(lines)\n      .enter().append('line')\n      .style('stroke', function (d) { return d.stroke; })\n      .attr('stroke-width', function (d) { return d.strokeWidth; })\n      .attr('x1', function (d) { return d.x1; })\n      .attr('y1', function (d) { return d.y1; })\n      .attr('x2', function (d) { return d.x2; })\n      .attr('y2', function (d) { return d.y2; })\n      .attr('class', function (d) { return d.cssClass; });\n  }\n  static transitionLine(svg, line, transitionDuration) {\n    svg.select('line')\n      .transition()\n      .duration(transitionDuration)\n      .attr('x1', line.x1)\n      .attr('y1', line.y1)\n      .attr('x2', line.x2)\n      .attr('y2', line.y2);\n  }\n  static transitionLines(svg, lines, transitionDuration) {\n    svg.selectAll('line')\n      .data(lines)\n      .transition()\n      .duration(transitionDuration)\n      .attr('x1', function (d) { return d.x1; })\n      .attr('y1', function (d) { return d.y1; })\n      .attr('x2', function (d) { return d.x2; })\n      .attr('y2', function (d) { return d.y2; });\n  }\n  static drawCircles(svg, circles) {\n    svg.selectAll('circle')\n      .data(circles)\n      .enter().append('circle')\n      .style('stroke', function (d) { return d.stroke; })\n      .style('fill', function (d) { return d.fill; })\n      .attr('r', function (d) { return d.radius; })\n      .attr('cx', function (d) { return d.cx; })\n      .attr('cy', function (d) { return d.cy; })\n      .attr('class', function (d) { return d.cssClass; });\n  }\n}\n","import { defaultType, defaultOptions } from './defaults';\n\nexport default class Circle {\n  constructor(cx,\n              cy,\n              radius = defaultOptions.circleRadius,\n              fill = defaultOptions.circleFill,\n              stroke = defaultOptions.circleStroke,\n              type = defaultType\n  ) {\n    this.cx = cx;\n    this.cy = cy;\n    this.radius = radius;\n    this.fill = fill;\n    this.stroke = stroke;\n    this.type = type;\n    this.distance = null;\n    this.cssClass = '';\n  }\n  setType(type) {\n    this.type = type;\n  }\n  setDistance(distance) {\n    this.distance = distance;\n  }\n  setCssClass(value) {\n    this.cssClass = value;\n  }\n}\n","import Visualization from './visualization/visualization';\nimport KNNVisualization from './visualization/knn-visualization';\nimport LinearRegressionVisualization from './visualization/linear-regression-visualization';\n\nexport {\n  Visualization,\n  KNNVisualization,\n  LinearRegressionVisualization\n};\n","import {defaultOptions} from '../visualization/defaults';\n\nexport default class Validator {\n  static isValidOptions(options) {\n    let result = false;\n    if (!!options &&\n      typeof options === 'object' &&\n      !Array.isArray(options) &&\n      Object.keys(options).every(val => Object.keys(defaultOptions).includes(val))\n    ) {\n      result = true;\n    }\n\n    return result;\n  }\n  static isValidData(data, types) {\n    let result = false;\n    if (!!data && Array.isArray(data) && data.length > 0) {\n      result = data.every(d => {\n        if (!d) {\n          return false;\n        }\n        let keys = ['x', 'y'];\n        let hasType = false;\n        if (!!types && Array.isArray(types) && types.length > 0) {\n          keys.push('type');\n          hasType = true;\n        }\n        const validTypes = hasType ? Object.keys(d).includes('type') : !Object.keys(d).includes('type');\n        const validKeys = keys.every(key => Object.keys(d).includes(key));\n        const validValues = keys.every(key => {\n          let res;\n          const val = d[key];\n          if (key === 'x' || key === 'y') {\n            res = val !== undefined && val !== null && typeof val === 'number' && val !== Infinity && val !== -Infinity;\n          } else if (key === 'type') {\n            res = !!val && types.includes(val);\n          }\n\n          return res;\n        });\n\n        return validKeys && validValues && validTypes;\n      });\n    }\n\n    return result;\n  }\n  static isValidTypes(types) {\n    let result = false;\n    if (!!types && Array.isArray(types) && types.every(t => typeof t === 'number' || typeof t === 'string')) {\n      result = true;\n    }\n\n    return result;\n  }\n  static isValidK(k) {\n    let result = false;\n    if (!!k && Number.isInteger(k) && k > 0) {\n      result = true;\n    }\n\n    return result;\n  }\n}\n","import Circle from './circle';\nimport {defaultK, defaultType, defaultClassSelectors} from './defaults';\nimport Visualization from './visualization';\nimport KNN from '../algorithms/knn';\nimport Painter from './painter';\n\nconst selectors = {\n  id: {\n    rangeK: 'range-k',\n    rangeKLabel: 'range-k-label',\n    weightedCheckbox: 'weighted',\n    weightedLabel: 'weighted-label'\n  }\n};\n\nexport default class KNNVisualization extends Visualization {\n  constructor(data, options, types, k = defaultK) {\n    super(data, options, types);\n    this.knn = new KNN(this.data, types, k);\n\n    this.appendSettings();\n    this.addEventListeners();\n  }\n  appendSettings() {\n    document.querySelector(`#${this.containerId}`).appendChild(this.createSettings());\n  }\n  createSettings() {\n    const settings = this.createElement('div', [['class', defaultClassSelectors.settings]]);\n    settings.appendChild(this.createSettingsGroupForK());\n    settings.appendChild(this.createSettingsGroupForWeighted());\n\n    return settings;\n  }\n  createSettingsGroupForK() {\n    const labelText = 'Amount of neighbors, k: ';\n    const labelAttributes = [\n      ['for', selectors.id.rangeK],\n      ['id', selectors.id.rangeKLabel]\n    ];\n    const inputAttributes = [\n      ['id', selectors.id.rangeK],\n      ['type', 'range'],\n      ['min', '1'],\n      ['max', this.data.length],\n      ['value', this.knn.k]\n    ];\n    const { label, input } = this.createLabeledInput(labelText, labelAttributes, this.knn.k, inputAttributes);\n\n    return this.createSettingsGroup([label, input]);\n  }\n  createSettingsGroupForWeighted() {\n    const labelText = 'Use weighted algorithm: ';\n    const labelAttributes = [\n      ['for', selectors.id.weightedCheckbox],\n      ['id', selectors.id.weightedLabel]\n    ];\n    const inputAttributes = [\n      ['id', selectors.id.weightedCheckbox],\n      ['type', 'checkbox']\n    ];\n    const { label, input } = this.createLabeledInput(labelText, labelAttributes, '', inputAttributes);\n\n    return this.createSettingsGroup([label, input]);\n  }\n  addEventListeners() {\n    this.onClickSvg([this.svgClickCallback]);\n    this.onChangeInput(selectors.id.rangeK, 'range', [this.inputRangeKChangeCallback]);\n    this.onChangeInput(selectors.id.weightedCheckbox, 'checkbox', [this.checkboxWeightedChangeCallback]);\n  }\n  svgClickCallback(circle) {\n    this.clickable = false;\n\n    const classifiedCircle = this.getClassifiedCircle(circle);\n    this.addCircle(classifiedCircle);\n    const boundingCircle = this.getBoundingCircle(classifiedCircle);\n    this.addCircle(boundingCircle);\n\n    this.drawCircles();\n    this.drawConnectingLines(this.mapClosestNeighborsToConnectingLines(classifiedCircle));\n\n    this.data = this.data.filter(c => c !== boundingCircle);\n    this.removeElementsAfterTransition(`.${defaultClassSelectors.remove}`);\n\n    this.updateIndexRangeKMaximum(this.data.length);\n  }\n  updateIndexRangeKMaximum(max) {\n    document.querySelector(`#${selectors.id.rangeK}`).setAttribute('max', max);\n  }\n  inputRangeKChangeCallback(k) {\n    this.k = k;\n    this.knn.k = k;\n    document.querySelector(`#${selectors.id.rangeKLabel} > span`).innerHTML = k;\n  }\n  checkboxWeightedChangeCallback(checked) {\n    this.knn.weighted = checked;\n  }\n  getClassifiedCircle(circle) {\n    const circleType = this.knn.classify(circle, this.data);\n    circle.setType(circleType);\n\n    return circle;\n  }\n  getBoundingCircle(circle) {\n    const furthestNeighbor = this.knn.kClosestNeighbors[this.knn.k - 1];\n    const radius = furthestNeighbor.distance + this.options.circleRadius;\n    const boundingCircle = new Circle(circle.cx, circle.cy, radius, 'transparent', 'white');\n    boundingCircle.setCssClass(defaultClassSelectors.remove);\n\n    return boundingCircle;\n  }\n  mapClosestNeighborsToConnectingLines(circle) {\n    return this.knn.kClosestNeighbors.map(n => {\n      return {\n        x1: n.cx,\n        x2: circle.cx,\n        y1: n.cy,\n        y2: circle.cy,\n        strokeWidth: 2,\n        stroke: 'rgba(230,230,230,0.5)',\n        cssClass: defaultClassSelectors.remove\n      };\n    });\n  }\n  drawConnectingLines(connectingLines) {\n    Painter.drawLines(this.svg, connectingLines);\n  }\n  drawCircles() {\n    Painter.drawCircles(this.svg, this.data);\n    const colorMap = this.typeColorMap;\n    this.svg.selectAll('circle')\n      .transition().duration(1500)\n      .style('fill', function (d) {\n        const typeColor = colorMap[d.type];\n\n        return d.type === defaultType || d.fill === typeColor ? d.fill : typeColor;\n      });\n  }\n  removeElementsAfterTransition(selector) {\n    const that = this;\n    this.svg.selectAll(selector)\n      .transition()\n      .duration(2000)\n      .style('stroke', 'transparent')\n      .style('fill', 'transparent')\n      .on('end', function () {\n        that.removeElements(selector);\n        that.clickable = true;\n      });\n  }\n  removeElements(selector) {\n    this.svg.selectAll(selector).remove();\n  }\n};\n","import MachineLearningAlgorithm from './machine-learning-algorithm';\nimport {defaultK} from '../visualization/defaults';\n\nexport default class KNN extends MachineLearningAlgorithm {\n  constructor(circles, types, k = defaultK, weighted = false) {\n    super(circles);\n    this.k = k;\n    this.types = types;\n    this.kClosestNeighbors = null;\n    this.weighted = weighted;\n  }\n  calculateDistance(a, b) {\n    return Math.sqrt(Math.pow((b.cx - a.cx), 2) + Math.pow((b.cy - a.cy), 2));\n  }\n  compareDistance(a, b) {\n    if (a.distance > b.distance) {\n      return 1;\n    } else if (a.distance < b.distance) {\n      return -1;\n    }\n\n    return 0;\n  }\n  findKClosestNeighbors(newCircle, neighbors) {\n    return neighbors.filter(n => n !== newCircle)\n      .map(n => {\n        n.setDistance(this.calculateDistance(n, newCircle));\n\n        return n;\n      })\n      .sort((a, b) => this.compareDistance(a, b))\n      .filter((n, i) => i < this.k);\n  }\n  getCircleTypeWeighted(kClosestNeighbors) {\n    const typeDistance = this.types.reduce((res, type) => {\n      res[type] = 0;\n\n      return res;\n    }, {max: {type: null, val: 0}});\n    const res = kClosestNeighbors.reduce((res, neighbor) => {\n      const inverseDistance = res[neighbor.type] + 1 / neighbor.distance;\n      if (inverseDistance > res.max.val) {\n        res.max.type = neighbor.type;\n        res.max.val = inverseDistance;\n      }\n      res[neighbor.type] = inverseDistance;\n\n      return res;\n    }, typeDistance);\n\n    return res.max.type;\n  }\n  getCircleTypeUnweighted(kClosestNeighbors) {\n    const counts = {};\n    kClosestNeighbors.map(n => n.type)\n      .forEach(type => {\n        counts[type] = counts[type] ? counts[type] + 1 : 1;\n      });\n\n    return Object.entries(counts).sort((a, b) => a[1] < b[1])[0][0];\n  }\n  determineCircleType(kClosestNeighbors) {\n    return this.weighted ?\n      this.getCircleTypeWeighted(kClosestNeighbors) : this.getCircleTypeUnweighted(kClosestNeighbors);\n  }\n  classify(circle, neighbors) {\n    this.kClosestNeighbors = this.findKClosestNeighbors(circle, neighbors);\n\n    return this.determineCircleType(this.kClosestNeighbors);\n  }\n}\n","export default class MachineLearningAlgorithm {\n  constructor(circles) {\n    this.circles = circles;\n  }\n}\n","import Visualization from './visualization';\nimport LinearRegression from '../algorithms/linear-regression';\nimport Painter from './painter';\n\nexport default class LinearRegressionVisualization extends Visualization {\n  constructor(data, options, types) {\n    super(data, options, types);\n    this.linearRegression = new LinearRegression();\n    this.addEventListeners();\n    this.lines = [];\n  }\n  addEventListeners() {\n    this.onClickSvg([this.svgClickCallback]);\n  }\n  svgClickCallback(circle) {\n    this.addCircle(circle);\n    this.redraw();\n  }\n  redraw() {\n    Painter.drawCircles(this.svg, this.data);\n    this.transitionLines();\n  }\n  transitionLines() {\n    const lines = this.getLinesToDraw();\n    const linesCopy = Array.from(lines);\n    let newLine = linesCopy[linesCopy.length - 1];\n    linesCopy[linesCopy.length - 1] = Object.assign({}, newLine, {y2: newLine.y1});\n    Painter.drawLines(this.svg, linesCopy);\n    Painter.transitionLines(this.svg, lines, 300);\n  }\n  draw() {\n    Painter.drawCircles(this.svg, this.data);\n    Painter.drawLines(this.svg, this.getLinesToDraw());\n  }\n  createLine(x1, y1, x2, y2, stroke, strokeWidth, cssClass) {\n    return {x1, y1, x2, y2, stroke, strokeWidth, cssClass};\n  }\n  getLinesToDraw() {\n    const {slope, intercept} = this.linearRegression.performRegression(this.data);\n    const regressionLine = this.getRegressionLine(slope, intercept);\n    const connectingLines = this.getConnectingLines(slope, intercept);\n\n    return [regressionLine].concat(connectingLines);\n  }\n  getRegressionLine(slope, intercept) {\n    return this.createLine(0, intercept, this.options.width, this.options.width * slope + intercept, 'white', '2', '');\n  }\n  getConnectingLines(slope, intercept) {\n    return this.data.map(d => this.createLine(d.cx, d.cy, d.cx, slope * d.cx + intercept, 'white', '1', ''));\n  }\n}\n","export default class LinearRegression {\n  calculateMean(d) {\n    return d.reduce((sum, val) => sum + val) / d.length;\n  }\n  calculateSlope(circles, meanX, meanY) {\n    const f = circles.reduce((sum, d) => {\n      return {\n        up: sum.up + ((d.cx - meanX) * (d.cy - meanY)),\n        down: sum.down + Math.pow((d.cx - meanX), 2)\n      };\n    }, {up: 0, down: 0});\n\n    return f.up / f.down;\n  }\n  calculateIntercept(slope, meanX, meanY) {\n    if (slope || slope === 0) {\n      return meanY - (slope * meanX);\n    }\n\n    return 0;\n  }\n  performRegression(circles) {\n    const meanX = this.calculateMean(circles.map(d => d.cx));\n    const meanY = this.calculateMean(circles.map(d => d.cy));\n\n    const slope = this.calculateSlope(circles, meanX, meanY);\n    const intercept = this.calculateIntercept(slope, meanX, meanY);\n\n    return {slope, intercept};\n  }\n}\n","export var name = \"d3\";\nexport var version = \"5.5.0\";\nexport var description = \"Data-Driven Documents\";\nexport var keywords = [\"dom\",\"visualization\",\"svg\",\"animation\",\"canvas\"];\nexport var homepage = \"https://d3js.org\";\nexport var license = \"BSD-3-Clause\";\nexport var author = {\"name\":\"Mike Bostock\",\"url\":\"https://bost.ocks.org/mike\"};\nexport var main = \"dist/d3.node.js\";\nexport var unpkg = \"dist/d3.min.js\";\nexport var jsdelivr = \"dist/d3.min.js\";\nexport var module = \"index\";\nexport var repository = {\"type\":\"git\",\"url\":\"https://github.com/d3/d3.git\"};\nexport var scripts = {\"pretest\":\"rimraf dist && mkdir dist && json2module package.json > dist/package.js && node rollup.node\",\"test\":\"tape 'test/**/*-test.js'\",\"prepublishOnly\":\"npm run test && rollup -c --banner \\\"$(preamble)\\\" && uglifyjs -b beautify=false,preamble=\\\"'$(preamble)'\\\" dist/d3.js -c negate_iife=false -m -o dist/d3.min.js\",\"postpublish\":\"git push && git push --tags && cd ../d3.github.com && git pull && cp ../d3/dist/d3.js d3.v5.js && cp ../d3/dist/d3.min.js d3.v5.min.js && git add d3.v5.js d3.v5.min.js && git commit -m \\\"d3 ${npm_package_version}\\\" && git push && cd - && cd ../d3-bower && git pull && cp ../d3/LICENSE ../d3/README.md ../d3/dist/d3.js ../d3/dist/d3.min.js . && git add -- LICENSE README.md d3.js d3.min.js && git commit -m \\\"${npm_package_version}\\\" && git tag -am \\\"${npm_package_version}\\\" v${npm_package_version} && git push && git push --tags && cd - && zip -j dist/d3.zip -- LICENSE README.md API.md CHANGES.md dist/d3.js dist/d3.min.js\"};\nexport var devDependencies = {\"json2module\":\"0.0\",\"package-preamble\":\"0.1\",\"rimraf\":\"2\",\"rollup\":\"0.57\",\"rollup-plugin-ascii\":\"0.0\",\"rollup-plugin-node-resolve\":\"3\",\"tape\":\"4\",\"uglify-js\":\"3.2\"};\nexport var dependencies = {\"d3-array\":\"1\",\"d3-axis\":\"1\",\"d3-brush\":\"1\",\"d3-chord\":\"1\",\"d3-collection\":\"1\",\"d3-color\":\"1\",\"d3-contour\":\"1\",\"d3-dispatch\":\"1\",\"d3-drag\":\"1\",\"d3-dsv\":\"1\",\"d3-ease\":\"1\",\"d3-fetch\":\"1\",\"d3-force\":\"1\",\"d3-format\":\"1\",\"d3-geo\":\"1\",\"d3-hierarchy\":\"1\",\"d3-interpolate\":\"1\",\"d3-path\":\"1\",\"d3-polygon\":\"1\",\"d3-quadtree\":\"1\",\"d3-random\":\"1\",\"d3-scale\":\"2\",\"d3-scale-chromatic\":\"1\",\"d3-selection\":\"1\",\"d3-shape\":\"1\",\"d3-time\":\"1\",\"d3-time-format\":\"2\",\"d3-timer\":\"1\",\"d3-transition\":\"1\",\"d3-voronoi\":\"1\",\"d3-zoom\":\"1\"};\n","export default function(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n","import ascending from \"./ascending\";\n\nexport default function(compare) {\n  if (compare.length === 1) compare = ascendingComparator(compare);\n  return {\n    left: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) < 0) lo = mid + 1;\n        else hi = mid;\n      }\n      return lo;\n    },\n    right: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) > 0) hi = mid;\n        else lo = mid + 1;\n      }\n      return lo;\n    }\n  };\n}\n\nfunction ascendingComparator(f) {\n  return function(d, x) {\n    return ascending(f(d), x);\n  };\n}\n","import ascending from \"./ascending\";\nimport bisector from \"./bisector\";\n\nvar ascendingBisect = bisector(ascending);\nexport var bisectRight = ascendingBisect.right;\nexport var bisectLeft = ascendingBisect.left;\nexport default bisectRight;\n","export default function(array, f) {\n  if (f == null) f = pair;\n  var i = 0, n = array.length - 1, p = array[0], pairs = new Array(n < 0 ? 0 : n);\n  while (i < n) pairs[i] = f(p, p = array[++i]);\n  return pairs;\n}\n\nexport function pair(a, b) {\n  return [a, b];\n}\n","import {pair} from \"./pairs\";\n\nexport default function(values0, values1, reduce) {\n  var n0 = values0.length,\n      n1 = values1.length,\n      values = new Array(n0 * n1),\n      i0,\n      i1,\n      i,\n      value0;\n\n  if (reduce == null) reduce = pair;\n\n  for (i0 = i = 0; i0 < n0; ++i0) {\n    for (value0 = values0[i0], i1 = 0; i1 < n1; ++i1, ++i) {\n      values[i] = reduce(value0, values1[i1]);\n    }\n  }\n\n  return values;\n}\n","export default function(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n}\n","export default function(x) {\n  return x === null ? NaN : +x;\n}\n","import number from \"./number\";\n\nexport default function(values, valueof) {\n  var n = values.length,\n      m = 0,\n      i = -1,\n      mean = 0,\n      value,\n      delta,\n      sum = 0;\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (!isNaN(value = number(values[i]))) {\n        delta = value - mean;\n        mean += delta / ++m;\n        sum += delta * (value - mean);\n      }\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(value = number(valueof(values[i], i, values)))) {\n        delta = value - mean;\n        mean += delta / ++m;\n        sum += delta * (value - mean);\n      }\n    }\n  }\n\n  if (m > 1) return sum / (m - 1);\n}\n","import variance from \"./variance\";\n\nexport default function(array, f) {\n  var v = variance(array, f);\n  return v ? Math.sqrt(v) : v;\n}\n","export default function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      min,\n      max;\n\n  if (valueof == null) {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        min = max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = values[i]) != null) {\n            if (min > value) min = value;\n            if (max < value) max = value;\n          }\n        }\n      }\n    }\n  }\n\n  else {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        min = max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null) {\n            if (min > value) min = value;\n            if (max < value) max = value;\n          }\n        }\n      }\n    }\n  }\n\n  return [min, max];\n}\n","var array = Array.prototype;\n\nexport var slice = array.slice;\nexport var map = array.map;\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function(x) {\n  return x;\n}\n","export default function(start, stop, step) {\n  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\n  var i = -1,\n      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n      range = new Array(n);\n\n  while (++i < n) {\n    range[i] = start + i * step;\n  }\n\n  return range;\n}\n","var e10 = Math.sqrt(50),\n    e5 = Math.sqrt(10),\n    e2 = Math.sqrt(2);\n\nexport default function(start, stop, count) {\n  var reverse,\n      i = -1,\n      n,\n      ticks,\n      step;\n\n  stop = +stop, start = +start, count = +count;\n  if (start === stop && count > 0) return [start];\n  if (reverse = stop < start) n = start, start = stop, stop = n;\n  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];\n\n  if (step > 0) {\n    start = Math.ceil(start / step);\n    stop = Math.floor(stop / step);\n    ticks = new Array(n = Math.ceil(stop - start + 1));\n    while (++i < n) ticks[i] = (start + i) * step;\n  } else {\n    start = Math.floor(start * step);\n    stop = Math.ceil(stop * step);\n    ticks = new Array(n = Math.ceil(start - stop + 1));\n    while (++i < n) ticks[i] = (start - i) / step;\n  }\n\n  if (reverse) ticks.reverse();\n\n  return ticks;\n}\n\nexport function tickIncrement(start, stop, count) {\n  var step = (stop - start) / Math.max(0, count),\n      power = Math.floor(Math.log(step) / Math.LN10),\n      error = step / Math.pow(10, power);\n  return power >= 0\n      ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power)\n      : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);\n}\n\nexport function tickStep(start, stop, count) {\n  var step0 = Math.abs(stop - start) / Math.max(0, count),\n      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n      error = step0 / step1;\n  if (error >= e10) step1 *= 10;\n  else if (error >= e5) step1 *= 5;\n  else if (error >= e2) step1 *= 2;\n  return stop < start ? -step1 : step1;\n}\n","export default function(values) {\n  return Math.ceil(Math.log(values.length) / Math.LN2) + 1;\n}\n","import {slice} from \"./array\";\nimport bisect from \"./bisect\";\nimport constant from \"./constant\";\nimport extent from \"./extent\";\nimport identity from \"./identity\";\nimport range from \"./range\";\nimport {tickStep} from \"./ticks\";\nimport sturges from \"./threshold/sturges\";\n\nexport default function() {\n  var value = identity,\n      domain = extent,\n      threshold = sturges;\n\n  function histogram(data) {\n    var i,\n        n = data.length,\n        x,\n        values = new Array(n);\n\n    for (i = 0; i < n; ++i) {\n      values[i] = value(data[i], i, data);\n    }\n\n    var xz = domain(values),\n        x0 = xz[0],\n        x1 = xz[1],\n        tz = threshold(values, x0, x1);\n\n    // Convert number of thresholds into uniform thresholds.\n    if (!Array.isArray(tz)) {\n      tz = tickStep(x0, x1, tz);\n      tz = range(Math.ceil(x0 / tz) * tz, Math.floor(x1 / tz) * tz, tz); // exclusive\n    }\n\n    // Remove any thresholds outside the domain.\n    var m = tz.length;\n    while (tz[0] <= x0) tz.shift(), --m;\n    while (tz[m - 1] > x1) tz.pop(), --m;\n\n    var bins = new Array(m + 1),\n        bin;\n\n    // Initialize bins.\n    for (i = 0; i <= m; ++i) {\n      bin = bins[i] = [];\n      bin.x0 = i > 0 ? tz[i - 1] : x0;\n      bin.x1 = i < m ? tz[i] : x1;\n    }\n\n    // Assign data to bins by value, ignoring any outside the domain.\n    for (i = 0; i < n; ++i) {\n      x = values[i];\n      if (x0 <= x && x <= x1) {\n        bins[bisect(tz, x, 0, m)].push(data[i]);\n      }\n    }\n\n    return bins;\n  }\n\n  histogram.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(_), histogram) : value;\n  };\n\n  histogram.domain = function(_) {\n    return arguments.length ? (domain = typeof _ === \"function\" ? _ : constant([_[0], _[1]]), histogram) : domain;\n  };\n\n  histogram.thresholds = function(_) {\n    return arguments.length ? (threshold = typeof _ === \"function\" ? _ : Array.isArray(_) ? constant(slice.call(_)) : constant(_), histogram) : threshold;\n  };\n\n  return histogram;\n}\n","import number from \"./number\";\n\nexport default function(values, p, valueof) {\n  if (valueof == null) valueof = number;\n  if (!(n = values.length)) return;\n  if ((p = +p) <= 0 || n < 2) return +valueof(values[0], 0, values);\n  if (p >= 1) return +valueof(values[n - 1], n - 1, values);\n  var n,\n      i = (n - 1) * p,\n      i0 = Math.floor(i),\n      value0 = +valueof(values[i0], i0, values),\n      value1 = +valueof(values[i0 + 1], i0 + 1, values);\n  return value0 + (value1 - value0) * (i - i0);\n}\n","import {map} from \"../array\";\nimport ascending from \"../ascending\";\nimport number from \"../number\";\nimport quantile from \"../quantile\";\n\nexport default function(values, min, max) {\n  values = map.call(values, number).sort(ascending);\n  return Math.ceil((max - min) / (2 * (quantile(values, 0.75) - quantile(values, 0.25)) * Math.pow(values.length, -1 / 3)));\n}\n","import deviation from \"../deviation\";\n\nexport default function(values, min, max) {\n  return Math.ceil((max - min) / (3.5 * deviation(values) * Math.pow(values.length, -1 / 3)));\n}\n","export default function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      max;\n\n  if (valueof == null) {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = values[i]) != null && value > max) {\n            max = value;\n          }\n        }\n      }\n    }\n  }\n\n  else {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null && value > max) {\n            max = value;\n          }\n        }\n      }\n    }\n  }\n\n  return max;\n}\n","import number from \"./number\";\n\nexport default function(values, valueof) {\n  var n = values.length,\n      m = n,\n      i = -1,\n      value,\n      sum = 0;\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (!isNaN(value = number(values[i]))) sum += value;\n      else --m;\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(value = number(valueof(values[i], i, values)))) sum += value;\n      else --m;\n    }\n  }\n\n  if (m) return sum / m;\n}\n","import ascending from \"./ascending\";\nimport number from \"./number\";\nimport quantile from \"./quantile\";\n\nexport default function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      numbers = [];\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (!isNaN(value = number(values[i]))) {\n        numbers.push(value);\n      }\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(value = number(valueof(values[i], i, values)))) {\n        numbers.push(value);\n      }\n    }\n  }\n\n  return quantile(numbers.sort(ascending), 0.5);\n}\n","export default function(arrays) {\n  var n = arrays.length,\n      m,\n      i = -1,\n      j = 0,\n      merged,\n      array;\n\n  while (++i < n) j += arrays[i].length;\n  merged = new Array(j);\n\n  while (--n >= 0) {\n    array = arrays[n];\n    m = array.length;\n    while (--m >= 0) {\n      merged[--j] = array[m];\n    }\n  }\n\n  return merged;\n}\n","export default function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      min;\n\n  if (valueof == null) {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        min = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = values[i]) != null && min > value) {\n            min = value;\n          }\n        }\n      }\n    }\n  }\n\n  else {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        min = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null && min > value) {\n            min = value;\n          }\n        }\n      }\n    }\n  }\n\n  return min;\n}\n","export default function(array, indexes) {\n  var i = indexes.length, permutes = new Array(i);\n  while (i--) permutes[i] = array[indexes[i]];\n  return permutes;\n}\n","import ascending from \"./ascending\";\n\nexport default function(values, compare) {\n  if (!(n = values.length)) return;\n  var n,\n      i = 0,\n      j = 0,\n      xi,\n      xj = values[j];\n\n  if (compare == null) compare = ascending;\n\n  while (++i < n) {\n    if (compare(xi = values[i], xj) < 0 || compare(xj, xj) !== 0) {\n      xj = xi, j = i;\n    }\n  }\n\n  if (compare(xj, xj) === 0) return j;\n}\n","export default function(array, i0, i1) {\n  var m = (i1 == null ? array.length : i1) - (i0 = i0 == null ? 0 : +i0),\n      t,\n      i;\n\n  while (m) {\n    i = Math.random() * m-- | 0;\n    t = array[m + i0];\n    array[m + i0] = array[i + i0];\n    array[i + i0] = t;\n  }\n\n  return array;\n}\n","export default function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      sum = 0;\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (value = +values[i]) sum += value; // Note: zero and null are equivalent.\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (value = +valueof(values[i], i, values)) sum += value;\n    }\n  }\n\n  return sum;\n}\n","import min from \"./min\";\n\nexport default function(matrix) {\n  if (!(n = matrix.length)) return [];\n  for (var i = -1, m = min(matrix, length), transpose = new Array(m); ++i < m;) {\n    for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n;) {\n      row[j] = matrix[j][i];\n    }\n  }\n  return transpose;\n}\n\nfunction length(d) {\n  return d.length;\n}\n","import transpose from \"./transpose\";\n\nexport default function() {\n  return transpose(arguments);\n}\n","export var slice = Array.prototype.slice;\n","export default function(x) {\n  return x;\n}\n","import {slice} from \"./array\";\nimport identity from \"./identity\";\n\nvar top = 1,\n    right = 2,\n    bottom = 3,\n    left = 4,\n    epsilon = 1e-6;\n\nfunction translateX(x) {\n  return \"translate(\" + (x + 0.5) + \",0)\";\n}\n\nfunction translateY(y) {\n  return \"translate(0,\" + (y + 0.5) + \")\";\n}\n\nfunction number(scale) {\n  return function(d) {\n    return +scale(d);\n  };\n}\n\nfunction center(scale) {\n  var offset = Math.max(0, scale.bandwidth() - 1) / 2; // Adjust for 0.5px offset.\n  if (scale.round()) offset = Math.round(offset);\n  return function(d) {\n    return +scale(d) + offset;\n  };\n}\n\nfunction entering() {\n  return !this.__axis;\n}\n\nfunction axis(orient, scale) {\n  var tickArguments = [],\n      tickValues = null,\n      tickFormat = null,\n      tickSizeInner = 6,\n      tickSizeOuter = 6,\n      tickPadding = 3,\n      k = orient === top || orient === left ? -1 : 1,\n      x = orient === left || orient === right ? \"x\" : \"y\",\n      transform = orient === top || orient === bottom ? translateX : translateY;\n\n  function axis(context) {\n    var values = tickValues == null ? (scale.ticks ? scale.ticks.apply(scale, tickArguments) : scale.domain()) : tickValues,\n        format = tickFormat == null ? (scale.tickFormat ? scale.tickFormat.apply(scale, tickArguments) : identity) : tickFormat,\n        spacing = Math.max(tickSizeInner, 0) + tickPadding,\n        range = scale.range(),\n        range0 = +range[0] + 0.5,\n        range1 = +range[range.length - 1] + 0.5,\n        position = (scale.bandwidth ? center : number)(scale.copy()),\n        selection = context.selection ? context.selection() : context,\n        path = selection.selectAll(\".domain\").data([null]),\n        tick = selection.selectAll(\".tick\").data(values, scale).order(),\n        tickExit = tick.exit(),\n        tickEnter = tick.enter().append(\"g\").attr(\"class\", \"tick\"),\n        line = tick.select(\"line\"),\n        text = tick.select(\"text\");\n\n    path = path.merge(path.enter().insert(\"path\", \".tick\")\n        .attr(\"class\", \"domain\")\n        .attr(\"stroke\", \"#000\"));\n\n    tick = tick.merge(tickEnter);\n\n    line = line.merge(tickEnter.append(\"line\")\n        .attr(\"stroke\", \"#000\")\n        .attr(x + \"2\", k * tickSizeInner));\n\n    text = text.merge(tickEnter.append(\"text\")\n        .attr(\"fill\", \"#000\")\n        .attr(x, k * spacing)\n        .attr(\"dy\", orient === top ? \"0em\" : orient === bottom ? \"0.71em\" : \"0.32em\"));\n\n    if (context !== selection) {\n      path = path.transition(context);\n      tick = tick.transition(context);\n      line = line.transition(context);\n      text = text.transition(context);\n\n      tickExit = tickExit.transition(context)\n          .attr(\"opacity\", epsilon)\n          .attr(\"transform\", function(d) { return isFinite(d = position(d)) ? transform(d) : this.getAttribute(\"transform\"); });\n\n      tickEnter\n          .attr(\"opacity\", epsilon)\n          .attr(\"transform\", function(d) { var p = this.parentNode.__axis; return transform(p && isFinite(p = p(d)) ? p : position(d)); });\n    }\n\n    tickExit.remove();\n\n    path\n        .attr(\"d\", orient === left || orient == right\n            ? \"M\" + k * tickSizeOuter + \",\" + range0 + \"H0.5V\" + range1 + \"H\" + k * tickSizeOuter\n            : \"M\" + range0 + \",\" + k * tickSizeOuter + \"V0.5H\" + range1 + \"V\" + k * tickSizeOuter);\n\n    tick\n        .attr(\"opacity\", 1)\n        .attr(\"transform\", function(d) { return transform(position(d)); });\n\n    line\n        .attr(x + \"2\", k * tickSizeInner);\n\n    text\n        .attr(x, k * spacing)\n        .text(format);\n\n    selection.filter(entering)\n        .attr(\"fill\", \"none\")\n        .attr(\"font-size\", 10)\n        .attr(\"font-family\", \"sans-serif\")\n        .attr(\"text-anchor\", orient === right ? \"start\" : orient === left ? \"end\" : \"middle\");\n\n    selection\n        .each(function() { this.__axis = position; });\n  }\n\n  axis.scale = function(_) {\n    return arguments.length ? (scale = _, axis) : scale;\n  };\n\n  axis.ticks = function() {\n    return tickArguments = slice.call(arguments), axis;\n  };\n\n  axis.tickArguments = function(_) {\n    return arguments.length ? (tickArguments = _ == null ? [] : slice.call(_), axis) : tickArguments.slice();\n  };\n\n  axis.tickValues = function(_) {\n    return arguments.length ? (tickValues = _ == null ? null : slice.call(_), axis) : tickValues && tickValues.slice();\n  };\n\n  axis.tickFormat = function(_) {\n    return arguments.length ? (tickFormat = _, axis) : tickFormat;\n  };\n\n  axis.tickSize = function(_) {\n    return arguments.length ? (tickSizeInner = tickSizeOuter = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeInner = function(_) {\n    return arguments.length ? (tickSizeInner = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeOuter = function(_) {\n    return arguments.length ? (tickSizeOuter = +_, axis) : tickSizeOuter;\n  };\n\n  axis.tickPadding = function(_) {\n    return arguments.length ? (tickPadding = +_, axis) : tickPadding;\n  };\n\n  return axis;\n}\n\nexport function axisTop(scale) {\n  return axis(top, scale);\n}\n\nexport function axisRight(scale) {\n  return axis(right, scale);\n}\n\nexport function axisBottom(scale) {\n  return axis(bottom, scale);\n}\n\nexport function axisLeft(scale) {\n  return axis(left, scale);\n}\n","var noop = {value: function() {}};\n\nfunction dispatch() {\n  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\n    if (!(t = arguments[i] + \"\") || (t in _)) throw new Error(\"illegal type: \" + t);\n    _[t] = [];\n  }\n  return new Dispatch(_);\n}\n\nfunction Dispatch(_) {\n  this._ = _;\n}\n\nfunction parseTypenames(typenames, types) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\n    return {type: t, name: name};\n  });\n}\n\nDispatch.prototype = dispatch.prototype = {\n  constructor: Dispatch,\n  on: function(typename, callback) {\n    var _ = this._,\n        T = parseTypenames(typename + \"\", _),\n        t,\n        i = -1,\n        n = T.length;\n\n    // If no callback was specified, return the callback of the given type and name.\n    if (arguments.length < 2) {\n      while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\n      return;\n    }\n\n    // If a type was specified, set the callback for the given type and name.\n    // Otherwise, if a null callback was specified, remove callbacks of the given name.\n    if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    while (++i < n) {\n      if (t = (typename = T[i]).type) _[t] = set(_[t], typename.name, callback);\n      else if (callback == null) for (t in _) _[t] = set(_[t], typename.name, null);\n    }\n\n    return this;\n  },\n  copy: function() {\n    var copy = {}, _ = this._;\n    for (var t in _) copy[t] = _[t].slice();\n    return new Dispatch(copy);\n  },\n  call: function(type, that) {\n    if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  },\n  apply: function(type, that, args) {\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  }\n};\n\nfunction get(type, name) {\n  for (var i = 0, n = type.length, c; i < n; ++i) {\n    if ((c = type[i]).name === name) {\n      return c.value;\n    }\n  }\n}\n\nfunction set(type, name, callback) {\n  for (var i = 0, n = type.length; i < n; ++i) {\n    if (type[i].name === name) {\n      type[i] = noop, type = type.slice(0, i).concat(type.slice(i + 1));\n      break;\n    }\n  }\n  if (callback != null) type.push({name: name, value: callback});\n  return type;\n}\n\nexport default dispatch;\n","export var xhtml = \"http://www.w3.org/1999/xhtml\";\n\nexport default {\n  svg: \"http://www.w3.org/2000/svg\",\n  xhtml: xhtml,\n  xlink: \"http://www.w3.org/1999/xlink\",\n  xml: \"http://www.w3.org/XML/1998/namespace\",\n  xmlns: \"http://www.w3.org/2000/xmlns/\"\n};\n","import namespaces from \"./namespaces\";\n\nexport default function(name) {\n  var prefix = name += \"\", i = prefix.indexOf(\":\");\n  if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n  return namespaces.hasOwnProperty(prefix) ? {space: namespaces[prefix], local: name} : name;\n}\n","import namespace from \"./namespace\";\nimport {xhtml} from \"./namespaces\";\n\nfunction creatorInherit(name) {\n  return function() {\n    var document = this.ownerDocument,\n        uri = this.namespaceURI;\n    return uri === xhtml && document.documentElement.namespaceURI === xhtml\n        ? document.createElement(name)\n        : document.createElementNS(uri, name);\n  };\n}\n\nfunction creatorFixed(fullname) {\n  return function() {\n    return this.ownerDocument.createElementNS(fullname.space, fullname.local);\n  };\n}\n\nexport default function(name) {\n  var fullname = namespace(name);\n  return (fullname.local\n      ? creatorFixed\n      : creatorInherit)(fullname);\n}\n","function none() {}\n\nexport default function(selector) {\n  return selector == null ? none : function() {\n    return this.querySelector(selector);\n  };\n}\n","function empty() {\n  return [];\n}\n\nexport default function(selector) {\n  return selector == null ? empty : function() {\n    return this.querySelectorAll(selector);\n  };\n}\n","var matcher = function(selector) {\n  return function() {\n    return this.matches(selector);\n  };\n};\n\nif (typeof document !== \"undefined\") {\n  var element = document.documentElement;\n  if (!element.matches) {\n    var vendorMatches = element.webkitMatchesSelector\n        || element.msMatchesSelector\n        || element.mozMatchesSelector\n        || element.oMatchesSelector;\n    matcher = function(selector) {\n      return function() {\n        return vendorMatches.call(this, selector);\n      };\n    };\n  }\n}\n\nexport default matcher;\n","export default function(update) {\n  return new Array(update.length);\n}\n","import sparse from \"./sparse\";\nimport {Selection} from \"./index\";\n\nexport default function() {\n  return new Selection(this._enter || this._groups.map(sparse), this._parents);\n}\n\nexport function EnterNode(parent, datum) {\n  this.ownerDocument = parent.ownerDocument;\n  this.namespaceURI = parent.namespaceURI;\n  this._next = null;\n  this._parent = parent;\n  this.__data__ = datum;\n}\n\nEnterNode.prototype = {\n  constructor: EnterNode,\n  appendChild: function(child) { return this._parent.insertBefore(child, this._next); },\n  insertBefore: function(child, next) { return this._parent.insertBefore(child, next); },\n  querySelector: function(selector) { return this._parent.querySelector(selector); },\n  querySelectorAll: function(selector) { return this._parent.querySelectorAll(selector); }\n};\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","import {Selection} from \"./index\";\nimport {EnterNode} from \"./enter\";\nimport constant from \"../constant\";\n\nvar keyPrefix = \"$\"; // Protect against keys like “__proto__”.\n\nfunction bindIndex(parent, group, enter, update, exit, data) {\n  var i = 0,\n      node,\n      groupLength = group.length,\n      dataLength = data.length;\n\n  // Put any non-null nodes that fit into update.\n  // Put any null nodes into enter.\n  // Put any remaining data into enter.\n  for (; i < dataLength; ++i) {\n    if (node = group[i]) {\n      node.__data__ = data[i];\n      update[i] = node;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Put any non-null nodes that don’t fit into exit.\n  for (; i < groupLength; ++i) {\n    if (node = group[i]) {\n      exit[i] = node;\n    }\n  }\n}\n\nfunction bindKey(parent, group, enter, update, exit, data, key) {\n  var i,\n      node,\n      nodeByKeyValue = {},\n      groupLength = group.length,\n      dataLength = data.length,\n      keyValues = new Array(groupLength),\n      keyValue;\n\n  // Compute the key for each node.\n  // If multiple nodes have the same key, the duplicates are added to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if (node = group[i]) {\n      keyValues[i] = keyValue = keyPrefix + key.call(node, node.__data__, i, group);\n      if (keyValue in nodeByKeyValue) {\n        exit[i] = node;\n      } else {\n        nodeByKeyValue[keyValue] = node;\n      }\n    }\n  }\n\n  // Compute the key for each datum.\n  // If there a node associated with this key, join and add it to update.\n  // If there is not (or the key is a duplicate), add it to enter.\n  for (i = 0; i < dataLength; ++i) {\n    keyValue = keyPrefix + key.call(parent, data[i], i, data);\n    if (node = nodeByKeyValue[keyValue]) {\n      update[i] = node;\n      node.__data__ = data[i];\n      nodeByKeyValue[keyValue] = null;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Add any remaining nodes that were not bound to data to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if ((node = group[i]) && (nodeByKeyValue[keyValues[i]] === node)) {\n      exit[i] = node;\n    }\n  }\n}\n\nexport default function(value, key) {\n  if (!value) {\n    data = new Array(this.size()), j = -1;\n    this.each(function(d) { data[++j] = d; });\n    return data;\n  }\n\n  var bind = key ? bindKey : bindIndex,\n      parents = this._parents,\n      groups = this._groups;\n\n  if (typeof value !== \"function\") value = constant(value);\n\n  for (var m = groups.length, update = new Array(m), enter = new Array(m), exit = new Array(m), j = 0; j < m; ++j) {\n    var parent = parents[j],\n        group = groups[j],\n        groupLength = group.length,\n        data = value.call(parent, parent && parent.__data__, j, parents),\n        dataLength = data.length,\n        enterGroup = enter[j] = new Array(dataLength),\n        updateGroup = update[j] = new Array(dataLength),\n        exitGroup = exit[j] = new Array(groupLength);\n\n    bind(parent, group, enterGroup, updateGroup, exitGroup, data, key);\n\n    // Now connect the enter nodes to their following update node, such that\n    // appendChild can insert the materialized enter node before this node,\n    // rather than at the end of the parent node.\n    for (var i0 = 0, i1 = 0, previous, next; i0 < dataLength; ++i0) {\n      if (previous = enterGroup[i0]) {\n        if (i0 >= i1) i1 = i0 + 1;\n        while (!(next = updateGroup[i1]) && ++i1 < dataLength);\n        previous._next = next || null;\n      }\n    }\n  }\n\n  update = new Selection(update, parents);\n  update._enter = enter;\n  update._exit = exit;\n  return update;\n}\n","import {Selection} from \"./index\";\n\nexport default function(compare) {\n  if (!compare) compare = ascending;\n\n  function compareNode(a, b) {\n    return a && b ? compare(a.__data__, b.__data__) : !a - !b;\n  }\n\n  for (var groups = this._groups, m = groups.length, sortgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, sortgroup = sortgroups[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        sortgroup[i] = node;\n      }\n    }\n    sortgroup.sort(compareNode);\n  }\n\n  return new Selection(sortgroups, this._parents).order();\n}\n\nfunction ascending(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n","import namespace from \"../namespace\";\n\nfunction attrRemove(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, value) {\n  return function() {\n    this.setAttribute(name, value);\n  };\n}\n\nfunction attrConstantNS(fullname, value) {\n  return function() {\n    this.setAttributeNS(fullname.space, fullname.local, value);\n  };\n}\n\nfunction attrFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttribute(name);\n    else this.setAttribute(name, v);\n  };\n}\n\nfunction attrFunctionNS(fullname, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttributeNS(fullname.space, fullname.local);\n    else this.setAttributeNS(fullname.space, fullname.local, v);\n  };\n}\n\nexport default function(name, value) {\n  var fullname = namespace(name);\n\n  if (arguments.length < 2) {\n    var node = this.node();\n    return fullname.local\n        ? node.getAttributeNS(fullname.space, fullname.local)\n        : node.getAttribute(fullname);\n  }\n\n  return this.each((value == null\n      ? (fullname.local ? attrRemoveNS : attrRemove) : (typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS : attrFunction)\n      : (fullname.local ? attrConstantNS : attrConstant)))(fullname, value));\n}\n","export default function(node) {\n  return (node.ownerDocument && node.ownerDocument.defaultView) // node is a Node\n      || (node.document && node) // node is a Window\n      || node.defaultView; // node is a Document\n}\n","import defaultView from \"../window\";\n\nfunction styleRemove(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, value, priority) {\n  return function() {\n    this.style.setProperty(name, value, priority);\n  };\n}\n\nfunction styleFunction(name, value, priority) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.style.removeProperty(name);\n    else this.style.setProperty(name, v, priority);\n  };\n}\n\nexport default function(name, value, priority) {\n  return arguments.length > 1\n      ? this.each((value == null\n            ? styleRemove : typeof value === \"function\"\n            ? styleFunction\n            : styleConstant)(name, value, priority == null ? \"\" : priority))\n      : styleValue(this.node(), name);\n}\n\nexport function styleValue(node, name) {\n  return node.style.getPropertyValue(name)\n      || defaultView(node).getComputedStyle(node, null).getPropertyValue(name);\n}\n","function classArray(string) {\n  return string.trim().split(/^|\\s+/);\n}\n\nfunction classList(node) {\n  return node.classList || new ClassList(node);\n}\n\nfunction ClassList(node) {\n  this._node = node;\n  this._names = classArray(node.getAttribute(\"class\") || \"\");\n}\n\nClassList.prototype = {\n  add: function(name) {\n    var i = this._names.indexOf(name);\n    if (i < 0) {\n      this._names.push(name);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  remove: function(name) {\n    var i = this._names.indexOf(name);\n    if (i >= 0) {\n      this._names.splice(i, 1);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  contains: function(name) {\n    return this._names.indexOf(name) >= 0;\n  }\n};\n\nfunction classedAdd(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.add(names[i]);\n}\n\nfunction classedRemove(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.remove(names[i]);\n}\n\nfunction classedTrue(names) {\n  return function() {\n    classedAdd(this, names);\n  };\n}\n\nfunction classedFalse(names) {\n  return function() {\n    classedRemove(this, names);\n  };\n}\n\nfunction classedFunction(names, value) {\n  return function() {\n    (value.apply(this, arguments) ? classedAdd : classedRemove)(this, names);\n  };\n}\n\nexport default function(name, value) {\n  var names = classArray(name + \"\");\n\n  if (arguments.length < 2) {\n    var list = classList(this.node()), i = -1, n = names.length;\n    while (++i < n) if (!list.contains(names[i])) return false;\n    return true;\n  }\n\n  return this.each((typeof value === \"function\"\n      ? classedFunction : value\n      ? classedTrue\n      : classedFalse)(names, value));\n}\n","function textRemove() {\n  this.textContent = \"\";\n}\n\nfunction textConstant(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.textContent = v == null ? \"\" : v;\n  };\n}\n\nexport default function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? textRemove : (typeof value === \"function\"\n          ? textFunction\n          : textConstant)(value))\n      : this.node().textContent;\n}\n","function htmlRemove() {\n  this.innerHTML = \"\";\n}\n\nfunction htmlConstant(value) {\n  return function() {\n    this.innerHTML = value;\n  };\n}\n\nfunction htmlFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.innerHTML = v == null ? \"\" : v;\n  };\n}\n\nexport default function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? htmlRemove : (typeof value === \"function\"\n          ? htmlFunction\n          : htmlConstant)(value))\n      : this.node().innerHTML;\n}\n","function raise() {\n  if (this.nextSibling) this.parentNode.appendChild(this);\n}\n\nexport default function() {\n  return this.each(raise);\n}\n","function lower() {\n  if (this.previousSibling) this.parentNode.insertBefore(this, this.parentNode.firstChild);\n}\n\nexport default function() {\n  return this.each(lower);\n}\n","import creator from \"../creator\";\nimport selector from \"../selector\";\n\nfunction constantNull() {\n  return null;\n}\n\nexport default function(name, before) {\n  var create = typeof name === \"function\" ? name : creator(name),\n      select = before == null ? constantNull : typeof before === \"function\" ? before : selector(before);\n  return this.select(function() {\n    return this.insertBefore(create.apply(this, arguments), select.apply(this, arguments) || null);\n  });\n}\n","function remove() {\n  var parent = this.parentNode;\n  if (parent) parent.removeChild(this);\n}\n\nexport default function() {\n  return this.each(remove);\n}\n","function selection_cloneShallow() {\n  return this.parentNode.insertBefore(this.cloneNode(false), this.nextSibling);\n}\n\nfunction selection_cloneDeep() {\n  return this.parentNode.insertBefore(this.cloneNode(true), this.nextSibling);\n}\n\nexport default function(deep) {\n  return this.select(deep ? selection_cloneDeep : selection_cloneShallow);\n}\n","var filterEvents = {};\n\nexport var event = null;\n\nif (typeof document !== \"undefined\") {\n  var element = document.documentElement;\n  if (!(\"onmouseenter\" in element)) {\n    filterEvents = {mouseenter: \"mouseover\", mouseleave: \"mouseout\"};\n  }\n}\n\nfunction filterContextListener(listener, index, group) {\n  listener = contextListener(listener, index, group);\n  return function(event) {\n    var related = event.relatedTarget;\n    if (!related || (related !== this && !(related.compareDocumentPosition(this) & 8))) {\n      listener.call(this, event);\n    }\n  };\n}\n\nfunction contextListener(listener, index, group) {\n  return function(event1) {\n    var event0 = event; // Events can be reentrant (e.g., focus).\n    event = event1;\n    try {\n      listener.call(this, this.__data__, index, group);\n    } finally {\n      event = event0;\n    }\n  };\n}\n\nfunction parseTypenames(typenames) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    return {type: t, name: name};\n  });\n}\n\nfunction onRemove(typename) {\n  return function() {\n    var on = this.__on;\n    if (!on) return;\n    for (var j = 0, i = -1, m = on.length, o; j < m; ++j) {\n      if (o = on[j], (!typename.type || o.type === typename.type) && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n      } else {\n        on[++i] = o;\n      }\n    }\n    if (++i) on.length = i;\n    else delete this.__on;\n  };\n}\n\nfunction onAdd(typename, value, capture) {\n  var wrap = filterEvents.hasOwnProperty(typename.type) ? filterContextListener : contextListener;\n  return function(d, i, group) {\n    var on = this.__on, o, listener = wrap(value, i, group);\n    if (on) for (var j = 0, m = on.length; j < m; ++j) {\n      if ((o = on[j]).type === typename.type && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n        this.addEventListener(o.type, o.listener = listener, o.capture = capture);\n        o.value = value;\n        return;\n      }\n    }\n    this.addEventListener(typename.type, listener, capture);\n    o = {type: typename.type, name: typename.name, value: value, listener: listener, capture: capture};\n    if (!on) this.__on = [o];\n    else on.push(o);\n  };\n}\n\nexport default function(typename, value, capture) {\n  var typenames = parseTypenames(typename + \"\"), i, n = typenames.length, t;\n\n  if (arguments.length < 2) {\n    var on = this.node().__on;\n    if (on) for (var j = 0, m = on.length, o; j < m; ++j) {\n      for (i = 0, o = on[j]; i < n; ++i) {\n        if ((t = typenames[i]).type === o.type && t.name === o.name) {\n          return o.value;\n        }\n      }\n    }\n    return;\n  }\n\n  on = value ? onAdd : onRemove;\n  if (capture == null) capture = false;\n  for (i = 0; i < n; ++i) this.each(on(typenames[i], value, capture));\n  return this;\n}\n\nexport function customEvent(event1, listener, that, args) {\n  var event0 = event;\n  event1.sourceEvent = event;\n  event = event1;\n  try {\n    return listener.apply(that, args);\n  } finally {\n    event = event0;\n  }\n}\n","import defaultView from \"../window\";\n\nfunction dispatchEvent(node, type, params) {\n  var window = defaultView(node),\n      event = window.CustomEvent;\n\n  if (typeof event === \"function\") {\n    event = new event(type, params);\n  } else {\n    event = window.document.createEvent(\"Event\");\n    if (params) event.initEvent(type, params.bubbles, params.cancelable), event.detail = params.detail;\n    else event.initEvent(type, false, false);\n  }\n\n  node.dispatchEvent(event);\n}\n\nfunction dispatchConstant(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params);\n  };\n}\n\nfunction dispatchFunction(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params.apply(this, arguments));\n  };\n}\n\nexport default function(type, params) {\n  return this.each((typeof params === \"function\"\n      ? dispatchFunction\n      : dispatchConstant)(type, params));\n}\n","import selection_select from \"./select\";\nimport selection_selectAll from \"./selectAll\";\nimport selection_filter from \"./filter\";\nimport selection_data from \"./data\";\nimport selection_enter from \"./enter\";\nimport selection_exit from \"./exit\";\nimport selection_merge from \"./merge\";\nimport selection_order from \"./order\";\nimport selection_sort from \"./sort\";\nimport selection_call from \"./call\";\nimport selection_nodes from \"./nodes\";\nimport selection_node from \"./node\";\nimport selection_size from \"./size\";\nimport selection_empty from \"./empty\";\nimport selection_each from \"./each\";\nimport selection_attr from \"./attr\";\nimport selection_style from \"./style\";\nimport selection_property from \"./property\";\nimport selection_classed from \"./classed\";\nimport selection_text from \"./text\";\nimport selection_html from \"./html\";\nimport selection_raise from \"./raise\";\nimport selection_lower from \"./lower\";\nimport selection_append from \"./append\";\nimport selection_insert from \"./insert\";\nimport selection_remove from \"./remove\";\nimport selection_clone from \"./clone\";\nimport selection_datum from \"./datum\";\nimport selection_on from \"./on\";\nimport selection_dispatch from \"./dispatch\";\n\nexport var root = [null];\n\nexport function Selection(groups, parents) {\n  this._groups = groups;\n  this._parents = parents;\n}\n\nfunction selection() {\n  return new Selection([[document.documentElement]], root);\n}\n\nSelection.prototype = selection.prototype = {\n  constructor: Selection,\n  select: selection_select,\n  selectAll: selection_selectAll,\n  filter: selection_filter,\n  data: selection_data,\n  enter: selection_enter,\n  exit: selection_exit,\n  merge: selection_merge,\n  order: selection_order,\n  sort: selection_sort,\n  call: selection_call,\n  nodes: selection_nodes,\n  node: selection_node,\n  size: selection_size,\n  empty: selection_empty,\n  each: selection_each,\n  attr: selection_attr,\n  style: selection_style,\n  property: selection_property,\n  classed: selection_classed,\n  text: selection_text,\n  html: selection_html,\n  raise: selection_raise,\n  lower: selection_lower,\n  append: selection_append,\n  insert: selection_insert,\n  remove: selection_remove,\n  clone: selection_clone,\n  datum: selection_datum,\n  on: selection_on,\n  dispatch: selection_dispatch\n};\n\nexport default selection;\n","import {Selection} from \"./index\";\nimport selector from \"../selector\";\n\nexport default function(select) {\n  if (typeof select !== \"function\") select = selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n}\n","import {Selection} from \"./index\";\nimport selectorAll from \"../selectorAll\";\n\nexport default function(select) {\n  if (typeof select !== \"function\") select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        subgroups.push(select.call(node, node.__data__, i, group));\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, parents);\n}\n","import {Selection} from \"./index\";\nimport matcher from \"../matcher\";\n\nexport default function(match) {\n  if (typeof match !== \"function\") match = matcher(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n}\n","import sparse from \"./sparse\";\nimport {Selection} from \"./index\";\n\nexport default function() {\n  return new Selection(this._exit || this._groups.map(sparse), this._parents);\n}\n","import {Selection} from \"./index\";\n\nexport default function(selection) {\n\n  for (var groups0 = this._groups, groups1 = selection._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Selection(merges, this._parents);\n}\n","export default function() {\n\n  for (var groups = this._groups, j = -1, m = groups.length; ++j < m;) {\n    for (var group = groups[j], i = group.length - 1, next = group[i], node; --i >= 0;) {\n      if (node = group[i]) {\n        if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n        next = node;\n      }\n    }\n  }\n\n  return this;\n}\n","export default function() {\n  var callback = arguments[0];\n  arguments[0] = this;\n  callback.apply(null, arguments);\n  return this;\n}\n","export default function() {\n  var nodes = new Array(this.size()), i = -1;\n  this.each(function() { nodes[++i] = this; });\n  return nodes;\n}\n","export default function() {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length; i < n; ++i) {\n      var node = group[i];\n      if (node) return node;\n    }\n  }\n\n  return null;\n}\n","export default function() {\n  var size = 0;\n  this.each(function() { ++size; });\n  return size;\n}\n","export default function() {\n  return !this.node();\n}\n","export default function(callback) {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {\n      if (node = group[i]) callback.call(node, node.__data__, i, group);\n    }\n  }\n\n  return this;\n}\n","function propertyRemove(name) {\n  return function() {\n    delete this[name];\n  };\n}\n\nfunction propertyConstant(name, value) {\n  return function() {\n    this[name] = value;\n  };\n}\n\nfunction propertyFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) delete this[name];\n    else this[name] = v;\n  };\n}\n\nexport default function(name, value) {\n  return arguments.length > 1\n      ? this.each((value == null\n          ? propertyRemove : typeof value === \"function\"\n          ? propertyFunction\n          : propertyConstant)(name, value))\n      : this.node()[name];\n}\n","import creator from \"../creator\";\n\nexport default function(name) {\n  var create = typeof name === \"function\" ? name : creator(name);\n  return this.select(function() {\n    return this.appendChild(create.apply(this, arguments));\n  });\n}\n","export default function(value) {\n  return arguments.length\n      ? this.property(\"__data__\", value)\n      : this.node().__data__;\n}\n","import {Selection, root} from \"./selection/index\";\n\nexport default function(selector) {\n  return typeof selector === \"string\"\n      ? new Selection([[document.querySelector(selector)]], [document.documentElement])\n      : new Selection([[selector]], root);\n}\n","import creator from \"./creator\";\nimport select from \"./select\";\n\nexport default function(name) {\n  return select(creator(name).call(document.documentElement));\n}\n","var nextId = 0;\n\nexport default function local() {\n  return new Local;\n}\n\nfunction Local() {\n  this._ = \"@\" + (++nextId).toString(36);\n}\n\nLocal.prototype = local.prototype = {\n  constructor: Local,\n  get: function(node) {\n    var id = this._;\n    while (!(id in node)) if (!(node = node.parentNode)) return;\n    return node[id];\n  },\n  set: function(node, value) {\n    return node[this._] = value;\n  },\n  remove: function(node) {\n    return this._ in node && delete node[this._];\n  },\n  toString: function() {\n    return this._;\n  }\n};\n","import {event} from \"./selection/on\";\n\nexport default function() {\n  var current = event, source;\n  while (source = current.sourceEvent) current = source;\n  return current;\n}\n","export default function(node, event) {\n  var svg = node.ownerSVGElement || node;\n\n  if (svg.createSVGPoint) {\n    var point = svg.createSVGPoint();\n    point.x = event.clientX, point.y = event.clientY;\n    point = point.matrixTransform(node.getScreenCTM().inverse());\n    return [point.x, point.y];\n  }\n\n  var rect = node.getBoundingClientRect();\n  return [event.clientX - rect.left - node.clientLeft, event.clientY - rect.top - node.clientTop];\n}\n","import sourceEvent from \"./sourceEvent\";\nimport point from \"./point\";\n\nexport default function(node) {\n  var event = sourceEvent();\n  if (event.changedTouches) event = event.changedTouches[0];\n  return point(node, event);\n}\n","import {Selection, root} from \"./selection/index\";\n\nexport default function(selector) {\n  return typeof selector === \"string\"\n      ? new Selection([document.querySelectorAll(selector)], [document.documentElement])\n      : new Selection([selector == null ? [] : selector], root);\n}\n","import sourceEvent from \"./sourceEvent\";\nimport point from \"./point\";\n\nexport default function(node, touches, identifier) {\n  if (arguments.length < 3) identifier = touches, touches = sourceEvent().changedTouches;\n\n  for (var i = 0, n = touches ? touches.length : 0, touch; i < n; ++i) {\n    if ((touch = touches[i]).identifier === identifier) {\n      return point(node, touch);\n    }\n  }\n\n  return null;\n}\n","import sourceEvent from \"./sourceEvent\";\nimport point from \"./point\";\n\nexport default function(node, touches) {\n  if (touches == null) touches = sourceEvent().touches;\n\n  for (var i = 0, n = touches ? touches.length : 0, points = new Array(n); i < n; ++i) {\n    points[i] = point(node, touches[i]);\n  }\n\n  return points;\n}\n","import {event} from \"d3-selection\";\n\nexport function nopropagation() {\n  event.stopImmediatePropagation();\n}\n\nexport default function() {\n  event.preventDefault();\n  event.stopImmediatePropagation();\n}\n","import {select} from \"d3-selection\";\nimport noevent from \"./noevent\";\n\nexport default function(view) {\n  var root = view.document.documentElement,\n      selection = select(view).on(\"dragstart.drag\", noevent, true);\n  if (\"onselectstart\" in root) {\n    selection.on(\"selectstart.drag\", noevent, true);\n  } else {\n    root.__noselect = root.style.MozUserSelect;\n    root.style.MozUserSelect = \"none\";\n  }\n}\n\nexport function yesdrag(view, noclick) {\n  var root = view.document.documentElement,\n      selection = select(view).on(\"dragstart.drag\", null);\n  if (noclick) {\n    selection.on(\"click.drag\", noevent, true);\n    setTimeout(function() { selection.on(\"click.drag\", null); }, 0);\n  }\n  if (\"onselectstart\" in root) {\n    selection.on(\"selectstart.drag\", null);\n  } else {\n    root.style.MozUserSelect = root.__noselect;\n    delete root.__noselect;\n  }\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function DragEvent(target, type, subject, id, active, x, y, dx, dy, dispatch) {\n  this.target = target;\n  this.type = type;\n  this.subject = subject;\n  this.identifier = id;\n  this.active = active;\n  this.x = x;\n  this.y = y;\n  this.dx = dx;\n  this.dy = dy;\n  this._ = dispatch;\n}\n\nDragEvent.prototype.on = function() {\n  var value = this._.on.apply(this._, arguments);\n  return value === this._ ? this : value;\n};\n","import {dispatch} from \"d3-dispatch\";\nimport {event, customEvent, select, mouse, touch} from \"d3-selection\";\nimport nodrag, {yesdrag} from \"./nodrag\";\nimport noevent, {nopropagation} from \"./noevent\";\nimport constant from \"./constant\";\nimport DragEvent from \"./event\";\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter() {\n  return !event.button;\n}\n\nfunction defaultContainer() {\n  return this.parentNode;\n}\n\nfunction defaultSubject(d) {\n  return d == null ? {x: event.x, y: event.y} : d;\n}\n\nfunction defaultTouchable() {\n  return \"ontouchstart\" in this;\n}\n\nexport default function() {\n  var filter = defaultFilter,\n      container = defaultContainer,\n      subject = defaultSubject,\n      touchable = defaultTouchable,\n      gestures = {},\n      listeners = dispatch(\"start\", \"drag\", \"end\"),\n      active = 0,\n      mousedownx,\n      mousedowny,\n      mousemoving,\n      touchending,\n      clickDistance2 = 0;\n\n  function drag(selection) {\n    selection\n        .on(\"mousedown.drag\", mousedowned)\n      .filter(touchable)\n        .on(\"touchstart.drag\", touchstarted)\n        .on(\"touchmove.drag\", touchmoved)\n        .on(\"touchend.drag touchcancel.drag\", touchended)\n        .style(\"touch-action\", \"none\")\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n  }\n\n  function mousedowned() {\n    if (touchending || !filter.apply(this, arguments)) return;\n    var gesture = beforestart(\"mouse\", container.apply(this, arguments), mouse, this, arguments);\n    if (!gesture) return;\n    select(event.view).on(\"mousemove.drag\", mousemoved, true).on(\"mouseup.drag\", mouseupped, true);\n    nodrag(event.view);\n    nopropagation();\n    mousemoving = false;\n    mousedownx = event.clientX;\n    mousedowny = event.clientY;\n    gesture(\"start\");\n  }\n\n  function mousemoved() {\n    noevent();\n    if (!mousemoving) {\n      var dx = event.clientX - mousedownx, dy = event.clientY - mousedowny;\n      mousemoving = dx * dx + dy * dy > clickDistance2;\n    }\n    gestures.mouse(\"drag\");\n  }\n\n  function mouseupped() {\n    select(event.view).on(\"mousemove.drag mouseup.drag\", null);\n    yesdrag(event.view, mousemoving);\n    noevent();\n    gestures.mouse(\"end\");\n  }\n\n  function touchstarted() {\n    if (!filter.apply(this, arguments)) return;\n    var touches = event.changedTouches,\n        c = container.apply(this, arguments),\n        n = touches.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = beforestart(touches[i].identifier, c, touch, this, arguments)) {\n        nopropagation();\n        gesture(\"start\");\n      }\n    }\n  }\n\n  function touchmoved() {\n    var touches = event.changedTouches,\n        n = touches.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches[i].identifier]) {\n        noevent();\n        gesture(\"drag\");\n      }\n    }\n  }\n\n  function touchended() {\n    var touches = event.changedTouches,\n        n = touches.length, i, gesture;\n\n    if (touchending) clearTimeout(touchending);\n    touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches[i].identifier]) {\n        nopropagation();\n        gesture(\"end\");\n      }\n    }\n  }\n\n  function beforestart(id, container, point, that, args) {\n    var p = point(container, id), s, dx, dy,\n        sublisteners = listeners.copy();\n\n    if (!customEvent(new DragEvent(drag, \"beforestart\", s, id, active, p[0], p[1], 0, 0, sublisteners), function() {\n      if ((event.subject = s = subject.apply(that, args)) == null) return false;\n      dx = s.x - p[0] || 0;\n      dy = s.y - p[1] || 0;\n      return true;\n    })) return;\n\n    return function gesture(type) {\n      var p0 = p, n;\n      switch (type) {\n        case \"start\": gestures[id] = gesture, n = active++; break;\n        case \"end\": delete gestures[id], --active; // nobreak\n        case \"drag\": p = point(container, id), n = active; break;\n      }\n      customEvent(new DragEvent(drag, type, s, id, n, p[0] + dx, p[1] + dy, p[0] - p0[0], p[1] - p0[1], sublisteners), sublisteners.apply, sublisteners, [type, that, args]);\n    };\n  }\n\n  drag.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant(!!_), drag) : filter;\n  };\n\n  drag.container = function(_) {\n    return arguments.length ? (container = typeof _ === \"function\" ? _ : constant(_), drag) : container;\n  };\n\n  drag.subject = function(_) {\n    return arguments.length ? (subject = typeof _ === \"function\" ? _ : constant(_), drag) : subject;\n  };\n\n  drag.touchable = function(_) {\n    return arguments.length ? (touchable = typeof _ === \"function\" ? _ : constant(!!_), drag) : touchable;\n  };\n\n  drag.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? drag : value;\n  };\n\n  drag.clickDistance = function(_) {\n    return arguments.length ? (clickDistance2 = (_ = +_) * _, drag) : Math.sqrt(clickDistance2);\n  };\n\n  return drag;\n}\n","export default function(constructor, factory, prototype) {\n  constructor.prototype = factory.prototype = prototype;\n  prototype.constructor = constructor;\n}\n\nexport function extend(parent, definition) {\n  var prototype = Object.create(parent.prototype);\n  for (var key in definition) prototype[key] = definition[key];\n  return prototype;\n}\n","import define, {extend} from \"./define\";\n\nexport function Color() {}\n\nexport var darker = 0.7;\nexport var brighter = 1 / darker;\n\nvar reI = \"\\\\s*([+-]?\\\\d+)\\\\s*\",\n    reN = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)\\\\s*\",\n    reP = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)%\\\\s*\",\n    reHex3 = /^#([0-9a-f]{3})$/,\n    reHex6 = /^#([0-9a-f]{6})$/,\n    reRgbInteger = new RegExp(\"^rgb\\\\(\" + [reI, reI, reI] + \"\\\\)$\"),\n    reRgbPercent = new RegExp(\"^rgb\\\\(\" + [reP, reP, reP] + \"\\\\)$\"),\n    reRgbaInteger = new RegExp(\"^rgba\\\\(\" + [reI, reI, reI, reN] + \"\\\\)$\"),\n    reRgbaPercent = new RegExp(\"^rgba\\\\(\" + [reP, reP, reP, reN] + \"\\\\)$\"),\n    reHslPercent = new RegExp(\"^hsl\\\\(\" + [reN, reP, reP] + \"\\\\)$\"),\n    reHslaPercent = new RegExp(\"^hsla\\\\(\" + [reN, reP, reP, reN] + \"\\\\)$\");\n\nvar named = {\n  aliceblue: 0xf0f8ff,\n  antiquewhite: 0xfaebd7,\n  aqua: 0x00ffff,\n  aquamarine: 0x7fffd4,\n  azure: 0xf0ffff,\n  beige: 0xf5f5dc,\n  bisque: 0xffe4c4,\n  black: 0x000000,\n  blanchedalmond: 0xffebcd,\n  blue: 0x0000ff,\n  blueviolet: 0x8a2be2,\n  brown: 0xa52a2a,\n  burlywood: 0xdeb887,\n  cadetblue: 0x5f9ea0,\n  chartreuse: 0x7fff00,\n  chocolate: 0xd2691e,\n  coral: 0xff7f50,\n  cornflowerblue: 0x6495ed,\n  cornsilk: 0xfff8dc,\n  crimson: 0xdc143c,\n  cyan: 0x00ffff,\n  darkblue: 0x00008b,\n  darkcyan: 0x008b8b,\n  darkgoldenrod: 0xb8860b,\n  darkgray: 0xa9a9a9,\n  darkgreen: 0x006400,\n  darkgrey: 0xa9a9a9,\n  darkkhaki: 0xbdb76b,\n  darkmagenta: 0x8b008b,\n  darkolivegreen: 0x556b2f,\n  darkorange: 0xff8c00,\n  darkorchid: 0x9932cc,\n  darkred: 0x8b0000,\n  darksalmon: 0xe9967a,\n  darkseagreen: 0x8fbc8f,\n  darkslateblue: 0x483d8b,\n  darkslategray: 0x2f4f4f,\n  darkslategrey: 0x2f4f4f,\n  darkturquoise: 0x00ced1,\n  darkviolet: 0x9400d3,\n  deeppink: 0xff1493,\n  deepskyblue: 0x00bfff,\n  dimgray: 0x696969,\n  dimgrey: 0x696969,\n  dodgerblue: 0x1e90ff,\n  firebrick: 0xb22222,\n  floralwhite: 0xfffaf0,\n  forestgreen: 0x228b22,\n  fuchsia: 0xff00ff,\n  gainsboro: 0xdcdcdc,\n  ghostwhite: 0xf8f8ff,\n  gold: 0xffd700,\n  goldenrod: 0xdaa520,\n  gray: 0x808080,\n  green: 0x008000,\n  greenyellow: 0xadff2f,\n  grey: 0x808080,\n  honeydew: 0xf0fff0,\n  hotpink: 0xff69b4,\n  indianred: 0xcd5c5c,\n  indigo: 0x4b0082,\n  ivory: 0xfffff0,\n  khaki: 0xf0e68c,\n  lavender: 0xe6e6fa,\n  lavenderblush: 0xfff0f5,\n  lawngreen: 0x7cfc00,\n  lemonchiffon: 0xfffacd,\n  lightblue: 0xadd8e6,\n  lightcoral: 0xf08080,\n  lightcyan: 0xe0ffff,\n  lightgoldenrodyellow: 0xfafad2,\n  lightgray: 0xd3d3d3,\n  lightgreen: 0x90ee90,\n  lightgrey: 0xd3d3d3,\n  lightpink: 0xffb6c1,\n  lightsalmon: 0xffa07a,\n  lightseagreen: 0x20b2aa,\n  lightskyblue: 0x87cefa,\n  lightslategray: 0x778899,\n  lightslategrey: 0x778899,\n  lightsteelblue: 0xb0c4de,\n  lightyellow: 0xffffe0,\n  lime: 0x00ff00,\n  limegreen: 0x32cd32,\n  linen: 0xfaf0e6,\n  magenta: 0xff00ff,\n  maroon: 0x800000,\n  mediumaquamarine: 0x66cdaa,\n  mediumblue: 0x0000cd,\n  mediumorchid: 0xba55d3,\n  mediumpurple: 0x9370db,\n  mediumseagreen: 0x3cb371,\n  mediumslateblue: 0x7b68ee,\n  mediumspringgreen: 0x00fa9a,\n  mediumturquoise: 0x48d1cc,\n  mediumvioletred: 0xc71585,\n  midnightblue: 0x191970,\n  mintcream: 0xf5fffa,\n  mistyrose: 0xffe4e1,\n  moccasin: 0xffe4b5,\n  navajowhite: 0xffdead,\n  navy: 0x000080,\n  oldlace: 0xfdf5e6,\n  olive: 0x808000,\n  olivedrab: 0x6b8e23,\n  orange: 0xffa500,\n  orangered: 0xff4500,\n  orchid: 0xda70d6,\n  palegoldenrod: 0xeee8aa,\n  palegreen: 0x98fb98,\n  paleturquoise: 0xafeeee,\n  palevioletred: 0xdb7093,\n  papayawhip: 0xffefd5,\n  peachpuff: 0xffdab9,\n  peru: 0xcd853f,\n  pink: 0xffc0cb,\n  plum: 0xdda0dd,\n  powderblue: 0xb0e0e6,\n  purple: 0x800080,\n  rebeccapurple: 0x663399,\n  red: 0xff0000,\n  rosybrown: 0xbc8f8f,\n  royalblue: 0x4169e1,\n  saddlebrown: 0x8b4513,\n  salmon: 0xfa8072,\n  sandybrown: 0xf4a460,\n  seagreen: 0x2e8b57,\n  seashell: 0xfff5ee,\n  sienna: 0xa0522d,\n  silver: 0xc0c0c0,\n  skyblue: 0x87ceeb,\n  slateblue: 0x6a5acd,\n  slategray: 0x708090,\n  slategrey: 0x708090,\n  snow: 0xfffafa,\n  springgreen: 0x00ff7f,\n  steelblue: 0x4682b4,\n  tan: 0xd2b48c,\n  teal: 0x008080,\n  thistle: 0xd8bfd8,\n  tomato: 0xff6347,\n  turquoise: 0x40e0d0,\n  violet: 0xee82ee,\n  wheat: 0xf5deb3,\n  white: 0xffffff,\n  whitesmoke: 0xf5f5f5,\n  yellow: 0xffff00,\n  yellowgreen: 0x9acd32\n};\n\ndefine(Color, color, {\n  displayable: function() {\n    return this.rgb().displayable();\n  },\n  hex: function() {\n    return this.rgb().hex();\n  },\n  toString: function() {\n    return this.rgb() + \"\";\n  }\n});\n\nexport default function color(format) {\n  var m;\n  format = (format + \"\").trim().toLowerCase();\n  return (m = reHex3.exec(format)) ? (m = parseInt(m[1], 16), new Rgb((m >> 8 & 0xf) | (m >> 4 & 0x0f0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1)) // #f00\n      : (m = reHex6.exec(format)) ? rgbn(parseInt(m[1], 16)) // #ff0000\n      : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\n      : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)\n      : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\n      : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)\n      : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\n      : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\n      : named.hasOwnProperty(format) ? rgbn(named[format])\n      : format === \"transparent\" ? new Rgb(NaN, NaN, NaN, 0)\n      : null;\n}\n\nfunction rgbn(n) {\n  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);\n}\n\nfunction rgba(r, g, b, a) {\n  if (a <= 0) r = g = b = NaN;\n  return new Rgb(r, g, b, a);\n}\n\nexport function rgbConvert(o) {\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Rgb;\n  o = o.rgb();\n  return new Rgb(o.r, o.g, o.b, o.opacity);\n}\n\nexport function rgb(r, g, b, opacity) {\n  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);\n}\n\nexport function Rgb(r, g, b, opacity) {\n  this.r = +r;\n  this.g = +g;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Rgb, rgb, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  rgb: function() {\n    return this;\n  },\n  displayable: function() {\n    return (0 <= this.r && this.r <= 255)\n        && (0 <= this.g && this.g <= 255)\n        && (0 <= this.b && this.b <= 255)\n        && (0 <= this.opacity && this.opacity <= 1);\n  },\n  hex: function() {\n    return \"#\" + hex(this.r) + hex(this.g) + hex(this.b);\n  },\n  toString: function() {\n    var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n    return (a === 1 ? \"rgb(\" : \"rgba(\")\n        + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.b) || 0))\n        + (a === 1 ? \")\" : \", \" + a + \")\");\n  }\n}));\n\nfunction hex(value) {\n  value = Math.max(0, Math.min(255, Math.round(value) || 0));\n  return (value < 16 ? \"0\" : \"\") + value.toString(16);\n}\n\nfunction hsla(h, s, l, a) {\n  if (a <= 0) h = s = l = NaN;\n  else if (l <= 0 || l >= 1) h = s = NaN;\n  else if (s <= 0) h = NaN;\n  return new Hsl(h, s, l, a);\n}\n\nexport function hslConvert(o) {\n  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Hsl;\n  if (o instanceof Hsl) return o;\n  o = o.rgb();\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      h = NaN,\n      s = max - min,\n      l = (max + min) / 2;\n  if (s) {\n    if (r === max) h = (g - b) / s + (g < b) * 6;\n    else if (g === max) h = (b - r) / s + 2;\n    else h = (r - g) / s + 4;\n    s /= l < 0.5 ? max + min : 2 - max - min;\n    h *= 60;\n  } else {\n    s = l > 0 && l < 1 ? 0 : h;\n  }\n  return new Hsl(h, s, l, o.opacity);\n}\n\nexport function hsl(h, s, l, opacity) {\n  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hsl(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hsl, hsl, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = this.h % 360 + (this.h < 0) * 360,\n        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n        l = this.l,\n        m2 = l + (l < 0.5 ? l : 1 - l) * s,\n        m1 = 2 * l - m2;\n    return new Rgb(\n      hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),\n      hsl2rgb(h, m1, m2),\n      hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),\n      this.opacity\n    );\n  },\n  displayable: function() {\n    return (0 <= this.s && this.s <= 1 || isNaN(this.s))\n        && (0 <= this.l && this.l <= 1)\n        && (0 <= this.opacity && this.opacity <= 1);\n  }\n}));\n\n/* From FvD 13.37, CSS Color Module Level 3 */\nfunction hsl2rgb(h, m1, m2) {\n  return (h < 60 ? m1 + (m2 - m1) * h / 60\n      : h < 180 ? m2\n      : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60\n      : m1) * 255;\n}\n","export var deg2rad = Math.PI / 180;\nexport var rad2deg = 180 / Math.PI;\n","import define, {extend} from \"./define\";\nimport {Color, rgbConvert, Rgb} from \"./color\";\nimport {deg2rad, rad2deg} from \"./math\";\n\n// https://beta.observablehq.com/@mbostock/lab-and-rgb\nvar K = 18,\n    Xn = 0.96422,\n    Yn = 1,\n    Zn = 0.82521,\n    t0 = 4 / 29,\n    t1 = 6 / 29,\n    t2 = 3 * t1 * t1,\n    t3 = t1 * t1 * t1;\n\nfunction labConvert(o) {\n  if (o instanceof Lab) return new Lab(o.l, o.a, o.b, o.opacity);\n  if (o instanceof Hcl) {\n    if (isNaN(o.h)) return new Lab(o.l, 0, 0, o.opacity);\n    var h = o.h * deg2rad;\n    return new Lab(o.l, Math.cos(h) * o.c, Math.sin(h) * o.c, o.opacity);\n  }\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = rgb2lrgb(o.r),\n      g = rgb2lrgb(o.g),\n      b = rgb2lrgb(o.b),\n      y = xyz2lab((0.2225045 * r + 0.7168786 * g + 0.0606169 * b) / Yn), x, z;\n  if (r === g && g === b) x = z = y; else {\n    x = xyz2lab((0.4360747 * r + 0.3850649 * g + 0.1430804 * b) / Xn);\n    z = xyz2lab((0.0139322 * r + 0.0971045 * g + 0.7141733 * b) / Zn);\n  }\n  return new Lab(116 * y - 16, 500 * (x - y), 200 * (y - z), o.opacity);\n}\n\nexport function gray(l, opacity) {\n  return new Lab(l, 0, 0, opacity == null ? 1 : opacity);\n}\n\nexport default function lab(l, a, b, opacity) {\n  return arguments.length === 1 ? labConvert(l) : new Lab(l, a, b, opacity == null ? 1 : opacity);\n}\n\nexport function Lab(l, a, b, opacity) {\n  this.l = +l;\n  this.a = +a;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Lab, lab, extend(Color, {\n  brighter: function(k) {\n    return new Lab(this.l + K * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  darker: function(k) {\n    return new Lab(this.l - K * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  rgb: function() {\n    var y = (this.l + 16) / 116,\n        x = isNaN(this.a) ? y : y + this.a / 500,\n        z = isNaN(this.b) ? y : y - this.b / 200;\n    x = Xn * lab2xyz(x);\n    y = Yn * lab2xyz(y);\n    z = Zn * lab2xyz(z);\n    return new Rgb(\n      lrgb2rgb( 3.1338561 * x - 1.6168667 * y - 0.4906146 * z),\n      lrgb2rgb(-0.9787684 * x + 1.9161415 * y + 0.0334540 * z),\n      lrgb2rgb( 0.0719453 * x - 0.2289914 * y + 1.4052427 * z),\n      this.opacity\n    );\n  }\n}));\n\nfunction xyz2lab(t) {\n  return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;\n}\n\nfunction lab2xyz(t) {\n  return t > t1 ? t * t * t : t2 * (t - t0);\n}\n\nfunction lrgb2rgb(x) {\n  return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\n}\n\nfunction rgb2lrgb(x) {\n  return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n}\n\nfunction hclConvert(o) {\n  if (o instanceof Hcl) return new Hcl(o.h, o.c, o.l, o.opacity);\n  if (!(o instanceof Lab)) o = labConvert(o);\n  if (o.a === 0 && o.b === 0) return new Hcl(NaN, 0, o.l, o.opacity);\n  var h = Math.atan2(o.b, o.a) * rad2deg;\n  return new Hcl(h < 0 ? h + 360 : h, Math.sqrt(o.a * o.a + o.b * o.b), o.l, o.opacity);\n}\n\nexport function lch(l, c, h, opacity) {\n  return arguments.length === 1 ? hclConvert(l) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\n\nexport function hcl(h, c, l, opacity) {\n  return arguments.length === 1 ? hclConvert(h) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\n\nexport function Hcl(h, c, l, opacity) {\n  this.h = +h;\n  this.c = +c;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hcl, hcl, extend(Color, {\n  brighter: function(k) {\n    return new Hcl(this.h, this.c, this.l + K * (k == null ? 1 : k), this.opacity);\n  },\n  darker: function(k) {\n    return new Hcl(this.h, this.c, this.l - K * (k == null ? 1 : k), this.opacity);\n  },\n  rgb: function() {\n    return labConvert(this).rgb();\n  }\n}));\n","import define, {extend} from \"./define\";\nimport {Color, rgbConvert, Rgb, darker, brighter} from \"./color\";\nimport {deg2rad, rad2deg} from \"./math\";\n\nvar A = -0.14861,\n    B = +1.78277,\n    C = -0.29227,\n    D = -0.90649,\n    E = +1.97294,\n    ED = E * D,\n    EB = E * B,\n    BC_DA = B * C - D * A;\n\nfunction cubehelixConvert(o) {\n  if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB),\n      bl = b - l,\n      k = (E * (g - l) - C * bl) / D,\n      s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)), // NaN if l=0 or l=1\n      h = s ? Math.atan2(k, bl) * rad2deg - 120 : NaN;\n  return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);\n}\n\nexport default function cubehelix(h, s, l, opacity) {\n  return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);\n}\n\nexport function Cubehelix(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Cubehelix, cubehelix, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = isNaN(this.h) ? 0 : (this.h + 120) * deg2rad,\n        l = +this.l,\n        a = isNaN(this.s) ? 0 : this.s * l * (1 - l),\n        cosh = Math.cos(h),\n        sinh = Math.sin(h);\n    return new Rgb(\n      255 * (l + a * (A * cosh + B * sinh)),\n      255 * (l + a * (C * cosh + D * sinh)),\n      255 * (l + a * (E * cosh)),\n      this.opacity\n    );\n  }\n}));\n","export function basis(t1, v0, v1, v2, v3) {\n  var t2 = t1 * t1, t3 = t2 * t1;\n  return ((1 - 3 * t1 + 3 * t2 - t3) * v0\n      + (4 - 6 * t2 + 3 * t3) * v1\n      + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2\n      + t3 * v3) / 6;\n}\n\nexport default function(values) {\n  var n = values.length - 1;\n  return function(t) {\n    var i = t <= 0 ? (t = 0) : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),\n        v1 = values[i],\n        v2 = values[i + 1],\n        v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,\n        v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n}\n","import {basis} from \"./basis\";\n\nexport default function(values) {\n  var n = values.length;\n  return function(t) {\n    var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n),\n        v0 = values[(i + n - 1) % n],\n        v1 = values[i % n],\n        v2 = values[(i + 1) % n],\n        v3 = values[(i + 2) % n];\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","import constant from \"./constant\";\n\nfunction linear(a, d) {\n  return function(t) {\n    return a + t * d;\n  };\n}\n\nfunction exponential(a, b, y) {\n  return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function(t) {\n    return Math.pow(a + t * b, y);\n  };\n}\n\nexport function hue(a, b) {\n  var d = b - a;\n  return d ? linear(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : constant(isNaN(a) ? b : a);\n}\n\nexport function gamma(y) {\n  return (y = +y) === 1 ? nogamma : function(a, b) {\n    return b - a ? exponential(a, b, y) : constant(isNaN(a) ? b : a);\n  };\n}\n\nexport default function nogamma(a, b) {\n  var d = b - a;\n  return d ? linear(a, d) : constant(isNaN(a) ? b : a);\n}\n","import {rgb as colorRgb} from \"d3-color\";\nimport basis from \"./basis\";\nimport basisClosed from \"./basisClosed\";\nimport nogamma, {gamma} from \"./color\";\n\nexport default (function rgbGamma(y) {\n  var color = gamma(y);\n\n  function rgb(start, end) {\n    var r = color((start = colorRgb(start)).r, (end = colorRgb(end)).r),\n        g = color(start.g, end.g),\n        b = color(start.b, end.b),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.r = r(t);\n      start.g = g(t);\n      start.b = b(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n\n  rgb.gamma = rgbGamma;\n\n  return rgb;\n})(1);\n\nfunction rgbSpline(spline) {\n  return function(colors) {\n    var n = colors.length,\n        r = new Array(n),\n        g = new Array(n),\n        b = new Array(n),\n        i, color;\n    for (i = 0; i < n; ++i) {\n      color = colorRgb(colors[i]);\n      r[i] = color.r || 0;\n      g[i] = color.g || 0;\n      b[i] = color.b || 0;\n    }\n    r = spline(r);\n    g = spline(g);\n    b = spline(b);\n    color.opacity = 1;\n    return function(t) {\n      color.r = r(t);\n      color.g = g(t);\n      color.b = b(t);\n      return color + \"\";\n    };\n  };\n}\n\nexport var rgbBasis = rgbSpline(basis);\nexport var rgbBasisClosed = rgbSpline(basisClosed);\n","import value from \"./value\";\n\nexport default function(a, b) {\n  var nb = b ? b.length : 0,\n      na = a ? Math.min(nb, a.length) : 0,\n      x = new Array(na),\n      c = new Array(nb),\n      i;\n\n  for (i = 0; i < na; ++i) x[i] = value(a[i], b[i]);\n  for (; i < nb; ++i) c[i] = b[i];\n\n  return function(t) {\n    for (i = 0; i < na; ++i) c[i] = x[i](t);\n    return c;\n  };\n}\n","export default function(a, b) {\n  var d = new Date;\n  return a = +a, b -= a, function(t) {\n    return d.setTime(a + b * t), d;\n  };\n}\n","export default function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return a + b * t;\n  };\n}\n","import value from \"./value\";\n\nexport default function(a, b) {\n  var i = {},\n      c = {},\n      k;\n\n  if (a === null || typeof a !== \"object\") a = {};\n  if (b === null || typeof b !== \"object\") b = {};\n\n  for (k in b) {\n    if (k in a) {\n      i[k] = value(a[k], b[k]);\n    } else {\n      c[k] = b[k];\n    }\n  }\n\n  return function(t) {\n    for (k in i) c[k] = i[k](t);\n    return c;\n  };\n}\n","import number from \"./number\";\n\nvar reA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g,\n    reB = new RegExp(reA.source, \"g\");\n\nfunction zero(b) {\n  return function() {\n    return b;\n  };\n}\n\nfunction one(b) {\n  return function(t) {\n    return b(t) + \"\";\n  };\n}\n\nexport default function(a, b) {\n  var bi = reA.lastIndex = reB.lastIndex = 0, // scan index for next number in b\n      am, // current match in a\n      bm, // current match in b\n      bs, // string preceding current number in b, if any\n      i = -1, // index in s\n      s = [], // string constants and placeholders\n      q = []; // number interpolators\n\n  // Coerce inputs to strings.\n  a = a + \"\", b = b + \"\";\n\n  // Interpolate pairs of numbers in a & b.\n  while ((am = reA.exec(a))\n      && (bm = reB.exec(b))) {\n    if ((bs = bm.index) > bi) { // a string precedes the next number in b\n      bs = b.slice(bi, bs);\n      if (s[i]) s[i] += bs; // coalesce with previous string\n      else s[++i] = bs;\n    }\n    if ((am = am[0]) === (bm = bm[0])) { // numbers in a & b match\n      if (s[i]) s[i] += bm; // coalesce with previous string\n      else s[++i] = bm;\n    } else { // interpolate non-matching numbers\n      s[++i] = null;\n      q.push({i: i, x: number(am, bm)});\n    }\n    bi = reB.lastIndex;\n  }\n\n  // Add remains of b.\n  if (bi < b.length) {\n    bs = b.slice(bi);\n    if (s[i]) s[i] += bs; // coalesce with previous string\n    else s[++i] = bs;\n  }\n\n  // Special optimization for only a single match.\n  // Otherwise, interpolate each of the numbers and rejoin the string.\n  return s.length < 2 ? (q[0]\n      ? one(q[0].x)\n      : zero(b))\n      : (b = q.length, function(t) {\n          for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n          return s.join(\"\");\n        });\n}\n","import decompose, {identity} from \"./decompose\";\n\nvar cssNode,\n    cssRoot,\n    cssView,\n    svgNode;\n\nexport function parseCss(value) {\n  if (value === \"none\") return identity;\n  if (!cssNode) cssNode = document.createElement(\"DIV\"), cssRoot = document.documentElement, cssView = document.defaultView;\n  cssNode.style.transform = value;\n  value = cssView.getComputedStyle(cssRoot.appendChild(cssNode), null).getPropertyValue(\"transform\");\n  cssRoot.removeChild(cssNode);\n  value = value.slice(7, -1).split(\",\");\n  return decompose(+value[0], +value[1], +value[2], +value[3], +value[4], +value[5]);\n}\n\nexport function parseSvg(value) {\n  if (value == null) return identity;\n  if (!svgNode) svgNode = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n  svgNode.setAttribute(\"transform\", value);\n  if (!(value = svgNode.transform.baseVal.consolidate())) return identity;\n  value = value.matrix;\n  return decompose(value.a, value.b, value.c, value.d, value.e, value.f);\n}\n","import {color} from \"d3-color\";\nimport rgb from \"./rgb\";\nimport array from \"./array\";\nimport date from \"./date\";\nimport number from \"./number\";\nimport object from \"./object\";\nimport string from \"./string\";\nimport constant from \"./constant\";\n\nexport default function(a, b) {\n  var t = typeof b, c;\n  return b == null || t === \"boolean\" ? constant(b)\n      : (t === \"number\" ? number\n      : t === \"string\" ? ((c = color(b)) ? (b = c, rgb) : string)\n      : b instanceof color ? rgb\n      : b instanceof Date ? date\n      : Array.isArray(b) ? array\n      : typeof b.valueOf !== \"function\" && typeof b.toString !== \"function\" || isNaN(b) ? object\n      : number)(a, b);\n}\n","export default function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return Math.round(a + b * t);\n  };\n}\n","var degrees = 180 / Math.PI;\n\nexport var identity = {\n  translateX: 0,\n  translateY: 0,\n  rotate: 0,\n  skewX: 0,\n  scaleX: 1,\n  scaleY: 1\n};\n\nexport default function(a, b, c, d, e, f) {\n  var scaleX, scaleY, skewX;\n  if (scaleX = Math.sqrt(a * a + b * b)) a /= scaleX, b /= scaleX;\n  if (skewX = a * c + b * d) c -= a * skewX, d -= b * skewX;\n  if (scaleY = Math.sqrt(c * c + d * d)) c /= scaleY, d /= scaleY, skewX /= scaleY;\n  if (a * d < b * c) a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;\n  return {\n    translateX: e,\n    translateY: f,\n    rotate: Math.atan2(b, a) * degrees,\n    skewX: Math.atan(skewX) * degrees,\n    scaleX: scaleX,\n    scaleY: scaleY\n  };\n}\n","import number from \"../number\";\nimport {parseCss, parseSvg} from \"./parse\";\n\nfunction interpolateTransform(parse, pxComma, pxParen, degParen) {\n\n  function pop(s) {\n    return s.length ? s.pop() + \" \" : \"\";\n  }\n\n  function translate(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(\"translate(\", null, pxComma, null, pxParen);\n      q.push({i: i - 4, x: number(xa, xb)}, {i: i - 2, x: number(ya, yb)});\n    } else if (xb || yb) {\n      s.push(\"translate(\" + xb + pxComma + yb + pxParen);\n    }\n  }\n\n  function rotate(a, b, s, q) {\n    if (a !== b) {\n      if (a - b > 180) b += 360; else if (b - a > 180) a += 360; // shortest path\n      q.push({i: s.push(pop(s) + \"rotate(\", null, degParen) - 2, x: number(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"rotate(\" + b + degParen);\n    }\n  }\n\n  function skewX(a, b, s, q) {\n    if (a !== b) {\n      q.push({i: s.push(pop(s) + \"skewX(\", null, degParen) - 2, x: number(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"skewX(\" + b + degParen);\n    }\n  }\n\n  function scale(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(pop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({i: i - 4, x: number(xa, xb)}, {i: i - 2, x: number(ya, yb)});\n    } else if (xb !== 1 || yb !== 1) {\n      s.push(pop(s) + \"scale(\" + xb + \",\" + yb + \")\");\n    }\n  }\n\n  return function(a, b) {\n    var s = [], // string constants and placeholders\n        q = []; // number interpolators\n    a = parse(a), b = parse(b);\n    translate(a.translateX, a.translateY, b.translateX, b.translateY, s, q);\n    rotate(a.rotate, b.rotate, s, q);\n    skewX(a.skewX, b.skewX, s, q);\n    scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s, q);\n    a = b = null; // gc\n    return function(t) {\n      var i = -1, n = q.length, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  };\n}\n\nexport var interpolateTransformCss = interpolateTransform(parseCss, \"px, \", \"px)\", \"deg)\");\nexport var interpolateTransformSvg = interpolateTransform(parseSvg, \", \", \")\", \")\");\n","var rho = Math.SQRT2,\n    rho2 = 2,\n    rho4 = 4,\n    epsilon2 = 1e-12;\n\nfunction cosh(x) {\n  return ((x = Math.exp(x)) + 1 / x) / 2;\n}\n\nfunction sinh(x) {\n  return ((x = Math.exp(x)) - 1 / x) / 2;\n}\n\nfunction tanh(x) {\n  return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n}\n\n// p0 = [ux0, uy0, w0]\n// p1 = [ux1, uy1, w1]\nexport default function(p0, p1) {\n  var ux0 = p0[0], uy0 = p0[1], w0 = p0[2],\n      ux1 = p1[0], uy1 = p1[1], w1 = p1[2],\n      dx = ux1 - ux0,\n      dy = uy1 - uy0,\n      d2 = dx * dx + dy * dy,\n      i,\n      S;\n\n  // Special case for u0 ≅ u1.\n  if (d2 < epsilon2) {\n    S = Math.log(w1 / w0) / rho;\n    i = function(t) {\n      return [\n        ux0 + t * dx,\n        uy0 + t * dy,\n        w0 * Math.exp(rho * t * S)\n      ];\n    }\n  }\n\n  // General case.\n  else {\n    var d1 = Math.sqrt(d2),\n        b0 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1),\n        b1 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1),\n        r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),\n        r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n    S = (r1 - r0) / rho;\n    i = function(t) {\n      var s = t * S,\n          coshr0 = cosh(r0),\n          u = w0 / (rho2 * d1) * (coshr0 * tanh(rho * s + r0) - sinh(r0));\n      return [\n        ux0 + u * dx,\n        uy0 + u * dy,\n        w0 * coshr0 / cosh(rho * s + r0)\n      ];\n    }\n  }\n\n  i.duration = S * 1000;\n\n  return i;\n}\n","import {hsl as colorHsl} from \"d3-color\";\nimport color, {hue} from \"./color\";\n\nfunction hsl(hue) {\n  return function(start, end) {\n    var h = hue((start = colorHsl(start)).h, (end = colorHsl(end)).h),\n        s = color(start.s, end.s),\n        l = color(start.l, end.l),\n        opacity = color(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.s = s(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nexport default hsl(hue);\nexport var hslLong = hsl(color);\n","import {lab as colorLab} from \"d3-color\";\nimport color from \"./color\";\n\nexport default function lab(start, end) {\n  var l = color((start = colorLab(start)).l, (end = colorLab(end)).l),\n      a = color(start.a, end.a),\n      b = color(start.b, end.b),\n      opacity = color(start.opacity, end.opacity);\n  return function(t) {\n    start.l = l(t);\n    start.a = a(t);\n    start.b = b(t);\n    start.opacity = opacity(t);\n    return start + \"\";\n  };\n}\n","import {hcl as colorHcl} from \"d3-color\";\nimport color, {hue} from \"./color\";\n\nfunction hcl(hue) {\n  return function(start, end) {\n    var h = hue((start = colorHcl(start)).h, (end = colorHcl(end)).h),\n        c = color(start.c, end.c),\n        l = color(start.l, end.l),\n        opacity = color(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.c = c(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nexport default hcl(hue);\nexport var hclLong = hcl(color);\n","import {cubehelix as colorCubehelix} from \"d3-color\";\nimport color, {hue} from \"./color\";\n\nfunction cubehelix(hue) {\n  return (function cubehelixGamma(y) {\n    y = +y;\n\n    function cubehelix(start, end) {\n      var h = hue((start = colorCubehelix(start)).h, (end = colorCubehelix(end)).h),\n          s = color(start.s, end.s),\n          l = color(start.l, end.l),\n          opacity = color(start.opacity, end.opacity);\n      return function(t) {\n        start.h = h(t);\n        start.s = s(t);\n        start.l = l(Math.pow(t, y));\n        start.opacity = opacity(t);\n        return start + \"\";\n      };\n    }\n\n    cubehelix.gamma = cubehelixGamma;\n\n    return cubehelix;\n  })(1);\n}\n\nexport default cubehelix(hue);\nexport var cubehelixLong = cubehelix(color);\n","export default function piecewise(interpolate, values) {\n  var i = 0, n = values.length - 1, v = values[0], I = new Array(n < 0 ? 0 : n);\n  while (i < n) I[i] = interpolate(v, v = values[++i]);\n  return function(t) {\n    var i = Math.max(0, Math.min(n - 1, Math.floor(t *= n)));\n    return I[i](t - i);\n  };\n}\n","export default function(interpolator, n) {\n  var samples = new Array(n);\n  for (var i = 0; i < n; ++i) samples[i] = interpolator(i / (n - 1));\n  return samples;\n}\n","var frame = 0, // is an animation frame pending?\n    timeout = 0, // is a timeout pending?\n    interval = 0, // are any timers active?\n    pokeDelay = 1000, // how frequently we check for clock skew\n    taskHead,\n    taskTail,\n    clockLast = 0,\n    clockNow = 0,\n    clockSkew = 0,\n    clock = typeof performance === \"object\" && performance.now ? performance : Date,\n    setFrame = typeof window === \"object\" && window.requestAnimationFrame ? window.requestAnimationFrame.bind(window) : function(f) { setTimeout(f, 17); };\n\nexport function now() {\n  return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);\n}\n\nfunction clearNow() {\n  clockNow = 0;\n}\n\nexport function Timer() {\n  this._call =\n  this._time =\n  this._next = null;\n}\n\nTimer.prototype = timer.prototype = {\n  constructor: Timer,\n  restart: function(callback, delay, time) {\n    if (typeof callback !== \"function\") throw new TypeError(\"callback is not a function\");\n    time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);\n    if (!this._next && taskTail !== this) {\n      if (taskTail) taskTail._next = this;\n      else taskHead = this;\n      taskTail = this;\n    }\n    this._call = callback;\n    this._time = time;\n    sleep();\n  },\n  stop: function() {\n    if (this._call) {\n      this._call = null;\n      this._time = Infinity;\n      sleep();\n    }\n  }\n};\n\nexport function timer(callback, delay, time) {\n  var t = new Timer;\n  t.restart(callback, delay, time);\n  return t;\n}\n\nexport function timerFlush() {\n  now(); // Get the current time, if not already set.\n  ++frame; // Pretend we’ve set an alarm, if we haven’t already.\n  var t = taskHead, e;\n  while (t) {\n    if ((e = clockNow - t._time) >= 0) t._call.call(null, e);\n    t = t._next;\n  }\n  --frame;\n}\n\nfunction wake() {\n  clockNow = (clockLast = clock.now()) + clockSkew;\n  frame = timeout = 0;\n  try {\n    timerFlush();\n  } finally {\n    frame = 0;\n    nap();\n    clockNow = 0;\n  }\n}\n\nfunction poke() {\n  var now = clock.now(), delay = now - clockLast;\n  if (delay > pokeDelay) clockSkew -= delay, clockLast = now;\n}\n\nfunction nap() {\n  var t0, t1 = taskHead, t2, time = Infinity;\n  while (t1) {\n    if (t1._call) {\n      if (time > t1._time) time = t1._time;\n      t0 = t1, t1 = t1._next;\n    } else {\n      t2 = t1._next, t1._next = null;\n      t1 = t0 ? t0._next = t2 : taskHead = t2;\n    }\n  }\n  taskTail = t0;\n  sleep(time);\n}\n\nfunction sleep(time) {\n  if (frame) return; // Soonest alarm already set, or will be.\n  if (timeout) timeout = clearTimeout(timeout);\n  var delay = time - clockNow; // Strictly less than if we recomputed clockNow.\n  if (delay > 24) {\n    if (time < Infinity) timeout = setTimeout(wake, time - clock.now() - clockSkew);\n    if (interval) interval = clearInterval(interval);\n  } else {\n    if (!interval) clockLast = clock.now(), interval = setInterval(poke, pokeDelay);\n    frame = 1, setFrame(wake);\n  }\n}\n","import {Timer} from \"./timer\";\n\nexport default function(callback, delay, time) {\n  var t = new Timer;\n  delay = delay == null ? 0 : +delay;\n  t.restart(function(elapsed) {\n    t.stop();\n    callback(elapsed + delay);\n  }, delay, time);\n  return t;\n}\n","import {Timer, now} from \"./timer\";\n\nexport default function(callback, delay, time) {\n  var t = new Timer, total = delay;\n  if (delay == null) return t.restart(callback, delay, time), t;\n  delay = +delay, time = time == null ? now() : +time;\n  t.restart(function tick(elapsed) {\n    elapsed += total;\n    t.restart(tick, total += delay, time);\n    callback(elapsed);\n  }, delay, time);\n  return t;\n}\n","import {dispatch} from \"d3-dispatch\";\nimport {timer, timeout} from \"d3-timer\";\n\nvar emptyOn = dispatch(\"start\", \"end\", \"interrupt\");\nvar emptyTween = [];\n\nexport var CREATED = 0;\nexport var SCHEDULED = 1;\nexport var STARTING = 2;\nexport var STARTED = 3;\nexport var RUNNING = 4;\nexport var ENDING = 5;\nexport var ENDED = 6;\n\nexport default function(node, name, id, index, group, timing) {\n  var schedules = node.__transition;\n  if (!schedules) node.__transition = {};\n  else if (id in schedules) return;\n  create(node, id, {\n    name: name,\n    index: index, // For context during callback.\n    group: group, // For context during callback.\n    on: emptyOn,\n    tween: emptyTween,\n    time: timing.time,\n    delay: timing.delay,\n    duration: timing.duration,\n    ease: timing.ease,\n    timer: null,\n    state: CREATED\n  });\n}\n\nexport function init(node, id) {\n  var schedule = get(node, id);\n  if (schedule.state > CREATED) throw new Error(\"too late; already scheduled\");\n  return schedule;\n}\n\nexport function set(node, id) {\n  var schedule = get(node, id);\n  if (schedule.state > STARTING) throw new Error(\"too late; already started\");\n  return schedule;\n}\n\nexport function get(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id])) throw new Error(\"transition not found\");\n  return schedule;\n}\n\nfunction create(node, id, self) {\n  var schedules = node.__transition,\n      tween;\n\n  // Initialize the self timer when the transition is created.\n  // Note the actual delay is not known until the first callback!\n  schedules[id] = self;\n  self.timer = timer(schedule, 0, self.time);\n\n  function schedule(elapsed) {\n    self.state = SCHEDULED;\n    self.timer.restart(start, self.delay, self.time);\n\n    // If the elapsed delay is less than our first sleep, start immediately.\n    if (self.delay <= elapsed) start(elapsed - self.delay);\n  }\n\n  function start(elapsed) {\n    var i, j, n, o;\n\n    // If the state is not SCHEDULED, then we previously errored on start.\n    if (self.state !== SCHEDULED) return stop();\n\n    for (i in schedules) {\n      o = schedules[i];\n      if (o.name !== self.name) continue;\n\n      // While this element already has a starting transition during this frame,\n      // defer starting an interrupting transition until that transition has a\n      // chance to tick (and possibly end); see d3/d3-transition#54!\n      if (o.state === STARTED) return timeout(start);\n\n      // Interrupt the active transition, if any.\n      // Dispatch the interrupt event.\n      if (o.state === RUNNING) {\n        o.state = ENDED;\n        o.timer.stop();\n        o.on.call(\"interrupt\", node, node.__data__, o.index, o.group);\n        delete schedules[i];\n      }\n\n      // Cancel any pre-empted transitions. No interrupt event is dispatched\n      // because the cancelled transitions never started. Note that this also\n      // removes this transition from the pending list!\n      else if (+i < id) {\n        o.state = ENDED;\n        o.timer.stop();\n        delete schedules[i];\n      }\n    }\n\n    // Defer the first tick to end of the current frame; see d3/d3#1576.\n    // Note the transition may be canceled after start and before the first tick!\n    // Note this must be scheduled before the start event; see d3/d3-transition#16!\n    // Assuming this is successful, subsequent callbacks go straight to tick.\n    timeout(function() {\n      if (self.state === STARTED) {\n        self.state = RUNNING;\n        self.timer.restart(tick, self.delay, self.time);\n        tick(elapsed);\n      }\n    });\n\n    // Dispatch the start event.\n    // Note this must be done before the tween are initialized.\n    self.state = STARTING;\n    self.on.call(\"start\", node, node.__data__, self.index, self.group);\n    if (self.state !== STARTING) return; // interrupted\n    self.state = STARTED;\n\n    // Initialize the tween, deleting null tween.\n    tween = new Array(n = self.tween.length);\n    for (i = 0, j = -1; i < n; ++i) {\n      if (o = self.tween[i].value.call(node, node.__data__, self.index, self.group)) {\n        tween[++j] = o;\n      }\n    }\n    tween.length = j + 1;\n  }\n\n  function tick(elapsed) {\n    var t = elapsed < self.duration ? self.ease.call(null, elapsed / self.duration) : (self.timer.restart(stop), self.state = ENDING, 1),\n        i = -1,\n        n = tween.length;\n\n    while (++i < n) {\n      tween[i].call(null, t);\n    }\n\n    // Dispatch the end event.\n    if (self.state === ENDING) {\n      self.on.call(\"end\", node, node.__data__, self.index, self.group);\n      stop();\n    }\n  }\n\n  function stop() {\n    self.state = ENDED;\n    self.timer.stop();\n    delete schedules[id];\n    for (var i in schedules) return; // eslint-disable-line no-unused-vars\n    delete node.__transition;\n  }\n}\n","import {STARTING, ENDING, ENDED} from \"./transition/schedule\";\n\nexport default function(node, name) {\n  var schedules = node.__transition,\n      schedule,\n      active,\n      empty = true,\n      i;\n\n  if (!schedules) return;\n\n  name = name == null ? null : name + \"\";\n\n  for (i in schedules) {\n    if ((schedule = schedules[i]).name !== name) { empty = false; continue; }\n    active = schedule.state > STARTING && schedule.state < ENDING;\n    schedule.state = ENDED;\n    schedule.timer.stop();\n    if (active) schedule.on.call(\"interrupt\", node, node.__data__, schedule.index, schedule.group);\n    delete schedules[i];\n  }\n\n  if (empty) delete node.__transition;\n}\n","import {get, set} from \"./schedule\";\n\nfunction tweenRemove(id, name) {\n  var tween0, tween1;\n  return function() {\n    var schedule = set(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = tween0 = tween;\n      for (var i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1 = tween1.slice();\n          tween1.splice(i, 1);\n          break;\n        }\n      }\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nfunction tweenFunction(id, name, value) {\n  var tween0, tween1;\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    var schedule = set(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = (tween0 = tween).slice();\n      for (var t = {name: name, value: value}, i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1[i] = t;\n          break;\n        }\n      }\n      if (i === n) tween1.push(t);\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nexport default function(name, value) {\n  var id = this._id;\n\n  name += \"\";\n\n  if (arguments.length < 2) {\n    var tween = get(this.node(), id).tween;\n    for (var i = 0, n = tween.length, t; i < n; ++i) {\n      if ((t = tween[i]).name === name) {\n        return t.value;\n      }\n    }\n    return null;\n  }\n\n  return this.each((value == null ? tweenRemove : tweenFunction)(id, name, value));\n}\n\nexport function tweenValue(transition, name, value) {\n  var id = transition._id;\n\n  transition.each(function() {\n    var schedule = set(this, id);\n    (schedule.value || (schedule.value = {}))[name] = value.apply(this, arguments);\n  });\n\n  return function(node) {\n    return get(node, id).value[name];\n  };\n}\n","import {color} from \"d3-color\";\nimport {interpolateNumber, interpolateRgb, interpolateString} from \"d3-interpolate\";\n\nexport default function(a, b) {\n  var c;\n  return (typeof b === \"number\" ? interpolateNumber\n      : b instanceof color ? interpolateRgb\n      : (c = color(b)) ? (b = c, interpolateRgb)\n      : interpolateString)(a, b);\n}\n","function removeFunction(id) {\n  return function() {\n    var parent = this.parentNode;\n    for (var i in this.__transition) if (+i !== id) return;\n    if (parent) parent.removeChild(this);\n  };\n}\n\nexport default function() {\n  return this.on(\"end.remove\", removeFunction(this._id));\n}\n","import {selection} from \"d3-selection\";\n\nvar Selection = selection.prototype.constructor;\n\nexport default function() {\n  return new Selection(this._groups, this._parents);\n}\n","import {tweenValue} from \"./tween\";\n\nfunction textConstant(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function() {\n    var value1 = value(this);\n    this.textContent = value1 == null ? \"\" : value1;\n  };\n}\n\nexport default function(value) {\n  return this.tween(\"text\", typeof value === \"function\"\n      ? textFunction(tweenValue(this, \"text\", value))\n      : textConstant(value == null ? \"\" : value + \"\"));\n}\n","import {selection} from \"d3-selection\";\nimport transition_attr from \"./attr\";\nimport transition_attrTween from \"./attrTween\";\nimport transition_delay from \"./delay\";\nimport transition_duration from \"./duration\";\nimport transition_ease from \"./ease\";\nimport transition_filter from \"./filter\";\nimport transition_merge from \"./merge\";\nimport transition_on from \"./on\";\nimport transition_remove from \"./remove\";\nimport transition_select from \"./select\";\nimport transition_selectAll from \"./selectAll\";\nimport transition_selection from \"./selection\";\nimport transition_style from \"./style\";\nimport transition_styleTween from \"./styleTween\";\nimport transition_text from \"./text\";\nimport transition_transition from \"./transition\";\nimport transition_tween from \"./tween\";\n\nvar id = 0;\n\nexport function Transition(groups, parents, name, id) {\n  this._groups = groups;\n  this._parents = parents;\n  this._name = name;\n  this._id = id;\n}\n\nexport default function transition(name) {\n  return selection().transition(name);\n}\n\nexport function newId() {\n  return ++id;\n}\n\nvar selection_prototype = selection.prototype;\n\nTransition.prototype = transition.prototype = {\n  constructor: Transition,\n  select: transition_select,\n  selectAll: transition_selectAll,\n  filter: transition_filter,\n  merge: transition_merge,\n  selection: transition_selection,\n  transition: transition_transition,\n  call: selection_prototype.call,\n  nodes: selection_prototype.nodes,\n  node: selection_prototype.node,\n  size: selection_prototype.size,\n  empty: selection_prototype.empty,\n  each: selection_prototype.each,\n  on: transition_on,\n  attr: transition_attr,\n  attrTween: transition_attrTween,\n  style: transition_style,\n  styleTween: transition_styleTween,\n  text: transition_text,\n  remove: transition_remove,\n  tween: transition_tween,\n  delay: transition_delay,\n  duration: transition_duration,\n  ease: transition_ease\n};\n","export function linear(t) {\n  return +t;\n}\n","export function quadIn(t) {\n  return t * t;\n}\n\nexport function quadOut(t) {\n  return t * (2 - t);\n}\n\nexport function quadInOut(t) {\n  return ((t *= 2) <= 1 ? t * t : --t * (2 - t) + 1) / 2;\n}\n","export function cubicIn(t) {\n  return t * t * t;\n}\n\nexport function cubicOut(t) {\n  return --t * t * t + 1;\n}\n\nexport function cubicInOut(t) {\n  return ((t *= 2) <= 1 ? t * t * t : (t -= 2) * t * t + 2) / 2;\n}\n","import {selector} from \"d3-selection\";\nimport {Transition} from \"./index\";\nimport schedule, {get} from \"./schedule\";\n\nexport default function(select) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select !== \"function\") select = selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n        schedule(subgroup[i], name, id, i, subgroup, get(node, id));\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, name, id);\n}\n","import {selectorAll} from \"d3-selection\";\nimport {Transition} from \"./index\";\nimport schedule, {get} from \"./schedule\";\n\nexport default function(select) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select !== \"function\") select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        for (var children = select.call(node, node.__data__, i, group), child, inherit = get(node, id), k = 0, l = children.length; k < l; ++k) {\n          if (child = children[k]) {\n            schedule(child, name, id, k, children, inherit);\n          }\n        }\n        subgroups.push(children);\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, parents, name, id);\n}\n","import {matcher} from \"d3-selection\";\nimport {Transition} from \"./index\";\n\nexport default function(match) {\n  if (typeof match !== \"function\") match = matcher(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, this._name, this._id);\n}\n","import {Transition} from \"./index\";\n\nexport default function(transition) {\n  if (transition._id !== this._id) throw new Error;\n\n  for (var groups0 = this._groups, groups1 = transition._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Transition(merges, this._parents, this._name, this._id);\n}\n","import {Transition, newId} from \"./index\";\nimport schedule, {get} from \"./schedule\";\n\nexport default function() {\n  var name = this._name,\n      id0 = this._id,\n      id1 = newId();\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        var inherit = get(node, id0);\n        schedule(node, name, id1, i, group, {\n          time: inherit.time + inherit.delay + inherit.duration,\n          delay: 0,\n          duration: inherit.duration,\n          ease: inherit.ease\n        });\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id1);\n}\n","import {get, set, init} from \"./schedule\";\n\nfunction start(name) {\n  return (name + \"\").trim().split(/^|\\s+/).every(function(t) {\n    var i = t.indexOf(\".\");\n    if (i >= 0) t = t.slice(0, i);\n    return !t || t === \"start\";\n  });\n}\n\nfunction onFunction(id, name, listener) {\n  var on0, on1, sit = start(name) ? init : set;\n  return function() {\n    var schedule = sit(this, id),\n        on = schedule.on;\n\n    // If this node shared a dispatch with the previous node,\n    // just assign the updated shared dispatch and we’re done!\n    // Otherwise, copy-on-write.\n    if (on !== on0) (on1 = (on0 = on).copy()).on(name, listener);\n\n    schedule.on = on1;\n  };\n}\n\nexport default function(name, listener) {\n  var id = this._id;\n\n  return arguments.length < 2\n      ? get(this.node(), id).on.on(name)\n      : this.each(onFunction(id, name, listener));\n}\n","import {interpolateTransformSvg as interpolateTransform} from \"d3-interpolate\";\nimport {namespace} from \"d3-selection\";\nimport {tweenValue} from \"./tween\";\nimport interpolate from \"./interpolate\";\n\nfunction attrRemove(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, interpolate, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = this.getAttribute(name);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value1);\n  };\n}\n\nfunction attrConstantNS(fullname, interpolate, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = this.getAttributeNS(fullname.space, fullname.local);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value1);\n  };\n}\n\nfunction attrFunction(name, interpolate, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0, value1 = value(this);\n    if (value1 == null) return void this.removeAttribute(name);\n    value0 = this.getAttribute(name);\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value10 = value1);\n  };\n}\n\nfunction attrFunctionNS(fullname, interpolate, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0, value1 = value(this);\n    if (value1 == null) return void this.removeAttributeNS(fullname.space, fullname.local);\n    value0 = this.getAttributeNS(fullname.space, fullname.local);\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value10 = value1);\n  };\n}\n\nexport default function(name, value) {\n  var fullname = namespace(name), i = fullname === \"transform\" ? interpolateTransform : interpolate;\n  return this.attrTween(name, typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS : attrFunction)(fullname, i, tweenValue(this, \"attr.\" + name, value))\n      : value == null ? (fullname.local ? attrRemoveNS : attrRemove)(fullname)\n      : (fullname.local ? attrConstantNS : attrConstant)(fullname, i, value + \"\"));\n}\n","import {namespace} from \"d3-selection\";\n\nfunction attrTweenNS(fullname, value) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.setAttributeNS(fullname.space, fullname.local, i(t));\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nfunction attrTween(name, value) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.setAttribute(name, i(t));\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nexport default function(name, value) {\n  var key = \"attr.\" + name;\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  var fullname = namespace(name);\n  return this.tween(key, (fullname.local ? attrTweenNS : attrTween)(fullname, value));\n}\n","import {interpolateTransformCss as interpolateTransform} from \"d3-interpolate\";\nimport {style} from \"d3-selection\";\nimport {tweenValue} from \"./tween\";\nimport interpolate from \"./interpolate\";\n\nfunction styleRemove(name, interpolate) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0 = style(this, name),\n        value1 = (this.style.removeProperty(name), style(this, name));\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value10 = value1);\n  };\n}\n\nfunction styleRemoveEnd(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, interpolate, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = style(this, name);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value1);\n  };\n}\n\nfunction styleFunction(name, interpolate, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0 = style(this, name),\n        value1 = value(this);\n    if (value1 == null) value1 = (this.style.removeProperty(name), style(this, name));\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value10 = value1);\n  };\n}\n\nexport default function(name, value, priority) {\n  var i = (name += \"\") === \"transform\" ? interpolateTransform : interpolate;\n  return value == null ? this\n          .styleTween(name, styleRemove(name, i))\n          .on(\"end.style.\" + name, styleRemoveEnd(name))\n      : this.styleTween(name, typeof value === \"function\"\n          ? styleFunction(name, i, tweenValue(this, \"style.\" + name, value))\n          : styleConstant(name, i, value + \"\"), priority);\n}\n","function styleTween(name, value, priority) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.style.setProperty(name, i(t), priority);\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nexport default function(name, value, priority) {\n  var key = \"style.\" + (name += \"\");\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  return this.tween(key, styleTween(name, value, priority == null ? \"\" : priority));\n}\n","import {get, init} from \"./schedule\";\n\nfunction delayFunction(id, value) {\n  return function() {\n    init(this, id).delay = +value.apply(this, arguments);\n  };\n}\n\nfunction delayConstant(id, value) {\n  return value = +value, function() {\n    init(this, id).delay = value;\n  };\n}\n\nexport default function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? delayFunction\n          : delayConstant)(id, value))\n      : get(this.node(), id).delay;\n}\n","import {get, set} from \"./schedule\";\n\nfunction durationFunction(id, value) {\n  return function() {\n    set(this, id).duration = +value.apply(this, arguments);\n  };\n}\n\nfunction durationConstant(id, value) {\n  return value = +value, function() {\n    set(this, id).duration = value;\n  };\n}\n\nexport default function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? durationFunction\n          : durationConstant)(id, value))\n      : get(this.node(), id).duration;\n}\n","import {get, set} from \"./schedule\";\n\nfunction easeConstant(id, value) {\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    set(this, id).ease = value;\n  };\n}\n\nexport default function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each(easeConstant(id, value))\n      : get(this.node(), id).ease;\n}\n","var exponent = 3;\n\nexport var polyIn = (function custom(e) {\n  e = +e;\n\n  function polyIn(t) {\n    return Math.pow(t, e);\n  }\n\n  polyIn.exponent = custom;\n\n  return polyIn;\n})(exponent);\n\nexport var polyOut = (function custom(e) {\n  e = +e;\n\n  function polyOut(t) {\n    return 1 - Math.pow(1 - t, e);\n  }\n\n  polyOut.exponent = custom;\n\n  return polyOut;\n})(exponent);\n\nexport var polyInOut = (function custom(e) {\n  e = +e;\n\n  function polyInOut(t) {\n    return ((t *= 2) <= 1 ? Math.pow(t, e) : 2 - Math.pow(2 - t, e)) / 2;\n  }\n\n  polyInOut.exponent = custom;\n\n  return polyInOut;\n})(exponent);\n","var pi = Math.PI,\n    halfPi = pi / 2;\n\nexport function sinIn(t) {\n  return 1 - Math.cos(t * halfPi);\n}\n\nexport function sinOut(t) {\n  return Math.sin(t * halfPi);\n}\n\nexport function sinInOut(t) {\n  return (1 - Math.cos(pi * t)) / 2;\n}\n","export function expIn(t) {\n  return Math.pow(2, 10 * t - 10);\n}\n\nexport function expOut(t) {\n  return 1 - Math.pow(2, -10 * t);\n}\n\nexport function expInOut(t) {\n  return ((t *= 2) <= 1 ? Math.pow(2, 10 * t - 10) : 2 - Math.pow(2, 10 - 10 * t)) / 2;\n}\n","export function circleIn(t) {\n  return 1 - Math.sqrt(1 - t * t);\n}\n\nexport function circleOut(t) {\n  return Math.sqrt(1 - --t * t);\n}\n\nexport function circleInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - Math.sqrt(1 - t * t) : Math.sqrt(1 - (t -= 2) * t) + 1) / 2;\n}\n","var b1 = 4 / 11,\n    b2 = 6 / 11,\n    b3 = 8 / 11,\n    b4 = 3 / 4,\n    b5 = 9 / 11,\n    b6 = 10 / 11,\n    b7 = 15 / 16,\n    b8 = 21 / 22,\n    b9 = 63 / 64,\n    b0 = 1 / b1 / b1;\n\nexport function bounceIn(t) {\n  return 1 - bounceOut(1 - t);\n}\n\nexport function bounceOut(t) {\n  return (t = +t) < b1 ? b0 * t * t : t < b3 ? b0 * (t -= b2) * t + b4 : t < b6 ? b0 * (t -= b5) * t + b7 : b0 * (t -= b8) * t + b9;\n}\n\nexport function bounceInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - bounceOut(1 - t) : bounceOut(t - 1) + 1) / 2;\n}\n","var overshoot = 1.70158;\n\nexport var backIn = (function custom(s) {\n  s = +s;\n\n  function backIn(t) {\n    return t * t * ((s + 1) * t - s);\n  }\n\n  backIn.overshoot = custom;\n\n  return backIn;\n})(overshoot);\n\nexport var backOut = (function custom(s) {\n  s = +s;\n\n  function backOut(t) {\n    return --t * t * ((s + 1) * t + s) + 1;\n  }\n\n  backOut.overshoot = custom;\n\n  return backOut;\n})(overshoot);\n\nexport var backInOut = (function custom(s) {\n  s = +s;\n\n  function backInOut(t) {\n    return ((t *= 2) < 1 ? t * t * ((s + 1) * t - s) : (t -= 2) * t * ((s + 1) * t + s) + 2) / 2;\n  }\n\n  backInOut.overshoot = custom;\n\n  return backInOut;\n})(overshoot);\n","var tau = 2 * Math.PI,\n    amplitude = 1,\n    period = 0.3;\n\nexport var elasticIn = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticIn(t) {\n    return a * Math.pow(2, 10 * --t) * Math.sin((s - t) / p);\n  }\n\n  elasticIn.amplitude = function(a) { return custom(a, p * tau); };\n  elasticIn.period = function(p) { return custom(a, p); };\n\n  return elasticIn;\n})(amplitude, period);\n\nexport var elasticOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticOut(t) {\n    return 1 - a * Math.pow(2, -10 * (t = +t)) * Math.sin((t + s) / p);\n  }\n\n  elasticOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticOut.period = function(p) { return custom(a, p); };\n\n  return elasticOut;\n})(amplitude, period);\n\nexport var elasticInOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticInOut(t) {\n    return ((t = t * 2 - 1) < 0\n        ? a * Math.pow(2, 10 * t) * Math.sin((s - t) / p)\n        : 2 - a * Math.pow(2, -10 * t) * Math.sin((s + t) / p)) / 2;\n  }\n\n  elasticInOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticInOut.period = function(p) { return custom(a, p); };\n\n  return elasticInOut;\n})(amplitude, period);\n","import {Transition, newId} from \"../transition/index\";\nimport schedule from \"../transition/schedule\";\nimport {easeCubicInOut} from \"d3-ease\";\nimport {now} from \"d3-timer\";\n\nvar defaultTiming = {\n  time: null, // Set on use.\n  delay: 0,\n  duration: 250,\n  ease: easeCubicInOut\n};\n\nfunction inherit(node, id) {\n  var timing;\n  while (!(timing = node.__transition) || !(timing = timing[id])) {\n    if (!(node = node.parentNode)) {\n      return defaultTiming.time = now(), defaultTiming;\n    }\n  }\n  return timing;\n}\n\nexport default function(name) {\n  var id,\n      timing;\n\n  if (name instanceof Transition) {\n    id = name._id, name = name._name;\n  } else {\n    id = newId(), (timing = defaultTiming).time = now(), name = name == null ? null : name + \"\";\n  }\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        schedule(node, name, id, i, group, timing || inherit(node, id));\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id);\n}\n","import {selection} from \"d3-selection\";\nimport selection_interrupt from \"./interrupt\";\nimport selection_transition from \"./transition\";\n\nselection.prototype.interrupt = selection_interrupt;\nselection.prototype.transition = selection_transition;\n","import interrupt from \"../interrupt\";\n\nexport default function(name) {\n  return this.each(function() {\n    interrupt(this, name);\n  });\n}\n","import {Transition} from \"./transition/index\";\nimport {SCHEDULED} from \"./transition/schedule\";\n\nvar root = [null];\n\nexport default function(node, name) {\n  var schedules = node.__transition,\n      schedule,\n      i;\n\n  if (schedules) {\n    name = name == null ? null : name + \"\";\n    for (i in schedules) {\n      if ((schedule = schedules[i]).state > SCHEDULED && schedule.name === name) {\n        return new Transition([[node]], root, name, +i);\n      }\n    }\n  }\n\n  return null;\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function(target, type, selection) {\n  this.target = target;\n  this.type = type;\n  this.selection = selection;\n}\n","import {event} from \"d3-selection\";\n\nexport function nopropagation() {\n  event.stopImmediatePropagation();\n}\n\nexport default function() {\n  event.preventDefault();\n  event.stopImmediatePropagation();\n}\n","import {dispatch} from \"d3-dispatch\";\nimport {dragDisable, dragEnable} from \"d3-drag\";\nimport {interpolate} from \"d3-interpolate\";\nimport {customEvent, event, mouse, select} from \"d3-selection\";\nimport {interrupt} from \"d3-transition\";\nimport constant from \"./constant\";\nimport BrushEvent from \"./event\";\nimport noevent, {nopropagation} from \"./noevent\";\n\nvar MODE_DRAG = {name: \"drag\"},\n    MODE_SPACE = {name: \"space\"},\n    MODE_HANDLE = {name: \"handle\"},\n    MODE_CENTER = {name: \"center\"};\n\nvar X = {\n  name: \"x\",\n  handles: [\"e\", \"w\"].map(type),\n  input: function(x, e) { return x && [[x[0], e[0][1]], [x[1], e[1][1]]]; },\n  output: function(xy) { return xy && [xy[0][0], xy[1][0]]; }\n};\n\nvar Y = {\n  name: \"y\",\n  handles: [\"n\", \"s\"].map(type),\n  input: function(y, e) { return y && [[e[0][0], y[0]], [e[1][0], y[1]]]; },\n  output: function(xy) { return xy && [xy[0][1], xy[1][1]]; }\n};\n\nvar XY = {\n  name: \"xy\",\n  handles: [\"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\"].map(type),\n  input: function(xy) { return xy; },\n  output: function(xy) { return xy; }\n};\n\nvar cursors = {\n  overlay: \"crosshair\",\n  selection: \"move\",\n  n: \"ns-resize\",\n  e: \"ew-resize\",\n  s: \"ns-resize\",\n  w: \"ew-resize\",\n  nw: \"nwse-resize\",\n  ne: \"nesw-resize\",\n  se: \"nwse-resize\",\n  sw: \"nesw-resize\"\n};\n\nvar flipX = {\n  e: \"w\",\n  w: \"e\",\n  nw: \"ne\",\n  ne: \"nw\",\n  se: \"sw\",\n  sw: \"se\"\n};\n\nvar flipY = {\n  n: \"s\",\n  s: \"n\",\n  nw: \"sw\",\n  ne: \"se\",\n  se: \"ne\",\n  sw: \"nw\"\n};\n\nvar signsX = {\n  overlay: +1,\n  selection: +1,\n  n: null,\n  e: +1,\n  s: null,\n  w: -1,\n  nw: -1,\n  ne: +1,\n  se: +1,\n  sw: -1\n};\n\nvar signsY = {\n  overlay: +1,\n  selection: +1,\n  n: -1,\n  e: null,\n  s: +1,\n  w: null,\n  nw: -1,\n  ne: -1,\n  se: +1,\n  sw: +1\n};\n\nfunction type(t) {\n  return {type: t};\n}\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter() {\n  return !event.button;\n}\n\nfunction defaultExtent() {\n  var svg = this.ownerSVGElement || this;\n  return [[0, 0], [svg.width.baseVal.value, svg.height.baseVal.value]];\n}\n\n// Like d3.local, but with the name “__brush” rather than auto-generated.\nfunction local(node) {\n  while (!node.__brush) if (!(node = node.parentNode)) return;\n  return node.__brush;\n}\n\nfunction empty(extent) {\n  return extent[0][0] === extent[1][0]\n      || extent[0][1] === extent[1][1];\n}\n\nexport function brushSelection(node) {\n  var state = node.__brush;\n  return state ? state.dim.output(state.selection) : null;\n}\n\nexport function brushX() {\n  return brush(X);\n}\n\nexport function brushY() {\n  return brush(Y);\n}\n\nexport default function() {\n  return brush(XY);\n}\n\nfunction brush(dim) {\n  var extent = defaultExtent,\n      filter = defaultFilter,\n      listeners = dispatch(brush, \"start\", \"brush\", \"end\"),\n      handleSize = 6,\n      touchending;\n\n  function brush(group) {\n    var overlay = group\n        .property(\"__brush\", initialize)\n      .selectAll(\".overlay\")\n      .data([type(\"overlay\")]);\n\n    overlay.enter().append(\"rect\")\n        .attr(\"class\", \"overlay\")\n        .attr(\"pointer-events\", \"all\")\n        .attr(\"cursor\", cursors.overlay)\n      .merge(overlay)\n        .each(function() {\n          var extent = local(this).extent;\n          select(this)\n              .attr(\"x\", extent[0][0])\n              .attr(\"y\", extent[0][1])\n              .attr(\"width\", extent[1][0] - extent[0][0])\n              .attr(\"height\", extent[1][1] - extent[0][1]);\n        });\n\n    group.selectAll(\".selection\")\n      .data([type(\"selection\")])\n      .enter().append(\"rect\")\n        .attr(\"class\", \"selection\")\n        .attr(\"cursor\", cursors.selection)\n        .attr(\"fill\", \"#777\")\n        .attr(\"fill-opacity\", 0.3)\n        .attr(\"stroke\", \"#fff\")\n        .attr(\"shape-rendering\", \"crispEdges\");\n\n    var handle = group.selectAll(\".handle\")\n      .data(dim.handles, function(d) { return d.type; });\n\n    handle.exit().remove();\n\n    handle.enter().append(\"rect\")\n        .attr(\"class\", function(d) { return \"handle handle--\" + d.type; })\n        .attr(\"cursor\", function(d) { return cursors[d.type]; });\n\n    group\n        .each(redraw)\n        .attr(\"fill\", \"none\")\n        .attr(\"pointer-events\", \"all\")\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\")\n        .on(\"mousedown.brush touchstart.brush\", started);\n  }\n\n  brush.move = function(group, selection) {\n    if (group.selection) {\n      group\n          .on(\"start.brush\", function() { emitter(this, arguments).beforestart().start(); })\n          .on(\"interrupt.brush end.brush\", function() { emitter(this, arguments).end(); })\n          .tween(\"brush\", function() {\n            var that = this,\n                state = that.__brush,\n                emit = emitter(that, arguments),\n                selection0 = state.selection,\n                selection1 = dim.input(typeof selection === \"function\" ? selection.apply(this, arguments) : selection, state.extent),\n                i = interpolate(selection0, selection1);\n\n            function tween(t) {\n              state.selection = t === 1 && empty(selection1) ? null : i(t);\n              redraw.call(that);\n              emit.brush();\n            }\n\n            return selection0 && selection1 ? tween : tween(1);\n          });\n    } else {\n      group\n          .each(function() {\n            var that = this,\n                args = arguments,\n                state = that.__brush,\n                selection1 = dim.input(typeof selection === \"function\" ? selection.apply(that, args) : selection, state.extent),\n                emit = emitter(that, args).beforestart();\n\n            interrupt(that);\n            state.selection = selection1 == null || empty(selection1) ? null : selection1;\n            redraw.call(that);\n            emit.start().brush().end();\n          });\n    }\n  };\n\n  function redraw() {\n    var group = select(this),\n        selection = local(this).selection;\n\n    if (selection) {\n      group.selectAll(\".selection\")\n          .style(\"display\", null)\n          .attr(\"x\", selection[0][0])\n          .attr(\"y\", selection[0][1])\n          .attr(\"width\", selection[1][0] - selection[0][0])\n          .attr(\"height\", selection[1][1] - selection[0][1]);\n\n      group.selectAll(\".handle\")\n          .style(\"display\", null)\n          .attr(\"x\", function(d) { return d.type[d.type.length - 1] === \"e\" ? selection[1][0] - handleSize / 2 : selection[0][0] - handleSize / 2; })\n          .attr(\"y\", function(d) { return d.type[0] === \"s\" ? selection[1][1] - handleSize / 2 : selection[0][1] - handleSize / 2; })\n          .attr(\"width\", function(d) { return d.type === \"n\" || d.type === \"s\" ? selection[1][0] - selection[0][0] + handleSize : handleSize; })\n          .attr(\"height\", function(d) { return d.type === \"e\" || d.type === \"w\" ? selection[1][1] - selection[0][1] + handleSize : handleSize; });\n    }\n\n    else {\n      group.selectAll(\".selection,.handle\")\n          .style(\"display\", \"none\")\n          .attr(\"x\", null)\n          .attr(\"y\", null)\n          .attr(\"width\", null)\n          .attr(\"height\", null);\n    }\n  }\n\n  function emitter(that, args) {\n    return that.__brush.emitter || new Emitter(that, args);\n  }\n\n  function Emitter(that, args) {\n    this.that = that;\n    this.args = args;\n    this.state = that.__brush;\n    this.active = 0;\n  }\n\n  Emitter.prototype = {\n    beforestart: function() {\n      if (++this.active === 1) this.state.emitter = this, this.starting = true;\n      return this;\n    },\n    start: function() {\n      if (this.starting) this.starting = false, this.emit(\"start\");\n      return this;\n    },\n    brush: function() {\n      this.emit(\"brush\");\n      return this;\n    },\n    end: function() {\n      if (--this.active === 0) delete this.state.emitter, this.emit(\"end\");\n      return this;\n    },\n    emit: function(type) {\n      customEvent(new BrushEvent(brush, type, dim.output(this.state.selection)), listeners.apply, listeners, [type, this.that, this.args]);\n    }\n  };\n\n  function started() {\n    if (event.touches) { if (event.changedTouches.length < event.touches.length) return noevent(); }\n    else if (touchending) return;\n    if (!filter.apply(this, arguments)) return;\n\n    var that = this,\n        type = event.target.__data__.type,\n        mode = (event.metaKey ? type = \"overlay\" : type) === \"selection\" ? MODE_DRAG : (event.altKey ? MODE_CENTER : MODE_HANDLE),\n        signX = dim === Y ? null : signsX[type],\n        signY = dim === X ? null : signsY[type],\n        state = local(that),\n        extent = state.extent,\n        selection = state.selection,\n        W = extent[0][0], w0, w1,\n        N = extent[0][1], n0, n1,\n        E = extent[1][0], e0, e1,\n        S = extent[1][1], s0, s1,\n        dx,\n        dy,\n        moving,\n        shifting = signX && signY && event.shiftKey,\n        lockX,\n        lockY,\n        point0 = mouse(that),\n        point = point0,\n        emit = emitter(that, arguments).beforestart();\n\n    if (type === \"overlay\") {\n      state.selection = selection = [\n        [w0 = dim === Y ? W : point0[0], n0 = dim === X ? N : point0[1]],\n        [e0 = dim === Y ? E : w0, s0 = dim === X ? S : n0]\n      ];\n    } else {\n      w0 = selection[0][0];\n      n0 = selection[0][1];\n      e0 = selection[1][0];\n      s0 = selection[1][1];\n    }\n\n    w1 = w0;\n    n1 = n0;\n    e1 = e0;\n    s1 = s0;\n\n    var group = select(that)\n        .attr(\"pointer-events\", \"none\");\n\n    var overlay = group.selectAll(\".overlay\")\n        .attr(\"cursor\", cursors[type]);\n\n    if (event.touches) {\n      group\n          .on(\"touchmove.brush\", moved, true)\n          .on(\"touchend.brush touchcancel.brush\", ended, true);\n    } else {\n      var view = select(event.view)\n          .on(\"keydown.brush\", keydowned, true)\n          .on(\"keyup.brush\", keyupped, true)\n          .on(\"mousemove.brush\", moved, true)\n          .on(\"mouseup.brush\", ended, true);\n\n      dragDisable(event.view);\n    }\n\n    nopropagation();\n    interrupt(that);\n    redraw.call(that);\n    emit.start();\n\n    function moved() {\n      var point1 = mouse(that);\n      if (shifting && !lockX && !lockY) {\n        if (Math.abs(point1[0] - point[0]) > Math.abs(point1[1] - point[1])) lockY = true;\n        else lockX = true;\n      }\n      point = point1;\n      moving = true;\n      noevent();\n      move();\n    }\n\n    function move() {\n      var t;\n\n      dx = point[0] - point0[0];\n      dy = point[1] - point0[1];\n\n      switch (mode) {\n        case MODE_SPACE:\n        case MODE_DRAG: {\n          if (signX) dx = Math.max(W - w0, Math.min(E - e0, dx)), w1 = w0 + dx, e1 = e0 + dx;\n          if (signY) dy = Math.max(N - n0, Math.min(S - s0, dy)), n1 = n0 + dy, s1 = s0 + dy;\n          break;\n        }\n        case MODE_HANDLE: {\n          if (signX < 0) dx = Math.max(W - w0, Math.min(E - w0, dx)), w1 = w0 + dx, e1 = e0;\n          else if (signX > 0) dx = Math.max(W - e0, Math.min(E - e0, dx)), w1 = w0, e1 = e0 + dx;\n          if (signY < 0) dy = Math.max(N - n0, Math.min(S - n0, dy)), n1 = n0 + dy, s1 = s0;\n          else if (signY > 0) dy = Math.max(N - s0, Math.min(S - s0, dy)), n1 = n0, s1 = s0 + dy;\n          break;\n        }\n        case MODE_CENTER: {\n          if (signX) w1 = Math.max(W, Math.min(E, w0 - dx * signX)), e1 = Math.max(W, Math.min(E, e0 + dx * signX));\n          if (signY) n1 = Math.max(N, Math.min(S, n0 - dy * signY)), s1 = Math.max(N, Math.min(S, s0 + dy * signY));\n          break;\n        }\n      }\n\n      if (e1 < w1) {\n        signX *= -1;\n        t = w0, w0 = e0, e0 = t;\n        t = w1, w1 = e1, e1 = t;\n        if (type in flipX) overlay.attr(\"cursor\", cursors[type = flipX[type]]);\n      }\n\n      if (s1 < n1) {\n        signY *= -1;\n        t = n0, n0 = s0, s0 = t;\n        t = n1, n1 = s1, s1 = t;\n        if (type in flipY) overlay.attr(\"cursor\", cursors[type = flipY[type]]);\n      }\n\n      if (state.selection) selection = state.selection; // May be set by brush.move!\n      if (lockX) w1 = selection[0][0], e1 = selection[1][0];\n      if (lockY) n1 = selection[0][1], s1 = selection[1][1];\n\n      if (selection[0][0] !== w1\n          || selection[0][1] !== n1\n          || selection[1][0] !== e1\n          || selection[1][1] !== s1) {\n        state.selection = [[w1, n1], [e1, s1]];\n        redraw.call(that);\n        emit.brush();\n      }\n    }\n\n    function ended() {\n      nopropagation();\n      if (event.touches) {\n        if (event.touches.length) return;\n        if (touchending) clearTimeout(touchending);\n        touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n        group.on(\"touchmove.brush touchend.brush touchcancel.brush\", null);\n      } else {\n        dragEnable(event.view, moving);\n        view.on(\"keydown.brush keyup.brush mousemove.brush mouseup.brush\", null);\n      }\n      group.attr(\"pointer-events\", \"all\");\n      overlay.attr(\"cursor\", cursors.overlay);\n      if (state.selection) selection = state.selection; // May be set by brush.move (on start)!\n      if (empty(selection)) state.selection = null, redraw.call(that);\n      emit.end();\n    }\n\n    function keydowned() {\n      switch (event.keyCode) {\n        case 16: { // SHIFT\n          shifting = signX && signY;\n          break;\n        }\n        case 18: { // ALT\n          if (mode === MODE_HANDLE) {\n            if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n            if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n            mode = MODE_CENTER;\n            move();\n          }\n          break;\n        }\n        case 32: { // SPACE; takes priority over ALT\n          if (mode === MODE_HANDLE || mode === MODE_CENTER) {\n            if (signX < 0) e0 = e1 - dx; else if (signX > 0) w0 = w1 - dx;\n            if (signY < 0) s0 = s1 - dy; else if (signY > 0) n0 = n1 - dy;\n            mode = MODE_SPACE;\n            overlay.attr(\"cursor\", cursors.selection);\n            move();\n          }\n          break;\n        }\n        default: return;\n      }\n      noevent();\n    }\n\n    function keyupped() {\n      switch (event.keyCode) {\n        case 16: { // SHIFT\n          if (shifting) {\n            lockX = lockY = shifting = false;\n            move();\n          }\n          break;\n        }\n        case 18: { // ALT\n          if (mode === MODE_CENTER) {\n            if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n            if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n            mode = MODE_HANDLE;\n            move();\n          }\n          break;\n        }\n        case 32: { // SPACE\n          if (mode === MODE_SPACE) {\n            if (event.altKey) {\n              if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n              if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n              mode = MODE_CENTER;\n            } else {\n              if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n              if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n              mode = MODE_HANDLE;\n            }\n            overlay.attr(\"cursor\", cursors[type]);\n            move();\n          }\n          break;\n        }\n        default: return;\n      }\n      noevent();\n    }\n  }\n\n  function initialize() {\n    var state = this.__brush || {selection: null};\n    state.extent = extent.apply(this, arguments);\n    state.dim = dim;\n    return state;\n  }\n\n  brush.extent = function(_) {\n    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), brush) : extent;\n  };\n\n  brush.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant(!!_), brush) : filter;\n  };\n\n  brush.handleSize = function(_) {\n    return arguments.length ? (handleSize = +_, brush) : handleSize;\n  };\n\n  brush.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? brush : value;\n  };\n\n  return brush;\n}\n","export var cos = Math.cos;\nexport var sin = Math.sin;\nexport var pi = Math.PI;\nexport var halfPi = pi / 2;\nexport var tau = pi * 2;\nexport var max = Math.max;\n","import {range} from \"d3-array\";\nimport {max, tau} from \"./math\";\n\nfunction compareValue(compare) {\n  return function(a, b) {\n    return compare(\n      a.source.value + a.target.value,\n      b.source.value + b.target.value\n    );\n  };\n}\n\nexport default function() {\n  var padAngle = 0,\n      sortGroups = null,\n      sortSubgroups = null,\n      sortChords = null;\n\n  function chord(matrix) {\n    var n = matrix.length,\n        groupSums = [],\n        groupIndex = range(n),\n        subgroupIndex = [],\n        chords = [],\n        groups = chords.groups = new Array(n),\n        subgroups = new Array(n * n),\n        k,\n        x,\n        x0,\n        dx,\n        i,\n        j;\n\n    // Compute the sum.\n    k = 0, i = -1; while (++i < n) {\n      x = 0, j = -1; while (++j < n) {\n        x += matrix[i][j];\n      }\n      groupSums.push(x);\n      subgroupIndex.push(range(n));\n      k += x;\n    }\n\n    // Sort groups…\n    if (sortGroups) groupIndex.sort(function(a, b) {\n      return sortGroups(groupSums[a], groupSums[b]);\n    });\n\n    // Sort subgroups…\n    if (sortSubgroups) subgroupIndex.forEach(function(d, i) {\n      d.sort(function(a, b) {\n        return sortSubgroups(matrix[i][a], matrix[i][b]);\n      });\n    });\n\n    // Convert the sum to scaling factor for [0, 2pi].\n    // TODO Allow start and end angle to be specified?\n    // TODO Allow padding to be specified as percentage?\n    k = max(0, tau - padAngle * n) / k;\n    dx = k ? padAngle : tau / n;\n\n    // Compute the start and end angle for each group and subgroup.\n    // Note: Opera has a bug reordering object literal properties!\n    x = 0, i = -1; while (++i < n) {\n      x0 = x, j = -1; while (++j < n) {\n        var di = groupIndex[i],\n            dj = subgroupIndex[di][j],\n            v = matrix[di][dj],\n            a0 = x,\n            a1 = x += v * k;\n        subgroups[dj * n + di] = {\n          index: di,\n          subindex: dj,\n          startAngle: a0,\n          endAngle: a1,\n          value: v\n        };\n      }\n      groups[di] = {\n        index: di,\n        startAngle: x0,\n        endAngle: x,\n        value: groupSums[di]\n      };\n      x += dx;\n    }\n\n    // Generate chords for each (non-empty) subgroup-subgroup link.\n    i = -1; while (++i < n) {\n      j = i - 1; while (++j < n) {\n        var source = subgroups[j * n + i],\n            target = subgroups[i * n + j];\n        if (source.value || target.value) {\n          chords.push(source.value < target.value\n              ? {source: target, target: source}\n              : {source: source, target: target});\n        }\n      }\n    }\n\n    return sortChords ? chords.sort(sortChords) : chords;\n  }\n\n  chord.padAngle = function(_) {\n    return arguments.length ? (padAngle = max(0, _), chord) : padAngle;\n  };\n\n  chord.sortGroups = function(_) {\n    return arguments.length ? (sortGroups = _, chord) : sortGroups;\n  };\n\n  chord.sortSubgroups = function(_) {\n    return arguments.length ? (sortSubgroups = _, chord) : sortSubgroups;\n  };\n\n  chord.sortChords = function(_) {\n    return arguments.length ? (_ == null ? sortChords = null : (sortChords = compareValue(_))._ = _, chord) : sortChords && sortChords._;\n  };\n\n  return chord;\n}\n","export var slice = Array.prototype.slice;\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","var pi = Math.PI,\n    tau = 2 * pi,\n    epsilon = 1e-6,\n    tauEpsilon = tau - epsilon;\n\nfunction Path() {\n  this._x0 = this._y0 = // start of current subpath\n  this._x1 = this._y1 = null; // end of current subpath\n  this._ = \"\";\n}\n\nfunction path() {\n  return new Path;\n}\n\nPath.prototype = path.prototype = {\n  constructor: Path,\n  moveTo: function(x, y) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y);\n  },\n  closePath: function() {\n    if (this._x1 !== null) {\n      this._x1 = this._x0, this._y1 = this._y0;\n      this._ += \"Z\";\n    }\n  },\n  lineTo: function(x, y) {\n    this._ += \"L\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  quadraticCurveTo: function(x1, y1, x, y) {\n    this._ += \"Q\" + (+x1) + \",\" + (+y1) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) {\n    this._ += \"C\" + (+x1) + \",\" + (+y1) + \",\" + (+x2) + \",\" + (+y2) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  arcTo: function(x1, y1, x2, y2, r) {\n    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\n    var x0 = this._x1,\n        y0 = this._y1,\n        x21 = x2 - x1,\n        y21 = y2 - y1,\n        x01 = x0 - x1,\n        y01 = y0 - y1,\n        l01_2 = x01 * x01 + y01 * y01;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x1,y1).\n    if (this._x1 === null) {\n      this._ += \"M\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\n    else if (!(l01_2 > epsilon)) {}\n\n    // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\n    // Equivalently, is (x1,y1) coincident with (x2,y2)?\n    // Or, is the radius zero? Line to (x1,y1).\n    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon) || !r) {\n      this._ += \"L\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Otherwise, draw an arc!\n    else {\n      var x20 = x2 - x0,\n          y20 = y2 - y0,\n          l21_2 = x21 * x21 + y21 * y21,\n          l20_2 = x20 * x20 + y20 * y20,\n          l21 = Math.sqrt(l21_2),\n          l01 = Math.sqrt(l01_2),\n          l = r * Math.tan((pi - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\n          t01 = l / l01,\n          t21 = l / l21;\n\n      // If the start tangent is not coincident with (x0,y0), line to.\n      if (Math.abs(t01 - 1) > epsilon) {\n        this._ += \"L\" + (x1 + t01 * x01) + \",\" + (y1 + t01 * y01);\n      }\n\n      this._ += \"A\" + r + \",\" + r + \",0,0,\" + (+(y01 * x20 > x01 * y20)) + \",\" + (this._x1 = x1 + t21 * x21) + \",\" + (this._y1 = y1 + t21 * y21);\n    }\n  },\n  arc: function(x, y, r, a0, a1, ccw) {\n    x = +x, y = +y, r = +r;\n    var dx = r * Math.cos(a0),\n        dy = r * Math.sin(a0),\n        x0 = x + dx,\n        y0 = y + dy,\n        cw = 1 ^ ccw,\n        da = ccw ? a0 - a1 : a1 - a0;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x0,y0).\n    if (this._x1 === null) {\n      this._ += \"M\" + x0 + \",\" + y0;\n    }\n\n    // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\n    else if (Math.abs(this._x1 - x0) > epsilon || Math.abs(this._y1 - y0) > epsilon) {\n      this._ += \"L\" + x0 + \",\" + y0;\n    }\n\n    // Is this arc empty? We’re done.\n    if (!r) return;\n\n    // Does the angle go the wrong way? Flip the direction.\n    if (da < 0) da = da % tau + tau;\n\n    // Is this a complete circle? Draw two arcs to complete the circle.\n    if (da > tauEpsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (x - dx) + \",\" + (y - dy) + \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (this._x1 = x0) + \",\" + (this._y1 = y0);\n    }\n\n    // Is this arc non-empty? Draw an arc!\n    else if (da > epsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,\" + (+(da >= pi)) + \",\" + cw + \",\" + (this._x1 = x + r * Math.cos(a1)) + \",\" + (this._y1 = y + r * Math.sin(a1));\n    }\n  },\n  rect: function(x, y, w, h) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y) + \"h\" + (+w) + \"v\" + (+h) + \"h\" + (-w) + \"Z\";\n  },\n  toString: function() {\n    return this._;\n  }\n};\n\nexport default path;\n","import {slice} from \"./array\";\nimport constant from \"./constant\";\nimport {cos, halfPi, sin} from \"./math\";\nimport {path} from \"d3-path\";\n\nfunction defaultSource(d) {\n  return d.source;\n}\n\nfunction defaultTarget(d) {\n  return d.target;\n}\n\nfunction defaultRadius(d) {\n  return d.radius;\n}\n\nfunction defaultStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction defaultEndAngle(d) {\n  return d.endAngle;\n}\n\nexport default function() {\n  var source = defaultSource,\n      target = defaultTarget,\n      radius = defaultRadius,\n      startAngle = defaultStartAngle,\n      endAngle = defaultEndAngle,\n      context = null;\n\n  function ribbon() {\n    var buffer,\n        argv = slice.call(arguments),\n        s = source.apply(this, argv),\n        t = target.apply(this, argv),\n        sr = +radius.apply(this, (argv[0] = s, argv)),\n        sa0 = startAngle.apply(this, argv) - halfPi,\n        sa1 = endAngle.apply(this, argv) - halfPi,\n        sx0 = sr * cos(sa0),\n        sy0 = sr * sin(sa0),\n        tr = +radius.apply(this, (argv[0] = t, argv)),\n        ta0 = startAngle.apply(this, argv) - halfPi,\n        ta1 = endAngle.apply(this, argv) - halfPi;\n\n    if (!context) context = buffer = path();\n\n    context.moveTo(sx0, sy0);\n    context.arc(0, 0, sr, sa0, sa1);\n    if (sa0 !== ta0 || sa1 !== ta1) { // TODO sr !== tr?\n      context.quadraticCurveTo(0, 0, tr * cos(ta0), tr * sin(ta0));\n      context.arc(0, 0, tr, ta0, ta1);\n    }\n    context.quadraticCurveTo(0, 0, sx0, sy0);\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  ribbon.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant(+_), ribbon) : radius;\n  };\n\n  ribbon.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant(+_), ribbon) : startAngle;\n  };\n\n  ribbon.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant(+_), ribbon) : endAngle;\n  };\n\n  ribbon.source = function(_) {\n    return arguments.length ? (source = _, ribbon) : source;\n  };\n\n  ribbon.target = function(_) {\n    return arguments.length ? (target = _, ribbon) : target;\n  };\n\n  ribbon.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), ribbon) : context;\n  };\n\n  return ribbon;\n}\n","export var prefix = \"$\";\n\nfunction Map() {}\n\nMap.prototype = map.prototype = {\n  constructor: Map,\n  has: function(key) {\n    return (prefix + key) in this;\n  },\n  get: function(key) {\n    return this[prefix + key];\n  },\n  set: function(key, value) {\n    this[prefix + key] = value;\n    return this;\n  },\n  remove: function(key) {\n    var property = prefix + key;\n    return property in this && delete this[property];\n  },\n  clear: function() {\n    for (var property in this) if (property[0] === prefix) delete this[property];\n  },\n  keys: function() {\n    var keys = [];\n    for (var property in this) if (property[0] === prefix) keys.push(property.slice(1));\n    return keys;\n  },\n  values: function() {\n    var values = [];\n    for (var property in this) if (property[0] === prefix) values.push(this[property]);\n    return values;\n  },\n  entries: function() {\n    var entries = [];\n    for (var property in this) if (property[0] === prefix) entries.push({key: property.slice(1), value: this[property]});\n    return entries;\n  },\n  size: function() {\n    var size = 0;\n    for (var property in this) if (property[0] === prefix) ++size;\n    return size;\n  },\n  empty: function() {\n    for (var property in this) if (property[0] === prefix) return false;\n    return true;\n  },\n  each: function(f) {\n    for (var property in this) if (property[0] === prefix) f(this[property], property.slice(1), this);\n  }\n};\n\nfunction map(object, f) {\n  var map = new Map;\n\n  // Copy constructor.\n  if (object instanceof Map) object.each(function(value, key) { map.set(key, value); });\n\n  // Index array by numeric index or specified key function.\n  else if (Array.isArray(object)) {\n    var i = -1,\n        n = object.length,\n        o;\n\n    if (f == null) while (++i < n) map.set(i, object[i]);\n    else while (++i < n) map.set(f(o = object[i], i, object), o);\n  }\n\n  // Convert object to map.\n  else if (object) for (var key in object) map.set(key, object[key]);\n\n  return map;\n}\n\nexport default map;\n","import map from \"./map\";\n\nexport default function() {\n  var keys = [],\n      sortKeys = [],\n      sortValues,\n      rollup,\n      nest;\n\n  function apply(array, depth, createResult, setResult) {\n    if (depth >= keys.length) {\n      if (sortValues != null) array.sort(sortValues);\n      return rollup != null ? rollup(array) : array;\n    }\n\n    var i = -1,\n        n = array.length,\n        key = keys[depth++],\n        keyValue,\n        value,\n        valuesByKey = map(),\n        values,\n        result = createResult();\n\n    while (++i < n) {\n      if (values = valuesByKey.get(keyValue = key(value = array[i]) + \"\")) {\n        values.push(value);\n      } else {\n        valuesByKey.set(keyValue, [value]);\n      }\n    }\n\n    valuesByKey.each(function(values, key) {\n      setResult(result, key, apply(values, depth, createResult, setResult));\n    });\n\n    return result;\n  }\n\n  function entries(map, depth) {\n    if (++depth > keys.length) return map;\n    var array, sortKey = sortKeys[depth - 1];\n    if (rollup != null && depth >= keys.length) array = map.entries();\n    else array = [], map.each(function(v, k) { array.push({key: k, values: entries(v, depth)}); });\n    return sortKey != null ? array.sort(function(a, b) { return sortKey(a.key, b.key); }) : array;\n  }\n\n  return nest = {\n    object: function(array) { return apply(array, 0, createObject, setObject); },\n    map: function(array) { return apply(array, 0, createMap, setMap); },\n    entries: function(array) { return entries(apply(array, 0, createMap, setMap), 0); },\n    key: function(d) { keys.push(d); return nest; },\n    sortKeys: function(order) { sortKeys[keys.length - 1] = order; return nest; },\n    sortValues: function(order) { sortValues = order; return nest; },\n    rollup: function(f) { rollup = f; return nest; }\n  };\n}\n\nfunction createObject() {\n  return {};\n}\n\nfunction setObject(object, key, value) {\n  object[key] = value;\n}\n\nfunction createMap() {\n  return map();\n}\n\nfunction setMap(map, key, value) {\n  map.set(key, value);\n}\n","import {default as map, prefix} from \"./map\";\n\nfunction Set() {}\n\nvar proto = map.prototype;\n\nSet.prototype = set.prototype = {\n  constructor: Set,\n  has: proto.has,\n  add: function(value) {\n    value += \"\";\n    this[prefix + value] = value;\n    return this;\n  },\n  remove: proto.remove,\n  clear: proto.clear,\n  values: proto.keys,\n  size: proto.size,\n  empty: proto.empty,\n  each: proto.each\n};\n\nfunction set(object, f) {\n  var set = new Set;\n\n  // Copy constructor.\n  if (object instanceof Set) object.each(function(value) { set.add(value); });\n\n  // Otherwise, assume it’s an array.\n  else if (object) {\n    var i = -1, n = object.length;\n    if (f == null) while (++i < n) set.add(object[i]);\n    else while (++i < n) set.add(f(object[i], i, object));\n  }\n\n  return set;\n}\n\nexport default set;\n","export default function(map) {\n  var keys = [];\n  for (var key in map) keys.push(key);\n  return keys;\n}\n","export default function(map) {\n  var values = [];\n  for (var key in map) values.push(map[key]);\n  return values;\n}\n","export default function(map) {\n  var entries = [];\n  for (var key in map) entries.push({key: key, value: map[key]});\n  return entries;\n}\n","var array = Array.prototype;\n\nexport var slice = array.slice;\n","export default function(a, b) {\n  return a - b;\n}\n","export default function(ring) {\n  var i = 0, n = ring.length, area = ring[n - 1][1] * ring[0][0] - ring[n - 1][0] * ring[0][1];\n  while (++i < n) area += ring[i - 1][1] * ring[i][0] - ring[i - 1][0] * ring[i][1];\n  return area;\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function(ring, hole) {\n  var i = -1, n = hole.length, c;\n  while (++i < n) if (c = ringContains(ring, hole[i])) return c;\n  return 0;\n}\n\nfunction ringContains(ring, point) {\n  var x = point[0], y = point[1], contains = -1;\n  for (var i = 0, n = ring.length, j = n - 1; i < n; j = i++) {\n    var pi = ring[i], xi = pi[0], yi = pi[1], pj = ring[j], xj = pj[0], yj = pj[1];\n    if (segmentContains(pi, pj, point)) return 0;\n    if (((yi > y) !== (yj > y)) && ((x < (xj - xi) * (y - yi) / (yj - yi) + xi))) contains = -contains;\n  }\n  return contains;\n}\n\nfunction segmentContains(a, b, c) {\n  var i; return collinear(a, b, c) && within(a[i = +(a[0] === b[0])], c[i], b[i]);\n}\n\nfunction collinear(a, b, c) {\n  return (b[0] - a[0]) * (c[1] - a[1]) === (c[0] - a[0]) * (b[1] - a[1]);\n}\n\nfunction within(p, q, r) {\n  return p <= q && q <= r || r <= q && q <= p;\n}\n","export default function() {}\n","import {extent, thresholdSturges, tickStep, range} from \"d3-array\";\nimport {slice} from \"./array\";\nimport ascending from \"./ascending\";\nimport area from \"./area\";\nimport constant from \"./constant\";\nimport contains from \"./contains\";\nimport noop from \"./noop\";\n\nvar cases = [\n  [],\n  [[[1.0, 1.5], [0.5, 1.0]]],\n  [[[1.5, 1.0], [1.0, 1.5]]],\n  [[[1.5, 1.0], [0.5, 1.0]]],\n  [[[1.0, 0.5], [1.5, 1.0]]],\n  [[[1.0, 1.5], [0.5, 1.0]], [[1.0, 0.5], [1.5, 1.0]]],\n  [[[1.0, 0.5], [1.0, 1.5]]],\n  [[[1.0, 0.5], [0.5, 1.0]]],\n  [[[0.5, 1.0], [1.0, 0.5]]],\n  [[[1.0, 1.5], [1.0, 0.5]]],\n  [[[0.5, 1.0], [1.0, 0.5]], [[1.5, 1.0], [1.0, 1.5]]],\n  [[[1.5, 1.0], [1.0, 0.5]]],\n  [[[0.5, 1.0], [1.5, 1.0]]],\n  [[[1.0, 1.5], [1.5, 1.0]]],\n  [[[0.5, 1.0], [1.0, 1.5]]],\n  []\n];\n\nexport default function() {\n  var dx = 1,\n      dy = 1,\n      threshold = thresholdSturges,\n      smooth = smoothLinear;\n\n  function contours(values) {\n    var tz = threshold(values);\n\n    // Convert number of thresholds into uniform thresholds.\n    if (!Array.isArray(tz)) {\n      var domain = extent(values), start = domain[0], stop = domain[1];\n      tz = tickStep(start, stop, tz);\n      tz = range(Math.floor(start / tz) * tz, Math.floor(stop / tz) * tz, tz);\n    } else {\n      tz = tz.slice().sort(ascending);\n    }\n\n    return tz.map(function(value) {\n      return contour(values, value);\n    });\n  }\n\n  // Accumulate, smooth contour rings, assign holes to exterior rings.\n  // Based on https://github.com/mbostock/shapefile/blob/v0.6.2/shp/polygon.js\n  function contour(values, value) {\n    var polygons = [],\n        holes = [];\n\n    isorings(values, value, function(ring) {\n      smooth(ring, values, value);\n      if (area(ring) > 0) polygons.push([ring]);\n      else holes.push(ring);\n    });\n\n    holes.forEach(function(hole) {\n      for (var i = 0, n = polygons.length, polygon; i < n; ++i) {\n        if (contains((polygon = polygons[i])[0], hole) !== -1) {\n          polygon.push(hole);\n          return;\n        }\n      }\n    });\n\n    return {\n      type: \"MultiPolygon\",\n      value: value,\n      coordinates: polygons\n    };\n  }\n\n  // Marching squares with isolines stitched into rings.\n  // Based on https://github.com/topojson/topojson-client/blob/v3.0.0/src/stitch.js\n  function isorings(values, value, callback) {\n    var fragmentByStart = new Array,\n        fragmentByEnd = new Array,\n        x, y, t0, t1, t2, t3;\n\n    // Special case for the first row (y = -1, t2 = t3 = 0).\n    x = y = -1;\n    t1 = values[0] >= value;\n    cases[t1 << 1].forEach(stitch);\n    while (++x < dx - 1) {\n      t0 = t1, t1 = values[x + 1] >= value;\n      cases[t0 | t1 << 1].forEach(stitch);\n    }\n    cases[t1 << 0].forEach(stitch);\n\n    // General case for the intermediate rows.\n    while (++y < dy - 1) {\n      x = -1;\n      t1 = values[y * dx + dx] >= value;\n      t2 = values[y * dx] >= value;\n      cases[t1 << 1 | t2 << 2].forEach(stitch);\n      while (++x < dx - 1) {\n        t0 = t1, t1 = values[y * dx + dx + x + 1] >= value;\n        t3 = t2, t2 = values[y * dx + x + 1] >= value;\n        cases[t0 | t1 << 1 | t2 << 2 | t3 << 3].forEach(stitch);\n      }\n      cases[t1 | t2 << 3].forEach(stitch);\n    }\n\n    // Special case for the last row (y = dy - 1, t0 = t1 = 0).\n    x = -1;\n    t2 = values[y * dx] >= value;\n    cases[t2 << 2].forEach(stitch);\n    while (++x < dx - 1) {\n      t3 = t2, t2 = values[y * dx + x + 1] >= value;\n      cases[t2 << 2 | t3 << 3].forEach(stitch);\n    }\n    cases[t2 << 3].forEach(stitch);\n\n    function stitch(line) {\n      var start = [line[0][0] + x, line[0][1] + y],\n          end = [line[1][0] + x, line[1][1] + y],\n          startIndex = index(start),\n          endIndex = index(end),\n          f, g;\n      if (f = fragmentByEnd[startIndex]) {\n        if (g = fragmentByStart[endIndex]) {\n          delete fragmentByEnd[f.end];\n          delete fragmentByStart[g.start];\n          if (f === g) {\n            f.ring.push(end);\n            callback(f.ring);\n          } else {\n            fragmentByStart[f.start] = fragmentByEnd[g.end] = {start: f.start, end: g.end, ring: f.ring.concat(g.ring)};\n          }\n        } else {\n          delete fragmentByEnd[f.end];\n          f.ring.push(end);\n          fragmentByEnd[f.end = endIndex] = f;\n        }\n      } else if (f = fragmentByStart[endIndex]) {\n        if (g = fragmentByEnd[startIndex]) {\n          delete fragmentByStart[f.start];\n          delete fragmentByEnd[g.end];\n          if (f === g) {\n            f.ring.push(end);\n            callback(f.ring);\n          } else {\n            fragmentByStart[g.start] = fragmentByEnd[f.end] = {start: g.start, end: f.end, ring: g.ring.concat(f.ring)};\n          }\n        } else {\n          delete fragmentByStart[f.start];\n          f.ring.unshift(start);\n          fragmentByStart[f.start = startIndex] = f;\n        }\n      } else {\n        fragmentByStart[startIndex] = fragmentByEnd[endIndex] = {start: startIndex, end: endIndex, ring: [start, end]};\n      }\n    }\n  }\n\n  function index(point) {\n    return point[0] * 2 + point[1] * (dx + 1) * 4;\n  }\n\n  function smoothLinear(ring, values, value) {\n    ring.forEach(function(point) {\n      var x = point[0],\n          y = point[1],\n          xt = x | 0,\n          yt = y | 0,\n          v0,\n          v1 = values[yt * dx + xt];\n      if (x > 0 && x < dx && xt === x) {\n        v0 = values[yt * dx + xt - 1];\n        point[0] = x + (value - v0) / (v1 - v0) - 0.5;\n      }\n      if (y > 0 && y < dy && yt === y) {\n        v0 = values[(yt - 1) * dx + xt];\n        point[1] = y + (value - v0) / (v1 - v0) - 0.5;\n      }\n    });\n  }\n\n  contours.contour = contour;\n\n  contours.size = function(_) {\n    if (!arguments.length) return [dx, dy];\n    var _0 = Math.ceil(_[0]), _1 = Math.ceil(_[1]);\n    if (!(_0 > 0) || !(_1 > 0)) throw new Error(\"invalid size\");\n    return dx = _0, dy = _1, contours;\n  };\n\n  contours.thresholds = function(_) {\n    return arguments.length ? (threshold = typeof _ === \"function\" ? _ : Array.isArray(_) ? constant(slice.call(_)) : constant(_), contours) : threshold;\n  };\n\n  contours.smooth = function(_) {\n    return arguments.length ? (smooth = _ ? smoothLinear : noop, contours) : smooth === smoothLinear;\n  };\n\n  return contours;\n}\n","// TODO Optimize edge cases.\n// TODO Optimize index calculation.\n// TODO Optimize arguments.\nexport function blurX(source, target, r) {\n  var n = source.width,\n      m = source.height,\n      w = (r << 1) + 1;\n  for (var j = 0; j < m; ++j) {\n    for (var i = 0, sr = 0; i < n + r; ++i) {\n      if (i < n) {\n        sr += source.data[i + j * n];\n      }\n      if (i >= r) {\n        if (i >= w) {\n          sr -= source.data[i - w + j * n];\n        }\n        target.data[i - r + j * n] = sr / Math.min(i + 1, n - 1 + w - i, w);\n      }\n    }\n  }\n}\n\n// TODO Optimize edge cases.\n// TODO Optimize index calculation.\n// TODO Optimize arguments.\nexport function blurY(source, target, r) {\n  var n = source.width,\n      m = source.height,\n      w = (r << 1) + 1;\n  for (var i = 0; i < n; ++i) {\n    for (var j = 0, sr = 0; j < m + r; ++j) {\n      if (j < m) {\n        sr += source.data[i + j * n];\n      }\n      if (j >= r) {\n        if (j >= w) {\n          sr -= source.data[i + (j - w) * n];\n        }\n        target.data[i + (j - r) * n] = sr / Math.min(j + 1, m - 1 + w - j, w);\n      }\n    }\n  }\n}\n","import {max, range, tickStep} from \"d3-array\";\nimport {slice} from \"./array\";\nimport {blurX, blurY} from \"./blur\";\nimport constant from \"./constant\";\nimport contours from \"./contours\";\n\nfunction defaultX(d) {\n  return d[0];\n}\n\nfunction defaultY(d) {\n  return d[1];\n}\n\nfunction defaultWeight() {\n  return 1;\n}\n\nexport default function() {\n  var x = defaultX,\n      y = defaultY,\n      weight = defaultWeight,\n      dx = 960,\n      dy = 500,\n      r = 20, // blur radius\n      k = 2, // log2(grid cell size)\n      o = r * 3, // grid offset, to pad for blur\n      n = (dx + o * 2) >> k, // grid width\n      m = (dy + o * 2) >> k, // grid height\n      threshold = constant(20);\n\n  function density(data) {\n    var values0 = new Float32Array(n * m),\n        values1 = new Float32Array(n * m);\n\n    data.forEach(function(d, i, data) {\n      var xi = (+x(d, i, data) + o) >> k,\n          yi = (+y(d, i, data) + o) >> k,\n          wi = +weight(d, i, data);\n      if (xi >= 0 && xi < n && yi >= 0 && yi < m) {\n        values0[xi + yi * n] += wi;\n      }\n    });\n\n    // TODO Optimize.\n    blurX({width: n, height: m, data: values0}, {width: n, height: m, data: values1}, r >> k);\n    blurY({width: n, height: m, data: values1}, {width: n, height: m, data: values0}, r >> k);\n    blurX({width: n, height: m, data: values0}, {width: n, height: m, data: values1}, r >> k);\n    blurY({width: n, height: m, data: values1}, {width: n, height: m, data: values0}, r >> k);\n    blurX({width: n, height: m, data: values0}, {width: n, height: m, data: values1}, r >> k);\n    blurY({width: n, height: m, data: values1}, {width: n, height: m, data: values0}, r >> k);\n\n    var tz = threshold(values0);\n\n    // Convert number of thresholds into uniform thresholds.\n    if (!Array.isArray(tz)) {\n      var stop = max(values0);\n      tz = tickStep(0, stop, tz);\n      tz = range(0, Math.floor(stop / tz) * tz, tz);\n      tz.shift();\n    }\n\n    return contours()\n        .thresholds(tz)\n        .size([n, m])\n      (values0)\n        .map(transform);\n  }\n\n  function transform(geometry) {\n    geometry.value *= Math.pow(2, -2 * k); // Density in points per square pixel.\n    geometry.coordinates.forEach(transformPolygon);\n    return geometry;\n  }\n\n  function transformPolygon(coordinates) {\n    coordinates.forEach(transformRing);\n  }\n\n  function transformRing(coordinates) {\n    coordinates.forEach(transformPoint);\n  }\n\n  // TODO Optimize.\n  function transformPoint(coordinates) {\n    coordinates[0] = coordinates[0] * Math.pow(2, k) - o;\n    coordinates[1] = coordinates[1] * Math.pow(2, k) - o;\n  }\n\n  function resize() {\n    o = r * 3;\n    n = (dx + o * 2) >> k;\n    m = (dy + o * 2) >> k;\n    return density;\n  }\n\n  density.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), density) : x;\n  };\n\n  density.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), density) : y;\n  };\n\n  density.weight = function(_) {\n    return arguments.length ? (weight = typeof _ === \"function\" ? _ : constant(+_), density) : weight;\n  };\n\n  density.size = function(_) {\n    if (!arguments.length) return [dx, dy];\n    var _0 = Math.ceil(_[0]), _1 = Math.ceil(_[1]);\n    if (!(_0 >= 0) && !(_0 >= 0)) throw new Error(\"invalid size\");\n    return dx = _0, dy = _1, resize();\n  };\n\n  density.cellSize = function(_) {\n    if (!arguments.length) return 1 << k;\n    if (!((_ = +_) >= 1)) throw new Error(\"invalid cell size\");\n    return k = Math.floor(Math.log(_) / Math.LN2), resize();\n  };\n\n  density.thresholds = function(_) {\n    return arguments.length ? (threshold = typeof _ === \"function\" ? _ : Array.isArray(_) ? constant(slice.call(_)) : constant(_), density) : threshold;\n  };\n\n  density.bandwidth = function(_) {\n    if (!arguments.length) return Math.sqrt(r * (r + 1));\n    if (!((_ = +_) >= 0)) throw new Error(\"invalid bandwidth\");\n    return r = Math.round((Math.sqrt(4 * _ * _ + 1) - 1) / 2), resize();\n  };\n\n  return density;\n}\n","var EOL = {},\n    EOF = {},\n    QUOTE = 34,\n    NEWLINE = 10,\n    RETURN = 13;\n\nfunction objectConverter(columns) {\n  return new Function(\"d\", \"return {\" + columns.map(function(name, i) {\n    return JSON.stringify(name) + \": d[\" + i + \"]\";\n  }).join(\",\") + \"}\");\n}\n\nfunction customConverter(columns, f) {\n  var object = objectConverter(columns);\n  return function(row, i) {\n    return f(object(row), i, columns);\n  };\n}\n\n// Compute unique columns in order of discovery.\nfunction inferColumns(rows) {\n  var columnSet = Object.create(null),\n      columns = [];\n\n  rows.forEach(function(row) {\n    for (var column in row) {\n      if (!(column in columnSet)) {\n        columns.push(columnSet[column] = column);\n      }\n    }\n  });\n\n  return columns;\n}\n\nexport default function(delimiter) {\n  var reFormat = new RegExp(\"[\\\"\" + delimiter + \"\\n\\r]\"),\n      DELIMITER = delimiter.charCodeAt(0);\n\n  function parse(text, f) {\n    var convert, columns, rows = parseRows(text, function(row, i) {\n      if (convert) return convert(row, i - 1);\n      columns = row, convert = f ? customConverter(row, f) : objectConverter(row);\n    });\n    rows.columns = columns || [];\n    return rows;\n  }\n\n  function parseRows(text, f) {\n    var rows = [], // output rows\n        N = text.length,\n        I = 0, // current character index\n        n = 0, // current line number\n        t, // current token\n        eof = N <= 0, // current token followed by EOF?\n        eol = false; // current token followed by EOL?\n\n    // Strip the trailing newline.\n    if (text.charCodeAt(N - 1) === NEWLINE) --N;\n    if (text.charCodeAt(N - 1) === RETURN) --N;\n\n    function token() {\n      if (eof) return EOF;\n      if (eol) return eol = false, EOL;\n\n      // Unescape quotes.\n      var i, j = I, c;\n      if (text.charCodeAt(j) === QUOTE) {\n        while (I++ < N && text.charCodeAt(I) !== QUOTE || text.charCodeAt(++I) === QUOTE);\n        if ((i = I) >= N) eof = true;\n        else if ((c = text.charCodeAt(I++)) === NEWLINE) eol = true;\n        else if (c === RETURN) { eol = true; if (text.charCodeAt(I) === NEWLINE) ++I; }\n        return text.slice(j + 1, i - 1).replace(/\"\"/g, \"\\\"\");\n      }\n\n      // Find next delimiter or newline.\n      while (I < N) {\n        if ((c = text.charCodeAt(i = I++)) === NEWLINE) eol = true;\n        else if (c === RETURN) { eol = true; if (text.charCodeAt(I) === NEWLINE) ++I; }\n        else if (c !== DELIMITER) continue;\n        return text.slice(j, i);\n      }\n\n      // Return last token before EOF.\n      return eof = true, text.slice(j, N);\n    }\n\n    while ((t = token()) !== EOF) {\n      var row = [];\n      while (t !== EOL && t !== EOF) row.push(t), t = token();\n      if (f && (row = f(row, n++)) == null) continue;\n      rows.push(row);\n    }\n\n    return rows;\n  }\n\n  function format(rows, columns) {\n    if (columns == null) columns = inferColumns(rows);\n    return [columns.map(formatValue).join(delimiter)].concat(rows.map(function(row) {\n      return columns.map(function(column) {\n        return formatValue(row[column]);\n      }).join(delimiter);\n    })).join(\"\\n\");\n  }\n\n  function formatRows(rows) {\n    return rows.map(formatRow).join(\"\\n\");\n  }\n\n  function formatRow(row) {\n    return row.map(formatValue).join(delimiter);\n  }\n\n  function formatValue(text) {\n    return text == null ? \"\"\n        : reFormat.test(text += \"\") ? \"\\\"\" + text.replace(/\"/g, \"\\\"\\\"\") + \"\\\"\"\n        : text;\n  }\n\n  return {\n    parse: parse,\n    parseRows: parseRows,\n    format: format,\n    formatRows: formatRows\n  };\n}\n","import dsv from \"./dsv\";\n\nvar csv = dsv(\",\");\n\nexport var csvParse = csv.parse;\nexport var csvParseRows = csv.parseRows;\nexport var csvFormat = csv.format;\nexport var csvFormatRows = csv.formatRows;\n","import dsv from \"./dsv\";\n\nvar tsv = dsv(\"\\t\");\n\nexport var tsvParse = tsv.parse;\nexport var tsvParseRows = tsv.parseRows;\nexport var tsvFormat = tsv.format;\nexport var tsvFormatRows = tsv.formatRows;\n","function responseBlob(response) {\n  if (!response.ok) throw new Error(response.status + \" \" + response.statusText);\n  return response.blob();\n}\n\nexport default function(input, init) {\n  return fetch(input, init).then(responseBlob);\n}\n","function responseArrayBuffer(response) {\n  if (!response.ok) throw new Error(response.status + \" \" + response.statusText);\n  return response.arrayBuffer();\n}\n\nexport default function(input, init) {\n  return fetch(input, init).then(responseArrayBuffer);\n}\n","function responseText(response) {\n  if (!response.ok) throw new Error(response.status + \" \" + response.statusText);\n  return response.text();\n}\n\nexport default function(input, init) {\n  return fetch(input, init).then(responseText);\n}\n","import {csvParse, dsvFormat, tsvParse} from \"d3-dsv\";\nimport text from \"./text\";\n\nfunction dsvParse(parse) {\n  return function(input, init, row) {\n    if (arguments.length === 2 && typeof init === \"function\") row = init, init = undefined;\n    return text(input, init).then(function(response) {\n      return parse(response, row);\n    });\n  };\n}\n\nexport default function dsv(delimiter, input, init, row) {\n  if (arguments.length === 3 && typeof init === \"function\") row = init, init = undefined;\n  var format = dsvFormat(delimiter);\n  return text(input, init).then(function(response) {\n    return format.parse(response, row);\n  });\n}\n\nexport var csv = dsvParse(csvParse);\nexport var tsv = dsvParse(tsvParse);\n","export default function(input, init) {\n  return new Promise(function(resolve, reject) {\n    var image = new Image;\n    for (var key in init) image[key] = init[key];\n    image.onerror = reject;\n    image.onload = function() { resolve(image); };\n    image.src = input;\n  });\n}\n","function responseJson(response) {\n  if (!response.ok) throw new Error(response.status + \" \" + response.statusText);\n  return response.json();\n}\n\nexport default function(input, init) {\n  return fetch(input, init).then(responseJson);\n}\n","import text from \"./text\";\n\nfunction parser(type) {\n  return function(input, init)  {\n    return text(input, init).then(function(text) {\n      return (new DOMParser).parseFromString(text, type);\n    });\n  };\n}\n\nexport default parser(\"application/xml\");\n\nexport var html = parser(\"text/html\");\n\nexport var svg = parser(\"image/svg+xml\");\n","export default function(x, y) {\n  var nodes;\n\n  if (x == null) x = 0;\n  if (y == null) y = 0;\n\n  function force() {\n    var i,\n        n = nodes.length,\n        node,\n        sx = 0,\n        sy = 0;\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i], sx += node.x, sy += node.y;\n    }\n\n    for (sx = sx / n - x, sy = sy / n - y, i = 0; i < n; ++i) {\n      node = nodes[i], node.x -= sx, node.y -= sy;\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = +_, force) : x;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = +_, force) : y;\n  };\n\n  return force;\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function() {\n  return (Math.random() - 0.5) * 1e-6;\n}\n","export default function(d) {\n  var x = +this._x.call(null, d),\n      y = +this._y.call(null, d);\n  return add(this.cover(x, y), x, y, d);\n}\n\nfunction add(tree, x, y, d) {\n  if (isNaN(x) || isNaN(y)) return tree; // ignore invalid points\n\n  var parent,\n      node = tree._root,\n      leaf = {data: d},\n      x0 = tree._x0,\n      y0 = tree._y0,\n      x1 = tree._x1,\n      y1 = tree._y1,\n      xm,\n      ym,\n      xp,\n      yp,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return tree._root = leaf, tree;\n\n  // Find the existing leaf for the new point, or add it.\n  while (node.length) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (parent = node, !(node = node[i = bottom << 1 | right])) return parent[i] = leaf, tree;\n  }\n\n  // Is the new point is exactly coincident with the existing point?\n  xp = +tree._x.call(null, node.data);\n  yp = +tree._y.call(null, node.data);\n  if (x === xp && y === yp) return leaf.next = node, parent ? parent[i] = leaf : tree._root = leaf, tree;\n\n  // Otherwise, split the leaf node until the old and new point are separated.\n  do {\n    parent = parent ? parent[i] = new Array(4) : tree._root = new Array(4);\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n  } while ((i = bottom << 1 | right) === (j = (yp >= ym) << 1 | (xp >= xm)));\n  return parent[j] = node, parent[i] = leaf, tree;\n}\n\nexport function addAll(data) {\n  var d, i, n = data.length,\n      x,\n      y,\n      xz = new Array(n),\n      yz = new Array(n),\n      x0 = Infinity,\n      y0 = Infinity,\n      x1 = -Infinity,\n      y1 = -Infinity;\n\n  // Compute the points and their extent.\n  for (i = 0; i < n; ++i) {\n    if (isNaN(x = +this._x.call(null, d = data[i])) || isNaN(y = +this._y.call(null, d))) continue;\n    xz[i] = x;\n    yz[i] = y;\n    if (x < x0) x0 = x;\n    if (x > x1) x1 = x;\n    if (y < y0) y0 = y;\n    if (y > y1) y1 = y;\n  }\n\n  // If there were no (valid) points, inherit the existing extent.\n  if (x1 < x0) x0 = this._x0, x1 = this._x1;\n  if (y1 < y0) y0 = this._y0, y1 = this._y1;\n\n  // Expand the tree to cover the new points.\n  this.cover(x0, y0).cover(x1, y1);\n\n  // Add the new points.\n  for (i = 0; i < n; ++i) {\n    add(this, xz[i], yz[i], data[i]);\n  }\n\n  return this;\n}\n","export default function(x, y) {\n  if (isNaN(x = +x) || isNaN(y = +y)) return this; // ignore invalid points\n\n  var x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1;\n\n  // If the quadtree has no extent, initialize them.\n  // Integer extent are necessary so that if we later double the extent,\n  // the existing quadrant boundaries don’t change due to floating point error!\n  if (isNaN(x0)) {\n    x1 = (x0 = Math.floor(x)) + 1;\n    y1 = (y0 = Math.floor(y)) + 1;\n  }\n\n  // Otherwise, double repeatedly to cover.\n  else if (x0 > x || x > x1 || y0 > y || y > y1) {\n    var z = x1 - x0,\n        node = this._root,\n        parent,\n        i;\n\n    switch (i = (y < (y0 + y1) / 2) << 1 | (x < (x0 + x1) / 2)) {\n      case 0: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x1 = x0 + z, y1 = y0 + z, x > x1 || y > y1);\n        break;\n      }\n      case 1: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x0 = x1 - z, y1 = y0 + z, x0 > x || y > y1);\n        break;\n      }\n      case 2: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x1 = x0 + z, y0 = y1 - z, x > x1 || y0 > y);\n        break;\n      }\n      case 3: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x0 = x1 - z, y0 = y1 - z, x0 > x || y0 > y);\n        break;\n      }\n    }\n\n    if (this._root && this._root.length) this._root = node;\n  }\n\n  // If the quadtree covers the point already, just return.\n  else return this;\n\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  return this;\n}\n","export default function(node, x0, y0, x1, y1) {\n  this.node = node;\n  this.x0 = x0;\n  this.y0 = y0;\n  this.x1 = x1;\n  this.y1 = y1;\n}\n","export function defaultX(d) {\n  return d[0];\n}\n\nexport default function(_) {\n  return arguments.length ? (this._x = _, this) : this._x;\n}\n","export function defaultY(d) {\n  return d[1];\n}\n\nexport default function(_) {\n  return arguments.length ? (this._y = _, this) : this._y;\n}\n","import tree_add, {addAll as tree_addAll} from \"./add\";\nimport tree_cover from \"./cover\";\nimport tree_data from \"./data\";\nimport tree_extent from \"./extent\";\nimport tree_find from \"./find\";\nimport tree_remove, {removeAll as tree_removeAll} from \"./remove\";\nimport tree_root from \"./root\";\nimport tree_size from \"./size\";\nimport tree_visit from \"./visit\";\nimport tree_visitAfter from \"./visitAfter\";\nimport tree_x, {defaultX} from \"./x\";\nimport tree_y, {defaultY} from \"./y\";\n\nexport default function quadtree(nodes, x, y) {\n  var tree = new Quadtree(x == null ? defaultX : x, y == null ? defaultY : y, NaN, NaN, NaN, NaN);\n  return nodes == null ? tree : tree.addAll(nodes);\n}\n\nfunction Quadtree(x, y, x0, y0, x1, y1) {\n  this._x = x;\n  this._y = y;\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  this._root = undefined;\n}\n\nfunction leaf_copy(leaf) {\n  var copy = {data: leaf.data}, next = copy;\n  while (leaf = leaf.next) next = next.next = {data: leaf.data};\n  return copy;\n}\n\nvar treeProto = quadtree.prototype = Quadtree.prototype;\n\ntreeProto.copy = function() {\n  var copy = new Quadtree(this._x, this._y, this._x0, this._y0, this._x1, this._y1),\n      node = this._root,\n      nodes,\n      child;\n\n  if (!node) return copy;\n\n  if (!node.length) return copy._root = leaf_copy(node), copy;\n\n  nodes = [{source: node, target: copy._root = new Array(4)}];\n  while (node = nodes.pop()) {\n    for (var i = 0; i < 4; ++i) {\n      if (child = node.source[i]) {\n        if (child.length) nodes.push({source: child, target: node.target[i] = new Array(4)});\n        else node.target[i] = leaf_copy(child);\n      }\n    }\n  }\n\n  return copy;\n};\n\ntreeProto.add = tree_add;\ntreeProto.addAll = tree_addAll;\ntreeProto.cover = tree_cover;\ntreeProto.data = tree_data;\ntreeProto.extent = tree_extent;\ntreeProto.find = tree_find;\ntreeProto.remove = tree_remove;\ntreeProto.removeAll = tree_removeAll;\ntreeProto.root = tree_root;\ntreeProto.size = tree_size;\ntreeProto.visit = tree_visit;\ntreeProto.visitAfter = tree_visitAfter;\ntreeProto.x = tree_x;\ntreeProto.y = tree_y;\n","import constant from \"./constant\";\nimport jiggle from \"./jiggle\";\nimport {quadtree} from \"d3-quadtree\";\n\nfunction x(d) {\n  return d.x + d.vx;\n}\n\nfunction y(d) {\n  return d.y + d.vy;\n}\n\nexport default function(radius) {\n  var nodes,\n      radii,\n      strength = 1,\n      iterations = 1;\n\n  if (typeof radius !== \"function\") radius = constant(radius == null ? 1 : +radius);\n\n  function force() {\n    var i, n = nodes.length,\n        tree,\n        node,\n        xi,\n        yi,\n        ri,\n        ri2;\n\n    for (var k = 0; k < iterations; ++k) {\n      tree = quadtree(nodes, x, y).visitAfter(prepare);\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        ri = radii[node.index], ri2 = ri * ri;\n        xi = node.x + node.vx;\n        yi = node.y + node.vy;\n        tree.visit(apply);\n      }\n    }\n\n    function apply(quad, x0, y0, x1, y1) {\n      var data = quad.data, rj = quad.r, r = ri + rj;\n      if (data) {\n        if (data.index > node.index) {\n          var x = xi - data.x - data.vx,\n              y = yi - data.y - data.vy,\n              l = x * x + y * y;\n          if (l < r * r) {\n            if (x === 0) x = jiggle(), l += x * x;\n            if (y === 0) y = jiggle(), l += y * y;\n            l = (r - (l = Math.sqrt(l))) / l * strength;\n            node.vx += (x *= l) * (r = (rj *= rj) / (ri2 + rj));\n            node.vy += (y *= l) * r;\n            data.vx -= x * (r = 1 - r);\n            data.vy -= y * r;\n          }\n        }\n        return;\n      }\n      return x0 > xi + r || x1 < xi - r || y0 > yi + r || y1 < yi - r;\n    }\n  }\n\n  function prepare(quad) {\n    if (quad.data) return quad.r = radii[quad.data.index];\n    for (var i = quad.r = 0; i < 4; ++i) {\n      if (quad[i] && quad[i].r > quad.r) {\n        quad.r = quad[i].r;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length, node;\n    radii = new Array(n);\n    for (i = 0; i < n; ++i) node = nodes[i], radii[node.index] = +radius(node, i, nodes);\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.iterations = function(_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = +_, force) : strength;\n  };\n\n  force.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : radius;\n  };\n\n  return force;\n}\n","export default function() {\n  var data = [];\n  this.visit(function(node) {\n    if (!node.length) do data.push(node.data); while (node = node.next)\n  });\n  return data;\n}\n","export default function(_) {\n  return arguments.length\n      ? this.cover(+_[0][0], +_[0][1]).cover(+_[1][0], +_[1][1])\n      : isNaN(this._x0) ? undefined : [[this._x0, this._y0], [this._x1, this._y1]];\n}\n","import Quad from \"./quad\";\n\nexport default function(x, y, radius) {\n  var data,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1,\n      y1,\n      x2,\n      y2,\n      x3 = this._x1,\n      y3 = this._y1,\n      quads = [],\n      node = this._root,\n      q,\n      i;\n\n  if (node) quads.push(new Quad(node, x0, y0, x3, y3));\n  if (radius == null) radius = Infinity;\n  else {\n    x0 = x - radius, y0 = y - radius;\n    x3 = x + radius, y3 = y + radius;\n    radius *= radius;\n  }\n\n  while (q = quads.pop()) {\n\n    // Stop searching if this quadrant can’t contain a closer node.\n    if (!(node = q.node)\n        || (x1 = q.x0) > x3\n        || (y1 = q.y0) > y3\n        || (x2 = q.x1) < x0\n        || (y2 = q.y1) < y0) continue;\n\n    // Bisect the current quadrant.\n    if (node.length) {\n      var xm = (x1 + x2) / 2,\n          ym = (y1 + y2) / 2;\n\n      quads.push(\n        new Quad(node[3], xm, ym, x2, y2),\n        new Quad(node[2], x1, ym, xm, y2),\n        new Quad(node[1], xm, y1, x2, ym),\n        new Quad(node[0], x1, y1, xm, ym)\n      );\n\n      // Visit the closest quadrant first.\n      if (i = (y >= ym) << 1 | (x >= xm)) {\n        q = quads[quads.length - 1];\n        quads[quads.length - 1] = quads[quads.length - 1 - i];\n        quads[quads.length - 1 - i] = q;\n      }\n    }\n\n    // Visit this point. (Visiting coincident points isn’t necessary!)\n    else {\n      var dx = x - +this._x.call(null, node.data),\n          dy = y - +this._y.call(null, node.data),\n          d2 = dx * dx + dy * dy;\n      if (d2 < radius) {\n        var d = Math.sqrt(radius = d2);\n        x0 = x - d, y0 = y - d;\n        x3 = x + d, y3 = y + d;\n        data = node.data;\n      }\n    }\n  }\n\n  return data;\n}\n","export default function(d) {\n  if (isNaN(x = +this._x.call(null, d)) || isNaN(y = +this._y.call(null, d))) return this; // ignore invalid points\n\n  var parent,\n      node = this._root,\n      retainer,\n      previous,\n      next,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1,\n      x,\n      y,\n      xm,\n      ym,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return this;\n\n  // Find the leaf node for the point.\n  // While descending, also retain the deepest parent with a non-removed sibling.\n  if (node.length) while (true) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (!(parent = node, node = node[i = bottom << 1 | right])) return this;\n    if (!node.length) break;\n    if (parent[(i + 1) & 3] || parent[(i + 2) & 3] || parent[(i + 3) & 3]) retainer = parent, j = i;\n  }\n\n  // Find the point to remove.\n  while (node.data !== d) if (!(previous = node, node = node.next)) return this;\n  if (next = node.next) delete node.next;\n\n  // If there are multiple coincident points, remove just the point.\n  if (previous) return (next ? previous.next = next : delete previous.next), this;\n\n  // If this is the root point, remove it.\n  if (!parent) return this._root = next, this;\n\n  // Remove this leaf.\n  next ? parent[i] = next : delete parent[i];\n\n  // If the parent now contains exactly one leaf, collapse superfluous parents.\n  if ((node = parent[0] || parent[1] || parent[2] || parent[3])\n      && node === (parent[3] || parent[2] || parent[1] || parent[0])\n      && !node.length) {\n    if (retainer) retainer[j] = node;\n    else this._root = node;\n  }\n\n  return this;\n}\n\nexport function removeAll(data) {\n  for (var i = 0, n = data.length; i < n; ++i) this.remove(data[i]);\n  return this;\n}\n","export default function() {\n  return this._root;\n}\n","export default function() {\n  var size = 0;\n  this.visit(function(node) {\n    if (!node.length) do ++size; while (node = node.next)\n  });\n  return size;\n}\n","import Quad from \"./quad\";\n\nexport default function(callback) {\n  var quads = [], q, node = this._root, child, x0, y0, x1, y1;\n  if (node) quads.push(new Quad(node, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    if (!callback(node = q.node, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1) && node.length) {\n      var xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n    }\n  }\n  return this;\n}\n","import Quad from \"./quad\";\n\nexport default function(callback) {\n  var quads = [], next = [], q;\n  if (this._root) quads.push(new Quad(this._root, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    var node = q.node;\n    if (node.length) {\n      var child, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1, xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n    }\n    next.push(q);\n  }\n  while (q = next.pop()) {\n    callback(q.node, q.x0, q.y0, q.x1, q.y1);\n  }\n  return this;\n}\n","import constant from \"./constant\";\nimport jiggle from \"./jiggle\";\nimport {map} from \"d3-collection\";\n\nfunction index(d) {\n  return d.index;\n}\n\nfunction find(nodeById, nodeId) {\n  var node = nodeById.get(nodeId);\n  if (!node) throw new Error(\"missing: \" + nodeId);\n  return node;\n}\n\nexport default function(links) {\n  var id = index,\n      strength = defaultStrength,\n      strengths,\n      distance = constant(30),\n      distances,\n      nodes,\n      count,\n      bias,\n      iterations = 1;\n\n  if (links == null) links = [];\n\n  function defaultStrength(link) {\n    return 1 / Math.min(count[link.source.index], count[link.target.index]);\n  }\n\n  function force(alpha) {\n    for (var k = 0, n = links.length; k < iterations; ++k) {\n      for (var i = 0, link, source, target, x, y, l, b; i < n; ++i) {\n        link = links[i], source = link.source, target = link.target;\n        x = target.x + target.vx - source.x - source.vx || jiggle();\n        y = target.y + target.vy - source.y - source.vy || jiggle();\n        l = Math.sqrt(x * x + y * y);\n        l = (l - distances[i]) / l * alpha * strengths[i];\n        x *= l, y *= l;\n        target.vx -= x * (b = bias[i]);\n        target.vy -= y * b;\n        source.vx += x * (b = 1 - b);\n        source.vy += y * b;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n\n    var i,\n        n = nodes.length,\n        m = links.length,\n        nodeById = map(nodes, id),\n        link;\n\n    for (i = 0, count = new Array(n); i < m; ++i) {\n      link = links[i], link.index = i;\n      if (typeof link.source !== \"object\") link.source = find(nodeById, link.source);\n      if (typeof link.target !== \"object\") link.target = find(nodeById, link.target);\n      count[link.source.index] = (count[link.source.index] || 0) + 1;\n      count[link.target.index] = (count[link.target.index] || 0) + 1;\n    }\n\n    for (i = 0, bias = new Array(m); i < m; ++i) {\n      link = links[i], bias[i] = count[link.source.index] / (count[link.source.index] + count[link.target.index]);\n    }\n\n    strengths = new Array(m), initializeStrength();\n    distances = new Array(m), initializeDistance();\n  }\n\n  function initializeStrength() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      strengths[i] = +strength(links[i], i, links);\n    }\n  }\n\n  function initializeDistance() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      distances[i] = +distance(links[i], i, links);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.links = function(_) {\n    return arguments.length ? (links = _, initialize(), force) : links;\n  };\n\n  force.id = function(_) {\n    return arguments.length ? (id = _, force) : id;\n  };\n\n  force.iterations = function(_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initializeStrength(), force) : strength;\n  };\n\n  force.distance = function(_) {\n    return arguments.length ? (distance = typeof _ === \"function\" ? _ : constant(+_), initializeDistance(), force) : distance;\n  };\n\n  return force;\n}\n","import {dispatch} from \"d3-dispatch\";\nimport {map} from \"d3-collection\";\nimport {timer} from \"d3-timer\";\n\nexport function x(d) {\n  return d.x;\n}\n\nexport function y(d) {\n  return d.y;\n}\n\nvar initialRadius = 10,\n    initialAngle = Math.PI * (3 - Math.sqrt(5));\n\nexport default function(nodes) {\n  var simulation,\n      alpha = 1,\n      alphaMin = 0.001,\n      alphaDecay = 1 - Math.pow(alphaMin, 1 / 300),\n      alphaTarget = 0,\n      velocityDecay = 0.6,\n      forces = map(),\n      stepper = timer(step),\n      event = dispatch(\"tick\", \"end\");\n\n  if (nodes == null) nodes = [];\n\n  function step() {\n    tick();\n    event.call(\"tick\", simulation);\n    if (alpha < alphaMin) {\n      stepper.stop();\n      event.call(\"end\", simulation);\n    }\n  }\n\n  function tick() {\n    var i, n = nodes.length, node;\n\n    alpha += (alphaTarget - alpha) * alphaDecay;\n\n    forces.each(function(force) {\n      force(alpha);\n    });\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i];\n      if (node.fx == null) node.x += node.vx *= velocityDecay;\n      else node.x = node.fx, node.vx = 0;\n      if (node.fy == null) node.y += node.vy *= velocityDecay;\n      else node.y = node.fy, node.vy = 0;\n    }\n  }\n\n  function initializeNodes() {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.index = i;\n      if (isNaN(node.x) || isNaN(node.y)) {\n        var radius = initialRadius * Math.sqrt(i), angle = i * initialAngle;\n        node.x = radius * Math.cos(angle);\n        node.y = radius * Math.sin(angle);\n      }\n      if (isNaN(node.vx) || isNaN(node.vy)) {\n        node.vx = node.vy = 0;\n      }\n    }\n  }\n\n  function initializeForce(force) {\n    if (force.initialize) force.initialize(nodes);\n    return force;\n  }\n\n  initializeNodes();\n\n  return simulation = {\n    tick: tick,\n\n    restart: function() {\n      return stepper.restart(step), simulation;\n    },\n\n    stop: function() {\n      return stepper.stop(), simulation;\n    },\n\n    nodes: function(_) {\n      return arguments.length ? (nodes = _, initializeNodes(), forces.each(initializeForce), simulation) : nodes;\n    },\n\n    alpha: function(_) {\n      return arguments.length ? (alpha = +_, simulation) : alpha;\n    },\n\n    alphaMin: function(_) {\n      return arguments.length ? (alphaMin = +_, simulation) : alphaMin;\n    },\n\n    alphaDecay: function(_) {\n      return arguments.length ? (alphaDecay = +_, simulation) : +alphaDecay;\n    },\n\n    alphaTarget: function(_) {\n      return arguments.length ? (alphaTarget = +_, simulation) : alphaTarget;\n    },\n\n    velocityDecay: function(_) {\n      return arguments.length ? (velocityDecay = 1 - _, simulation) : 1 - velocityDecay;\n    },\n\n    force: function(name, _) {\n      return arguments.length > 1 ? ((_ == null ? forces.remove(name) : forces.set(name, initializeForce(_))), simulation) : forces.get(name);\n    },\n\n    find: function(x, y, radius) {\n      var i = 0,\n          n = nodes.length,\n          dx,\n          dy,\n          d2,\n          node,\n          closest;\n\n      if (radius == null) radius = Infinity;\n      else radius *= radius;\n\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        dx = x - node.x;\n        dy = y - node.y;\n        d2 = dx * dx + dy * dy;\n        if (d2 < radius) closest = node, radius = d2;\n      }\n\n      return closest;\n    },\n\n    on: function(name, _) {\n      return arguments.length > 1 ? (event.on(name, _), simulation) : event.on(name);\n    }\n  };\n}\n","import constant from \"./constant\";\nimport jiggle from \"./jiggle\";\nimport {quadtree} from \"d3-quadtree\";\nimport {x, y} from \"./simulation\";\n\nexport default function() {\n  var nodes,\n      node,\n      alpha,\n      strength = constant(-30),\n      strengths,\n      distanceMin2 = 1,\n      distanceMax2 = Infinity,\n      theta2 = 0.81;\n\n  function force(_) {\n    var i, n = nodes.length, tree = quadtree(nodes, x, y).visitAfter(accumulate);\n    for (alpha = _, i = 0; i < n; ++i) node = nodes[i], tree.visit(apply);\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length, node;\n    strengths = new Array(n);\n    for (i = 0; i < n; ++i) node = nodes[i], strengths[node.index] = +strength(node, i, nodes);\n  }\n\n  function accumulate(quad) {\n    var strength = 0, q, c, weight = 0, x, y, i;\n\n    // For internal nodes, accumulate forces from child quadrants.\n    if (quad.length) {\n      for (x = y = i = 0; i < 4; ++i) {\n        if ((q = quad[i]) && (c = Math.abs(q.value))) {\n          strength += q.value, weight += c, x += c * q.x, y += c * q.y;\n        }\n      }\n      quad.x = x / weight;\n      quad.y = y / weight;\n    }\n\n    // For leaf nodes, accumulate forces from coincident quadrants.\n    else {\n      q = quad;\n      q.x = q.data.x;\n      q.y = q.data.y;\n      do strength += strengths[q.data.index];\n      while (q = q.next);\n    }\n\n    quad.value = strength;\n  }\n\n  function apply(quad, x1, _, x2) {\n    if (!quad.value) return true;\n\n    var x = quad.x - node.x,\n        y = quad.y - node.y,\n        w = x2 - x1,\n        l = x * x + y * y;\n\n    // Apply the Barnes-Hut approximation if possible.\n    // Limit forces for very close nodes; randomize direction if coincident.\n    if (w * w / theta2 < l) {\n      if (l < distanceMax2) {\n        if (x === 0) x = jiggle(), l += x * x;\n        if (y === 0) y = jiggle(), l += y * y;\n        if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n        node.vx += x * quad.value * alpha / l;\n        node.vy += y * quad.value * alpha / l;\n      }\n      return true;\n    }\n\n    // Otherwise, process points directly.\n    else if (quad.length || l >= distanceMax2) return;\n\n    // Limit forces for very close nodes; randomize direction if coincident.\n    if (quad.data !== node || quad.next) {\n      if (x === 0) x = jiggle(), l += x * x;\n      if (y === 0) y = jiggle(), l += y * y;\n      if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n    }\n\n    do if (quad.data !== node) {\n      w = strengths[quad.data.index] * alpha / l;\n      node.vx += x * w;\n      node.vy += y * w;\n    } while (quad = quad.next);\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : strength;\n  };\n\n  force.distanceMin = function(_) {\n    return arguments.length ? (distanceMin2 = _ * _, force) : Math.sqrt(distanceMin2);\n  };\n\n  force.distanceMax = function(_) {\n    return arguments.length ? (distanceMax2 = _ * _, force) : Math.sqrt(distanceMax2);\n  };\n\n  force.theta = function(_) {\n    return arguments.length ? (theta2 = _ * _, force) : Math.sqrt(theta2);\n  };\n\n  return force;\n}\n","import constant from \"./constant\";\n\nexport default function(radius, x, y) {\n  var nodes,\n      strength = constant(0.1),\n      strengths,\n      radiuses;\n\n  if (typeof radius !== \"function\") radius = constant(+radius);\n  if (x == null) x = 0;\n  if (y == null) y = 0;\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length; i < n; ++i) {\n      var node = nodes[i],\n          dx = node.x - x || 1e-6,\n          dy = node.y - y || 1e-6,\n          r = Math.sqrt(dx * dx + dy * dy),\n          k = (radiuses[i] - r) * strengths[i] * alpha / r;\n      node.vx += dx * k;\n      node.vy += dy * k;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    radiuses = new Array(n);\n    for (i = 0; i < n; ++i) {\n      radiuses[i] = +radius(nodes[i], i, nodes);\n      strengths[i] = isNaN(radiuses[i]) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _, initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : strength;\n  };\n\n  force.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : radius;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = +_, force) : x;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = +_, force) : y;\n  };\n\n  return force;\n}\n","import constant from \"./constant\";\n\nexport default function(x) {\n  var strength = constant(0.1),\n      nodes,\n      strengths,\n      xz;\n\n  if (typeof x !== \"function\") x = constant(x == null ? 0 : +x);\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vx += (xz[i] - node.x) * strengths[i] * alpha;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    xz = new Array(n);\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(xz[i] = +x(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : strength;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : x;\n  };\n\n  return force;\n}\n","import constant from \"./constant\";\n\nexport default function(y) {\n  var strength = constant(0.1),\n      nodes,\n      strengths,\n      yz;\n\n  if (typeof y !== \"function\") y = constant(y == null ? 0 : +y);\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vy += (yz[i] - node.y) * strengths[i] * alpha;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    yz = new Array(n);\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(yz[i] = +y(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : strength;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : y;\n  };\n\n  return force;\n}\n","// Computes the decimal coefficient and exponent of the specified number x with\n// significant digits p, where x is positive and p is in [1, 21] or undefined.\n// For example, formatDecimal(1.23) returns [\"123\", 0].\nexport default function(x, p) {\n  if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf(\"e\")) < 0) return null; // NaN, ±Infinity\n  var i, coefficient = x.slice(0, i);\n\n  // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\n  // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\n  return [\n    coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,\n    +x.slice(i + 1)\n  ];\n}\n","import formatDecimal from \"./formatDecimal\";\n\nexport default function(x) {\n  return x = formatDecimal(Math.abs(x)), x ? x[1] : NaN;\n}\n","// [[fill]align][sign][symbol][0][width][,][.precision][~][type]\nvar re = /^(?:(.)?([<>=^]))?([+\\-\\( ])?([$#])?(0)?(\\d+)?(,)?(\\.\\d+)?(~)?([a-z%])?$/i;\n\nexport default function formatSpecifier(specifier) {\n  return new FormatSpecifier(specifier);\n}\n\nformatSpecifier.prototype = FormatSpecifier.prototype; // instanceof\n\nfunction FormatSpecifier(specifier) {\n  if (!(match = re.exec(specifier))) throw new Error(\"invalid format: \" + specifier);\n  var match;\n  this.fill = match[1] || \" \";\n  this.align = match[2] || \">\";\n  this.sign = match[3] || \"-\";\n  this.symbol = match[4] || \"\";\n  this.zero = !!match[5];\n  this.width = match[6] && +match[6];\n  this.comma = !!match[7];\n  this.precision = match[8] && +match[8].slice(1);\n  this.trim = !!match[9];\n  this.type = match[10] || \"\";\n}\n\nFormatSpecifier.prototype.toString = function() {\n  return this.fill\n      + this.align\n      + this.sign\n      + this.symbol\n      + (this.zero ? \"0\" : \"\")\n      + (this.width == null ? \"\" : Math.max(1, this.width | 0))\n      + (this.comma ? \",\" : \"\")\n      + (this.precision == null ? \"\" : \".\" + Math.max(0, this.precision | 0))\n      + (this.trim ? \"~\" : \"\")\n      + this.type;\n};\n","// Trims insignificant zeros, e.g., replaces 1.2000k with 1.2k.\nexport default function(s) {\n  out: for (var n = s.length, i = 1, i0 = -1, i1; i < n; ++i) {\n    switch (s[i]) {\n      case \".\": i0 = i1 = i; break;\n      case \"0\": if (i0 === 0) i0 = i; i1 = i; break;\n      default: if (i0 > 0) { if (!+s[i]) break out; i0 = 0; } break;\n    }\n  }\n  return i0 > 0 ? s.slice(0, i0) + s.slice(i1 + 1) : s;\n}\n","import formatDecimal from \"./formatDecimal\";\n\nexport var prefixExponent;\n\nexport default function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1],\n      i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,\n      n = coefficient.length;\n  return i === n ? coefficient\n      : i > n ? coefficient + new Array(i - n + 1).join(\"0\")\n      : i > 0 ? coefficient.slice(0, i) + \".\" + coefficient.slice(i)\n      : \"0.\" + new Array(1 - i).join(\"0\") + formatDecimal(x, Math.max(0, p + i - 1))[0]; // less than 1y!\n}\n","import formatLocale from \"./locale\";\n\nvar locale;\nexport var format;\nexport var formatPrefix;\n\ndefaultLocale({\n  decimal: \".\",\n  thousands: \",\",\n  grouping: [3],\n  currency: [\"$\", \"\"]\n});\n\nexport default function defaultLocale(definition) {\n  locale = formatLocale(definition);\n  format = locale.format;\n  formatPrefix = locale.formatPrefix;\n  return locale;\n}\n","import formatDecimal from \"./formatDecimal\";\n\nexport default function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1];\n  return exponent < 0 ? \"0.\" + new Array(-exponent).join(\"0\") + coefficient\n      : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + \".\" + coefficient.slice(exponent + 1)\n      : coefficient + new Array(exponent - coefficient.length + 2).join(\"0\");\n}\n","import formatPrefixAuto from \"./formatPrefixAuto\";\nimport formatRounded from \"./formatRounded\";\n\nexport default {\n  \"%\": function(x, p) { return (x * 100).toFixed(p); },\n  \"b\": function(x) { return Math.round(x).toString(2); },\n  \"c\": function(x) { return x + \"\"; },\n  \"d\": function(x) { return Math.round(x).toString(10); },\n  \"e\": function(x, p) { return x.toExponential(p); },\n  \"f\": function(x, p) { return x.toFixed(p); },\n  \"g\": function(x, p) { return x.toPrecision(p); },\n  \"o\": function(x) { return Math.round(x).toString(8); },\n  \"p\": function(x, p) { return formatRounded(x * 100, p); },\n  \"r\": formatRounded,\n  \"s\": formatPrefixAuto,\n  \"X\": function(x) { return Math.round(x).toString(16).toUpperCase(); },\n  \"x\": function(x) { return Math.round(x).toString(16); }\n};\n","export default function(x) {\n  return x;\n}\n","import exponent from \"./exponent\";\nimport formatGroup from \"./formatGroup\";\nimport formatNumerals from \"./formatNumerals\";\nimport formatSpecifier from \"./formatSpecifier\";\nimport formatTrim from \"./formatTrim\";\nimport formatTypes from \"./formatTypes\";\nimport {prefixExponent} from \"./formatPrefixAuto\";\nimport identity from \"./identity\";\n\nvar prefixes = [\"y\",\"z\",\"a\",\"f\",\"p\",\"n\",\"µ\",\"m\",\"\",\"k\",\"M\",\"G\",\"T\",\"P\",\"E\",\"Z\",\"Y\"];\n\nexport default function(locale) {\n  var group = locale.grouping && locale.thousands ? formatGroup(locale.grouping, locale.thousands) : identity,\n      currency = locale.currency,\n      decimal = locale.decimal,\n      numerals = locale.numerals ? formatNumerals(locale.numerals) : identity,\n      percent = locale.percent || \"%\";\n\n  function newFormat(specifier) {\n    specifier = formatSpecifier(specifier);\n\n    var fill = specifier.fill,\n        align = specifier.align,\n        sign = specifier.sign,\n        symbol = specifier.symbol,\n        zero = specifier.zero,\n        width = specifier.width,\n        comma = specifier.comma,\n        precision = specifier.precision,\n        trim = specifier.trim,\n        type = specifier.type;\n\n    // The \"n\" type is an alias for \",g\".\n    if (type === \"n\") comma = true, type = \"g\";\n\n    // The \"\" type, and any invalid type, is an alias for \".12~g\".\n    else if (!formatTypes[type]) precision == null && (precision = 12), trim = true, type = \"g\";\n\n    // If zero fill is specified, padding goes after sign and before digits.\n    if (zero || (fill === \"0\" && align === \"=\")) zero = true, fill = \"0\", align = \"=\";\n\n    // Compute the prefix and suffix.\n    // For SI-prefix, the suffix is lazily computed.\n    var prefix = symbol === \"$\" ? currency[0] : symbol === \"#\" && /[boxX]/.test(type) ? \"0\" + type.toLowerCase() : \"\",\n        suffix = symbol === \"$\" ? currency[1] : /[%p]/.test(type) ? percent : \"\";\n\n    // What format function should we use?\n    // Is this an integer type?\n    // Can this type generate exponential notation?\n    var formatType = formatTypes[type],\n        maybeSuffix = /[defgprs%]/.test(type);\n\n    // Set the default precision if not specified,\n    // or clamp the specified precision to the supported range.\n    // For significant precision, it must be in [1, 21].\n    // For fixed precision, it must be in [0, 20].\n    precision = precision == null ? 6\n        : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision))\n        : Math.max(0, Math.min(20, precision));\n\n    function format(value) {\n      var valuePrefix = prefix,\n          valueSuffix = suffix,\n          i, n, c;\n\n      if (type === \"c\") {\n        valueSuffix = formatType(value) + valueSuffix;\n        value = \"\";\n      } else {\n        value = +value;\n\n        // Perform the initial formatting.\n        var valueNegative = value < 0;\n        value = formatType(Math.abs(value), precision);\n\n        // Trim insignificant zeros.\n        if (trim) value = formatTrim(value);\n\n        // If a negative value rounds to zero during formatting, treat as positive.\n        if (valueNegative && +value === 0) valueNegative = false;\n\n        // Compute the prefix and suffix.\n        valuePrefix = (valueNegative ? (sign === \"(\" ? sign : \"-\") : sign === \"-\" || sign === \"(\" ? \"\" : sign) + valuePrefix;\n        valueSuffix = (type === \"s\" ? prefixes[8 + prefixExponent / 3] : \"\") + valueSuffix + (valueNegative && sign === \"(\" ? \")\" : \"\");\n\n        // Break the formatted value into the integer “value” part that can be\n        // grouped, and fractional or exponential “suffix” part that is not.\n        if (maybeSuffix) {\n          i = -1, n = value.length;\n          while (++i < n) {\n            if (c = value.charCodeAt(i), 48 > c || c > 57) {\n              valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;\n              value = value.slice(0, i);\n              break;\n            }\n          }\n        }\n      }\n\n      // If the fill character is not \"0\", grouping is applied before padding.\n      if (comma && !zero) value = group(value, Infinity);\n\n      // Compute the padding.\n      var length = valuePrefix.length + value.length + valueSuffix.length,\n          padding = length < width ? new Array(width - length + 1).join(fill) : \"\";\n\n      // If the fill character is \"0\", grouping is applied after padding.\n      if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = \"\";\n\n      // Reconstruct the final output based on the desired alignment.\n      switch (align) {\n        case \"<\": value = valuePrefix + value + valueSuffix + padding; break;\n        case \"=\": value = valuePrefix + padding + value + valueSuffix; break;\n        case \"^\": value = padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length); break;\n        default: value = padding + valuePrefix + value + valueSuffix; break;\n      }\n\n      return numerals(value);\n    }\n\n    format.toString = function() {\n      return specifier + \"\";\n    };\n\n    return format;\n  }\n\n  function formatPrefix(specifier, value) {\n    var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = \"f\", specifier)),\n        e = Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3,\n        k = Math.pow(10, -e),\n        prefix = prefixes[8 + e / 3];\n    return function(value) {\n      return f(k * value) + prefix;\n    };\n  }\n\n  return {\n    format: newFormat,\n    formatPrefix: formatPrefix\n  };\n}\n","export default function(grouping, thousands) {\n  return function(value, width) {\n    var i = value.length,\n        t = [],\n        j = 0,\n        g = grouping[0],\n        length = 0;\n\n    while (i > 0 && g > 0) {\n      if (length + g + 1 > width) g = Math.max(1, width - length);\n      t.push(value.substring(i -= g, i + g));\n      if ((length += g + 1) > width) break;\n      g = grouping[j = (j + 1) % grouping.length];\n    }\n\n    return t.reverse().join(thousands);\n  };\n}\n","export default function(numerals) {\n  return function(value) {\n    return value.replace(/[0-9]/g, function(i) {\n      return numerals[+i];\n    });\n  };\n}\n","import exponent from \"./exponent\";\n\nexport default function(step) {\n  return Math.max(0, -exponent(Math.abs(step)));\n}\n","import exponent from \"./exponent\";\n\nexport default function(step, value) {\n  return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3 - exponent(Math.abs(step)));\n}\n","import exponent from \"./exponent\";\n\nexport default function(step, max) {\n  step = Math.abs(step), max = Math.abs(max) - step;\n  return Math.max(0, exponent(max) - exponent(step)) + 1;\n}\n","// Adds floating point numbers with twice the normal precision.\n// Reference: J. R. Shewchuk, Adaptive Precision Floating-Point Arithmetic and\n// Fast Robust Geometric Predicates, Discrete & Computational Geometry 18(3)\n// 305–363 (1997).\n// Code adapted from GeographicLib by Charles F. F. Karney,\n// http://geographiclib.sourceforge.net/\n\nexport default function() {\n  return new Adder;\n}\n\nfunction Adder() {\n  this.reset();\n}\n\nAdder.prototype = {\n  constructor: Adder,\n  reset: function() {\n    this.s = // rounded value\n    this.t = 0; // exact error\n  },\n  add: function(y) {\n    add(temp, y, this.t);\n    add(this, temp.s, this.s);\n    if (this.s) this.t += temp.t;\n    else this.s = temp.t;\n  },\n  valueOf: function() {\n    return this.s;\n  }\n};\n\nvar temp = new Adder;\n\nfunction add(adder, a, b) {\n  var x = adder.s = a + b,\n      bv = x - a,\n      av = x - bv;\n  adder.t = (a - av) + (b - bv);\n}\n","export var epsilon = 1e-6;\nexport var epsilon2 = 1e-12;\nexport var pi = Math.PI;\nexport var halfPi = pi / 2;\nexport var quarterPi = pi / 4;\nexport var tau = pi * 2;\n\nexport var degrees = 180 / pi;\nexport var radians = pi / 180;\n\nexport var abs = Math.abs;\nexport var atan = Math.atan;\nexport var atan2 = Math.atan2;\nexport var cos = Math.cos;\nexport var ceil = Math.ceil;\nexport var exp = Math.exp;\nexport var floor = Math.floor;\nexport var log = Math.log;\nexport var pow = Math.pow;\nexport var sin = Math.sin;\nexport var sign = Math.sign || function(x) { return x > 0 ? 1 : x < 0 ? -1 : 0; };\nexport var sqrt = Math.sqrt;\nexport var tan = Math.tan;\n\nexport function acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);\n}\n\nexport function asin(x) {\n  return x > 1 ? halfPi : x < -1 ? -halfPi : Math.asin(x);\n}\n\nexport function haversin(x) {\n  return (x = sin(x / 2)) * x;\n}\n","export default function noop() {}\n","function streamGeometry(geometry, stream) {\n  if (geometry && streamGeometryType.hasOwnProperty(geometry.type)) {\n    streamGeometryType[geometry.type](geometry, stream);\n  }\n}\n\nvar streamObjectType = {\n  Feature: function(object, stream) {\n    streamGeometry(object.geometry, stream);\n  },\n  FeatureCollection: function(object, stream) {\n    var features = object.features, i = -1, n = features.length;\n    while (++i < n) streamGeometry(features[i].geometry, stream);\n  }\n};\n\nvar streamGeometryType = {\n  Sphere: function(object, stream) {\n    stream.sphere();\n  },\n  Point: function(object, stream) {\n    object = object.coordinates;\n    stream.point(object[0], object[1], object[2]);\n  },\n  MultiPoint: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) object = coordinates[i], stream.point(object[0], object[1], object[2]);\n  },\n  LineString: function(object, stream) {\n    streamLine(object.coordinates, stream, 0);\n  },\n  MultiLineString: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamLine(coordinates[i], stream, 0);\n  },\n  Polygon: function(object, stream) {\n    streamPolygon(object.coordinates, stream);\n  },\n  MultiPolygon: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamPolygon(coordinates[i], stream);\n  },\n  GeometryCollection: function(object, stream) {\n    var geometries = object.geometries, i = -1, n = geometries.length;\n    while (++i < n) streamGeometry(geometries[i], stream);\n  }\n};\n\nfunction streamLine(coordinates, stream, closed) {\n  var i = -1, n = coordinates.length - closed, coordinate;\n  stream.lineStart();\n  while (++i < n) coordinate = coordinates[i], stream.point(coordinate[0], coordinate[1], coordinate[2]);\n  stream.lineEnd();\n}\n\nfunction streamPolygon(coordinates, stream) {\n  var i = -1, n = coordinates.length;\n  stream.polygonStart();\n  while (++i < n) streamLine(coordinates[i], stream, 1);\n  stream.polygonEnd();\n}\n\nexport default function(object, stream) {\n  if (object && streamObjectType.hasOwnProperty(object.type)) {\n    streamObjectType[object.type](object, stream);\n  } else {\n    streamGeometry(object, stream);\n  }\n}\n","import adder from \"./adder\";\nimport {atan2, cos, quarterPi, radians, sin, tau} from \"./math\";\nimport noop from \"./noop\";\nimport stream from \"./stream\";\n\nexport var areaRingSum = adder();\n\nvar areaSum = adder(),\n    lambda00,\n    phi00,\n    lambda0,\n    cosPhi0,\n    sinPhi0;\n\nexport var areaStream = {\n  point: noop,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: function() {\n    areaRingSum.reset();\n    areaStream.lineStart = areaRingStart;\n    areaStream.lineEnd = areaRingEnd;\n  },\n  polygonEnd: function() {\n    var areaRing = +areaRingSum;\n    areaSum.add(areaRing < 0 ? tau + areaRing : areaRing);\n    this.lineStart = this.lineEnd = this.point = noop;\n  },\n  sphere: function() {\n    areaSum.add(tau);\n  }\n};\n\nfunction areaRingStart() {\n  areaStream.point = areaPointFirst;\n}\n\nfunction areaRingEnd() {\n  areaPoint(lambda00, phi00);\n}\n\nfunction areaPointFirst(lambda, phi) {\n  areaStream.point = areaPoint;\n  lambda00 = lambda, phi00 = phi;\n  lambda *= radians, phi *= radians;\n  lambda0 = lambda, cosPhi0 = cos(phi = phi / 2 + quarterPi), sinPhi0 = sin(phi);\n}\n\nfunction areaPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  phi = phi / 2 + quarterPi; // half the angular distance from south pole\n\n  // Spherical excess E for a spherical triangle with vertices: south pole,\n  // previous point, current point.  Uses a formula derived from Cagnoli’s\n  // theorem.  See Todhunter, Spherical Trig. (1871), Sec. 103, Eq. (2).\n  var dLambda = lambda - lambda0,\n      sdLambda = dLambda >= 0 ? 1 : -1,\n      adLambda = sdLambda * dLambda,\n      cosPhi = cos(phi),\n      sinPhi = sin(phi),\n      k = sinPhi0 * sinPhi,\n      u = cosPhi0 * cosPhi + k * cos(adLambda),\n      v = k * sdLambda * sin(adLambda);\n  areaRingSum.add(atan2(v, u));\n\n  // Advance the previous points.\n  lambda0 = lambda, cosPhi0 = cosPhi, sinPhi0 = sinPhi;\n}\n\nexport default function(object) {\n  areaSum.reset();\n  stream(object, areaStream);\n  return areaSum * 2;\n}\n","import {asin, atan2, cos, sin, sqrt} from \"./math\";\n\nexport function spherical(cartesian) {\n  return [atan2(cartesian[1], cartesian[0]), asin(cartesian[2])];\n}\n\nexport function cartesian(spherical) {\n  var lambda = spherical[0], phi = spherical[1], cosPhi = cos(phi);\n  return [cosPhi * cos(lambda), cosPhi * sin(lambda), sin(phi)];\n}\n\nexport function cartesianDot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n\nexport function cartesianCross(a, b) {\n  return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];\n}\n\n// TODO return a\nexport function cartesianAddInPlace(a, b) {\n  a[0] += b[0], a[1] += b[1], a[2] += b[2];\n}\n\nexport function cartesianScale(vector, k) {\n  return [vector[0] * k, vector[1] * k, vector[2] * k];\n}\n\n// TODO return d\nexport function cartesianNormalizeInPlace(d) {\n  var l = sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n  d[0] /= l, d[1] /= l, d[2] /= l;\n}\n","import adder from \"./adder\";\nimport {areaStream, areaRingSum} from \"./area\";\nimport {cartesian, cartesianCross, cartesianNormalizeInPlace, spherical} from \"./cartesian\";\nimport {abs, degrees, epsilon, radians} from \"./math\";\nimport stream from \"./stream\";\n\nvar lambda0, phi0, lambda1, phi1, // bounds\n    lambda2, // previous lambda-coordinate\n    lambda00, phi00, // first point\n    p0, // previous 3D point\n    deltaSum = adder(),\n    ranges,\n    range;\n\nvar boundsStream = {\n  point: boundsPoint,\n  lineStart: boundsLineStart,\n  lineEnd: boundsLineEnd,\n  polygonStart: function() {\n    boundsStream.point = boundsRingPoint;\n    boundsStream.lineStart = boundsRingStart;\n    boundsStream.lineEnd = boundsRingEnd;\n    deltaSum.reset();\n    areaStream.polygonStart();\n  },\n  polygonEnd: function() {\n    areaStream.polygonEnd();\n    boundsStream.point = boundsPoint;\n    boundsStream.lineStart = boundsLineStart;\n    boundsStream.lineEnd = boundsLineEnd;\n    if (areaRingSum < 0) lambda0 = -(lambda1 = 180), phi0 = -(phi1 = 90);\n    else if (deltaSum > epsilon) phi1 = 90;\n    else if (deltaSum < -epsilon) phi0 = -90;\n    range[0] = lambda0, range[1] = lambda1;\n  }\n};\n\nfunction boundsPoint(lambda, phi) {\n  ranges.push(range = [lambda0 = lambda, lambda1 = lambda]);\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n}\n\nfunction linePoint(lambda, phi) {\n  var p = cartesian([lambda * radians, phi * radians]);\n  if (p0) {\n    var normal = cartesianCross(p0, p),\n        equatorial = [normal[1], -normal[0], 0],\n        inflection = cartesianCross(equatorial, normal);\n    cartesianNormalizeInPlace(inflection);\n    inflection = spherical(inflection);\n    var delta = lambda - lambda2,\n        sign = delta > 0 ? 1 : -1,\n        lambdai = inflection[0] * degrees * sign,\n        phii,\n        antimeridian = abs(delta) > 180;\n    if (antimeridian ^ (sign * lambda2 < lambdai && lambdai < sign * lambda)) {\n      phii = inflection[1] * degrees;\n      if (phii > phi1) phi1 = phii;\n    } else if (lambdai = (lambdai + 360) % 360 - 180, antimeridian ^ (sign * lambda2 < lambdai && lambdai < sign * lambda)) {\n      phii = -inflection[1] * degrees;\n      if (phii < phi0) phi0 = phii;\n    } else {\n      if (phi < phi0) phi0 = phi;\n      if (phi > phi1) phi1 = phi;\n    }\n    if (antimeridian) {\n      if (lambda < lambda2) {\n        if (angle(lambda0, lambda) > angle(lambda0, lambda1)) lambda1 = lambda;\n      } else {\n        if (angle(lambda, lambda1) > angle(lambda0, lambda1)) lambda0 = lambda;\n      }\n    } else {\n      if (lambda1 >= lambda0) {\n        if (lambda < lambda0) lambda0 = lambda;\n        if (lambda > lambda1) lambda1 = lambda;\n      } else {\n        if (lambda > lambda2) {\n          if (angle(lambda0, lambda) > angle(lambda0, lambda1)) lambda1 = lambda;\n        } else {\n          if (angle(lambda, lambda1) > angle(lambda0, lambda1)) lambda0 = lambda;\n        }\n      }\n    }\n  } else {\n    ranges.push(range = [lambda0 = lambda, lambda1 = lambda]);\n  }\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n  p0 = p, lambda2 = lambda;\n}\n\nfunction boundsLineStart() {\n  boundsStream.point = linePoint;\n}\n\nfunction boundsLineEnd() {\n  range[0] = lambda0, range[1] = lambda1;\n  boundsStream.point = boundsPoint;\n  p0 = null;\n}\n\nfunction boundsRingPoint(lambda, phi) {\n  if (p0) {\n    var delta = lambda - lambda2;\n    deltaSum.add(abs(delta) > 180 ? delta + (delta > 0 ? 360 : -360) : delta);\n  } else {\n    lambda00 = lambda, phi00 = phi;\n  }\n  areaStream.point(lambda, phi);\n  linePoint(lambda, phi);\n}\n\nfunction boundsRingStart() {\n  areaStream.lineStart();\n}\n\nfunction boundsRingEnd() {\n  boundsRingPoint(lambda00, phi00);\n  areaStream.lineEnd();\n  if (abs(deltaSum) > epsilon) lambda0 = -(lambda1 = 180);\n  range[0] = lambda0, range[1] = lambda1;\n  p0 = null;\n}\n\n// Finds the left-right distance between two longitudes.\n// This is almost the same as (lambda1 - lambda0 + 360°) % 360°, except that we want\n// the distance between ±180° to be 360°.\nfunction angle(lambda0, lambda1) {\n  return (lambda1 -= lambda0) < 0 ? lambda1 + 360 : lambda1;\n}\n\nfunction rangeCompare(a, b) {\n  return a[0] - b[0];\n}\n\nfunction rangeContains(range, x) {\n  return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n}\n\nexport default function(feature) {\n  var i, n, a, b, merged, deltaMax, delta;\n\n  phi1 = lambda1 = -(lambda0 = phi0 = Infinity);\n  ranges = [];\n  stream(feature, boundsStream);\n\n  // First, sort ranges by their minimum longitudes.\n  if (n = ranges.length) {\n    ranges.sort(rangeCompare);\n\n    // Then, merge any ranges that overlap.\n    for (i = 1, a = ranges[0], merged = [a]; i < n; ++i) {\n      b = ranges[i];\n      if (rangeContains(a, b[0]) || rangeContains(a, b[1])) {\n        if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n        if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n      } else {\n        merged.push(a = b);\n      }\n    }\n\n    // Finally, find the largest gap between the merged ranges.\n    // The final bounding box will be the inverse of this gap.\n    for (deltaMax = -Infinity, n = merged.length - 1, i = 0, a = merged[n]; i <= n; a = b, ++i) {\n      b = merged[i];\n      if ((delta = angle(a[1], b[0])) > deltaMax) deltaMax = delta, lambda0 = b[0], lambda1 = a[1];\n    }\n  }\n\n  ranges = range = null;\n\n  return lambda0 === Infinity || phi0 === Infinity\n      ? [[NaN, NaN], [NaN, NaN]]\n      : [[lambda0, phi0], [lambda1, phi1]];\n}\n","import {asin, atan2, cos, degrees, epsilon, epsilon2, radians, sin, sqrt} from \"./math\";\nimport noop from \"./noop\";\nimport stream from \"./stream\";\n\nvar W0, W1,\n    X0, Y0, Z0,\n    X1, Y1, Z1,\n    X2, Y2, Z2,\n    lambda00, phi00, // first point\n    x0, y0, z0; // previous point\n\nvar centroidStream = {\n  sphere: noop,\n  point: centroidPoint,\n  lineStart: centroidLineStart,\n  lineEnd: centroidLineEnd,\n  polygonStart: function() {\n    centroidStream.lineStart = centroidRingStart;\n    centroidStream.lineEnd = centroidRingEnd;\n  },\n  polygonEnd: function() {\n    centroidStream.lineStart = centroidLineStart;\n    centroidStream.lineEnd = centroidLineEnd;\n  }\n};\n\n// Arithmetic mean of Cartesian vectors.\nfunction centroidPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi);\n  centroidPointCartesian(cosPhi * cos(lambda), cosPhi * sin(lambda), sin(phi));\n}\n\nfunction centroidPointCartesian(x, y, z) {\n  ++W0;\n  X0 += (x - X0) / W0;\n  Y0 += (y - Y0) / W0;\n  Z0 += (z - Z0) / W0;\n}\n\nfunction centroidLineStart() {\n  centroidStream.point = centroidLinePointFirst;\n}\n\nfunction centroidLinePointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi);\n  x0 = cosPhi * cos(lambda);\n  y0 = cosPhi * sin(lambda);\n  z0 = sin(phi);\n  centroidStream.point = centroidLinePoint;\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLinePoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi),\n      x = cosPhi * cos(lambda),\n      y = cosPhi * sin(lambda),\n      z = sin(phi),\n      w = atan2(sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLineEnd() {\n  centroidStream.point = centroidPoint;\n}\n\n// See J. E. Brock, The Inertia Tensor for a Spherical Triangle,\n// J. Applied Mechanics 42, 239 (1975).\nfunction centroidRingStart() {\n  centroidStream.point = centroidRingPointFirst;\n}\n\nfunction centroidRingEnd() {\n  centroidRingPoint(lambda00, phi00);\n  centroidStream.point = centroidPoint;\n}\n\nfunction centroidRingPointFirst(lambda, phi) {\n  lambda00 = lambda, phi00 = phi;\n  lambda *= radians, phi *= radians;\n  centroidStream.point = centroidRingPoint;\n  var cosPhi = cos(phi);\n  x0 = cosPhi * cos(lambda);\n  y0 = cosPhi * sin(lambda);\n  z0 = sin(phi);\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidRingPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi),\n      x = cosPhi * cos(lambda),\n      y = cosPhi * sin(lambda),\n      z = sin(phi),\n      cx = y0 * z - z0 * y,\n      cy = z0 * x - x0 * z,\n      cz = x0 * y - y0 * x,\n      m = sqrt(cx * cx + cy * cy + cz * cz),\n      w = asin(m), // line weight = angle\n      v = m && -w / m; // area weight multiplier\n  X2 += v * cx;\n  Y2 += v * cy;\n  Z2 += v * cz;\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nexport default function(object) {\n  W0 = W1 =\n  X0 = Y0 = Z0 =\n  X1 = Y1 = Z1 =\n  X2 = Y2 = Z2 = 0;\n  stream(object, centroidStream);\n\n  var x = X2,\n      y = Y2,\n      z = Z2,\n      m = x * x + y * y + z * z;\n\n  // If the area-weighted ccentroid is undefined, fall back to length-weighted ccentroid.\n  if (m < epsilon2) {\n    x = X1, y = Y1, z = Z1;\n    // If the feature has zero length, fall back to arithmetic mean of point vectors.\n    if (W1 < epsilon) x = X0, y = Y0, z = Z0;\n    m = x * x + y * y + z * z;\n    // If the feature still has an undefined ccentroid, then return.\n    if (m < epsilon2) return [NaN, NaN];\n  }\n\n  return [atan2(y, x) * degrees, asin(z / sqrt(m)) * degrees];\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function(a, b) {\n\n  function compose(x, y) {\n    return x = a(x, y), b(x[0], x[1]);\n  }\n\n  if (a.invert && b.invert) compose.invert = function(x, y) {\n    return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n  };\n\n  return compose;\n}\n","import compose from \"./compose\";\nimport {asin, atan2, cos, degrees, pi, radians, sin, tau} from \"./math\";\n\nfunction rotationIdentity(lambda, phi) {\n  return [lambda > pi ? lambda - tau : lambda < -pi ? lambda + tau : lambda, phi];\n}\n\nrotationIdentity.invert = rotationIdentity;\n\nexport function rotateRadians(deltaLambda, deltaPhi, deltaGamma) {\n  return (deltaLambda %= tau) ? (deltaPhi || deltaGamma ? compose(rotationLambda(deltaLambda), rotationPhiGamma(deltaPhi, deltaGamma))\n    : rotationLambda(deltaLambda))\n    : (deltaPhi || deltaGamma ? rotationPhiGamma(deltaPhi, deltaGamma)\n    : rotationIdentity);\n}\n\nfunction forwardRotationLambda(deltaLambda) {\n  return function(lambda, phi) {\n    return lambda += deltaLambda, [lambda > pi ? lambda - tau : lambda < -pi ? lambda + tau : lambda, phi];\n  };\n}\n\nfunction rotationLambda(deltaLambda) {\n  var rotation = forwardRotationLambda(deltaLambda);\n  rotation.invert = forwardRotationLambda(-deltaLambda);\n  return rotation;\n}\n\nfunction rotationPhiGamma(deltaPhi, deltaGamma) {\n  var cosDeltaPhi = cos(deltaPhi),\n      sinDeltaPhi = sin(deltaPhi),\n      cosDeltaGamma = cos(deltaGamma),\n      sinDeltaGamma = sin(deltaGamma);\n\n  function rotation(lambda, phi) {\n    var cosPhi = cos(phi),\n        x = cos(lambda) * cosPhi,\n        y = sin(lambda) * cosPhi,\n        z = sin(phi),\n        k = z * cosDeltaPhi + x * sinDeltaPhi;\n    return [\n      atan2(y * cosDeltaGamma - k * sinDeltaGamma, x * cosDeltaPhi - z * sinDeltaPhi),\n      asin(k * cosDeltaGamma + y * sinDeltaGamma)\n    ];\n  }\n\n  rotation.invert = function(lambda, phi) {\n    var cosPhi = cos(phi),\n        x = cos(lambda) * cosPhi,\n        y = sin(lambda) * cosPhi,\n        z = sin(phi),\n        k = z * cosDeltaGamma - y * sinDeltaGamma;\n    return [\n      atan2(y * cosDeltaGamma + z * sinDeltaGamma, x * cosDeltaPhi + k * sinDeltaPhi),\n      asin(k * cosDeltaPhi - x * sinDeltaPhi)\n    ];\n  };\n\n  return rotation;\n}\n\nexport default function(rotate) {\n  rotate = rotateRadians(rotate[0] * radians, rotate[1] * radians, rotate.length > 2 ? rotate[2] * radians : 0);\n\n  function forward(coordinates) {\n    coordinates = rotate(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees, coordinates[1] *= degrees, coordinates;\n  }\n\n  forward.invert = function(coordinates) {\n    coordinates = rotate.invert(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees, coordinates[1] *= degrees, coordinates;\n  };\n\n  return forward;\n}\n","import {cartesian, cartesianNormalizeInPlace, spherical} from \"./cartesian\";\nimport constant from \"./constant\";\nimport {acos, cos, degrees, epsilon, radians, sin, tau} from \"./math\";\nimport {rotateRadians} from \"./rotation\";\n\n// Generates a circle centered at [0°, 0°], with a given radius and precision.\nexport function circleStream(stream, radius, delta, direction, t0, t1) {\n  if (!delta) return;\n  var cosRadius = cos(radius),\n      sinRadius = sin(radius),\n      step = direction * delta;\n  if (t0 == null) {\n    t0 = radius + direction * tau;\n    t1 = radius - step / 2;\n  } else {\n    t0 = circleRadius(cosRadius, t0);\n    t1 = circleRadius(cosRadius, t1);\n    if (direction > 0 ? t0 < t1 : t0 > t1) t0 += direction * tau;\n  }\n  for (var point, t = t0; direction > 0 ? t > t1 : t < t1; t -= step) {\n    point = spherical([cosRadius, -sinRadius * cos(t), -sinRadius * sin(t)]);\n    stream.point(point[0], point[1]);\n  }\n}\n\n// Returns the signed angle of a cartesian point relative to [cosRadius, 0, 0].\nfunction circleRadius(cosRadius, point) {\n  point = cartesian(point), point[0] -= cosRadius;\n  cartesianNormalizeInPlace(point);\n  var radius = acos(-point[1]);\n  return ((-point[2] < 0 ? -radius : radius) + tau - epsilon) % tau;\n}\n\nexport default function() {\n  var center = constant([0, 0]),\n      radius = constant(90),\n      precision = constant(6),\n      ring,\n      rotate,\n      stream = {point: point};\n\n  function point(x, y) {\n    ring.push(x = rotate(x, y));\n    x[0] *= degrees, x[1] *= degrees;\n  }\n\n  function circle() {\n    var c = center.apply(this, arguments),\n        r = radius.apply(this, arguments) * radians,\n        p = precision.apply(this, arguments) * radians;\n    ring = [];\n    rotate = rotateRadians(-c[0] * radians, -c[1] * radians, 0).invert;\n    circleStream(stream, r, p, 1);\n    c = {type: \"Polygon\", coordinates: [ring]};\n    ring = rotate = null;\n    return c;\n  }\n\n  circle.center = function(_) {\n    return arguments.length ? (center = typeof _ === \"function\" ? _ : constant([+_[0], +_[1]]), circle) : center;\n  };\n\n  circle.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant(+_), circle) : radius;\n  };\n\n  circle.precision = function(_) {\n    return arguments.length ? (precision = typeof _ === \"function\" ? _ : constant(+_), circle) : precision;\n  };\n\n  return circle;\n}\n","import noop from \"../noop\";\n\nexport default function() {\n  var lines = [],\n      line;\n  return {\n    point: function(x, y) {\n      line.push([x, y]);\n    },\n    lineStart: function() {\n      lines.push(line = []);\n    },\n    lineEnd: noop,\n    rejoin: function() {\n      if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n    },\n    result: function() {\n      var result = lines;\n      lines = [];\n      line = null;\n      return result;\n    }\n  };\n}\n","import {abs, epsilon} from \"./math\";\n\nexport default function(a, b) {\n  return abs(a[0] - b[0]) < epsilon && abs(a[1] - b[1]) < epsilon;\n}\n","import pointEqual from \"../pointEqual\";\n\nfunction Intersection(point, points, other, entry) {\n  this.x = point;\n  this.z = points;\n  this.o = other; // another intersection\n  this.e = entry; // is an entry?\n  this.v = false; // visited\n  this.n = this.p = null; // next & previous\n}\n\n// A generalized polygon clipping algorithm: given a polygon that has been cut\n// into its visible line segments, and rejoins the segments by interpolating\n// along the clip edge.\nexport default function(segments, compareIntersection, startInside, interpolate, stream) {\n  var subject = [],\n      clip = [],\n      i,\n      n;\n\n  segments.forEach(function(segment) {\n    if ((n = segment.length - 1) <= 0) return;\n    var n, p0 = segment[0], p1 = segment[n], x;\n\n    // If the first and last points of a segment are coincident, then treat as a\n    // closed ring. TODO if all rings are closed, then the winding order of the\n    // exterior ring should be checked.\n    if (pointEqual(p0, p1)) {\n      stream.lineStart();\n      for (i = 0; i < n; ++i) stream.point((p0 = segment[i])[0], p0[1]);\n      stream.lineEnd();\n      return;\n    }\n\n    subject.push(x = new Intersection(p0, segment, null, true));\n    clip.push(x.o = new Intersection(p0, null, x, false));\n    subject.push(x = new Intersection(p1, segment, null, false));\n    clip.push(x.o = new Intersection(p1, null, x, true));\n  });\n\n  if (!subject.length) return;\n\n  clip.sort(compareIntersection);\n  link(subject);\n  link(clip);\n\n  for (i = 0, n = clip.length; i < n; ++i) {\n    clip[i].e = startInside = !startInside;\n  }\n\n  var start = subject[0],\n      points,\n      point;\n\n  while (1) {\n    // Find first unvisited intersection.\n    var current = start,\n        isSubject = true;\n    while (current.v) if ((current = current.n) === start) return;\n    points = current.z;\n    stream.lineStart();\n    do {\n      current.v = current.o.v = true;\n      if (current.e) {\n        if (isSubject) {\n          for (i = 0, n = points.length; i < n; ++i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.n.x, 1, stream);\n        }\n        current = current.n;\n      } else {\n        if (isSubject) {\n          points = current.p.z;\n          for (i = points.length - 1; i >= 0; --i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.p.x, -1, stream);\n        }\n        current = current.p;\n      }\n      current = current.o;\n      points = current.z;\n      isSubject = !isSubject;\n    } while (!current.v);\n    stream.lineEnd();\n  }\n}\n\nfunction link(array) {\n  if (!(n = array.length)) return;\n  var n,\n      i = 0,\n      a = array[0],\n      b;\n  while (++i < n) {\n    a.n = b = array[i];\n    b.p = a;\n    a = b;\n  }\n  a.n = b = array[0];\n  b.p = a;\n}\n","import adder from \"./adder\";\nimport {cartesian, cartesianCross, cartesianNormalizeInPlace} from \"./cartesian\";\nimport {asin, atan2, cos, epsilon, halfPi, pi, quarterPi, sin, tau} from \"./math\";\n\nvar sum = adder();\n\nexport default function(polygon, point) {\n  var lambda = point[0],\n      phi = point[1],\n      sinPhi = sin(phi),\n      normal = [sin(lambda), -cos(lambda), 0],\n      angle = 0,\n      winding = 0;\n\n  sum.reset();\n\n  if (sinPhi === 1) phi = halfPi + epsilon;\n  else if (sinPhi === -1) phi = -halfPi - epsilon;\n\n  for (var i = 0, n = polygon.length; i < n; ++i) {\n    if (!(m = (ring = polygon[i]).length)) continue;\n    var ring,\n        m,\n        point0 = ring[m - 1],\n        lambda0 = point0[0],\n        phi0 = point0[1] / 2 + quarterPi,\n        sinPhi0 = sin(phi0),\n        cosPhi0 = cos(phi0);\n\n    for (var j = 0; j < m; ++j, lambda0 = lambda1, sinPhi0 = sinPhi1, cosPhi0 = cosPhi1, point0 = point1) {\n      var point1 = ring[j],\n          lambda1 = point1[0],\n          phi1 = point1[1] / 2 + quarterPi,\n          sinPhi1 = sin(phi1),\n          cosPhi1 = cos(phi1),\n          delta = lambda1 - lambda0,\n          sign = delta >= 0 ? 1 : -1,\n          absDelta = sign * delta,\n          antimeridian = absDelta > pi,\n          k = sinPhi0 * sinPhi1;\n\n      sum.add(atan2(k * sign * sin(absDelta), cosPhi0 * cosPhi1 + k * cos(absDelta)));\n      angle += antimeridian ? delta + sign * tau : delta;\n\n      // Are the longitudes either side of the point’s meridian (lambda),\n      // and are the latitudes smaller than the parallel (phi)?\n      if (antimeridian ^ lambda0 >= lambda ^ lambda1 >= lambda) {\n        var arc = cartesianCross(cartesian(point0), cartesian(point1));\n        cartesianNormalizeInPlace(arc);\n        var intersection = cartesianCross(normal, arc);\n        cartesianNormalizeInPlace(intersection);\n        var phiArc = (antimeridian ^ delta >= 0 ? -1 : 1) * asin(intersection[2]);\n        if (phi > phiArc || phi === phiArc && (arc[0] || arc[1])) {\n          winding += antimeridian ^ delta >= 0 ? 1 : -1;\n        }\n      }\n    }\n  }\n\n  // First, determine whether the South pole is inside or outside:\n  //\n  // It is inside if:\n  // * the polygon winds around it in a clockwise direction.\n  // * the polygon does not (cumulatively) wind around it, but has a negative\n  //   (counter-clockwise) area.\n  //\n  // Second, count the (signed) number of times a segment crosses a lambda\n  // from the point to the South pole.  If it is zero, then the point is the\n  // same side as the South pole.\n\n  return (angle < -epsilon || angle < epsilon && sum < -epsilon) ^ (winding & 1);\n}\n","import clipBuffer from \"./buffer\";\nimport clipRejoin from \"./rejoin\";\nimport {epsilon, halfPi} from \"../math\";\nimport polygonContains from \"../polygonContains\";\nimport {merge} from \"d3-array\";\n\nexport default function(pointVisible, clipLine, interpolate, start) {\n  return function(sink) {\n    var line = clipLine(sink),\n        ringBuffer = clipBuffer(),\n        ringSink = clipLine(ringBuffer),\n        polygonStarted = false,\n        polygon,\n        segments,\n        ring;\n\n    var clip = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        clip.point = pointRing;\n        clip.lineStart = ringStart;\n        clip.lineEnd = ringEnd;\n        segments = [];\n        polygon = [];\n      },\n      polygonEnd: function() {\n        clip.point = point;\n        clip.lineStart = lineStart;\n        clip.lineEnd = lineEnd;\n        segments = merge(segments);\n        var startInside = polygonContains(polygon, start);\n        if (segments.length) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          clipRejoin(segments, compareIntersection, startInside, interpolate, sink);\n        } else if (startInside) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          interpolate(null, null, 1, sink);\n          sink.lineEnd();\n        }\n        if (polygonStarted) sink.polygonEnd(), polygonStarted = false;\n        segments = polygon = null;\n      },\n      sphere: function() {\n        sink.polygonStart();\n        sink.lineStart();\n        interpolate(null, null, 1, sink);\n        sink.lineEnd();\n        sink.polygonEnd();\n      }\n    };\n\n    function point(lambda, phi) {\n      if (pointVisible(lambda, phi)) sink.point(lambda, phi);\n    }\n\n    function pointLine(lambda, phi) {\n      line.point(lambda, phi);\n    }\n\n    function lineStart() {\n      clip.point = pointLine;\n      line.lineStart();\n    }\n\n    function lineEnd() {\n      clip.point = point;\n      line.lineEnd();\n    }\n\n    function pointRing(lambda, phi) {\n      ring.push([lambda, phi]);\n      ringSink.point(lambda, phi);\n    }\n\n    function ringStart() {\n      ringSink.lineStart();\n      ring = [];\n    }\n\n    function ringEnd() {\n      pointRing(ring[0][0], ring[0][1]);\n      ringSink.lineEnd();\n\n      var clean = ringSink.clean(),\n          ringSegments = ringBuffer.result(),\n          i, n = ringSegments.length, m,\n          segment,\n          point;\n\n      ring.pop();\n      polygon.push(ring);\n      ring = null;\n\n      if (!n) return;\n\n      // No intersections.\n      if (clean & 1) {\n        segment = ringSegments[0];\n        if ((m = segment.length - 1) > 0) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          for (i = 0; i < m; ++i) sink.point((point = segment[i])[0], point[1]);\n          sink.lineEnd();\n        }\n        return;\n      }\n\n      // Rejoin connected segments.\n      // TODO reuse ringBuffer.rejoin()?\n      if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n\n      segments.push(ringSegments.filter(validSegment));\n    }\n\n    return clip;\n  };\n}\n\nfunction validSegment(segment) {\n  return segment.length > 1;\n}\n\n// Intersections are sorted along the clip edge. For both antimeridian cutting\n// and circle clipping, the same comparison is used.\nfunction compareIntersection(a, b) {\n  return ((a = a.x)[0] < 0 ? a[1] - halfPi - epsilon : halfPi - a[1])\n       - ((b = b.x)[0] < 0 ? b[1] - halfPi - epsilon : halfPi - b[1]);\n}\n","import clip from \"./index\";\nimport {abs, atan, cos, epsilon, halfPi, pi, sin} from \"../math\";\n\nexport default clip(\n  function() { return true; },\n  clipAntimeridianLine,\n  clipAntimeridianInterpolate,\n  [-pi, -halfPi]\n);\n\n// Takes a line and cuts into visible segments. Return values: 0 - there were\n// intersections or the line was empty; 1 - no intersections; 2 - there were\n// intersections, and the first and last segments should be rejoined.\nfunction clipAntimeridianLine(stream) {\n  var lambda0 = NaN,\n      phi0 = NaN,\n      sign0 = NaN,\n      clean; // no intersections\n\n  return {\n    lineStart: function() {\n      stream.lineStart();\n      clean = 1;\n    },\n    point: function(lambda1, phi1) {\n      var sign1 = lambda1 > 0 ? pi : -pi,\n          delta = abs(lambda1 - lambda0);\n      if (abs(delta - pi) < epsilon) { // line crosses a pole\n        stream.point(lambda0, phi0 = (phi0 + phi1) / 2 > 0 ? halfPi : -halfPi);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        stream.point(lambda1, phi0);\n        clean = 0;\n      } else if (sign0 !== sign1 && delta >= pi) { // line crosses antimeridian\n        if (abs(lambda0 - sign0) < epsilon) lambda0 -= sign0 * epsilon; // handle degeneracies\n        if (abs(lambda1 - sign1) < epsilon) lambda1 -= sign1 * epsilon;\n        phi0 = clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        clean = 0;\n      }\n      stream.point(lambda0 = lambda1, phi0 = phi1);\n      sign0 = sign1;\n    },\n    lineEnd: function() {\n      stream.lineEnd();\n      lambda0 = phi0 = NaN;\n    },\n    clean: function() {\n      return 2 - clean; // if intersections, rejoin first and last segments\n    }\n  };\n}\n\nfunction clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1) {\n  var cosPhi0,\n      cosPhi1,\n      sinLambda0Lambda1 = sin(lambda0 - lambda1);\n  return abs(sinLambda0Lambda1) > epsilon\n      ? atan((sin(phi0) * (cosPhi1 = cos(phi1)) * sin(lambda1)\n          - sin(phi1) * (cosPhi0 = cos(phi0)) * sin(lambda0))\n          / (cosPhi0 * cosPhi1 * sinLambda0Lambda1))\n      : (phi0 + phi1) / 2;\n}\n\nfunction clipAntimeridianInterpolate(from, to, direction, stream) {\n  var phi;\n  if (from == null) {\n    phi = direction * halfPi;\n    stream.point(-pi, phi);\n    stream.point(0, phi);\n    stream.point(pi, phi);\n    stream.point(pi, 0);\n    stream.point(pi, -phi);\n    stream.point(0, -phi);\n    stream.point(-pi, -phi);\n    stream.point(-pi, 0);\n    stream.point(-pi, phi);\n  } else if (abs(from[0] - to[0]) > epsilon) {\n    var lambda = from[0] < to[0] ? pi : -pi;\n    phi = direction * lambda / 2;\n    stream.point(-lambda, phi);\n    stream.point(0, phi);\n    stream.point(lambda, phi);\n  } else {\n    stream.point(to[0], to[1]);\n  }\n}\n","import {cartesian, cartesianAddInPlace, cartesianCross, cartesianDot, cartesianScale, spherical} from \"../cartesian\";\nimport {circleStream} from \"../circle\";\nimport {abs, cos, epsilon, pi, radians, sqrt} from \"../math\";\nimport pointEqual from \"../pointEqual\";\nimport clip from \"./index\";\n\nexport default function(radius) {\n  var cr = cos(radius),\n      delta = 6 * radians,\n      smallRadius = cr > 0,\n      notHemisphere = abs(cr) > epsilon; // TODO optimise for this common case\n\n  function interpolate(from, to, direction, stream) {\n    circleStream(stream, radius, delta, direction, from, to);\n  }\n\n  function visible(lambda, phi) {\n    return cos(lambda) * cos(phi) > cr;\n  }\n\n  // Takes a line and cuts into visible segments. Return values used for polygon\n  // clipping: 0 - there were intersections or the line was empty; 1 - no\n  // intersections 2 - there were intersections, and the first and last segments\n  // should be rejoined.\n  function clipLine(stream) {\n    var point0, // previous point\n        c0, // code for previous point\n        v0, // visibility of previous point\n        v00, // visibility of first point\n        clean; // no intersections\n    return {\n      lineStart: function() {\n        v00 = v0 = false;\n        clean = 1;\n      },\n      point: function(lambda, phi) {\n        var point1 = [lambda, phi],\n            point2,\n            v = visible(lambda, phi),\n            c = smallRadius\n              ? v ? 0 : code(lambda, phi)\n              : v ? code(lambda + (lambda < 0 ? pi : -pi), phi) : 0;\n        if (!point0 && (v00 = v0 = v)) stream.lineStart();\n        // Handle degeneracies.\n        // TODO ignore if not clipping polygons.\n        if (v !== v0) {\n          point2 = intersect(point0, point1);\n          if (!point2 || pointEqual(point0, point2) || pointEqual(point1, point2)) {\n            point1[0] += epsilon;\n            point1[1] += epsilon;\n            v = visible(point1[0], point1[1]);\n          }\n        }\n        if (v !== v0) {\n          clean = 0;\n          if (v) {\n            // outside going in\n            stream.lineStart();\n            point2 = intersect(point1, point0);\n            stream.point(point2[0], point2[1]);\n          } else {\n            // inside going out\n            point2 = intersect(point0, point1);\n            stream.point(point2[0], point2[1]);\n            stream.lineEnd();\n          }\n          point0 = point2;\n        } else if (notHemisphere && point0 && smallRadius ^ v) {\n          var t;\n          // If the codes for two points are different, or are both zero,\n          // and there this segment intersects with the small circle.\n          if (!(c & c0) && (t = intersect(point1, point0, true))) {\n            clean = 0;\n            if (smallRadius) {\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n            } else {\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n            }\n          }\n        }\n        if (v && (!point0 || !pointEqual(point0, point1))) {\n          stream.point(point1[0], point1[1]);\n        }\n        point0 = point1, v0 = v, c0 = c;\n      },\n      lineEnd: function() {\n        if (v0) stream.lineEnd();\n        point0 = null;\n      },\n      // Rejoin first and last segments if there were intersections and the first\n      // and last points were visible.\n      clean: function() {\n        return clean | ((v00 && v0) << 1);\n      }\n    };\n  }\n\n  // Intersects the great circle between a and b with the clip circle.\n  function intersect(a, b, two) {\n    var pa = cartesian(a),\n        pb = cartesian(b);\n\n    // We have two planes, n1.p = d1 and n2.p = d2.\n    // Find intersection line p(t) = c1 n1 + c2 n2 + t (n1 ⨯ n2).\n    var n1 = [1, 0, 0], // normal\n        n2 = cartesianCross(pa, pb),\n        n2n2 = cartesianDot(n2, n2),\n        n1n2 = n2[0], // cartesianDot(n1, n2),\n        determinant = n2n2 - n1n2 * n1n2;\n\n    // Two polar points.\n    if (!determinant) return !two && a;\n\n    var c1 =  cr * n2n2 / determinant,\n        c2 = -cr * n1n2 / determinant,\n        n1xn2 = cartesianCross(n1, n2),\n        A = cartesianScale(n1, c1),\n        B = cartesianScale(n2, c2);\n    cartesianAddInPlace(A, B);\n\n    // Solve |p(t)|^2 = 1.\n    var u = n1xn2,\n        w = cartesianDot(A, u),\n        uu = cartesianDot(u, u),\n        t2 = w * w - uu * (cartesianDot(A, A) - 1);\n\n    if (t2 < 0) return;\n\n    var t = sqrt(t2),\n        q = cartesianScale(u, (-w - t) / uu);\n    cartesianAddInPlace(q, A);\n    q = spherical(q);\n\n    if (!two) return q;\n\n    // Two intersection points.\n    var lambda0 = a[0],\n        lambda1 = b[0],\n        phi0 = a[1],\n        phi1 = b[1],\n        z;\n\n    if (lambda1 < lambda0) z = lambda0, lambda0 = lambda1, lambda1 = z;\n\n    var delta = lambda1 - lambda0,\n        polar = abs(delta - pi) < epsilon,\n        meridian = polar || delta < epsilon;\n\n    if (!polar && phi1 < phi0) z = phi0, phi0 = phi1, phi1 = z;\n\n    // Check that the first point is between a and b.\n    if (meridian\n        ? polar\n          ? phi0 + phi1 > 0 ^ q[1] < (abs(q[0] - lambda0) < epsilon ? phi0 : phi1)\n          : phi0 <= q[1] && q[1] <= phi1\n        : delta > pi ^ (lambda0 <= q[0] && q[0] <= lambda1)) {\n      var q1 = cartesianScale(u, (-w + t) / uu);\n      cartesianAddInPlace(q1, A);\n      return [q, spherical(q1)];\n    }\n  }\n\n  // Generates a 4-bit vector representing the location of a point relative to\n  // the small circle's bounding box.\n  function code(lambda, phi) {\n    var r = smallRadius ? radius : pi - radius,\n        code = 0;\n    if (lambda < -r) code |= 1; // left\n    else if (lambda > r) code |= 2; // right\n    if (phi < -r) code |= 4; // below\n    else if (phi > r) code |= 8; // above\n    return code;\n  }\n\n  return clip(visible, clipLine, interpolate, smallRadius ? [0, -radius] : [-pi, radius - pi]);\n}\n","export default function(a, b, x0, y0, x1, y1) {\n  var ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (t0 > 0) a[0] = ax + t0 * dx, a[1] = ay + t0 * dy;\n  if (t1 < 1) b[0] = ax + t1 * dx, b[1] = ay + t1 * dy;\n  return true;\n}\n","import {abs, epsilon} from \"../math\";\nimport clipBuffer from \"./buffer\";\nimport clipLine from \"./line\";\nimport clipRejoin from \"./rejoin\";\nimport {merge} from \"d3-array\";\n\nvar clipMax = 1e9, clipMin = -clipMax;\n\n// TODO Use d3-polygon’s polygonContains here for the ring check?\n// TODO Eliminate duplicate buffering in clipBuffer and polygon.push?\n\nexport default function clipRectangle(x0, y0, x1, y1) {\n\n  function visible(x, y) {\n    return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n  }\n\n  function interpolate(from, to, direction, stream) {\n    var a = 0, a1 = 0;\n    if (from == null\n        || (a = corner(from, direction)) !== (a1 = corner(to, direction))\n        || comparePoint(from, to) < 0 ^ direction > 0) {\n      do stream.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n      while ((a = (a + direction + 4) % 4) !== a1);\n    } else {\n      stream.point(to[0], to[1]);\n    }\n  }\n\n  function corner(p, direction) {\n    return abs(p[0] - x0) < epsilon ? direction > 0 ? 0 : 3\n        : abs(p[0] - x1) < epsilon ? direction > 0 ? 2 : 1\n        : abs(p[1] - y0) < epsilon ? direction > 0 ? 1 : 0\n        : direction > 0 ? 3 : 2; // abs(p[1] - y1) < epsilon\n  }\n\n  function compareIntersection(a, b) {\n    return comparePoint(a.x, b.x);\n  }\n\n  function comparePoint(a, b) {\n    var ca = corner(a, 1),\n        cb = corner(b, 1);\n    return ca !== cb ? ca - cb\n        : ca === 0 ? b[1] - a[1]\n        : ca === 1 ? a[0] - b[0]\n        : ca === 2 ? a[1] - b[1]\n        : b[0] - a[0];\n  }\n\n  return function(stream) {\n    var activeStream = stream,\n        bufferStream = clipBuffer(),\n        segments,\n        polygon,\n        ring,\n        x__, y__, v__, // first point\n        x_, y_, v_, // previous point\n        first,\n        clean;\n\n    var clipStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: polygonStart,\n      polygonEnd: polygonEnd\n    };\n\n    function point(x, y) {\n      if (visible(x, y)) activeStream.point(x, y);\n    }\n\n    function polygonInside() {\n      var winding = 0;\n\n      for (var i = 0, n = polygon.length; i < n; ++i) {\n        for (var ring = polygon[i], j = 1, m = ring.length, point = ring[0], a0, a1, b0 = point[0], b1 = point[1]; j < m; ++j) {\n          a0 = b0, a1 = b1, point = ring[j], b0 = point[0], b1 = point[1];\n          if (a1 <= y1) { if (b1 > y1 && (b0 - a0) * (y1 - a1) > (b1 - a1) * (x0 - a0)) ++winding; }\n          else { if (b1 <= y1 && (b0 - a0) * (y1 - a1) < (b1 - a1) * (x0 - a0)) --winding; }\n        }\n      }\n\n      return winding;\n    }\n\n    // Buffer geometry within a polygon and then clip it en masse.\n    function polygonStart() {\n      activeStream = bufferStream, segments = [], polygon = [], clean = true;\n    }\n\n    function polygonEnd() {\n      var startInside = polygonInside(),\n          cleanInside = clean && startInside,\n          visible = (segments = merge(segments)).length;\n      if (cleanInside || visible) {\n        stream.polygonStart();\n        if (cleanInside) {\n          stream.lineStart();\n          interpolate(null, null, 1, stream);\n          stream.lineEnd();\n        }\n        if (visible) {\n          clipRejoin(segments, compareIntersection, startInside, interpolate, stream);\n        }\n        stream.polygonEnd();\n      }\n      activeStream = stream, segments = polygon = ring = null;\n    }\n\n    function lineStart() {\n      clipStream.point = linePoint;\n      if (polygon) polygon.push(ring = []);\n      first = true;\n      v_ = false;\n      x_ = y_ = NaN;\n    }\n\n    // TODO rather than special-case polygons, simply handle them separately.\n    // Ideally, coincident intersection points should be jittered to avoid\n    // clipping issues.\n    function lineEnd() {\n      if (segments) {\n        linePoint(x__, y__);\n        if (v__ && v_) bufferStream.rejoin();\n        segments.push(bufferStream.result());\n      }\n      clipStream.point = point;\n      if (v_) activeStream.lineEnd();\n    }\n\n    function linePoint(x, y) {\n      var v = visible(x, y);\n      if (polygon) ring.push([x, y]);\n      if (first) {\n        x__ = x, y__ = y, v__ = v;\n        first = false;\n        if (v) {\n          activeStream.lineStart();\n          activeStream.point(x, y);\n        }\n      } else {\n        if (v && v_) activeStream.point(x, y);\n        else {\n          var a = [x_ = Math.max(clipMin, Math.min(clipMax, x_)), y_ = Math.max(clipMin, Math.min(clipMax, y_))],\n              b = [x = Math.max(clipMin, Math.min(clipMax, x)), y = Math.max(clipMin, Math.min(clipMax, y))];\n          if (clipLine(a, b, x0, y0, x1, y1)) {\n            if (!v_) {\n              activeStream.lineStart();\n              activeStream.point(a[0], a[1]);\n            }\n            activeStream.point(b[0], b[1]);\n            if (!v) activeStream.lineEnd();\n            clean = false;\n          } else if (v) {\n            activeStream.lineStart();\n            activeStream.point(x, y);\n            clean = false;\n          }\n        }\n      }\n      x_ = x, y_ = y, v_ = v;\n    }\n\n    return clipStream;\n  };\n}\n","import clipRectangle from \"./rectangle\";\n\nexport default function() {\n  var x0 = 0,\n      y0 = 0,\n      x1 = 960,\n      y1 = 500,\n      cache,\n      cacheStream,\n      clip;\n\n  return clip = {\n    stream: function(stream) {\n      return cache && cacheStream === stream ? cache : cache = clipRectangle(x0, y0, x1, y1)(cacheStream = stream);\n    },\n    extent: function(_) {\n      return arguments.length ? (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1], cache = cacheStream = null, clip) : [[x0, y0], [x1, y1]];\n    }\n  };\n}\n","import adder from \"./adder\";\nimport {abs, atan2, cos, radians, sin, sqrt} from \"./math\";\nimport noop from \"./noop\";\nimport stream from \"./stream\";\n\nvar lengthSum = adder(),\n    lambda0,\n    sinPhi0,\n    cosPhi0;\n\nvar lengthStream = {\n  sphere: noop,\n  point: noop,\n  lineStart: lengthLineStart,\n  lineEnd: noop,\n  polygonStart: noop,\n  polygonEnd: noop\n};\n\nfunction lengthLineStart() {\n  lengthStream.point = lengthPointFirst;\n  lengthStream.lineEnd = lengthLineEnd;\n}\n\nfunction lengthLineEnd() {\n  lengthStream.point = lengthStream.lineEnd = noop;\n}\n\nfunction lengthPointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  lambda0 = lambda, sinPhi0 = sin(phi), cosPhi0 = cos(phi);\n  lengthStream.point = lengthPoint;\n}\n\nfunction lengthPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var sinPhi = sin(phi),\n      cosPhi = cos(phi),\n      delta = abs(lambda - lambda0),\n      cosDelta = cos(delta),\n      sinDelta = sin(delta),\n      x = cosPhi * sinDelta,\n      y = cosPhi0 * sinPhi - sinPhi0 * cosPhi * cosDelta,\n      z = sinPhi0 * sinPhi + cosPhi0 * cosPhi * cosDelta;\n  lengthSum.add(atan2(sqrt(x * x + y * y), z));\n  lambda0 = lambda, sinPhi0 = sinPhi, cosPhi0 = cosPhi;\n}\n\nexport default function(object) {\n  lengthSum.reset();\n  stream(object, lengthStream);\n  return +lengthSum;\n}\n","import length from \"./length\";\n\nvar coordinates = [null, null],\n    object = {type: \"LineString\", coordinates: coordinates};\n\nexport default function(a, b) {\n  coordinates[0] = a;\n  coordinates[1] = b;\n  return length(object);\n}\n","import {default as polygonContains} from \"./polygonContains\";\nimport {default as distance} from \"./distance\";\nimport {epsilon, radians} from \"./math\";\n\nvar containsObjectType = {\n  Feature: function(object, point) {\n    return containsGeometry(object.geometry, point);\n  },\n  FeatureCollection: function(object, point) {\n    var features = object.features, i = -1, n = features.length;\n    while (++i < n) if (containsGeometry(features[i].geometry, point)) return true;\n    return false;\n  }\n};\n\nvar containsGeometryType = {\n  Sphere: function() {\n    return true;\n  },\n  Point: function(object, point) {\n    return containsPoint(object.coordinates, point);\n  },\n  MultiPoint: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsPoint(coordinates[i], point)) return true;\n    return false;\n  },\n  LineString: function(object, point) {\n    return containsLine(object.coordinates, point);\n  },\n  MultiLineString: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsLine(coordinates[i], point)) return true;\n    return false;\n  },\n  Polygon: function(object, point) {\n    return containsPolygon(object.coordinates, point);\n  },\n  MultiPolygon: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsPolygon(coordinates[i], point)) return true;\n    return false;\n  },\n  GeometryCollection: function(object, point) {\n    var geometries = object.geometries, i = -1, n = geometries.length;\n    while (++i < n) if (containsGeometry(geometries[i], point)) return true;\n    return false;\n  }\n};\n\nfunction containsGeometry(geometry, point) {\n  return geometry && containsGeometryType.hasOwnProperty(geometry.type)\n      ? containsGeometryType[geometry.type](geometry, point)\n      : false;\n}\n\nfunction containsPoint(coordinates, point) {\n  return distance(coordinates, point) === 0;\n}\n\nfunction containsLine(coordinates, point) {\n  var ab = distance(coordinates[0], coordinates[1]),\n      ao = distance(coordinates[0], point),\n      ob = distance(point, coordinates[1]);\n  return ao + ob <= ab + epsilon;\n}\n\nfunction containsPolygon(coordinates, point) {\n  return !!polygonContains(coordinates.map(ringRadians), pointRadians(point));\n}\n\nfunction ringRadians(ring) {\n  return ring = ring.map(pointRadians), ring.pop(), ring;\n}\n\nfunction pointRadians(point) {\n  return [point[0] * radians, point[1] * radians];\n}\n\nexport default function(object, point) {\n  return (object && containsObjectType.hasOwnProperty(object.type)\n      ? containsObjectType[object.type]\n      : containsGeometry)(object, point);\n}\n","import {range} from \"d3-array\";\nimport {abs, ceil, epsilon} from \"./math\";\n\nfunction graticuleX(y0, y1, dy) {\n  var y = range(y0, y1 - epsilon, dy).concat(y1);\n  return function(x) { return y.map(function(y) { return [x, y]; }); };\n}\n\nfunction graticuleY(x0, x1, dx) {\n  var x = range(x0, x1 - epsilon, dx).concat(x1);\n  return function(y) { return x.map(function(x) { return [x, y]; }); };\n}\n\nexport default function graticule() {\n  var x1, x0, X1, X0,\n      y1, y0, Y1, Y0,\n      dx = 10, dy = dx, DX = 90, DY = 360,\n      x, y, X, Y,\n      precision = 2.5;\n\n  function graticule() {\n    return {type: \"MultiLineString\", coordinates: lines()};\n  }\n\n  function lines() {\n    return range(ceil(X0 / DX) * DX, X1, DX).map(X)\n        .concat(range(ceil(Y0 / DY) * DY, Y1, DY).map(Y))\n        .concat(range(ceil(x0 / dx) * dx, x1, dx).filter(function(x) { return abs(x % DX) > epsilon; }).map(x))\n        .concat(range(ceil(y0 / dy) * dy, y1, dy).filter(function(y) { return abs(y % DY) > epsilon; }).map(y));\n  }\n\n  graticule.lines = function() {\n    return lines().map(function(coordinates) { return {type: \"LineString\", coordinates: coordinates}; });\n  };\n\n  graticule.outline = function() {\n    return {\n      type: \"Polygon\",\n      coordinates: [\n        X(X0).concat(\n        Y(Y1).slice(1),\n        X(X1).reverse().slice(1),\n        Y(Y0).reverse().slice(1))\n      ]\n    };\n  };\n\n  graticule.extent = function(_) {\n    if (!arguments.length) return graticule.extentMinor();\n    return graticule.extentMajor(_).extentMinor(_);\n  };\n\n  graticule.extentMajor = function(_) {\n    if (!arguments.length) return [[X0, Y0], [X1, Y1]];\n    X0 = +_[0][0], X1 = +_[1][0];\n    Y0 = +_[0][1], Y1 = +_[1][1];\n    if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n    if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.extentMinor = function(_) {\n    if (!arguments.length) return [[x0, y0], [x1, y1]];\n    x0 = +_[0][0], x1 = +_[1][0];\n    y0 = +_[0][1], y1 = +_[1][1];\n    if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n    if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.step = function(_) {\n    if (!arguments.length) return graticule.stepMinor();\n    return graticule.stepMajor(_).stepMinor(_);\n  };\n\n  graticule.stepMajor = function(_) {\n    if (!arguments.length) return [DX, DY];\n    DX = +_[0], DY = +_[1];\n    return graticule;\n  };\n\n  graticule.stepMinor = function(_) {\n    if (!arguments.length) return [dx, dy];\n    dx = +_[0], dy = +_[1];\n    return graticule;\n  };\n\n  graticule.precision = function(_) {\n    if (!arguments.length) return precision;\n    precision = +_;\n    x = graticuleX(y0, y1, 90);\n    y = graticuleY(x0, x1, precision);\n    X = graticuleX(Y0, Y1, 90);\n    Y = graticuleY(X0, X1, precision);\n    return graticule;\n  };\n\n  return graticule\n      .extentMajor([[-180, -90 + epsilon], [180, 90 - epsilon]])\n      .extentMinor([[-180, -80 - epsilon], [180, 80 + epsilon]]);\n}\n\nexport function graticule10() {\n  return graticule()();\n}\n","import {asin, atan2, cos, degrees, haversin, radians, sin, sqrt} from \"./math\";\n\nexport default function(a, b) {\n  var x0 = a[0] * radians,\n      y0 = a[1] * radians,\n      x1 = b[0] * radians,\n      y1 = b[1] * radians,\n      cy0 = cos(y0),\n      sy0 = sin(y0),\n      cy1 = cos(y1),\n      sy1 = sin(y1),\n      kx0 = cy0 * cos(x0),\n      ky0 = cy0 * sin(x0),\n      kx1 = cy1 * cos(x1),\n      ky1 = cy1 * sin(x1),\n      d = 2 * asin(sqrt(haversin(y1 - y0) + cy0 * cy1 * haversin(x1 - x0))),\n      k = sin(d);\n\n  var interpolate = d ? function(t) {\n    var B = sin(t *= d) / k,\n        A = sin(d - t) / k,\n        x = A * kx0 + B * kx1,\n        y = A * ky0 + B * ky1,\n        z = A * sy0 + B * sy1;\n    return [\n      atan2(y, x) * degrees,\n      atan2(z, sqrt(x * x + y * y)) * degrees\n    ];\n  } : function() {\n    return [x0 * degrees, y0 * degrees];\n  };\n\n  interpolate.distance = d;\n\n  return interpolate;\n}\n","import adder from \"../adder\";\nimport {abs} from \"../math\";\nimport noop from \"../noop\";\n\nvar areaSum = adder(),\n    areaRingSum = adder(),\n    x00,\n    y00,\n    x0,\n    y0;\n\nvar areaStream = {\n  point: noop,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: function() {\n    areaStream.lineStart = areaRingStart;\n    areaStream.lineEnd = areaRingEnd;\n  },\n  polygonEnd: function() {\n    areaStream.lineStart = areaStream.lineEnd = areaStream.point = noop;\n    areaSum.add(abs(areaRingSum));\n    areaRingSum.reset();\n  },\n  result: function() {\n    var area = areaSum / 2;\n    areaSum.reset();\n    return area;\n  }\n};\n\nfunction areaRingStart() {\n  areaStream.point = areaPointFirst;\n}\n\nfunction areaPointFirst(x, y) {\n  areaStream.point = areaPoint;\n  x00 = x0 = x, y00 = y0 = y;\n}\n\nfunction areaPoint(x, y) {\n  areaRingSum.add(y0 * x - x0 * y);\n  x0 = x, y0 = y;\n}\n\nfunction areaRingEnd() {\n  areaPoint(x00, y00);\n}\n\nexport default areaStream;\n","export default function(x) {\n  return x;\n}\n","import noop from \"../noop\";\n\nvar x0 = Infinity,\n    y0 = x0,\n    x1 = -x0,\n    y1 = x1;\n\nvar boundsStream = {\n  point: boundsPoint,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: noop,\n  polygonEnd: noop,\n  result: function() {\n    var bounds = [[x0, y0], [x1, y1]];\n    x1 = y1 = -(y0 = x0 = Infinity);\n    return bounds;\n  }\n};\n\nfunction boundsPoint(x, y) {\n  if (x < x0) x0 = x;\n  if (x > x1) x1 = x;\n  if (y < y0) y0 = y;\n  if (y > y1) y1 = y;\n}\n\nexport default boundsStream;\n","import {sqrt} from \"../math\";\n\n// TODO Enforce positive area for exterior, negative area for interior?\n\nvar X0 = 0,\n    Y0 = 0,\n    Z0 = 0,\n    X1 = 0,\n    Y1 = 0,\n    Z1 = 0,\n    X2 = 0,\n    Y2 = 0,\n    Z2 = 0,\n    x00,\n    y00,\n    x0,\n    y0;\n\nvar centroidStream = {\n  point: centroidPoint,\n  lineStart: centroidLineStart,\n  lineEnd: centroidLineEnd,\n  polygonStart: function() {\n    centroidStream.lineStart = centroidRingStart;\n    centroidStream.lineEnd = centroidRingEnd;\n  },\n  polygonEnd: function() {\n    centroidStream.point = centroidPoint;\n    centroidStream.lineStart = centroidLineStart;\n    centroidStream.lineEnd = centroidLineEnd;\n  },\n  result: function() {\n    var centroid = Z2 ? [X2 / Z2, Y2 / Z2]\n        : Z1 ? [X1 / Z1, Y1 / Z1]\n        : Z0 ? [X0 / Z0, Y0 / Z0]\n        : [NaN, NaN];\n    X0 = Y0 = Z0 =\n    X1 = Y1 = Z1 =\n    X2 = Y2 = Z2 = 0;\n    return centroid;\n  }\n};\n\nfunction centroidPoint(x, y) {\n  X0 += x;\n  Y0 += y;\n  ++Z0;\n}\n\nfunction centroidLineStart() {\n  centroidStream.point = centroidPointFirstLine;\n}\n\nfunction centroidPointFirstLine(x, y) {\n  centroidStream.point = centroidPointLine;\n  centroidPoint(x0 = x, y0 = y);\n}\n\nfunction centroidPointLine(x, y) {\n  var dx = x - x0, dy = y - y0, z = sqrt(dx * dx + dy * dy);\n  X1 += z * (x0 + x) / 2;\n  Y1 += z * (y0 + y) / 2;\n  Z1 += z;\n  centroidPoint(x0 = x, y0 = y);\n}\n\nfunction centroidLineEnd() {\n  centroidStream.point = centroidPoint;\n}\n\nfunction centroidRingStart() {\n  centroidStream.point = centroidPointFirstRing;\n}\n\nfunction centroidRingEnd() {\n  centroidPointRing(x00, y00);\n}\n\nfunction centroidPointFirstRing(x, y) {\n  centroidStream.point = centroidPointRing;\n  centroidPoint(x00 = x0 = x, y00 = y0 = y);\n}\n\nfunction centroidPointRing(x, y) {\n  var dx = x - x0,\n      dy = y - y0,\n      z = sqrt(dx * dx + dy * dy);\n\n  X1 += z * (x0 + x) / 2;\n  Y1 += z * (y0 + y) / 2;\n  Z1 += z;\n\n  z = y0 * x - x0 * y;\n  X2 += z * (x0 + x);\n  Y2 += z * (y0 + y);\n  Z2 += z * 3;\n  centroidPoint(x0 = x, y0 = y);\n}\n\nexport default centroidStream;\n","import {tau} from \"../math\";\nimport noop from \"../noop\";\n\nexport default function PathContext(context) {\n  this._context = context;\n}\n\nPathContext.prototype = {\n  _radius: 4.5,\n  pointRadius: function(_) {\n    return this._radius = _, this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._context.closePath();\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._context.moveTo(x, y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._context.lineTo(x, y);\n        break;\n      }\n      default: {\n        this._context.moveTo(x + this._radius, y);\n        this._context.arc(x, y, this._radius, 0, tau);\n        break;\n      }\n    }\n  },\n  result: noop\n};\n","import adder from \"../adder\";\nimport {sqrt} from \"../math\";\nimport noop from \"../noop\";\n\nvar lengthSum = adder(),\n    lengthRing,\n    x00,\n    y00,\n    x0,\n    y0;\n\nvar lengthStream = {\n  point: noop,\n  lineStart: function() {\n    lengthStream.point = lengthPointFirst;\n  },\n  lineEnd: function() {\n    if (lengthRing) lengthPoint(x00, y00);\n    lengthStream.point = noop;\n  },\n  polygonStart: function() {\n    lengthRing = true;\n  },\n  polygonEnd: function() {\n    lengthRing = null;\n  },\n  result: function() {\n    var length = +lengthSum;\n    lengthSum.reset();\n    return length;\n  }\n};\n\nfunction lengthPointFirst(x, y) {\n  lengthStream.point = lengthPoint;\n  x00 = x0 = x, y00 = y0 = y;\n}\n\nfunction lengthPoint(x, y) {\n  x0 -= x, y0 -= y;\n  lengthSum.add(sqrt(x0 * x0 + y0 * y0));\n  x0 = x, y0 = y;\n}\n\nexport default lengthStream;\n","export default function PathString() {\n  this._string = [];\n}\n\nPathString.prototype = {\n  _radius: 4.5,\n  _circle: circle(4.5),\n  pointRadius: function(_) {\n    if ((_ = +_) !== this._radius) this._radius = _, this._circle = null;\n    return this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._string.push(\"Z\");\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._string.push(\"M\", x, \",\", y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._string.push(\"L\", x, \",\", y);\n        break;\n      }\n      default: {\n        if (this._circle == null) this._circle = circle(this._radius);\n        this._string.push(\"M\", x, \",\", y, this._circle);\n        break;\n      }\n    }\n  },\n  result: function() {\n    if (this._string.length) {\n      var result = this._string.join(\"\");\n      this._string = [];\n      return result;\n    } else {\n      return null;\n    }\n  }\n};\n\nfunction circle(radius) {\n  return \"m0,\" + radius\n      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius\n      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius\n      + \"z\";\n}\n","import identity from \"../identity\";\nimport stream from \"../stream\";\nimport pathArea from \"./area\";\nimport pathBounds from \"./bounds\";\nimport pathCentroid from \"./centroid\";\nimport PathContext from \"./context\";\nimport pathMeasure from \"./measure\";\nimport PathString from \"./string\";\n\nexport default function(projection, context) {\n  var pointRadius = 4.5,\n      projectionStream,\n      contextStream;\n\n  function path(object) {\n    if (object) {\n      if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n      stream(object, projectionStream(contextStream));\n    }\n    return contextStream.result();\n  }\n\n  path.area = function(object) {\n    stream(object, projectionStream(pathArea));\n    return pathArea.result();\n  };\n\n  path.measure = function(object) {\n    stream(object, projectionStream(pathMeasure));\n    return pathMeasure.result();\n  };\n\n  path.bounds = function(object) {\n    stream(object, projectionStream(pathBounds));\n    return pathBounds.result();\n  };\n\n  path.centroid = function(object) {\n    stream(object, projectionStream(pathCentroid));\n    return pathCentroid.result();\n  };\n\n  path.projection = function(_) {\n    return arguments.length ? (projectionStream = _ == null ? (projection = null, identity) : (projection = _).stream, path) : projection;\n  };\n\n  path.context = function(_) {\n    if (!arguments.length) return context;\n    contextStream = _ == null ? (context = null, new PathString) : new PathContext(context = _);\n    if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n    return path;\n  };\n\n  path.pointRadius = function(_) {\n    if (!arguments.length) return pointRadius;\n    pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n    return path;\n  };\n\n  return path.projection(projection).context(context);\n}\n","export default function(methods) {\n  return {\n    stream: transformer(methods)\n  };\n}\n\nexport function transformer(methods) {\n  return function(stream) {\n    var s = new TransformStream;\n    for (var key in methods) s[key] = methods[key];\n    s.stream = stream;\n    return s;\n  };\n}\n\nfunction TransformStream() {}\n\nTransformStream.prototype = {\n  constructor: TransformStream,\n  point: function(x, y) { this.stream.point(x, y); },\n  sphere: function() { this.stream.sphere(); },\n  lineStart: function() { this.stream.lineStart(); },\n  lineEnd: function() { this.stream.lineEnd(); },\n  polygonStart: function() { this.stream.polygonStart(); },\n  polygonEnd: function() { this.stream.polygonEnd(); }\n};\n","import {default as geoStream} from \"../stream\";\nimport boundsStream from \"../path/bounds\";\n\nfunction fit(projection, fitBounds, object) {\n  var clip = projection.clipExtent && projection.clipExtent();\n  projection.scale(150).translate([0, 0]);\n  if (clip != null) projection.clipExtent(null);\n  geoStream(object, projection.stream(boundsStream));\n  fitBounds(boundsStream.result());\n  if (clip != null) projection.clipExtent(clip);\n  return projection;\n}\n\nexport function fitExtent(projection, extent, object) {\n  return fit(projection, function(b) {\n    var w = extent[1][0] - extent[0][0],\n        h = extent[1][1] - extent[0][1],\n        k = Math.min(w / (b[1][0] - b[0][0]), h / (b[1][1] - b[0][1])),\n        x = +extent[0][0] + (w - k * (b[1][0] + b[0][0])) / 2,\n        y = +extent[0][1] + (h - k * (b[1][1] + b[0][1])) / 2;\n    projection.scale(150 * k).translate([x, y]);\n  }, object);\n}\n\nexport function fitSize(projection, size, object) {\n  return fitExtent(projection, [[0, 0], size], object);\n}\n\nexport function fitWidth(projection, width, object) {\n  return fit(projection, function(b) {\n    var w = +width,\n        k = w / (b[1][0] - b[0][0]),\n        x = (w - k * (b[1][0] + b[0][0])) / 2,\n        y = -k * b[0][1];\n    projection.scale(150 * k).translate([x, y]);\n  }, object);\n}\n\nexport function fitHeight(projection, height, object) {\n  return fit(projection, function(b) {\n    var h = +height,\n        k = h / (b[1][1] - b[0][1]),\n        x = -k * b[0][0],\n        y = (h - k * (b[1][1] + b[0][1])) / 2;\n    projection.scale(150 * k).translate([x, y]);\n  }, object);\n}\n","import {cartesian} from \"../cartesian\";\nimport {abs, asin, atan2, cos, epsilon, radians, sqrt} from \"../math\";\nimport {transformer} from \"../transform\";\n\nvar maxDepth = 16, // maximum depth of subdivision\n    cosMinDistance = cos(30 * radians); // cos(minimum angular distance)\n\nexport default function(project, delta2) {\n  return +delta2 ? resample(project, delta2) : resampleNone(project);\n}\n\nfunction resampleNone(project) {\n  return transformer({\n    point: function(x, y) {\n      x = project(x, y);\n      this.stream.point(x[0], x[1]);\n    }\n  });\n}\n\nfunction resample(project, delta2) {\n\n  function resampleLineTo(x0, y0, lambda0, a0, b0, c0, x1, y1, lambda1, a1, b1, c1, depth, stream) {\n    var dx = x1 - x0,\n        dy = y1 - y0,\n        d2 = dx * dx + dy * dy;\n    if (d2 > 4 * delta2 && depth--) {\n      var a = a0 + a1,\n          b = b0 + b1,\n          c = c0 + c1,\n          m = sqrt(a * a + b * b + c * c),\n          phi2 = asin(c /= m),\n          lambda2 = abs(abs(c) - 1) < epsilon || abs(lambda0 - lambda1) < epsilon ? (lambda0 + lambda1) / 2 : atan2(b, a),\n          p = project(lambda2, phi2),\n          x2 = p[0],\n          y2 = p[1],\n          dx2 = x2 - x0,\n          dy2 = y2 - y0,\n          dz = dy * dx2 - dx * dy2;\n      if (dz * dz / d2 > delta2 // perpendicular projected distance\n          || abs((dx * dx2 + dy * dy2) / d2 - 0.5) > 0.3 // midpoint close to an end\n          || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) { // angular distance\n        resampleLineTo(x0, y0, lambda0, a0, b0, c0, x2, y2, lambda2, a /= m, b /= m, c, depth, stream);\n        stream.point(x2, y2);\n        resampleLineTo(x2, y2, lambda2, a, b, c, x1, y1, lambda1, a1, b1, c1, depth, stream);\n      }\n    }\n  }\n  return function(stream) {\n    var lambda00, x00, y00, a00, b00, c00, // first point\n        lambda0, x0, y0, a0, b0, c0; // previous point\n\n    var resampleStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() { stream.polygonStart(); resampleStream.lineStart = ringStart; },\n      polygonEnd: function() { stream.polygonEnd(); resampleStream.lineStart = lineStart; }\n    };\n\n    function point(x, y) {\n      x = project(x, y);\n      stream.point(x[0], x[1]);\n    }\n\n    function lineStart() {\n      x0 = NaN;\n      resampleStream.point = linePoint;\n      stream.lineStart();\n    }\n\n    function linePoint(lambda, phi) {\n      var c = cartesian([lambda, phi]), p = project(lambda, phi);\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x0 = p[0], y0 = p[1], lambda0 = lambda, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n      stream.point(x0, y0);\n    }\n\n    function lineEnd() {\n      resampleStream.point = point;\n      stream.lineEnd();\n    }\n\n    function ringStart() {\n      lineStart();\n      resampleStream.point = ringPoint;\n      resampleStream.lineEnd = ringEnd;\n    }\n\n    function ringPoint(lambda, phi) {\n      linePoint(lambda00 = lambda, phi), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n      resampleStream.point = linePoint;\n    }\n\n    function ringEnd() {\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x00, y00, lambda00, a00, b00, c00, maxDepth, stream);\n      resampleStream.lineEnd = lineEnd;\n      lineEnd();\n    }\n\n    return resampleStream;\n  };\n}\n","import clipAntimeridian from \"../clip/antimeridian\";\nimport clipCircle from \"../clip/circle\";\nimport clipRectangle from \"../clip/rectangle\";\nimport compose from \"../compose\";\nimport identity from \"../identity\";\nimport {cos, degrees, radians, sin, sqrt} from \"../math\";\nimport {rotateRadians} from \"../rotation\";\nimport {transformer} from \"../transform\";\nimport {fitExtent, fitSize, fitWidth, fitHeight} from \"./fit\";\nimport resample from \"./resample\";\n\nvar transformRadians = transformer({\n  point: function(x, y) {\n    this.stream.point(x * radians, y * radians);\n  }\n});\n\nfunction transformRotate(rotate) {\n  return transformer({\n    point: function(x, y) {\n      var r = rotate(x, y);\n      return this.stream.point(r[0], r[1]);\n    }\n  });\n}\n\nfunction scaleTranslate(k, dx, dy) {\n  function transform(x, y) {\n    return [dx + k * x, dy - k * y];\n  }\n  transform.invert = function(x, y) {\n    return [(x - dx) / k, (dy - y) / k];\n  };\n  return transform;\n}\n\nfunction scaleTranslateRotate(k, dx, dy, alpha) {\n  var cosAlpha = cos(alpha),\n      sinAlpha = sin(alpha),\n      a = cosAlpha * k,\n      b = sinAlpha * k,\n      ai = cosAlpha / k,\n      bi = sinAlpha / k,\n      ci = (sinAlpha * dy - cosAlpha * dx) / k,\n      fi = (sinAlpha * dx + cosAlpha * dy) / k;\n  function transform(x, y) {\n    return [a * x - b * y + dx, dy - b * x - a * y];\n  }\n  transform.invert = function(x, y) {\n    return [ai * x - bi * y + ci, fi - bi * x - ai * y];\n  };\n  return transform;\n}\n\nexport default function projection(project) {\n  return projectionMutator(function() { return project; })();\n}\n\nexport function projectionMutator(projectAt) {\n  var project,\n      k = 150, // scale\n      x = 480, y = 250, // translate\n      lambda = 0, phi = 0, // center\n      deltaLambda = 0, deltaPhi = 0, deltaGamma = 0, rotate, // pre-rotate\n      alpha = 0, // post-rotate\n      theta = null, preclip = clipAntimeridian, // pre-clip angle\n      x0 = null, y0, x1, y1, postclip = identity, // post-clip extent\n      delta2 = 0.5, // precision\n      projectResample,\n      projectTransform,\n      projectRotateTransform,\n      cache,\n      cacheStream;\n\n  function projection(point) {\n    return projectRotateTransform(point[0] * radians, point[1] * radians);\n  }\n\n  function invert(point) {\n    point = projectRotateTransform.invert(point[0], point[1]);\n    return point && [point[0] * degrees, point[1] * degrees];\n  }\n\n  projection.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = transformRadians(transformRotate(rotate)(preclip(projectResample(postclip(cacheStream = stream)))));\n  };\n\n  projection.preclip = function(_) {\n    return arguments.length ? (preclip = _, theta = undefined, reset()) : preclip;\n  };\n\n  projection.postclip = function(_) {\n    return arguments.length ? (postclip = _, x0 = y0 = x1 = y1 = null, reset()) : postclip;\n  };\n\n  projection.clipAngle = function(_) {\n    return arguments.length ? (preclip = +_ ? clipCircle(theta = _ * radians) : (theta = null, clipAntimeridian), reset()) : theta * degrees;\n  };\n\n  projection.clipExtent = function(_) {\n    return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity) : clipRectangle(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  projection.scale = function(_) {\n    return arguments.length ? (k = +_, recenter()) : k;\n  };\n\n  projection.translate = function(_) {\n    return arguments.length ? (x = +_[0], y = +_[1], recenter()) : [x, y];\n  };\n\n  projection.center = function(_) {\n    return arguments.length ? (lambda = _[0] % 360 * radians, phi = _[1] % 360 * radians, recenter()) : [lambda * degrees, phi * degrees];\n  };\n\n  projection.rotate = function(_) {\n    return arguments.length ? (deltaLambda = _[0] % 360 * radians, deltaPhi = _[1] % 360 * radians, deltaGamma = _.length > 2 ? _[2] % 360 * radians : 0, recenter()) : [deltaLambda * degrees, deltaPhi * degrees, deltaGamma * degrees];\n  };\n\n  projection.angle = function(_) {\n    return arguments.length ? (alpha = _ % 360 * radians, recenter()) : alpha * degrees;\n  };\n\n  projection.precision = function(_) {\n    return arguments.length ? (projectResample = resample(projectTransform, delta2 = _ * _), reset()) : sqrt(delta2);\n  };\n\n  projection.fitExtent = function(extent, object) {\n    return fitExtent(projection, extent, object);\n  };\n\n  projection.fitSize = function(size, object) {\n    return fitSize(projection, size, object);\n  };\n\n  projection.fitWidth = function(width, object) {\n    return fitWidth(projection, width, object);\n  };\n\n  projection.fitHeight = function(height, object) {\n    return fitHeight(projection, height, object);\n  };\n\n  function recenter() {\n    var center = scaleTranslateRotate(k, 0, 0, alpha).apply(null, project(lambda, phi)),\n        transform = (alpha ? scaleTranslateRotate : scaleTranslate)(k, x - center[0], y - center[1], alpha);\n    rotate = rotateRadians(deltaLambda, deltaPhi, deltaGamma);\n    projectTransform = compose(project, transform);\n    projectRotateTransform = compose(rotate, projectTransform);\n    projectResample = resample(projectTransform, delta2);\n    return reset();\n  }\n\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  return function() {\n    project = projectAt.apply(this, arguments);\n    projection.invert = project.invert && invert;\n    return recenter();\n  };\n}\n","import {degrees, pi, radians} from \"../math\";\nimport {projectionMutator} from \"./index\";\n\nexport function conicProjection(projectAt) {\n  var phi0 = 0,\n      phi1 = pi / 3,\n      m = projectionMutator(projectAt),\n      p = m(phi0, phi1);\n\n  p.parallels = function(_) {\n    return arguments.length ? m(phi0 = _[0] * radians, phi1 = _[1] * radians) : [phi0 * degrees, phi1 * degrees];\n  };\n\n  return p;\n}\n","import {abs, asin, atan2, cos, epsilon, sign, sin, sqrt} from \"../math\";\nimport {conicProjection} from \"./conic\";\nimport {cylindricalEqualAreaRaw} from \"./cylindricalEqualArea\";\n\nexport function conicEqualAreaRaw(y0, y1) {\n  var sy0 = sin(y0), n = (sy0 + sin(y1)) / 2;\n\n  // Are the parallels symmetrical around the Equator?\n  if (abs(n) < epsilon) return cylindricalEqualAreaRaw(y0);\n\n  var c = 1 + sy0 * (2 * n - sy0), r0 = sqrt(c) / n;\n\n  function project(x, y) {\n    var r = sqrt(c - 2 * n * sin(y)) / n;\n    return [r * sin(x *= n), r0 - r * cos(x)];\n  }\n\n  project.invert = function(x, y) {\n    var r0y = r0 - y;\n    return [atan2(x, abs(r0y)) / n * sign(r0y), asin((c - (x * x + r0y * r0y) * n * n) / (2 * n))];\n  };\n\n  return project;\n}\n\nexport default function() {\n  return conicProjection(conicEqualAreaRaw)\n      .scale(155.424)\n      .center([0, 33.6442]);\n}\n","import {asin, cos, sin} from \"../math\";\n\nexport function cylindricalEqualAreaRaw(phi0) {\n  var cosPhi0 = cos(phi0);\n\n  function forward(lambda, phi) {\n    return [lambda * cosPhi0, sin(phi) / cosPhi0];\n  }\n\n  forward.invert = function(x, y) {\n    return [x / cosPhi0, asin(y * cosPhi0)];\n  };\n\n  return forward;\n}\n","import conicEqualArea from \"./conicEqualArea\";\n\nexport default function() {\n  return conicEqualArea()\n      .parallels([29.5, 45.5])\n      .scale(1070)\n      .translate([480, 250])\n      .rotate([96, 0])\n      .center([-0.6, 38.7]);\n}\n","import {epsilon} from \"../math\";\nimport albers from \"./albers\";\nimport conicEqualArea from \"./conicEqualArea\";\nimport {fitExtent, fitSize, fitWidth, fitHeight} from \"./fit\";\n\n// The projections must have mutually exclusive clip regions on the sphere,\n// as this will avoid emitting interleaving lines and polygons.\nfunction multiplex(streams) {\n  var n = streams.length;\n  return {\n    point: function(x, y) { var i = -1; while (++i < n) streams[i].point(x, y); },\n    sphere: function() { var i = -1; while (++i < n) streams[i].sphere(); },\n    lineStart: function() { var i = -1; while (++i < n) streams[i].lineStart(); },\n    lineEnd: function() { var i = -1; while (++i < n) streams[i].lineEnd(); },\n    polygonStart: function() { var i = -1; while (++i < n) streams[i].polygonStart(); },\n    polygonEnd: function() { var i = -1; while (++i < n) streams[i].polygonEnd(); }\n  };\n}\n\n// A composite projection for the United States, configured by default for\n// 960×500. The projection also works quite well at 960×600 if you change the\n// scale to 1285 and adjust the translate accordingly. The set of standard\n// parallels for each region comes from USGS, which is published here:\n// http://egsc.usgs.gov/isb/pubs/MapProjections/projections.html#albers\nexport default function() {\n  var cache,\n      cacheStream,\n      lower48 = albers(), lower48Point,\n      alaska = conicEqualArea().rotate([154, 0]).center([-2, 58.5]).parallels([55, 65]), alaskaPoint, // EPSG:3338\n      hawaii = conicEqualArea().rotate([157, 0]).center([-3, 19.9]).parallels([8, 18]), hawaiiPoint, // ESRI:102007\n      point, pointStream = {point: function(x, y) { point = [x, y]; }};\n\n  function albersUsa(coordinates) {\n    var x = coordinates[0], y = coordinates[1];\n    return point = null,\n        (lower48Point.point(x, y), point)\n        || (alaskaPoint.point(x, y), point)\n        || (hawaiiPoint.point(x, y), point);\n  }\n\n  albersUsa.invert = function(coordinates) {\n    var k = lower48.scale(),\n        t = lower48.translate(),\n        x = (coordinates[0] - t[0]) / k,\n        y = (coordinates[1] - t[1]) / k;\n    return (y >= 0.120 && y < 0.234 && x >= -0.425 && x < -0.214 ? alaska\n        : y >= 0.166 && y < 0.234 && x >= -0.214 && x < -0.115 ? hawaii\n        : lower48).invert(coordinates);\n  };\n\n  albersUsa.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = multiplex([lower48.stream(cacheStream = stream), alaska.stream(stream), hawaii.stream(stream)]);\n  };\n\n  albersUsa.precision = function(_) {\n    if (!arguments.length) return lower48.precision();\n    lower48.precision(_), alaska.precision(_), hawaii.precision(_);\n    return reset();\n  };\n\n  albersUsa.scale = function(_) {\n    if (!arguments.length) return lower48.scale();\n    lower48.scale(_), alaska.scale(_ * 0.35), hawaii.scale(_);\n    return albersUsa.translate(lower48.translate());\n  };\n\n  albersUsa.translate = function(_) {\n    if (!arguments.length) return lower48.translate();\n    var k = lower48.scale(), x = +_[0], y = +_[1];\n\n    lower48Point = lower48\n        .translate(_)\n        .clipExtent([[x - 0.455 * k, y - 0.238 * k], [x + 0.455 * k, y + 0.238 * k]])\n        .stream(pointStream);\n\n    alaskaPoint = alaska\n        .translate([x - 0.307 * k, y + 0.201 * k])\n        .clipExtent([[x - 0.425 * k + epsilon, y + 0.120 * k + epsilon], [x - 0.214 * k - epsilon, y + 0.234 * k - epsilon]])\n        .stream(pointStream);\n\n    hawaiiPoint = hawaii\n        .translate([x - 0.205 * k, y + 0.212 * k])\n        .clipExtent([[x - 0.214 * k + epsilon, y + 0.166 * k + epsilon], [x - 0.115 * k - epsilon, y + 0.234 * k - epsilon]])\n        .stream(pointStream);\n\n    return reset();\n  };\n\n  albersUsa.fitExtent = function(extent, object) {\n    return fitExtent(albersUsa, extent, object);\n  };\n\n  albersUsa.fitSize = function(size, object) {\n    return fitSize(albersUsa, size, object);\n  };\n\n  albersUsa.fitWidth = function(width, object) {\n    return fitWidth(albersUsa, width, object);\n  };\n\n  albersUsa.fitHeight = function(height, object) {\n    return fitHeight(albersUsa, height, object);\n  };\n\n  function reset() {\n    cache = cacheStream = null;\n    return albersUsa;\n  }\n\n  return albersUsa.scale(1070);\n}\n","import {asin, atan2, cos, sin, sqrt} from \"../math\";\n\nexport function azimuthalRaw(scale) {\n  return function(x, y) {\n    var cx = cos(x),\n        cy = cos(y),\n        k = scale(cx * cy);\n    return [\n      k * cy * sin(x),\n      k * sin(y)\n    ];\n  }\n}\n\nexport function azimuthalInvert(angle) {\n  return function(x, y) {\n    var z = sqrt(x * x + y * y),\n        c = angle(z),\n        sc = sin(c),\n        cc = cos(c);\n    return [\n      atan2(x * sc, z * cc),\n      asin(z && y * sc / z)\n    ];\n  }\n}\n","import {asin, sqrt} from \"../math\";\nimport {azimuthalRaw, azimuthalInvert} from \"./azimuthal\";\nimport projection from \"./index\";\n\nexport var azimuthalEqualAreaRaw = azimuthalRaw(function(cxcy) {\n  return sqrt(2 / (1 + cxcy));\n});\n\nazimuthalEqualAreaRaw.invert = azimuthalInvert(function(z) {\n  return 2 * asin(z / 2);\n});\n\nexport default function() {\n  return projection(azimuthalEqualAreaRaw)\n      .scale(124.75)\n      .clipAngle(180 - 1e-3);\n}\n","import {acos, sin} from \"../math\";\nimport {azimuthalRaw, azimuthalInvert} from \"./azimuthal\";\nimport projection from \"./index\";\n\nexport var azimuthalEquidistantRaw = azimuthalRaw(function(c) {\n  return (c = acos(c)) && c / sin(c);\n});\n\nazimuthalEquidistantRaw.invert = azimuthalInvert(function(z) {\n  return z;\n});\n\nexport default function() {\n  return projection(azimuthalEquidistantRaw)\n      .scale(79.4188)\n      .clipAngle(180 - 1e-3);\n}\n","import {atan, exp, halfPi, log, pi, tan, tau} from \"../math\";\nimport rotation from \"../rotation\";\nimport projection from \"./index\";\n\nexport function mercatorRaw(lambda, phi) {\n  return [lambda, log(tan((halfPi + phi) / 2))];\n}\n\nmercatorRaw.invert = function(x, y) {\n  return [x, 2 * atan(exp(y)) - halfPi];\n};\n\nexport default function() {\n  return mercatorProjection(mercatorRaw)\n      .scale(961 / tau);\n}\n\nexport function mercatorProjection(project) {\n  var m = projection(project),\n      center = m.center,\n      scale = m.scale,\n      translate = m.translate,\n      clipExtent = m.clipExtent,\n      x0 = null, y0, x1, y1; // clip extent\n\n  m.scale = function(_) {\n    return arguments.length ? (scale(_), reclip()) : scale();\n  };\n\n  m.translate = function(_) {\n    return arguments.length ? (translate(_), reclip()) : translate();\n  };\n\n  m.center = function(_) {\n    return arguments.length ? (center(_), reclip()) : center();\n  };\n\n  m.clipExtent = function(_) {\n    return arguments.length ? ((_ == null ? x0 = y0 = x1 = y1 = null : (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1])), reclip()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  function reclip() {\n    var k = pi * scale(),\n        t = m(rotation(m.rotate()).invert([0, 0]));\n    return clipExtent(x0 == null\n        ? [[t[0] - k, t[1] - k], [t[0] + k, t[1] + k]] : project === mercatorRaw\n        ? [[Math.max(t[0] - k, x0), y0], [Math.min(t[0] + k, x1), y1]]\n        : [[x0, Math.max(t[1] - k, y0)], [x1, Math.min(t[1] + k, y1)]]);\n  }\n\n  return reclip();\n}\n","import {abs, atan, atan2, cos, epsilon, halfPi, log, pow, sign, sin, sqrt, tan} from \"../math\";\nimport {conicProjection} from \"./conic\";\nimport {mercatorRaw} from \"./mercator\";\n\nfunction tany(y) {\n  return tan((halfPi + y) / 2);\n}\n\nexport function conicConformalRaw(y0, y1) {\n  var cy0 = cos(y0),\n      n = y0 === y1 ? sin(y0) : log(cy0 / cos(y1)) / log(tany(y1) / tany(y0)),\n      f = cy0 * pow(tany(y0), n) / n;\n\n  if (!n) return mercatorRaw;\n\n  function project(x, y) {\n    if (f > 0) { if (y < -halfPi + epsilon) y = -halfPi + epsilon; }\n    else { if (y > halfPi - epsilon) y = halfPi - epsilon; }\n    var r = f / pow(tany(y), n);\n    return [r * sin(n * x), f - r * cos(n * x)];\n  }\n\n  project.invert = function(x, y) {\n    var fy = f - y, r = sign(n) * sqrt(x * x + fy * fy);\n    return [atan2(x, abs(fy)) / n * sign(fy), 2 * atan(pow(f / r, 1 / n)) - halfPi];\n  };\n\n  return project;\n}\n\nexport default function() {\n  return conicProjection(conicConformalRaw)\n      .scale(109.5)\n      .parallels([30, 30]);\n}\n","import projection from \"./index\";\n\nexport function equirectangularRaw(lambda, phi) {\n  return [lambda, phi];\n}\n\nequirectangularRaw.invert = equirectangularRaw;\n\nexport default function() {\n  return projection(equirectangularRaw)\n      .scale(152.63);\n}\n","import {abs, atan2, cos, epsilon, sign, sin, sqrt} from \"../math\";\nimport {conicProjection} from \"./conic\";\nimport {equirectangularRaw} from \"./equirectangular\";\n\nexport function conicEquidistantRaw(y0, y1) {\n  var cy0 = cos(y0),\n      n = y0 === y1 ? sin(y0) : (cy0 - cos(y1)) / (y1 - y0),\n      g = cy0 / n + y0;\n\n  if (abs(n) < epsilon) return equirectangularRaw;\n\n  function project(x, y) {\n    var gy = g - y, nx = n * x;\n    return [gy * sin(nx), g - gy * cos(nx)];\n  }\n\n  project.invert = function(x, y) {\n    var gy = g - y;\n    return [atan2(x, abs(gy)) / n * sign(gy), g - sign(n) * sqrt(x * x + gy * gy)];\n  };\n\n  return project;\n}\n\nexport default function() {\n  return conicProjection(conicEquidistantRaw)\n      .scale(131.154)\n      .center([0, 13.9389]);\n}\n","import {atan, cos, sin} from \"../math\";\nimport {azimuthalInvert} from \"./azimuthal\";\nimport projection from \"./index\";\n\nexport function gnomonicRaw(x, y) {\n  var cy = cos(y), k = cos(x) * cy;\n  return [cy * sin(x) / k, sin(y) / k];\n}\n\ngnomonicRaw.invert = azimuthalInvert(atan);\n\nexport default function() {\n  return projection(gnomonicRaw)\n      .scale(144.049)\n      .clipAngle(60);\n}\n","import clipRectangle from \"../clip/rectangle\";\nimport identity from \"../identity\";\nimport {transformer} from \"../transform\";\nimport {fitExtent, fitSize, fitWidth, fitHeight} from \"./fit\";\n\nfunction scaleTranslate(kx, ky, tx, ty) {\n  return kx === 1 && ky === 1 && tx === 0 && ty === 0 ? identity : transformer({\n    point: function(x, y) {\n      this.stream.point(x * kx + tx, y * ky + ty);\n    }\n  });\n}\n\nexport default function() {\n  var k = 1, tx = 0, ty = 0, sx = 1, sy = 1, transform = identity, // scale, translate and reflect\n      x0 = null, y0, x1, y1, // clip extent\n      postclip = identity,\n      cache,\n      cacheStream,\n      projection;\n\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  return projection = {\n    stream: function(stream) {\n      return cache && cacheStream === stream ? cache : cache = transform(postclip(cacheStream = stream));\n    },\n    postclip: function(_) {\n      return arguments.length ? (postclip = _, x0 = y0 = x1 = y1 = null, reset()) : postclip;\n    },\n    clipExtent: function(_) {\n      return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity) : clipRectangle(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n    },\n    scale: function(_) {\n      return arguments.length ? (transform = scaleTranslate((k = +_) * sx, k * sy, tx, ty), reset()) : k;\n    },\n    translate: function(_) {\n      return arguments.length ? (transform = scaleTranslate(k * sx, k * sy, tx = +_[0], ty = +_[1]), reset()) : [tx, ty];\n    },\n    reflectX: function(_) {\n      return arguments.length ? (transform = scaleTranslate(k * (sx = _ ? -1 : 1), k * sy, tx, ty), reset()) : sx < 0;\n    },\n    reflectY: function(_) {\n      return arguments.length ? (transform = scaleTranslate(k * sx, k * (sy = _ ? -1 : 1), tx, ty), reset()) : sy < 0;\n    },\n    fitExtent: function(extent, object) {\n      return fitExtent(projection, extent, object);\n    },\n    fitSize: function(size, object) {\n      return fitSize(projection, size, object);\n    },\n    fitWidth: function(width, object) {\n      return fitWidth(projection, width, object);\n    },\n    fitHeight: function(height, object) {\n      return fitHeight(projection, height, object);\n    }\n  };\n}\n","import projection from \"./index\";\nimport {abs, epsilon} from \"../math\";\n\nexport function naturalEarth1Raw(lambda, phi) {\n  var phi2 = phi * phi, phi4 = phi2 * phi2;\n  return [\n    lambda * (0.8707 - 0.131979 * phi2 + phi4 * (-0.013791 + phi4 * (0.003971 * phi2 - 0.001529 * phi4))),\n    phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4)))\n  ];\n}\n\nnaturalEarth1Raw.invert = function(x, y) {\n  var phi = y, i = 25, delta;\n  do {\n    var phi2 = phi * phi, phi4 = phi2 * phi2;\n    phi -= delta = (phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4))) - y) /\n        (1.007226 + phi2 * (0.015085 * 3 + phi4 * (-0.044475 * 7 + 0.028874 * 9 * phi2 - 0.005916 * 11 * phi4)));\n  } while (abs(delta) > epsilon && --i > 0);\n  return [\n    x / (0.8707 + (phi2 = phi * phi) * (-0.131979 + phi2 * (-0.013791 + phi2 * phi2 * phi2 * (0.003971 - 0.001529 * phi2)))),\n    phi\n  ];\n};\n\nexport default function() {\n  return projection(naturalEarth1Raw)\n      .scale(175.295);\n}\n","import {asin, cos, epsilon, sin} from \"../math\";\nimport {azimuthalInvert} from \"./azimuthal\";\nimport projection from \"./index\";\n\nexport function orthographicRaw(x, y) {\n  return [cos(y) * sin(x), sin(y)];\n}\n\northographicRaw.invert = azimuthalInvert(asin);\n\nexport default function() {\n  return projection(orthographicRaw)\n      .scale(249.5)\n      .clipAngle(90 + epsilon);\n}\n","import {atan, cos, sin} from \"../math\";\nimport {azimuthalInvert} from \"./azimuthal\";\nimport projection from \"./index\";\n\nexport function stereographicRaw(x, y) {\n  var cy = cos(y), k = 1 + cos(x) * cy;\n  return [cy * sin(x) / k, sin(y) / k];\n}\n\nstereographicRaw.invert = azimuthalInvert(function(z) {\n  return 2 * atan(z);\n});\n\nexport default function() {\n  return projection(stereographicRaw)\n      .scale(250)\n      .clipAngle(142);\n}\n","import {atan, exp, halfPi, log, tan} from \"../math\";\nimport {mercatorProjection} from \"./mercator\";\n\nexport function transverseMercatorRaw(lambda, phi) {\n  return [log(tan((halfPi + phi) / 2)), -lambda];\n}\n\ntransverseMercatorRaw.invert = function(x, y) {\n  return [-y, 2 * atan(exp(x)) - halfPi];\n};\n\nexport default function() {\n  var m = mercatorProjection(transverseMercatorRaw),\n      center = m.center,\n      rotate = m.rotate;\n\n  m.center = function(_) {\n    return arguments.length ? center([-_[1], _[0]]) : (_ = center(), [_[1], -_[0]]);\n  };\n\n  m.rotate = function(_) {\n    return arguments.length ? rotate([_[0], _[1], _.length > 2 ? _[2] + 90 : 90]) : (_ = rotate(), [_[0], _[1], _[2] - 90]);\n  };\n\n  return rotate([0, 0, 90])\n      .scale(159.155);\n}\n","function defaultSeparation(a, b) {\n  return a.parent === b.parent ? 1 : 2;\n}\n\nfunction meanX(children) {\n  return children.reduce(meanXReduce, 0) / children.length;\n}\n\nfunction meanXReduce(x, c) {\n  return x + c.x;\n}\n\nfunction maxY(children) {\n  return 1 + children.reduce(maxYReduce, 0);\n}\n\nfunction maxYReduce(y, c) {\n  return Math.max(y, c.y);\n}\n\nfunction leafLeft(node) {\n  var children;\n  while (children = node.children) node = children[0];\n  return node;\n}\n\nfunction leafRight(node) {\n  var children;\n  while (children = node.children) node = children[children.length - 1];\n  return node;\n}\n\nexport default function() {\n  var separation = defaultSeparation,\n      dx = 1,\n      dy = 1,\n      nodeSize = false;\n\n  function cluster(root) {\n    var previousNode,\n        x = 0;\n\n    // First walk, computing the initial x & y values.\n    root.eachAfter(function(node) {\n      var children = node.children;\n      if (children) {\n        node.x = meanX(children);\n        node.y = maxY(children);\n      } else {\n        node.x = previousNode ? x += separation(node, previousNode) : 0;\n        node.y = 0;\n        previousNode = node;\n      }\n    });\n\n    var left = leafLeft(root),\n        right = leafRight(root),\n        x0 = left.x - separation(left, right) / 2,\n        x1 = right.x + separation(right, left) / 2;\n\n    // Second walk, normalizing x & y to the desired size.\n    return root.eachAfter(nodeSize ? function(node) {\n      node.x = (node.x - root.x) * dx;\n      node.y = (root.y - node.y) * dy;\n    } : function(node) {\n      node.x = (node.x - x0) / (x1 - x0) * dx;\n      node.y = (1 - (root.y ? node.y / root.y : 1)) * dy;\n    });\n  }\n\n  cluster.separation = function(x) {\n    return arguments.length ? (separation = x, cluster) : separation;\n  };\n\n  cluster.size = function(x) {\n    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? null : [dx, dy]);\n  };\n\n  cluster.nodeSize = function(x) {\n    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? [dx, dy] : null);\n  };\n\n  return cluster;\n}\n","function count(node) {\n  var sum = 0,\n      children = node.children,\n      i = children && children.length;\n  if (!i) sum = 1;\n  else while (--i >= 0) sum += children[i].value;\n  node.value = sum;\n}\n\nexport default function() {\n  return this.eachAfter(count);\n}\n","import node_count from \"./count\";\nimport node_each from \"./each\";\nimport node_eachBefore from \"./eachBefore\";\nimport node_eachAfter from \"./eachAfter\";\nimport node_sum from \"./sum\";\nimport node_sort from \"./sort\";\nimport node_path from \"./path\";\nimport node_ancestors from \"./ancestors\";\nimport node_descendants from \"./descendants\";\nimport node_leaves from \"./leaves\";\nimport node_links from \"./links\";\n\nexport default function hierarchy(data, children) {\n  var root = new Node(data),\n      valued = +data.value && (root.value = data.value),\n      node,\n      nodes = [root],\n      child,\n      childs,\n      i,\n      n;\n\n  if (children == null) children = defaultChildren;\n\n  while (node = nodes.pop()) {\n    if (valued) node.value = +node.data.value;\n    if ((childs = children(node.data)) && (n = childs.length)) {\n      node.children = new Array(n);\n      for (i = n - 1; i >= 0; --i) {\n        nodes.push(child = node.children[i] = new Node(childs[i]));\n        child.parent = node;\n        child.depth = node.depth + 1;\n      }\n    }\n  }\n\n  return root.eachBefore(computeHeight);\n}\n\nfunction node_copy() {\n  return hierarchy(this).eachBefore(copyData);\n}\n\nfunction defaultChildren(d) {\n  return d.children;\n}\n\nfunction copyData(node) {\n  node.data = node.data.data;\n}\n\nexport function computeHeight(node) {\n  var height = 0;\n  do node.height = height;\n  while ((node = node.parent) && (node.height < ++height));\n}\n\nexport function Node(data) {\n  this.data = data;\n  this.depth =\n  this.height = 0;\n  this.parent = null;\n}\n\nNode.prototype = hierarchy.prototype = {\n  constructor: Node,\n  count: node_count,\n  each: node_each,\n  eachAfter: node_eachAfter,\n  eachBefore: node_eachBefore,\n  sum: node_sum,\n  sort: node_sort,\n  path: node_path,\n  ancestors: node_ancestors,\n  descendants: node_descendants,\n  leaves: node_leaves,\n  links: node_links,\n  copy: node_copy\n};\n","export default function(callback) {\n  var node = this, current, next = [node], children, i, n;\n  do {\n    current = next.reverse(), next = [];\n    while (node = current.pop()) {\n      callback(node), children = node.children;\n      if (children) for (i = 0, n = children.length; i < n; ++i) {\n        next.push(children[i]);\n      }\n    }\n  } while (next.length);\n  return this;\n}\n","export default function(callback) {\n  var node = this, nodes = [node], next = [], children, i, n;\n  while (node = nodes.pop()) {\n    next.push(node), children = node.children;\n    if (children) for (i = 0, n = children.length; i < n; ++i) {\n      nodes.push(children[i]);\n    }\n  }\n  while (node = next.pop()) {\n    callback(node);\n  }\n  return this;\n}\n","export default function(callback) {\n  var node = this, nodes = [node], children, i;\n  while (node = nodes.pop()) {\n    callback(node), children = node.children;\n    if (children) for (i = children.length - 1; i >= 0; --i) {\n      nodes.push(children[i]);\n    }\n  }\n  return this;\n}\n","export default function(value) {\n  return this.eachAfter(function(node) {\n    var sum = +value(node.data) || 0,\n        children = node.children,\n        i = children && children.length;\n    while (--i >= 0) sum += children[i].value;\n    node.value = sum;\n  });\n}\n","export default function(compare) {\n  return this.eachBefore(function(node) {\n    if (node.children) {\n      node.children.sort(compare);\n    }\n  });\n}\n","export default function(end) {\n  var start = this,\n      ancestor = leastCommonAncestor(start, end),\n      nodes = [start];\n  while (start !== ancestor) {\n    start = start.parent;\n    nodes.push(start);\n  }\n  var k = nodes.length;\n  while (end !== ancestor) {\n    nodes.splice(k, 0, end);\n    end = end.parent;\n  }\n  return nodes;\n}\n\nfunction leastCommonAncestor(a, b) {\n  if (a === b) return a;\n  var aNodes = a.ancestors(),\n      bNodes = b.ancestors(),\n      c = null;\n  a = aNodes.pop();\n  b = bNodes.pop();\n  while (a === b) {\n    c = a;\n    a = aNodes.pop();\n    b = bNodes.pop();\n  }\n  return c;\n}\n","export default function() {\n  var node = this, nodes = [node];\n  while (node = node.parent) {\n    nodes.push(node);\n  }\n  return nodes;\n}\n","export default function() {\n  var nodes = [];\n  this.each(function(node) {\n    nodes.push(node);\n  });\n  return nodes;\n}\n","export default function() {\n  var leaves = [];\n  this.eachBefore(function(node) {\n    if (!node.children) {\n      leaves.push(node);\n    }\n  });\n  return leaves;\n}\n","export default function() {\n  var root = this, links = [];\n  root.each(function(node) {\n    if (node !== root) { // Don’t include the root’s parent, if any.\n      links.push({source: node.parent, target: node});\n    }\n  });\n  return links;\n}\n","export var slice = Array.prototype.slice;\n\nexport function shuffle(array) {\n  var m = array.length,\n      t,\n      i;\n\n  while (m) {\n    i = Math.random() * m-- | 0;\n    t = array[m];\n    array[m] = array[i];\n    array[i] = t;\n  }\n\n  return array;\n}\n","import {shuffle, slice} from \"../array\";\n\nexport default function(circles) {\n  var i = 0, n = (circles = shuffle(slice.call(circles))).length, B = [], p, e;\n\n  while (i < n) {\n    p = circles[i];\n    if (e && enclosesWeak(e, p)) ++i;\n    else e = encloseBasis(B = extendBasis(B, p)), i = 0;\n  }\n\n  return e;\n}\n\nfunction extendBasis(B, p) {\n  var i, j;\n\n  if (enclosesWeakAll(p, B)) return [p];\n\n  // If we get here then B must have at least one element.\n  for (i = 0; i < B.length; ++i) {\n    if (enclosesNot(p, B[i])\n        && enclosesWeakAll(encloseBasis2(B[i], p), B)) {\n      return [B[i], p];\n    }\n  }\n\n  // If we get here then B must have at least two elements.\n  for (i = 0; i < B.length - 1; ++i) {\n    for (j = i + 1; j < B.length; ++j) {\n      if (enclosesNot(encloseBasis2(B[i], B[j]), p)\n          && enclosesNot(encloseBasis2(B[i], p), B[j])\n          && enclosesNot(encloseBasis2(B[j], p), B[i])\n          && enclosesWeakAll(encloseBasis3(B[i], B[j], p), B)) {\n        return [B[i], B[j], p];\n      }\n    }\n  }\n\n  // If we get here then something is very wrong.\n  throw new Error;\n}\n\nfunction enclosesNot(a, b) {\n  var dr = a.r - b.r, dx = b.x - a.x, dy = b.y - a.y;\n  return dr < 0 || dr * dr < dx * dx + dy * dy;\n}\n\nfunction enclosesWeak(a, b) {\n  var dr = a.r - b.r + 1e-6, dx = b.x - a.x, dy = b.y - a.y;\n  return dr > 0 && dr * dr > dx * dx + dy * dy;\n}\n\nfunction enclosesWeakAll(a, B) {\n  for (var i = 0; i < B.length; ++i) {\n    if (!enclosesWeak(a, B[i])) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction encloseBasis(B) {\n  switch (B.length) {\n    case 1: return encloseBasis1(B[0]);\n    case 2: return encloseBasis2(B[0], B[1]);\n    case 3: return encloseBasis3(B[0], B[1], B[2]);\n  }\n}\n\nfunction encloseBasis1(a) {\n  return {\n    x: a.x,\n    y: a.y,\n    r: a.r\n  };\n}\n\nfunction encloseBasis2(a, b) {\n  var x1 = a.x, y1 = a.y, r1 = a.r,\n      x2 = b.x, y2 = b.y, r2 = b.r,\n      x21 = x2 - x1, y21 = y2 - y1, r21 = r2 - r1,\n      l = Math.sqrt(x21 * x21 + y21 * y21);\n  return {\n    x: (x1 + x2 + x21 / l * r21) / 2,\n    y: (y1 + y2 + y21 / l * r21) / 2,\n    r: (l + r1 + r2) / 2\n  };\n}\n\nfunction encloseBasis3(a, b, c) {\n  var x1 = a.x, y1 = a.y, r1 = a.r,\n      x2 = b.x, y2 = b.y, r2 = b.r,\n      x3 = c.x, y3 = c.y, r3 = c.r,\n      a2 = x1 - x2,\n      a3 = x1 - x3,\n      b2 = y1 - y2,\n      b3 = y1 - y3,\n      c2 = r2 - r1,\n      c3 = r3 - r1,\n      d1 = x1 * x1 + y1 * y1 - r1 * r1,\n      d2 = d1 - x2 * x2 - y2 * y2 + r2 * r2,\n      d3 = d1 - x3 * x3 - y3 * y3 + r3 * r3,\n      ab = a3 * b2 - a2 * b3,\n      xa = (b2 * d3 - b3 * d2) / (ab * 2) - x1,\n      xb = (b3 * c2 - b2 * c3) / ab,\n      ya = (a3 * d2 - a2 * d3) / (ab * 2) - y1,\n      yb = (a2 * c3 - a3 * c2) / ab,\n      A = xb * xb + yb * yb - 1,\n      B = 2 * (r1 + xa * xb + ya * yb),\n      C = xa * xa + ya * ya - r1 * r1,\n      r = -(A ? (B + Math.sqrt(B * B - 4 * A * C)) / (2 * A) : C / B);\n  return {\n    x: x1 + xa + xb * r,\n    y: y1 + ya + yb * r,\n    r: r\n  };\n}\n","import enclose from \"./enclose\";\n\nfunction place(b, a, c) {\n  var dx = b.x - a.x, x, a2,\n      dy = b.y - a.y, y, b2,\n      d2 = dx * dx + dy * dy;\n  if (d2) {\n    a2 = a.r + c.r, a2 *= a2;\n    b2 = b.r + c.r, b2 *= b2;\n    if (a2 > b2) {\n      x = (d2 + b2 - a2) / (2 * d2);\n      y = Math.sqrt(Math.max(0, b2 / d2 - x * x));\n      c.x = b.x - x * dx - y * dy;\n      c.y = b.y - x * dy + y * dx;\n    } else {\n      x = (d2 + a2 - b2) / (2 * d2);\n      y = Math.sqrt(Math.max(0, a2 / d2 - x * x));\n      c.x = a.x + x * dx - y * dy;\n      c.y = a.y + x * dy + y * dx;\n    }\n  } else {\n    c.x = a.x + c.r;\n    c.y = a.y;\n  }\n}\n\nfunction intersects(a, b) {\n  var dr = a.r + b.r - 1e-6, dx = b.x - a.x, dy = b.y - a.y;\n  return dr > 0 && dr * dr > dx * dx + dy * dy;\n}\n\nfunction score(node) {\n  var a = node._,\n      b = node.next._,\n      ab = a.r + b.r,\n      dx = (a.x * b.r + b.x * a.r) / ab,\n      dy = (a.y * b.r + b.y * a.r) / ab;\n  return dx * dx + dy * dy;\n}\n\nfunction Node(circle) {\n  this._ = circle;\n  this.next = null;\n  this.previous = null;\n}\n\nexport function packEnclose(circles) {\n  if (!(n = circles.length)) return 0;\n\n  var a, b, c, n, aa, ca, i, j, k, sj, sk;\n\n  // Place the first circle.\n  a = circles[0], a.x = 0, a.y = 0;\n  if (!(n > 1)) return a.r;\n\n  // Place the second circle.\n  b = circles[1], a.x = -b.r, b.x = a.r, b.y = 0;\n  if (!(n > 2)) return a.r + b.r;\n\n  // Place the third circle.\n  place(b, a, c = circles[2]);\n\n  // Initialize the front-chain using the first three circles a, b and c.\n  a = new Node(a), b = new Node(b), c = new Node(c);\n  a.next = c.previous = b;\n  b.next = a.previous = c;\n  c.next = b.previous = a;\n\n  // Attempt to place each remaining circle…\n  pack: for (i = 3; i < n; ++i) {\n    place(a._, b._, c = circles[i]), c = new Node(c);\n\n    // Find the closest intersecting circle on the front-chain, if any.\n    // “Closeness” is determined by linear distance along the front-chain.\n    // “Ahead” or “behind” is likewise determined by linear distance.\n    j = b.next, k = a.previous, sj = b._.r, sk = a._.r;\n    do {\n      if (sj <= sk) {\n        if (intersects(j._, c._)) {\n          b = j, a.next = b, b.previous = a, --i;\n          continue pack;\n        }\n        sj += j._.r, j = j.next;\n      } else {\n        if (intersects(k._, c._)) {\n          a = k, a.next = b, b.previous = a, --i;\n          continue pack;\n        }\n        sk += k._.r, k = k.previous;\n      }\n    } while (j !== k.next);\n\n    // Success! Insert the new circle c between a and b.\n    c.previous = a, c.next = b, a.next = b.previous = b = c;\n\n    // Compute the new closest circle pair to the centroid.\n    aa = score(a);\n    while ((c = c.next) !== b) {\n      if ((ca = score(c)) < aa) {\n        a = c, aa = ca;\n      }\n    }\n    b = a.next;\n  }\n\n  // Compute the enclosing circle of the front chain.\n  a = [b._], c = b; while ((c = c.next) !== b) a.push(c._); c = enclose(a);\n\n  // Translate the circles to put the enclosing circle around the origin.\n  for (i = 0; i < n; ++i) a = circles[i], a.x -= c.x, a.y -= c.y;\n\n  return c.r;\n}\n\nexport default function(circles) {\n  packEnclose(circles);\n  return circles;\n}\n","export function optional(f) {\n  return f == null ? null : required(f);\n}\n\nexport function required(f) {\n  if (typeof f !== \"function\") throw new Error;\n  return f;\n}\n","export function constantZero() {\n  return 0;\n}\n\nexport default function(x) {\n  return function() {\n    return x;\n  };\n}\n","import {packEnclose} from \"./siblings\";\nimport {optional} from \"../accessors\";\nimport constant, {constantZero} from \"../constant\";\n\nfunction defaultRadius(d) {\n  return Math.sqrt(d.value);\n}\n\nexport default function() {\n  var radius = null,\n      dx = 1,\n      dy = 1,\n      padding = constantZero;\n\n  function pack(root) {\n    root.x = dx / 2, root.y = dy / 2;\n    if (radius) {\n      root.eachBefore(radiusLeaf(radius))\n          .eachAfter(packChildren(padding, 0.5))\n          .eachBefore(translateChild(1));\n    } else {\n      root.eachBefore(radiusLeaf(defaultRadius))\n          .eachAfter(packChildren(constantZero, 1))\n          .eachAfter(packChildren(padding, root.r / Math.min(dx, dy)))\n          .eachBefore(translateChild(Math.min(dx, dy) / (2 * root.r)));\n    }\n    return root;\n  }\n\n  pack.radius = function(x) {\n    return arguments.length ? (radius = optional(x), pack) : radius;\n  };\n\n  pack.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], pack) : [dx, dy];\n  };\n\n  pack.padding = function(x) {\n    return arguments.length ? (padding = typeof x === \"function\" ? x : constant(+x), pack) : padding;\n  };\n\n  return pack;\n}\n\nfunction radiusLeaf(radius) {\n  return function(node) {\n    if (!node.children) {\n      node.r = Math.max(0, +radius(node) || 0);\n    }\n  };\n}\n\nfunction packChildren(padding, k) {\n  return function(node) {\n    if (children = node.children) {\n      var children,\n          i,\n          n = children.length,\n          r = padding(node) * k || 0,\n          e;\n\n      if (r) for (i = 0; i < n; ++i) children[i].r += r;\n      e = packEnclose(children);\n      if (r) for (i = 0; i < n; ++i) children[i].r -= r;\n      node.r = e + r;\n    }\n  };\n}\n\nfunction translateChild(k) {\n  return function(node) {\n    var parent = node.parent;\n    node.r *= k;\n    if (parent) {\n      node.x = parent.x + k * node.x;\n      node.y = parent.y + k * node.y;\n    }\n  };\n}\n","export default function(node) {\n  node.x0 = Math.round(node.x0);\n  node.y0 = Math.round(node.y0);\n  node.x1 = Math.round(node.x1);\n  node.y1 = Math.round(node.y1);\n}\n","export default function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      node,\n      i = -1,\n      n = nodes.length,\n      k = parent.value && (x1 - x0) / parent.value;\n\n  while (++i < n) {\n    node = nodes[i], node.y0 = y0, node.y1 = y1;\n    node.x0 = x0, node.x1 = x0 += node.value * k;\n  }\n}\n","import roundNode from \"./treemap/round\";\nimport treemapDice from \"./treemap/dice\";\n\nexport default function() {\n  var dx = 1,\n      dy = 1,\n      padding = 0,\n      round = false;\n\n  function partition(root) {\n    var n = root.height + 1;\n    root.x0 =\n    root.y0 = padding;\n    root.x1 = dx;\n    root.y1 = dy / n;\n    root.eachBefore(positionNode(dy, n));\n    if (round) root.eachBefore(roundNode);\n    return root;\n  }\n\n  function positionNode(dy, n) {\n    return function(node) {\n      if (node.children) {\n        treemapDice(node, node.x0, dy * (node.depth + 1) / n, node.x1, dy * (node.depth + 2) / n);\n      }\n      var x0 = node.x0,\n          y0 = node.y0,\n          x1 = node.x1 - padding,\n          y1 = node.y1 - padding;\n      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n      node.x0 = x0;\n      node.y0 = y0;\n      node.x1 = x1;\n      node.y1 = y1;\n    };\n  }\n\n  partition.round = function(x) {\n    return arguments.length ? (round = !!x, partition) : round;\n  };\n\n  partition.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], partition) : [dx, dy];\n  };\n\n  partition.padding = function(x) {\n    return arguments.length ? (padding = +x, partition) : padding;\n  };\n\n  return partition;\n}\n","import {required} from \"./accessors\";\nimport {Node, computeHeight} from \"./hierarchy/index\";\n\nvar keyPrefix = \"$\", // Protect against keys like “__proto__”.\n    preroot = {depth: -1},\n    ambiguous = {};\n\nfunction defaultId(d) {\n  return d.id;\n}\n\nfunction defaultParentId(d) {\n  return d.parentId;\n}\n\nexport default function() {\n  var id = defaultId,\n      parentId = defaultParentId;\n\n  function stratify(data) {\n    var d,\n        i,\n        n = data.length,\n        root,\n        parent,\n        node,\n        nodes = new Array(n),\n        nodeId,\n        nodeKey,\n        nodeByKey = {};\n\n    for (i = 0; i < n; ++i) {\n      d = data[i], node = nodes[i] = new Node(d);\n      if ((nodeId = id(d, i, data)) != null && (nodeId += \"\")) {\n        nodeKey = keyPrefix + (node.id = nodeId);\n        nodeByKey[nodeKey] = nodeKey in nodeByKey ? ambiguous : node;\n      }\n    }\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i], nodeId = parentId(data[i], i, data);\n      if (nodeId == null || !(nodeId += \"\")) {\n        if (root) throw new Error(\"multiple roots\");\n        root = node;\n      } else {\n        parent = nodeByKey[keyPrefix + nodeId];\n        if (!parent) throw new Error(\"missing: \" + nodeId);\n        if (parent === ambiguous) throw new Error(\"ambiguous: \" + nodeId);\n        if (parent.children) parent.children.push(node);\n        else parent.children = [node];\n        node.parent = parent;\n      }\n    }\n\n    if (!root) throw new Error(\"no root\");\n    root.parent = preroot;\n    root.eachBefore(function(node) { node.depth = node.parent.depth + 1; --n; }).eachBefore(computeHeight);\n    root.parent = null;\n    if (n > 0) throw new Error(\"cycle\");\n\n    return root;\n  }\n\n  stratify.id = function(x) {\n    return arguments.length ? (id = required(x), stratify) : id;\n  };\n\n  stratify.parentId = function(x) {\n    return arguments.length ? (parentId = required(x), stratify) : parentId;\n  };\n\n  return stratify;\n}\n","import {Node} from \"./hierarchy/index\";\n\nfunction defaultSeparation(a, b) {\n  return a.parent === b.parent ? 1 : 2;\n}\n\n// function radialSeparation(a, b) {\n//   return (a.parent === b.parent ? 1 : 2) / a.depth;\n// }\n\n// This function is used to traverse the left contour of a subtree (or\n// subforest). It returns the successor of v on this contour. This successor is\n// either given by the leftmost child of v or by the thread of v. The function\n// returns null if and only if v is on the highest level of its subtree.\nfunction nextLeft(v) {\n  var children = v.children;\n  return children ? children[0] : v.t;\n}\n\n// This function works analogously to nextLeft.\nfunction nextRight(v) {\n  var children = v.children;\n  return children ? children[children.length - 1] : v.t;\n}\n\n// Shifts the current subtree rooted at w+. This is done by increasing\n// prelim(w+) and mod(w+) by shift.\nfunction moveSubtree(wm, wp, shift) {\n  var change = shift / (wp.i - wm.i);\n  wp.c -= change;\n  wp.s += shift;\n  wm.c += change;\n  wp.z += shift;\n  wp.m += shift;\n}\n\n// All other shifts, applied to the smaller subtrees between w- and w+, are\n// performed by this function. To prepare the shifts, we have to adjust\n// change(w+), shift(w+), and change(w-).\nfunction executeShifts(v) {\n  var shift = 0,\n      change = 0,\n      children = v.children,\n      i = children.length,\n      w;\n  while (--i >= 0) {\n    w = children[i];\n    w.z += shift;\n    w.m += shift;\n    shift += w.s + (change += w.c);\n  }\n}\n\n// If vi-’s ancestor is a sibling of v, returns vi-’s ancestor. Otherwise,\n// returns the specified (default) ancestor.\nfunction nextAncestor(vim, v, ancestor) {\n  return vim.a.parent === v.parent ? vim.a : ancestor;\n}\n\nfunction TreeNode(node, i) {\n  this._ = node;\n  this.parent = null;\n  this.children = null;\n  this.A = null; // default ancestor\n  this.a = this; // ancestor\n  this.z = 0; // prelim\n  this.m = 0; // mod\n  this.c = 0; // change\n  this.s = 0; // shift\n  this.t = null; // thread\n  this.i = i; // number\n}\n\nTreeNode.prototype = Object.create(Node.prototype);\n\nfunction treeRoot(root) {\n  var tree = new TreeNode(root, 0),\n      node,\n      nodes = [tree],\n      child,\n      children,\n      i,\n      n;\n\n  while (node = nodes.pop()) {\n    if (children = node._.children) {\n      node.children = new Array(n = children.length);\n      for (i = n - 1; i >= 0; --i) {\n        nodes.push(child = node.children[i] = new TreeNode(children[i], i));\n        child.parent = node;\n      }\n    }\n  }\n\n  (tree.parent = new TreeNode(null, 0)).children = [tree];\n  return tree;\n}\n\n// Node-link tree diagram using the Reingold-Tilford \"tidy\" algorithm\nexport default function() {\n  var separation = defaultSeparation,\n      dx = 1,\n      dy = 1,\n      nodeSize = null;\n\n  function tree(root) {\n    var t = treeRoot(root);\n\n    // Compute the layout using Buchheim et al.’s algorithm.\n    t.eachAfter(firstWalk), t.parent.m = -t.z;\n    t.eachBefore(secondWalk);\n\n    // If a fixed node size is specified, scale x and y.\n    if (nodeSize) root.eachBefore(sizeNode);\n\n    // If a fixed tree size is specified, scale x and y based on the extent.\n    // Compute the left-most, right-most, and depth-most nodes for extents.\n    else {\n      var left = root,\n          right = root,\n          bottom = root;\n      root.eachBefore(function(node) {\n        if (node.x < left.x) left = node;\n        if (node.x > right.x) right = node;\n        if (node.depth > bottom.depth) bottom = node;\n      });\n      var s = left === right ? 1 : separation(left, right) / 2,\n          tx = s - left.x,\n          kx = dx / (right.x + s + tx),\n          ky = dy / (bottom.depth || 1);\n      root.eachBefore(function(node) {\n        node.x = (node.x + tx) * kx;\n        node.y = node.depth * ky;\n      });\n    }\n\n    return root;\n  }\n\n  // Computes a preliminary x-coordinate for v. Before that, FIRST WALK is\n  // applied recursively to the children of v, as well as the function\n  // APPORTION. After spacing out the children by calling EXECUTE SHIFTS, the\n  // node v is placed to the midpoint of its outermost children.\n  function firstWalk(v) {\n    var children = v.children,\n        siblings = v.parent.children,\n        w = v.i ? siblings[v.i - 1] : null;\n    if (children) {\n      executeShifts(v);\n      var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n      if (w) {\n        v.z = w.z + separation(v._, w._);\n        v.m = v.z - midpoint;\n      } else {\n        v.z = midpoint;\n      }\n    } else if (w) {\n      v.z = w.z + separation(v._, w._);\n    }\n    v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n  }\n\n  // Computes all real x-coordinates by summing up the modifiers recursively.\n  function secondWalk(v) {\n    v._.x = v.z + v.parent.m;\n    v.m += v.parent.m;\n  }\n\n  // The core of the algorithm. Here, a new subtree is combined with the\n  // previous subtrees. Threads are used to traverse the inside and outside\n  // contours of the left and right subtree up to the highest common level. The\n  // vertices used for the traversals are vi+, vi-, vo-, and vo+, where the\n  // superscript o means outside and i means inside, the subscript - means left\n  // subtree and + means right subtree. For summing up the modifiers along the\n  // contour, we use respective variables si+, si-, so-, and so+. Whenever two\n  // nodes of the inside contours conflict, we compute the left one of the\n  // greatest uncommon ancestors using the function ANCESTOR and call MOVE\n  // SUBTREE to shift the subtree and prepare the shifts of smaller subtrees.\n  // Finally, we add a new thread (if necessary).\n  function apportion(v, w, ancestor) {\n    if (w) {\n      var vip = v,\n          vop = v,\n          vim = w,\n          vom = vip.parent.children[0],\n          sip = vip.m,\n          sop = vop.m,\n          sim = vim.m,\n          som = vom.m,\n          shift;\n      while (vim = nextRight(vim), vip = nextLeft(vip), vim && vip) {\n        vom = nextLeft(vom);\n        vop = nextRight(vop);\n        vop.a = v;\n        shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n        if (shift > 0) {\n          moveSubtree(nextAncestor(vim, v, ancestor), v, shift);\n          sip += shift;\n          sop += shift;\n        }\n        sim += vim.m;\n        sip += vip.m;\n        som += vom.m;\n        sop += vop.m;\n      }\n      if (vim && !nextRight(vop)) {\n        vop.t = vim;\n        vop.m += sim - sop;\n      }\n      if (vip && !nextLeft(vom)) {\n        vom.t = vip;\n        vom.m += sip - som;\n        ancestor = v;\n      }\n    }\n    return ancestor;\n  }\n\n  function sizeNode(node) {\n    node.x *= dx;\n    node.y = node.depth * dy;\n  }\n\n  tree.separation = function(x) {\n    return arguments.length ? (separation = x, tree) : separation;\n  };\n\n  tree.size = function(x) {\n    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], tree) : (nodeSize ? null : [dx, dy]);\n  };\n\n  tree.nodeSize = function(x) {\n    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], tree) : (nodeSize ? [dx, dy] : null);\n  };\n\n  return tree;\n}\n","export default function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      node,\n      i = -1,\n      n = nodes.length,\n      k = parent.value && (y1 - y0) / parent.value;\n\n  while (++i < n) {\n    node = nodes[i], node.x0 = x0, node.x1 = x1;\n    node.y0 = y0, node.y1 = y0 += node.value * k;\n  }\n}\n","import treemapDice from \"./dice\";\nimport treemapSlice from \"./slice\";\n\nexport var phi = (1 + Math.sqrt(5)) / 2;\n\nexport function squarifyRatio(ratio, parent, x0, y0, x1, y1) {\n  var rows = [],\n      nodes = parent.children,\n      row,\n      nodeValue,\n      i0 = 0,\n      i1 = 0,\n      n = nodes.length,\n      dx, dy,\n      value = parent.value,\n      sumValue,\n      minValue,\n      maxValue,\n      newRatio,\n      minRatio,\n      alpha,\n      beta;\n\n  while (i0 < n) {\n    dx = x1 - x0, dy = y1 - y0;\n\n    // Find the next non-empty node.\n    do sumValue = nodes[i1++].value; while (!sumValue && i1 < n);\n    minValue = maxValue = sumValue;\n    alpha = Math.max(dy / dx, dx / dy) / (value * ratio);\n    beta = sumValue * sumValue * alpha;\n    minRatio = Math.max(maxValue / beta, beta / minValue);\n\n    // Keep adding nodes while the aspect ratio maintains or improves.\n    for (; i1 < n; ++i1) {\n      sumValue += nodeValue = nodes[i1].value;\n      if (nodeValue < minValue) minValue = nodeValue;\n      if (nodeValue > maxValue) maxValue = nodeValue;\n      beta = sumValue * sumValue * alpha;\n      newRatio = Math.max(maxValue / beta, beta / minValue);\n      if (newRatio > minRatio) { sumValue -= nodeValue; break; }\n      minRatio = newRatio;\n    }\n\n    // Position and record the row orientation.\n    rows.push(row = {value: sumValue, dice: dx < dy, children: nodes.slice(i0, i1)});\n    if (row.dice) treemapDice(row, x0, y0, x1, value ? y0 += dy * sumValue / value : y1);\n    else treemapSlice(row, x0, y0, value ? x0 += dx * sumValue / value : x1, y1);\n    value -= sumValue, i0 = i1;\n  }\n\n  return rows;\n}\n\nexport default (function custom(ratio) {\n\n  function squarify(parent, x0, y0, x1, y1) {\n    squarifyRatio(ratio, parent, x0, y0, x1, y1);\n  }\n\n  squarify.ratio = function(x) {\n    return custom((x = +x) > 1 ? x : 1);\n  };\n\n  return squarify;\n})(phi);\n","import roundNode from \"./round\";\nimport squarify from \"./squarify\";\nimport {required} from \"../accessors\";\nimport constant, {constantZero} from \"../constant\";\n\nexport default function() {\n  var tile = squarify,\n      round = false,\n      dx = 1,\n      dy = 1,\n      paddingStack = [0],\n      paddingInner = constantZero,\n      paddingTop = constantZero,\n      paddingRight = constantZero,\n      paddingBottom = constantZero,\n      paddingLeft = constantZero;\n\n  function treemap(root) {\n    root.x0 =\n    root.y0 = 0;\n    root.x1 = dx;\n    root.y1 = dy;\n    root.eachBefore(positionNode);\n    paddingStack = [0];\n    if (round) root.eachBefore(roundNode);\n    return root;\n  }\n\n  function positionNode(node) {\n    var p = paddingStack[node.depth],\n        x0 = node.x0 + p,\n        y0 = node.y0 + p,\n        x1 = node.x1 - p,\n        y1 = node.y1 - p;\n    if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n    if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n    node.x0 = x0;\n    node.y0 = y0;\n    node.x1 = x1;\n    node.y1 = y1;\n    if (node.children) {\n      p = paddingStack[node.depth + 1] = paddingInner(node) / 2;\n      x0 += paddingLeft(node) - p;\n      y0 += paddingTop(node) - p;\n      x1 -= paddingRight(node) - p;\n      y1 -= paddingBottom(node) - p;\n      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n      tile(node, x0, y0, x1, y1);\n    }\n  }\n\n  treemap.round = function(x) {\n    return arguments.length ? (round = !!x, treemap) : round;\n  };\n\n  treemap.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], treemap) : [dx, dy];\n  };\n\n  treemap.tile = function(x) {\n    return arguments.length ? (tile = required(x), treemap) : tile;\n  };\n\n  treemap.padding = function(x) {\n    return arguments.length ? treemap.paddingInner(x).paddingOuter(x) : treemap.paddingInner();\n  };\n\n  treemap.paddingInner = function(x) {\n    return arguments.length ? (paddingInner = typeof x === \"function\" ? x : constant(+x), treemap) : paddingInner;\n  };\n\n  treemap.paddingOuter = function(x) {\n    return arguments.length ? treemap.paddingTop(x).paddingRight(x).paddingBottom(x).paddingLeft(x) : treemap.paddingTop();\n  };\n\n  treemap.paddingTop = function(x) {\n    return arguments.length ? (paddingTop = typeof x === \"function\" ? x : constant(+x), treemap) : paddingTop;\n  };\n\n  treemap.paddingRight = function(x) {\n    return arguments.length ? (paddingRight = typeof x === \"function\" ? x : constant(+x), treemap) : paddingRight;\n  };\n\n  treemap.paddingBottom = function(x) {\n    return arguments.length ? (paddingBottom = typeof x === \"function\" ? x : constant(+x), treemap) : paddingBottom;\n  };\n\n  treemap.paddingLeft = function(x) {\n    return arguments.length ? (paddingLeft = typeof x === \"function\" ? x : constant(+x), treemap) : paddingLeft;\n  };\n\n  return treemap;\n}\n","export default function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      i, n = nodes.length,\n      sum, sums = new Array(n + 1);\n\n  for (sums[0] = sum = i = 0; i < n; ++i) {\n    sums[i + 1] = sum += nodes[i].value;\n  }\n\n  partition(0, n, parent.value, x0, y0, x1, y1);\n\n  function partition(i, j, value, x0, y0, x1, y1) {\n    if (i >= j - 1) {\n      var node = nodes[i];\n      node.x0 = x0, node.y0 = y0;\n      node.x1 = x1, node.y1 = y1;\n      return;\n    }\n\n    var valueOffset = sums[i],\n        valueTarget = (value / 2) + valueOffset,\n        k = i + 1,\n        hi = j - 1;\n\n    while (k < hi) {\n      var mid = k + hi >>> 1;\n      if (sums[mid] < valueTarget) k = mid + 1;\n      else hi = mid;\n    }\n\n    if ((valueTarget - sums[k - 1]) < (sums[k] - valueTarget) && i + 1 < k) --k;\n\n    var valueLeft = sums[k] - valueOffset,\n        valueRight = value - valueLeft;\n\n    if ((x1 - x0) > (y1 - y0)) {\n      var xk = (x0 * valueRight + x1 * valueLeft) / value;\n      partition(i, k, valueLeft, x0, y0, xk, y1);\n      partition(k, j, valueRight, xk, y0, x1, y1);\n    } else {\n      var yk = (y0 * valueRight + y1 * valueLeft) / value;\n      partition(i, k, valueLeft, x0, y0, x1, yk);\n      partition(k, j, valueRight, x0, yk, x1, y1);\n    }\n  }\n}\n","import dice from \"./dice\";\nimport slice from \"./slice\";\n\nexport default function(parent, x0, y0, x1, y1) {\n  (parent.depth & 1 ? slice : dice)(parent, x0, y0, x1, y1);\n}\n","import treemapDice from \"./dice\";\nimport treemapSlice from \"./slice\";\nimport {phi, squarifyRatio} from \"./squarify\";\n\nexport default (function custom(ratio) {\n\n  function resquarify(parent, x0, y0, x1, y1) {\n    if ((rows = parent._squarify) && (rows.ratio === ratio)) {\n      var rows,\n          row,\n          nodes,\n          i,\n          j = -1,\n          n,\n          m = rows.length,\n          value = parent.value;\n\n      while (++j < m) {\n        row = rows[j], nodes = row.children;\n        for (i = row.value = 0, n = nodes.length; i < n; ++i) row.value += nodes[i].value;\n        if (row.dice) treemapDice(row, x0, y0, x1, y0 += (y1 - y0) * row.value / value);\n        else treemapSlice(row, x0, y0, x0 += (x1 - x0) * row.value / value, y1);\n        value -= row.value;\n      }\n    } else {\n      parent._squarify = rows = squarifyRatio(ratio, parent, x0, y0, x1, y1);\n      rows.ratio = ratio;\n    }\n  }\n\n  resquarify.ratio = function(x) {\n    return custom((x = +x) > 1 ? x : 1);\n  };\n\n  return resquarify;\n})(phi);\n","export default function(polygon) {\n  var i = -1,\n      n = polygon.length,\n      a,\n      b = polygon[n - 1],\n      area = 0;\n\n  while (++i < n) {\n    a = b;\n    b = polygon[i];\n    area += a[1] * b[0] - a[0] * b[1];\n  }\n\n  return area / 2;\n}\n","export default function(polygon) {\n  var i = -1,\n      n = polygon.length,\n      x = 0,\n      y = 0,\n      a,\n      b = polygon[n - 1],\n      c,\n      k = 0;\n\n  while (++i < n) {\n    a = b;\n    b = polygon[i];\n    k += c = a[0] * b[1] - b[0] * a[1];\n    x += (a[0] + b[0]) * c;\n    y += (a[1] + b[1]) * c;\n  }\n\n  return k *= 3, [x / k, y / k];\n}\n","// Returns the 2D cross product of AB and AC vectors, i.e., the z-component of\n// the 3D cross product in a quadrant I Cartesian coordinate system (+x is\n// right, +y is up). Returns a positive value if ABC is counter-clockwise,\n// negative if clockwise, and zero if the points are collinear.\nexport default function(a, b, c) {\n  return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n}\n","import cross from \"./cross\";\n\nfunction lexicographicOrder(a, b) {\n  return a[0] - b[0] || a[1] - b[1];\n}\n\n// Computes the upper convex hull per the monotone chain algorithm.\n// Assumes points.length >= 3, is sorted by x, unique in y.\n// Returns an array of indices into points in left-to-right order.\nfunction computeUpperHullIndexes(points) {\n  var n = points.length,\n      indexes = [0, 1],\n      size = 2;\n\n  for (var i = 2; i < n; ++i) {\n    while (size > 1 && cross(points[indexes[size - 2]], points[indexes[size - 1]], points[i]) <= 0) --size;\n    indexes[size++] = i;\n  }\n\n  return indexes.slice(0, size); // remove popped points\n}\n\nexport default function(points) {\n  if ((n = points.length) < 3) return null;\n\n  var i,\n      n,\n      sortedPoints = new Array(n),\n      flippedPoints = new Array(n);\n\n  for (i = 0; i < n; ++i) sortedPoints[i] = [+points[i][0], +points[i][1], i];\n  sortedPoints.sort(lexicographicOrder);\n  for (i = 0; i < n; ++i) flippedPoints[i] = [sortedPoints[i][0], -sortedPoints[i][1]];\n\n  var upperIndexes = computeUpperHullIndexes(sortedPoints),\n      lowerIndexes = computeUpperHullIndexes(flippedPoints);\n\n  // Construct the hull polygon, removing possible duplicate endpoints.\n  var skipLeft = lowerIndexes[0] === upperIndexes[0],\n      skipRight = lowerIndexes[lowerIndexes.length - 1] === upperIndexes[upperIndexes.length - 1],\n      hull = [];\n\n  // Add upper hull in right-to-l order.\n  // Then add lower hull in left-to-right order.\n  for (i = upperIndexes.length - 1; i >= 0; --i) hull.push(points[sortedPoints[upperIndexes[i]][2]]);\n  for (i = +skipLeft; i < lowerIndexes.length - skipRight; ++i) hull.push(points[sortedPoints[lowerIndexes[i]][2]]);\n\n  return hull;\n}\n","export default function(polygon, point) {\n  var n = polygon.length,\n      p = polygon[n - 1],\n      x = point[0], y = point[1],\n      x0 = p[0], y0 = p[1],\n      x1, y1,\n      inside = false;\n\n  for (var i = 0; i < n; ++i) {\n    p = polygon[i], x1 = p[0], y1 = p[1];\n    if (((y1 > y) !== (y0 > y)) && (x < (x0 - x1) * (y - y1) / (y0 - y1) + x1)) inside = !inside;\n    x0 = x1, y0 = y1;\n  }\n\n  return inside;\n}\n","export default function(polygon) {\n  var i = -1,\n      n = polygon.length,\n      b = polygon[n - 1],\n      xa,\n      ya,\n      xb = b[0],\n      yb = b[1],\n      perimeter = 0;\n\n  while (++i < n) {\n    xa = xb;\n    ya = yb;\n    b = polygon[i];\n    xb = b[0];\n    yb = b[1];\n    xa -= xb;\n    ya -= yb;\n    perimeter += Math.sqrt(xa * xa + ya * ya);\n  }\n\n  return perimeter;\n}\n","export default function() {\n  return Math.random();\n}\n","import defaultSource from \"./defaultSource\";\n\nexport default (function sourceRandomUniform(source) {\n  function randomUniform(min, max) {\n    min = min == null ? 0 : +min;\n    max = max == null ? 1 : +max;\n    if (arguments.length === 1) max = min, min = 0;\n    else max -= min;\n    return function() {\n      return source() * max + min;\n    };\n  }\n\n  randomUniform.source = sourceRandomUniform;\n\n  return randomUniform;\n})(defaultSource);\n","import defaultSource from \"./defaultSource\";\n\nexport default (function sourceRandomNormal(source) {\n  function randomNormal(mu, sigma) {\n    var x, r;\n    mu = mu == null ? 0 : +mu;\n    sigma = sigma == null ? 1 : +sigma;\n    return function() {\n      var y;\n\n      // If available, use the second previously-generated uniform random.\n      if (x != null) y = x, x = null;\n\n      // Otherwise, generate a new x and y.\n      else do {\n        x = source() * 2 - 1;\n        y = source() * 2 - 1;\n        r = x * x + y * y;\n      } while (!r || r > 1);\n\n      return mu + sigma * y * Math.sqrt(-2 * Math.log(r) / r);\n    };\n  }\n\n  randomNormal.source = sourceRandomNormal;\n\n  return randomNormal;\n})(defaultSource);\n","import defaultSource from \"./defaultSource\";\nimport normal from \"./normal\";\n\nexport default (function sourceRandomLogNormal(source) {\n  function randomLogNormal() {\n    var randomNormal = normal.source(source).apply(this, arguments);\n    return function() {\n      return Math.exp(randomNormal());\n    };\n  }\n\n  randomLogNormal.source = sourceRandomLogNormal;\n\n  return randomLogNormal;\n})(defaultSource);\n","import defaultSource from \"./defaultSource\";\n\nexport default (function sourceRandomIrwinHall(source) {\n  function randomIrwinHall(n) {\n    return function() {\n      for (var sum = 0, i = 0; i < n; ++i) sum += source();\n      return sum;\n    };\n  }\n\n  randomIrwinHall.source = sourceRandomIrwinHall;\n\n  return randomIrwinHall;\n})(defaultSource);\n","import defaultSource from \"./defaultSource\";\nimport irwinHall from \"./irwinHall\";\n\nexport default (function sourceRandomBates(source) {\n  function randomBates(n) {\n    var randomIrwinHall = irwinHall.source(source)(n);\n    return function() {\n      return randomIrwinHall() / n;\n    };\n  }\n\n  randomBates.source = sourceRandomBates;\n\n  return randomBates;\n})(defaultSource);\n","import defaultSource from \"./defaultSource\";\n\nexport default (function sourceRandomExponential(source) {\n  function randomExponential(lambda) {\n    return function() {\n      return -Math.log(1 - source()) / lambda;\n    };\n  }\n\n  randomExponential.source = sourceRandomExponential;\n\n  return randomExponential;\n})(defaultSource);\n","var array = Array.prototype;\n\nexport var map = array.map;\nexport var slice = array.slice;\n","import {map} from \"d3-collection\";\nimport {slice} from \"./array\";\n\nexport var implicit = {name: \"implicit\"};\n\nexport default function ordinal(range) {\n  var index = map(),\n      domain = [],\n      unknown = implicit;\n\n  range = range == null ? [] : slice.call(range);\n\n  function scale(d) {\n    var key = d + \"\", i = index.get(key);\n    if (!i) {\n      if (unknown !== implicit) return unknown;\n      index.set(key, i = domain.push(d));\n    }\n    return range[(i - 1) % range.length];\n  }\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [], index = map();\n    var i = -1, n = _.length, d, key;\n    while (++i < n) if (!index.has(key = (d = _[i]) + \"\")) index.set(key, domain.push(d));\n    return scale;\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), scale) : range.slice();\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  scale.copy = function() {\n    return ordinal()\n        .domain(domain)\n        .range(range)\n        .unknown(unknown);\n  };\n\n  return scale;\n}\n","import {range as sequence} from \"d3-array\";\nimport ordinal from \"./ordinal\";\n\nexport default function band() {\n  var scale = ordinal().unknown(undefined),\n      domain = scale.domain,\n      ordinalRange = scale.range,\n      range = [0, 1],\n      step,\n      bandwidth,\n      round = false,\n      paddingInner = 0,\n      paddingOuter = 0,\n      align = 0.5;\n\n  delete scale.unknown;\n\n  function rescale() {\n    var n = domain().length,\n        reverse = range[1] < range[0],\n        start = range[reverse - 0],\n        stop = range[1 - reverse];\n    step = (stop - start) / Math.max(1, n - paddingInner + paddingOuter * 2);\n    if (round) step = Math.floor(step);\n    start += (stop - start - step * (n - paddingInner)) * align;\n    bandwidth = step * (1 - paddingInner);\n    if (round) start = Math.round(start), bandwidth = Math.round(bandwidth);\n    var values = sequence(n).map(function(i) { return start + step * i; });\n    return ordinalRange(reverse ? values.reverse() : values);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = [+_[0], +_[1]], rescale()) : range.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range = [+_[0], +_[1]], round = true, rescale();\n  };\n\n  scale.bandwidth = function() {\n    return bandwidth;\n  };\n\n  scale.step = function() {\n    return step;\n  };\n\n  scale.round = function(_) {\n    return arguments.length ? (round = !!_, rescale()) : round;\n  };\n\n  scale.padding = function(_) {\n    return arguments.length ? (paddingInner = paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n  };\n\n  scale.paddingInner = function(_) {\n    return arguments.length ? (paddingInner = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n  };\n\n  scale.paddingOuter = function(_) {\n    return arguments.length ? (paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingOuter;\n  };\n\n  scale.align = function(_) {\n    return arguments.length ? (align = Math.max(0, Math.min(1, _)), rescale()) : align;\n  };\n\n  scale.copy = function() {\n    return band()\n        .domain(domain())\n        .range(range)\n        .round(round)\n        .paddingInner(paddingInner)\n        .paddingOuter(paddingOuter)\n        .align(align);\n  };\n\n  return rescale();\n}\n\nfunction pointish(scale) {\n  var copy = scale.copy;\n\n  scale.padding = scale.paddingOuter;\n  delete scale.paddingInner;\n  delete scale.paddingOuter;\n\n  scale.copy = function() {\n    return pointish(copy());\n  };\n\n  return scale;\n}\n\nexport function point() {\n  return pointish(band().paddingInner(1));\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function(x) {\n  return +x;\n}\n","import {bisect} from \"d3-array\";\nimport {interpolate as interpolateValue, interpolateRound} from \"d3-interpolate\";\nimport {map, slice} from \"./array\";\nimport constant from \"./constant\";\nimport number from \"./number\";\n\nvar unit = [0, 1];\n\nexport function deinterpolateLinear(a, b) {\n  return (b -= (a = +a))\n      ? function(x) { return (x - a) / b; }\n      : constant(b);\n}\n\nfunction deinterpolateClamp(deinterpolate) {\n  return function(a, b) {\n    var d = deinterpolate(a = +a, b = +b);\n    return function(x) { return x <= a ? 0 : x >= b ? 1 : d(x); };\n  };\n}\n\nfunction reinterpolateClamp(reinterpolate) {\n  return function(a, b) {\n    var r = reinterpolate(a = +a, b = +b);\n    return function(t) { return t <= 0 ? a : t >= 1 ? b : r(t); };\n  };\n}\n\nfunction bimap(domain, range, deinterpolate, reinterpolate) {\n  var d0 = domain[0], d1 = domain[1], r0 = range[0], r1 = range[1];\n  if (d1 < d0) d0 = deinterpolate(d1, d0), r0 = reinterpolate(r1, r0);\n  else d0 = deinterpolate(d0, d1), r0 = reinterpolate(r0, r1);\n  return function(x) { return r0(d0(x)); };\n}\n\nfunction polymap(domain, range, deinterpolate, reinterpolate) {\n  var j = Math.min(domain.length, range.length) - 1,\n      d = new Array(j),\n      r = new Array(j),\n      i = -1;\n\n  // Reverse descending domains.\n  if (domain[j] < domain[0]) {\n    domain = domain.slice().reverse();\n    range = range.slice().reverse();\n  }\n\n  while (++i < j) {\n    d[i] = deinterpolate(domain[i], domain[i + 1]);\n    r[i] = reinterpolate(range[i], range[i + 1]);\n  }\n\n  return function(x) {\n    var i = bisect(domain, x, 1, j) - 1;\n    return r[i](d[i](x));\n  };\n}\n\nexport function copy(source, target) {\n  return target\n      .domain(source.domain())\n      .range(source.range())\n      .interpolate(source.interpolate())\n      .clamp(source.clamp());\n}\n\n// deinterpolate(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].\n// reinterpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding domain value x in [a,b].\nexport default function continuous(deinterpolate, reinterpolate) {\n  var domain = unit,\n      range = unit,\n      interpolate = interpolateValue,\n      clamp = false,\n      piecewise,\n      output,\n      input;\n\n  function rescale() {\n    piecewise = Math.min(domain.length, range.length) > 2 ? polymap : bimap;\n    output = input = null;\n    return scale;\n  }\n\n  function scale(x) {\n    return (output || (output = piecewise(domain, range, clamp ? deinterpolateClamp(deinterpolate) : deinterpolate, interpolate)))(+x);\n  }\n\n  scale.invert = function(y) {\n    return (input || (input = piecewise(range, domain, deinterpolateLinear, clamp ? reinterpolateClamp(reinterpolate) : reinterpolate)))(+y);\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = map.call(_, number), rescale()) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), rescale()) : range.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range = slice.call(_), interpolate = interpolateRound, rescale();\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, rescale()) : clamp;\n  };\n\n  scale.interpolate = function(_) {\n    return arguments.length ? (interpolate = _, rescale()) : interpolate;\n  };\n\n  return rescale();\n}\n","import {tickStep} from \"d3-array\";\nimport {format, formatPrefix, formatSpecifier, precisionFixed, precisionPrefix, precisionRound} from \"d3-format\";\n\nexport default function(domain, count, specifier) {\n  var start = domain[0],\n      stop = domain[domain.length - 1],\n      step = tickStep(start, stop, count == null ? 10 : count),\n      precision;\n  specifier = formatSpecifier(specifier == null ? \",f\" : specifier);\n  switch (specifier.type) {\n    case \"s\": {\n      var value = Math.max(Math.abs(start), Math.abs(stop));\n      if (specifier.precision == null && !isNaN(precision = precisionPrefix(step, value))) specifier.precision = precision;\n      return formatPrefix(specifier, value);\n    }\n    case \"\":\n    case \"e\":\n    case \"g\":\n    case \"p\":\n    case \"r\": {\n      if (specifier.precision == null && !isNaN(precision = precisionRound(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === \"e\");\n      break;\n    }\n    case \"f\":\n    case \"%\": {\n      if (specifier.precision == null && !isNaN(precision = precisionFixed(step))) specifier.precision = precision - (specifier.type === \"%\") * 2;\n      break;\n    }\n  }\n  return format(specifier);\n}\n","import {ticks, tickIncrement} from \"d3-array\";\nimport {interpolateNumber as reinterpolate} from \"d3-interpolate\";\nimport {default as continuous, copy, deinterpolateLinear as deinterpolate} from \"./continuous\";\nimport tickFormat from \"./tickFormat\";\n\nexport function linearish(scale) {\n  var domain = scale.domain;\n\n  scale.ticks = function(count) {\n    var d = domain();\n    return ticks(d[0], d[d.length - 1], count == null ? 10 : count);\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return tickFormat(domain(), count, specifier);\n  };\n\n  scale.nice = function(count) {\n    if (count == null) count = 10;\n\n    var d = domain(),\n        i0 = 0,\n        i1 = d.length - 1,\n        start = d[i0],\n        stop = d[i1],\n        step;\n\n    if (stop < start) {\n      step = start, start = stop, stop = step;\n      step = i0, i0 = i1, i1 = step;\n    }\n\n    step = tickIncrement(start, stop, count);\n\n    if (step > 0) {\n      start = Math.floor(start / step) * step;\n      stop = Math.ceil(stop / step) * step;\n      step = tickIncrement(start, stop, count);\n    } else if (step < 0) {\n      start = Math.ceil(start * step) / step;\n      stop = Math.floor(stop * step) / step;\n      step = tickIncrement(start, stop, count);\n    }\n\n    if (step > 0) {\n      d[i0] = Math.floor(start / step) * step;\n      d[i1] = Math.ceil(stop / step) * step;\n      domain(d);\n    } else if (step < 0) {\n      d[i0] = Math.ceil(start * step) / step;\n      d[i1] = Math.floor(stop * step) / step;\n      domain(d);\n    }\n\n    return scale;\n  };\n\n  return scale;\n}\n\nexport default function linear() {\n  var scale = continuous(deinterpolate, reinterpolate);\n\n  scale.copy = function() {\n    return copy(scale, linear());\n  };\n\n  return linearish(scale);\n}\n","import {map} from \"./array\";\nimport {linearish} from \"./linear\";\nimport number from \"./number\";\n\nexport default function identity() {\n  var domain = [0, 1];\n\n  function scale(x) {\n    return +x;\n  }\n\n  scale.invert = scale;\n\n  scale.domain = scale.range = function(_) {\n    return arguments.length ? (domain = map.call(_, number), scale) : domain.slice();\n  };\n\n  scale.copy = function() {\n    return identity().domain(domain);\n  };\n\n  return linearish(scale);\n}\n","export default function(domain, interval) {\n  domain = domain.slice();\n\n  var i0 = 0,\n      i1 = domain.length - 1,\n      x0 = domain[i0],\n      x1 = domain[i1],\n      t;\n\n  if (x1 < x0) {\n    t = i0, i0 = i1, i1 = t;\n    t = x0, x0 = x1, x1 = t;\n  }\n\n  domain[i0] = interval.floor(x0);\n  domain[i1] = interval.ceil(x1);\n  return domain;\n}\n","import {ticks} from \"d3-array\";\nimport {format} from \"d3-format\";\nimport constant from \"./constant\";\nimport nice from \"./nice\";\nimport {default as continuous, copy} from \"./continuous\";\n\nfunction deinterpolate(a, b) {\n  return (b = Math.log(b / a))\n      ? function(x) { return Math.log(x / a) / b; }\n      : constant(b);\n}\n\nfunction reinterpolate(a, b) {\n  return a < 0\n      ? function(t) { return -Math.pow(-b, t) * Math.pow(-a, 1 - t); }\n      : function(t) { return Math.pow(b, t) * Math.pow(a, 1 - t); };\n}\n\nfunction pow10(x) {\n  return isFinite(x) ? +(\"1e\" + x) : x < 0 ? 0 : x;\n}\n\nfunction powp(base) {\n  return base === 10 ? pow10\n      : base === Math.E ? Math.exp\n      : function(x) { return Math.pow(base, x); };\n}\n\nfunction logp(base) {\n  return base === Math.E ? Math.log\n      : base === 10 && Math.log10\n      || base === 2 && Math.log2\n      || (base = Math.log(base), function(x) { return Math.log(x) / base; });\n}\n\nfunction reflect(f) {\n  return function(x) {\n    return -f(-x);\n  };\n}\n\nexport default function log() {\n  var scale = continuous(deinterpolate, reinterpolate).domain([1, 10]),\n      domain = scale.domain,\n      base = 10,\n      logs = logp(10),\n      pows = powp(10);\n\n  function rescale() {\n    logs = logp(base), pows = powp(base);\n    if (domain()[0] < 0) logs = reflect(logs), pows = reflect(pows);\n    return scale;\n  }\n\n  scale.base = function(_) {\n    return arguments.length ? (base = +_, rescale()) : base;\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.ticks = function(count) {\n    var d = domain(),\n        u = d[0],\n        v = d[d.length - 1],\n        r;\n\n    if (r = v < u) i = u, u = v, v = i;\n\n    var i = logs(u),\n        j = logs(v),\n        p,\n        k,\n        t,\n        n = count == null ? 10 : +count,\n        z = [];\n\n    if (!(base % 1) && j - i < n) {\n      i = Math.round(i) - 1, j = Math.round(j) + 1;\n      if (u > 0) for (; i < j; ++i) {\n        for (k = 1, p = pows(i); k < base; ++k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      } else for (; i < j; ++i) {\n        for (k = base - 1, p = pows(i); k >= 1; --k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      }\n    } else {\n      z = ticks(i, j, Math.min(j - i, n)).map(pows);\n    }\n\n    return r ? z.reverse() : z;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    if (specifier == null) specifier = base === 10 ? \".0e\" : \",\";\n    if (typeof specifier !== \"function\") specifier = format(specifier);\n    if (count === Infinity) return specifier;\n    if (count == null) count = 10;\n    var k = Math.max(1, base * count / scale.ticks().length); // TODO fast estimate?\n    return function(d) {\n      var i = d / pows(Math.round(logs(d)));\n      if (i * base < base - 0.5) i *= base;\n      return i <= k ? specifier(d) : \"\";\n    };\n  };\n\n  scale.nice = function() {\n    return domain(nice(domain(), {\n      floor: function(x) { return pows(Math.floor(logs(x))); },\n      ceil: function(x) { return pows(Math.ceil(logs(x))); }\n    }));\n  };\n\n  scale.copy = function() {\n    return copy(scale, log().base(base));\n  };\n\n  return scale;\n}\n","import constant from \"./constant\";\nimport {linearish} from \"./linear\";\nimport {default as continuous, copy} from \"./continuous\";\n\nfunction raise(x, exponent) {\n  return x < 0 ? -Math.pow(-x, exponent) : Math.pow(x, exponent);\n}\n\nexport default function pow() {\n  var exponent = 1,\n      scale = continuous(deinterpolate, reinterpolate),\n      domain = scale.domain;\n\n  function deinterpolate(a, b) {\n    return (b = raise(b, exponent) - (a = raise(a, exponent)))\n        ? function(x) { return (raise(x, exponent) - a) / b; }\n        : constant(b);\n  }\n\n  function reinterpolate(a, b) {\n    b = raise(b, exponent) - (a = raise(a, exponent));\n    return function(t) { return raise(a + b * t, 1 / exponent); };\n  }\n\n  scale.exponent = function(_) {\n    return arguments.length ? (exponent = +_, domain(domain())) : exponent;\n  };\n\n  scale.copy = function() {\n    return copy(scale, pow().exponent(exponent));\n  };\n\n  return linearish(scale);\n}\n\nexport function sqrt() {\n  return pow().exponent(0.5);\n}\n","import {ascending, bisect, quantile as threshold} from \"d3-array\";\nimport {slice} from \"./array\";\n\nexport default function quantile() {\n  var domain = [],\n      range = [],\n      thresholds = [];\n\n  function rescale() {\n    var i = 0, n = Math.max(1, range.length);\n    thresholds = new Array(n - 1);\n    while (++i < n) thresholds[i - 1] = threshold(domain, i / n);\n    return scale;\n  }\n\n  function scale(x) {\n    if (!isNaN(x = +x)) return range[bisect(thresholds, x)];\n  }\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return i < 0 ? [NaN, NaN] : [\n      i > 0 ? thresholds[i - 1] : domain[0],\n      i < thresholds.length ? thresholds[i] : domain[domain.length - 1]\n    ];\n  };\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [];\n    for (var i = 0, n = _.length, d; i < n; ++i) if (d = _[i], d != null && !isNaN(d = +d)) domain.push(d);\n    domain.sort(ascending);\n    return rescale();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), rescale()) : range.slice();\n  };\n\n  scale.quantiles = function() {\n    return thresholds.slice();\n  };\n\n  scale.copy = function() {\n    return quantile()\n        .domain(domain)\n        .range(range);\n  };\n\n  return scale;\n}\n","import {bisect} from \"d3-array\";\nimport {slice} from \"./array\";\nimport {linearish} from \"./linear\";\n\nexport default function quantize() {\n  var x0 = 0,\n      x1 = 1,\n      n = 1,\n      domain = [0.5],\n      range = [0, 1];\n\n  function scale(x) {\n    if (x <= x) return range[bisect(domain, x, 0, n)];\n  }\n\n  function rescale() {\n    var i = -1;\n    domain = new Array(n);\n    while (++i < n) domain[i] = ((i + 1) * x1 - (i - n) * x0) / (n + 1);\n    return scale;\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], rescale()) : [x0, x1];\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (n = (range = slice.call(_)).length - 1, rescale()) : range.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return i < 0 ? [NaN, NaN]\n        : i < 1 ? [x0, domain[0]]\n        : i >= n ? [domain[n - 1], x1]\n        : [domain[i - 1], domain[i]];\n  };\n\n  scale.copy = function() {\n    return quantize()\n        .domain([x0, x1])\n        .range(range);\n  };\n\n  return linearish(scale);\n}\n","import {bisect} from \"d3-array\";\nimport {slice} from \"./array\";\n\nexport default function threshold() {\n  var domain = [0.5],\n      range = [0, 1],\n      n = 1;\n\n  function scale(x) {\n    if (x <= x) return range[bisect(domain, x, 0, n)];\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = slice.call(_), n = Math.min(domain.length, range.length - 1), scale) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), n = Math.min(domain.length, range.length - 1), scale) : range.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return [domain[i - 1], domain[i]];\n  };\n\n  scale.copy = function() {\n    return threshold()\n        .domain(domain)\n        .range(range);\n  };\n\n  return scale;\n}\n","var t0 = new Date,\n    t1 = new Date;\n\nexport default function newInterval(floori, offseti, count, field) {\n\n  function interval(date) {\n    return floori(date = new Date(+date)), date;\n  }\n\n  interval.floor = interval;\n\n  interval.ceil = function(date) {\n    return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;\n  };\n\n  interval.round = function(date) {\n    var d0 = interval(date),\n        d1 = interval.ceil(date);\n    return date - d0 < d1 - date ? d0 : d1;\n  };\n\n  interval.offset = function(date, step) {\n    return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;\n  };\n\n  interval.range = function(start, stop, step) {\n    var range = [], previous;\n    start = interval.ceil(start);\n    step = step == null ? 1 : Math.floor(step);\n    if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date\n    do range.push(previous = new Date(+start)), offseti(start, step), floori(start);\n    while (previous < start && start < stop);\n    return range;\n  };\n\n  interval.filter = function(test) {\n    return newInterval(function(date) {\n      if (date >= date) while (floori(date), !test(date)) date.setTime(date - 1);\n    }, function(date, step) {\n      if (date >= date) {\n        if (step < 0) while (++step <= 0) {\n          while (offseti(date, -1), !test(date)) {} // eslint-disable-line no-empty\n        } else while (--step >= 0) {\n          while (offseti(date, +1), !test(date)) {} // eslint-disable-line no-empty\n        }\n      }\n    });\n  };\n\n  if (count) {\n    interval.count = function(start, end) {\n      t0.setTime(+start), t1.setTime(+end);\n      floori(t0), floori(t1);\n      return Math.floor(count(t0, t1));\n    };\n\n    interval.every = function(step) {\n      step = Math.floor(step);\n      return !isFinite(step) || !(step > 0) ? null\n          : !(step > 1) ? interval\n          : interval.filter(field\n              ? function(d) { return field(d) % step === 0; }\n              : function(d) { return interval.count(0, d) % step === 0; });\n    };\n  }\n\n  return interval;\n}\n","import interval from \"./interval\";\n\nvar millisecond = interval(function() {\n  // noop\n}, function(date, step) {\n  date.setTime(+date + step);\n}, function(start, end) {\n  return end - start;\n});\n\n// An optimized implementation for this simple case.\nmillisecond.every = function(k) {\n  k = Math.floor(k);\n  if (!isFinite(k) || !(k > 0)) return null;\n  if (!(k > 1)) return millisecond;\n  return interval(function(date) {\n    date.setTime(Math.floor(date / k) * k);\n  }, function(date, step) {\n    date.setTime(+date + step * k);\n  }, function(start, end) {\n    return (end - start) / k;\n  });\n};\n\nexport default millisecond;\nexport var milliseconds = millisecond.range;\n","export var durationSecond = 1e3;\nexport var durationMinute = 6e4;\nexport var durationHour = 36e5;\nexport var durationDay = 864e5;\nexport var durationWeek = 6048e5;\n","import interval from \"./interval\";\nimport {durationSecond} from \"./duration\";\n\nvar second = interval(function(date) {\n  date.setTime(Math.floor(date / durationSecond) * durationSecond);\n}, function(date, step) {\n  date.setTime(+date + step * durationSecond);\n}, function(start, end) {\n  return (end - start) / durationSecond;\n}, function(date) {\n  return date.getUTCSeconds();\n});\n\nexport default second;\nexport var seconds = second.range;\n","import interval from \"./interval\";\nimport {durationMinute} from \"./duration\";\n\nvar minute = interval(function(date) {\n  date.setTime(Math.floor(date / durationMinute) * durationMinute);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute);\n}, function(start, end) {\n  return (end - start) / durationMinute;\n}, function(date) {\n  return date.getMinutes();\n});\n\nexport default minute;\nexport var minutes = minute.range;\n","import interval from \"./interval\";\nimport {durationHour, durationMinute} from \"./duration\";\n\nvar hour = interval(function(date) {\n  var offset = date.getTimezoneOffset() * durationMinute % durationHour;\n  if (offset < 0) offset += durationHour;\n  date.setTime(Math.floor((+date - offset) / durationHour) * durationHour + offset);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour);\n}, function(start, end) {\n  return (end - start) / durationHour;\n}, function(date) {\n  return date.getHours();\n});\n\nexport default hour;\nexport var hours = hour.range;\n","import interval from \"./interval\";\nimport {durationDay, durationMinute} from \"./duration\";\n\nvar day = interval(function(date) {\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setDate(date.getDate() + step);\n}, function(start, end) {\n  return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationDay;\n}, function(date) {\n  return date.getDate() - 1;\n});\n\nexport default day;\nexport var days = day.range;\n","import interval from \"./interval\";\nimport {durationMinute, durationWeek} from \"./duration\";\n\nfunction weekday(i) {\n  return interval(function(date) {\n    date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setDate(date.getDate() + step * 7);\n  }, function(start, end) {\n    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationWeek;\n  });\n}\n\nexport var sunday = weekday(0);\nexport var monday = weekday(1);\nexport var tuesday = weekday(2);\nexport var wednesday = weekday(3);\nexport var thursday = weekday(4);\nexport var friday = weekday(5);\nexport var saturday = weekday(6);\n\nexport var sundays = sunday.range;\nexport var mondays = monday.range;\nexport var tuesdays = tuesday.range;\nexport var wednesdays = wednesday.range;\nexport var thursdays = thursday.range;\nexport var fridays = friday.range;\nexport var saturdays = saturday.range;\n","import interval from \"./interval\";\n\nvar month = interval(function(date) {\n  date.setDate(1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setMonth(date.getMonth() + step);\n}, function(start, end) {\n  return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;\n}, function(date) {\n  return date.getMonth();\n});\n\nexport default month;\nexport var months = month.range;\n","import interval from \"./interval\";\n\nvar year = interval(function(date) {\n  date.setMonth(0, 1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setFullYear(date.getFullYear() + step);\n}, function(start, end) {\n  return end.getFullYear() - start.getFullYear();\n}, function(date) {\n  return date.getFullYear();\n});\n\n// An optimized implementation for this simple case.\nyear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : interval(function(date) {\n    date.setFullYear(Math.floor(date.getFullYear() / k) * k);\n    date.setMonth(0, 1);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setFullYear(date.getFullYear() + step * k);\n  });\n};\n\nexport default year;\nexport var years = year.range;\n","import interval from \"./interval\";\nimport {durationMinute} from \"./duration\";\n\nvar utcMinute = interval(function(date) {\n  date.setUTCSeconds(0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute);\n}, function(start, end) {\n  return (end - start) / durationMinute;\n}, function(date) {\n  return date.getUTCMinutes();\n});\n\nexport default utcMinute;\nexport var utcMinutes = utcMinute.range;\n","import interval from \"./interval\";\nimport {durationHour} from \"./duration\";\n\nvar utcHour = interval(function(date) {\n  date.setUTCMinutes(0, 0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour);\n}, function(start, end) {\n  return (end - start) / durationHour;\n}, function(date) {\n  return date.getUTCHours();\n});\n\nexport default utcHour;\nexport var utcHours = utcHour.range;\n","import interval from \"./interval\";\nimport {durationDay} from \"./duration\";\n\nvar utcDay = interval(function(date) {\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCDate(date.getUTCDate() + step);\n}, function(start, end) {\n  return (end - start) / durationDay;\n}, function(date) {\n  return date.getUTCDate() - 1;\n});\n\nexport default utcDay;\nexport var utcDays = utcDay.range;\n","import interval from \"./interval\";\nimport {durationWeek} from \"./duration\";\n\nfunction utcWeekday(i) {\n  return interval(function(date) {\n    date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCDate(date.getUTCDate() + step * 7);\n  }, function(start, end) {\n    return (end - start) / durationWeek;\n  });\n}\n\nexport var utcSunday = utcWeekday(0);\nexport var utcMonday = utcWeekday(1);\nexport var utcTuesday = utcWeekday(2);\nexport var utcWednesday = utcWeekday(3);\nexport var utcThursday = utcWeekday(4);\nexport var utcFriday = utcWeekday(5);\nexport var utcSaturday = utcWeekday(6);\n\nexport var utcSundays = utcSunday.range;\nexport var utcMondays = utcMonday.range;\nexport var utcTuesdays = utcTuesday.range;\nexport var utcWednesdays = utcWednesday.range;\nexport var utcThursdays = utcThursday.range;\nexport var utcFridays = utcFriday.range;\nexport var utcSaturdays = utcSaturday.range;\n","import interval from \"./interval\";\n\nvar utcMonth = interval(function(date) {\n  date.setUTCDate(1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCMonth(date.getUTCMonth() + step);\n}, function(start, end) {\n  return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;\n}, function(date) {\n  return date.getUTCMonth();\n});\n\nexport default utcMonth;\nexport var utcMonths = utcMonth.range;\n","import interval from \"./interval\";\n\nvar utcYear = interval(function(date) {\n  date.setUTCMonth(0, 1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCFullYear(date.getUTCFullYear() + step);\n}, function(start, end) {\n  return end.getUTCFullYear() - start.getUTCFullYear();\n}, function(date) {\n  return date.getUTCFullYear();\n});\n\n// An optimized implementation for this simple case.\nutcYear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : interval(function(date) {\n    date.setUTCFullYear(Math.floor(date.getUTCFullYear() / k) * k);\n    date.setUTCMonth(0, 1);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCFullYear(date.getUTCFullYear() + step * k);\n  });\n};\n\nexport default utcYear;\nexport var utcYears = utcYear.range;\n","import {\n  timeDay,\n  timeSunday,\n  timeMonday,\n  timeThursday,\n  timeYear,\n  utcDay,\n  utcSunday,\n  utcMonday,\n  utcThursday,\n  utcYear\n} from \"d3-time\";\n\nfunction localDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(-1, d.m, d.d, d.H, d.M, d.S, d.L);\n    date.setFullYear(d.y);\n    return date;\n  }\n  return new Date(d.y, d.m, d.d, d.H, d.M, d.S, d.L);\n}\n\nfunction utcDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(Date.UTC(-1, d.m, d.d, d.H, d.M, d.S, d.L));\n    date.setUTCFullYear(d.y);\n    return date;\n  }\n  return new Date(Date.UTC(d.y, d.m, d.d, d.H, d.M, d.S, d.L));\n}\n\nfunction newYear(y) {\n  return {y: y, m: 0, d: 1, H: 0, M: 0, S: 0, L: 0};\n}\n\nexport default function formatLocale(locale) {\n  var locale_dateTime = locale.dateTime,\n      locale_date = locale.date,\n      locale_time = locale.time,\n      locale_periods = locale.periods,\n      locale_weekdays = locale.days,\n      locale_shortWeekdays = locale.shortDays,\n      locale_months = locale.months,\n      locale_shortMonths = locale.shortMonths;\n\n  var periodRe = formatRe(locale_periods),\n      periodLookup = formatLookup(locale_periods),\n      weekdayRe = formatRe(locale_weekdays),\n      weekdayLookup = formatLookup(locale_weekdays),\n      shortWeekdayRe = formatRe(locale_shortWeekdays),\n      shortWeekdayLookup = formatLookup(locale_shortWeekdays),\n      monthRe = formatRe(locale_months),\n      monthLookup = formatLookup(locale_months),\n      shortMonthRe = formatRe(locale_shortMonths),\n      shortMonthLookup = formatLookup(locale_shortMonths);\n\n  var formats = {\n    \"a\": formatShortWeekday,\n    \"A\": formatWeekday,\n    \"b\": formatShortMonth,\n    \"B\": formatMonth,\n    \"c\": null,\n    \"d\": formatDayOfMonth,\n    \"e\": formatDayOfMonth,\n    \"f\": formatMicroseconds,\n    \"H\": formatHour24,\n    \"I\": formatHour12,\n    \"j\": formatDayOfYear,\n    \"L\": formatMilliseconds,\n    \"m\": formatMonthNumber,\n    \"M\": formatMinutes,\n    \"p\": formatPeriod,\n    \"Q\": formatUnixTimestamp,\n    \"s\": formatUnixTimestampSeconds,\n    \"S\": formatSeconds,\n    \"u\": formatWeekdayNumberMonday,\n    \"U\": formatWeekNumberSunday,\n    \"V\": formatWeekNumberISO,\n    \"w\": formatWeekdayNumberSunday,\n    \"W\": formatWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatYear,\n    \"Y\": formatFullYear,\n    \"Z\": formatZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var utcFormats = {\n    \"a\": formatUTCShortWeekday,\n    \"A\": formatUTCWeekday,\n    \"b\": formatUTCShortMonth,\n    \"B\": formatUTCMonth,\n    \"c\": null,\n    \"d\": formatUTCDayOfMonth,\n    \"e\": formatUTCDayOfMonth,\n    \"f\": formatUTCMicroseconds,\n    \"H\": formatUTCHour24,\n    \"I\": formatUTCHour12,\n    \"j\": formatUTCDayOfYear,\n    \"L\": formatUTCMilliseconds,\n    \"m\": formatUTCMonthNumber,\n    \"M\": formatUTCMinutes,\n    \"p\": formatUTCPeriod,\n    \"Q\": formatUnixTimestamp,\n    \"s\": formatUnixTimestampSeconds,\n    \"S\": formatUTCSeconds,\n    \"u\": formatUTCWeekdayNumberMonday,\n    \"U\": formatUTCWeekNumberSunday,\n    \"V\": formatUTCWeekNumberISO,\n    \"w\": formatUTCWeekdayNumberSunday,\n    \"W\": formatUTCWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatUTCYear,\n    \"Y\": formatUTCFullYear,\n    \"Z\": formatUTCZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var parses = {\n    \"a\": parseShortWeekday,\n    \"A\": parseWeekday,\n    \"b\": parseShortMonth,\n    \"B\": parseMonth,\n    \"c\": parseLocaleDateTime,\n    \"d\": parseDayOfMonth,\n    \"e\": parseDayOfMonth,\n    \"f\": parseMicroseconds,\n    \"H\": parseHour24,\n    \"I\": parseHour24,\n    \"j\": parseDayOfYear,\n    \"L\": parseMilliseconds,\n    \"m\": parseMonthNumber,\n    \"M\": parseMinutes,\n    \"p\": parsePeriod,\n    \"Q\": parseUnixTimestamp,\n    \"s\": parseUnixTimestampSeconds,\n    \"S\": parseSeconds,\n    \"u\": parseWeekdayNumberMonday,\n    \"U\": parseWeekNumberSunday,\n    \"V\": parseWeekNumberISO,\n    \"w\": parseWeekdayNumberSunday,\n    \"W\": parseWeekNumberMonday,\n    \"x\": parseLocaleDate,\n    \"X\": parseLocaleTime,\n    \"y\": parseYear,\n    \"Y\": parseFullYear,\n    \"Z\": parseZone,\n    \"%\": parseLiteralPercent\n  };\n\n  // These recursive directive definitions must be deferred.\n  formats.x = newFormat(locale_date, formats);\n  formats.X = newFormat(locale_time, formats);\n  formats.c = newFormat(locale_dateTime, formats);\n  utcFormats.x = newFormat(locale_date, utcFormats);\n  utcFormats.X = newFormat(locale_time, utcFormats);\n  utcFormats.c = newFormat(locale_dateTime, utcFormats);\n\n  function newFormat(specifier, formats) {\n    return function(date) {\n      var string = [],\n          i = -1,\n          j = 0,\n          n = specifier.length,\n          c,\n          pad,\n          format;\n\n      if (!(date instanceof Date)) date = new Date(+date);\n\n      while (++i < n) {\n        if (specifier.charCodeAt(i) === 37) {\n          string.push(specifier.slice(j, i));\n          if ((pad = pads[c = specifier.charAt(++i)]) != null) c = specifier.charAt(++i);\n          else pad = c === \"e\" ? \" \" : \"0\";\n          if (format = formats[c]) c = format(date, pad);\n          string.push(c);\n          j = i + 1;\n        }\n      }\n\n      string.push(specifier.slice(j, i));\n      return string.join(\"\");\n    };\n  }\n\n  function newParse(specifier, newDate) {\n    return function(string) {\n      var d = newYear(1900),\n          i = parseSpecifier(d, specifier, string += \"\", 0),\n          week, day;\n      if (i != string.length) return null;\n\n      // If a UNIX timestamp is specified, return it.\n      if (\"Q\" in d) return new Date(d.Q);\n\n      // The am-pm flag is 0 for AM, and 1 for PM.\n      if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n\n      // Convert day-of-week and week-of-year to day-of-year.\n      if (\"V\" in d) {\n        if (d.V < 1 || d.V > 53) return null;\n        if (!(\"w\" in d)) d.w = 1;\n        if (\"Z\" in d) {\n          week = utcDate(newYear(d.y)), day = week.getUTCDay();\n          week = day > 4 || day === 0 ? utcMonday.ceil(week) : utcMonday(week);\n          week = utcDay.offset(week, (d.V - 1) * 7);\n          d.y = week.getUTCFullYear();\n          d.m = week.getUTCMonth();\n          d.d = week.getUTCDate() + (d.w + 6) % 7;\n        } else {\n          week = newDate(newYear(d.y)), day = week.getDay();\n          week = day > 4 || day === 0 ? timeMonday.ceil(week) : timeMonday(week);\n          week = timeDay.offset(week, (d.V - 1) * 7);\n          d.y = week.getFullYear();\n          d.m = week.getMonth();\n          d.d = week.getDate() + (d.w + 6) % 7;\n        }\n      } else if (\"W\" in d || \"U\" in d) {\n        if (!(\"w\" in d)) d.w = \"u\" in d ? d.u % 7 : \"W\" in d ? 1 : 0;\n        day = \"Z\" in d ? utcDate(newYear(d.y)).getUTCDay() : newDate(newYear(d.y)).getDay();\n        d.m = 0;\n        d.d = \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (day + 5) % 7 : d.w + d.U * 7 - (day + 6) % 7;\n      }\n\n      // If a time zone is specified, all fields are interpreted as UTC and then\n      // offset according to the specified time zone.\n      if (\"Z\" in d) {\n        d.H += d.Z / 100 | 0;\n        d.M += d.Z % 100;\n        return utcDate(d);\n      }\n\n      // Otherwise, all fields are in local time.\n      return newDate(d);\n    };\n  }\n\n  function parseSpecifier(d, specifier, string, j) {\n    var i = 0,\n        n = specifier.length,\n        m = string.length,\n        c,\n        parse;\n\n    while (i < n) {\n      if (j >= m) return -1;\n      c = specifier.charCodeAt(i++);\n      if (c === 37) {\n        c = specifier.charAt(i++);\n        parse = parses[c in pads ? specifier.charAt(i++) : c];\n        if (!parse || ((j = parse(d, string, j)) < 0)) return -1;\n      } else if (c != string.charCodeAt(j++)) {\n        return -1;\n      }\n    }\n\n    return j;\n  }\n\n  function parsePeriod(d, string, i) {\n    var n = periodRe.exec(string.slice(i));\n    return n ? (d.p = periodLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortWeekday(d, string, i) {\n    var n = shortWeekdayRe.exec(string.slice(i));\n    return n ? (d.w = shortWeekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseWeekday(d, string, i) {\n    var n = weekdayRe.exec(string.slice(i));\n    return n ? (d.w = weekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortMonth(d, string, i) {\n    var n = shortMonthRe.exec(string.slice(i));\n    return n ? (d.m = shortMonthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseMonth(d, string, i) {\n    var n = monthRe.exec(string.slice(i));\n    return n ? (d.m = monthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseLocaleDateTime(d, string, i) {\n    return parseSpecifier(d, locale_dateTime, string, i);\n  }\n\n  function parseLocaleDate(d, string, i) {\n    return parseSpecifier(d, locale_date, string, i);\n  }\n\n  function parseLocaleTime(d, string, i) {\n    return parseSpecifier(d, locale_time, string, i);\n  }\n\n  function formatShortWeekday(d) {\n    return locale_shortWeekdays[d.getDay()];\n  }\n\n  function formatWeekday(d) {\n    return locale_weekdays[d.getDay()];\n  }\n\n  function formatShortMonth(d) {\n    return locale_shortMonths[d.getMonth()];\n  }\n\n  function formatMonth(d) {\n    return locale_months[d.getMonth()];\n  }\n\n  function formatPeriod(d) {\n    return locale_periods[+(d.getHours() >= 12)];\n  }\n\n  function formatUTCShortWeekday(d) {\n    return locale_shortWeekdays[d.getUTCDay()];\n  }\n\n  function formatUTCWeekday(d) {\n    return locale_weekdays[d.getUTCDay()];\n  }\n\n  function formatUTCShortMonth(d) {\n    return locale_shortMonths[d.getUTCMonth()];\n  }\n\n  function formatUTCMonth(d) {\n    return locale_months[d.getUTCMonth()];\n  }\n\n  function formatUTCPeriod(d) {\n    return locale_periods[+(d.getUTCHours() >= 12)];\n  }\n\n  return {\n    format: function(specifier) {\n      var f = newFormat(specifier += \"\", formats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    parse: function(specifier) {\n      var p = newParse(specifier += \"\", localDate);\n      p.toString = function() { return specifier; };\n      return p;\n    },\n    utcFormat: function(specifier) {\n      var f = newFormat(specifier += \"\", utcFormats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    utcParse: function(specifier) {\n      var p = newParse(specifier, utcDate);\n      p.toString = function() { return specifier; };\n      return p;\n    }\n  };\n}\n\nvar pads = {\"-\": \"\", \"_\": \" \", \"0\": \"0\"},\n    numberRe = /^\\s*\\d+/, // note: ignores next directive\n    percentRe = /^%/,\n    requoteRe = /[\\\\^$*+?|[\\]().{}]/g;\n\nfunction pad(value, fill, width) {\n  var sign = value < 0 ? \"-\" : \"\",\n      string = (sign ? -value : value) + \"\",\n      length = string.length;\n  return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n}\n\nfunction requote(s) {\n  return s.replace(requoteRe, \"\\\\$&\");\n}\n\nfunction formatRe(names) {\n  return new RegExp(\"^(?:\" + names.map(requote).join(\"|\") + \")\", \"i\");\n}\n\nfunction formatLookup(names) {\n  var map = {}, i = -1, n = names.length;\n  while (++i < n) map[names[i].toLowerCase()] = i;\n  return map;\n}\n\nfunction parseWeekdayNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.w = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekdayNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.u = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.U = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberISO(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.V = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.W = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseFullYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 4));\n  return n ? (d.y = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.y = +n[0] + (+n[0] > 68 ? 1900 : 2000), i + n[0].length) : -1;\n}\n\nfunction parseZone(d, string, i) {\n  var n = /^(Z)|([+-]\\d\\d)(?::?(\\d\\d))?/.exec(string.slice(i, i + 6));\n  return n ? (d.Z = n[1] ? 0 : -(n[2] + (n[3] || \"00\")), i + n[0].length) : -1;\n}\n\nfunction parseMonthNumber(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.m = n[0] - 1, i + n[0].length) : -1;\n}\n\nfunction parseDayOfMonth(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseDayOfYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.m = 0, d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseHour24(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.H = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMinutes(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.M = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.S = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMilliseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.L = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMicroseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 6));\n  return n ? (d.L = Math.floor(n[0] / 1000), i + n[0].length) : -1;\n}\n\nfunction parseLiteralPercent(d, string, i) {\n  var n = percentRe.exec(string.slice(i, i + 1));\n  return n ? i + n[0].length : -1;\n}\n\nfunction parseUnixTimestamp(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.Q = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseUnixTimestampSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.Q = (+n[0]) * 1000, i + n[0].length) : -1;\n}\n\nfunction formatDayOfMonth(d, p) {\n  return pad(d.getDate(), p, 2);\n}\n\nfunction formatHour24(d, p) {\n  return pad(d.getHours(), p, 2);\n}\n\nfunction formatHour12(d, p) {\n  return pad(d.getHours() % 12 || 12, p, 2);\n}\n\nfunction formatDayOfYear(d, p) {\n  return pad(1 + timeDay.count(timeYear(d), d), p, 3);\n}\n\nfunction formatMilliseconds(d, p) {\n  return pad(d.getMilliseconds(), p, 3);\n}\n\nfunction formatMicroseconds(d, p) {\n  return formatMilliseconds(d, p) + \"000\";\n}\n\nfunction formatMonthNumber(d, p) {\n  return pad(d.getMonth() + 1, p, 2);\n}\n\nfunction formatMinutes(d, p) {\n  return pad(d.getMinutes(), p, 2);\n}\n\nfunction formatSeconds(d, p) {\n  return pad(d.getSeconds(), p, 2);\n}\n\nfunction formatWeekdayNumberMonday(d) {\n  var day = d.getDay();\n  return day === 0 ? 7 : day;\n}\n\nfunction formatWeekNumberSunday(d, p) {\n  return pad(timeSunday.count(timeYear(d), d), p, 2);\n}\n\nfunction formatWeekNumberISO(d, p) {\n  var day = d.getDay();\n  d = (day >= 4 || day === 0) ? timeThursday(d) : timeThursday.ceil(d);\n  return pad(timeThursday.count(timeYear(d), d) + (timeYear(d).getDay() === 4), p, 2);\n}\n\nfunction formatWeekdayNumberSunday(d) {\n  return d.getDay();\n}\n\nfunction formatWeekNumberMonday(d, p) {\n  return pad(timeMonday.count(timeYear(d), d), p, 2);\n}\n\nfunction formatYear(d, p) {\n  return pad(d.getFullYear() % 100, p, 2);\n}\n\nfunction formatFullYear(d, p) {\n  return pad(d.getFullYear() % 10000, p, 4);\n}\n\nfunction formatZone(d) {\n  var z = d.getTimezoneOffset();\n  return (z > 0 ? \"-\" : (z *= -1, \"+\"))\n      + pad(z / 60 | 0, \"0\", 2)\n      + pad(z % 60, \"0\", 2);\n}\n\nfunction formatUTCDayOfMonth(d, p) {\n  return pad(d.getUTCDate(), p, 2);\n}\n\nfunction formatUTCHour24(d, p) {\n  return pad(d.getUTCHours(), p, 2);\n}\n\nfunction formatUTCHour12(d, p) {\n  return pad(d.getUTCHours() % 12 || 12, p, 2);\n}\n\nfunction formatUTCDayOfYear(d, p) {\n  return pad(1 + utcDay.count(utcYear(d), d), p, 3);\n}\n\nfunction formatUTCMilliseconds(d, p) {\n  return pad(d.getUTCMilliseconds(), p, 3);\n}\n\nfunction formatUTCMicroseconds(d, p) {\n  return formatUTCMilliseconds(d, p) + \"000\";\n}\n\nfunction formatUTCMonthNumber(d, p) {\n  return pad(d.getUTCMonth() + 1, p, 2);\n}\n\nfunction formatUTCMinutes(d, p) {\n  return pad(d.getUTCMinutes(), p, 2);\n}\n\nfunction formatUTCSeconds(d, p) {\n  return pad(d.getUTCSeconds(), p, 2);\n}\n\nfunction formatUTCWeekdayNumberMonday(d) {\n  var dow = d.getUTCDay();\n  return dow === 0 ? 7 : dow;\n}\n\nfunction formatUTCWeekNumberSunday(d, p) {\n  return pad(utcSunday.count(utcYear(d), d), p, 2);\n}\n\nfunction formatUTCWeekNumberISO(d, p) {\n  var day = d.getUTCDay();\n  d = (day >= 4 || day === 0) ? utcThursday(d) : utcThursday.ceil(d);\n  return pad(utcThursday.count(utcYear(d), d) + (utcYear(d).getUTCDay() === 4), p, 2);\n}\n\nfunction formatUTCWeekdayNumberSunday(d) {\n  return d.getUTCDay();\n}\n\nfunction formatUTCWeekNumberMonday(d, p) {\n  return pad(utcMonday.count(utcYear(d), d), p, 2);\n}\n\nfunction formatUTCYear(d, p) {\n  return pad(d.getUTCFullYear() % 100, p, 2);\n}\n\nfunction formatUTCFullYear(d, p) {\n  return pad(d.getUTCFullYear() % 10000, p, 4);\n}\n\nfunction formatUTCZone() {\n  return \"+0000\";\n}\n\nfunction formatLiteralPercent() {\n  return \"%\";\n}\n\nfunction formatUnixTimestamp(d) {\n  return +d;\n}\n\nfunction formatUnixTimestampSeconds(d) {\n  return Math.floor(+d / 1000);\n}\n","import formatLocale from \"./locale\";\n\nvar locale;\nexport var timeFormat;\nexport var timeParse;\nexport var utcFormat;\nexport var utcParse;\n\ndefaultLocale({\n  dateTime: \"%x, %X\",\n  date: \"%-m/%-d/%Y\",\n  time: \"%-I:%M:%S %p\",\n  periods: [\"AM\", \"PM\"],\n  days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n  shortDays: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n  months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n  shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n});\n\nexport default function defaultLocale(definition) {\n  locale = formatLocale(definition);\n  timeFormat = locale.format;\n  timeParse = locale.parse;\n  utcFormat = locale.utcFormat;\n  utcParse = locale.utcParse;\n  return locale;\n}\n","import {utcFormat} from \"./defaultLocale\";\n\nexport var isoSpecifier = \"%Y-%m-%dT%H:%M:%S.%LZ\";\n\nfunction formatIsoNative(date) {\n  return date.toISOString();\n}\n\nvar formatIso = Date.prototype.toISOString\n    ? formatIsoNative\n    : utcFormat(isoSpecifier);\n\nexport default formatIso;\n","import {isoSpecifier} from \"./isoFormat\";\nimport {utcParse} from \"./defaultLocale\";\n\nfunction parseIsoNative(string) {\n  var date = new Date(string);\n  return isNaN(date) ? null : date;\n}\n\nvar parseIso = +new Date(\"2000-01-01T00:00:00.000Z\")\n    ? parseIsoNative\n    : utcParse(isoSpecifier);\n\nexport default parseIso;\n","import {bisector, tickStep} from \"d3-array\";\nimport {interpolateNumber as reinterpolate} from \"d3-interpolate\";\nimport {timeYear, timeMonth, timeWeek, timeDay, timeHour, timeMinute, timeSecond, timeMillisecond} from \"d3-time\";\nimport {timeFormat} from \"d3-time-format\";\nimport {map} from \"./array\";\nimport {default as continuous, copy, deinterpolateLinear as deinterpolate} from \"./continuous\";\nimport nice from \"./nice\";\n\nvar durationSecond = 1000,\n    durationMinute = durationSecond * 60,\n    durationHour = durationMinute * 60,\n    durationDay = durationHour * 24,\n    durationWeek = durationDay * 7,\n    durationMonth = durationDay * 30,\n    durationYear = durationDay * 365;\n\nfunction date(t) {\n  return new Date(t);\n}\n\nfunction number(t) {\n  return t instanceof Date ? +t : +new Date(+t);\n}\n\nexport function calendar(year, month, week, day, hour, minute, second, millisecond, format) {\n  var scale = continuous(deinterpolate, reinterpolate),\n      invert = scale.invert,\n      domain = scale.domain;\n\n  var formatMillisecond = format(\".%L\"),\n      formatSecond = format(\":%S\"),\n      formatMinute = format(\"%I:%M\"),\n      formatHour = format(\"%I %p\"),\n      formatDay = format(\"%a %d\"),\n      formatWeek = format(\"%b %d\"),\n      formatMonth = format(\"%B\"),\n      formatYear = format(\"%Y\");\n\n  var tickIntervals = [\n    [second,  1,      durationSecond],\n    [second,  5,  5 * durationSecond],\n    [second, 15, 15 * durationSecond],\n    [second, 30, 30 * durationSecond],\n    [minute,  1,      durationMinute],\n    [minute,  5,  5 * durationMinute],\n    [minute, 15, 15 * durationMinute],\n    [minute, 30, 30 * durationMinute],\n    [  hour,  1,      durationHour  ],\n    [  hour,  3,  3 * durationHour  ],\n    [  hour,  6,  6 * durationHour  ],\n    [  hour, 12, 12 * durationHour  ],\n    [   day,  1,      durationDay   ],\n    [   day,  2,  2 * durationDay   ],\n    [  week,  1,      durationWeek  ],\n    [ month,  1,      durationMonth ],\n    [ month,  3,  3 * durationMonth ],\n    [  year,  1,      durationYear  ]\n  ];\n\n  function tickFormat(date) {\n    return (second(date) < date ? formatMillisecond\n        : minute(date) < date ? formatSecond\n        : hour(date) < date ? formatMinute\n        : day(date) < date ? formatHour\n        : month(date) < date ? (week(date) < date ? formatDay : formatWeek)\n        : year(date) < date ? formatMonth\n        : formatYear)(date);\n  }\n\n  function tickInterval(interval, start, stop, step) {\n    if (interval == null) interval = 10;\n\n    // If a desired tick count is specified, pick a reasonable tick interval\n    // based on the extent of the domain and a rough estimate of tick size.\n    // Otherwise, assume interval is already a time interval and use it.\n    if (typeof interval === \"number\") {\n      var target = Math.abs(stop - start) / interval,\n          i = bisector(function(i) { return i[2]; }).right(tickIntervals, target);\n      if (i === tickIntervals.length) {\n        step = tickStep(start / durationYear, stop / durationYear, interval);\n        interval = year;\n      } else if (i) {\n        i = tickIntervals[target / tickIntervals[i - 1][2] < tickIntervals[i][2] / target ? i - 1 : i];\n        step = i[1];\n        interval = i[0];\n      } else {\n        step = Math.max(tickStep(start, stop, interval), 1);\n        interval = millisecond;\n      }\n    }\n\n    return step == null ? interval : interval.every(step);\n  }\n\n  scale.invert = function(y) {\n    return new Date(invert(y));\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? domain(map.call(_, number)) : domain().map(date);\n  };\n\n  scale.ticks = function(interval, step) {\n    var d = domain(),\n        t0 = d[0],\n        t1 = d[d.length - 1],\n        r = t1 < t0,\n        t;\n    if (r) t = t0, t0 = t1, t1 = t;\n    t = tickInterval(interval, t0, t1, step);\n    t = t ? t.range(t0, t1 + 1) : []; // inclusive stop\n    return r ? t.reverse() : t;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return specifier == null ? tickFormat : format(specifier);\n  };\n\n  scale.nice = function(interval, step) {\n    var d = domain();\n    return (interval = tickInterval(interval, d[0], d[d.length - 1], step))\n        ? domain(nice(d, interval))\n        : scale;\n  };\n\n  scale.copy = function() {\n    return copy(scale, calendar(year, month, week, day, hour, minute, second, millisecond, format));\n  };\n\n  return scale;\n}\n\nexport default function() {\n  return calendar(timeYear, timeMonth, timeWeek, timeDay, timeHour, timeMinute, timeSecond, timeMillisecond, timeFormat).domain([new Date(2000, 0, 1), new Date(2000, 0, 2)]);\n}\n","import {calendar} from \"./time\";\nimport {utcFormat} from \"d3-time-format\";\nimport {utcYear, utcMonth, utcWeek, utcDay, utcHour, utcMinute, utcSecond, utcMillisecond} from \"d3-time\";\n\nexport default function() {\n  return calendar(utcYear, utcMonth, utcWeek, utcDay, utcHour, utcMinute, utcSecond, utcMillisecond, utcFormat).domain([Date.UTC(2000, 0, 1), Date.UTC(2000, 0, 2)]);\n}\n","import {linearish} from \"./linear\";\n\nexport default function sequential(interpolator) {\n  var x0 = 0,\n      x1 = 1,\n      k10 = 1,\n      clamp = false;\n\n  function scale(x) {\n    var t = (x - x0) * k10;\n    return interpolator(clamp ? Math.max(0, Math.min(1, t)) : t);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], k10 = x0 === x1 ? 0 : 1 / (x1 - x0), scale) : [x0, x1];\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, scale) : clamp;\n  };\n\n  scale.interpolator = function(_) {\n    return arguments.length ? (interpolator = _, scale) : interpolator;\n  };\n\n  scale.copy = function() {\n    return sequential(interpolator).domain([x0, x1]).clamp(clamp);\n  };\n\n  return linearish(scale);\n}\n","import {linearish} from \"./linear\";\n\nexport default function diverging(interpolator) {\n  var x0 = 0,\n      x1 = 0.5,\n      x2 = 1,\n      k10 = 1,\n      k21 = 1,\n      clamp = false;\n\n  function scale(x) {\n    var t = 0.5 + ((x = +x) - x1) * (x < x1 ? k10 : k21);\n    return interpolator(clamp ? Math.max(0, Math.min(1, t)) : t);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], x2 = +_[2], k10 = x0 === x1 ? 0 : 0.5 / (x1 - x0), k21 = x1 === x2 ? 0 : 0.5 / (x2 - x1), scale) : [x0, x1, x2];\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, scale) : clamp;\n  };\n\n  scale.interpolator = function(_) {\n    return arguments.length ? (interpolator = _, scale) : interpolator;\n  };\n\n  scale.copy = function() {\n    return diverging(interpolator).domain([x0, x1, x2]).clamp(clamp);\n  };\n\n  return linearish(scale);\n}\n","export default function(specifier) {\n  var n = specifier.length / 6 | 0, colors = new Array(n), i = 0;\n  while (i < n) colors[i] = \"#\" + specifier.slice(i * 6, ++i * 6);\n  return colors;\n}\n","import colors from \"../colors\";\n\nexport default colors(\"1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf\");\n","import colors from \"../colors\";\n\nexport default colors(\"7fc97fbeaed4fdc086ffff99386cb0f0027fbf5b17666666\");\n","import colors from \"../colors\";\n\nexport default colors(\"1b9e77d95f027570b3e7298a66a61ee6ab02a6761d666666\");\n","import colors from \"../colors\";\n\nexport default colors(\"a6cee31f78b4b2df8a33a02cfb9a99e31a1cfdbf6fff7f00cab2d66a3d9affff99b15928\");\n","import colors from \"../colors\";\n\nexport default colors(\"fbb4aeb3cde3ccebc5decbe4fed9a6ffffcce5d8bdfddaecf2f2f2\");\n","import colors from \"../colors\";\n\nexport default colors(\"b3e2cdfdcdaccbd5e8f4cae4e6f5c9fff2aef1e2cccccccc\");\n","import colors from \"../colors\";\n\nexport default colors(\"e41a1c377eb84daf4a984ea3ff7f00ffff33a65628f781bf999999\");\n","import colors from \"../colors\";\n\nexport default colors(\"66c2a5fc8d628da0cbe78ac3a6d854ffd92fe5c494b3b3b3\");\n","import colors from \"../colors\";\n\nexport default colors(\"8dd3c7ffffb3bebadafb807280b1d3fdb462b3de69fccde5d9d9d9bc80bdccebc5ffed6f\");\n","import {interpolateRgbBasis} from \"d3-interpolate\";\n\nexport default function(scheme) {\n  return interpolateRgbBasis(scheme[scheme.length - 1]);\n}\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"d8b365f5f5f55ab4ac\",\n  \"a6611adfc27d80cdc1018571\",\n  \"a6611adfc27df5f5f580cdc1018571\",\n  \"8c510ad8b365f6e8c3c7eae55ab4ac01665e\",\n  \"8c510ad8b365f6e8c3f5f5f5c7eae55ab4ac01665e\",\n  \"8c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e\",\n  \"8c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e\",\n  \"5430058c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e003c30\",\n  \"5430058c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e003c30\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"af8dc3f7f7f77fbf7b\",\n  \"7b3294c2a5cfa6dba0008837\",\n  \"7b3294c2a5cff7f7f7a6dba0008837\",\n  \"762a83af8dc3e7d4e8d9f0d37fbf7b1b7837\",\n  \"762a83af8dc3e7d4e8f7f7f7d9f0d37fbf7b1b7837\",\n  \"762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b7837\",\n  \"762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b7837\",\n  \"40004b762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b783700441b\",\n  \"40004b762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b783700441b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e9a3c9f7f7f7a1d76a\",\n  \"d01c8bf1b6dab8e1864dac26\",\n  \"d01c8bf1b6daf7f7f7b8e1864dac26\",\n  \"c51b7de9a3c9fde0efe6f5d0a1d76a4d9221\",\n  \"c51b7de9a3c9fde0eff7f7f7e6f5d0a1d76a4d9221\",\n  \"c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221\",\n  \"c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221\",\n  \"8e0152c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221276419\",\n  \"8e0152c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221276419\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"998ec3f7f7f7f1a340\",\n  \"5e3c99b2abd2fdb863e66101\",\n  \"5e3c99b2abd2f7f7f7fdb863e66101\",\n  \"542788998ec3d8daebfee0b6f1a340b35806\",\n  \"542788998ec3d8daebf7f7f7fee0b6f1a340b35806\",\n  \"5427888073acb2abd2d8daebfee0b6fdb863e08214b35806\",\n  \"5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b35806\",\n  \"2d004b5427888073acb2abd2d8daebfee0b6fdb863e08214b358067f3b08\",\n  \"2d004b5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b358067f3b08\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ef8a62f7f7f767a9cf\",\n  \"ca0020f4a58292c5de0571b0\",\n  \"ca0020f4a582f7f7f792c5de0571b0\",\n  \"b2182bef8a62fddbc7d1e5f067a9cf2166ac\",\n  \"b2182bef8a62fddbc7f7f7f7d1e5f067a9cf2166ac\",\n  \"b2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac\",\n  \"b2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac\",\n  \"67001fb2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac053061\",\n  \"67001fb2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac053061\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ef8a62ffffff999999\",\n  \"ca0020f4a582bababa404040\",\n  \"ca0020f4a582ffffffbababa404040\",\n  \"b2182bef8a62fddbc7e0e0e09999994d4d4d\",\n  \"b2182bef8a62fddbc7ffffffe0e0e09999994d4d4d\",\n  \"b2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d\",\n  \"b2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d\",\n  \"67001fb2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d1a1a1a\",\n  \"67001fb2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d1a1a1a\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fc8d59ffffbf91bfdb\",\n  \"d7191cfdae61abd9e92c7bb6\",\n  \"d7191cfdae61ffffbfabd9e92c7bb6\",\n  \"d73027fc8d59fee090e0f3f891bfdb4575b4\",\n  \"d73027fc8d59fee090ffffbfe0f3f891bfdb4575b4\",\n  \"d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4\",\n  \"d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4\",\n  \"a50026d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4313695\",\n  \"a50026d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4313695\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fc8d59ffffbf91cf60\",\n  \"d7191cfdae61a6d96a1a9641\",\n  \"d7191cfdae61ffffbfa6d96a1a9641\",\n  \"d73027fc8d59fee08bd9ef8b91cf601a9850\",\n  \"d73027fc8d59fee08bffffbfd9ef8b91cf601a9850\",\n  \"d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850\",\n  \"d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850\",\n  \"a50026d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850006837\",\n  \"a50026d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850006837\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fc8d59ffffbf99d594\",\n  \"d7191cfdae61abdda42b83ba\",\n  \"d7191cfdae61ffffbfabdda42b83ba\",\n  \"d53e4ffc8d59fee08be6f59899d5943288bd\",\n  \"d53e4ffc8d59fee08bffffbfe6f59899d5943288bd\",\n  \"d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd\",\n  \"d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd\",\n  \"9e0142d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd5e4fa2\",\n  \"9e0142d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd5e4fa2\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e5f5f999d8c92ca25f\",\n  \"edf8fbb2e2e266c2a4238b45\",\n  \"edf8fbb2e2e266c2a42ca25f006d2c\",\n  \"edf8fbccece699d8c966c2a42ca25f006d2c\",\n  \"edf8fbccece699d8c966c2a441ae76238b45005824\",\n  \"f7fcfde5f5f9ccece699d8c966c2a441ae76238b45005824\",\n  \"f7fcfde5f5f9ccece699d8c966c2a441ae76238b45006d2c00441b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e0ecf49ebcda8856a7\",\n  \"edf8fbb3cde38c96c688419d\",\n  \"edf8fbb3cde38c96c68856a7810f7c\",\n  \"edf8fbbfd3e69ebcda8c96c68856a7810f7c\",\n  \"edf8fbbfd3e69ebcda8c96c68c6bb188419d6e016b\",\n  \"f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d6e016b\",\n  \"f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d810f7c4d004b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e0f3dba8ddb543a2ca\",\n  \"f0f9e8bae4bc7bccc42b8cbe\",\n  \"f0f9e8bae4bc7bccc443a2ca0868ac\",\n  \"f0f9e8ccebc5a8ddb57bccc443a2ca0868ac\",\n  \"f0f9e8ccebc5a8ddb57bccc44eb3d32b8cbe08589e\",\n  \"f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe08589e\",\n  \"f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe0868ac084081\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fee8c8fdbb84e34a33\",\n  \"fef0d9fdcc8afc8d59d7301f\",\n  \"fef0d9fdcc8afc8d59e34a33b30000\",\n  \"fef0d9fdd49efdbb84fc8d59e34a33b30000\",\n  \"fef0d9fdd49efdbb84fc8d59ef6548d7301f990000\",\n  \"fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301f990000\",\n  \"fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301fb300007f0000\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ece2f0a6bddb1c9099\",\n  \"f6eff7bdc9e167a9cf02818a\",\n  \"f6eff7bdc9e167a9cf1c9099016c59\",\n  \"f6eff7d0d1e6a6bddb67a9cf1c9099016c59\",\n  \"f6eff7d0d1e6a6bddb67a9cf3690c002818a016450\",\n  \"fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016450\",\n  \"fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016c59014636\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ece7f2a6bddb2b8cbe\",\n  \"f1eef6bdc9e174a9cf0570b0\",\n  \"f1eef6bdc9e174a9cf2b8cbe045a8d\",\n  \"f1eef6d0d1e6a6bddb74a9cf2b8cbe045a8d\",\n  \"f1eef6d0d1e6a6bddb74a9cf3690c00570b0034e7b\",\n  \"fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0034e7b\",\n  \"fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0045a8d023858\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e7e1efc994c7dd1c77\",\n  \"f1eef6d7b5d8df65b0ce1256\",\n  \"f1eef6d7b5d8df65b0dd1c77980043\",\n  \"f1eef6d4b9dac994c7df65b0dd1c77980043\",\n  \"f1eef6d4b9dac994c7df65b0e7298ace125691003f\",\n  \"f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125691003f\",\n  \"f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125698004367001f\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fde0ddfa9fb5c51b8a\",\n  \"feebe2fbb4b9f768a1ae017e\",\n  \"feebe2fbb4b9f768a1c51b8a7a0177\",\n  \"feebe2fcc5c0fa9fb5f768a1c51b8a7a0177\",\n  \"feebe2fcc5c0fa9fb5f768a1dd3497ae017e7a0177\",\n  \"fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a0177\",\n  \"fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a017749006a\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"edf8b17fcdbb2c7fb8\",\n  \"ffffcca1dab441b6c4225ea8\",\n  \"ffffcca1dab441b6c42c7fb8253494\",\n  \"ffffccc7e9b47fcdbb41b6c42c7fb8253494\",\n  \"ffffccc7e9b47fcdbb41b6c41d91c0225ea80c2c84\",\n  \"ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea80c2c84\",\n  \"ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea8253494081d58\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"f7fcb9addd8e31a354\",\n  \"ffffccc2e69978c679238443\",\n  \"ffffccc2e69978c67931a354006837\",\n  \"ffffccd9f0a3addd8e78c67931a354006837\",\n  \"ffffccd9f0a3addd8e78c67941ab5d238443005a32\",\n  \"ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443005a32\",\n  \"ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443006837004529\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fff7bcfec44fd95f0e\",\n  \"ffffd4fed98efe9929cc4c02\",\n  \"ffffd4fed98efe9929d95f0e993404\",\n  \"ffffd4fee391fec44ffe9929d95f0e993404\",\n  \"ffffd4fee391fec44ffe9929ec7014cc4c028c2d04\",\n  \"ffffe5fff7bcfee391fec44ffe9929ec7014cc4c028c2d04\",\n  \"ffffe5fff7bcfee391fec44ffe9929ec7014cc4c02993404662506\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ffeda0feb24cf03b20\",\n  \"ffffb2fecc5cfd8d3ce31a1c\",\n  \"ffffb2fecc5cfd8d3cf03b20bd0026\",\n  \"ffffb2fed976feb24cfd8d3cf03b20bd0026\",\n  \"ffffb2fed976feb24cfd8d3cfc4e2ae31a1cb10026\",\n  \"ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cb10026\",\n  \"ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cbd0026800026\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"deebf79ecae13182bd\",\n  \"eff3ffbdd7e76baed62171b5\",\n  \"eff3ffbdd7e76baed63182bd08519c\",\n  \"eff3ffc6dbef9ecae16baed63182bd08519c\",\n  \"eff3ffc6dbef9ecae16baed64292c62171b5084594\",\n  \"f7fbffdeebf7c6dbef9ecae16baed64292c62171b5084594\",\n  \"f7fbffdeebf7c6dbef9ecae16baed64292c62171b508519c08306b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e5f5e0a1d99b31a354\",\n  \"edf8e9bae4b374c476238b45\",\n  \"edf8e9bae4b374c47631a354006d2c\",\n  \"edf8e9c7e9c0a1d99b74c47631a354006d2c\",\n  \"edf8e9c7e9c0a1d99b74c47641ab5d238b45005a32\",\n  \"f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45005a32\",\n  \"f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45006d2c00441b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"f0f0f0bdbdbd636363\",\n  \"f7f7f7cccccc969696525252\",\n  \"f7f7f7cccccc969696636363252525\",\n  \"f7f7f7d9d9d9bdbdbd969696636363252525\",\n  \"f7f7f7d9d9d9bdbdbd969696737373525252252525\",\n  \"fffffff0f0f0d9d9d9bdbdbd969696737373525252252525\",\n  \"fffffff0f0f0d9d9d9bdbdbd969696737373525252252525000000\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"efedf5bcbddc756bb1\",\n  \"f2f0f7cbc9e29e9ac86a51a3\",\n  \"f2f0f7cbc9e29e9ac8756bb154278f\",\n  \"f2f0f7dadaebbcbddc9e9ac8756bb154278f\",\n  \"f2f0f7dadaebbcbddc9e9ac8807dba6a51a34a1486\",\n  \"fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a34a1486\",\n  \"fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a354278f3f007d\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fee0d2fc9272de2d26\",\n  \"fee5d9fcae91fb6a4acb181d\",\n  \"fee5d9fcae91fb6a4ade2d26a50f15\",\n  \"fee5d9fcbba1fc9272fb6a4ade2d26a50f15\",\n  \"fee5d9fcbba1fc9272fb6a4aef3b2ccb181d99000d\",\n  \"fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181d99000d\",\n  \"fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181da50f1567000d\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fee6cefdae6be6550d\",\n  \"feeddefdbe85fd8d3cd94701\",\n  \"feeddefdbe85fd8d3ce6550da63603\",\n  \"feeddefdd0a2fdae6bfd8d3ce6550da63603\",\n  \"feeddefdd0a2fdae6bfd8d3cf16913d948018c2d04\",\n  \"fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d948018c2d04\",\n  \"fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d94801a636037f2704\"\n).map(colors);\n\nexport default ramp(scheme);\n","import {cubehelix} from \"d3-color\";\nimport {interpolateCubehelixLong} from \"d3-interpolate\";\n\nexport default interpolateCubehelixLong(cubehelix(300, 0.5, 0.0), cubehelix(-240, 0.5, 1.0));\n","import {cubehelix} from \"d3-color\";\nimport {interpolateCubehelixLong} from \"d3-interpolate\";\n\nexport var warm = interpolateCubehelixLong(cubehelix(-100, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nexport var cool = interpolateCubehelixLong(cubehelix(260, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nvar c = cubehelix();\n\nexport default function(t) {\n  if (t < 0 || t > 1) t -= Math.floor(t);\n  var ts = Math.abs(t - 0.5);\n  c.h = 360 * t - 100;\n  c.s = 1.5 - 1.5 * ts;\n  c.l = 0.8 - 0.9 * ts;\n  return c + \"\";\n}\n","import {rgb} from \"d3-color\";\n\nvar c = rgb(),\n    pi_1_3 = Math.PI / 3,\n    pi_2_3 = Math.PI * 2 / 3;\n\nexport default function(t) {\n  var x;\n  t = (0.5 - t) * Math.PI;\n  c.r = 255 * (x = Math.sin(t)) * x;\n  c.g = 255 * (x = Math.sin(t + pi_1_3)) * x;\n  c.b = 255 * (x = Math.sin(t + pi_2_3)) * x;\n  return c + \"\";\n}\n","import colors from \"../colors\";\n\nfunction ramp(range) {\n  var n = range.length;\n  return function(t) {\n    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n  };\n}\n\nexport default ramp(colors(\"44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725\"));\n\nexport var magma = ramp(colors(\"00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf\"));\n\nexport var inferno = ramp(colors(\"00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4\"));\n\nexport var plasma = ramp(colors(\"0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921\"));\n","export default function(x) {\n  return function constant() {\n    return x;\n  };\n}\n","export var abs = Math.abs;\nexport var atan2 = Math.atan2;\nexport var cos = Math.cos;\nexport var max = Math.max;\nexport var min = Math.min;\nexport var sin = Math.sin;\nexport var sqrt = Math.sqrt;\n\nexport var epsilon = 1e-12;\nexport var pi = Math.PI;\nexport var halfPi = pi / 2;\nexport var tau = 2 * pi;\n\nexport function acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);\n}\n\nexport function asin(x) {\n  return x >= 1 ? halfPi : x <= -1 ? -halfPi : Math.asin(x);\n}\n","import {path} from \"d3-path\";\nimport constant from \"./constant\";\nimport {abs, acos, asin, atan2, cos, epsilon, halfPi, max, min, pi, sin, sqrt, tau} from \"./math\";\n\nfunction arcInnerRadius(d) {\n  return d.innerRadius;\n}\n\nfunction arcOuterRadius(d) {\n  return d.outerRadius;\n}\n\nfunction arcStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction arcEndAngle(d) {\n  return d.endAngle;\n}\n\nfunction arcPadAngle(d) {\n  return d && d.padAngle; // Note: optional!\n}\n\nfunction intersect(x0, y0, x1, y1, x2, y2, x3, y3) {\n  var x10 = x1 - x0, y10 = y1 - y0,\n      x32 = x3 - x2, y32 = y3 - y2,\n      t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / (y32 * x10 - x32 * y10);\n  return [x0 + t * x10, y0 + t * y10];\n}\n\n// Compute perpendicular offset line of length rc.\n// http://mathworld.wolfram.com/Circle-LineIntersection.html\nfunction cornerTangents(x0, y0, x1, y1, r1, rc, cw) {\n  var x01 = x0 - x1,\n      y01 = y0 - y1,\n      lo = (cw ? rc : -rc) / sqrt(x01 * x01 + y01 * y01),\n      ox = lo * y01,\n      oy = -lo * x01,\n      x11 = x0 + ox,\n      y11 = y0 + oy,\n      x10 = x1 + ox,\n      y10 = y1 + oy,\n      x00 = (x11 + x10) / 2,\n      y00 = (y11 + y10) / 2,\n      dx = x10 - x11,\n      dy = y10 - y11,\n      d2 = dx * dx + dy * dy,\n      r = r1 - rc,\n      D = x11 * y10 - x10 * y11,\n      d = (dy < 0 ? -1 : 1) * sqrt(max(0, r * r * d2 - D * D)),\n      cx0 = (D * dy - dx * d) / d2,\n      cy0 = (-D * dx - dy * d) / d2,\n      cx1 = (D * dy + dx * d) / d2,\n      cy1 = (-D * dx + dy * d) / d2,\n      dx0 = cx0 - x00,\n      dy0 = cy0 - y00,\n      dx1 = cx1 - x00,\n      dy1 = cy1 - y00;\n\n  // Pick the closer of the two intersection points.\n  // TODO Is there a faster way to determine which intersection to use?\n  if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n\n  return {\n    cx: cx0,\n    cy: cy0,\n    x01: -ox,\n    y01: -oy,\n    x11: cx0 * (r1 / r - 1),\n    y11: cy0 * (r1 / r - 1)\n  };\n}\n\nexport default function() {\n  var innerRadius = arcInnerRadius,\n      outerRadius = arcOuterRadius,\n      cornerRadius = constant(0),\n      padRadius = null,\n      startAngle = arcStartAngle,\n      endAngle = arcEndAngle,\n      padAngle = arcPadAngle,\n      context = null;\n\n  function arc() {\n    var buffer,\n        r,\n        r0 = +innerRadius.apply(this, arguments),\n        r1 = +outerRadius.apply(this, arguments),\n        a0 = startAngle.apply(this, arguments) - halfPi,\n        a1 = endAngle.apply(this, arguments) - halfPi,\n        da = abs(a1 - a0),\n        cw = a1 > a0;\n\n    if (!context) context = buffer = path();\n\n    // Ensure that the outer radius is always larger than the inner radius.\n    if (r1 < r0) r = r1, r1 = r0, r0 = r;\n\n    // Is it a point?\n    if (!(r1 > epsilon)) context.moveTo(0, 0);\n\n    // Or is it a circle or annulus?\n    else if (da > tau - epsilon) {\n      context.moveTo(r1 * cos(a0), r1 * sin(a0));\n      context.arc(0, 0, r1, a0, a1, !cw);\n      if (r0 > epsilon) {\n        context.moveTo(r0 * cos(a1), r0 * sin(a1));\n        context.arc(0, 0, r0, a1, a0, cw);\n      }\n    }\n\n    // Or is it a circular or annular sector?\n    else {\n      var a01 = a0,\n          a11 = a1,\n          a00 = a0,\n          a10 = a1,\n          da0 = da,\n          da1 = da,\n          ap = padAngle.apply(this, arguments) / 2,\n          rp = (ap > epsilon) && (padRadius ? +padRadius.apply(this, arguments) : sqrt(r0 * r0 + r1 * r1)),\n          rc = min(abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments)),\n          rc0 = rc,\n          rc1 = rc,\n          t0,\n          t1;\n\n      // Apply padding? Note that since r1 ≥ r0, da1 ≥ da0.\n      if (rp > epsilon) {\n        var p0 = asin(rp / r0 * sin(ap)),\n            p1 = asin(rp / r1 * sin(ap));\n        if ((da0 -= p0 * 2) > epsilon) p0 *= (cw ? 1 : -1), a00 += p0, a10 -= p0;\n        else da0 = 0, a00 = a10 = (a0 + a1) / 2;\n        if ((da1 -= p1 * 2) > epsilon) p1 *= (cw ? 1 : -1), a01 += p1, a11 -= p1;\n        else da1 = 0, a01 = a11 = (a0 + a1) / 2;\n      }\n\n      var x01 = r1 * cos(a01),\n          y01 = r1 * sin(a01),\n          x10 = r0 * cos(a10),\n          y10 = r0 * sin(a10);\n\n      // Apply rounded corners?\n      if (rc > epsilon) {\n        var x11 = r1 * cos(a11),\n            y11 = r1 * sin(a11),\n            x00 = r0 * cos(a00),\n            y00 = r0 * sin(a00);\n\n        // Restrict the corner radius according to the sector angle.\n        if (da < pi) {\n          var oc = da0 > epsilon ? intersect(x01, y01, x00, y00, x11, y11, x10, y10) : [x10, y10],\n              ax = x01 - oc[0],\n              ay = y01 - oc[1],\n              bx = x11 - oc[0],\n              by = y11 - oc[1],\n              kc = 1 / sin(acos((ax * bx + ay * by) / (sqrt(ax * ax + ay * ay) * sqrt(bx * bx + by * by))) / 2),\n              lc = sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n          rc0 = min(rc, (r0 - lc) / (kc - 1));\n          rc1 = min(rc, (r1 - lc) / (kc + 1));\n        }\n      }\n\n      // Is the sector collapsed to a line?\n      if (!(da1 > epsilon)) context.moveTo(x01, y01);\n\n      // Does the sector’s outer ring have rounded corners?\n      else if (rc1 > epsilon) {\n        t0 = cornerTangents(x00, y00, x01, y01, r1, rc1, cw);\n        t1 = cornerTangents(x11, y11, x10, y10, r1, rc1, cw);\n\n        context.moveTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc1 < rc) context.arc(t0.cx, t0.cy, rc1, atan2(t0.y01, t0.x01), atan2(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc1, atan2(t0.y01, t0.x01), atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r1, atan2(t0.cy + t0.y11, t0.cx + t0.x11), atan2(t1.cy + t1.y11, t1.cx + t1.x11), !cw);\n          context.arc(t1.cx, t1.cy, rc1, atan2(t1.y11, t1.x11), atan2(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the outer ring just a circular arc?\n      else context.moveTo(x01, y01), context.arc(0, 0, r1, a01, a11, !cw);\n\n      // Is there no inner ring, and it’s a circular sector?\n      // Or perhaps it’s an annular sector collapsed due to padding?\n      if (!(r0 > epsilon) || !(da0 > epsilon)) context.lineTo(x10, y10);\n\n      // Does the sector’s inner ring (or point) have rounded corners?\n      else if (rc0 > epsilon) {\n        t0 = cornerTangents(x10, y10, x11, y11, r0, -rc0, cw);\n        t1 = cornerTangents(x01, y01, x00, y00, r0, -rc0, cw);\n\n        context.lineTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc0 < rc) context.arc(t0.cx, t0.cy, rc0, atan2(t0.y01, t0.x01), atan2(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc0, atan2(t0.y01, t0.x01), atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r0, atan2(t0.cy + t0.y11, t0.cx + t0.x11), atan2(t1.cy + t1.y11, t1.cx + t1.x11), cw);\n          context.arc(t1.cx, t1.cy, rc0, atan2(t1.y11, t1.x11), atan2(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the inner ring just a circular arc?\n      else context.arc(0, 0, r0, a10, a00, cw);\n    }\n\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  arc.centroid = function() {\n    var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2,\n        a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - pi / 2;\n    return [cos(a) * r, sin(a) * r];\n  };\n\n  arc.innerRadius = function(_) {\n    return arguments.length ? (innerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : innerRadius;\n  };\n\n  arc.outerRadius = function(_) {\n    return arguments.length ? (outerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : outerRadius;\n  };\n\n  arc.cornerRadius = function(_) {\n    return arguments.length ? (cornerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : cornerRadius;\n  };\n\n  arc.padRadius = function(_) {\n    return arguments.length ? (padRadius = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), arc) : padRadius;\n  };\n\n  arc.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : startAngle;\n  };\n\n  arc.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : endAngle;\n  };\n\n  arc.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : padAngle;\n  };\n\n  arc.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), arc) : context;\n  };\n\n  return arc;\n}\n","function Linear(context) {\n  this._context = context;\n}\n\nLinear.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: this._context.lineTo(x, y); break;\n    }\n  }\n};\n\nexport default function(context) {\n  return new Linear(context);\n}\n","export function x(p) {\n  return p[0];\n}\n\nexport function y(p) {\n  return p[1];\n}\n","import {path} from \"d3-path\";\nimport constant from \"./constant\";\nimport curveLinear from \"./curve/linear\";\nimport {x as pointX, y as pointY} from \"./point\";\n\nexport default function() {\n  var x = pointX,\n      y = pointY,\n      defined = constant(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function line(data) {\n    var i,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer;\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) output.lineStart();\n        else output.lineEnd();\n      }\n      if (defined0) output.point(+x(d, i, data), +y(d, i, data));\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  line.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), line) : x;\n  };\n\n  line.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), line) : y;\n  };\n\n  line.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant(!!_), line) : defined;\n  };\n\n  line.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;\n  };\n\n  line.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;\n  };\n\n  return line;\n}\n","import {path} from \"d3-path\";\nimport constant from \"./constant\";\nimport curveLinear from \"./curve/linear\";\nimport line from \"./line\";\nimport {x as pointX, y as pointY} from \"./point\";\n\nexport default function() {\n  var x0 = pointX,\n      x1 = null,\n      y0 = constant(0),\n      y1 = pointY,\n      defined = constant(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function area(data) {\n    var i,\n        j,\n        k,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer,\n        x0z = new Array(n),\n        y0z = new Array(n);\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) {\n          j = i;\n          output.areaStart();\n          output.lineStart();\n        } else {\n          output.lineEnd();\n          output.lineStart();\n          for (k = i - 1; k >= j; --k) {\n            output.point(x0z[k], y0z[k]);\n          }\n          output.lineEnd();\n          output.areaEnd();\n        }\n      }\n      if (defined0) {\n        x0z[i] = +x0(d, i, data), y0z[i] = +y0(d, i, data);\n        output.point(x1 ? +x1(d, i, data) : x0z[i], y1 ? +y1(d, i, data) : y0z[i]);\n      }\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  function arealine() {\n    return line().defined(defined).curve(curve).context(context);\n  }\n\n  area.x = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant(+_), x1 = null, area) : x0;\n  };\n\n  area.x0 = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant(+_), area) : x0;\n  };\n\n  area.x1 = function(_) {\n    return arguments.length ? (x1 = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), area) : x1;\n  };\n\n  area.y = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant(+_), y1 = null, area) : y0;\n  };\n\n  area.y0 = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant(+_), area) : y0;\n  };\n\n  area.y1 = function(_) {\n    return arguments.length ? (y1 = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), area) : y1;\n  };\n\n  area.lineX0 =\n  area.lineY0 = function() {\n    return arealine().x(x0).y(y0);\n  };\n\n  area.lineY1 = function() {\n    return arealine().x(x0).y(y1);\n  };\n\n  area.lineX1 = function() {\n    return arealine().x(x1).y(y0);\n  };\n\n  area.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant(!!_), area) : defined;\n  };\n\n  area.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), area) : curve;\n  };\n\n  area.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), area) : context;\n  };\n\n  return area;\n}\n","export default function(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n}\n","export default function(d) {\n  return d;\n}\n","import constant from \"./constant\";\nimport descending from \"./descending\";\nimport identity from \"./identity\";\nimport {tau} from \"./math\";\n\nexport default function() {\n  var value = identity,\n      sortValues = descending,\n      sort = null,\n      startAngle = constant(0),\n      endAngle = constant(tau),\n      padAngle = constant(0);\n\n  function pie(data) {\n    var i,\n        n = data.length,\n        j,\n        k,\n        sum = 0,\n        index = new Array(n),\n        arcs = new Array(n),\n        a0 = +startAngle.apply(this, arguments),\n        da = Math.min(tau, Math.max(-tau, endAngle.apply(this, arguments) - a0)),\n        a1,\n        p = Math.min(Math.abs(da) / n, padAngle.apply(this, arguments)),\n        pa = p * (da < 0 ? -1 : 1),\n        v;\n\n    for (i = 0; i < n; ++i) {\n      if ((v = arcs[index[i] = i] = +value(data[i], i, data)) > 0) {\n        sum += v;\n      }\n    }\n\n    // Optionally sort the arcs by previously-computed values or by data.\n    if (sortValues != null) index.sort(function(i, j) { return sortValues(arcs[i], arcs[j]); });\n    else if (sort != null) index.sort(function(i, j) { return sort(data[i], data[j]); });\n\n    // Compute the arcs! They are stored in the original data's order.\n    for (i = 0, k = sum ? (da - n * pa) / sum : 0; i < n; ++i, a0 = a1) {\n      j = index[i], v = arcs[j], a1 = a0 + (v > 0 ? v * k : 0) + pa, arcs[j] = {\n        data: data[j],\n        index: i,\n        value: v,\n        startAngle: a0,\n        endAngle: a1,\n        padAngle: p\n      };\n    }\n\n    return arcs;\n  }\n\n  pie.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(+_), pie) : value;\n  };\n\n  pie.sortValues = function(_) {\n    return arguments.length ? (sortValues = _, sort = null, pie) : sortValues;\n  };\n\n  pie.sort = function(_) {\n    return arguments.length ? (sort = _, sortValues = null, pie) : sort;\n  };\n\n  pie.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : startAngle;\n  };\n\n  pie.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : endAngle;\n  };\n\n  pie.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : padAngle;\n  };\n\n  return pie;\n}\n","import curveLinear from \"./linear\";\n\nexport var curveRadialLinear = curveRadial(curveLinear);\n\nfunction Radial(curve) {\n  this._curve = curve;\n}\n\nRadial.prototype = {\n  areaStart: function() {\n    this._curve.areaStart();\n  },\n  areaEnd: function() {\n    this._curve.areaEnd();\n  },\n  lineStart: function() {\n    this._curve.lineStart();\n  },\n  lineEnd: function() {\n    this._curve.lineEnd();\n  },\n  point: function(a, r) {\n    this._curve.point(r * Math.sin(a), r * -Math.cos(a));\n  }\n};\n\nexport default function curveRadial(curve) {\n\n  function radial(context) {\n    return new Radial(curve(context));\n  }\n\n  radial._curve = curve;\n\n  return radial;\n}\n","import curveRadial, {curveRadialLinear} from \"./curve/radial\";\nimport line from \"./line\";\n\nexport function lineRadial(l) {\n  var c = l.curve;\n\n  l.angle = l.x, delete l.x;\n  l.radius = l.y, delete l.y;\n\n  l.curve = function(_) {\n    return arguments.length ? c(curveRadial(_)) : c()._curve;\n  };\n\n  return l;\n}\n\nexport default function() {\n  return lineRadial(line().curve(curveRadialLinear));\n}\n","import curveRadial, {curveRadialLinear} from \"./curve/radial\";\nimport area from \"./area\";\nimport {lineRadial} from \"./lineRadial\"\n\nexport default function() {\n  var a = area().curve(curveRadialLinear),\n      c = a.curve,\n      x0 = a.lineX0,\n      x1 = a.lineX1,\n      y0 = a.lineY0,\n      y1 = a.lineY1;\n\n  a.angle = a.x, delete a.x;\n  a.startAngle = a.x0, delete a.x0;\n  a.endAngle = a.x1, delete a.x1;\n  a.radius = a.y, delete a.y;\n  a.innerRadius = a.y0, delete a.y0;\n  a.outerRadius = a.y1, delete a.y1;\n  a.lineStartAngle = function() { return lineRadial(x0()); }, delete a.lineX0;\n  a.lineEndAngle = function() { return lineRadial(x1()); }, delete a.lineX1;\n  a.lineInnerRadius = function() { return lineRadial(y0()); }, delete a.lineY0;\n  a.lineOuterRadius = function() { return lineRadial(y1()); }, delete a.lineY1;\n\n  a.curve = function(_) {\n    return arguments.length ? c(curveRadial(_)) : c()._curve;\n  };\n\n  return a;\n}\n","export default function(x, y) {\n  return [(y = +y) * Math.cos(x -= Math.PI / 2), y * Math.sin(x)];\n}\n","export var slice = Array.prototype.slice;\n","import {path} from \"d3-path\";\nimport {slice} from \"../array\";\nimport constant from \"../constant\";\nimport {x as pointX, y as pointY} from \"../point\";\nimport pointRadial from \"../pointRadial\";\n\nfunction linkSource(d) {\n  return d.source;\n}\n\nfunction linkTarget(d) {\n  return d.target;\n}\n\nfunction link(curve) {\n  var source = linkSource,\n      target = linkTarget,\n      x = pointX,\n      y = pointY,\n      context = null;\n\n  function link() {\n    var buffer, argv = slice.call(arguments), s = source.apply(this, argv), t = target.apply(this, argv);\n    if (!context) context = buffer = path();\n    curve(context, +x.apply(this, (argv[0] = s, argv)), +y.apply(this, argv), +x.apply(this, (argv[0] = t, argv)), +y.apply(this, argv));\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  link.source = function(_) {\n    return arguments.length ? (source = _, link) : source;\n  };\n\n  link.target = function(_) {\n    return arguments.length ? (target = _, link) : target;\n  };\n\n  link.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), link) : x;\n  };\n\n  link.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), link) : y;\n  };\n\n  link.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), link) : context;\n  };\n\n  return link;\n}\n\nfunction curveHorizontal(context, x0, y0, x1, y1) {\n  context.moveTo(x0, y0);\n  context.bezierCurveTo(x0 = (x0 + x1) / 2, y0, x0, y1, x1, y1);\n}\n\nfunction curveVertical(context, x0, y0, x1, y1) {\n  context.moveTo(x0, y0);\n  context.bezierCurveTo(x0, y0 = (y0 + y1) / 2, x1, y0, x1, y1);\n}\n\nfunction curveRadial(context, x0, y0, x1, y1) {\n  var p0 = pointRadial(x0, y0),\n      p1 = pointRadial(x0, y0 = (y0 + y1) / 2),\n      p2 = pointRadial(x1, y0),\n      p3 = pointRadial(x1, y1);\n  context.moveTo(p0[0], p0[1]);\n  context.bezierCurveTo(p1[0], p1[1], p2[0], p2[1], p3[0], p3[1]);\n}\n\nexport function linkHorizontal() {\n  return link(curveHorizontal);\n}\n\nexport function linkVertical() {\n  return link(curveVertical);\n}\n\nexport function linkRadial() {\n  var l = link(curveRadial);\n  l.angle = l.x, delete l.x;\n  l.radius = l.y, delete l.y;\n  return l;\n}\n","import {pi, tau} from \"../math\";\n\nexport default {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / pi);\n    context.moveTo(r, 0);\n    context.arc(0, 0, r, 0, tau);\n  }\n};\n","export default {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / 5) / 2;\n    context.moveTo(-3 * r, -r);\n    context.lineTo(-r, -r);\n    context.lineTo(-r, -3 * r);\n    context.lineTo(r, -3 * r);\n    context.lineTo(r, -r);\n    context.lineTo(3 * r, -r);\n    context.lineTo(3 * r, r);\n    context.lineTo(r, r);\n    context.lineTo(r, 3 * r);\n    context.lineTo(-r, 3 * r);\n    context.lineTo(-r, r);\n    context.lineTo(-3 * r, r);\n    context.closePath();\n  }\n};\n","var tan30 = Math.sqrt(1 / 3),\n    tan30_2 = tan30 * 2;\n\nexport default {\n  draw: function(context, size) {\n    var y = Math.sqrt(size / tan30_2),\n        x = y * tan30;\n    context.moveTo(0, -y);\n    context.lineTo(x, 0);\n    context.lineTo(0, y);\n    context.lineTo(-x, 0);\n    context.closePath();\n  }\n};\n","import {pi, tau} from \"../math\";\n\nvar ka = 0.89081309152928522810,\n    kr = Math.sin(pi / 10) / Math.sin(7 * pi / 10),\n    kx = Math.sin(tau / 10) * kr,\n    ky = -Math.cos(tau / 10) * kr;\n\nexport default {\n  draw: function(context, size) {\n    var r = Math.sqrt(size * ka),\n        x = kx * r,\n        y = ky * r;\n    context.moveTo(0, -r);\n    context.lineTo(x, y);\n    for (var i = 1; i < 5; ++i) {\n      var a = tau * i / 5,\n          c = Math.cos(a),\n          s = Math.sin(a);\n      context.lineTo(s * r, -c * r);\n      context.lineTo(c * x - s * y, s * x + c * y);\n    }\n    context.closePath();\n  }\n};\n","export default {\n  draw: function(context, size) {\n    var w = Math.sqrt(size),\n        x = -w / 2;\n    context.rect(x, x, w, w);\n  }\n};\n","var sqrt3 = Math.sqrt(3);\n\nexport default {\n  draw: function(context, size) {\n    var y = -Math.sqrt(size / (sqrt3 * 3));\n    context.moveTo(0, y * 2);\n    context.lineTo(-sqrt3 * y, -y);\n    context.lineTo(sqrt3 * y, -y);\n    context.closePath();\n  }\n};\n","var c = -0.5,\n    s = Math.sqrt(3) / 2,\n    k = 1 / Math.sqrt(12),\n    a = (k / 2 + 1) * 3;\n\nexport default {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / a),\n        x0 = r / 2,\n        y0 = r * k,\n        x1 = x0,\n        y1 = r * k + r,\n        x2 = -x1,\n        y2 = y1;\n    context.moveTo(x0, y0);\n    context.lineTo(x1, y1);\n    context.lineTo(x2, y2);\n    context.lineTo(c * x0 - s * y0, s * x0 + c * y0);\n    context.lineTo(c * x1 - s * y1, s * x1 + c * y1);\n    context.lineTo(c * x2 - s * y2, s * x2 + c * y2);\n    context.lineTo(c * x0 + s * y0, c * y0 - s * x0);\n    context.lineTo(c * x1 + s * y1, c * y1 - s * x1);\n    context.lineTo(c * x2 + s * y2, c * y2 - s * x2);\n    context.closePath();\n  }\n};\n","import {path} from \"d3-path\";\nimport circle from \"./symbol/circle\";\nimport cross from \"./symbol/cross\";\nimport diamond from \"./symbol/diamond\";\nimport star from \"./symbol/star\";\nimport square from \"./symbol/square\";\nimport triangle from \"./symbol/triangle\";\nimport wye from \"./symbol/wye\";\nimport constant from \"./constant\";\n\nexport var symbols = [\n  circle,\n  cross,\n  diamond,\n  square,\n  star,\n  triangle,\n  wye\n];\n\nexport default function() {\n  var type = constant(circle),\n      size = constant(64),\n      context = null;\n\n  function symbol() {\n    var buffer;\n    if (!context) context = buffer = path();\n    type.apply(this, arguments).draw(context, +size.apply(this, arguments));\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  symbol.type = function(_) {\n    return arguments.length ? (type = typeof _ === \"function\" ? _ : constant(_), symbol) : type;\n  };\n\n  symbol.size = function(_) {\n    return arguments.length ? (size = typeof _ === \"function\" ? _ : constant(+_), symbol) : size;\n  };\n\n  symbol.context = function(_) {\n    return arguments.length ? (context = _ == null ? null : _, symbol) : context;\n  };\n\n  return symbol;\n}\n","export default function() {}\n","export function point(that, x, y) {\n  that._context.bezierCurveTo(\n    (2 * that._x0 + that._x1) / 3,\n    (2 * that._y0 + that._y1) / 3,\n    (that._x0 + 2 * that._x1) / 3,\n    (that._y0 + 2 * that._y1) / 3,\n    (that._x0 + 4 * that._x1 + x) / 6,\n    (that._y0 + 4 * that._y1 + y) / 6\n  );\n}\n\nexport function Basis(context) {\n  this._context = context;\n}\n\nBasis.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 3: point(this, this._x1, this._y1); // proceed\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._context.lineTo((5 * this._x0 + this._x1) / 6, (5 * this._y0 + this._y1) / 6); // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nexport default function(context) {\n  return new Basis(context);\n}\n","import noop from \"../noop\";\nimport {point} from \"./basis\";\n\nfunction BasisClosed(context) {\n  this._context = context;\n}\n\nBasisClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x2, this._y2);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.moveTo((this._x2 + 2 * this._x3) / 3, (this._y2 + 2 * this._y3) / 3);\n        this._context.lineTo((this._x3 + 2 * this._x2) / 3, (this._y3 + 2 * this._y2) / 3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x2, this._y2);\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x2 = x, this._y2 = y; break;\n      case 1: this._point = 2; this._x3 = x, this._y3 = y; break;\n      case 2: this._point = 3; this._x4 = x, this._y4 = y; this._context.moveTo((this._x0 + 4 * this._x1 + x) / 6, (this._y0 + 4 * this._y1 + y) / 6); break;\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nexport default function(context) {\n  return new BasisClosed(context);\n}\n","import {point} from \"./basis\";\n\nfunction BasisOpen(context) {\n  this._context = context;\n}\n\nBasisOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; var x0 = (this._x0 + 4 * this._x1 + x) / 6, y0 = (this._y0 + 4 * this._y1 + y) / 6; this._line ? this._context.lineTo(x0, y0) : this._context.moveTo(x0, y0); break;\n      case 3: this._point = 4; // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nexport default function(context) {\n  return new BasisOpen(context);\n}\n","import {Basis} from \"./basis\";\n\nfunction Bundle(context, beta) {\n  this._basis = new Basis(context);\n  this._beta = beta;\n}\n\nBundle.prototype = {\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n    this._basis.lineStart();\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        j = x.length - 1;\n\n    if (j > 0) {\n      var x0 = x[0],\n          y0 = y[0],\n          dx = x[j] - x0,\n          dy = y[j] - y0,\n          i = -1,\n          t;\n\n      while (++i <= j) {\n        t = i / j;\n        this._basis.point(\n          this._beta * x[i] + (1 - this._beta) * (x0 + t * dx),\n          this._beta * y[i] + (1 - this._beta) * (y0 + t * dy)\n        );\n      }\n    }\n\n    this._x = this._y = null;\n    this._basis.lineEnd();\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\nexport default (function custom(beta) {\n\n  function bundle(context) {\n    return beta === 1 ? new Basis(context) : new Bundle(context, beta);\n  }\n\n  bundle.beta = function(beta) {\n    return custom(+beta);\n  };\n\n  return bundle;\n})(0.85);\n","export function point(that, x, y) {\n  that._context.bezierCurveTo(\n    that._x1 + that._k * (that._x2 - that._x0),\n    that._y1 + that._k * (that._y2 - that._y0),\n    that._x2 + that._k * (that._x1 - x),\n    that._y2 + that._k * (that._y1 - y),\n    that._x2,\n    that._y2\n  );\n}\n\nexport function Cardinal(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinal.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: point(this, this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; this._x1 = x, this._y1 = y; break;\n      case 2: this._point = 3; // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(tension) {\n\n  function cardinal(context) {\n    return new Cardinal(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n","import noop from \"../noop\";\nimport {point} from \"./cardinal\";\n\nexport function CardinalClosed(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalClosed(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n","import {point} from \"./cardinal\";\n\nexport function CardinalOpen(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalOpen(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n","import {epsilon} from \"../math\";\nimport {Cardinal} from \"./cardinal\";\n\nexport function point(that, x, y) {\n  var x1 = that._x1,\n      y1 = that._y1,\n      x2 = that._x2,\n      y2 = that._y2;\n\n  if (that._l01_a > epsilon) {\n    var a = 2 * that._l01_2a + 3 * that._l01_a * that._l12_a + that._l12_2a,\n        n = 3 * that._l01_a * (that._l01_a + that._l12_a);\n    x1 = (x1 * a - that._x0 * that._l12_2a + that._x2 * that._l01_2a) / n;\n    y1 = (y1 * a - that._y0 * that._l12_2a + that._y2 * that._l01_2a) / n;\n  }\n\n  if (that._l23_a > epsilon) {\n    var b = 2 * that._l23_2a + 3 * that._l23_a * that._l12_a + that._l12_2a,\n        m = 3 * that._l23_a * (that._l23_a + that._l12_a);\n    x2 = (x2 * b + that._x1 * that._l23_2a - x * that._l12_2a) / m;\n    y2 = (y2 * b + that._y1 * that._l23_2a - y * that._l12_2a) / m;\n  }\n\n  that._context.bezierCurveTo(x1, y1, x2, y2, that._x2, that._y2);\n}\n\nfunction CatmullRom(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRom.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: this.point(this._x2, this._y2); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; // proceed\n      default: point(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRom(context, alpha) : new Cardinal(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n","import {CardinalClosed} from \"./cardinalClosed\";\nimport noop from \"../noop\";\nimport {point} from \"./catmullRom\";\n\nfunction CatmullRomClosed(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomClosed(context, alpha) : new CardinalClosed(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n","import {CardinalOpen} from \"./cardinalOpen\";\nimport {point} from \"./catmullRom\";\n\nfunction CatmullRomOpen(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomOpen(context, alpha) : new CardinalOpen(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n","import noop from \"../noop\";\n\nfunction LinearClosed(context) {\n  this._context = context;\n}\n\nLinearClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._point) this._context.closePath();\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    if (this._point) this._context.lineTo(x, y);\n    else this._point = 1, this._context.moveTo(x, y);\n  }\n};\n\nexport default function(context) {\n  return new LinearClosed(context);\n}\n","function sign(x) {\n  return x < 0 ? -1 : 1;\n}\n\n// Calculate the slopes of the tangents (Hermite-type interpolation) based on\n// the following paper: Steffen, M. 1990. A Simple Method for Monotonic\n// Interpolation in One Dimension. Astronomy and Astrophysics, Vol. 239, NO.\n// NOV(II), P. 443, 1990.\nfunction slope3(that, x2, y2) {\n  var h0 = that._x1 - that._x0,\n      h1 = x2 - that._x1,\n      s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0),\n      s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0),\n      p = (s0 * h1 + s1 * h0) / (h0 + h1);\n  return (sign(s0) + sign(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;\n}\n\n// Calculate a one-sided slope.\nfunction slope2(that, t) {\n  var h = that._x1 - that._x0;\n  return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;\n}\n\n// According to https://en.wikipedia.org/wiki/Cubic_Hermite_spline#Representations\n// \"you can express cubic Hermite interpolation in terms of cubic Bézier curves\n// with respect to the four values p0, p0 + m0 / 3, p1 - m1 / 3, p1\".\nfunction point(that, t0, t1) {\n  var x0 = that._x0,\n      y0 = that._y0,\n      x1 = that._x1,\n      y1 = that._y1,\n      dx = (x1 - x0) / 3;\n  that._context.bezierCurveTo(x0 + dx, y0 + dx * t0, x1 - dx, y1 - dx * t1, x1, y1);\n}\n\nfunction MonotoneX(context) {\n  this._context = context;\n}\n\nMonotoneX.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 =\n    this._t0 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n      case 3: point(this, this._t0, slope2(this, this._t0)); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    var t1 = NaN;\n\n    x = +x, y = +y;\n    if (x === this._x1 && y === this._y1) return; // Ignore coincident points.\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; point(this, slope2(this, t1 = slope3(this, x, y)), t1); break;\n      default: point(this, this._t0, t1 = slope3(this, x, y)); break;\n    }\n\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n    this._t0 = t1;\n  }\n}\n\nfunction MonotoneY(context) {\n  this._context = new ReflectContext(context);\n}\n\n(MonotoneY.prototype = Object.create(MonotoneX.prototype)).point = function(x, y) {\n  MonotoneX.prototype.point.call(this, y, x);\n};\n\nfunction ReflectContext(context) {\n  this._context = context;\n}\n\nReflectContext.prototype = {\n  moveTo: function(x, y) { this._context.moveTo(y, x); },\n  closePath: function() { this._context.closePath(); },\n  lineTo: function(x, y) { this._context.lineTo(y, x); },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) { this._context.bezierCurveTo(y1, x1, y2, x2, y, x); }\n};\n\nexport function monotoneX(context) {\n  return new MonotoneX(context);\n}\n\nexport function monotoneY(context) {\n  return new MonotoneY(context);\n}\n","function Natural(context) {\n  this._context = context;\n}\n\nNatural.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        n = x.length;\n\n    if (n) {\n      this._line ? this._context.lineTo(x[0], y[0]) : this._context.moveTo(x[0], y[0]);\n      if (n === 2) {\n        this._context.lineTo(x[1], y[1]);\n      } else {\n        var px = controlPoints(x),\n            py = controlPoints(y);\n        for (var i0 = 0, i1 = 1; i1 < n; ++i0, ++i1) {\n          this._context.bezierCurveTo(px[0][i0], py[0][i0], px[1][i0], py[1][i0], x[i1], y[i1]);\n        }\n      }\n    }\n\n    if (this._line || (this._line !== 0 && n === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n    this._x = this._y = null;\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\n// See https://www.particleincell.com/2012/bezier-splines/ for derivation.\nfunction controlPoints(x) {\n  var i,\n      n = x.length - 1,\n      m,\n      a = new Array(n),\n      b = new Array(n),\n      r = new Array(n);\n  a[0] = 0, b[0] = 2, r[0] = x[0] + 2 * x[1];\n  for (i = 1; i < n - 1; ++i) a[i] = 1, b[i] = 4, r[i] = 4 * x[i] + 2 * x[i + 1];\n  a[n - 1] = 2, b[n - 1] = 7, r[n - 1] = 8 * x[n - 1] + x[n];\n  for (i = 1; i < n; ++i) m = a[i] / b[i - 1], b[i] -= m, r[i] -= m * r[i - 1];\n  a[n - 1] = r[n - 1] / b[n - 1];\n  for (i = n - 2; i >= 0; --i) a[i] = (r[i] - a[i + 1]) / b[i];\n  b[n - 1] = (x[n] + a[n - 1]) / 2;\n  for (i = 0; i < n - 1; ++i) b[i] = 2 * x[i + 1] - a[i + 1];\n  return [a, b];\n}\n\nexport default function(context) {\n  return new Natural(context);\n}\n","function Step(context, t) {\n  this._context = context;\n  this._t = t;\n}\n\nStep.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = this._y = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    if (this._line >= 0) this._t = 1 - this._t, this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: {\n        if (this._t <= 0) {\n          this._context.lineTo(this._x, y);\n          this._context.lineTo(x, y);\n        } else {\n          var x1 = this._x * (1 - this._t) + x * this._t;\n          this._context.lineTo(x1, this._y);\n          this._context.lineTo(x1, y);\n        }\n        break;\n      }\n    }\n    this._x = x, this._y = y;\n  }\n};\n\nexport default function(context) {\n  return new Step(context, 0.5);\n}\n\nexport function stepBefore(context) {\n  return new Step(context, 0);\n}\n\nexport function stepAfter(context) {\n  return new Step(context, 1);\n}\n","export default function(series, order) {\n  if (!((n = series.length) > 1)) return;\n  for (var i = 1, j, s0, s1 = series[order[0]], n, m = s1.length; i < n; ++i) {\n    s0 = s1, s1 = series[order[i]];\n    for (j = 0; j < m; ++j) {\n      s1[j][1] += s1[j][0] = isNaN(s0[j][1]) ? s0[j][0] : s0[j][1];\n    }\n  }\n}\n","export default function(series) {\n  var n = series.length, o = new Array(n);\n  while (--n >= 0) o[n] = n;\n  return o;\n}\n","import {slice} from \"./array\";\nimport constant from \"./constant\";\nimport offsetNone from \"./offset/none\";\nimport orderNone from \"./order/none\";\n\nfunction stackValue(d, key) {\n  return d[key];\n}\n\nexport default function() {\n  var keys = constant([]),\n      order = orderNone,\n      offset = offsetNone,\n      value = stackValue;\n\n  function stack(data) {\n    var kz = keys.apply(this, arguments),\n        i,\n        m = data.length,\n        n = kz.length,\n        sz = new Array(n),\n        oz;\n\n    for (i = 0; i < n; ++i) {\n      for (var ki = kz[i], si = sz[i] = new Array(m), j = 0, sij; j < m; ++j) {\n        si[j] = sij = [0, +value(data[j], ki, j, data)];\n        sij.data = data[j];\n      }\n      si.key = ki;\n    }\n\n    for (i = 0, oz = order(sz); i < n; ++i) {\n      sz[oz[i]].index = i;\n    }\n\n    offset(sz, oz);\n    return sz;\n  }\n\n  stack.keys = function(_) {\n    return arguments.length ? (keys = typeof _ === \"function\" ? _ : constant(slice.call(_)), stack) : keys;\n  };\n\n  stack.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(+_), stack) : value;\n  };\n\n  stack.order = function(_) {\n    return arguments.length ? (order = _ == null ? orderNone : typeof _ === \"function\" ? _ : constant(slice.call(_)), stack) : order;\n  };\n\n  stack.offset = function(_) {\n    return arguments.length ? (offset = _ == null ? offsetNone : _, stack) : offset;\n  };\n\n  return stack;\n}\n","import none from \"./none\";\n\nexport default function(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var i, n, j = 0, m = series[0].length, y; j < m; ++j) {\n    for (y = i = 0; i < n; ++i) y += series[i][j][1] || 0;\n    if (y) for (i = 0; i < n; ++i) series[i][j][1] /= y;\n  }\n  none(series, order);\n}\n","export default function(series, order) {\n  if (!((n = series.length) > 1)) return;\n  for (var i, j = 0, d, dy, yp, yn, n, m = series[order[0]].length; j < m; ++j) {\n    for (yp = yn = 0, i = 0; i < n; ++i) {\n      if ((dy = (d = series[order[i]][j])[1] - d[0]) >= 0) {\n        d[0] = yp, d[1] = yp += dy;\n      } else if (dy < 0) {\n        d[1] = yn, d[0] = yn += dy;\n      } else {\n        d[0] = yp;\n      }\n    }\n  }\n}\n","import none from \"./none\";\n\nexport default function(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var j = 0, s0 = series[order[0]], n, m = s0.length; j < m; ++j) {\n    for (var i = 0, y = 0; i < n; ++i) y += series[i][j][1] || 0;\n    s0[j][1] += s0[j][0] = -y / 2;\n  }\n  none(series, order);\n}\n","import none from \"./none\";\n\nexport default function(series, order) {\n  if (!((n = series.length) > 0) || !((m = (s0 = series[order[0]]).length) > 0)) return;\n  for (var y = 0, j = 1, s0, m, n; j < m; ++j) {\n    for (var i = 0, s1 = 0, s2 = 0; i < n; ++i) {\n      var si = series[order[i]],\n          sij0 = si[j][1] || 0,\n          sij1 = si[j - 1][1] || 0,\n          s3 = (sij0 - sij1) / 2;\n      for (var k = 0; k < i; ++k) {\n        var sk = series[order[k]],\n            skj0 = sk[j][1] || 0,\n            skj1 = sk[j - 1][1] || 0;\n        s3 += skj0 - skj1;\n      }\n      s1 += sij0, s2 += s3 * sij0;\n    }\n    s0[j - 1][1] += s0[j - 1][0] = y;\n    if (s1) y -= s2 / s1;\n  }\n  s0[j - 1][1] += s0[j - 1][0] = y;\n  none(series, order);\n}\n","import none from \"./none\";\n\nexport default function(series) {\n  var sums = series.map(sum);\n  return none(series).sort(function(a, b) { return sums[a] - sums[b]; });\n}\n\nexport function sum(series) {\n  var s = 0, i = -1, n = series.length, v;\n  while (++i < n) if (v = +series[i][1]) s += v;\n  return s;\n}\n","import ascending from \"./ascending\";\n\nexport default function(series) {\n  return ascending(series).reverse();\n}\n","import none from \"./none\";\nimport {sum} from \"./ascending\";\n\nexport default function(series) {\n  var n = series.length,\n      i,\n      j,\n      sums = series.map(sum),\n      order = none(series).sort(function(a, b) { return sums[b] - sums[a]; }),\n      top = 0,\n      bottom = 0,\n      tops = [],\n      bottoms = [];\n\n  for (i = 0; i < n; ++i) {\n    j = order[i];\n    if (top < bottom) {\n      top += sums[j];\n      tops.push(j);\n    } else {\n      bottom += sums[j];\n      bottoms.push(j);\n    }\n  }\n\n  return bottoms.reverse().concat(tops);\n}\n","import none from \"./none\";\n\nexport default function(series) {\n  return none(series).reverse();\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export function x(d) {\n  return d[0];\n}\n\nexport function y(d) {\n  return d[1];\n}\n","function RedBlackTree() {\n  this._ = null; // root node\n}\n\nexport function RedBlackNode(node) {\n  node.U = // parent node\n  node.C = // color - true for red, false for black\n  node.L = // left node\n  node.R = // right node\n  node.P = // previous node\n  node.N = null; // next node\n}\n\nRedBlackTree.prototype = {\n  constructor: RedBlackTree,\n\n  insert: function(after, node) {\n    var parent, grandpa, uncle;\n\n    if (after) {\n      node.P = after;\n      node.N = after.N;\n      if (after.N) after.N.P = node;\n      after.N = node;\n      if (after.R) {\n        after = after.R;\n        while (after.L) after = after.L;\n        after.L = node;\n      } else {\n        after.R = node;\n      }\n      parent = after;\n    } else if (this._) {\n      after = RedBlackFirst(this._);\n      node.P = null;\n      node.N = after;\n      after.P = after.L = node;\n      parent = after;\n    } else {\n      node.P = node.N = null;\n      this._ = node;\n      parent = null;\n    }\n    node.L = node.R = null;\n    node.U = parent;\n    node.C = true;\n\n    after = node;\n    while (parent && parent.C) {\n      grandpa = parent.U;\n      if (parent === grandpa.L) {\n        uncle = grandpa.R;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.R) {\n            RedBlackRotateLeft(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateRight(this, grandpa);\n        }\n      } else {\n        uncle = grandpa.L;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.L) {\n            RedBlackRotateRight(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateLeft(this, grandpa);\n        }\n      }\n      parent = after.U;\n    }\n    this._.C = false;\n  },\n\n  remove: function(node) {\n    if (node.N) node.N.P = node.P;\n    if (node.P) node.P.N = node.N;\n    node.N = node.P = null;\n\n    var parent = node.U,\n        sibling,\n        left = node.L,\n        right = node.R,\n        next,\n        red;\n\n    if (!left) next = right;\n    else if (!right) next = left;\n    else next = RedBlackFirst(right);\n\n    if (parent) {\n      if (parent.L === node) parent.L = next;\n      else parent.R = next;\n    } else {\n      this._ = next;\n    }\n\n    if (left && right) {\n      red = next.C;\n      next.C = node.C;\n      next.L = left;\n      left.U = next;\n      if (next !== right) {\n        parent = next.U;\n        next.U = node.U;\n        node = next.R;\n        parent.L = node;\n        next.R = right;\n        right.U = next;\n      } else {\n        next.U = parent;\n        parent = next;\n        node = next.R;\n      }\n    } else {\n      red = node.C;\n      node = next;\n    }\n\n    if (node) node.U = parent;\n    if (red) return;\n    if (node && node.C) { node.C = false; return; }\n\n    do {\n      if (node === this._) break;\n      if (node === parent.L) {\n        sibling = parent.R;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateLeft(this, parent);\n          sibling = parent.R;\n        }\n        if ((sibling.L && sibling.L.C)\n            || (sibling.R && sibling.R.C)) {\n          if (!sibling.R || !sibling.R.C) {\n            sibling.L.C = false;\n            sibling.C = true;\n            RedBlackRotateRight(this, sibling);\n            sibling = parent.R;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.R.C = false;\n          RedBlackRotateLeft(this, parent);\n          node = this._;\n          break;\n        }\n      } else {\n        sibling = parent.L;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateRight(this, parent);\n          sibling = parent.L;\n        }\n        if ((sibling.L && sibling.L.C)\n          || (sibling.R && sibling.R.C)) {\n          if (!sibling.L || !sibling.L.C) {\n            sibling.R.C = false;\n            sibling.C = true;\n            RedBlackRotateLeft(this, sibling);\n            sibling = parent.L;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.L.C = false;\n          RedBlackRotateRight(this, parent);\n          node = this._;\n          break;\n        }\n      }\n      sibling.C = true;\n      node = parent;\n      parent = parent.U;\n    } while (!node.C);\n\n    if (node) node.C = false;\n  }\n};\n\nfunction RedBlackRotateLeft(tree, node) {\n  var p = node,\n      q = node.R,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.R = q.L;\n  if (p.R) p.R.U = p;\n  q.L = p;\n}\n\nfunction RedBlackRotateRight(tree, node) {\n  var p = node,\n      q = node.L,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.L = q.R;\n  if (p.L) p.L.U = p;\n  q.R = p;\n}\n\nfunction RedBlackFirst(node) {\n  while (node.L) node = node.L;\n  return node;\n}\n\nexport default RedBlackTree;\n","import {cells, edges, epsilon} from \"./Diagram\";\n\nexport function createEdge(left, right, v0, v1) {\n  var edge = [null, null],\n      index = edges.push(edge) - 1;\n  edge.left = left;\n  edge.right = right;\n  if (v0) setEdgeEnd(edge, left, right, v0);\n  if (v1) setEdgeEnd(edge, right, left, v1);\n  cells[left.index].halfedges.push(index);\n  cells[right.index].halfedges.push(index);\n  return edge;\n}\n\nexport function createBorderEdge(left, v0, v1) {\n  var edge = [v0, v1];\n  edge.left = left;\n  return edge;\n}\n\nexport function setEdgeEnd(edge, left, right, vertex) {\n  if (!edge[0] && !edge[1]) {\n    edge[0] = vertex;\n    edge.left = left;\n    edge.right = right;\n  } else if (edge.left === right) {\n    edge[1] = vertex;\n  } else {\n    edge[0] = vertex;\n  }\n}\n\n// Liang–Barsky line clipping.\nfunction clipEdge(edge, x0, y0, x1, y1) {\n  var a = edge[0],\n      b = edge[1],\n      ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (!(t0 > 0) && !(t1 < 1)) return true; // TODO Better check?\n\n  if (t0 > 0) edge[0] = [ax + t0 * dx, ay + t0 * dy];\n  if (t1 < 1) edge[1] = [ax + t1 * dx, ay + t1 * dy];\n  return true;\n}\n\nfunction connectEdge(edge, x0, y0, x1, y1) {\n  var v1 = edge[1];\n  if (v1) return true;\n\n  var v0 = edge[0],\n      left = edge.left,\n      right = edge.right,\n      lx = left[0],\n      ly = left[1],\n      rx = right[0],\n      ry = right[1],\n      fx = (lx + rx) / 2,\n      fy = (ly + ry) / 2,\n      fm,\n      fb;\n\n  if (ry === ly) {\n    if (fx < x0 || fx >= x1) return;\n    if (lx > rx) {\n      if (!v0) v0 = [fx, y0];\n      else if (v0[1] >= y1) return;\n      v1 = [fx, y1];\n    } else {\n      if (!v0) v0 = [fx, y1];\n      else if (v0[1] < y0) return;\n      v1 = [fx, y0];\n    }\n  } else {\n    fm = (lx - rx) / (ry - ly);\n    fb = fy - fm * fx;\n    if (fm < -1 || fm > 1) {\n      if (lx > rx) {\n        if (!v0) v0 = [(y0 - fb) / fm, y0];\n        else if (v0[1] >= y1) return;\n        v1 = [(y1 - fb) / fm, y1];\n      } else {\n        if (!v0) v0 = [(y1 - fb) / fm, y1];\n        else if (v0[1] < y0) return;\n        v1 = [(y0 - fb) / fm, y0];\n      }\n    } else {\n      if (ly < ry) {\n        if (!v0) v0 = [x0, fm * x0 + fb];\n        else if (v0[0] >= x1) return;\n        v1 = [x1, fm * x1 + fb];\n      } else {\n        if (!v0) v0 = [x1, fm * x1 + fb];\n        else if (v0[0] < x0) return;\n        v1 = [x0, fm * x0 + fb];\n      }\n    }\n  }\n\n  edge[0] = v0;\n  edge[1] = v1;\n  return true;\n}\n\nexport function clipEdges(x0, y0, x1, y1) {\n  var i = edges.length,\n      edge;\n\n  while (i--) {\n    if (!connectEdge(edge = edges[i], x0, y0, x1, y1)\n        || !clipEdge(edge, x0, y0, x1, y1)\n        || !(Math.abs(edge[0][0] - edge[1][0]) > epsilon\n            || Math.abs(edge[0][1] - edge[1][1]) > epsilon)) {\n      delete edges[i];\n    }\n  }\n}\n","import {createBorderEdge} from \"./Edge\";\nimport {cells, edges, epsilon} from \"./Diagram\";\n\nexport function createCell(site) {\n  return cells[site.index] = {\n    site: site,\n    halfedges: []\n  };\n}\n\nfunction cellHalfedgeAngle(cell, edge) {\n  var site = cell.site,\n      va = edge.left,\n      vb = edge.right;\n  if (site === vb) vb = va, va = site;\n  if (vb) return Math.atan2(vb[1] - va[1], vb[0] - va[0]);\n  if (site === va) va = edge[1], vb = edge[0];\n  else va = edge[0], vb = edge[1];\n  return Math.atan2(va[0] - vb[0], vb[1] - va[1]);\n}\n\nexport function cellHalfedgeStart(cell, edge) {\n  return edge[+(edge.left !== cell.site)];\n}\n\nexport function cellHalfedgeEnd(cell, edge) {\n  return edge[+(edge.left === cell.site)];\n}\n\nexport function sortCellHalfedges() {\n  for (var i = 0, n = cells.length, cell, halfedges, j, m; i < n; ++i) {\n    if ((cell = cells[i]) && (m = (halfedges = cell.halfedges).length)) {\n      var index = new Array(m),\n          array = new Array(m);\n      for (j = 0; j < m; ++j) index[j] = j, array[j] = cellHalfedgeAngle(cell, edges[halfedges[j]]);\n      index.sort(function(i, j) { return array[j] - array[i]; });\n      for (j = 0; j < m; ++j) array[j] = halfedges[index[j]];\n      for (j = 0; j < m; ++j) halfedges[j] = array[j];\n    }\n  }\n}\n\nexport function clipCells(x0, y0, x1, y1) {\n  var nCells = cells.length,\n      iCell,\n      cell,\n      site,\n      iHalfedge,\n      halfedges,\n      nHalfedges,\n      start,\n      startX,\n      startY,\n      end,\n      endX,\n      endY,\n      cover = true;\n\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      site = cell.site;\n      halfedges = cell.halfedges;\n      iHalfedge = halfedges.length;\n\n      // Remove any dangling clipped edges.\n      while (iHalfedge--) {\n        if (!edges[halfedges[iHalfedge]]) {\n          halfedges.splice(iHalfedge, 1);\n        }\n      }\n\n      // Insert any border edges as necessary.\n      iHalfedge = 0, nHalfedges = halfedges.length;\n      while (iHalfedge < nHalfedges) {\n        end = cellHalfedgeEnd(cell, edges[halfedges[iHalfedge]]), endX = end[0], endY = end[1];\n        start = cellHalfedgeStart(cell, edges[halfedges[++iHalfedge % nHalfedges]]), startX = start[0], startY = start[1];\n        if (Math.abs(endX - startX) > epsilon || Math.abs(endY - startY) > epsilon) {\n          halfedges.splice(iHalfedge, 0, edges.push(createBorderEdge(site, end,\n              Math.abs(endX - x0) < epsilon && y1 - endY > epsilon ? [x0, Math.abs(startX - x0) < epsilon ? startY : y1]\n              : Math.abs(endY - y1) < epsilon && x1 - endX > epsilon ? [Math.abs(startY - y1) < epsilon ? startX : x1, y1]\n              : Math.abs(endX - x1) < epsilon && endY - y0 > epsilon ? [x1, Math.abs(startX - x1) < epsilon ? startY : y0]\n              : Math.abs(endY - y0) < epsilon && endX - x0 > epsilon ? [Math.abs(startY - y0) < epsilon ? startX : x0, y0]\n              : null)) - 1);\n          ++nHalfedges;\n        }\n      }\n\n      if (nHalfedges) cover = false;\n    }\n  }\n\n  // If there weren’t any edges, have the closest site cover the extent.\n  // It doesn’t matter which corner of the extent we measure!\n  if (cover) {\n    var dx, dy, d2, dc = Infinity;\n\n    for (iCell = 0, cover = null; iCell < nCells; ++iCell) {\n      if (cell = cells[iCell]) {\n        site = cell.site;\n        dx = site[0] - x0;\n        dy = site[1] - y0;\n        d2 = dx * dx + dy * dy;\n        if (d2 < dc) dc = d2, cover = cell;\n      }\n    }\n\n    if (cover) {\n      var v00 = [x0, y0], v01 = [x0, y1], v11 = [x1, y1], v10 = [x1, y0];\n      cover.halfedges.push(\n        edges.push(createBorderEdge(site = cover.site, v00, v01)) - 1,\n        edges.push(createBorderEdge(site, v01, v11)) - 1,\n        edges.push(createBorderEdge(site, v11, v10)) - 1,\n        edges.push(createBorderEdge(site, v10, v00)) - 1\n      );\n    }\n  }\n\n  // Lastly delete any cells with no edges; these were entirely clipped.\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      if (!cell.halfedges.length) {\n        delete cells[iCell];\n      }\n    }\n  }\n}\n","import {RedBlackNode} from \"./RedBlackTree\";\nimport {circles, epsilon2} from \"./Diagram\";\n\nvar circlePool = [];\n\nexport var firstCircle;\n\nfunction Circle() {\n  RedBlackNode(this);\n  this.x =\n  this.y =\n  this.arc =\n  this.site =\n  this.cy = null;\n}\n\nexport function attachCircle(arc) {\n  var lArc = arc.P,\n      rArc = arc.N;\n\n  if (!lArc || !rArc) return;\n\n  var lSite = lArc.site,\n      cSite = arc.site,\n      rSite = rArc.site;\n\n  if (lSite === rSite) return;\n\n  var bx = cSite[0],\n      by = cSite[1],\n      ax = lSite[0] - bx,\n      ay = lSite[1] - by,\n      cx = rSite[0] - bx,\n      cy = rSite[1] - by;\n\n  var d = 2 * (ax * cy - ay * cx);\n  if (d >= -epsilon2) return;\n\n  var ha = ax * ax + ay * ay,\n      hc = cx * cx + cy * cy,\n      x = (cy * ha - ay * hc) / d,\n      y = (ax * hc - cx * ha) / d;\n\n  var circle = circlePool.pop() || new Circle;\n  circle.arc = arc;\n  circle.site = cSite;\n  circle.x = x + bx;\n  circle.y = (circle.cy = y + by) + Math.sqrt(x * x + y * y); // y bottom\n\n  arc.circle = circle;\n\n  var before = null,\n      node = circles._;\n\n  while (node) {\n    if (circle.y < node.y || (circle.y === node.y && circle.x <= node.x)) {\n      if (node.L) node = node.L;\n      else { before = node.P; break; }\n    } else {\n      if (node.R) node = node.R;\n      else { before = node; break; }\n    }\n  }\n\n  circles.insert(before, circle);\n  if (!before) firstCircle = circle;\n}\n\nexport function detachCircle(arc) {\n  var circle = arc.circle;\n  if (circle) {\n    if (!circle.P) firstCircle = circle.N;\n    circles.remove(circle);\n    circlePool.push(circle);\n    RedBlackNode(circle);\n    arc.circle = null;\n  }\n}\n","import {RedBlackNode} from \"./RedBlackTree\";\nimport {createCell} from \"./Cell\";\nimport {attachCircle, detachCircle} from \"./Circle\";\nimport {createEdge, setEdgeEnd} from \"./Edge\";\nimport {beaches, epsilon} from \"./Diagram\";\n\nvar beachPool = [];\n\nfunction Beach() {\n  RedBlackNode(this);\n  this.edge =\n  this.site =\n  this.circle = null;\n}\n\nfunction createBeach(site) {\n  var beach = beachPool.pop() || new Beach;\n  beach.site = site;\n  return beach;\n}\n\nfunction detachBeach(beach) {\n  detachCircle(beach);\n  beaches.remove(beach);\n  beachPool.push(beach);\n  RedBlackNode(beach);\n}\n\nexport function removeBeach(beach) {\n  var circle = beach.circle,\n      x = circle.x,\n      y = circle.cy,\n      vertex = [x, y],\n      previous = beach.P,\n      next = beach.N,\n      disappearing = [beach];\n\n  detachBeach(beach);\n\n  var lArc = previous;\n  while (lArc.circle\n      && Math.abs(x - lArc.circle.x) < epsilon\n      && Math.abs(y - lArc.circle.cy) < epsilon) {\n    previous = lArc.P;\n    disappearing.unshift(lArc);\n    detachBeach(lArc);\n    lArc = previous;\n  }\n\n  disappearing.unshift(lArc);\n  detachCircle(lArc);\n\n  var rArc = next;\n  while (rArc.circle\n      && Math.abs(x - rArc.circle.x) < epsilon\n      && Math.abs(y - rArc.circle.cy) < epsilon) {\n    next = rArc.N;\n    disappearing.push(rArc);\n    detachBeach(rArc);\n    rArc = next;\n  }\n\n  disappearing.push(rArc);\n  detachCircle(rArc);\n\n  var nArcs = disappearing.length,\n      iArc;\n  for (iArc = 1; iArc < nArcs; ++iArc) {\n    rArc = disappearing[iArc];\n    lArc = disappearing[iArc - 1];\n    setEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n  }\n\n  lArc = disappearing[0];\n  rArc = disappearing[nArcs - 1];\n  rArc.edge = createEdge(lArc.site, rArc.site, null, vertex);\n\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nexport function addBeach(site) {\n  var x = site[0],\n      directrix = site[1],\n      lArc,\n      rArc,\n      dxl,\n      dxr,\n      node = beaches._;\n\n  while (node) {\n    dxl = leftBreakPoint(node, directrix) - x;\n    if (dxl > epsilon) node = node.L; else {\n      dxr = x - rightBreakPoint(node, directrix);\n      if (dxr > epsilon) {\n        if (!node.R) {\n          lArc = node;\n          break;\n        }\n        node = node.R;\n      } else {\n        if (dxl > -epsilon) {\n          lArc = node.P;\n          rArc = node;\n        } else if (dxr > -epsilon) {\n          lArc = node;\n          rArc = node.N;\n        } else {\n          lArc = rArc = node;\n        }\n        break;\n      }\n    }\n  }\n\n  createCell(site);\n  var newArc = createBeach(site);\n  beaches.insert(lArc, newArc);\n\n  if (!lArc && !rArc) return;\n\n  if (lArc === rArc) {\n    detachCircle(lArc);\n    rArc = createBeach(lArc.site);\n    beaches.insert(newArc, rArc);\n    newArc.edge = rArc.edge = createEdge(lArc.site, newArc.site);\n    attachCircle(lArc);\n    attachCircle(rArc);\n    return;\n  }\n\n  if (!rArc) { // && lArc\n    newArc.edge = createEdge(lArc.site, newArc.site);\n    return;\n  }\n\n  // else lArc !== rArc\n  detachCircle(lArc);\n  detachCircle(rArc);\n\n  var lSite = lArc.site,\n      ax = lSite[0],\n      ay = lSite[1],\n      bx = site[0] - ax,\n      by = site[1] - ay,\n      rSite = rArc.site,\n      cx = rSite[0] - ax,\n      cy = rSite[1] - ay,\n      d = 2 * (bx * cy - by * cx),\n      hb = bx * bx + by * by,\n      hc = cx * cx + cy * cy,\n      vertex = [(cy * hb - by * hc) / d + ax, (bx * hc - cx * hb) / d + ay];\n\n  setEdgeEnd(rArc.edge, lSite, rSite, vertex);\n  newArc.edge = createEdge(lSite, site, null, vertex);\n  rArc.edge = createEdge(site, rSite, null, vertex);\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nfunction leftBreakPoint(arc, directrix) {\n  var site = arc.site,\n      rfocx = site[0],\n      rfocy = site[1],\n      pby2 = rfocy - directrix;\n\n  if (!pby2) return rfocx;\n\n  var lArc = arc.P;\n  if (!lArc) return -Infinity;\n\n  site = lArc.site;\n  var lfocx = site[0],\n      lfocy = site[1],\n      plby2 = lfocy - directrix;\n\n  if (!plby2) return lfocx;\n\n  var hl = lfocx - rfocx,\n      aby2 = 1 / pby2 - 1 / plby2,\n      b = hl / plby2;\n\n  if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n\n  return (rfocx + lfocx) / 2;\n}\n\nfunction rightBreakPoint(arc, directrix) {\n  var rArc = arc.N;\n  if (rArc) return leftBreakPoint(rArc, directrix);\n  var site = arc.site;\n  return site[1] === directrix ? site[0] : Infinity;\n}\n","import {addBeach, removeBeach} from \"./Beach\";\nimport {sortCellHalfedges, cellHalfedgeStart, clipCells} from \"./Cell\";\nimport {firstCircle} from \"./Circle\";\nimport {clipEdges} from \"./Edge\";\nimport RedBlackTree from \"./RedBlackTree\";\n\nexport var epsilon = 1e-6;\nexport var epsilon2 = 1e-12;\nexport var beaches;\nexport var cells;\nexport var circles;\nexport var edges;\n\nfunction triangleArea(a, b, c) {\n  return (a[0] - c[0]) * (b[1] - a[1]) - (a[0] - b[0]) * (c[1] - a[1]);\n}\n\nfunction lexicographic(a, b) {\n  return b[1] - a[1]\n      || b[0] - a[0];\n}\n\nexport default function Diagram(sites, extent) {\n  var site = sites.sort(lexicographic).pop(),\n      x,\n      y,\n      circle;\n\n  edges = [];\n  cells = new Array(sites.length);\n  beaches = new RedBlackTree;\n  circles = new RedBlackTree;\n\n  while (true) {\n    circle = firstCircle;\n    if (site && (!circle || site[1] < circle.y || (site[1] === circle.y && site[0] < circle.x))) {\n      if (site[0] !== x || site[1] !== y) {\n        addBeach(site);\n        x = site[0], y = site[1];\n      }\n      site = sites.pop();\n    } else if (circle) {\n      removeBeach(circle.arc);\n    } else {\n      break;\n    }\n  }\n\n  sortCellHalfedges();\n\n  if (extent) {\n    var x0 = +extent[0][0],\n        y0 = +extent[0][1],\n        x1 = +extent[1][0],\n        y1 = +extent[1][1];\n    clipEdges(x0, y0, x1, y1);\n    clipCells(x0, y0, x1, y1);\n  }\n\n  this.edges = edges;\n  this.cells = cells;\n\n  beaches =\n  circles =\n  edges =\n  cells = null;\n}\n\nDiagram.prototype = {\n  constructor: Diagram,\n\n  polygons: function() {\n    var edges = this.edges;\n\n    return this.cells.map(function(cell) {\n      var polygon = cell.halfedges.map(function(i) { return cellHalfedgeStart(cell, edges[i]); });\n      polygon.data = cell.site.data;\n      return polygon;\n    });\n  },\n\n  triangles: function() {\n    var triangles = [],\n        edges = this.edges;\n\n    this.cells.forEach(function(cell, i) {\n      if (!(m = (halfedges = cell.halfedges).length)) return;\n      var site = cell.site,\n          halfedges,\n          j = -1,\n          m,\n          s0,\n          e1 = edges[halfedges[m - 1]],\n          s1 = e1.left === site ? e1.right : e1.left;\n\n      while (++j < m) {\n        s0 = s1;\n        e1 = edges[halfedges[j]];\n        s1 = e1.left === site ? e1.right : e1.left;\n        if (s0 && s1 && i < s0.index && i < s1.index && triangleArea(site, s0, s1) < 0) {\n          triangles.push([site.data, s0.data, s1.data]);\n        }\n      }\n    });\n\n    return triangles;\n  },\n\n  links: function() {\n    return this.edges.filter(function(edge) {\n      return edge.right;\n    }).map(function(edge) {\n      return {\n        source: edge.left.data,\n        target: edge.right.data\n      };\n    });\n  },\n\n  find: function(x, y, radius) {\n    var that = this, i0, i1 = that._found || 0, n = that.cells.length, cell;\n\n    // Use the previously-found cell, or start with an arbitrary one.\n    while (!(cell = that.cells[i1])) if (++i1 >= n) return null;\n    var dx = x - cell.site[0], dy = y - cell.site[1], d2 = dx * dx + dy * dy;\n\n    // Traverse the half-edges to find a closer cell, if any.\n    do {\n      cell = that.cells[i0 = i1], i1 = null;\n      cell.halfedges.forEach(function(e) {\n        var edge = that.edges[e], v = edge.left;\n        if ((v === cell.site || !v) && !(v = edge.right)) return;\n        var vx = x - v[0], vy = y - v[1], v2 = vx * vx + vy * vy;\n        if (v2 < d2) d2 = v2, i1 = v.index;\n      });\n    } while (i1 !== null);\n\n    that._found = i0;\n\n    return radius == null || d2 <= radius * radius ? cell.site : null;\n  }\n}\n","import constant from \"./constant\";\nimport {x as pointX, y as pointY} from \"./point\";\nimport Diagram, {epsilon} from \"./Diagram\";\n\nexport default function() {\n  var x = pointX,\n      y = pointY,\n      extent = null;\n\n  function voronoi(data) {\n    return new Diagram(data.map(function(d, i) {\n      var s = [Math.round(x(d, i, data) / epsilon) * epsilon, Math.round(y(d, i, data) / epsilon) * epsilon];\n      s.index = i;\n      s.data = d;\n      return s;\n    }), extent);\n  }\n\n  voronoi.polygons = function(data) {\n    return voronoi(data).polygons();\n  };\n\n  voronoi.links = function(data) {\n    return voronoi(data).links();\n  };\n\n  voronoi.triangles = function(data) {\n    return voronoi(data).triangles();\n  };\n\n  voronoi.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), voronoi) : x;\n  };\n\n  voronoi.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), voronoi) : y;\n  };\n\n  voronoi.extent = function(_) {\n    return arguments.length ? (extent = _ == null ? null : [[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]], voronoi) : extent && [[extent[0][0], extent[0][1]], [extent[1][0], extent[1][1]]];\n  };\n\n  voronoi.size = function(_) {\n    return arguments.length ? (extent = _ == null ? null : [[0, 0], [+_[0], +_[1]]], voronoi) : extent && [extent[1][0] - extent[0][0], extent[1][1] - extent[0][1]];\n  };\n\n  return voronoi;\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export function Transform(k, x, y) {\n  this.k = k;\n  this.x = x;\n  this.y = y;\n}\n\nTransform.prototype = {\n  constructor: Transform,\n  scale: function(k) {\n    return k === 1 ? this : new Transform(this.k * k, this.x, this.y);\n  },\n  translate: function(x, y) {\n    return x === 0 & y === 0 ? this : new Transform(this.k, this.x + this.k * x, this.y + this.k * y);\n  },\n  apply: function(point) {\n    return [point[0] * this.k + this.x, point[1] * this.k + this.y];\n  },\n  applyX: function(x) {\n    return x * this.k + this.x;\n  },\n  applyY: function(y) {\n    return y * this.k + this.y;\n  },\n  invert: function(location) {\n    return [(location[0] - this.x) / this.k, (location[1] - this.y) / this.k];\n  },\n  invertX: function(x) {\n    return (x - this.x) / this.k;\n  },\n  invertY: function(y) {\n    return (y - this.y) / this.k;\n  },\n  rescaleX: function(x) {\n    return x.copy().domain(x.range().map(this.invertX, this).map(x.invert, x));\n  },\n  rescaleY: function(y) {\n    return y.copy().domain(y.range().map(this.invertY, this).map(y.invert, y));\n  },\n  toString: function() {\n    return \"translate(\" + this.x + \",\" + this.y + \") scale(\" + this.k + \")\";\n  }\n};\n\nexport var identity = new Transform(1, 0, 0);\n\ntransform.prototype = Transform.prototype;\n\nexport default function transform(node) {\n  return node.__zoom || identity;\n}\n","import {event} from \"d3-selection\";\n\nexport function nopropagation() {\n  event.stopImmediatePropagation();\n}\n\nexport default function() {\n  event.preventDefault();\n  event.stopImmediatePropagation();\n}\n","import {dispatch} from \"d3-dispatch\";\nimport {dragDisable, dragEnable} from \"d3-drag\";\nimport {interpolateZoom} from \"d3-interpolate\";\nimport {event, customEvent, select, mouse, touch} from \"d3-selection\";\nimport {interrupt} from \"d3-transition\";\nimport constant from \"./constant\";\nimport ZoomEvent from \"./event\";\nimport {Transform, identity} from \"./transform\";\nimport noevent, {nopropagation} from \"./noevent\";\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter() {\n  return !event.button;\n}\n\nfunction defaultExtent() {\n  var e = this, w, h;\n  if (e instanceof SVGElement) {\n    e = e.ownerSVGElement || e;\n    w = e.width.baseVal.value;\n    h = e.height.baseVal.value;\n  } else {\n    w = e.clientWidth;\n    h = e.clientHeight;\n  }\n  return [[0, 0], [w, h]];\n}\n\nfunction defaultTransform() {\n  return this.__zoom || identity;\n}\n\nfunction defaultWheelDelta() {\n  return -event.deltaY * (event.deltaMode ? 120 : 1) / 500;\n}\n\nfunction defaultTouchable() {\n  return \"ontouchstart\" in this;\n}\n\nfunction defaultConstrain(transform, extent, translateExtent) {\n  var dx0 = transform.invertX(extent[0][0]) - translateExtent[0][0],\n      dx1 = transform.invertX(extent[1][0]) - translateExtent[1][0],\n      dy0 = transform.invertY(extent[0][1]) - translateExtent[0][1],\n      dy1 = transform.invertY(extent[1][1]) - translateExtent[1][1];\n  return transform.translate(\n    dx1 > dx0 ? (dx0 + dx1) / 2 : Math.min(0, dx0) || Math.max(0, dx1),\n    dy1 > dy0 ? (dy0 + dy1) / 2 : Math.min(0, dy0) || Math.max(0, dy1)\n  );\n}\n\nexport default function() {\n  var filter = defaultFilter,\n      extent = defaultExtent,\n      constrain = defaultConstrain,\n      wheelDelta = defaultWheelDelta,\n      touchable = defaultTouchable,\n      scaleExtent = [0, Infinity],\n      translateExtent = [[-Infinity, -Infinity], [Infinity, Infinity]],\n      duration = 250,\n      interpolate = interpolateZoom,\n      gestures = [],\n      listeners = dispatch(\"start\", \"zoom\", \"end\"),\n      touchstarting,\n      touchending,\n      touchDelay = 500,\n      wheelDelay = 150,\n      clickDistance2 = 0;\n\n  function zoom(selection) {\n    selection\n        .property(\"__zoom\", defaultTransform)\n        .on(\"wheel.zoom\", wheeled)\n        .on(\"mousedown.zoom\", mousedowned)\n        .on(\"dblclick.zoom\", dblclicked)\n      .filter(touchable)\n        .on(\"touchstart.zoom\", touchstarted)\n        .on(\"touchmove.zoom\", touchmoved)\n        .on(\"touchend.zoom touchcancel.zoom\", touchended)\n        .style(\"touch-action\", \"none\")\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n  }\n\n  zoom.transform = function(collection, transform) {\n    var selection = collection.selection ? collection.selection() : collection;\n    selection.property(\"__zoom\", defaultTransform);\n    if (collection !== selection) {\n      schedule(collection, transform);\n    } else {\n      selection.interrupt().each(function() {\n        gesture(this, arguments)\n            .start()\n            .zoom(null, typeof transform === \"function\" ? transform.apply(this, arguments) : transform)\n            .end();\n      });\n    }\n  };\n\n  zoom.scaleBy = function(selection, k) {\n    zoom.scaleTo(selection, function() {\n      var k0 = this.__zoom.k,\n          k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n      return k0 * k1;\n    });\n  };\n\n  zoom.scaleTo = function(selection, k) {\n    zoom.transform(selection, function() {\n      var e = extent.apply(this, arguments),\n          t0 = this.__zoom,\n          p0 = centroid(e),\n          p1 = t0.invert(p0),\n          k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n      return constrain(translate(scale(t0, k1), p0, p1), e, translateExtent);\n    });\n  };\n\n  zoom.translateBy = function(selection, x, y) {\n    zoom.transform(selection, function() {\n      return constrain(this.__zoom.translate(\n        typeof x === \"function\" ? x.apply(this, arguments) : x,\n        typeof y === \"function\" ? y.apply(this, arguments) : y\n      ), extent.apply(this, arguments), translateExtent);\n    });\n  };\n\n  zoom.translateTo = function(selection, x, y) {\n    zoom.transform(selection, function() {\n      var e = extent.apply(this, arguments),\n          t = this.__zoom,\n          p = centroid(e);\n      return constrain(identity.translate(p[0], p[1]).scale(t.k).translate(\n        typeof x === \"function\" ? -x.apply(this, arguments) : -x,\n        typeof y === \"function\" ? -y.apply(this, arguments) : -y\n      ), e, translateExtent);\n    });\n  };\n\n  function scale(transform, k) {\n    k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], k));\n    return k === transform.k ? transform : new Transform(k, transform.x, transform.y);\n  }\n\n  function translate(transform, p0, p1) {\n    var x = p0[0] - p1[0] * transform.k, y = p0[1] - p1[1] * transform.k;\n    return x === transform.x && y === transform.y ? transform : new Transform(transform.k, x, y);\n  }\n\n  function centroid(extent) {\n    return [(+extent[0][0] + +extent[1][0]) / 2, (+extent[0][1] + +extent[1][1]) / 2];\n  }\n\n  function schedule(transition, transform, center) {\n    transition\n        .on(\"start.zoom\", function() { gesture(this, arguments).start(); })\n        .on(\"interrupt.zoom end.zoom\", function() { gesture(this, arguments).end(); })\n        .tween(\"zoom\", function() {\n          var that = this,\n              args = arguments,\n              g = gesture(that, args),\n              e = extent.apply(that, args),\n              p = center || centroid(e),\n              w = Math.max(e[1][0] - e[0][0], e[1][1] - e[0][1]),\n              a = that.__zoom,\n              b = typeof transform === \"function\" ? transform.apply(that, args) : transform,\n              i = interpolate(a.invert(p).concat(w / a.k), b.invert(p).concat(w / b.k));\n          return function(t) {\n            if (t === 1) t = b; // Avoid rounding error on end.\n            else { var l = i(t), k = w / l[2]; t = new Transform(k, p[0] - l[0] * k, p[1] - l[1] * k); }\n            g.zoom(null, t);\n          };\n        });\n  }\n\n  function gesture(that, args) {\n    for (var i = 0, n = gestures.length, g; i < n; ++i) {\n      if ((g = gestures[i]).that === that) {\n        return g;\n      }\n    }\n    return new Gesture(that, args);\n  }\n\n  function Gesture(that, args) {\n    this.that = that;\n    this.args = args;\n    this.index = -1;\n    this.active = 0;\n    this.extent = extent.apply(that, args);\n  }\n\n  Gesture.prototype = {\n    start: function() {\n      if (++this.active === 1) {\n        this.index = gestures.push(this) - 1;\n        this.emit(\"start\");\n      }\n      return this;\n    },\n    zoom: function(key, transform) {\n      if (this.mouse && key !== \"mouse\") this.mouse[1] = transform.invert(this.mouse[0]);\n      if (this.touch0 && key !== \"touch\") this.touch0[1] = transform.invert(this.touch0[0]);\n      if (this.touch1 && key !== \"touch\") this.touch1[1] = transform.invert(this.touch1[0]);\n      this.that.__zoom = transform;\n      this.emit(\"zoom\");\n      return this;\n    },\n    end: function() {\n      if (--this.active === 0) {\n        gestures.splice(this.index, 1);\n        this.index = -1;\n        this.emit(\"end\");\n      }\n      return this;\n    },\n    emit: function(type) {\n      customEvent(new ZoomEvent(zoom, type, this.that.__zoom), listeners.apply, listeners, [type, this.that, this.args]);\n    }\n  };\n\n  function wheeled() {\n    if (!filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        t = this.__zoom,\n        k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], t.k * Math.pow(2, wheelDelta.apply(this, arguments)))),\n        p = mouse(this);\n\n    // If the mouse is in the same location as before, reuse it.\n    // If there were recent wheel events, reset the wheel idle timeout.\n    if (g.wheel) {\n      if (g.mouse[0][0] !== p[0] || g.mouse[0][1] !== p[1]) {\n        g.mouse[1] = t.invert(g.mouse[0] = p);\n      }\n      clearTimeout(g.wheel);\n    }\n\n    // If this wheel event won’t trigger a transform change, ignore it.\n    else if (t.k === k) return;\n\n    // Otherwise, capture the mouse point and location at the start.\n    else {\n      g.mouse = [p, t.invert(p)];\n      interrupt(this);\n      g.start();\n    }\n\n    noevent();\n    g.wheel = setTimeout(wheelidled, wheelDelay);\n    g.zoom(\"mouse\", constrain(translate(scale(t, k), g.mouse[0], g.mouse[1]), g.extent, translateExtent));\n\n    function wheelidled() {\n      g.wheel = null;\n      g.end();\n    }\n  }\n\n  function mousedowned() {\n    if (touchending || !filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        v = select(event.view).on(\"mousemove.zoom\", mousemoved, true).on(\"mouseup.zoom\", mouseupped, true),\n        p = mouse(this),\n        x0 = event.clientX,\n        y0 = event.clientY;\n\n    dragDisable(event.view);\n    nopropagation();\n    g.mouse = [p, this.__zoom.invert(p)];\n    interrupt(this);\n    g.start();\n\n    function mousemoved() {\n      noevent();\n      if (!g.moved) {\n        var dx = event.clientX - x0, dy = event.clientY - y0;\n        g.moved = dx * dx + dy * dy > clickDistance2;\n      }\n      g.zoom(\"mouse\", constrain(translate(g.that.__zoom, g.mouse[0] = mouse(g.that), g.mouse[1]), g.extent, translateExtent));\n    }\n\n    function mouseupped() {\n      v.on(\"mousemove.zoom mouseup.zoom\", null);\n      dragEnable(event.view, g.moved);\n      noevent();\n      g.end();\n    }\n  }\n\n  function dblclicked() {\n    if (!filter.apply(this, arguments)) return;\n    var t0 = this.__zoom,\n        p0 = mouse(this),\n        p1 = t0.invert(p0),\n        k1 = t0.k * (event.shiftKey ? 0.5 : 2),\n        t1 = constrain(translate(scale(t0, k1), p0, p1), extent.apply(this, arguments), translateExtent);\n\n    noevent();\n    if (duration > 0) select(this).transition().duration(duration).call(schedule, t1, p0);\n    else select(this).call(zoom.transform, t1);\n  }\n\n  function touchstarted() {\n    if (!filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        touches = event.changedTouches,\n        started,\n        n = touches.length, i, t, p;\n\n    nopropagation();\n    for (i = 0; i < n; ++i) {\n      t = touches[i], p = touch(this, touches, t.identifier);\n      p = [p, this.__zoom.invert(p), t.identifier];\n      if (!g.touch0) g.touch0 = p, started = true;\n      else if (!g.touch1) g.touch1 = p;\n    }\n\n    // If this is a dbltap, reroute to the (optional) dblclick.zoom handler.\n    if (touchstarting) {\n      touchstarting = clearTimeout(touchstarting);\n      if (!g.touch1) {\n        g.end();\n        p = select(this).on(\"dblclick.zoom\");\n        if (p) p.apply(this, arguments);\n        return;\n      }\n    }\n\n    if (started) {\n      touchstarting = setTimeout(function() { touchstarting = null; }, touchDelay);\n      interrupt(this);\n      g.start();\n    }\n  }\n\n  function touchmoved() {\n    var g = gesture(this, arguments),\n        touches = event.changedTouches,\n        n = touches.length, i, t, p, l;\n\n    noevent();\n    if (touchstarting) touchstarting = clearTimeout(touchstarting);\n    for (i = 0; i < n; ++i) {\n      t = touches[i], p = touch(this, touches, t.identifier);\n      if (g.touch0 && g.touch0[2] === t.identifier) g.touch0[0] = p;\n      else if (g.touch1 && g.touch1[2] === t.identifier) g.touch1[0] = p;\n    }\n    t = g.that.__zoom;\n    if (g.touch1) {\n      var p0 = g.touch0[0], l0 = g.touch0[1],\n          p1 = g.touch1[0], l1 = g.touch1[1],\n          dp = (dp = p1[0] - p0[0]) * dp + (dp = p1[1] - p0[1]) * dp,\n          dl = (dl = l1[0] - l0[0]) * dl + (dl = l1[1] - l0[1]) * dl;\n      t = scale(t, Math.sqrt(dp / dl));\n      p = [(p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2];\n      l = [(l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2];\n    }\n    else if (g.touch0) p = g.touch0[0], l = g.touch0[1];\n    else return;\n    g.zoom(\"touch\", constrain(translate(t, p, l), g.extent, translateExtent));\n  }\n\n  function touchended() {\n    var g = gesture(this, arguments),\n        touches = event.changedTouches,\n        n = touches.length, i, t;\n\n    nopropagation();\n    if (touchending) clearTimeout(touchending);\n    touchending = setTimeout(function() { touchending = null; }, touchDelay);\n    for (i = 0; i < n; ++i) {\n      t = touches[i];\n      if (g.touch0 && g.touch0[2] === t.identifier) delete g.touch0;\n      else if (g.touch1 && g.touch1[2] === t.identifier) delete g.touch1;\n    }\n    if (g.touch1 && !g.touch0) g.touch0 = g.touch1, delete g.touch1;\n    if (g.touch0) g.touch0[1] = this.__zoom.invert(g.touch0[0]);\n    else g.end();\n  }\n\n  zoom.wheelDelta = function(_) {\n    return arguments.length ? (wheelDelta = typeof _ === \"function\" ? _ : constant(+_), zoom) : wheelDelta;\n  };\n\n  zoom.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant(!!_), zoom) : filter;\n  };\n\n  zoom.touchable = function(_) {\n    return arguments.length ? (touchable = typeof _ === \"function\" ? _ : constant(!!_), zoom) : touchable;\n  };\n\n  zoom.extent = function(_) {\n    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), zoom) : extent;\n  };\n\n  zoom.scaleExtent = function(_) {\n    return arguments.length ? (scaleExtent[0] = +_[0], scaleExtent[1] = +_[1], zoom) : [scaleExtent[0], scaleExtent[1]];\n  };\n\n  zoom.translateExtent = function(_) {\n    return arguments.length ? (translateExtent[0][0] = +_[0][0], translateExtent[1][0] = +_[1][0], translateExtent[0][1] = +_[0][1], translateExtent[1][1] = +_[1][1], zoom) : [[translateExtent[0][0], translateExtent[0][1]], [translateExtent[1][0], translateExtent[1][1]]];\n  };\n\n  zoom.constrain = function(_) {\n    return arguments.length ? (constrain = _, zoom) : constrain;\n  };\n\n  zoom.duration = function(_) {\n    return arguments.length ? (duration = +_, zoom) : duration;\n  };\n\n  zoom.interpolate = function(_) {\n    return arguments.length ? (interpolate = _, zoom) : interpolate;\n  };\n\n  zoom.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? zoom : value;\n  };\n\n  zoom.clickDistance = function(_) {\n    return arguments.length ? (clickDistance2 = (_ = +_) * _, zoom) : Math.sqrt(clickDistance2);\n  };\n\n  return zoom;\n}\n","export default function ZoomEvent(target, type, transform) {\n  this.target = target;\n  this.type = type;\n  this.transform = transform;\n}\n"],"sourceRoot":""}