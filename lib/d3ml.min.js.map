{"version":3,"sources":["webpack://d3ml/webpack/universalModuleDefinition","webpack://d3ml/webpack/bootstrap","webpack://d3ml/./src/visualization/defaults.js","webpack://d3ml/./src/visualization/visualization.js","webpack://d3ml/./src/visualization/circle.js","webpack://d3ml/./src/index.js","webpack://d3ml/./src/visualization/knn-visualization.js","webpack://d3ml/./src/algorithms/knn.js","webpack://d3ml/./src/algorithms/machine-learning-algorithm.js","webpack://d3ml/./node_modules/d3/dist/package.js","webpack://d3ml/./node_modules/d3-array/src/ascending.js","webpack://d3ml/./node_modules/d3-array/src/bisector.js","webpack://d3ml/./node_modules/d3-array/src/bisect.js","webpack://d3ml/./node_modules/d3-array/src/pairs.js","webpack://d3ml/./node_modules/d3-array/src/cross.js","webpack://d3ml/./node_modules/d3-array/src/descending.js","webpack://d3ml/./node_modules/d3-array/src/number.js","webpack://d3ml/./node_modules/d3-array/src/variance.js","webpack://d3ml/./node_modules/d3-array/src/deviation.js","webpack://d3ml/./node_modules/d3-array/src/extent.js","webpack://d3ml/./node_modules/d3-array/src/array.js","webpack://d3ml/./node_modules/d3-array/src/constant.js","webpack://d3ml/./node_modules/d3-array/src/identity.js","webpack://d3ml/./node_modules/d3-array/src/range.js","webpack://d3ml/./node_modules/d3-array/src/ticks.js","webpack://d3ml/./node_modules/d3-array/src/threshold/sturges.js","webpack://d3ml/./node_modules/d3-array/src/histogram.js","webpack://d3ml/./node_modules/d3-array/src/quantile.js","webpack://d3ml/./node_modules/d3-array/src/threshold/freedmanDiaconis.js","webpack://d3ml/./node_modules/d3-array/src/threshold/scott.js","webpack://d3ml/./node_modules/d3-array/src/max.js","webpack://d3ml/./node_modules/d3-array/src/mean.js","webpack://d3ml/./node_modules/d3-array/src/median.js","webpack://d3ml/./node_modules/d3-array/src/merge.js","webpack://d3ml/./node_modules/d3-array/src/min.js","webpack://d3ml/./node_modules/d3-array/src/permute.js","webpack://d3ml/./node_modules/d3-array/src/scan.js","webpack://d3ml/./node_modules/d3-array/src/shuffle.js","webpack://d3ml/./node_modules/d3-array/src/sum.js","webpack://d3ml/./node_modules/d3-array/src/transpose.js","webpack://d3ml/./node_modules/d3-array/src/zip.js","webpack://d3ml/./node_modules/d3-axis/src/array.js","webpack://d3ml/./node_modules/d3-axis/src/identity.js","webpack://d3ml/./node_modules/d3-axis/src/axis.js","webpack://d3ml/./node_modules/d3-dispatch/src/dispatch.js","webpack://d3ml/./node_modules/d3-selection/src/namespaces.js","webpack://d3ml/./node_modules/d3-selection/src/namespace.js","webpack://d3ml/./node_modules/d3-selection/src/creator.js","webpack://d3ml/./node_modules/d3-selection/src/selector.js","webpack://d3ml/./node_modules/d3-selection/src/selectorAll.js","webpack://d3ml/./node_modules/d3-selection/src/matcher.js","webpack://d3ml/./node_modules/d3-selection/src/selection/sparse.js","webpack://d3ml/./node_modules/d3-selection/src/selection/enter.js","webpack://d3ml/./node_modules/d3-selection/src/constant.js","webpack://d3ml/./node_modules/d3-selection/src/selection/data.js","webpack://d3ml/./node_modules/d3-selection/src/selection/sort.js","webpack://d3ml/./node_modules/d3-selection/src/selection/attr.js","webpack://d3ml/./node_modules/d3-selection/src/window.js","webpack://d3ml/./node_modules/d3-selection/src/selection/style.js","webpack://d3ml/./node_modules/d3-selection/src/selection/classed.js","webpack://d3ml/./node_modules/d3-selection/src/selection/text.js","webpack://d3ml/./node_modules/d3-selection/src/selection/html.js","webpack://d3ml/./node_modules/d3-selection/src/selection/raise.js","webpack://d3ml/./node_modules/d3-selection/src/selection/lower.js","webpack://d3ml/./node_modules/d3-selection/src/selection/insert.js","webpack://d3ml/./node_modules/d3-selection/src/selection/remove.js","webpack://d3ml/./node_modules/d3-selection/src/selection/clone.js","webpack://d3ml/./node_modules/d3-selection/src/selection/on.js","webpack://d3ml/./node_modules/d3-selection/src/selection/dispatch.js","webpack://d3ml/./node_modules/d3-selection/src/selection/index.js","webpack://d3ml/./node_modules/d3-selection/src/selection/select.js","webpack://d3ml/./node_modules/d3-selection/src/selection/selectAll.js","webpack://d3ml/./node_modules/d3-selection/src/selection/filter.js","webpack://d3ml/./node_modules/d3-selection/src/selection/exit.js","webpack://d3ml/./node_modules/d3-selection/src/selection/merge.js","webpack://d3ml/./node_modules/d3-selection/src/selection/order.js","webpack://d3ml/./node_modules/d3-selection/src/selection/call.js","webpack://d3ml/./node_modules/d3-selection/src/selection/nodes.js","webpack://d3ml/./node_modules/d3-selection/src/selection/node.js","webpack://d3ml/./node_modules/d3-selection/src/selection/size.js","webpack://d3ml/./node_modules/d3-selection/src/selection/empty.js","webpack://d3ml/./node_modules/d3-selection/src/selection/each.js","webpack://d3ml/./node_modules/d3-selection/src/selection/property.js","webpack://d3ml/./node_modules/d3-selection/src/selection/append.js","webpack://d3ml/./node_modules/d3-selection/src/selection/datum.js","webpack://d3ml/./node_modules/d3-selection/src/select.js","webpack://d3ml/./node_modules/d3-selection/src/create.js","webpack://d3ml/./node_modules/d3-selection/src/local.js","webpack://d3ml/./node_modules/d3-selection/src/sourceEvent.js","webpack://d3ml/./node_modules/d3-selection/src/point.js","webpack://d3ml/./node_modules/d3-selection/src/mouse.js","webpack://d3ml/./node_modules/d3-selection/src/selectAll.js","webpack://d3ml/./node_modules/d3-selection/src/touch.js","webpack://d3ml/./node_modules/d3-selection/src/touches.js","webpack://d3ml/./node_modules/d3-drag/src/noevent.js","webpack://d3ml/./node_modules/d3-drag/src/nodrag.js","webpack://d3ml/./node_modules/d3-drag/src/constant.js","webpack://d3ml/./node_modules/d3-drag/src/event.js","webpack://d3ml/./node_modules/d3-drag/src/drag.js","webpack://d3ml/./node_modules/d3-color/src/define.js","webpack://d3ml/./node_modules/d3-color/src/color.js","webpack://d3ml/./node_modules/d3-color/src/math.js","webpack://d3ml/./node_modules/d3-color/src/lab.js","webpack://d3ml/./node_modules/d3-color/src/cubehelix.js","webpack://d3ml/./node_modules/d3-interpolate/src/basis.js","webpack://d3ml/./node_modules/d3-interpolate/src/basisClosed.js","webpack://d3ml/./node_modules/d3-interpolate/src/constant.js","webpack://d3ml/./node_modules/d3-interpolate/src/color.js","webpack://d3ml/./node_modules/d3-interpolate/src/rgb.js","webpack://d3ml/./node_modules/d3-interpolate/src/array.js","webpack://d3ml/./node_modules/d3-interpolate/src/date.js","webpack://d3ml/./node_modules/d3-interpolate/src/number.js","webpack://d3ml/./node_modules/d3-interpolate/src/object.js","webpack://d3ml/./node_modules/d3-interpolate/src/string.js","webpack://d3ml/./node_modules/d3-interpolate/src/transform/parse.js","webpack://d3ml/./node_modules/d3-interpolate/src/value.js","webpack://d3ml/./node_modules/d3-interpolate/src/round.js","webpack://d3ml/./node_modules/d3-interpolate/src/transform/decompose.js","webpack://d3ml/./node_modules/d3-interpolate/src/transform/index.js","webpack://d3ml/./node_modules/d3-interpolate/src/zoom.js","webpack://d3ml/./node_modules/d3-interpolate/src/hsl.js","webpack://d3ml/./node_modules/d3-interpolate/src/lab.js","webpack://d3ml/./node_modules/d3-interpolate/src/hcl.js","webpack://d3ml/./node_modules/d3-interpolate/src/cubehelix.js","webpack://d3ml/./node_modules/d3-interpolate/src/piecewise.js","webpack://d3ml/./node_modules/d3-interpolate/src/quantize.js","webpack://d3ml/./node_modules/d3-timer/src/timer.js","webpack://d3ml/./node_modules/d3-timer/src/timeout.js","webpack://d3ml/./node_modules/d3-timer/src/interval.js","webpack://d3ml/./node_modules/d3-transition/src/transition/schedule.js","webpack://d3ml/./node_modules/d3-transition/src/interrupt.js","webpack://d3ml/./node_modules/d3-transition/src/transition/tween.js","webpack://d3ml/./node_modules/d3-transition/src/transition/interpolate.js","webpack://d3ml/./node_modules/d3-transition/src/transition/remove.js","webpack://d3ml/./node_modules/d3-transition/src/transition/selection.js","webpack://d3ml/./node_modules/d3-transition/src/transition/text.js","webpack://d3ml/./node_modules/d3-transition/src/transition/index.js","webpack://d3ml/./node_modules/d3-ease/src/linear.js","webpack://d3ml/./node_modules/d3-ease/src/quad.js","webpack://d3ml/./node_modules/d3-ease/src/cubic.js","webpack://d3ml/./node_modules/d3-transition/src/transition/select.js","webpack://d3ml/./node_modules/d3-transition/src/transition/selectAll.js","webpack://d3ml/./node_modules/d3-transition/src/transition/filter.js","webpack://d3ml/./node_modules/d3-transition/src/transition/merge.js","webpack://d3ml/./node_modules/d3-transition/src/transition/transition.js","webpack://d3ml/./node_modules/d3-transition/src/transition/on.js","webpack://d3ml/./node_modules/d3-transition/src/transition/attr.js","webpack://d3ml/./node_modules/d3-transition/src/transition/attrTween.js","webpack://d3ml/./node_modules/d3-transition/src/transition/style.js","webpack://d3ml/./node_modules/d3-transition/src/transition/styleTween.js","webpack://d3ml/./node_modules/d3-transition/src/transition/delay.js","webpack://d3ml/./node_modules/d3-transition/src/transition/duration.js","webpack://d3ml/./node_modules/d3-transition/src/transition/ease.js","webpack://d3ml/./node_modules/d3-ease/src/poly.js","webpack://d3ml/./node_modules/d3-ease/src/sin.js","webpack://d3ml/./node_modules/d3-ease/src/exp.js","webpack://d3ml/./node_modules/d3-ease/src/circle.js","webpack://d3ml/./node_modules/d3-ease/src/bounce.js","webpack://d3ml/./node_modules/d3-ease/src/back.js","webpack://d3ml/./node_modules/d3-ease/src/elastic.js","webpack://d3ml/./node_modules/d3-transition/src/selection/transition.js","webpack://d3ml/./node_modules/d3-transition/src/selection/index.js","webpack://d3ml/./node_modules/d3-transition/src/selection/interrupt.js","webpack://d3ml/./node_modules/d3-transition/src/active.js","webpack://d3ml/./node_modules/d3-brush/src/constant.js","webpack://d3ml/./node_modules/d3-brush/src/event.js","webpack://d3ml/./node_modules/d3-brush/src/noevent.js","webpack://d3ml/./node_modules/d3-brush/src/brush.js","webpack://d3ml/./node_modules/d3-chord/src/math.js","webpack://d3ml/./node_modules/d3-chord/src/chord.js","webpack://d3ml/./node_modules/d3-chord/src/array.js","webpack://d3ml/./node_modules/d3-chord/src/constant.js","webpack://d3ml/./node_modules/d3-path/src/path.js","webpack://d3ml/./node_modules/d3-chord/src/ribbon.js","webpack://d3ml/./node_modules/d3-collection/src/map.js","webpack://d3ml/./node_modules/d3-collection/src/nest.js","webpack://d3ml/./node_modules/d3-collection/src/set.js","webpack://d3ml/./node_modules/d3-collection/src/keys.js","webpack://d3ml/./node_modules/d3-collection/src/values.js","webpack://d3ml/./node_modules/d3-collection/src/entries.js","webpack://d3ml/./node_modules/d3-contour/src/array.js","webpack://d3ml/./node_modules/d3-contour/src/ascending.js","webpack://d3ml/./node_modules/d3-contour/src/area.js","webpack://d3ml/./node_modules/d3-contour/src/constant.js","webpack://d3ml/./node_modules/d3-contour/src/contains.js","webpack://d3ml/./node_modules/d3-contour/src/noop.js","webpack://d3ml/./node_modules/d3-contour/src/contours.js","webpack://d3ml/./node_modules/d3-contour/src/blur.js","webpack://d3ml/./node_modules/d3-contour/src/density.js","webpack://d3ml/./node_modules/d3-dsv/src/dsv.js","webpack://d3ml/./node_modules/d3-dsv/src/csv.js","webpack://d3ml/./node_modules/d3-dsv/src/tsv.js","webpack://d3ml/./node_modules/d3-fetch/src/blob.js","webpack://d3ml/./node_modules/d3-fetch/src/buffer.js","webpack://d3ml/./node_modules/d3-fetch/src/text.js","webpack://d3ml/./node_modules/d3-fetch/src/dsv.js","webpack://d3ml/./node_modules/d3-fetch/src/image.js","webpack://d3ml/./node_modules/d3-fetch/src/json.js","webpack://d3ml/./node_modules/d3-fetch/src/xml.js","webpack://d3ml/./node_modules/d3-force/src/center.js","webpack://d3ml/./node_modules/d3-force/src/constant.js","webpack://d3ml/./node_modules/d3-force/src/jiggle.js","webpack://d3ml/./node_modules/d3-quadtree/src/add.js","webpack://d3ml/./node_modules/d3-quadtree/src/cover.js","webpack://d3ml/./node_modules/d3-quadtree/src/quad.js","webpack://d3ml/./node_modules/d3-quadtree/src/x.js","webpack://d3ml/./node_modules/d3-quadtree/src/y.js","webpack://d3ml/./node_modules/d3-quadtree/src/quadtree.js","webpack://d3ml/./node_modules/d3-force/src/collide.js","webpack://d3ml/./node_modules/d3-quadtree/src/data.js","webpack://d3ml/./node_modules/d3-quadtree/src/extent.js","webpack://d3ml/./node_modules/d3-quadtree/src/find.js","webpack://d3ml/./node_modules/d3-quadtree/src/remove.js","webpack://d3ml/./node_modules/d3-quadtree/src/root.js","webpack://d3ml/./node_modules/d3-quadtree/src/size.js","webpack://d3ml/./node_modules/d3-quadtree/src/visit.js","webpack://d3ml/./node_modules/d3-quadtree/src/visitAfter.js","webpack://d3ml/./node_modules/d3-force/src/link.js","webpack://d3ml/./node_modules/d3-force/src/simulation.js","webpack://d3ml/./node_modules/d3-force/src/manyBody.js","webpack://d3ml/./node_modules/d3-force/src/radial.js","webpack://d3ml/./node_modules/d3-force/src/x.js","webpack://d3ml/./node_modules/d3-force/src/y.js","webpack://d3ml/./node_modules/d3-format/src/formatDecimal.js","webpack://d3ml/./node_modules/d3-format/src/exponent.js","webpack://d3ml/./node_modules/d3-format/src/formatSpecifier.js","webpack://d3ml/./node_modules/d3-format/src/formatTrim.js","webpack://d3ml/./node_modules/d3-format/src/formatPrefixAuto.js","webpack://d3ml/./node_modules/d3-format/src/defaultLocale.js","webpack://d3ml/./node_modules/d3-format/src/formatRounded.js","webpack://d3ml/./node_modules/d3-format/src/formatTypes.js","webpack://d3ml/./node_modules/d3-format/src/identity.js","webpack://d3ml/./node_modules/d3-format/src/locale.js","webpack://d3ml/./node_modules/d3-format/src/formatGroup.js","webpack://d3ml/./node_modules/d3-format/src/formatNumerals.js","webpack://d3ml/./node_modules/d3-format/src/precisionFixed.js","webpack://d3ml/./node_modules/d3-format/src/precisionPrefix.js","webpack://d3ml/./node_modules/d3-format/src/precisionRound.js","webpack://d3ml/./node_modules/d3-geo/src/adder.js","webpack://d3ml/./node_modules/d3-geo/src/math.js","webpack://d3ml/./node_modules/d3-geo/src/noop.js","webpack://d3ml/./node_modules/d3-geo/src/stream.js","webpack://d3ml/./node_modules/d3-geo/src/area.js","webpack://d3ml/./node_modules/d3-geo/src/cartesian.js","webpack://d3ml/./node_modules/d3-geo/src/bounds.js","webpack://d3ml/./node_modules/d3-geo/src/centroid.js","webpack://d3ml/./node_modules/d3-geo/src/constant.js","webpack://d3ml/./node_modules/d3-geo/src/compose.js","webpack://d3ml/./node_modules/d3-geo/src/rotation.js","webpack://d3ml/./node_modules/d3-geo/src/circle.js","webpack://d3ml/./node_modules/d3-geo/src/clip/buffer.js","webpack://d3ml/./node_modules/d3-geo/src/pointEqual.js","webpack://d3ml/./node_modules/d3-geo/src/clip/rejoin.js","webpack://d3ml/./node_modules/d3-geo/src/polygonContains.js","webpack://d3ml/./node_modules/d3-geo/src/clip/index.js","webpack://d3ml/./node_modules/d3-geo/src/clip/antimeridian.js","webpack://d3ml/./node_modules/d3-geo/src/clip/circle.js","webpack://d3ml/./node_modules/d3-geo/src/clip/line.js","webpack://d3ml/./node_modules/d3-geo/src/clip/rectangle.js","webpack://d3ml/./node_modules/d3-geo/src/clip/extent.js","webpack://d3ml/./node_modules/d3-geo/src/length.js","webpack://d3ml/./node_modules/d3-geo/src/distance.js","webpack://d3ml/./node_modules/d3-geo/src/contains.js","webpack://d3ml/./node_modules/d3-geo/src/graticule.js","webpack://d3ml/./node_modules/d3-geo/src/interpolate.js","webpack://d3ml/./node_modules/d3-geo/src/path/area.js","webpack://d3ml/./node_modules/d3-geo/src/identity.js","webpack://d3ml/./node_modules/d3-geo/src/path/bounds.js","webpack://d3ml/./node_modules/d3-geo/src/path/centroid.js","webpack://d3ml/./node_modules/d3-geo/src/path/context.js","webpack://d3ml/./node_modules/d3-geo/src/path/measure.js","webpack://d3ml/./node_modules/d3-geo/src/path/string.js","webpack://d3ml/./node_modules/d3-geo/src/path/index.js","webpack://d3ml/./node_modules/d3-geo/src/transform.js","webpack://d3ml/./node_modules/d3-geo/src/projection/fit.js","webpack://d3ml/./node_modules/d3-geo/src/projection/resample.js","webpack://d3ml/./node_modules/d3-geo/src/projection/index.js","webpack://d3ml/./node_modules/d3-geo/src/projection/conic.js","webpack://d3ml/./node_modules/d3-geo/src/projection/conicEqualArea.js","webpack://d3ml/./node_modules/d3-geo/src/projection/cylindricalEqualArea.js","webpack://d3ml/./node_modules/d3-geo/src/projection/albers.js","webpack://d3ml/./node_modules/d3-geo/src/projection/albersUsa.js","webpack://d3ml/./node_modules/d3-geo/src/projection/azimuthal.js","webpack://d3ml/./node_modules/d3-geo/src/projection/azimuthalEqualArea.js","webpack://d3ml/./node_modules/d3-geo/src/projection/azimuthalEquidistant.js","webpack://d3ml/./node_modules/d3-geo/src/projection/mercator.js","webpack://d3ml/./node_modules/d3-geo/src/projection/conicConformal.js","webpack://d3ml/./node_modules/d3-geo/src/projection/equirectangular.js","webpack://d3ml/./node_modules/d3-geo/src/projection/conicEquidistant.js","webpack://d3ml/./node_modules/d3-geo/src/projection/gnomonic.js","webpack://d3ml/./node_modules/d3-geo/src/projection/identity.js","webpack://d3ml/./node_modules/d3-geo/src/projection/naturalEarth1.js","webpack://d3ml/./node_modules/d3-geo/src/projection/orthographic.js","webpack://d3ml/./node_modules/d3-geo/src/projection/stereographic.js","webpack://d3ml/./node_modules/d3-geo/src/projection/transverseMercator.js","webpack://d3ml/./node_modules/d3-hierarchy/src/cluster.js","webpack://d3ml/./node_modules/d3-hierarchy/src/hierarchy/count.js","webpack://d3ml/./node_modules/d3-hierarchy/src/hierarchy/index.js","webpack://d3ml/./node_modules/d3-hierarchy/src/hierarchy/each.js","webpack://d3ml/./node_modules/d3-hierarchy/src/hierarchy/eachAfter.js","webpack://d3ml/./node_modules/d3-hierarchy/src/hierarchy/eachBefore.js","webpack://d3ml/./node_modules/d3-hierarchy/src/hierarchy/sum.js","webpack://d3ml/./node_modules/d3-hierarchy/src/hierarchy/sort.js","webpack://d3ml/./node_modules/d3-hierarchy/src/hierarchy/path.js","webpack://d3ml/./node_modules/d3-hierarchy/src/hierarchy/ancestors.js","webpack://d3ml/./node_modules/d3-hierarchy/src/hierarchy/descendants.js","webpack://d3ml/./node_modules/d3-hierarchy/src/hierarchy/leaves.js","webpack://d3ml/./node_modules/d3-hierarchy/src/hierarchy/links.js","webpack://d3ml/./node_modules/d3-hierarchy/src/array.js","webpack://d3ml/./node_modules/d3-hierarchy/src/pack/enclose.js","webpack://d3ml/./node_modules/d3-hierarchy/src/pack/siblings.js","webpack://d3ml/./node_modules/d3-hierarchy/src/accessors.js","webpack://d3ml/./node_modules/d3-hierarchy/src/constant.js","webpack://d3ml/./node_modules/d3-hierarchy/src/pack/index.js","webpack://d3ml/./node_modules/d3-hierarchy/src/treemap/round.js","webpack://d3ml/./node_modules/d3-hierarchy/src/treemap/dice.js","webpack://d3ml/./node_modules/d3-hierarchy/src/partition.js","webpack://d3ml/./node_modules/d3-hierarchy/src/stratify.js","webpack://d3ml/./node_modules/d3-hierarchy/src/tree.js","webpack://d3ml/./node_modules/d3-hierarchy/src/treemap/slice.js","webpack://d3ml/./node_modules/d3-hierarchy/src/treemap/squarify.js","webpack://d3ml/./node_modules/d3-hierarchy/src/treemap/index.js","webpack://d3ml/./node_modules/d3-hierarchy/src/treemap/binary.js","webpack://d3ml/./node_modules/d3-hierarchy/src/treemap/sliceDice.js","webpack://d3ml/./node_modules/d3-hierarchy/src/treemap/resquarify.js","webpack://d3ml/./node_modules/d3-polygon/src/area.js","webpack://d3ml/./node_modules/d3-polygon/src/centroid.js","webpack://d3ml/./node_modules/d3-polygon/src/cross.js","webpack://d3ml/./node_modules/d3-polygon/src/hull.js","webpack://d3ml/./node_modules/d3-polygon/src/contains.js","webpack://d3ml/./node_modules/d3-polygon/src/length.js","webpack://d3ml/./node_modules/d3-random/src/defaultSource.js","webpack://d3ml/./node_modules/d3-random/src/uniform.js","webpack://d3ml/./node_modules/d3-random/src/normal.js","webpack://d3ml/./node_modules/d3-random/src/logNormal.js","webpack://d3ml/./node_modules/d3-random/src/irwinHall.js","webpack://d3ml/./node_modules/d3-random/src/bates.js","webpack://d3ml/./node_modules/d3-random/src/exponential.js","webpack://d3ml/./node_modules/d3-scale/src/array.js","webpack://d3ml/./node_modules/d3-scale/src/ordinal.js","webpack://d3ml/./node_modules/d3-scale/src/band.js","webpack://d3ml/./node_modules/d3-scale/src/constant.js","webpack://d3ml/./node_modules/d3-scale/src/number.js","webpack://d3ml/./node_modules/d3-scale/src/continuous.js","webpack://d3ml/./node_modules/d3-scale/src/tickFormat.js","webpack://d3ml/./node_modules/d3-scale/src/linear.js","webpack://d3ml/./node_modules/d3-scale/src/identity.js","webpack://d3ml/./node_modules/d3-scale/src/nice.js","webpack://d3ml/./node_modules/d3-scale/src/log.js","webpack://d3ml/./node_modules/d3-scale/src/pow.js","webpack://d3ml/./node_modules/d3-scale/src/quantile.js","webpack://d3ml/./node_modules/d3-scale/src/quantize.js","webpack://d3ml/./node_modules/d3-scale/src/threshold.js","webpack://d3ml/./node_modules/d3-time/src/interval.js","webpack://d3ml/./node_modules/d3-time/src/millisecond.js","webpack://d3ml/./node_modules/d3-time/src/duration.js","webpack://d3ml/./node_modules/d3-time/src/second.js","webpack://d3ml/./node_modules/d3-time/src/minute.js","webpack://d3ml/./node_modules/d3-time/src/hour.js","webpack://d3ml/./node_modules/d3-time/src/day.js","webpack://d3ml/./node_modules/d3-time/src/week.js","webpack://d3ml/./node_modules/d3-time/src/month.js","webpack://d3ml/./node_modules/d3-time/src/year.js","webpack://d3ml/./node_modules/d3-time/src/utcMinute.js","webpack://d3ml/./node_modules/d3-time/src/utcHour.js","webpack://d3ml/./node_modules/d3-time/src/utcDay.js","webpack://d3ml/./node_modules/d3-time/src/utcWeek.js","webpack://d3ml/./node_modules/d3-time/src/utcMonth.js","webpack://d3ml/./node_modules/d3-time/src/utcYear.js","webpack://d3ml/./node_modules/d3-time-format/src/locale.js","webpack://d3ml/./node_modules/d3-time-format/src/defaultLocale.js","webpack://d3ml/./node_modules/d3-time-format/src/isoFormat.js","webpack://d3ml/./node_modules/d3-time-format/src/isoParse.js","webpack://d3ml/./node_modules/d3-scale/src/time.js","webpack://d3ml/./node_modules/d3-scale/src/utcTime.js","webpack://d3ml/./node_modules/d3-scale/src/sequential.js","webpack://d3ml/./node_modules/d3-scale/src/diverging.js","webpack://d3ml/./node_modules/d3-scale-chromatic/src/colors.js","webpack://d3ml/./node_modules/d3-scale-chromatic/src/categorical/category10.js","webpack://d3ml/./node_modules/d3-scale-chromatic/src/categorical/Accent.js","webpack://d3ml/./node_modules/d3-scale-chromatic/src/categorical/Dark2.js","webpack://d3ml/./node_modules/d3-scale-chromatic/src/categorical/Paired.js","webpack://d3ml/./node_modules/d3-scale-chromatic/src/categorical/Pastel1.js","webpack://d3ml/./node_modules/d3-scale-chromatic/src/categorical/Pastel2.js","webpack://d3ml/./node_modules/d3-scale-chromatic/src/categorical/Set1.js","webpack://d3ml/./node_modules/d3-scale-chromatic/src/categorical/Set2.js","webpack://d3ml/./node_modules/d3-scale-chromatic/src/categorical/Set3.js","webpack://d3ml/./node_modules/d3-scale-chromatic/src/ramp.js","webpack://d3ml/./node_modules/d3-scale-chromatic/src/diverging/BrBG.js","webpack://d3ml/./node_modules/d3-scale-chromatic/src/diverging/PRGn.js","webpack://d3ml/./node_modules/d3-scale-chromatic/src/diverging/PiYG.js","webpack://d3ml/./node_modules/d3-scale-chromatic/src/diverging/PuOr.js","webpack://d3ml/./node_modules/d3-scale-chromatic/src/diverging/RdBu.js","webpack://d3ml/./node_modules/d3-scale-chromatic/src/diverging/RdGy.js","webpack://d3ml/./node_modules/d3-scale-chromatic/src/diverging/RdYlBu.js","webpack://d3ml/./node_modules/d3-scale-chromatic/src/diverging/RdYlGn.js","webpack://d3ml/./node_modules/d3-scale-chromatic/src/diverging/Spectral.js","webpack://d3ml/./node_modules/d3-scale-chromatic/src/sequential-multi/BuGn.js","webpack://d3ml/./node_modules/d3-scale-chromatic/src/sequential-multi/BuPu.js","webpack://d3ml/./node_modules/d3-scale-chromatic/src/sequential-multi/GnBu.js","webpack://d3ml/./node_modules/d3-scale-chromatic/src/sequential-multi/OrRd.js","webpack://d3ml/./node_modules/d3-scale-chromatic/src/sequential-multi/PuBuGn.js","webpack://d3ml/./node_modules/d3-scale-chromatic/src/sequential-multi/PuBu.js","webpack://d3ml/./node_modules/d3-scale-chromatic/src/sequential-multi/PuRd.js","webpack://d3ml/./node_modules/d3-scale-chromatic/src/sequential-multi/RdPu.js","webpack://d3ml/./node_modules/d3-scale-chromatic/src/sequential-multi/YlGnBu.js","webpack://d3ml/./node_modules/d3-scale-chromatic/src/sequential-multi/YlGn.js","webpack://d3ml/./node_modules/d3-scale-chromatic/src/sequential-multi/YlOrBr.js","webpack://d3ml/./node_modules/d3-scale-chromatic/src/sequential-multi/YlOrRd.js","webpack://d3ml/./node_modules/d3-scale-chromatic/src/sequential-single/Blues.js","webpack://d3ml/./node_modules/d3-scale-chromatic/src/sequential-single/Greens.js","webpack://d3ml/./node_modules/d3-scale-chromatic/src/sequential-single/Greys.js","webpack://d3ml/./node_modules/d3-scale-chromatic/src/sequential-single/Purples.js","webpack://d3ml/./node_modules/d3-scale-chromatic/src/sequential-single/Reds.js","webpack://d3ml/./node_modules/d3-scale-chromatic/src/sequential-single/Oranges.js","webpack://d3ml/./node_modules/d3-scale-chromatic/src/sequential-multi/cubehelix.js","webpack://d3ml/./node_modules/d3-scale-chromatic/src/sequential-multi/rainbow.js","webpack://d3ml/./node_modules/d3-scale-chromatic/src/sequential-multi/sinebow.js","webpack://d3ml/./node_modules/d3-scale-chromatic/src/sequential-multi/viridis.js","webpack://d3ml/./node_modules/d3-shape/src/constant.js","webpack://d3ml/./node_modules/d3-shape/src/math.js","webpack://d3ml/./node_modules/d3-shape/src/arc.js","webpack://d3ml/./node_modules/d3-shape/src/curve/linear.js","webpack://d3ml/./node_modules/d3-shape/src/point.js","webpack://d3ml/./node_modules/d3-shape/src/line.js","webpack://d3ml/./node_modules/d3-shape/src/area.js","webpack://d3ml/./node_modules/d3-shape/src/descending.js","webpack://d3ml/./node_modules/d3-shape/src/identity.js","webpack://d3ml/./node_modules/d3-shape/src/pie.js","webpack://d3ml/./node_modules/d3-shape/src/curve/radial.js","webpack://d3ml/./node_modules/d3-shape/src/lineRadial.js","webpack://d3ml/./node_modules/d3-shape/src/areaRadial.js","webpack://d3ml/./node_modules/d3-shape/src/pointRadial.js","webpack://d3ml/./node_modules/d3-shape/src/array.js","webpack://d3ml/./node_modules/d3-shape/src/link/index.js","webpack://d3ml/./node_modules/d3-shape/src/symbol/circle.js","webpack://d3ml/./node_modules/d3-shape/src/symbol/cross.js","webpack://d3ml/./node_modules/d3-shape/src/symbol/diamond.js","webpack://d3ml/./node_modules/d3-shape/src/symbol/star.js","webpack://d3ml/./node_modules/d3-shape/src/symbol/square.js","webpack://d3ml/./node_modules/d3-shape/src/symbol/triangle.js","webpack://d3ml/./node_modules/d3-shape/src/symbol/wye.js","webpack://d3ml/./node_modules/d3-shape/src/symbol.js","webpack://d3ml/./node_modules/d3-shape/src/noop.js","webpack://d3ml/./node_modules/d3-shape/src/curve/basis.js","webpack://d3ml/./node_modules/d3-shape/src/curve/basisClosed.js","webpack://d3ml/./node_modules/d3-shape/src/curve/basisOpen.js","webpack://d3ml/./node_modules/d3-shape/src/curve/bundle.js","webpack://d3ml/./node_modules/d3-shape/src/curve/cardinal.js","webpack://d3ml/./node_modules/d3-shape/src/curve/cardinalClosed.js","webpack://d3ml/./node_modules/d3-shape/src/curve/cardinalOpen.js","webpack://d3ml/./node_modules/d3-shape/src/curve/catmullRom.js","webpack://d3ml/./node_modules/d3-shape/src/curve/catmullRomClosed.js","webpack://d3ml/./node_modules/d3-shape/src/curve/catmullRomOpen.js","webpack://d3ml/./node_modules/d3-shape/src/curve/linearClosed.js","webpack://d3ml/./node_modules/d3-shape/src/curve/monotone.js","webpack://d3ml/./node_modules/d3-shape/src/curve/natural.js","webpack://d3ml/./node_modules/d3-shape/src/curve/step.js","webpack://d3ml/./node_modules/d3-shape/src/offset/none.js","webpack://d3ml/./node_modules/d3-shape/src/order/none.js","webpack://d3ml/./node_modules/d3-shape/src/stack.js","webpack://d3ml/./node_modules/d3-shape/src/offset/expand.js","webpack://d3ml/./node_modules/d3-shape/src/offset/diverging.js","webpack://d3ml/./node_modules/d3-shape/src/offset/silhouette.js","webpack://d3ml/./node_modules/d3-shape/src/offset/wiggle.js","webpack://d3ml/./node_modules/d3-shape/src/order/ascending.js","webpack://d3ml/./node_modules/d3-shape/src/order/descending.js","webpack://d3ml/./node_modules/d3-shape/src/order/insideOut.js","webpack://d3ml/./node_modules/d3-shape/src/order/reverse.js","webpack://d3ml/./node_modules/d3-voronoi/src/constant.js","webpack://d3ml/./node_modules/d3-voronoi/src/point.js","webpack://d3ml/./node_modules/d3-voronoi/src/RedBlackTree.js","webpack://d3ml/./node_modules/d3-voronoi/src/Edge.js","webpack://d3ml/./node_modules/d3-voronoi/src/Cell.js","webpack://d3ml/./node_modules/d3-voronoi/src/Circle.js","webpack://d3ml/./node_modules/d3-voronoi/src/Beach.js","webpack://d3ml/./node_modules/d3-voronoi/src/Diagram.js","webpack://d3ml/./node_modules/d3-voronoi/src/voronoi.js","webpack://d3ml/./node_modules/d3-zoom/src/constant.js","webpack://d3ml/./node_modules/d3-zoom/src/transform.js","webpack://d3ml/./node_modules/d3-zoom/src/noevent.js","webpack://d3ml/./node_modules/d3-zoom/src/zoom.js","webpack://d3ml/./node_modules/d3-zoom/src/event.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","defaultOptions","rootNode","width","height","padding","backgroundColor","circleRadius","circleFill","circleStroke","defaultType","defaultTypes","A","B","None","defaultK","d3","_interopRequireWildcard","_circle","_interopRequireDefault","_defaults","Visualization","data","options","types","_this","this","_classCallCheck","assign","xScale","createXScale","yScale","createYScale","map","mapDataToCircle","svgId","Date","now","svg","appendSVG","result","Array","isArray","reduce","res","val","entries","entry","includes","Infinity","default","x","y","type","callbacks","_this2","document","querySelector","concat","addEventListener","e","clickCallback","target","id","_this3","isValidEventTarget","newCircle","invert","offsetX","offsetY","forEach","callback","circle","push","drawCircles","select","append","attr","style","scaleLinear","domain","min","max","range","selectAll","enter","stroke","fill","radius","cx","cy","Circle","arguments","length","undefined","_visualization","_knnVisualization","_knn","KNNVisualization","k","_possibleConstructorReturn","__proto__","getPrototypeOf","knn","addEventListeners","onClickSvg","classifyAndAddCircle","addBoundingCircle","addConnectingLines","circleType","classify","setType","_get","boundingCircle","getBoundingCircle","kClosestNeighbors","addCircle","connectingLines","getConnectingLines","drawConnectingLines","furthestNeighbor","distance","x1","x2","y1","y2","strokeWidth","_machineLearningAlgorithm","KNN","circles","a","b","Math","sqrt","pow","neighbors","filter","calculateDistance","sort","counts","findKClosestNeighbors","determineCircleType","MachineLearningAlgorithm","ascending","NaN","bisector","compare","f","ascendingComparator","left","lo","hi","mid","right","ascendingBisect","bisectRight","bisectLeft","bisect","pairs","array","pair","cross","values0","values1","i0","i1","value0","n0","n1","values","descending","number","variance","valueof","delta","mean","sum","isNaN","deviation","v","src_extent","array_array","slice","constant","identity","src_range","start","stop","step","ceil","e10","e5","e2","ticks","count","reverse","tickIncrement","isFinite","floor","power","log","LN10","error","tickStep","step0","abs","step1","sturges","LN2","src_histogram","threshold","histogram","xz","x0","tz","shift","pop","bin","bins","_","thresholds","quantile","freedmanDiaconis","scott","src_max","src_mean","median","numbers","src_merge","arrays","merged","j","src_min","permute","indexes","permutes","scan","xi","xj","shuffle","random","src_sum","src_transpose","matrix","transpose_length","transpose","row","zip","array_slice","src_identity","axis_top","axis_right","axis_bottom","axis_left","epsilon","translateX","translateY","entering","__axis","axis_axis","orient","scale","tickArguments","tickValues","tickFormat","tickSizeInner","tickSizeOuter","tickPadding","transform","axis","context","apply","format","spacing","range0","range1","position","bandwidth","offset","round","copy","selection","path","tick","order","tickExit","exit","tickEnter","line","text","merge","insert","transition","getAttribute","parentNode","remove","each","tickSize","axisTop","axisRight","axisBottom","axisLeft","noop","dispatch","Error","Dispatch","set","constructor","on","typename","T","typenames","trim","split","indexOf","parseTypenames","that","args","src_dispatch","xhtml","namespaces","xlink","xml","xmlns","namespace","prefix","space","local","creator","fullname","ownerDocument","createElementNS","uri","namespaceURI","documentElement","createElement","none","src_selector","selector","selectorAll_empty","selectorAll","querySelectorAll","matcher","matches","matcher_element","vendorMatches","webkitMatchesSelector","msMatchesSelector","mozMatchesSelector","oMatchesSelector","src_matcher","sparse","update","EnterNode","parent","datum","_next","_parent","__data__","appendChild","child","insertBefore","next","keyPrefix","bindIndex","group","node","groupLength","dataLength","bindKey","keyValue","nodeByKeyValue","keyValues","sort_ascending","src_window","defaultView","styleValue","getPropertyValue","getComputedStyle","classArray","string","classList","ClassList","_node","_names","classedAdd","names","list","add","classedRemove","setAttribute","join","splice","contains","textRemove","textContent","htmlRemove","innerHTML","raise","nextSibling","lower","previousSibling","firstChild","constantNull","removeChild","selection_cloneShallow","cloneNode","selection_cloneDeep","filterEvents","on_event","mouseenter","mouseleave","filterContextListener","listener","index","contextListener","event","related","relatedTarget","compareDocumentPosition","event1","event0","onRemove","__on","removeEventListener","capture","onAdd","wrap","customEvent","sourceEvent","dispatchEvent","params","CustomEvent","createEvent","initEvent","bubbles","cancelable","detail","selection_root","Selection","groups","parents","_groups","_parents","selection_selection","subgroups","subnode","subgroup","match","size","src_constant","enterGroup","updateGroup","previous","_enter","_exit","groups0","groups1","m0","m1","merges","group0","group1","compareNode","sortgroups","sortgroup","nodes","empty","getAttributeNS","removeAttributeNS","removeAttribute","setAttributeNS","priority","removeProperty","setProperty","classed","html","before","clone","deep","on_parseTypenames","src_selection","src_select","src_create","nextId","Local","toString","source","current","src_point","ownerSVGElement","createSVGPoint","point","clientX","clientY","matrixTransform","getScreenCTM","inverse","rect","getBoundingClientRect","clientLeft","top","clientTop","mouse","changedTouches","src_selectAll","src_touch","touches","identifier","touch","src_touches","points","nopropagation","stopImmediatePropagation","noevent","preventDefault","nodrag","view","__noselect","MozUserSelect","yesdrag","noclick","setTimeout","d3_drag_src_constant","DragEvent","subject","active","dx","dy","defaultFilter","button","defaultContainer","defaultSubject","defaultTouchable","src_drag","mousedownx","mousedowny","mousemoving","touchending","container","touchable","gestures","listeners","clickDistance2","drag","mousedowned","touchstarted","touchmoved","touchended","gesture","beforestart","mousemoved","mouseupped","clearTimeout","sublisteners","p0","clickDistance","extend","definition","Color","reI","reN","reP","reHex3","reHex6","reRgbInteger","RegExp","reRgbPercent","reRgbaInteger","reRgbaPercent","reHslPercent","reHslaPercent","named","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","color_color","toLowerCase","exec","Rgb","parseInt","rgbn","rgba","hsla","g","rgbConvert","rgb","opacity","color_rgb","hex","h","Hsl","hsl","hslConvert","hsl2rgb","m2","displayable","brighter","darker","deg2rad","PI","rad2deg","Xn","Yn","Zn","lab_t0","lab_t1","lab_t2","t3","labConvert","Lab","Hcl","cos","sin","z","rgb2lrgb","xyz2lab","lab","lab2xyz","lrgb2rgb","hclConvert","atan2","lch","hcl","C","cubehelix_D","cubehelix_E","ED","EB","BC_DA","cubehelix_cubehelix","Cubehelix","bl","cubehelixConvert","basis","t1","v0","v1","v2","v3","t2","cosh","sinh","src_basis","basisClosed","d3_interpolate_src_constant","linear","color_hue","gamma","nogamma","exponential","rgbGamma","color","end","rgbSpline","spline","colors","rgbBasis","rgbBasisClosed","src_array","nb","na","src_value","src_date","setTime","src_number","src_object","reA","reB","cssNode","cssRoot","cssView","svgNode","src_string","am","bm","bs","bi","lastIndex","q","one","string_zero","src_rgb","valueOf","src_round","degrees","decompose_identity","rotate","skewX","scaleX","scaleY","decompose","atan","interpolateTransform","parse","pxComma","pxParen","degParen","xa","ya","xb","yb","translate","interpolateTransformCss","interpolateTransformSvg","baseVal","consolidate","rho","SQRT2","zoom_cosh","exp","src_zoom","p1","S","ux0","uy0","w0","ux1","uy1","w1","d2","d1","b0","b1","r0","r1","coshr0","u","tanh","zoom_sinh","duration","hsl_hsl","hue","src_hsl","hslLong","lab_lab","hcl_hcl","src_hcl","hclLong","src_cubehelix_cubehelix","cubehelixGamma","cubehelix","src_cubehelix","cubehelixLong","piecewise_piecewise","interpolate","I","taskHead","taskTail","quantize","interpolator","samples","timer_frame","timeout","timer_interval","pokeDelay","clockLast","clockNow","clockSkew","clock","performance","setFrame","requestAnimationFrame","clearNow","Timer","_call","_time","timer","delay","time","restart","timerFlush","wake","t0","sleep","nap","poke","clearInterval","setInterval","TypeError","src_timeout","elapsed","src_interval","total","emptyOn","emptyTween","CREATED","SCHEDULED","STARTING","STARTED","RUNNING","ENDING","ENDED","transition_schedule","timing","schedules","__transition","self","tween","state","ease","schedule_create","schedule_init","schedule","schedule_get","schedule_set","interrupt","tweenValue","_id","transition_interpolate","selection_Selection","transition_id","Transition","_name","src_transition_transition","newId","selection_prototype","linear_linear","quadIn","quadOut","quadInOut","cubicIn","cubicOut","cubicInOut","children","inherit","id0","id1","on0","on1","sit","every","on_start","onFunction","attrTween","value00","value10","interpolate0","value1","_value","styleTween","style_styleRemove","styleRemoveEnd","style_styleFunction","style_styleConstant","text_textFunction","text_textConstant","removeFunction","tween0","tween1","easeConstant","polyIn","custom","exponent","polyOut","polyInOut","pi","halfPi","sinIn","sinOut","sinInOut","expIn","expOut","expInOut","circleIn","circleOut","circleInOut","bounce_b1","b2","b3","b4","b5","b6","b7","b8","b9","bounce_b0","bounceIn","bounceOut","bounceInOut","backIn","overshoot","backOut","backInOut","tau","elasticIn","asin","amplitude","period","elasticOut","elasticInOut","defaultTiming","transition_inherit","active_root","src_active","d3_brush_src_constant","src_event","noevent_nopropagation","src_noevent","MODE_DRAG","MODE_SPACE","MODE_HANDLE","MODE_CENTER","brush_X","handles","brush_type","input","output","xy","brush_Y","XY","cursors","overlay","w","nw","ne","se","sw","flipX","flipY","signsX","signsY","brush_defaultFilter","defaultExtent","brush_local","__brush","brush_empty","extent","brushSelection","dim","brushX","brush_brush","brushY","brush","handleSize","initialize","handle","redraw","started","emitter","Emitter","e0","e1","s0","s1","moving","lockX","lockY","metaKey","altKey","signX","signY","W","N","E","shifting","shiftKey","point0","emit","moved","ended","keyCode","move","point1","selection0","selection1","starting","math_pi","math_halfPi","math_tau","math_max","src_chord","padAngle","sortGroups","sortSubgroups","sortChords","chord","groupSums","groupIndex","subgroupIndex","chords","di","dj","a0","a1","subindex","startAngle","endAngle","compareValue","src_array_slice","d3_chord_src_constant","path_pi","path_tau","tauEpsilon","Path","_x0","_y0","_x1","_y1","path_path","moveTo","closePath","lineTo","quadraticCurveTo","bezierCurveTo","arcTo","y0","x21","y21","x01","y01","l01_2","x20","y20","l21_2","l20_2","l21","l01","acos","t01","t21","arc","ccw","cw","da","src_path","defaultSource","defaultTarget","defaultRadius","defaultStartAngle","defaultEndAngle","src_ribbon","ribbon","buffer","argv","sr","sa0","sa1","sx0","sy0","tr","ta0","ta1","Map","map_map","has","clear","keys","src_map","src_nest","sortValues","rollup","nest","sortKeys","depth","createResult","setResult","valuesByKey","createObject","setObject","createMap","setMap","sortKey","Set","proto","set_set","src_set","src_keys","src_values","src_entries","d3_contour_src_array_slice","src_ascending","src_area","ring","area","d3_contour_src_constant","hole","ringContains","yi","pj","yj","segmentContains","collinear","within","src_noop","cases","src_contours","smooth","smoothLinear","contours","contour","polygons","holes","fragmentByStart","fragmentByEnd","stitch","startIndex","endIndex","unshift","isorings","polygon","coordinates","xt","yt","_0","_1","blurX","blurY","defaultX","defaultY","defaultWeight","src_density","weight","density","Float32Array","wi","geometry","transformPolygon","transformRing","transformPoint","resize","cellSize","EOL","EOF","QUOTE","NEWLINE","RETURN","objectConverter","columns","Function","JSON","stringify","dsv","delimiter","reFormat","DELIMITER","charCodeAt","parseRows","rows","eof","eol","token","replace","formatRow","formatValue","test","convert","customConverter","columnSet","column","inferColumns","formatRows","csv","csvParse","csvParseRows","csvFormat","csvFormatRows","tsv","tsvParse","tsvParseRows","tsvFormat","tsvFormatRows","responseBlob","response","ok","status","statusText","blob","init","fetch","then","responseArrayBuffer","arrayBuffer","src_buffer","responseText","src_text","dsvParse","dsv_dsv","dsv_csv","dsv_tsv","src_image","Promise","resolve","reject","image","Image","onerror","onload","src","responseJson","json","parser","DOMParser","parseFromString","xml_html","src_center","force","sx","sy","d3_force_src_constant","jiggle","add_add","tree","xm","ym","xp","yp","bottom","_root","leaf","_x","_y","src_quad","x_defaultX","y_defaultY","quadtree","Quadtree","addAll","leaf_copy","treeProto","collide_x","vx","collide_y","vy","cover","yz","visit","find","x3","y3","quads","retainer","removeAll","visitAfter","collide","radii","strength","iterations","ri","ri2","prepare","quad","rj","link_index","link_find","nodeById","nodeId","links","strengths","distances","bias","link","alpha","initializeStrength","initializeDistance","simulation_x","simulation_y","initialRadius","initialAngle","src_simulation","simulation","alphaMin","alphaDecay","alphaTarget","velocityDecay","forces","stepper","fx","fy","initializeNodes","angle","initializeForce","closest","distanceMin2","distanceMax2","theta2","accumulate","distanceMin","distanceMax","theta","radial","radiuses","d3_force_src_x","d3_force_src_y","formatDecimal","toExponential","coefficient","src_exponent","re","formatSpecifier","specifier","FormatSpecifier","align","sign","symbol","zero","comma","precision","prefixExponent","defaultLocale_locale","defaultLocale_format","defaultLocale_formatPrefix","formatTrim","out","formatRounded","formatTypes","%","toFixed","toPrecision","X","toUpperCase","d3_format_src_identity","prefixes","src_locale","locale","grouping","thousands","substring","formatGroup","currency","decimal","numerals","formatNumerals","percent","newFormat","suffix","formatType","maybeSuffix","valuePrefix","valueSuffix","valueNegative","formatPrefix","defaultLocale","precisionFixed","precisionPrefix","precisionRound","adder","Adder","reset","adder_add","temp","bv","av","math_epsilon","src_math_pi","src_math_halfPi","quarterPi","src_math_tau","math_degrees","radians","math_cos","math_sin","math_sign","haversin","noop_noop","streamGeometry","stream","streamGeometryType","streamObjectType","Feature","FeatureCollection","features","Sphere","sphere","Point","MultiPoint","LineString","streamLine","MultiLineString","Polygon","streamPolygon","MultiPolygon","GeometryCollection","geometries","closed","coordinate","lineStart","lineEnd","polygonStart","polygonEnd","area_lambda00","phi00","area_lambda0","area_cosPhi0","area_sinPhi0","src_stream","areaRingSum","areaSum","areaStream","areaRingStart","areaRingEnd","areaRing","areaPointFirst","areaPoint","lambda","phi","dLambda","sdLambda","adLambda","cosPhi","sinPhi","d3_geo_src_area","cartesian_spherical","cartesian","cartesian_cartesian","spherical","cartesianDot","cartesianCross","cartesianAddInPlace","cartesianScale","vector","cartesianNormalizeInPlace","bounds_lambda0","bounds_phi0","bounds_lambda1","bounds_phi1","bounds_lambda2","bounds_lambda00","bounds_phi00","bounds_p0","ranges","bounds_range","deltaSum","boundsStream","boundsPoint","boundsLineStart","boundsLineEnd","boundsRingPoint","boundsRingStart","boundsRingEnd","bounds_linePoint","normal","inflection","phii","lambdai","antimeridian","bounds_angle","lambda0","lambda1","rangeCompare","rangeContains","W0","W1","centroid_X0","centroid_Y0","Z0","centroid_X1","centroid_Y1","Z1","X2","Y2","Z2","centroid_lambda00","centroid_phi00","centroid_x0","centroid_y0","z0","bounds","feature","deltaMax","centroidStream","centroidPoint","centroidLineStart","centroidLineEnd","centroidRingStart","centroidRingEnd","centroidPointCartesian","centroidLinePointFirst","centroidLinePoint","centroidRingPointFirst","centroidRingPoint","cz","d3_geo_src_constant","compose","rotationIdentity","rotateRadians","deltaLambda","deltaPhi","deltaGamma","rotationLambda","rotationPhiGamma","forwardRotationLambda","rotation","cosDeltaPhi","sinDeltaPhi","cosDeltaGamma","sinDeltaGamma","src_rotation","forward","circleStream","direction","cosRadius","sinRadius","src_circle","center","clip_buffer","lines","rejoin","pointEqual","Intersection","other","segments","compareIntersection","startInside","clip","segment","rejoin_link","isSubject","polygonContains_sum","polygonContains","winding","phi0","sinPhi0","cosPhi0","sinPhi1","cosPhi1","phi1","absDelta","intersection","phiArc","src_clip","pointVisible","clipLine","sink","ringBuffer","ringSink","polygonStarted","pointRing","ringStart","ringEnd","clip_compareIntersection","pointLine","clean","ringSegments","validSegment","sign0","sign1","sinLambda0Lambda1","clipAntimeridianIntersect","from","to","clip_circle","cr","smallRadius","notHemisphere","visible","intersect","two","n2","n2n2","n1n2","determinant","c1","c2","n1xn2","uu","polar","q1","code","c0","v00","point2","clip_line","ax","ay","clipMax","clipMin","clipRectangle","corner","comparePoint","ca","cb","x__","y__","v__","x_","y_","v_","first","activeStream","bufferStream","clipStream","linePoint","polygonInside","cleanInside","length_lambda0","length_sinPhi0","length_cosPhi0","clip_extent","cache","cacheStream","lengthSum","lengthStream","lengthPointFirst","lengthLineEnd","lengthPoint","cosDelta","src_length","distance_coordinates","distance_object","src_distance","containsObjectType","containsGeometry","containsGeometryType","containsPoint","containsLine","containsPolygon","ab","ringRadians","pointRadians","src_contains","graticuleX","graticuleY","graticule_graticule","X1","X0","Y1","Y0","Y","DX","DY","graticule","outline","extentMajor","extentMinor","stepMajor","stepMinor","graticule10","area_x00","area_y00","area_x0","area_y0","src_interpolate","cy0","cy1","sy1","kx0","ky0","kx1","ky1","d3_geo_src_identity","area_areaSum","area_areaRingSum","area_areaStream","area_areaRingStart","area_areaRingEnd","area_areaPointFirst","area_areaPoint","path_area","bounds_x0","bounds_y0","bounds_x1","bounds_y1","centroid_x00","centroid_y00","path_centroid_x0","path_centroid_y0","path_bounds","path_centroid_X0","path_centroid_Y0","centroid_Z0","path_centroid_X1","path_centroid_Y1","centroid_Z1","centroid_X2","centroid_Y2","centroid_Z2","centroid_centroidStream","centroid_centroidPoint","centroid_centroidLineStart","centroid_centroidLineEnd","centroid_centroidRingStart","centroid_centroidRingEnd","centroid","centroidPointFirstLine","centroidPointLine","centroidPointFirstRing","centroidPointRing","path_centroid","PathContext","_context","_radius","pointRadius","_line","_point","lengthRing","measure_x00","measure_y00","measure_x0","measure_y0","measure_lengthSum","measure_lengthStream","measure_lengthPointFirst","measure_lengthPoint","measure","PathString","_string","string_circle","projection","projectionStream","contextStream","src_transform","methods","transformer","TransformStream","fit","fitBounds","clipExtent","fitExtent","fitSize","fitWidth","fitHeight","maxDepth","cosMinDistance","resample","project","delta2","resampleLineTo","phi2","lambda2","dx2","dy2","dz","lambda00","x00","y00","a00","b00","c00","resampleStream","ringPoint","resample_resample","resampleNone","transformRadians","scaleTranslateRotate","cosAlpha","sinAlpha","ai","ci","fi","projection_projection","projectionMutator","projectAt","projectResample","projectTransform","projectRotateTransform","preclip","clip_antimeridian","postclip","recenter","transformRotate","clipAngle","conicProjection","parallels","conicEqualAreaRaw","cylindricalEqualAreaRaw","r0y","conicEqualArea","albers","projection_albersUsa","lower48Point","alaskaPoint","hawaiiPoint","lower48","alaska","hawaii","pointStream","albersUsa","streams","multiplex","azimuthalRaw","azimuthalInvert","sc","cc","azimuthalEqualAreaRaw","cxcy","azimuthalEqualArea","azimuthalEquidistantRaw","azimuthalEquidistant","mercatorRaw","mercator","mercatorProjection","reclip","tany","conicConformalRaw","conicConformal","equirectangularRaw","equirectangular","conicEquidistantRaw","gy","nx","conicEquidistant","gnomonicRaw","gnomonic","identity_scaleTranslate","kx","ky","tx","ty","projection_identity","reflectX","reflectY","naturalEarth1Raw","phi4","naturalEarth1","orthographicRaw","orthographic","stereographicRaw","stereographic","transverseMercatorRaw","transverseMercator","defaultSeparation","meanXReduce","maxYReduce","cluster","separation","nodeSize","previousNode","eachAfter","meanX","maxY","leafLeft","leafRight","count_count","hierarchy","childs","Node","valued","defaultChildren","eachBefore","computeHeight","copyData","ancestor","aNodes","ancestors","bNodes","leastCommonAncestor","descendants","leaves","d3_hierarchy_src_array_slice","enclose","array_shuffle","enclosesWeak","encloseBasis","extendBasis","enclosesWeakAll","enclosesNot","encloseBasis2","encloseBasis3","dr","encloseBasis1","r2","r21","r3","a2","a3","c3","place","intersects","score","siblings_Node","packEnclose","aa","sj","sk","pack","siblings","required","constantZero","d3_hierarchy_src_constant","pack_defaultRadius","src_pack","radiusLeaf","packChildren","translateChild","optional","treemap_round","dice","src_partition","partition","positionNode","stratify_keyPrefix","preroot","ambiguous","defaultId","defaultParentId","parentId","stratify","nodeKey","nodeByKey","tree_defaultSeparation","nextLeft","nextRight","moveSubtree","wm","wp","change","nextAncestor","vim","TreeNode","src_tree","treeRoot","firstWalk","secondWalk","sizeNode","executeShifts","midpoint","vip","vop","vom","sip","sop","sim","som","apportion","treemap_slice","squarify_phi","squarifyRatio","ratio","nodeValue","sumValue","minValue","maxValue","newRatio","minRatio","beta","squarify","src_treemap","tile","paddingStack","paddingInner","paddingTop","paddingRight","paddingBottom","paddingLeft","treemap","paddingOuter","binary","sums","valueOffset","valueTarget","valueLeft","valueRight","xk","yk","sliceDice","treemap_resquarify","resquarify","_squarify","d3_polygon_src_area","d3_polygon_src_centroid","src_cross","lexicographicOrder","computeUpperHullIndexes","hull","sortedPoints","flippedPoints","upperIndexes","lowerIndexes","skipLeft","skipRight","d3_polygon_src_contains","inside","d3_polygon_src_length","perimeter","src_defaultSource","uniform","sourceRandomUniform","randomUniform","src_normal","sourceRandomNormal","randomNormal","mu","sigma","logNormal","sourceRandomLogNormal","randomLogNormal","irwinHall","sourceRandomIrwinHall","randomIrwinHall","bates","sourceRandomBates","randomBates","src_exponential","sourceRandomExponential","randomExponential","d3_scale_src_array_array","array_map","d3_scale_src_array_slice","implicit","ordinal","unknown","band","ordinalRange","rescale","rangeRound","band_point","pointish","d3_scale_src_constant","d3_scale_src_number","unit","deinterpolateLinear","bimap","deinterpolate","reinterpolate","d0","polymap","clamp","continuous","piecewise","deinterpolateClamp","reinterpolateClamp","src_tickFormat","linearish","nice","src_linear_linear","identity_identity","interval","log_deinterpolate","log_reinterpolate","pow10","powp","base","logp","log10","log2","reflect","log_log","logs","pows","pow_raise","pow_pow","pow_sqrt","quantile_quantile","invertExtent","quantiles","quantize_quantize","threshold_threshold","interval_t0","interval_t1","newInterval","floori","offseti","field","date","millisecond_millisecond","src_millisecond","milliseconds","durationMinute","durationWeek","second_second","getUTCSeconds","seconds","minute_minute","getMinutes","minutes","hour_hour","getTimezoneOffset","getHours","src_hour","hours","day_day","setHours","setDate","getDate","src_day","days","weekday","getDay","sunday","monday","tuesday","wednesday","thursday","friday","saturday","sundays","mondays","tuesdays","wednesdays","thursdays","fridays","saturdays","month_month","setMonth","getMonth","getFullYear","src_month","months","year_year","setFullYear","src_year","years","utcMinute","setUTCSeconds","getUTCMinutes","src_utcMinute","utcMinutes","utcHour","setUTCMinutes","getUTCHours","src_utcHour","utcHours","utcDay","setUTCHours","setUTCDate","getUTCDate","utcDays","utcWeekday","getUTCDay","utcSunday","utcMonday","utcTuesday","utcWednesday","utcThursday","utcFriday","utcSaturday","utcSundays","utcMondays","utcTuesdays","utcWednesdays","utcThursdays","utcFridays","utcSaturdays","utcMonth","setUTCMonth","getUTCMonth","getUTCFullYear","src_utcMonth","utcMonths","utcYear","setUTCFullYear","src_utcYear","utcYears","localDate","H","M","L","utcDate","UTC","newYear","formatLocale","locale_dateTime","dateTime","locale_date","locale_time","locale_periods","periods","locale_weekdays","locale_shortWeekdays","shortDays","locale_months","locale_shortMonths","shortMonths","periodRe","formatRe","periodLookup","formatLookup","weekdayRe","weekdayLookup","shortWeekdayRe","shortWeekdayLookup","monthRe","monthLookup","shortMonthRe","shortMonthLookup","formats","formatDayOfMonth","formatMicroseconds","formatHour24","formatHour12","formatDayOfYear","formatMilliseconds","formatMonthNumber","formatMinutes","Q","formatUnixTimestamp","formatUnixTimestampSeconds","formatSeconds","formatWeekdayNumberMonday","U","formatWeekNumberSunday","V","formatWeekNumberISO","formatWeekdayNumberSunday","formatWeekNumberMonday","locale_formatYear","formatFullYear","Z","formatZone","formatLiteralPercent","utcFormats","formatUTCDayOfMonth","formatUTCMicroseconds","formatUTCHour24","formatUTCHour12","formatUTCDayOfYear","formatUTCMilliseconds","formatUTCMonthNumber","formatUTCMinutes","formatUTCSeconds","formatUTCWeekdayNumberMonday","formatUTCWeekNumberSunday","formatUTCWeekNumberISO","formatUTCWeekdayNumberSunday","formatUTCWeekNumberMonday","formatUTCYear","formatUTCFullYear","formatUTCZone","parses","parseSpecifier","parseDayOfMonth","parseMicroseconds","parseHour24","parseDayOfYear","parseMilliseconds","parseMonthNumber","parseMinutes","parseUnixTimestamp","parseUnixTimestampSeconds","parseSeconds","parseWeekdayNumberMonday","parseWeekNumberSunday","parseWeekNumberISO","parseWeekdayNumberSunday","parseWeekNumberMonday","parseYear","parseFullYear","parseZone","parseLiteralPercent","pad","pads","charAt","newParse","newDate","week","day","src_utcDay","utcFormat","utcParse","src_defaultLocale_locale","timeFormat","timeParse","-","0","numberRe","percentRe","requoteRe","requote","getMilliseconds","getSeconds","getUTCMilliseconds","dow","defaultLocale_defaultLocale","isoFormat","toISOString","isoParse","time_durationSecond","time_durationMinute","time_durationHour","time_durationDay","time_durationWeek","durationMonth","durationYear","time_date","time_number","calendar","year","month","hour","minute","second","millisecond","formatMillisecond","formatSecond","formatMinute","formatHour","formatDay","formatWeek","formatMonth","formatYear","tickIntervals","tickInterval","src_time","src_minute","src_second","utcTime","sequential","k10","diverging","k21","src_colors","category10","Accent","Dark2","Paired","Pastel1","Pastel2","Set1","Set2","Set3","ramp","scheme","BrBG_scheme","BrBG","PRGn_scheme","PRGn","PiYG_scheme","PiYG","PuOr_scheme","PuOr","RdBu_scheme","RdBu","RdGy_scheme","RdGy","RdYlBu_scheme","RdYlBu","RdYlGn_scheme","RdYlGn","Spectral_scheme","Spectral","BuGn_scheme","BuGn","BuPu_scheme","BuPu","GnBu_scheme","GnBu","OrRd_scheme","OrRd","PuBuGn_scheme","PuBuGn","PuBu_scheme","PuBu","PuRd_scheme","PuRd","RdPu_scheme","RdPu","YlGnBu_scheme","YlGnBu","YlGn_scheme","YlGn","YlOrBr_scheme","YlOrBr","YlOrRd_scheme","YlOrRd","Blues_scheme","Blues","Greens_scheme","Greens","Greys_scheme","Greys","Purples_scheme","Purples","Reds_scheme","Reds","Oranges_scheme","Oranges","sequential_multi_cubehelix","warm","cool","rainbow_c","rainbow","ts","sinebow_c","pi_1_3","pi_2_3","sinebow","viridis_ramp","magma","inferno","plasma","d3_shape_src_constant","math_abs","math_atan2","src_math_cos","src_math_max","math_min","src_math_sin","math_sqrt","src_math_epsilon","d3_shape_src_math_pi","d3_shape_src_math_halfPi","d3_shape_src_math_tau","math_asin","arcInnerRadius","innerRadius","arcOuterRadius","outerRadius","arcStartAngle","arcEndAngle","arcPadAngle","cornerTangents","rc","ox","oy","x11","y11","x10","y10","D","cx0","cx1","dx0","dy0","dx1","dy1","src_arc","cornerRadius","padRadius","a01","a11","a10","da0","da1","ap","rp","rc0","rc1","oc","x32","y32","arc_intersect","bx","by","kc","math_acos","lc","Linear","areaStart","areaEnd","curve_linear","point_x","point_y","defined","curve","defined0","d3_shape_src_area","x0z","y0z","arealine","src_line","lineX0","lineY0","lineY1","lineX1","src_descending","d3_shape_src_identity","src_pie","pie","arcs","pa","curveRadialLinear","curveRadial","Radial","_curve","lineRadial","src_lineRadial","lineStartAngle","lineEndAngle","lineInnerRadius","lineOuterRadius","pointRadial","d3_shape_src_array_slice","linkSource","linkTarget","link_link","curveHorizontal","curveVertical","link_curveRadial","p2","p3","linkHorizontal","linkVertical","linkRadial","symbol_circle","draw","symbol_cross","tan30","tan30_2","diamond","kr","star_kx","star_ky","star","square","sqrt3","triangle","wye_s","wye_k","wye_a","wye","symbols","src_symbol","d3_shape_src_noop","basis_point","Basis","curve_basis","BasisClosed","_x2","_x3","_x4","_y2","_y3","_y4","curve_basisClosed","BasisOpen","basisOpen","Bundle","_basis","_beta","curve_bundle","bundle","cardinal_point","_k","Cardinal","tension","cardinal","CardinalClosed","_x5","_y5","cardinalClosed","CardinalOpen","cardinalOpen","catmullRom_point","_l01_a","_l01_2a","_l12_a","_l12_2a","_l23_a","_l23_2a","CatmullRom","_alpha","x23","y23","curve_catmullRom","catmullRom","CatmullRomClosed","catmullRomClosed","CatmullRomOpen","catmullRomOpen","LinearClosed","linearClosed","monotone_sign","slope3","h0","h1","slope2","monotone_point","MonotoneX","MonotoneY","ReflectContext","monotoneX","monotoneY","Natural","controlPoints","_t0","px","py","natural","Step","_t","curve_step","stepBefore","stepAfter","offset_none","series","order_none","stackValue","src_stack","stack","oz","kz","sz","sij","ki","si","expand","offset_diverging","yn","silhouette","wiggle","s2","sij0","s3","order_ascending","ascending_sum","order_descending","insideOut","tops","bottoms","order_reverse","d3_voronoi_src_constant","src_point_x","src_point_y","RedBlackTree","RedBlackNode","R","P","RedBlackRotateLeft","RedBlackRotateRight","RedBlackFirst","after","grandpa","uncle","sibling","src_RedBlackTree","createEdge","edge","Diagram_edges","setEdgeEnd","cells","halfedges","createBorderEdge","vertex","clipEdge","connectEdge","fm","fb","lx","ly","rx","ry","cellHalfedgeAngle","cell","site","va","vb","cellHalfedgeStart","cellHalfedgeEnd","firstCircle","circlePool","attachCircle","lArc","rArc","lSite","cSite","rSite","Diagram_epsilon2","ha","hc","Diagram_circles","detachCircle","beachPool","createBeach","beach","detachBeach","beaches","removeBeach","disappearing","Diagram_epsilon","iArc","nArcs","addBeach","dxl","dxr","directrix","leftBreakPoint","rightBreakPoint","createCell","newArc","hb","rfocx","rfocy","pby2","lfocx","lfocy","plby2","hl","aby2","triangleArea","lexicographic","Diagram","sites","sortCellHalfedges","clipEdges","iCell","iHalfedge","nHalfedges","startX","startY","endX","endY","nCells","dc","v01","v11","v10","clipCells","edges","triangles","_found","src_voronoi","voronoi","d3_zoom_src_constant","Transform","applyX","applyY","location","invertX","invertY","rescaleX","rescaleY","transform_identity","transform_transform","__zoom","src_noevent_nopropagation","d3_zoom_src_noevent","zoom_defaultFilter","zoom_defaultExtent","SVGElement","clientWidth","clientHeight","defaultTransform","defaultWheelDelta","deltaY","deltaMode","zoom_defaultTouchable","defaultConstrain","translateExtent","d3_zoom_src_zoom","touchstarting","constrain","wheelDelta","scaleExtent","touchDelay","wheelDelay","zoom","wheeled","dblclicked","Gesture","wheel","k1","touch0","touch1","l0","l1","dp","dl","collection","scaleBy","scaleTo","translateBy","translateTo"],"mappings":"CAAA,SAAAA,EAAAC,GACA,iBAAAC,SAAA,iBAAAC,OACAA,OAAAD,QAAAD,IACA,mBAAAG,eAAAC,IACAD,OAAA,UAAAH,GACA,iBAAAC,QACAA,QAAA,KAAAD,IAEAD,EAAA,KAAAC,IARA,CASCK,OAAA,WACD,mBCTA,IAAAC,KAGA,SAAAC,EAAAC,GAGA,GAAAF,EAAAE,GACA,OAAAF,EAAAE,GAAAP,QAGA,IAAAC,EAAAI,EAAAE,IACAC,EAAAD,EACAE,GAAA,EACAT,YAUA,OANAU,EAAAH,GAAAI,KAAAV,EAAAD,QAAAC,IAAAD,QAAAM,GAGAL,EAAAQ,GAAA,EAGAR,EAAAD,QA0DA,OArDAM,EAAAM,EAAAF,EAGAJ,EAAAO,EAAAR,EAGAC,EAAAQ,EAAA,SAAAd,EAAAe,EAAAC,GACAV,EAAAW,EAAAjB,EAAAe,IACAG,OAAAC,eAAAnB,EAAAe,GAA0CK,YAAA,EAAAC,IAAAL,KAK1CV,EAAAgB,EAAA,SAAAtB,GACA,oBAAAuB,eAAAC,aACAN,OAAAC,eAAAnB,EAAAuB,OAAAC,aAAwDC,MAAA,WAExDP,OAAAC,eAAAnB,EAAA,cAAiDyB,OAAA,KAQjDnB,EAAAoB,EAAA,SAAAD,EAAAE,GAEA,GADA,EAAAA,IAAAF,EAAAnB,EAAAmB,IACA,EAAAE,EAAA,OAAAF,EACA,KAAAE,GAAA,iBAAAF,QAAAG,WAAA,OAAAH,EACA,IAAAI,EAAAX,OAAAY,OAAA,MAGA,GAFAxB,EAAAgB,EAAAO,GACAX,OAAAC,eAAAU,EAAA,WAAyCT,YAAA,EAAAK,UACzC,EAAAE,GAAA,iBAAAF,EAAA,QAAAM,KAAAN,EAAAnB,EAAAQ,EAAAe,EAAAE,EAAA,SAAAA,GAAgH,OAAAN,EAAAM,IAAqBC,KAAA,KAAAD,IACrI,OAAAF,GAIAvB,EAAA2B,EAAA,SAAAhC,GACA,IAAAe,EAAAf,KAAA2B,WACA,WAA2B,OAAA3B,EAAA,SAC3B,WAAiC,OAAAA,GAEjC,OADAK,EAAAQ,EAAAE,EAAA,IAAAA,GACAA,GAIAV,EAAAW,EAAA,SAAAiB,EAAAC,GAAsD,OAAAjB,OAAAkB,UAAAC,eAAA1B,KAAAuB,EAAAC,IAGtD7B,EAAAgC,EAAA,GAIAhC,IAAAiC,EAAA,oGClFA,OAqBEC,gBApBAC,SAAU,OACVC,MAAO,IACPC,OAAQ,IACRC,QAAS,GACTC,gBAAiB,UACjBC,aAAc,EACdC,WAAY,SACZC,aAAc,SAcdC,YAZkB,OAalBC,cAVAC,EAAG,IACHC,EAAG,IACHC,KAAM,QASNC,SANe,mIClBjB,IAAAC,ySAAAC,CAAAlD,EAAA,IACAmD,mDAAAC,CAAApD,EAAA,IACAqD,EAAArD,EAAA,6KAEqBsD,aACnB,SAAAA,EAAYC,EAAMC,EAASC,GAAO,IAAAC,EAAAC,kGAAAC,CAAAD,KAAAL,GAChCK,KAAKH,QAAU5C,OAAOiD,UAAPR,EAAAnB,eAAkCsB,GACjDG,KAAKF,MAAQ7C,OAAOiD,UAAPR,EAAAT,aAAgCa,GAC7CE,KAAKG,OAASH,KAAKI,aAAaR,GAChCI,KAAKK,OAASL,KAAKM,aAAaV,GAChCI,KAAKJ,KAAOA,EAAKW,IAAI,SAAA1D,GAAA,OAAKkD,EAAKS,gBAAgB3D,KAC/CmD,KAAKS,MAAQ,QAAUC,KAAKC,MAC5BX,KAAKY,IAAMZ,KAAKa,wGAELjB,GACX,IAAIkB,GAAS,EAgBb,OAfMlB,GAAQmB,MAAMC,QAAQpB,KAC1BkB,EAASlB,EAAKqB,OAAO,SAACC,EAAKC,GACzB,OAAOlE,OAAOmE,QAAQD,GAAKF,OAAO,SAACH,EAAQO,GACzC,IAAMvD,EAAMuD,EAAM,GACZF,EAAME,EAAM,GAElB,OAAOP,IACJ,IAAK,KAAKQ,SAASxD,IACL,iBAARqD,GACPA,IAAQI,KACRJ,KAASI,MACV,KACF,IAGET,0CAEOlB,GACd,OAAO,IAAAJ,EAAAgC,QACLxB,KAAKG,OAAOP,EAAK6B,GACjBzB,KAAKK,OAAOT,EAAK8B,GACjB1B,KAAKH,QAAQhB,aACbmB,KAAKH,QAAQf,WACbkB,KAAKH,QAAQd,aACba,EAAK+B,yCAEEC,GAAW,IAAAC,EAAA7B,KACpB8B,SAASC,cAAT,IAAAC,OAA2BhC,KAAKS,QAASwB,iBAAiB,QAAS,SAACC,GAClEL,EAAKM,cAAcD,EAAGN,gDAGPM,GACjB,QAASA,EAAEE,QAAUF,EAAEE,OAAOC,KAAOrC,KAAKS,4CAE9ByB,EAAGN,GAAW,IAAAU,EAAAtC,KAC1B,GAAIA,KAAKuC,mBAAmBL,GAAI,CAC9B,IAAMM,EAAYxC,KAAKQ,iBAAiBiB,EAAGzB,KAAKG,OAAOsC,OAAOP,EAAEQ,SAAUhB,EAAG1B,KAAKK,OAAOoC,OAAOP,EAAES,WAClGf,EAAUgB,QAAQ,SAAAC,GAChBA,EAASnG,KAAK4F,EAAME,wCAIhBM,GACR9C,KAAKJ,KAAKmD,KAAKD,GACf9C,KAAKgD,kDAGL,OAAO1D,EAAG2D,OAAOjD,KAAKH,QAAQrB,UAC3B0E,OAAO,OACPC,KAAK,KAAMnD,KAAKS,OAChB0C,KAAK,QAASnD,KAAKH,QAAQpB,OAC3B0E,KAAK,SAAUnD,KAAKH,QAAQnB,QAC5B0E,MAAM,mBAAoBpD,KAAKH,QAAQjB,sDAE/BgB,GACX,OAAON,EAAG+D,cACPC,QACChE,EAAGiE,IAAI3D,EAAM,SAAU/C,GAAK,OAAOA,EAAE4E,IAAQzB,KAAKH,QAAQlB,QAC1DW,EAAGkE,IAAI5D,EAAM,SAAU/C,GAAK,OAAOA,EAAE4E,IAAQzB,KAAKH,QAAQlB,UAE3D8E,OAAO,EAAGzD,KAAKH,QAAQpB,6CAEfmB,GACX,OAAON,EAAG+D,cACPC,QACChE,EAAGiE,IAAI3D,EAAM,SAAU/C,GAAK,OAAOA,EAAE6E,IAAQ1B,KAAKH,QAAQlB,QAC1DW,EAAGkE,IAAI5D,EAAM,SAAU/C,GAAK,OAAOA,EAAE6E,IAAQ1B,KAAKH,QAAQlB,UAE3D8E,OAAO,EAAGzD,KAAKH,QAAQnB,+CAG1BsB,KAAKY,IAAI8C,UAAU,UAChB9D,KAAKI,KAAKJ,MACV+D,QAAQT,OAAO,UACfE,MAAM,SAAU,SAAUvG,GAAK,OAAOA,EAAE+G,SACxCR,MAAM,OAAQ,SAAUvG,GAAK,OAAOA,EAAEgH,OACtCV,KAAK,IAAK,SAAUtG,GAAK,OAAOA,EAAEiH,SAClCX,KAAK,KAAM,SAAUtG,GAAK,OAAOA,EAAEkH,KACnCZ,KAAK,KAAM,SAAUtG,GAAK,OAAOA,EAAEmH,oCAGtChE,KAAKgD,uJCjGT,IAAAtD,EAAArD,EAAA,6KAEqB4H,aACnB,SAAAA,EAAYF,EACAC,GAKV,IAJUF,EAIVI,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAJmBxE,EAAAnB,eAAeM,aACxBgF,EAGVK,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAHiBxE,EAAAnB,eAAeO,WACtB8E,EAEVM,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAFmBxE,EAAAnB,eAAeQ,aACxB4C,EACVuC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAAxE,EAAAV,yGAAAiB,CAAAD,KAAAiE,GACAjE,KAAK+D,GAAKA,EACV/D,KAAKgE,GAAKA,EACVhE,KAAK8D,OAASA,EACd9D,KAAK6D,KAAOA,EACZ7D,KAAK4D,OAASA,EACd5D,KAAK2B,KAAOA,yFAENkC,GACN7D,KAAK6D,KAAOA,oCAEJD,GACR5D,KAAK4D,OAASA,kCAERjC,GACN3B,KAAK2B,KAAOA,iTCxBhB,IAAA0C,EAAA5E,EAAApD,EAAA,IACAiI,EAAA7E,EAAApD,EAAA,wJCDA,IAAAmD,EAAAC,EAAApD,EAAA,IACAqD,EAAArD,EAAA,GACAgI,EAAA5E,EAAApD,EAAA,IACAkI,EAAA9E,EAAApD,EAAA,yoCAEqBmI,cACnB,SAAAA,EAAY5E,EAAMC,GAA8B,IAAAE,EAArB0E,EAAqBP,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAAxE,EAAAL,SAAPS,EAAOoE,UAAA,sGAAAjE,CAAAD,KAAAwE,IAC9CzE,EAAA2E,EAAA1E,MAAAwE,EAAAG,WAAA1H,OAAA2H,eAAAJ,IAAA9H,KAAAsD,KAAMJ,EAAMC,KACPgF,IAAM,IAAAN,EAAA/C,QAAQzB,EAAKH,KAAM6E,EAAG3E,GACjCC,EAAK+E,oBAHyC/E,qVAM9CC,KAAK+E,YAAY/E,KAAKgF,qBAAsBhF,KAAKiF,kBAAmBjF,KAAKkF,kEAEtDpC,GACnB,IAAMqC,EAAanF,KAAK6E,IAAIO,SAAStC,GACrCA,EAAOuC,QAAQF,GACfG,EAAAd,EAAArG,UAAAwG,WAAA1H,OAAA2H,eAAAJ,EAAArG,WAAA,YAAA6B,MAAAtD,KAAAsD,KAAgB8C,6CAEAA,GAChB,IAAMyC,EAAiBvF,KAAKwF,kBAAkB1C,EAAQ9C,KAAK6E,IAAIY,kBAAkBzF,KAAK6E,IAAIJ,EAAI,IAC9FzE,KAAK0F,UAAUH,GACfvF,KAAKgD,yDAEYF,GACjB,IAAM6C,EAAkB3F,KAAK4F,mBAAmB9C,GAChD9C,KAAK6F,oBAAoBF,6CAET7C,EAAQgD,GACxB,IAAMhC,EAASgC,EAAiBC,SAAW/F,KAAKH,QAAQhB,aAExD,OAAO,IAAAW,EAAAgC,QAAWsB,EAAOiB,GAAIjB,EAAOkB,GAAIF,EAAQ,cAAe,oDAE9ChB,GACjB,OAAO9C,KAAK6E,IAAIY,kBAAkBlF,IAAI,SAAAvC,GACpC,OACEgI,GAAIhI,EAAE+F,GACNkC,GAAInD,EAAOiB,GACXmC,GAAIlI,EAAEgG,GACNmC,GAAIrD,EAAOkB,GACXoC,YAAa,EACbxC,OAAQ,uEAIM+B,GAClB3F,KAAKY,IAAI8C,UAAU,QAChB9D,KAAK+F,GACLhC,QAAQT,OAAO,QACfE,MAAM,SAAU,SAAUvG,GAAK,OAAOA,EAAE+G,SACxCT,KAAK,eAAgB,SAAUtG,GAAK,OAAOA,EAAEuJ,cAC7CjD,KAAK,KAAM,SAAUtG,GAAK,OAAOA,EAAEmJ,KACnC7C,KAAK,KAAM,SAAUtG,GAAK,OAAOA,EAAEqJ,KACnC/C,KAAK,KAAM,SAAUtG,GAAK,OAAOA,EAAEoJ,KACnC9C,KAAK,KAAM,SAAUtG,GAAK,OAAOA,EAAEsJ,KACnChD,KAAK,QAAS,mJCvDrB,IAAAkD,mDAAA5G,CAAApD,EAAA,IACAqD,EAAArD,EAAA,6qBAEqBiK,cACnB,SAAAA,EAAYC,EAAS9B,GAAyB,IAAA1E,EAAtBD,EAAsBoE,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAAxE,EAAAT,aAAA,mGAAAgB,CAAAD,KAAAsG,IAC5CvG,EAAA2E,EAAA1E,MAAAsG,EAAA3B,WAAA1H,OAAA2H,eAAA0B,IAAA5J,KAAAsD,KAAMuG,KACD9B,EAAIA,EACT1E,EAAKD,MAAQA,EACbC,EAAK0F,kBAAoB,KAJmB1F,mVAM5ByG,EAAGC,GACnB,OAAOC,KAAKC,KAAKD,KAAKE,IAAKH,EAAE1C,GAAKyC,EAAEzC,GAAK,GAAK2C,KAAKE,IAAKH,EAAEzC,GAAKwC,EAAExC,GAAK,kDAElDxB,EAAWqE,EAAWpC,GAAG,IAAA5C,EAAA7B,KAC7C,OAAO6G,EAAUC,OAAO,SAAA9I,GAAA,OAAKA,IAAMwE,IAChCjC,IAAI,SAAAvC,GAGH,OAFAA,EAAE+H,SAAWlE,EAAKkF,kBAAkB/I,EAAGwE,GAEhCxE,IAERgJ,KAAK,SAACR,EAAGC,GAAJ,OAAUD,EAAET,SAAWU,EAAEV,WAC9Be,OAAO,SAAC9I,EAAGzB,GAAJ,OAAUA,EAAIkI,gDAENgB,GAClB,IAAMwB,KAMN,OALAxB,EAAkBlF,IAAI,SAAAvC,GAAA,OAAKA,EAAE2D,OAC1BiB,QAAQ,SAAAjB,GACPsF,EAAOtF,GAAQsF,EAAOtF,GAAQsF,EAAOtF,GAAQ,EAAI,IAG9C1E,OAAOmE,QAAQ6F,GAAQD,KAAK,SAACR,EAAGC,GAAJ,OAAUD,EAAE,GAAKC,EAAE,KAAI,GAAG,oCAEtDjE,GAIP,OAHAxC,KAAKyF,kBAAoBzF,KAAKkH,sBAAsB1E,EAAWxC,KAAKuG,QAASvG,KAAKyE,GAClFzE,KAAK0F,UAAUlD,GAERxC,KAAKmH,oBAAoBnH,KAAKyF,sUCpCpB2B,aACnB,SAAAA,EAAYb,gGAAStG,CAAAD,KAAAoH,GACnBpH,KAAKuG,QAAUA,2FAEP3J,GACRoD,KAAKuG,QAAQxD,KAAKnG,iFCLtB,ICAAyK,EAAA,SAAAb,EAAAC,GACA,OAAAD,EAAAC,GAAA,EAAAD,EAAAC,EAAA,EAAAD,GAAAC,EAAA,EAAAa,KCCAC,EAAA,SAAAC,GAEA,OADA,IAAAA,EAAArD,SAAAqD,EAyBA,SAAAC,GACA,gBAAA5K,EAAA4E,GACA,OAAA4F,EAAAI,EAAA5K,GAAA4E,IA3BAiG,CAAAF,KAEAG,KAAA,SAAAnB,EAAA/E,EAAAmG,EAAAC,GAGA,IAFA,MAAAD,MAAA,GACA,MAAAC,MAAArB,EAAArC,QACAyD,EAAAC,GAAA,CACA,IAAAC,EAAAF,EAAAC,IAAA,EACAL,EAAAhB,EAAAsB,GAAArG,GAAA,EAAAmG,EAAAE,EAAA,EACAD,EAAAC,EAEA,OAAAF,GAEAG,MAAA,SAAAvB,EAAA/E,EAAAmG,EAAAC,GAGA,IAFA,MAAAD,MAAA,GACA,MAAAC,MAAArB,EAAArC,QACAyD,EAAAC,GAAA,CACA,IAAAC,EAAAF,EAAAC,IAAA,EACAL,EAAAhB,EAAAsB,GAAArG,GAAA,EAAAoG,EAAAC,EACAF,EAAAE,EAAA,EAEA,OAAAF,KCpBA,IAAAI,EAAAT,EAAAF,GACAY,EAAAD,EAAAD,MACAG,EAAAF,EAAAL,KACAQ,EAAA,ECNAC,EAAA,SAAAC,EAAAZ,GACA,MAAAA,MAAAa,GAEA,IADA,IAAA/L,EAAA,EAAAyB,EAAAqK,EAAAlE,OAAA,EAAA9F,EAAAgK,EAAA,GAAAD,EAAA,IAAArH,MAAA/C,EAAA,IAAAA,GACAzB,EAAAyB,GAAAoK,EAAA7L,GAAAkL,EAAApJ,IAAAgK,IAAA9L,IACA,OAAA6L,GAGA,SAAAE,EAAA9B,EAAAC,GACA,OAAAD,EAAAC,GCNA,IAAA8B,EAAA,SAAAC,EAAAC,EAAAxH,GACA,IAGAyH,EACAC,EACApM,EACAqM,EANAC,EAAAL,EAAArE,OACA2E,EAAAL,EAAAtE,OACA4E,EAAA,IAAAhI,MAAA8H,EAAAC,GAQA,IAFA,MAAA7H,MAAAqH,GAEAI,EAAAnM,EAAA,EAAkBmM,EAAAG,IAASH,EAC3B,IAAAE,EAAAJ,EAAAE,GAAAC,EAAA,EAAsCA,EAAAG,IAASH,IAAApM,EAC/CwM,EAAAxM,GAAA0E,EAAA2H,EAAAH,EAAAE,IAIA,OAAAI,GCnBAC,EAAA,SAAAxC,EAAAC,GACA,OAAAA,EAAAD,GAAA,EAAAC,EAAAD,EAAA,EAAAC,GAAAD,EAAA,EAAAc,KCDA2B,EAAA,SAAAxH,GACA,cAAAA,EAAA6F,KAAA7F,GCCAyH,EAAA,SAAAH,EAAAI,GACA,IAIA3L,EACA4L,EALApL,EAAA+K,EAAA5E,OACAxH,EAAA,EACAJ,GAAA,EACA8M,EAAA,EAGAC,EAAA,EAEA,SAAAH,EACA,OAAA5M,EAAAyB,GACAuL,MAAA/L,EAAAyL,EAAAF,EAAAxM,OAGA+M,IAFAF,EAAA5L,EAAA6L,IAEA7L,GADA6L,GAAAD,IAAAzM,UAOA,OAAAJ,EAAAyB,GACAuL,MAAA/L,EAAAyL,EAAAE,EAAAJ,EAAAxM,KAAAwM,OAGAO,IAFAF,EAAA5L,EAAA6L,IAEA7L,GADA6L,GAAAD,IAAAzM,KAMA,GAAAA,EAAA,SAAA2M,GAAA3M,EAAA,IC7BA6M,EAAA,SAAAnB,EAAAZ,GACA,IAAAgC,EAAAP,EAAAb,EAAAZ,GACA,OAAAgC,EAAA/C,KAAAC,KAAA8C,MCJAC,EAAA,SAAAX,EAAAI,GACA,IAEA3L,EACA+F,EACAC,EAJAxF,EAAA+K,EAAA5E,OACA5H,GAAA,EAKA,SAAA4M,GACA,OAAA5M,EAAAyB,GACA,UAAAR,EAAAuL,EAAAxM,KAAAiB,KAEA,IADA+F,EAAAC,EAAAhG,IACAjB,EAAAyB,GACA,OAAAR,EAAAuL,EAAAxM,MACAgH,EAAA/F,IAAA+F,EAAA/F,GACAgG,EAAAhG,IAAAgG,EAAAhG,SAQA,OAAAjB,EAAAyB,GACA,UAAAR,EAAA2L,EAAAJ,EAAAxM,KAAAwM,KAAAvL,KAEA,IADA+F,EAAAC,EAAAhG,IACAjB,EAAAyB,GACA,OAAAR,EAAA2L,EAAAJ,EAAAxM,KAAAwM,MACAxF,EAAA/F,IAAA+F,EAAA/F,GACAgG,EAAAhG,IAAAgG,EAAAhG,IAOA,OAAA+F,EAAAC,ICnCAmG,EAAA5I,MAAA5C,UAEAyL,EAAAD,EAAAC,MACArJ,EAAAoJ,EAAApJ,ICHAsJ,EAAA,SAAApI,GACA,kBACA,OAAAA,ICFAqI,EAAA,SAAArI,GACA,OAAAA,GCDAsI,EAAA,SAAAC,EAAAC,EAAAC,GACAF,KAAAC,KAAAC,GAAAlM,EAAAkG,UAAAC,QAAA,GAAA8F,EAAAD,IAAA,KAAAhM,EAAA,KAAAkM,EAMA,IAJA,IAAA3N,GAAA,EACAyB,EAAA,EAAA0I,KAAAlD,IAAA,EAAAkD,KAAAyD,MAAAF,EAAAD,GAAAE,IACAzG,EAAA,IAAA1C,MAAA/C,KAEAzB,EAAAyB,GACAyF,EAAAlH,GAAAyN,EAAAzN,EAAA2N,EAGA,OAAAzG,GCXA2G,EAAA1D,KAAAC,KAAA,IACA0D,EAAA3D,KAAAC,KAAA,IACA2D,EAAA5D,KAAAC,KAAA,GAEA4D,EAAA,SAAAP,EAAAC,EAAAO,GACA,IAAAC,EAEAzM,EACAuM,EACAL,EAHA3N,GAAA,EAMA,GADAiO,MAAAR,SAAAC,OACAO,EAAA,SAAAR,GAEA,IADAS,EAAAR,EAAAD,KAAAhM,EAAAgM,IAAAC,IAAAjM,GACA,KAAAkM,EAAAQ,EAAAV,EAAAC,EAAAO,MAAAG,SAAAT,GAAA,SAEA,GAAAA,EAAA,EAIA,IAHAF,EAAAtD,KAAAyD,KAAAH,EAAAE,GACAD,EAAAvD,KAAAkE,MAAAX,EAAAC,GACAK,EAAA,IAAAxJ,MAAA/C,EAAA0I,KAAAyD,KAAAF,EAAAD,EAAA,MACAzN,EAAAyB,GAAAuM,EAAAhO,IAAAyN,EAAAzN,GAAA2N,OAKA,IAHAF,EAAAtD,KAAAkE,MAAAZ,EAAAE,GACAD,EAAAvD,KAAAyD,KAAAF,EAAAC,GACAK,EAAA,IAAAxJ,MAAA/C,EAAA0I,KAAAyD,KAAAH,EAAAC,EAAA,MACA1N,EAAAyB,GAAAuM,EAAAhO,IAAAyN,EAAAzN,GAAA2N,EAKA,OAFAO,GAAAF,EAAAE,UAEAF,GAGA,SAAAG,EAAAV,EAAAC,EAAAO,GACA,IAAAN,GAAAD,EAAAD,GAAAtD,KAAAlD,IAAA,EAAAgH,GACAK,EAAAnE,KAAAkE,MAAAlE,KAAAoE,IAAAZ,GAAAxD,KAAAqE,MACAC,EAAAd,EAAAxD,KAAAE,IAAA,GAAAiE,GACA,OAAAA,GAAA,GACAG,GAAAZ,EAAA,GAAAY,GAAAX,EAAA,EAAAW,GAAAV,EAAA,KAAA5D,KAAAE,IAAA,GAAAiE,IACAnE,KAAAE,IAAA,IAAAiE,IAAAG,GAAAZ,EAAA,GAAAY,GAAAX,EAAA,EAAAW,GAAAV,EAAA,KAGA,SAAAW,EAAAjB,EAAAC,EAAAO,GACA,IAAAU,EAAAxE,KAAAyE,IAAAlB,EAAAD,GAAAtD,KAAAlD,IAAA,EAAAgH,GACAY,EAAA1E,KAAAE,IAAA,GAAAF,KAAAkE,MAAAlE,KAAAoE,IAAAI,GAAAxE,KAAAqE,OACAC,EAAAE,EAAAE,EAIA,OAHAJ,GAAAZ,EAAAgB,GAAA,GACAJ,GAAAX,EAAAe,GAAA,EACAJ,GAAAV,IAAAc,GAAA,GACAnB,EAAAD,GAAAoB,ICjDA,IAAAC,EAAA,SAAAtC,GACA,OAAArC,KAAAyD,KAAAzD,KAAAoE,IAAA/B,EAAA5E,QAAAuC,KAAA4E,KAAA,GCQAC,EAAA,WACA,IAAA/N,EAAAsM,EACAxG,EAAAoG,EACA8B,EAAAH,EAEA,SAAAI,EAAA7L,GACA,IAAArD,EAEAkF,EADAzD,EAAA4B,EAAAuE,OAEA4E,EAAA,IAAAhI,MAAA/C,GAEA,IAAAzB,EAAA,EAAeA,EAAAyB,IAAOzB,EACtBwM,EAAAxM,GAAAiB,EAAAoC,EAAArD,KAAAqD,GAGA,IAAA8L,EAAApI,EAAAyF,GACA4C,EAAAD,EAAA,GACA1F,EAAA0F,EAAA,GACAE,EAAAJ,EAAAzC,EAAA4C,EAAA3F,GAGAjF,MAAAC,QAAA4K,KACAA,EAAAX,EAAAU,EAAA3F,EAAA4F,GACAA,EAAA7B,EAAArD,KAAAyD,KAAAwB,EAAAC,KAAAlF,KAAAkE,MAAA5E,EAAA4F,SAKA,IADA,IAAAjP,EAAAiP,EAAAzH,OACAyH,EAAA,IAAAD,GAAAC,EAAAC,UAAAlP,EACA,KAAAiP,EAAAjP,EAAA,GAAAqJ,GAAA4F,EAAAE,QAAAnP,EAEA,IACAoP,EADAC,EAAA,IAAAjL,MAAApE,EAAA,GAIA,IAAAJ,EAAA,EAAeA,GAAAI,IAAQJ,GACvBwP,EAAAC,EAAAzP,OACAoP,GAAApP,EAAA,EAAAqP,EAAArP,EAAA,GAAAoP,EACAI,EAAA/F,GAAAzJ,EAAAI,EAAAiP,EAAArP,GAAAyJ,EAIA,IAAAzJ,EAAA,EAAeA,EAAAyB,IAAOzB,EAEtBoP,IADAlK,EAAAsH,EAAAxM,KACAkF,GAAAuE,GACAgG,EAAA7D,EAAAyD,EAAAnK,EAAA,EAAA9E,IAAAoG,KAAAnD,EAAArD,IAIA,OAAAyP,EAeA,OAZAP,EAAAjO,MAAA,SAAAyO,GACA,OAAA/H,UAAAC,QAAA3G,EAAA,mBAAAyO,IAAApC,EAAAoC,GAAAR,GAAAjO,GAGAiO,EAAAnI,OAAA,SAAA2I,GACA,OAAA/H,UAAAC,QAAAb,EAAA,mBAAA2I,IAAApC,GAAAoC,EAAA,GAAAA,EAAA,KAAAR,GAAAnI,GAGAmI,EAAAS,WAAA,SAAAD,GACA,OAAA/H,UAAAC,QAAAqH,EAAA,mBAAAS,IAAAlL,MAAAC,QAAAiL,GAAApC,EAAAD,EAAAlN,KAAAuP,IAAApC,EAAAoC,GAAAR,GAAAD,GAGAC,GCvEAU,EAAA,SAAApD,EAAA1K,EAAA8K,GAEA,GADA,MAAAA,MAAAF,GACAjL,EAAA+K,EAAA5E,OAAA,CACA,IAAA9F,OAAA,GAAAL,EAAA,SAAAmL,EAAAJ,EAAA,KAAAA,GACA,GAAA1K,GAAA,SAAA8K,EAAAJ,EAAA/K,EAAA,GAAAA,EAAA,EAAA+K,GACA,IAAA/K,EACAzB,GAAAyB,EAAA,GAAAK,EACAqK,EAAAhC,KAAAkE,MAAArO,GACAqM,GAAAO,EAAAJ,EAAAL,KAAAK,GAEA,OAAAH,IADAO,EAAAJ,EAAAL,EAAA,GAAAA,EAAA,EAAAK,GACAH,IAAArM,EAAAmM,KCPA0D,EAAA,SAAArD,EAAAxF,EAAAC,GAEA,OADAuF,EAAAxI,EAAA7D,KAAAqM,EAAAE,GAAAjC,KAAAK,GACAX,KAAAyD,MAAA3G,EAAAD,IAAA,GAAA4I,EAAApD,EAAA,KAAAoD,EAAApD,EAAA,MAAArC,KAAAE,IAAAmC,EAAA5E,QAAA,QCLAkI,EAAA,SAAAtD,EAAAxF,EAAAC,GACA,OAAAkD,KAAAyD,MAAA3G,EAAAD,IAAA,IAAAiG,EAAAT,GAAArC,KAAAE,IAAAmC,EAAA5E,QAAA,QCHAmI,EAAA,SAAAvD,EAAAI,GACA,IAEA3L,EACAgG,EAHAxF,EAAA+K,EAAA5E,OACA5H,GAAA,EAIA,SAAA4M,GACA,OAAA5M,EAAAyB,GACA,UAAAR,EAAAuL,EAAAxM,KAAAiB,KAEA,IADAgG,EAAAhG,IACAjB,EAAAyB,GACA,OAAAR,EAAAuL,EAAAxM,KAAAiB,EAAAgG,IACAA,EAAAhG,QAQA,OAAAjB,EAAAyB,GACA,UAAAR,EAAA2L,EAAAJ,EAAAxM,KAAAwM,KAAAvL,KAEA,IADAgG,EAAAhG,IACAjB,EAAAyB,GACA,OAAAR,EAAA2L,EAAAJ,EAAAxM,KAAAwM,KAAAvL,EAAAgG,IACAA,EAAAhG,GAOA,OAAAgG,GC9BA+I,EAAA,SAAAxD,EAAAI,GACA,IAGA3L,EAHAQ,EAAA+K,EAAA5E,OACAxH,EAAAqB,EACAzB,GAAA,EAEA+M,EAAA,EAEA,SAAAH,EACA,OAAA5M,EAAAyB,GACAuL,MAAA/L,EAAAyL,EAAAF,EAAAxM,OACAI,EADA2M,GAAA9L,OAMA,OAAAjB,EAAAyB,GACAuL,MAAA/L,EAAAyL,EAAAE,EAAAJ,EAAAxM,KAAAwM,OACApM,EADA2M,GAAA9L,EAKA,GAAAb,EAAA,OAAA2M,EAAA3M,GCnBA6P,EAAA,SAAAzD,EAAAI,GACA,IAEA3L,EAFAQ,EAAA+K,EAAA5E,OACA5H,GAAA,EAEAkQ,KAEA,SAAAtD,EACA,OAAA5M,EAAAyB,GACAuL,MAAA/L,EAAAyL,EAAAF,EAAAxM,MACAkQ,EAAA1J,KAAAvF,QAMA,OAAAjB,EAAAyB,GACAuL,MAAA/L,EAAAyL,EAAAE,EAAAJ,EAAAxM,KAAAwM,MACA0D,EAAA1J,KAAAvF,GAKA,OAAA2O,EAAAM,EAAAzF,KAAAK,GAAA,KC1BAqF,EAAA,SAAAC,GAQA,IAPA,IACAhQ,EAGAiQ,EACAvE,EALArK,EAAA2O,EAAAxI,OAEA5H,GAAA,EACAsQ,EAAA,IAIAtQ,EAAAyB,GAAA6O,GAAAF,EAAApQ,GAAA4H,OAGA,IAFAyI,EAAA,IAAA7L,MAAA8L,KAEA7O,GAAA,GAGA,IADArB,GADA0L,EAAAsE,EAAA3O,IACAmG,SACAxH,GAAA,GACAiQ,IAAAC,GAAAxE,EAAA1L,GAIA,OAAAiQ,GCnBAE,EAAA,SAAA/D,EAAAI,GACA,IAEA3L,EACA+F,EAHAvF,EAAA+K,EAAA5E,OACA5H,GAAA,EAIA,SAAA4M,GACA,OAAA5M,EAAAyB,GACA,UAAAR,EAAAuL,EAAAxM,KAAAiB,KAEA,IADA+F,EAAA/F,IACAjB,EAAAyB,GACA,OAAAR,EAAAuL,EAAAxM,KAAAgH,EAAA/F,IACA+F,EAAA/F,QAQA,OAAAjB,EAAAyB,GACA,UAAAR,EAAA2L,EAAAJ,EAAAxM,KAAAwM,KAAAvL,KAEA,IADA+F,EAAA/F,IACAjB,EAAAyB,GACA,OAAAR,EAAA2L,EAAAJ,EAAAxM,KAAAwM,KAAAxF,EAAA/F,IACA+F,EAAA/F,GAOA,OAAA+F,GChCAwJ,EAAA,SAAA1E,EAAA2E,GAEA,IADA,IAAAzQ,EAAAyQ,EAAA7I,OAAA8I,EAAA,IAAAlM,MAAAxE,GACAA,KAAA0Q,EAAA1Q,GAAA8L,EAAA2E,EAAAzQ,IACA,OAAA0Q,GCDAC,EAAA,SAAAnE,EAAAvB,GACA,GAAAxJ,EAAA+K,EAAA5E,OAAA,CACA,IAAAnG,EAGAmP,EAFA5Q,EAAA,EACAsQ,EAAA,EAEAO,EAAArE,EAAA8D,GAIA,IAFA,MAAArF,MAAAH,KAEA9K,EAAAyB,IACAwJ,EAAA2F,EAAApE,EAAAxM,GAAA6Q,GAAA,OAAA5F,EAAA4F,QACAA,EAAAD,EAAAN,EAAAtQ,GAIA,WAAAiL,EAAA4F,KAAAP,OAAA,IClBAQ,EAAA,SAAAhF,EAAAK,EAAAC,GAKA,IAJA,IACAlL,EACAlB,EAFAI,GAAA,MAAAgM,EAAAN,EAAAlE,OAAAwE,IAAAD,EAAA,MAAAA,EAAA,GAAAA,GAIA/L,GACAJ,EAAAmK,KAAA4G,SAAA3Q,IAAA,EACAc,EAAA4K,EAAA1L,EAAA+L,GACAL,EAAA1L,EAAA+L,GAAAL,EAAA9L,EAAAmM,GACAL,EAAA9L,EAAAmM,GAAAjL,EAGA,OAAA4K,GCZAkF,EAAA,SAAAxE,EAAAI,GACA,IAEA3L,EAFAQ,EAAA+K,EAAA5E,OACA5H,GAAA,EAEA+M,EAAA,EAEA,SAAAH,EACA,OAAA5M,EAAAyB,IACAR,GAAAuL,EAAAxM,MAAA+M,GAAA9L,QAKA,OAAAjB,EAAAyB,IACAR,GAAA2L,EAAAJ,EAAAxM,KAAAwM,MAAAO,GAAA9L,GAIA,OAAA8L,GChBAkE,EAAA,SAAAC,GACA,KAAAzP,EAAAyP,EAAAtJ,QAAA,SACA,QAAA5H,GAAA,EAAAI,EAAAmQ,EAAAW,EAAAC,GAAAC,EAAA,IAAA5M,MAAApE,KAAqEJ,EAAAI,GACrE,QAAAqB,EAAA6O,GAAA,EAAAe,EAAAD,EAAApR,GAAA,IAAAwE,MAAA/C,KAA0D6O,EAAA7O,GAC1D4P,EAAAf,GAAAY,EAAAZ,GAAAtQ,GAGA,OAAAoR,GAGA,SAAAD,EAAA7Q,GACA,OAAAA,EAAAsH,OCXA,IAAA0J,EAAA,WACA,OAAAL,EAAAtJ,YCHA4J,EAAA/M,MAAA5C,UAAAyL,MCAAmE,EAAA,SAAAtM,GACA,OAAAA,GCEAuM,EAAA,EACAC,EAAA,EACAC,EAAA,EACAC,EAAA,EACAC,EAAA,KAEA,SAAAC,EAAA5M,GACA,oBAAAA,EAAA,UAGA,SAAA6M,GAAA5M,GACA,sBAAAA,EAAA,QAiBA,SAAA6M,KACA,OAAAvO,KAAAwO,OAGA,SAAAC,GAAAC,EAAAC,GACA,IAAAC,KACAC,EAAA,KACAC,EAAA,KACAC,EAAA,EACAC,EAAA,EACAC,EAAA,EACAxK,EAAAiK,IAAAV,GAAAU,IAAAP,GAAA,IACA1M,EAAAiN,IAAAP,GAAAO,IAAAT,EAAA,QACAiB,EAAAR,IAAAV,GAAAU,IAAAR,EAAAG,EAAAC,GAEA,SAAAa,EAAAC,GACA,IAAArG,EAAA,MAAA8F,EAAAF,EAAApE,MAAAoE,EAAApE,MAAA8E,MAAAV,EAAAC,GAAAD,EAAArL,SAAAuL,EACAS,EAAA,MAAAR,EAAAH,EAAAG,WAAAH,EAAAG,WAAAO,MAAAV,EAAAC,GAAAb,EAAAe,EACAS,EAAA7I,KAAAlD,IAAAuL,EAAA,GAAAE,EACAxL,EAAAkL,EAAAlL,QACA+L,GAAA/L,EAAA,MACAgM,GAAAhM,IAAAU,OAAA,MACAuL,GAAAf,EAAAgB,UA9BA,SAAAhB,GACA,IAAAiB,EAAAlJ,KAAAlD,IAAA,EAAAmL,EAAAgB,YAAA,KAEA,OADAhB,EAAAkB,UAAAD,EAAAlJ,KAAAmJ,MAAAD,IACA,SAAA/S,GACA,OAAA8R,EAAA9R,GAAA+S,IAVA,SAAAjB,GACA,gBAAA9R,GACA,OAAA8R,EAAA9R,MAkCA8R,EAAAmB,QACAC,EAAAX,EAAAW,UAAAX,EAAAW,YAAAX,EACAY,EAAAD,EAAArM,UAAA,WAAA9D,MAAA,OACAqQ,EAAAF,EAAArM,UAAA,SAAA9D,KAAAmJ,EAAA4F,GAAAuB,QACAC,EAAAF,EAAAG,OACAC,EAAAJ,EAAAtM,QAAAT,OAAA,KAAAC,KAAA,gBACAmN,EAAAL,EAAAhN,OAAA,QACAsN,EAAAN,EAAAhN,OAAA,QAEA+M,IAAAQ,MAAAR,EAAArM,QAAA8M,OAAA,gBACAtN,KAAA,kBACAA,KAAA,kBAEA8M,IAAAO,MAAAH,GAEAC,IAAAE,MAAAH,EAAAnN,OAAA,QACAC,KAAA,iBACAA,KAAA1B,EAAA,IAAAgD,EAAAsK,IAEAwB,IAAAC,MAAAH,EAAAnN,OAAA,QACAC,KAAA,eACAA,KAAA1B,EAAAgD,EAAA8K,GACApM,KAAA,KAAAuL,IAAAV,EAAA,MAAAU,IAAAR,EAAA,oBAEAkB,IAAAW,IACAC,IAAAU,WAAAtB,GACAa,IAAAS,WAAAtB,GACAkB,IAAAI,WAAAtB,GACAmB,IAAAG,WAAAtB,GAEAe,IAAAO,WAAAtB,GACAjM,KAAA,UAAAiL,GACAjL,KAAA,qBAAAtG,GAA0C,OAAA8N,SAAA9N,EAAA6S,EAAA7S,IAAAqS,EAAArS,GAAAmD,KAAA2Q,aAAA,eAE1CN,EACAlN,KAAA,UAAAiL,GACAjL,KAAA,qBAAAtG,GAA0C,IAAAwB,EAAA2B,KAAA4Q,WAAApC,OAAgC,OAAAU,EAAA7Q,GAAAsM,SAAAtM,IAAAxB,IAAAwB,EAAAqR,EAAA7S,OAG1EsT,EAAAU,SAEAb,EACA7M,KAAA,IAAAuL,IAAAP,GAAAO,GAAAT,EACA,IAAAxJ,EAAAuK,EAAA,IAAAQ,EAAA,QAAAC,EAAA,IAAAhL,EAAAuK,EACA,IAAAQ,EAAA,IAAA/K,EAAAuK,EAAA,QAAAS,EAAA,IAAAhL,EAAAuK,GAEAiB,EACA9M,KAAA,aACAA,KAAA,qBAAAtG,GAAwC,OAAAqS,EAAAQ,EAAA7S,MAExCyT,EACAnN,KAAA1B,EAAA,IAAAgD,EAAAsK,GAEAwB,EACApN,KAAA1B,EAAAgD,EAAA8K,GACAgB,KAAAjB,GAEAS,EAAAjJ,OAAAyH,IACApL,KAAA,eACAA,KAAA,gBACAA,KAAA,4BACAA,KAAA,cAAAuL,IAAAT,EAAA,QAAAS,IAAAP,EAAA,gBAEA4B,EACAe,KAAA,WAA0B9Q,KAAAwO,OAAAkB,IAuC1B,OApCAP,EAAAR,MAAA,SAAA1C,GACA,OAAA/H,UAAAC,QAAAwK,EAAA1C,EAAAkD,GAAAR,GAGAQ,EAAA5E,MAAA,WACA,OAAAqE,EAAAd,EAAApR,KAAAwH,WAAAiL,GAGAA,EAAAP,cAAA,SAAA3C,GACA,OAAA/H,UAAAC,QAAAyK,EAAA,MAAA3C,KAAA6B,EAAApR,KAAAuP,GAAAkD,GAAAP,EAAAhF,SAGAuF,EAAAN,WAAA,SAAA5C,GACA,OAAA/H,UAAAC,QAAA0K,EAAA,MAAA5C,EAAA,KAAA6B,EAAApR,KAAAuP,GAAAkD,GAAAN,KAAAjF,SAGAuF,EAAAL,WAAA,SAAA7C,GACA,OAAA/H,UAAAC,QAAA2K,EAAA7C,EAAAkD,GAAAL,GAGAK,EAAA4B,SAAA,SAAA9E,GACA,OAAA/H,UAAAC,QAAA4K,EAAAC,GAAA/C,EAAAkD,GAAAJ,GAGAI,EAAAJ,cAAA,SAAA9C,GACA,OAAA/H,UAAAC,QAAA4K,GAAA9C,EAAAkD,GAAAJ,GAGAI,EAAAH,cAAA,SAAA/C,GACA,OAAA/H,UAAAC,QAAA6K,GAAA/C,EAAAkD,GAAAH,GAGAG,EAAAF,YAAA,SAAAhD,GACA,OAAA/H,UAAAC,QAAA8K,GAAAhD,EAAAkD,GAAAF,GAGAE,EAGA,SAAA6B,GAAArC,GACA,OAAAF,GAAAT,EAAAW,GAGA,SAAAsC,GAAAtC,GACA,OAAAF,GAAAR,EAAAU,GAGA,SAAAuC,GAAAvC,GACA,OAAAF,GAAAP,EAAAS,GAGA,SAAAwC,GAAAxC,GACA,OAAAF,GAAAN,EAAAQ,GC5KA,IAAAyC,IAAY5T,MAAA,cAEZ,SAAA6T,KACA,QAA8C5T,EAA9ClB,EAAA,EAAAyB,EAAAkG,UAAAC,OAAA8H,KAAkD1P,EAAAyB,IAAOzB,EAAA,CACzD,KAAAkB,EAAAyG,UAAA3H,GAAA,KAAAkB,KAAAwO,EAAA,UAAAqF,MAAA,iBAAA7T,GACAwO,EAAAxO,MAEA,WAAA8T,GAAAtF,GAGA,SAAAsF,GAAAtF,GACAjM,KAAAiM,IAqDA,SAAA7O,GAAAuE,EAAA7E,GACA,QAAAF,EAAAL,EAAA,EAAAyB,EAAA2D,EAAAwC,OAAqC5H,EAAAyB,IAAOzB,EAC5C,IAAAK,EAAA+E,EAAApF,IAAAO,SACA,OAAAF,EAAAY,MAKA,SAAAgU,GAAA7P,EAAA7E,EAAA+F,GACA,QAAAtG,EAAA,EAAAyB,EAAA2D,EAAAwC,OAAkC5H,EAAAyB,IAAOzB,EACzC,GAAAoF,EAAApF,GAAAO,SAAA,CACA6E,EAAApF,GAAA6U,GAAAzP,IAAAiI,MAAA,EAAArN,GAAAyF,OAAAL,EAAAiI,MAAArN,EAAA,IACA,MAIA,OADA,MAAAsG,GAAAlB,EAAAoB,MAAmCjG,OAAAU,MAAAqF,IACnClB,EAzDA4P,GAAApT,UAAAkT,GAAAlT,WACAsT,YAAAF,GACAG,GAAA,SAAAC,EAAA9O,GACA,IAEApF,EAFAwO,EAAAjM,KAAAiM,EACA2F,EAbA,SAAAC,EAAA/R,GACA,OAAA+R,EAAAC,OAAAC,MAAA,SAAAxR,IAAA,SAAA9C,GACA,IAAAX,EAAA,GAAAP,EAAAkB,EAAAuU,QAAA,KAEA,GADAzV,GAAA,IAAAO,EAAAW,EAAAmM,MAAArN,EAAA,GAAAkB,IAAAmM,MAAA,EAAArN,IACAkB,IAAAqC,EAAA1B,eAAAX,GAAA,UAAA6T,MAAA,iBAAA7T,GACA,OAAYkE,KAAAlE,EAAAX,UAQZmV,CAAAN,EAAA,GAAA1F,GAEA1P,GAAA,EACAyB,EAAA4T,EAAAzN,OAGA,KAAAD,UAAAC,OAAA,IAOA,SAAAtB,GAAA,mBAAAA,EAAA,UAAAyO,MAAA,qBAAAzO,GACA,OAAAtG,EAAAyB,GACA,GAAAP,GAAAkU,EAAAC,EAAArV,IAAAoF,KAAAsK,EAAAxO,GAAA+T,GAAAvF,EAAAxO,GAAAkU,EAAA7U,KAAA+F,QACA,SAAAA,EAAA,IAAApF,KAAAwO,IAAAxO,GAAA+T,GAAAvF,EAAAxO,GAAAkU,EAAA7U,KAAA,MAGA,OAAAkD,KAZA,OAAAzD,EAAAyB,GAAA,IAAAP,GAAAkU,EAAAC,EAAArV,IAAAoF,QAAAlE,EAAAL,GAAA6O,EAAAxO,GAAAkU,EAAA7U,OAAA,OAAAW,GAcAqS,KAAA,WACA,IAAAA,KAAiB7D,EAAAjM,KAAAiM,EACjB,QAAAxO,KAAAwO,EAAA6D,EAAArS,GAAAwO,EAAAxO,GAAAmM,QACA,WAAA2H,GAAAzB,IAEApT,KAAA,SAAAiF,EAAAuQ,GACA,IAAAlU,EAAAkG,UAAAC,OAAA,aAAAnG,EAAAP,EAAA0U,EAAA,IAAApR,MAAA/C,GAAAzB,EAAA,EAAkFA,EAAAyB,IAAOzB,EAAA4V,EAAA5V,GAAA2H,UAAA3H,EAAA,GACzF,IAAAyD,KAAAiM,EAAA7N,eAAAuD,GAAA,UAAA2P,MAAA,iBAAA3P,GACA,IAAApF,EAAA,EAAAyB,GAAAP,EAAAuC,KAAAiM,EAAAtK,IAAAwC,OAA+C5H,EAAAyB,IAAOzB,EAAAkB,EAAAlB,GAAAiB,MAAA6R,MAAA6C,EAAAC,IAEtD9C,MAAA,SAAA1N,EAAAuQ,EAAAC,GACA,IAAAnS,KAAAiM,EAAA7N,eAAAuD,GAAA,UAAA2P,MAAA,iBAAA3P,GACA,QAAAlE,EAAAuC,KAAAiM,EAAAtK,GAAApF,EAAA,EAAAyB,EAAAP,EAAA0G,OAAmD5H,EAAAyB,IAAOzB,EAAAkB,EAAAlB,GAAAiB,MAAA6R,MAAA6C,EAAAC,KAuB1D,IAAAC,GAAA,GCnFAC,GAAA,+BAEAC,IACA1R,IAAA,6BACAyR,SACAE,MAAA,+BACAC,IAAA,uCACAC,MAAA,iCCLAC,GAAA,SAAA5V,GACA,IAAA6V,EAAA7V,GAAA,GAAAP,EAAAoW,EAAAX,QAAA,KAEA,OADAzV,GAAA,cAAAoW,EAAA7V,EAAA8M,MAAA,EAAArN,MAAAO,IAAA8M,MAAArN,EAAA,IACA+V,GAAAlU,eAAAuU,IAA8CC,MAAAN,GAAAK,GAAAE,MAAA/V,GAAuCA,GCcrF,IAAAgW,GAAA,SAAAhW,GACA,IAAAiW,EAAAL,GAAA5V,GACA,OAAAiW,EAAAF,MARA,SAAAE,GACA,kBACA,OAAA/S,KAAAgT,cAAAC,gBAAAF,EAAAH,MAAAG,EAAAF,SAZA,SAAA/V,GACA,kBACA,IAAAgF,EAAA9B,KAAAgT,cACAE,EAAAlT,KAAAmT,aACA,OAAAD,IAAAb,IAAAvQ,EAAAsR,gBAAAD,eAAAd,GACAvQ,EAAAuR,cAAAvW,GACAgF,EAAAmR,gBAAAC,EAAApW,MAcAiW,ICvBA,SAAAO,MAEA,IAAAC,GAAA,SAAAC,GACA,aAAAA,EAAAF,GAAA,WACA,OAAAtT,KAAA+B,cAAAyR,KCJA,SAAAC,KACA,SAGA,IAAAC,GAAA,SAAAF,GACA,aAAAA,EAAAC,GAAA,WACA,OAAAzT,KAAA2T,iBAAAH,KCNAI,GAAA,SAAAJ,GACA,kBACA,OAAAxT,KAAA6T,QAAAL,KAIA,uBAAA1R,SAAA,CACA,IAAAgS,GAAAhS,SAAAsR,gBACA,IAAAU,GAAAD,QAAA,CACA,IAAAE,GAAAD,GAAAE,uBACAF,GAAAG,mBACAH,GAAAI,oBACAJ,GAAAK,iBACAP,GAAA,SAAAJ,GACA,kBACA,OAAAO,GAAArX,KAAAsD,KAAAwT,MAMA,IAAAY,GAAA,GCrBAC,GAAA,SAAAC,GACA,WAAAvT,MAAAuT,EAAAnQ,SCMA,SAAAoQ,GAAAC,EAAAC,GACAzU,KAAAgT,cAAAwB,EAAAxB,cACAhT,KAAAmT,aAAAqB,EAAArB,aACAnT,KAAA0U,MAAA,KACA1U,KAAA2U,QAAAH,EACAxU,KAAA4U,SAAAH,EAGAF,GAAApW,WACAsT,YAAA8C,GACAM,YAAA,SAAAC,GAAgC,OAAA9U,KAAA2U,QAAAI,aAAAD,EAAA9U,KAAA0U,QAChCK,aAAA,SAAAD,EAAAE,GAAuC,OAAAhV,KAAA2U,QAAAI,aAAAD,EAAAE,IACvCjT,cAAA,SAAAyR,GAAqC,OAAAxT,KAAA2U,QAAA5S,cAAAyR,IACrCG,iBAAA,SAAAH,GAAwC,OAAAxT,KAAA2U,QAAAhB,iBAAAH,KCpBxC,ICIAyB,GAAA,IAEA,SAAAC,GAAAV,EAAAW,EAAAxR,EAAA2Q,EAAAlE,EAAAxQ,GASA,IARA,IACAwV,EADA7Y,EAAA,EAEA8Y,EAAAF,EAAAhR,OACAmR,EAAA1V,EAAAuE,OAKQ5H,EAAA+Y,IAAgB/Y,GACxB6Y,EAAAD,EAAA5Y,KACA6Y,EAAAR,SAAAhV,EAAArD,GACA+X,EAAA/X,GAAA6Y,GAEAzR,EAAApH,GAAA,IAAAgY,GAAAC,EAAA5U,EAAArD,IAKA,KAAQA,EAAA8Y,IAAiB9Y,GACzB6Y,EAAAD,EAAA5Y,MACA6T,EAAA7T,GAAA6Y,GAKA,SAAAG,GAAAf,EAAAW,EAAAxR,EAAA2Q,EAAAlE,EAAAxQ,EAAA9B,GACA,IAAAvB,EACA6Y,EAKAI,EAJAC,KACAJ,EAAAF,EAAAhR,OACAmR,EAAA1V,EAAAuE,OACAuR,EAAA,IAAA3U,MAAAsU,GAKA,IAAA9Y,EAAA,EAAaA,EAAA8Y,IAAiB9Y,GAC9B6Y,EAAAD,EAAA5Y,MACAmZ,EAAAnZ,GAAAiZ,EAAAP,GAAAnX,EAAApB,KAAA0Y,IAAAR,SAAArY,EAAA4Y,GACAK,KAAAC,EACArF,EAAA7T,GAAA6Y,EAEAK,EAAAD,GAAAJ,GAQA,IAAA7Y,EAAA,EAAaA,EAAA+Y,IAAgB/Y,GAE7B6Y,EAAAK,EADAD,EAAAP,GAAAnX,EAAApB,KAAA8X,EAAA5U,EAAArD,KAAAqD,MAEA0U,EAAA/X,GAAA6Y,EACAA,EAAAR,SAAAhV,EAAArD,GACAkZ,EAAAD,GAAA,MAEA7R,EAAApH,GAAA,IAAAgY,GAAAC,EAAA5U,EAAArD,IAKA,IAAAA,EAAA,EAAaA,EAAA8Y,IAAiB9Y,GAC9B6Y,EAAAD,EAAA5Y,KAAAkZ,EAAAC,EAAAnZ,MAAA6Y,IACAhF,EAAA7T,GAAA6Y,GClDA,SAAAO,GAAAnP,EAAAC,GACA,OAAAD,EAAAC,GAAA,EAAAD,EAAAC,EAAA,EAAAD,GAAAC,EAAA,EAAAa,ICoBA,IC1CAsO,GAAA,SAAAR,GACA,OAAAA,EAAApC,eAAAoC,EAAApC,cAAA6C,aACAT,EAAAtT,UAAAsT,GACAA,EAAAS,aC4BA,SAAAC,GAAAV,EAAAtY,GACA,OAAAsY,EAAAhS,MAAA2S,iBAAAjZ,IACA8Y,GAAAR,GAAAY,iBAAAZ,EAAA,MAAAW,iBAAAjZ,GCjCA,SAAAmZ,GAAAC,GACA,OAAAA,EAAApE,OAAAC,MAAA,SAGA,SAAAoE,GAAAf,GACA,OAAAA,EAAAe,WAAA,IAAAC,GAAAhB,GAGA,SAAAgB,GAAAhB,GACApV,KAAAqW,MAAAjB,EACApV,KAAAsW,OAAAL,GAAAb,EAAAzE,aAAA,cAuBA,SAAA4F,GAAAnB,EAAAoB,GAEA,IADA,IAAAC,EAAAN,GAAAf,GAAA7Y,GAAA,EAAAyB,EAAAwY,EAAArS,SACA5H,EAAAyB,GAAAyY,EAAAC,IAAAF,EAAAja,IAGA,SAAAoa,GAAAvB,EAAAoB,GAEA,IADA,IAAAC,EAAAN,GAAAf,GAAA7Y,GAAA,EAAAyB,EAAAwY,EAAArS,SACA5H,EAAAyB,GAAAyY,EAAA5F,OAAA2F,EAAAja,IA3BA6Z,GAAAjY,WACAuY,IAAA,SAAA5Z,GACAkD,KAAAsW,OAAAtE,QAAAlV,GACA,IACAkD,KAAAsW,OAAAvT,KAAAjG,GACAkD,KAAAqW,MAAAO,aAAA,QAAA5W,KAAAsW,OAAAO,KAAA,QAGAhG,OAAA,SAAA/T,GACA,IAAAP,EAAAyD,KAAAsW,OAAAtE,QAAAlV,GACAP,GAAA,IACAyD,KAAAsW,OAAAQ,OAAAva,EAAA,GACAyD,KAAAqW,MAAAO,aAAA,QAAA5W,KAAAsW,OAAAO,KAAA,QAGAE,SAAA,SAAAja,GACA,OAAAkD,KAAAsW,OAAAtE,QAAAlV,IAAA,IC7BA,SAAAka,KACAhX,KAAAiX,YAAA,GCDA,SAAAC,KACAlX,KAAAmX,UAAA,GCDA,SAAAC,KACApX,KAAAqX,aAAArX,KAAA4Q,WAAAiE,YAAA7U,MCDA,SAAAsX,KACAtX,KAAAuX,iBAAAvX,KAAA4Q,WAAAmE,aAAA/U,UAAA4Q,WAAA4G,YCEA,SAAAC,KACA,YCJA,SAAA5G,KACA,IAAA2D,EAAAxU,KAAA4Q,WACA4D,KAAAkD,YAAA1X,MCFA,SAAA2X,KACA,OAAA3X,KAAA4Q,WAAAmE,aAAA/U,KAAA4X,WAAA,GAAA5X,KAAAqX,aAGA,SAAAQ,KACA,OAAA7X,KAAA4Q,WAAAmE,aAAA/U,KAAA4X,WAAA,GAAA5X,KAAAqX,aAGA,ICRAS,MAEAC,GAAA,KAEA,oBAAAjW,WAEA,iBADAA,SAAAsR,kBAEA0E,IAAoBE,WAAA,YAAAC,WAAA,cAIpB,SAAAC,GAAAC,EAAAC,EAAAjD,GAEA,OADAgD,EAAAE,GAAAF,EAAAC,EAAAjD,GACA,SAAAmD,GACA,IAAAC,EAAAD,EAAAE,cACAD,QAAAvY,MAAA,EAAAuY,EAAAE,wBAAAzY,QACAmY,EAAAzb,KAAAsD,KAAAsY,IAKA,SAAAD,GAAAF,EAAAC,EAAAjD,GACA,gBAAAuD,GACA,IAAAC,EAAAZ,GACAA,GAAAW,EACA,IACAP,EAAAzb,KAAAsD,UAAA4U,SAAAwD,EAAAjD,GACK,QACL4C,GAAAY,IAaA,SAAAC,GAAAjH,GACA,kBACA,IAAAD,EAAA1R,KAAA6Y,KACA,GAAAnH,EAAA,CACA,QAAA1U,EAAA6P,EAAA,EAAAtQ,GAAA,EAAAI,EAAA+U,EAAAvN,OAA6C0I,EAAAlQ,IAAOkQ,EACpD7P,EAAA0U,EAAA7E,GAAA8E,EAAAhQ,MAAA3E,EAAA2E,OAAAgQ,EAAAhQ,MAAA3E,EAAAF,OAAA6U,EAAA7U,KAGA4U,IAAAnV,GAAAS,EAFAgD,KAAA8Y,oBAAA9b,EAAA2E,KAAA3E,EAAAmb,SAAAnb,EAAA+b,WAKAxc,EAAAmV,EAAAvN,OAAA5H,SACAyD,KAAA6Y,OAIA,SAAAG,GAAArH,EAAAnU,EAAAub,GACA,IAAAE,EAAAnB,GAAA1Z,eAAAuT,EAAAhQ,MAAAuW,GAAAG,GACA,gBAAAxb,EAAAN,EAAA4Y,GACA,IAAAnY,EAAA0U,EAAA1R,KAAA6Y,KAAAV,EAAAc,EAAAzb,EAAAjB,EAAA4Y,GACA,GAAAzD,EAAA,QAAA7E,EAAA,EAAAlQ,EAAA+U,EAAAvN,OAA0C0I,EAAAlQ,IAAOkQ,EACjD,IAAA7P,EAAA0U,EAAA7E,IAAAlL,OAAAgQ,EAAAhQ,MAAA3E,EAAAF,OAAA6U,EAAA7U,KAIA,OAHAkD,KAAA8Y,oBAAA9b,EAAA2E,KAAA3E,EAAAmb,SAAAnb,EAAA+b,SACA/Y,KAAAiC,iBAAAjF,EAAA2E,KAAA3E,EAAAmb,WAAAnb,EAAA+b,gBACA/b,EAAAQ,SAIAwC,KAAAiC,iBAAA0P,EAAAhQ,KAAAwW,EAAAY,GACA/b,GAAS2E,KAAAgQ,EAAAhQ,KAAA7E,KAAA6U,EAAA7U,KAAAU,QAAA2a,WAAAY,WACTrH,EACAA,EAAA3O,KAAA/F,GADAgD,KAAA6Y,MAAA7b,IA0BA,SAAAkc,GAAAR,EAAAP,EAAAjG,EAAAC,GACA,IAAAwG,EAAAZ,GACAW,EAAAS,YAAApB,GACAA,GAAAW,EACA,IACA,OAAAP,EAAA9I,MAAA6C,EAAAC,GACG,QACH4F,GAAAY,GCtGA,SAAAS,GAAAhE,EAAAzT,EAAA0X,GACA,IAAAld,EAAAyZ,GAAAR,GACAkD,EAAAnc,EAAAmd,YAEA,mBAAAhB,EACAA,EAAA,IAAAA,EAAA3W,EAAA0X,IAEAf,EAAAnc,EAAA2F,SAAAyX,YAAA,SACAF,GAAAf,EAAAkB,UAAA7X,EAAA0X,EAAAI,QAAAJ,EAAAK,YAAApB,EAAAqB,OAAAN,EAAAM,QACArB,EAAAkB,UAAA7X,GAAA,OAGAyT,EAAAgE,cAAAd,GAeA,ICEAsB,IAAA,MAEA,SAAAC,GAAAC,EAAAC,GACA/Z,KAAAga,QAAAF,EACA9Z,KAAAia,SAAAF,EAGA,SAAAG,KACA,WAAAL,KAAA/X,SAAAsR,kBAAAwG,IAGAC,GAAA1b,UAAA+b,GAAA/b,WACAsT,YAAAoI,GACA5W,OCzCA,SAAAA,GACA,mBAAAA,MAAAsQ,GAAAtQ,IAEA,QAAA6W,EAAA9Z,KAAAga,QAAArd,EAAAmd,EAAA3V,OAAAgW,EAAA,IAAApZ,MAAApE,GAAAkQ,EAAA,EAAqFA,EAAAlQ,IAAOkQ,EAC5F,QAAAuI,EAAAgF,EAAAjF,EAAA2E,EAAAjN,GAAA7O,EAAAmX,EAAAhR,OAAAkW,EAAAF,EAAAtN,GAAA,IAAA9L,MAAA/C,GAAAzB,EAAA,EAA+GA,EAAAyB,IAAOzB,GACtH6Y,EAAAD,EAAA5Y,MAAA6d,EAAAnX,EAAAvG,KAAA0Y,IAAAR,SAAArY,EAAA4Y,MACA,aAAAC,IAAAgF,EAAAxF,SAAAQ,EAAAR,UACAyF,EAAA9d,GAAA6d,GAKA,WAAAP,GAAAM,EAAAna,KAAAia,WD8BAvW,UE1CA,SAAAT,GACA,mBAAAA,MAAAyQ,GAAAzQ,IAEA,QAAA6W,EAAA9Z,KAAAga,QAAArd,EAAAmd,EAAA3V,OAAAgW,KAAAJ,KAAAlN,EAAA,EAAyFA,EAAAlQ,IAAOkQ,EAChG,QAAAuI,EAAAD,EAAA2E,EAAAjN,GAAA7O,EAAAmX,EAAAhR,OAAA5H,EAAA,EAA8DA,EAAAyB,IAAOzB,GACrE6Y,EAAAD,EAAA5Y,MACA4d,EAAApX,KAAAE,EAAAvG,KAAA0Y,IAAAR,SAAArY,EAAA4Y,IACA4E,EAAAhX,KAAAqS,IAKA,WAAAyE,GAAAM,EAAAJ,IF+BAjT,OG3CA,SAAAwT,GACA,mBAAAA,MAAAlG,GAAAkG,IAEA,QAAAR,EAAA9Z,KAAAga,QAAArd,EAAAmd,EAAA3V,OAAAgW,EAAA,IAAApZ,MAAApE,GAAAkQ,EAAA,EAAqFA,EAAAlQ,IAAOkQ,EAC5F,QAAAuI,EAAAD,EAAA2E,EAAAjN,GAAA7O,EAAAmX,EAAAhR,OAAAkW,EAAAF,EAAAtN,MAAAtQ,EAAA,EAA4FA,EAAAyB,IAAOzB,GACnG6Y,EAAAD,EAAA5Y,KAAA+d,EAAA5d,KAAA0Y,IAAAR,SAAArY,EAAA4Y,IACAkF,EAAAtX,KAAAqS,GAKA,WAAAyE,GAAAM,EAAAna,KAAAia,WHiCAra,Kf6BA,SAAApC,EAAAM,GACA,IAAAN,EAGA,OAFAoC,EAAA,IAAAmB,MAAAf,KAAAua,QAAA1N,GAAA,EACA7M,KAAA8Q,KAAA,SAAAjU,GAA2B+C,IAAAiN,GAAAhQ,IAC3B+C,EAGA,IAAA7B,EAAAD,EAAAyX,GAAAL,GACA6E,EAAA/Z,KAAAia,SACAH,EAAA9Z,KAAAga,QAEA,mBAAAxc,MDvFA,SAAAiE,GACA,kBACA,OAAAA,GCqFA+Y,CAAAhd,IAEA,QAAAb,EAAAmd,EAAA3V,OAAAmQ,EAAA,IAAAvT,MAAApE,GAAAgH,EAAA,IAAA5C,MAAApE,GAAAyT,EAAA,IAAArP,MAAApE,GAAAkQ,EAAA,EAAsGA,EAAAlQ,IAAOkQ,EAAA,CAC7G,IAAA2H,EAAAuF,EAAAlN,GACAsI,EAAA2E,EAAAjN,GACAwI,EAAAF,EAAAhR,OACAvE,EAAApC,EAAAd,KAAA8X,OAAAI,SAAA/H,EAAAkN,GACAzE,EAAA1V,EAAAuE,OACAsW,EAAA9W,EAAAkJ,GAAA,IAAA9L,MAAAuU,GACAoF,EAAApG,EAAAzH,GAAA,IAAA9L,MAAAuU,GAGAvX,EAAAyW,EAAAW,EAAAsF,EAAAC,EAFAtK,EAAAvD,GAAA,IAAA9L,MAAAsU,GAEAzV,EAAA9B,GAKA,QAAA6c,EAAA3F,EAAAtM,EAAA,EAAAC,EAAA,EAA4CD,EAAA4M,IAAiB5M,EAC7D,GAAAiS,EAAAF,EAAA/R,GAAA,CAEA,IADAA,GAAAC,MAAAD,EAAA,KACAsM,EAAA0F,EAAA/R,SAAA2M,IACAqF,EAAAjG,MAAAM,GAAA,MAQA,OAHAV,EAAA,IAAAuF,GAAAvF,EAAAyF,IACAa,OAAAjX,EACA2Q,EAAAuG,MAAAzK,EACAkE,GepEA3Q,iBjB5CA,WAAAkW,GAAA7Z,KAAA4a,QAAA5a,KAAAga,QAAAzZ,IAAA8T,IAAArU,KAAAia,WiB6CA7J,KI9CA,WACA,WAAAyJ,GAAA7Z,KAAA6a,OAAA7a,KAAAga,QAAAzZ,IAAA8T,IAAArU,KAAAia,WJ8CAzJ,MKhDA,SAAAT,GAEA,QAAA+K,EAAA9a,KAAAga,QAAAe,EAAAhL,EAAAiK,QAAAgB,EAAAF,EAAA3W,OAAA8W,EAAAF,EAAA5W,OAAAxH,EAAA+J,KAAAnD,IAAAyX,EAAAC,GAAAC,EAAA,IAAAna,MAAAia,GAAAnO,EAAA,EAA8JA,EAAAlQ,IAAOkQ,EACrK,QAAAuI,EAAA+F,EAAAL,EAAAjO,GAAAuO,EAAAL,EAAAlO,GAAA7O,EAAAmd,EAAAhX,OAAAqM,EAAA0K,EAAArO,GAAA,IAAA9L,MAAA/C,GAAAzB,EAAA,EAAwHA,EAAAyB,IAAOzB,GAC/H6Y,EAAA+F,EAAA5e,IAAA6e,EAAA7e,MACAiU,EAAAjU,GAAA6Y,GAKA,KAAQvI,EAAAmO,IAAQnO,EAChBqO,EAAArO,GAAAiO,EAAAjO,GAGA,WAAAgN,GAAAqB,EAAAlb,KAAAia,WLmCA/J,MMnDA,WAEA,QAAA4J,EAAA9Z,KAAAga,QAAAnN,GAAA,EAAAlQ,EAAAmd,EAAA3V,SAA4D0I,EAAAlQ,GAC5D,QAAAyY,EAAAD,EAAA2E,EAAAjN,GAAAtQ,EAAA4Y,EAAAhR,OAAA,EAAA6Q,EAAAG,EAAA5Y,KAA4EA,GAAA,IAC5E6Y,EAAAD,EAAA5Y,MACAyY,OAAAI,EAAAiC,aAAArC,EAAApE,WAAAmE,aAAAK,EAAAJ,GACAA,EAAAI,GAKA,OAAApV,MNyCAgH,KdlDA,SAAAQ,GAGA,SAAA6T,EAAA7U,EAAAC,GACA,OAAAD,GAAAC,EAAAe,EAAAhB,EAAAoO,SAAAnO,EAAAmO,WAAApO,GAAAC,EAHAe,MAAAmO,IAMA,QAAAmE,EAAA9Z,KAAAga,QAAArd,EAAAmd,EAAA3V,OAAAmX,EAAA,IAAAva,MAAApE,GAAAkQ,EAAA,EAAsFA,EAAAlQ,IAAOkQ,EAAA,CAC7F,QAAAuI,EAAAD,EAAA2E,EAAAjN,GAAA7O,EAAAmX,EAAAhR,OAAAoX,EAAAD,EAAAzO,GAAA,IAAA9L,MAAA/C,GAAAzB,EAAA,EAAwGA,EAAAyB,IAAOzB,GAC/G6Y,EAAAD,EAAA5Y,MACAgf,EAAAhf,GAAA6Y,GAGAmG,EAAAvU,KAAAqU,GAGA,WAAAxB,GAAAyB,EAAAtb,KAAAia,UAAA/J,ScmCAxT,KOrDA,WACA,IAAAmG,EAAAqB,UAAA,GAGA,OAFAA,UAAA,GAAAlE,KACA6C,EAAAwM,MAAA,KAAAnL,WACAlE,MPkDAwb,MQtDA,WACA,IAAAA,EAAA,IAAAza,MAAAf,KAAAua,QAAAhe,GAAA,EAEA,OADAyD,KAAA8Q,KAAA,WAAwB0K,IAAAjf,GAAAyD,OACxBwb,GRoDApG,KSvDA,WAEA,QAAA0E,EAAA9Z,KAAAga,QAAAnN,EAAA,EAAAlQ,EAAAmd,EAAA3V,OAA2D0I,EAAAlQ,IAAOkQ,EAClE,QAAAsI,EAAA2E,EAAAjN,GAAAtQ,EAAA,EAAAyB,EAAAmX,EAAAhR,OAAwD5H,EAAAyB,IAAOzB,EAAA,CAC/D,IAAA6Y,EAAAD,EAAA5Y,GACA,GAAA6Y,EAAA,OAAAA,EAIA,aT+CAmF,KUxDA,WACA,IAAAA,EAAA,EAEA,OADAva,KAAA8Q,KAAA,aAAwByJ,IACxBA,GVsDAkB,MWzDA,WACA,OAAAzb,KAAAoV,QXyDAtE,KY1DA,SAAAjO,GAEA,QAAAiX,EAAA9Z,KAAAga,QAAAnN,EAAA,EAAAlQ,EAAAmd,EAAA3V,OAA2D0I,EAAAlQ,IAAOkQ,EAClE,QAAAuI,EAAAD,EAAA2E,EAAAjN,GAAAtQ,EAAA,EAAAyB,EAAAmX,EAAAhR,OAA8D5H,EAAAyB,IAAOzB,GACrE6Y,EAAAD,EAAA5Y,KAAAsG,EAAAnG,KAAA0Y,IAAAR,SAAArY,EAAA4Y,GAIA,OAAAnV,MZmDAmD,KbjBA,SAAArG,EAAAU,GACA,IAAAuV,EAAAL,GAAA5V,GAEA,GAAAoH,UAAAC,OAAA,GACA,IAAAiR,EAAApV,KAAAoV,OACA,OAAArC,EAAAF,MACAuC,EAAAsG,eAAA3I,EAAAH,MAAAG,EAAAF,OACAuC,EAAAzE,aAAAoC,GAGA,OAAA/S,KAAA8Q,MAAA,MAAAtT,EACAuV,EAAAF,MA7CA,SAAAE,GACA,kBACA/S,KAAA2b,kBAAA5I,EAAAH,MAAAG,EAAAF,SARA,SAAA/V,GACA,kBACAkD,KAAA4b,gBAAA9e,KAiDA,mBAAAU,EACAuV,EAAAF,MApBA,SAAAE,EAAAvV,GACA,kBACA,IAAAiM,EAAAjM,EAAA6R,MAAArP,KAAAkE,WACA,MAAAuF,EAAAzJ,KAAA2b,kBAAA5I,EAAAH,MAAAG,EAAAF,OACA7S,KAAA6b,eAAA9I,EAAAH,MAAAG,EAAAF,MAAApJ,KAZA,SAAA3M,EAAAU,GACA,kBACA,IAAAiM,EAAAjM,EAAA6R,MAAArP,KAAAkE,WACA,MAAAuF,EAAAzJ,KAAA4b,gBAAA9e,GACAkD,KAAA4W,aAAA9Z,EAAA2M,KAyBAsJ,EAAAF,MAnCA,SAAAE,EAAAvV,GACA,kBACAwC,KAAA6b,eAAA9I,EAAAH,MAAAG,EAAAF,MAAArV,KARA,SAAAV,EAAAU,GACA,kBACAwC,KAAA4W,aAAA9Z,EAAAU,MAuCAuV,EAAAvV,KaKA4F,MXtCA,SAAAtG,EAAAU,EAAAse,GACA,OAAA5X,UAAAC,OAAA,EACAnE,KAAA8Q,MAAA,MAAAtT,EAtBA,SAAAV,GACA,kBACAkD,KAAAoD,MAAA2Y,eAAAjf,KAqBA,mBAAAU,EAXA,SAAAV,EAAAU,EAAAse,GACA,kBACA,IAAArS,EAAAjM,EAAA6R,MAAArP,KAAAkE,WACA,MAAAuF,EAAAzJ,KAAAoD,MAAA2Y,eAAAjf,GACAkD,KAAAoD,MAAA4Y,YAAAlf,EAAA2M,EAAAqS,KAVA,SAAAhf,EAAAU,EAAAse,GACA,kBACA9b,KAAAoD,MAAA4Y,YAAAlf,EAAAU,EAAAse,MAiBAhf,EAAAU,EAAA,MAAAse,EAAA,GAAAA,IACAhG,GAAA9V,KAAAoV,OAAAtY,IWiCAoB,SazCA,SAAApB,EAAAU,GACA,OAAA0G,UAAAC,OAAA,EACAnE,KAAA8Q,MAAA,MAAAtT,EAtBA,SAAAV,GACA,yBACAkD,KAAAlD,KAqBA,mBAAAU,EAXA,SAAAV,EAAAU,GACA,kBACA,IAAAiM,EAAAjM,EAAA6R,MAAArP,KAAAkE,WACA,MAAAuF,SAAAzJ,KAAAlD,GACAkD,KAAAlD,GAAA2M,IAVA,SAAA3M,EAAAU,GACA,kBACAwC,KAAAlD,GAAAU,KAiBAV,EAAAU,IACAwC,KAAAoV,OAAAtY,IboCAmf,QVDA,SAAAnf,EAAAU,GACA,IAAAgZ,EAAAP,GAAAnZ,EAAA,IAEA,GAAAoH,UAAAC,OAAA,GAEA,IADA,IAAAsS,EAAAN,GAAAnW,KAAAoV,QAAA7Y,GAAA,EAAAyB,EAAAwY,EAAArS,SACA5H,EAAAyB,GAAA,IAAAyY,EAAAM,SAAAP,EAAAja,IAAA,SACA,SAGA,OAAAyD,KAAA8Q,MAAA,mBAAAtT,EAfA,SAAAgZ,EAAAhZ,GACA,mBACAA,EAAA6R,MAAArP,KAAAkE,WAAAqS,GAAAI,IAAA3W,KAAAwW,KAcAhZ,EA5BA,SAAAgZ,GACA,kBACAD,GAAAvW,KAAAwW,KAIA,SAAAA,GACA,kBACAG,GAAA3W,KAAAwW,MAsBAA,EAAAhZ,KUVA+S,KT9CA,SAAA/S,GACA,OAAA0G,UAAAC,OACAnE,KAAA8Q,KAAA,MAAAtT,EACAwZ,IAAA,mBAAAxZ,EAVA,SAAAA,GACA,kBACA,IAAAiM,EAAAjM,EAAA6R,MAAArP,KAAAkE,WACAlE,KAAAiX,YAAA,MAAAxN,EAAA,GAAAA,IATA,SAAAjM,GACA,kBACAwC,KAAAiX,YAAAzZ,KAgBAA,IACAwC,KAAAoV,OAAA6B,aSyCAiF,KR/CA,SAAA1e,GACA,OAAA0G,UAAAC,OACAnE,KAAA8Q,KAAA,MAAAtT,EACA0Z,IAAA,mBAAA1Z,EAVA,SAAAA,GACA,kBACA,IAAAiM,EAAAjM,EAAA6R,MAAArP,KAAAkE,WACAlE,KAAAmX,UAAA,MAAA1N,EAAA,GAAAA,IATA,SAAAjM,GACA,kBACAwC,KAAAmX,UAAA3Z,KAgBAA,IACAwC,KAAAoV,OAAA+B,WQ0CAC,MP7DA,WACA,OAAApX,KAAA8Q,KAAAsG,KO6DAE,MN9DA,WACA,OAAAtX,KAAA8Q,KAAAwG,KM8DApU,OcjEA,SAAApG,GACA,IAAAe,EAAA,mBAAAf,IAAAgW,GAAAhW,GACA,OAAAkD,KAAAiD,OAAA,WACA,OAAAjD,KAAA6U,YAAAhX,EAAAwR,MAAArP,KAAAkE,ed+DAuM,OL7DA,SAAA3T,EAAAqf,GACA,IAAAte,EAAA,mBAAAf,IAAAgW,GAAAhW,GACAmG,EAAA,MAAAkZ,EAAA1E,GAAA,mBAAA0E,IAAA5I,GAAA4I,GACA,OAAAnc,KAAAiD,OAAA,WACA,OAAAjD,KAAA+U,aAAAlX,EAAAwR,MAAArP,KAAAkE,WAAAjB,EAAAoM,MAAArP,KAAAkE,YAAA,SK0DA2M,OJhEA,WACA,OAAA7Q,KAAA8Q,KAAAD,KIgEAuL,MH9DA,SAAAC,GACA,OAAArc,KAAAiD,OAAAoZ,EAAAxE,GAAAF,KG8DAlD,MevEA,SAAAjX,GACA,OAAA0G,UAAAC,OACAnE,KAAA9B,SAAA,WAAAV,GACAwC,KAAAoV,OAAAR,UfqEAlD,GFIA,SAAAC,EAAAnU,EAAAub,GACA,IAAAxc,EAAAkB,EAAAoU,EA5CA,SAAAA,GACA,OAAAA,EAAAC,OAAAC,MAAA,SAAAxR,IAAA,SAAA9C,GACA,IAAAX,EAAA,GAAAP,EAAAkB,EAAAuU,QAAA,KAEA,OADAzV,GAAA,IAAAO,EAAAW,EAAAmM,MAAArN,EAAA,GAAAkB,IAAAmM,MAAA,EAAArN,KACYoF,KAAAlE,EAAAX,UAwCZwf,CAAA3K,EAAA,IAAA3T,EAAA6T,EAAA1N,OAEA,KAAAD,UAAAC,OAAA,IAcA,IAFAuN,EAAAlU,EAAAwb,GAAAJ,GACA,MAAAG,OAAA,GACAxc,EAAA,EAAaA,EAAAyB,IAAOzB,EAAAyD,KAAA8Q,KAAAY,EAAAG,EAAAtV,GAAAiB,EAAAub,IACpB,OAAA/Y,KAdA,IAAA0R,EAAA1R,KAAAoV,OAAAyD,KACA,GAAAnH,EAAA,QAAA1U,EAAA6P,EAAA,EAAAlQ,EAAA+U,EAAAvN,OAA6C0I,EAAAlQ,IAAOkQ,EACpD,IAAAtQ,EAAA,EAAAS,EAAA0U,EAAA7E,GAA4BtQ,EAAAyB,IAAOzB,EACnC,IAAAkB,EAAAoU,EAAAtV,IAAAoF,OAAA3E,EAAA2E,MAAAlE,EAAAX,OAAAE,EAAAF,KACA,OAAAE,EAAAQ,OEXA6T,SD5CA,SAAA1P,EAAA0X,GACA,OAAArZ,KAAA8Q,MAAA,mBAAAuI,EAPA,SAAA1X,EAAA0X,GACA,kBACA,OAAAD,GAAApZ,KAAA2B,EAAA0X,EAAAhK,MAAArP,KAAAkE,cARA,SAAAvC,EAAA0X,GACA,kBACA,OAAAD,GAAApZ,KAAA2B,EAAA0X,MAaA1X,EAAA0X,MC4CA,IAAAkD,GAAA,GgB1EAC,GAAA,SAAAhJ,GACA,uBAAAA,EACA,IAAAqG,KAAA/X,SAAAC,cAAAyR,MAAA1R,SAAAsR,kBACA,IAAAyG,KAAArG,IAAAoG,KCFA6C,GAAA,SAAA3f,GACA,OAAA0f,GAAA1J,GAAAhW,GAAAJ,KAAAoF,SAAAsR,mBCJAsJ,GAAA,EAEA,SAAA7J,KACA,WAAA8J,GAGA,SAAAA,KACA3c,KAAAiM,EAAA,OAAAyQ,IAAAE,SAAA,IAGAD,GAAAxe,UAAA0U,GAAA1U,WACAsT,YAAAkL,GACAvf,IAAA,SAAAgY,GAEA,IADA,IAAA/S,EAAArC,KAAAiM,IACA5J,KAAA+S,IAAA,KAAAA,IAAAxE,YAAA,OACA,OAAAwE,EAAA/S,IAEAmP,IAAA,SAAA4D,EAAA5X,GACA,OAAA4X,EAAApV,KAAAiM,GAAAzO,GAEAqT,OAAA,SAAAuE,GACA,OAAApV,KAAAiM,KAAAmJ,YAAApV,KAAAiM,IAEA2Q,SAAA,WACA,OAAA5c,KAAAiM,ICtBA,IAAAkN,GAAA,WAEA,IADA,IAAA0D,EAAAC,EAAA/E,GACA8E,EAAAC,EAAA3D,aAAA2D,EAAAD,EACA,OAAAC,GCLAC,GAAA,SAAA3H,EAAAkD,GACA,IAAA1X,EAAAwU,EAAA4H,iBAAA5H,EAEA,GAAAxU,EAAAqc,eAAA,CACA,IAAAC,EAAAtc,EAAAqc,iBAGA,OAFAC,EAAAzb,EAAA6W,EAAA6E,QAAAD,EAAAxb,EAAA4W,EAAA8E,UACAF,IAAAG,gBAAAjI,EAAAkI,eAAAC,YACA9b,EAAAyb,EAAAxb,GAGA,IAAA8b,EAAApI,EAAAqI,wBACA,OAAAnF,EAAA6E,QAAAK,EAAA7V,KAAAyN,EAAAsI,WAAApF,EAAA8E,QAAAI,EAAAG,IAAAvI,EAAAwI,YCRAC,GAAA,SAAAzI,GACA,IAAAkD,EAAAa,KAEA,OADAb,EAAAwF,iBAAAxF,IAAAwF,eAAA,IACAf,GAAA3H,EAAAkD,ICJAyF,GAAA,SAAAvK,GACA,uBAAAA,EACA,IAAAqG,IAAA/X,SAAA6R,iBAAAH,KAAA1R,SAAAsR,kBACA,IAAAyG,IAAA,MAAArG,QAAAoG,KCFAoE,GAAA,SAAA5I,EAAA6I,EAAAC,GACAha,UAAAC,OAAA,IAAA+Z,EAAAD,IAAA9E,KAAA2E,gBAEA,QAAAK,EAAA5hB,EAAA,EAAAyB,EAAAigB,IAAA9Z,OAAA,EAA0D5H,EAAAyB,IAAOzB,EACjE,IAAA4hB,EAAAF,EAAA1hB,IAAA2hB,eACA,OAAAnB,GAAA3H,EAAA+I,GAIA,aCTAC,GAAA,SAAAhJ,EAAA6I,GACA,MAAAA,MAAA9E,KAAA8E,SAEA,QAAA1hB,EAAA,EAAAyB,EAAAigB,IAAA9Z,OAAA,EAAAka,EAAA,IAAAtd,MAAA/C,GAA0EzB,EAAAyB,IAAOzB,EACjF8hB,EAAA9hB,GAAAwgB,GAAA3H,EAAA6I,EAAA1hB,IAGA,OAAA8hB,GCRA,SAAAC,KACAvG,GAAAwG,2BAGA,IAAAC,GAAA,WACAzG,GAAA0G,iBACA1G,GAAAwG,4BCLAG,GAAA,SAAAC,GACA,IAAA9iB,EAAA8iB,EAAA7c,SAAAsR,gBACArD,EAAAyM,GAAAmC,GAAAjN,GAAA,iBAAA8M,IAAA,GACA,kBAAA3iB,EACAkU,EAAA2B,GAAA,mBAAA8M,IAAA,IAEA3iB,EAAA+iB,WAAA/iB,EAAAuH,MAAAyb,cACAhjB,EAAAuH,MAAAyb,cAAA,SAIA,SAAAC,GAAAH,EAAAI,GACA,IAAAljB,EAAA8iB,EAAA7c,SAAAsR,gBACArD,EAAAyM,GAAAmC,GAAAjN,GAAA,uBACAqN,IACAhP,EAAA2B,GAAA,aAAA8M,IAAA,GACAQ,WAAA,WAA2BjP,EAAA2B,GAAA,oBAAoC,IAE/D,kBAAA7V,EACAkU,EAAA2B,GAAA,0BAEA7V,EAAAuH,MAAAyb,cAAAhjB,EAAA+iB,kBACA/iB,EAAA+iB,YCzBA,IAAAK,GAAA,SAAAxd,GACA,kBACA,OAAAA,ICFA,SAAAyd,GAAA9c,EAAAT,EAAAwd,EAAA9c,EAAA+c,EAAA3d,EAAAC,EAAA2d,EAAAC,EAAAjO,GACArR,KAAAoC,SACApC,KAAA2B,OACA3B,KAAAmf,UACAnf,KAAAke,WAAA7b,EACArC,KAAAof,SACApf,KAAAyB,IACAzB,KAAA0B,IACA1B,KAAAqf,KACArf,KAAAsf,KACAtf,KAAAiM,EAAAoF,ECFA,SAAAkO,KACA,OAAAxH,GAAAyH,OAGA,SAAAC,KACA,OAAAzf,KAAA4Q,WAGA,SAAA8O,GAAA7iB,GACA,aAAAA,GAAsB4E,EAAAsW,GAAAtW,EAAAC,EAAAqW,GAAArW,GAAuB7E,EAG7C,SAAA8iB,KACA,uBAAA3f,KDRAkf,GAAA/gB,UAAAuT,GAAA,WACA,IAAAlU,EAAAwC,KAAAiM,EAAAyF,GAAArC,MAAArP,KAAAiM,EAAA/H,WACA,OAAA1G,IAAAwC,KAAAiM,EAAAjM,KAAAxC,GCSA,IAAAoiB,GAAA,WACA,IAOAC,EACAC,EACAC,EACAC,EAVAlZ,EAAAyY,GACAU,EAAAR,GACAN,EAAAO,GACAQ,EAAAP,GACAQ,KACAC,EAAAhO,GAAA,sBACAgN,EAAA,EAKAiB,EAAA,EAEA,SAAAC,EAAAvQ,GACAA,EACA2B,GAAA,iBAAA6O,GACAzZ,OAAAoZ,GACAxO,GAAA,kBAAA8O,GACA9O,GAAA,iBAAA+O,GACA/O,GAAA,iCAAAgP,GACAtd,MAAA,uBACAA,MAAA,+CAGA,SAAAmd,IACA,IAAAP,GAAAlZ,EAAAuI,MAAArP,KAAAkE,WAAA,CACA,IAAAyc,EAAAC,EAAA,QAAAX,EAAA5Q,MAAArP,KAAAkE,WAAA2Z,GAAA7d,KAAAkE,WACAyc,IACAnE,GAAAzE,GAAA4G,MAAAjN,GAAA,iBAAAmP,GAAA,GAAAnP,GAAA,eAAAoP,GAAA,GACApC,GAAA3G,GAAA4G,MACAL,KACAyB,GAAA,EACAF,EAAA9H,GAAAoF,QACA2C,EAAA/H,GAAAqF,QACAuD,EAAA,WAGA,SAAAE,IAEA,GADArC,MACAuB,EAAA,CACA,IAAAV,EAAAtH,GAAAoF,QAAA0C,EAAAP,EAAAvH,GAAAqF,QAAA0C,EACAC,EAAAV,IAAAC,IAAAe,EAEAF,EAAAtC,MAAA,QAGA,SAAAiD,IACAtE,GAAAzE,GAAA4G,MAAAjN,GAAA,oCACAoN,GAAA/G,GAAA4G,KAAAoB,GACAvB,KACA2B,EAAAtC,MAAA,OAGA,SAAA2C,IACA,GAAA1Z,EAAAuI,MAAArP,KAAAkE,WAAA,CACA,IAEA3H,EAAAokB,EAFA1C,EAAAlG,GAAA+F,eACAlhB,EAAAqjB,EAAA5Q,MAAArP,KAAAkE,WACAlG,EAAAigB,EAAA9Z,OAEA,IAAA5H,EAAA,EAAeA,EAAAyB,IAAOzB,GACtBokB,EAAAC,EAAA3C,EAAA1hB,GAAA2hB,WAAAthB,EAAAohB,GAAAhe,KAAAkE,cACAoa,KACAqC,EAAA,WAKA,SAAAF,IACA,IACAlkB,EAAAokB,EADA1C,EAAAlG,GAAA+F,eACA9f,EAAAigB,EAAA9Z,OAEA,IAAA5H,EAAA,EAAeA,EAAAyB,IAAOzB,GACtBokB,EAAAR,EAAAlC,EAAA1hB,GAAA2hB,eACAM,KACAmC,EAAA,SAKA,SAAAD,IACA,IACAnkB,EAAAokB,EADA1C,EAAAlG,GAAA+F,eACA9f,EAAAigB,EAAA9Z,OAIA,IAFA6b,GAAAe,aAAAf,GACAA,EAAAhB,WAAA,WAAyCgB,EAAA,MAAsB,KAC/DzjB,EAAA,EAAeA,EAAAyB,IAAOzB,GACtBokB,EAAAR,EAAAlC,EAAA1hB,GAAA2hB,eACAI,KACAqC,EAAA,QAKA,SAAAC,EAAAve,EAAA4d,EAAA/C,EAAAhL,EAAAC,GACA,IAAA7T,EAAA+gB,EAAAC,EAAAjhB,EAAA6e,EAAA+C,EAAA5d,GACA2e,EAAAZ,EAAAtQ,OAEA,GAAAoJ,GAAA,IAAAgG,GAAAoB,EAAA,cAAAhiB,EAAA+D,EAAA+c,EAAA/gB,EAAA,GAAAA,EAAA,OAAA2iB,GAAA,WACA,cAAAjJ,GAAAoH,QAAA7gB,EAAA6gB,EAAA9P,MAAA6C,EAAAC,MACAkN,EAAA/gB,EAAAmD,EAAApD,EAAA,MACAihB,EAAAhhB,EAAAoD,EAAArD,EAAA,OACA,KAGA,gBAAAsiB,EAAAhf,GACA,IAAA3D,EAAAijB,EAAA5iB,EACA,OAAAsD,GACA,YAAAwe,EAAA9d,GAAAse,EAAA3iB,EAAAohB,IAA2D,MAC3D,iBAAAe,EAAA9d,KAAA+c,EACA,WAAA/gB,EAAA6e,EAAA+C,EAAA5d,GAAArE,EAAAohB,EAEAlG,GAAA,IAAAgG,GAAAoB,EAAA3e,EAAArD,EAAA+D,EAAArE,EAAAK,EAAA,GAAAghB,EAAAhhB,EAAA,GAAAihB,EAAAjhB,EAAA,GAAA4iB,EAAA,GAAA5iB,EAAA,GAAA4iB,EAAA,GAAAD,KAAA3R,MAAA2R,GAAArf,EAAAuQ,EAAAC,KA6BA,OAzBAmO,EAAAxZ,OAAA,SAAAmF,GACA,OAAA/H,UAAAC,QAAA2C,EAAA,mBAAAmF,IAAAgT,KAAAhT,GAAAqU,GAAAxZ,GAGAwZ,EAAAL,UAAA,SAAAhU,GACA,OAAA/H,UAAAC,QAAA8b,EAAA,mBAAAhU,IAAAgT,GAAAhT,GAAAqU,GAAAL,GAGAK,EAAAnB,QAAA,SAAAlT,GACA,OAAA/H,UAAAC,QAAAgb,EAAA,mBAAAlT,IAAAgT,GAAAhT,GAAAqU,GAAAnB,GAGAmB,EAAAJ,UAAA,SAAAjU,GACA,OAAA/H,UAAAC,QAAA+b,EAAA,mBAAAjU,IAAAgT,KAAAhT,GAAAqU,GAAAJ,GAGAI,EAAA5O,GAAA,WACA,IAAAlU,EAAA4iB,EAAA1O,GAAArC,MAAA+Q,EAAAlc,WACA,OAAA1G,IAAA4iB,EAAAE,EAAA9iB,GAGA8iB,EAAAY,cAAA,SAAAjV,GACA,OAAA/H,UAAAC,QAAAkc,GAAApU,QAAAqU,GAAA5Z,KAAAC,KAAA0Z,IAGAC,GCrKArkB,GAAA,SAAAwV,EAAA3V,EAAAqC,GACAsT,EAAAtT,UAAArC,EAAAqC,YACAA,EAAAsT,eAGA,SAAA0P,GAAA3M,EAAA4M,GACA,IAAAjjB,EAAAlB,OAAAY,OAAA2W,EAAArW,WACA,QAAAL,KAAAsjB,EAAAjjB,EAAAL,GAAAsjB,EAAAtjB,GACA,OAAAK,ECNA,SAAAkjB,MAEA,IAGAC,GAAA,sBACAC,GAAA,gDACAC,GAAA,iDACAC,GAAA,mBACAC,GAAA,mBACAC,GAAA,IAAAC,OAAA,WAAAN,UAAA,QACAO,GAAA,IAAAD,OAAA,WAAAJ,UAAA,QACAM,GAAA,IAAAF,OAAA,YAAAN,SAAAC,IAAA,QACAQ,GAAA,IAAAH,OAAA,YAAAJ,SAAAD,IAAA,QACAS,GAAA,IAAAJ,OAAA,WAAAL,GAAAC,OAAA,QACAS,GAAA,IAAAL,OAAA,YAAAL,GAAAC,MAAAD,IAAA,QAEAW,IACAC,UAAA,SACAC,aAAA,SACAC,KAAA,MACAC,WAAA,QACAC,MAAA,SACAC,MAAA,SACAC,OAAA,SACAC,MAAA,EACAC,eAAA,SACAC,KAAA,IACAC,WAAA,QACAC,MAAA,SACAC,UAAA,SACAC,UAAA,QACAC,WAAA,QACAC,UAAA,SACAC,MAAA,SACAC,eAAA,QACAC,SAAA,SACAC,QAAA,SACAC,KAAA,MACAC,SAAA,IACAC,SAAA,MACAC,cAAA,SACAC,SAAA,SACAC,UAAA,MACAC,SAAA,SACAC,UAAA,SACAC,YAAA,QACAC,eAAA,QACAC,WAAA,SACAC,WAAA,SACAC,QAAA,QACAC,WAAA,SACAC,aAAA,QACAC,cAAA,QACAC,cAAA,QACAC,cAAA,QACAC,cAAA,MACAC,WAAA,QACAC,SAAA,SACAC,YAAA,MACAC,QAAA,QACAC,QAAA,QACAC,WAAA,QACAC,UAAA,SACAC,YAAA,SACAC,YAAA,QACAC,QAAA,SACAC,UAAA,SACAC,WAAA,SACAC,KAAA,SACAC,UAAA,SACAC,KAAA,QACAC,MAAA,MACAC,YAAA,SACAC,KAAA,QACAC,SAAA,SACAC,QAAA,SACAC,UAAA,SACAC,OAAA,QACAC,MAAA,SACAC,MAAA,SACAC,SAAA,SACAC,cAAA,SACAC,UAAA,QACAC,aAAA,SACAC,UAAA,SACAC,WAAA,SACAC,UAAA,SACAC,qBAAA,SACAC,UAAA,SACAC,WAAA,QACAC,UAAA,SACAC,UAAA,SACAC,YAAA,SACAC,cAAA,QACAC,aAAA,QACAC,eAAA,QACAC,eAAA,QACAC,eAAA,SACAC,YAAA,SACAC,KAAA,MACAC,UAAA,QACAC,MAAA,SACAC,QAAA,SACAC,OAAA,QACAC,iBAAA,QACAC,WAAA,IACAC,aAAA,SACAC,aAAA,QACAC,eAAA,QACAC,gBAAA,QACAC,kBAAA,MACAC,gBAAA,QACAC,gBAAA,SACAC,aAAA,QACAC,UAAA,SACAC,UAAA,SACAC,SAAA,SACAC,YAAA,SACAC,KAAA,IACAC,QAAA,SACAC,MAAA,QACAC,UAAA,QACAC,OAAA,SACAC,UAAA,SACAC,OAAA,SACAC,cAAA,SACAC,UAAA,SACAC,cAAA,SACAC,cAAA,SACAC,WAAA,SACAC,UAAA,SACAC,KAAA,SACAC,KAAA,SACAC,KAAA,SACAC,WAAA,SACAC,OAAA,QACAC,cAAA,QACAC,IAAA,SACAC,UAAA,SACAC,UAAA,QACAC,YAAA,QACAC,OAAA,SACAC,WAAA,SACAC,SAAA,QACAC,SAAA,SACAC,OAAA,SACAC,OAAA,SACAC,QAAA,QACAC,UAAA,QACAC,UAAA,QACAC,UAAA,QACAC,KAAA,SACAC,YAAA,MACAC,UAAA,QACAC,IAAA,SACAC,KAAA,MACAC,QAAA,SACAC,OAAA,SACAC,UAAA,QACAC,OAAA,SACAC,MAAA,SACAC,MAAA,SACAC,WAAA,SACAC,OAAA,SACAC,YAAA,UAeA,SAAAC,GAAAjc,GACA,IAAA3S,EAEA,OADA2S,KAAA,IAAAwC,OAAA0Z,eACA7uB,EAAA8kB,GAAAgK,KAAAnc,IAAA,IAAAoc,IAAA/uB,EAAAgvB,SAAAhvB,EAAA,cAAAA,GAAA,MAAAA,GAAA,SAAAA,GAAA,GAAAA,IAAA,KAAAA,EAAA,IACAA,EAAA+kB,GAAA+J,KAAAnc,IAAAsc,GAAAD,SAAAhvB,EAAA,SACAA,EAAAglB,GAAA8J,KAAAnc,IAAA,IAAAoc,GAAA/uB,EAAA,GAAAA,EAAA,GAAAA,EAAA,OACAA,EAAAklB,GAAA4J,KAAAnc,IAAA,IAAAoc,GAAA,IAAA/uB,EAAA,WAAAA,EAAA,WAAAA,EAAA,WACAA,EAAAmlB,GAAA2J,KAAAnc,IAAAuc,GAAAlvB,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,KACAA,EAAAolB,GAAA0J,KAAAnc,IAAAuc,GAAA,IAAAlvB,EAAA,WAAAA,EAAA,WAAAA,EAAA,OAAAA,EAAA,KACAA,EAAAqlB,GAAAyJ,KAAAnc,IAAAwc,GAAAnvB,EAAA,GAAAA,EAAA,OAAAA,EAAA,WACAA,EAAAslB,GAAAwJ,KAAAnc,IAAAwc,GAAAnvB,EAAA,GAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,IACAulB,GAAA9jB,eAAAkR,GAAAsc,GAAA1J,GAAA5S,IACA,gBAAAA,EAAA,IAAAoc,GAAApkB,YAAA,GACA,KAGA,SAAAskB,GAAA5tB,GACA,WAAA0tB,GAAA1tB,GAAA,OAAAA,GAAA,UAAAA,EAAA,GAGA,SAAA6tB,GAAAxuB,EAAA0uB,EAAAtlB,EAAAD,GAEA,OADAA,GAAA,IAAAnJ,EAAA0uB,EAAAtlB,EAAAa,KACA,IAAAokB,GAAAruB,EAAA0uB,EAAAtlB,EAAAD,GAGA,SAAAwlB,GAAAhvB,GAEA,OADAA,aAAAqkB,KAAArkB,EAAAuuB,GAAAvuB,IACAA,EAEA,IAAA0uB,IADA1uB,IAAAivB,OACA5uB,EAAAL,EAAA+uB,EAAA/uB,EAAAyJ,EAAAzJ,EAAAkvB,SAFA,IAAAR,GAKA,SAAAS,GAAA9uB,EAAA0uB,EAAAtlB,EAAAylB,GACA,WAAAhoB,UAAAC,OAAA6nB,GAAA3uB,GAAA,IAAAquB,GAAAruB,EAAA0uB,EAAAtlB,EAAA,MAAAylB,EAAA,EAAAA,GAGA,SAAAR,GAAAruB,EAAA0uB,EAAAtlB,EAAAylB,GACAlsB,KAAA3C,KACA2C,KAAA+rB,KACA/rB,KAAAyG,KACAzG,KAAAksB,WAkCA,SAAAE,GAAA5uB,GAEA,QADAA,EAAAkJ,KAAAlD,IAAA,EAAAkD,KAAAnD,IAAA,IAAAmD,KAAAmJ,MAAArS,IAAA,KACA,WAAAA,EAAAof,SAAA,IAGA,SAAAkP,GAAAO,EAAA/tB,EAAA9B,EAAAgK,GAIA,OAHAA,GAAA,EAAA6lB,EAAA/tB,EAAA9B,EAAA8K,IACA9K,GAAA,GAAAA,GAAA,EAAA6vB,EAAA/tB,EAAAgJ,IACAhJ,GAAA,IAAA+tB,EAAA/kB,KACA,IAAAglB,GAAAD,EAAA/tB,EAAA9B,EAAAgK,GA6BA,SAAA+lB,GAAAF,EAAA/tB,EAAA9B,EAAA0vB,GACA,WAAAhoB,UAAAC,OA3BA,SAAAnH,GACA,GAAAA,aAAAsvB,GAAA,WAAAA,GAAAtvB,EAAAqvB,EAAArvB,EAAAsB,EAAAtB,EAAAR,EAAAQ,EAAAkvB,SAEA,GADAlvB,aAAAqkB,KAAArkB,EAAAuuB,GAAAvuB,KACAA,EAAA,WAAAsvB,GACA,GAAAtvB,aAAAsvB,GAAA,OAAAtvB,EAEA,IAAAK,GADAL,IAAAivB,OACA5uB,EAAA,IACA0uB,EAAA/uB,EAAA+uB,EAAA,IACAtlB,EAAAzJ,EAAAyJ,EAAA,IACAlD,EAAAmD,KAAAnD,IAAAlG,EAAA0uB,EAAAtlB,GACAjD,EAAAkD,KAAAlD,IAAAnG,EAAA0uB,EAAAtlB,GACA4lB,EAAA/kB,IACAhJ,EAAAkF,EAAAD,EACA/G,GAAAgH,EAAAD,GAAA,EAUA,OATAjF,GACA+tB,EAAAhvB,IAAAmG,GAAAuoB,EAAAtlB,GAAAnI,EAAA,GAAAytB,EAAAtlB,GACAslB,IAAAvoB,GAAAiD,EAAApJ,GAAAiB,EAAA,GACAjB,EAAA0uB,GAAAztB,EAAA,EACAA,GAAA9B,EAAA,GAAAgH,EAAAD,EAAA,EAAAC,EAAAD,EACA8oB,GAAA,IAEA/tB,EAAA9B,EAAA,GAAAA,EAAA,IAAA6vB,EAEA,IAAAC,GAAAD,EAAA/tB,EAAA9B,EAAAQ,EAAAkvB,SAIAM,CAAAH,GAAA,IAAAC,GAAAD,EAAA/tB,EAAA9B,EAAA,MAAA0vB,EAAA,EAAAA,GAGA,SAAAI,GAAAD,EAAA/tB,EAAA9B,EAAA0vB,GACAlsB,KAAAqsB,KACArsB,KAAA1B,KACA0B,KAAAxD,KACAwD,KAAAksB,WAiCA,SAAAO,GAAAJ,EAAApR,EAAAyR,GACA,OAGA,KAHAL,EAAA,GAAApR,GAAAyR,EAAAzR,GAAAoR,EAAA,GACAA,EAAA,IAAAK,EACAL,EAAA,IAAApR,GAAAyR,EAAAzR,IAAA,IAAAoR,GAAA,GACApR,GAzKAhf,GAAAolB,GAAAkK,IACAoB,YAAA,WACA,OAAA3sB,KAAAisB,MAAAU,eAEAP,IAAA,WACA,OAAApsB,KAAAisB,MAAAG,OAEAxP,SAAA,WACA,OAAA5c,KAAAisB,MAAA,MA+CAhwB,GAAAyvB,GAAAS,GAAAhL,GAAAE,IACAuL,SAAA,SAAAnoB,GAEA,OADAA,EAAA,MAAAA,EA9NA,EADA,GA+NAiC,KAAAE,IA9NA,EADA,GA+NAnC,GACA,IAAAinB,GAAA1rB,KAAA3C,EAAAoH,EAAAzE,KAAA+rB,EAAAtnB,EAAAzE,KAAAyG,EAAAhC,EAAAzE,KAAAksB,UAEAW,OAAA,SAAApoB,GAEA,OADAA,EAAA,MAAAA,EAnOA,GAmOAiC,KAAAE,IAnOA,GAmOAnC,GACA,IAAAinB,GAAA1rB,KAAA3C,EAAAoH,EAAAzE,KAAA+rB,EAAAtnB,EAAAzE,KAAAyG,EAAAhC,EAAAzE,KAAAksB,UAEAD,IAAA,WACA,OAAAjsB,MAEA2sB,YAAA,WACA,UAAA3sB,KAAA3C,GAAA2C,KAAA3C,GAAA,KACA,GAAA2C,KAAA+rB,GAAA/rB,KAAA+rB,GAAA,KACA,GAAA/rB,KAAAyG,GAAAzG,KAAAyG,GAAA,KACA,GAAAzG,KAAAksB,SAAAlsB,KAAAksB,SAAA,GAEAE,IAAA,WACA,UAAAA,GAAApsB,KAAA3C,GAAA+uB,GAAApsB,KAAA+rB,GAAAK,GAAApsB,KAAAyG,IAEAmW,SAAA,WACA,IAAApW,EAAAxG,KAAAksB,QACA,YADyB1lB,EAAA+C,MAAA/C,GAAA,EAAAE,KAAAlD,IAAA,EAAAkD,KAAAnD,IAAA,EAAAiD,KACzB,gBACAE,KAAAlD,IAAA,EAAAkD,KAAAnD,IAAA,IAAAmD,KAAAmJ,MAAA7P,KAAA3C,IAAA,SACAqJ,KAAAlD,IAAA,EAAAkD,KAAAnD,IAAA,IAAAmD,KAAAmJ,MAAA7P,KAAA+rB,IAAA,SACArlB,KAAAlD,IAAA,EAAAkD,KAAAnD,IAAA,IAAAmD,KAAAmJ,MAAA7P,KAAAyG,IAAA,KACA,IAAAD,EAAA,SAAAA,EAAA,SAqDAvK,GAAAqwB,GAAAC,GAAApL,GAAAE,IACAuL,SAAA,SAAAnoB,GAEA,OADAA,EAAA,MAAAA,EA9SA,EADA,GA+SAiC,KAAAE,IA9SA,EADA,GA+SAnC,GACA,IAAA6nB,GAAAtsB,KAAAqsB,EAAArsB,KAAA1B,EAAA0B,KAAAxD,EAAAiI,EAAAzE,KAAAksB,UAEAW,OAAA,SAAApoB,GAEA,OADAA,EAAA,MAAAA,EAnTA,GAmTAiC,KAAAE,IAnTA,GAmTAnC,GACA,IAAA6nB,GAAAtsB,KAAAqsB,EAAArsB,KAAA1B,EAAA0B,KAAAxD,EAAAiI,EAAAzE,KAAAksB,UAEAD,IAAA,WACA,IAAAI,EAAArsB,KAAAqsB,EAAA,SAAArsB,KAAAqsB,EAAA,GACA/tB,EAAAiL,MAAA8iB,IAAA9iB,MAAAvJ,KAAA1B,GAAA,EAAA0B,KAAA1B,EACA9B,EAAAwD,KAAAxD,EACAkwB,EAAAlwB,KAAA,GAAAA,EAAA,EAAAA,GAAA8B,EACA2c,EAAA,EAAAze,EAAAkwB,EACA,WAAAhB,GACAe,GAAAJ,GAAA,IAAAA,EAAA,IAAAA,EAAA,IAAApR,EAAAyR,GACAD,GAAAJ,EAAApR,EAAAyR,GACAD,GAAAJ,EAAA,IAAAA,EAAA,IAAAA,EAAA,IAAApR,EAAAyR,GACA1sB,KAAAksB,UAGAS,YAAA,WACA,UAAA3sB,KAAA1B,GAAA0B,KAAA1B,GAAA,GAAAiL,MAAAvJ,KAAA1B,KACA,GAAA0B,KAAAxD,GAAAwD,KAAAxD,GAAA,GACA,GAAAwD,KAAAksB,SAAAlsB,KAAAksB,SAAA,MC1UA,IAAAY,GAAApmB,KAAAqmB,GAAA,IACAC,GAAA,IAAAtmB,KAAAqmB,GCKAE,GAAA,OACAC,GAAA,EACAC,GAAA,OACAC,GAAA,KACAC,GAAA,KACAC,GAAA,EAAAD,MACAE,GAAAF,SAEA,SAAAG,GAAAxwB,GACA,GAAAA,aAAAywB,GAAA,WAAAA,GAAAzwB,EAAAR,EAAAQ,EAAAwJ,EAAAxJ,EAAAyJ,EAAAzJ,EAAAkvB,SACA,GAAAlvB,aAAA0wB,GAAA,CACA,GAAAnkB,MAAAvM,EAAAqvB,GAAA,WAAAoB,GAAAzwB,EAAAR,EAAA,IAAAQ,EAAAkvB,SACA,IAAAG,EAAArvB,EAAAqvB,EAAAS,GACA,WAAAW,GAAAzwB,EAAAR,EAAAkK,KAAAinB,IAAAtB,GAAArvB,EAAAJ,EAAA8J,KAAAknB,IAAAvB,GAAArvB,EAAAJ,EAAAI,EAAAkvB,SAEAlvB,aAAA0uB,KAAA1uB,EAAAgvB,GAAAhvB,IACA,IAGAyE,EAAAosB,EAHAxwB,EAAAywB,GAAA9wB,EAAAK,GACA0uB,EAAA+B,GAAA9wB,EAAA+uB,GACAtlB,EAAAqnB,GAAA9wB,EAAAyJ,GACA/E,EAAAqsB,IAAA,SAAA1wB,EAAA,SAAA0uB,EAAA,SAAAtlB,GAAAymB,IAKA,OAJA7vB,IAAA0uB,OAAAtlB,EAAAhF,EAAAosB,EAAAnsB,GACAD,EAAAssB,IAAA,SAAA1wB,EAAA,SAAA0uB,EAAA,SAAAtlB,GAAAwmB,IACAY,EAAAE,IAAA,SAAA1wB,EAAA,SAAA0uB,EAAA,SAAAtlB,GAAA0mB,KAEA,IAAAM,GAAA,IAAA/rB,EAAA,QAAAD,EAAAC,GAAA,KAAAA,EAAAmsB,GAAA7wB,EAAAkvB,SAGA,SAAA1G,GAAAhpB,EAAA0vB,GACA,WAAAuB,GAAAjxB,EAAA,UAAA0vB,EAAA,EAAAA,GAGA,SAAA8B,GAAAxxB,EAAAgK,EAAAC,EAAAylB,GACA,WAAAhoB,UAAAC,OAAAqpB,GAAAhxB,GAAA,IAAAixB,GAAAjxB,EAAAgK,EAAAC,EAAA,MAAAylB,EAAA,EAAAA,GAGA,SAAAuB,GAAAjxB,EAAAgK,EAAAC,EAAAylB,GACAlsB,KAAAxD,KACAwD,KAAAwG,KACAxG,KAAAyG,KACAzG,KAAAksB,WA0BA,SAAA6B,GAAAtwB,GACA,OAAAA,EAAA8vB,GAAA7mB,KAAAE,IAAAnJ,EAAA,KAAAA,EAAA6vB,GAAAF,GAGA,SAAAa,GAAAxwB,GACA,OAAAA,EAAA4vB,GAAA5vB,MAAA6vB,IAAA7vB,EAAA2vB,IAGA,SAAAc,GAAAzsB,GACA,YAAAA,GAAA,eAAAA,EAAA,MAAAiF,KAAAE,IAAAnF,EAAA,aAGA,SAAAqsB,GAAArsB,GACA,OAAAA,GAAA,aAAAA,EAAA,MAAAiF,KAAAE,KAAAnF,EAAA,iBAGA,SAAA0sB,GAAAnxB,GACA,GAAAA,aAAA0wB,GAAA,WAAAA,GAAA1wB,EAAAqvB,EAAArvB,EAAAJ,EAAAI,EAAAR,EAAAQ,EAAAkvB,SAEA,GADAlvB,aAAAywB,KAAAzwB,EAAAwwB,GAAAxwB,IACA,IAAAA,EAAAwJ,GAAA,IAAAxJ,EAAAyJ,EAAA,WAAAinB,GAAApmB,IAAA,EAAAtK,EAAAR,EAAAQ,EAAAkvB,SACA,IAAAG,EAAA3lB,KAAA0nB,MAAApxB,EAAAyJ,EAAAzJ,EAAAwJ,GAAAwmB,GACA,WAAAU,GAAArB,EAAA,EAAAA,EAAA,IAAAA,EAAA3lB,KAAAC,KAAA3J,EAAAwJ,EAAAxJ,EAAAwJ,EAAAxJ,EAAAyJ,EAAAzJ,EAAAyJ,GAAAzJ,EAAAR,EAAAQ,EAAAkvB,SAGA,SAAAmC,GAAA7xB,EAAAI,EAAAyvB,EAAAH,GACA,WAAAhoB,UAAAC,OAAAgqB,GAAA3xB,GAAA,IAAAkxB,GAAArB,EAAAzvB,EAAAJ,EAAA,MAAA0vB,EAAA,EAAAA,GAGA,SAAAoC,GAAAjC,EAAAzvB,EAAAJ,EAAA0vB,GACA,WAAAhoB,UAAAC,OAAAgqB,GAAA9B,GAAA,IAAAqB,GAAArB,EAAAzvB,EAAAJ,EAAA,MAAA0vB,EAAA,EAAAA,GAGA,SAAAwB,GAAArB,EAAAzvB,EAAAJ,EAAA0vB,GACAlsB,KAAAqsB,KACArsB,KAAApD,KACAoD,KAAAxD,KACAwD,KAAAksB,WA3DAjwB,GAAAwxB,GAAAO,GAAA7M,GAAAE,IACAuL,SAAA,SAAAnoB,GACA,WAAAgpB,GAAAztB,KAAAxD,EA7CA,IA6CA,MAAAiI,EAAA,EAAAA,GAAAzE,KAAAwG,EAAAxG,KAAAyG,EAAAzG,KAAAksB,UAEAW,OAAA,SAAApoB,GACA,WAAAgpB,GAAAztB,KAAAxD,EAhDA,IAgDA,MAAAiI,EAAA,EAAAA,GAAAzE,KAAAwG,EAAAxG,KAAAyG,EAAAzG,KAAAksB,UAEAD,IAAA,WACA,IAAAvqB,GAAA1B,KAAAxD,EAAA,QACAiF,EAAA8H,MAAAvJ,KAAAwG,GAAA9E,IAAA1B,KAAAwG,EAAA,IACAqnB,EAAAtkB,MAAAvJ,KAAAyG,GAAA/E,IAAA1B,KAAAyG,EAAA,IAIA,WAAAilB,GACAwC,GAAA,WAJAzsB,EAAAwrB,GAAAgB,GAAAxsB,IAIA,WAHAC,EAAAwrB,GAAAe,GAAAvsB,IAGA,UAFAmsB,EAAAV,GAAAc,GAAAJ,KAGAK,IAAA,SAAAzsB,EAAA,UAAAC,EAAA,QAAAmsB,GACAK,GAAA,SAAAzsB,EAAA,SAAAC,EAAA,UAAAmsB,GACA7tB,KAAAksB,aA4CAjwB,GAAAyxB,GAAAY,GAAAnN,GAAAE,IACAuL,SAAA,SAAAnoB,GACA,WAAAipB,GAAA1tB,KAAAqsB,EAAArsB,KAAApD,EAAAoD,KAAAxD,EA3GA,IA2GA,MAAAiI,EAAA,EAAAA,GAAAzE,KAAAksB,UAEAW,OAAA,SAAApoB,GACA,WAAAipB,GAAA1tB,KAAAqsB,EAAArsB,KAAApD,EAAAoD,KAAAxD,EA9GA,IA8GA,MAAAiI,EAAA,EAAAA,GAAAzE,KAAAksB,UAEAD,IAAA,WACA,OAAAuB,GAAAxtB,MAAAisB,UClHA,IAEAsC,IAAA,OACAC,IAAA,OACAC,GAAA,QACAC,GAAAD,GAAAD,GACAG,GALA,QAKAF,GACAG,GANA,QAMAL,KAPA,OAOAC,GAgBA,SAAAK,GAAAxC,EAAA/tB,EAAA9B,EAAA0vB,GACA,WAAAhoB,UAAAC,OAfA,SAAAnH,GACA,GAAAA,aAAA8xB,GAAA,WAAAA,GAAA9xB,EAAAqvB,EAAArvB,EAAAsB,EAAAtB,EAAAR,EAAAQ,EAAAkvB,SACAlvB,aAAA0uB,KAAA1uB,EAAAgvB,GAAAhvB,IACA,IAAAK,EAAAL,EAAAK,EAAA,IACA0uB,EAAA/uB,EAAA+uB,EAAA,IACAtlB,EAAAzJ,EAAAyJ,EAAA,IACAjK,GAAAoyB,GAAAnoB,EAAAioB,GAAArxB,EAAAsxB,GAAA5C,IAAA6C,GAAAF,GAAAC,IACAI,EAAAtoB,EAAAjK,EACAiI,GAAAgqB,IAAA1C,EAAAvvB,GAAA+xB,GAAAQ,GAAAP,GACAlwB,EAAAoI,KAAAC,KAAAlC,IAAAsqB,MAAAN,GAAAjyB,GAAA,EAAAA,IACA6vB,EAAA/tB,EAAAoI,KAAA0nB,MAAA3pB,EAAAsqB,GAAA/B,GAAA,IAAA1lB,IACA,WAAAwnB,GAAAzC,EAAA,EAAAA,EAAA,IAAAA,EAAA/tB,EAAA9B,EAAAQ,EAAAkvB,SAIA8C,CAAA3C,GAAA,IAAAyC,GAAAzC,EAAA/tB,EAAA9B,EAAA,MAAA0vB,EAAA,EAAAA,GAGA,SAAA4C,GAAAzC,EAAA/tB,EAAA9B,EAAA0vB,GACAlsB,KAAAqsB,KACArsB,KAAA1B,KACA0B,KAAAxD,KACAwD,KAAAksB,WCnCA,SAAA+C,GAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GACA,IAAAC,EAAAL,IAAA3B,EAAAgC,EAAAL,EACA,YAAAA,EAAA,EAAAK,EAAAhC,GAAA4B,GACA,IAAAI,EAAA,EAAAhC,GAAA6B,GACA,IAAAF,EAAA,EAAAK,EAAA,EAAAhC,GAAA8B,EACA9B,EAAA+B,GAAA,EDiCArzB,GAAA6yB,GAAAD,GAAA1N,GAAAE,IACAuL,SAAA,SAAAnoB,GAEA,OADAA,EAAA,MAAAA,EHnCA,EADA,GGoCAiC,KAAAE,IHnCA,EADA,GGoCAnC,GACA,IAAAqqB,GAAA9uB,KAAAqsB,EAAArsB,KAAA1B,EAAA0B,KAAAxD,EAAAiI,EAAAzE,KAAAksB,UAEAW,OAAA,SAAApoB,GAEA,OADAA,EAAA,MAAAA,EHxCA,GGwCAiC,KAAAE,IHxCA,GGwCAnC,GACA,IAAAqqB,GAAA9uB,KAAAqsB,EAAArsB,KAAA1B,EAAA0B,KAAAxD,EAAAiI,EAAAzE,KAAAksB,UAEAD,IAAA,WACA,IAAAI,EAAA9iB,MAAAvJ,KAAAqsB,GAAA,GAAArsB,KAAAqsB,EAAA,KAAAS,GACAtwB,GAAAwD,KAAAxD,EACAgK,EAAA+C,MAAAvJ,KAAA1B,GAAA,EAAA0B,KAAA1B,EAAA9B,GAAA,EAAAA,GACAgzB,EAAA9oB,KAAAinB,IAAAtB,GACAoD,EAAA/oB,KAAAknB,IAAAvB,GACA,WAAAX,GACA,KAAAlvB,EAAAgK,IAlDA,OAkDAgpB,EAjDA,QAiDAC,IACA,KAAAjzB,EAAAgK,GAAA+nB,GAAAiB,EAAAhB,GAAAiB,IACA,KAAAjzB,EAAAgK,GAAAioB,GAAAe,IACAxvB,KAAAksB,aCjDA,IAAAwD,GAAA,SAAA3mB,GACA,IAAA/K,EAAA+K,EAAA5E,OAAA,EACA,gBAAA1G,GACA,IAAAlB,EAAAkB,GAAA,EAAAA,EAAA,EAAAA,GAAA,GAAAA,EAAA,EAAAO,EAAA,GAAA0I,KAAAkE,MAAAnN,EAAAO,GACAoxB,EAAArmB,EAAAxM,GACA8yB,EAAAtmB,EAAAxM,EAAA,GACA4yB,EAAA5yB,EAAA,EAAAwM,EAAAxM,EAAA,KAAA6yB,EAAAC,EACAC,EAAA/yB,EAAAyB,EAAA,EAAA+K,EAAAxM,EAAA,KAAA8yB,EAAAD,EACA,OAAAH,IAAAxxB,EAAAlB,EAAAyB,KAAAmxB,EAAAC,EAAAC,EAAAC,KCdAK,GAAA,SAAA5mB,GACA,IAAA/K,EAAA+K,EAAA5E,OACA,gBAAA1G,GACA,IAAAlB,EAAAmK,KAAAkE,QAAAnN,GAAA,OAAAA,KAAAO,GACAmxB,EAAApmB,GAAAxM,EAAAyB,EAAA,GAAAA,GACAoxB,EAAArmB,EAAAxM,EAAAyB,GACAqxB,EAAAtmB,GAAAxM,EAAA,GAAAyB,GACAsxB,EAAAvmB,GAAAxM,EAAA,GAAAyB,GACA,OAAAixB,IAAAxxB,EAAAlB,EAAAyB,KAAAmxB,EAAAC,EAAAC,EAAAC,KCVAM,GAAA,SAAAnuB,GACA,kBACA,OAAAA,ICAA,SAAAouB,GAAArpB,EAAA3J,GACA,gBAAAY,GACA,OAAA+I,EAAA/I,EAAAZ,GAUA,SAAAizB,GAAAtpB,EAAAC,GACA,IAAA5J,EAAA4J,EAAAD,EACA,OAAA3J,EAAAgzB,GAAArpB,EAAA3J,EAAA,KAAAA,GAAA,IAAAA,EAAA,IAAA6J,KAAAmJ,MAAAhT,EAAA,KAAAA,GAAA+yB,GAAArmB,MAAA/C,GAAAC,EAAAD,GAGA,SAAAupB,GAAAruB,GACA,WAAAA,MAAAsuB,GAAA,SAAAxpB,EAAAC,GACA,OAAAA,EAAAD,EAbA,SAAAA,EAAAC,EAAA/E,GACA,OAAA8E,EAAAE,KAAAE,IAAAJ,EAAA9E,GAAA+E,EAAAC,KAAAE,IAAAH,EAAA/E,GAAA8E,EAAA9E,EAAA,EAAAA,EAAA,SAAAjE,GACA,OAAAiJ,KAAAE,IAAAJ,EAAA/I,EAAAgJ,EAAA/E,IAWAuuB,CAAAzpB,EAAAC,EAAA/E,GAAAkuB,GAAArmB,MAAA/C,GAAAC,EAAAD,IAIA,SAAAwpB,GAAAxpB,EAAAC,GACA,IAAA5J,EAAA4J,EAAAD,EACA,OAAA3J,EAAAgzB,GAAArpB,EAAA3J,GAAA+yB,GAAArmB,MAAA/C,GAAAC,EAAAD,UCtBA,SAAA0pB,EAAAxuB,GACA,IAAAyuB,EAAAJ,GAAAruB,GAEA,SAAAuqB,EAAAjiB,EAAAomB,GACA,IAAA/yB,EAAA8yB,GAAAnmB,EAAAmiB,GAAAniB,IAAA3M,GAAA+yB,EAAAjE,GAAAiE,IAAA/yB,GACA0uB,EAAAoE,EAAAnmB,EAAA+hB,EAAAqE,EAAArE,GACAtlB,EAAA0pB,EAAAnmB,EAAAvD,EAAA2pB,EAAA3pB,GACAylB,EAAA8D,GAAAhmB,EAAAkiB,QAAAkE,EAAAlE,SACA,gBAAAzuB,GAKA,OAJAuM,EAAA3M,IAAAI,GACAuM,EAAA+hB,IAAAtuB,GACAuM,EAAAvD,IAAAhJ,GACAuM,EAAAkiB,UAAAzuB,GACAuM,EAAA,IAMA,OAFAiiB,EAAA8D,MAAAG,EAEAjE,GACC,GAED,SAAAoE,GAAAC,GACA,gBAAAC,GACA,IAIAh0B,EAAA4zB,EAJAnyB,EAAAuyB,EAAApsB,OACA9G,EAAA,IAAA0D,MAAA/C,GACA+tB,EAAA,IAAAhrB,MAAA/C,GACAyI,EAAA,IAAA1F,MAAA/C,GAEA,IAAAzB,EAAA,EAAeA,EAAAyB,IAAOzB,EACtB4zB,EAAAhE,GAAAoE,EAAAh0B,IACAc,EAAAd,GAAA4zB,EAAA9yB,GAAA,EACA0uB,EAAAxvB,GAAA4zB,EAAApE,GAAA,EACAtlB,EAAAlK,GAAA4zB,EAAA1pB,GAAA,EAMA,OAJApJ,EAAAizB,EAAAjzB,GACA0uB,EAAAuE,EAAAvE,GACAtlB,EAAA6pB,EAAA7pB,GACA0pB,EAAAjE,QAAA,EACA,SAAAzuB,GAIA,OAHA0yB,EAAA9yB,IAAAI,GACA0yB,EAAApE,IAAAtuB,GACA0yB,EAAA1pB,IAAAhJ,GACA0yB,EAAA,KAKA,IAAAK,GAAAH,GAAAX,IACAe,GAAAJ,GAAAV,ICpDAe,GAAA,SAAAlqB,EAAAC,GACA,IAIAlK,EAJAo0B,EAAAlqB,IAAAtC,OAAA,EACAysB,EAAApqB,EAAAE,KAAAnD,IAAAotB,EAAAnqB,EAAArC,QAAA,EACA1C,EAAA,IAAAV,MAAA6vB,GACAh0B,EAAA,IAAAmE,MAAA4vB,GAGA,IAAAp0B,EAAA,EAAaA,EAAAq0B,IAAQr0B,EAAAkF,EAAAlF,GAAAs0B,GAAArqB,EAAAjK,GAAAkK,EAAAlK,IACrB,KAAQA,EAAAo0B,IAAQp0B,EAAAK,EAAAL,GAAAkK,EAAAlK,GAEhB,gBAAAkB,GACA,IAAAlB,EAAA,EAAeA,EAAAq0B,IAAQr0B,EAAAK,EAAAL,GAAAkF,EAAAlF,GAAAkB,GACvB,OAAAb,ICdAk0B,GAAA,SAAAtqB,EAAAC,GACA,IAAA5J,EAAA,IAAA6D,KACA,OAAA+F,GAAAD,KAAA,SAAA/I,GACA,OAAAZ,EAAAk0B,QAAAvqB,EAAAC,EAAAhJ,GAAAZ,ICHAm0B,GAAA,SAAAxqB,EAAAC,GACA,OAAAA,GAAAD,KAAA,SAAA/I,GACA,OAAA+I,EAAAC,EAAAhJ,ICAAwzB,GAAA,SAAAzqB,EAAAC,GACA,IAEAhC,EAFAlI,KACAK,KAMA,IAAA6H,KAHA,OAAA+B,GAAA,iBAAAA,UACA,OAAAC,GAAA,iBAAAA,UAEAA,EACAhC,KAAA+B,EACAjK,EAAAkI,GAAAosB,GAAArqB,EAAA/B,GAAAgC,EAAAhC,IAEA7H,EAAA6H,GAAAgC,EAAAhC,GAIA,gBAAAhH,GACA,IAAAgH,KAAAlI,EAAAK,EAAA6H,GAAAlI,EAAAkI,GAAAhH,GACA,OAAAb,IClBAs0B,GAAA,8CACAC,GAAA,IAAAvP,OAAAsP,GAAArU,OAAA,KAcA,ICfAuU,GACAC,GACAC,GACAC,GDYAC,GAAA,SAAAhrB,EAAAC,GACA,IACAgrB,EACAC,EACAC,EAHAC,EAAAV,GAAAW,UAAAV,GAAAU,UAAA,EAIAt1B,GAAA,EACA+B,KACAwzB,KAMA,IAHAtrB,GAAA,GAAAC,GAAA,IAGAgrB,EAAAP,GAAAzF,KAAAjlB,MACAkrB,EAAAP,GAAA1F,KAAAhlB,MACAkrB,EAAAD,EAAAtZ,OAAAwZ,IACAD,EAAAlrB,EAAAmD,MAAAgoB,EAAAD,GACArzB,EAAA/B,GAAA+B,EAAA/B,IAAAo1B,EACArzB,IAAA/B,GAAAo1B,IAEAF,IAAA,OAAAC,IAAA,IACApzB,EAAA/B,GAAA+B,EAAA/B,IAAAm1B,EACApzB,IAAA/B,GAAAm1B,GAEApzB,IAAA/B,GAAA,KACAu1B,EAAA/uB,MAAcxG,IAAAkF,EAAAuvB,GAAAS,EAAAC,MAEdE,EAAAT,GAAAU,UAYA,OARAD,EAAAnrB,EAAAtC,SACAwtB,EAAAlrB,EAAAmD,MAAAgoB,GACAtzB,EAAA/B,GAAA+B,EAAA/B,IAAAo1B,EACArzB,IAAA/B,GAAAo1B,GAKArzB,EAAA6F,OAAA,EAAA2tB,EAAA,GA7CA,SAAArrB,GACA,gBAAAhJ,GACA,OAAAgJ,EAAAhJ,GAAA,IA4CAs0B,CAAAD,EAAA,GAAArwB,GApDA,SAAAgF,GACA,kBACA,OAAAA,GAmDAurB,CAAAvrB,IACAA,EAAAqrB,EAAA3tB,OAAA,SAAA1G,GACA,QAAAT,EAAAT,EAAA,EAA4BA,EAAAkK,IAAOlK,EAAA+B,GAAAtB,EAAA80B,EAAAv1B,OAAAS,EAAAyE,EAAAhE,GACnC,OAAAa,EAAAuY,KAAA,OEpDAga,GAAA,SAAArqB,EAAAC,GACA,IAAA7J,EAAAa,SAAAgJ,EACA,aAAAA,GAAA,YAAAhJ,EAAAmyB,GAAAnpB,IACA,WAAAhJ,EAAAuzB,GACA,WAAAvzB,GAAAb,EAAA2uB,GAAA9kB,OAAA7J,EAAAq1B,IAAAT,GACA/qB,aAAA8kB,GAAA0G,GACAxrB,aAAA/F,KAAAowB,GACA/vB,MAAAC,QAAAyF,GAAAiqB,GACA,mBAAAjqB,EAAAyrB,SAAA,mBAAAzrB,EAAAmW,UAAArT,MAAA9C,GAAAwqB,GACAD,IAAAxqB,EAAAC,IClBA0rB,GAAA,SAAA3rB,EAAAC,GACA,OAAAA,GAAAD,KAAA,SAAA/I,GACA,OAAAiJ,KAAAmJ,MAAArJ,EAAAC,EAAAhJ,KCFA20B,GAAA,IAAA1rB,KAAAqmB,GAEAsF,IACAhkB,WAAA,EACAC,WAAA,EACAgkB,OAAA,EACAC,MAAA,EACAC,OAAA,EACAC,OAAA,GAGAC,GAAA,SAAAlsB,EAAAC,EAAA7J,EAAAC,EAAAqF,EAAAuF,GACA,IAAA+qB,EAAAC,EAAAF,EAKA,OAJAC,EAAA9rB,KAAAC,KAAAH,IAAAC,QAAAD,GAAAgsB,EAAA/rB,GAAA+rB,IACAD,EAAA/rB,EAAA5J,EAAA6J,EAAA5J,KAAAD,GAAA4J,EAAA+rB,EAAA11B,GAAA4J,EAAA8rB,IACAE,EAAA/rB,KAAAC,KAAA/J,IAAAC,QAAAD,GAAA61B,EAAA51B,GAAA41B,EAAAF,GAAAE,GACAjsB,EAAA3J,EAAA4J,EAAA7J,IAAA4J,KAAAC,KAAA8rB,KAAAC,OAEAnkB,WAAAnM,EACAoM,WAAA7G,EACA6qB,OAAA5rB,KAAA0nB,MAAA3nB,EAAAD,GAAA4rB,GACAG,MAAA7rB,KAAAisB,KAAAJ,GAAAH,GACAI,SACAC,WCpBA,SAAAG,GAAAC,EAAAC,EAAAC,EAAAC,GAEA,SAAAlnB,EAAAxN,GACA,OAAAA,EAAA6F,OAAA7F,EAAAwN,MAAA,OAsCA,gBAAAtF,EAAAC,GACA,IAAAnI,KACAwzB,KAOA,OANAtrB,EAAAqsB,EAAArsB,GAAAC,EAAAosB,EAAApsB,GAtCA,SAAAwsB,EAAAC,EAAAC,EAAAC,EAAA90B,EAAAwzB,GACA,GAAAmB,IAAAE,GAAAD,IAAAE,EAAA,CACA,IAAA72B,EAAA+B,EAAAyE,KAAA,kBAAA+vB,EAAA,KAAAC,GACAjB,EAAA/uB,MAAcxG,IAAA,EAAAkF,EAAAuvB,GAAAiC,EAAAE,KAA+B52B,IAAA,EAAAkF,EAAAuvB,GAAAkC,EAAAE,UACxCD,GAAAC,IACL90B,EAAAyE,KAAA,aAAAowB,EAAAL,EAAAM,EAAAL,GAkCAM,CAAA7sB,EAAA6H,WAAA7H,EAAA8H,WAAA7H,EAAA4H,WAAA5H,EAAA6H,WAAAhQ,EAAAwzB,GA9BA,SAAAtrB,EAAAC,EAAAnI,EAAAwzB,GACAtrB,IAAAC,GACAD,EAAAC,EAAA,IAAAA,GAAA,IAAgCA,EAAAD,EAAA,MAAAA,GAAA,KAChCsrB,EAAA/uB,MAAcxG,EAAA+B,EAAAyE,KAAA+I,EAAAxN,GAAA,eAAA00B,GAAA,EAAAvxB,EAAAuvB,GAAAxqB,EAAAC,MACTA,GACLnI,EAAAyE,KAAA+I,EAAAxN,GAAA,UAAAmI,EAAAusB,GA0BAV,CAAA9rB,EAAA8rB,OAAA7rB,EAAA6rB,OAAAh0B,EAAAwzB,GAtBA,SAAAtrB,EAAAC,EAAAnI,EAAAwzB,GACAtrB,IAAAC,EACAqrB,EAAA/uB,MAAcxG,EAAA+B,EAAAyE,KAAA+I,EAAAxN,GAAA,cAAA00B,GAAA,EAAAvxB,EAAAuvB,GAAAxqB,EAAAC,KACTA,GACLnI,EAAAyE,KAAA+I,EAAAxN,GAAA,SAAAmI,EAAAusB,GAmBAT,CAAA/rB,EAAA+rB,MAAA9rB,EAAA8rB,MAAAj0B,EAAAwzB,GAfA,SAAAmB,EAAAC,EAAAC,EAAAC,EAAA90B,EAAAwzB,GACA,GAAAmB,IAAAE,GAAAD,IAAAE,EAAA,CACA,IAAA72B,EAAA+B,EAAAyE,KAAA+I,EAAAxN,GAAA,4BACAwzB,EAAA/uB,MAAcxG,IAAA,EAAAkF,EAAAuvB,GAAAiC,EAAAE,KAA+B52B,IAAA,EAAAkF,EAAAuvB,GAAAkC,EAAAE,UACxC,IAAAD,GAAA,IAAAC,GACL90B,EAAAyE,KAAA+I,EAAAxN,GAAA,SAAA60B,EAAA,IAAAC,EAAA,KAWAzkB,CAAAnI,EAAAgsB,OAAAhsB,EAAAisB,OAAAhsB,EAAA+rB,OAAA/rB,EAAAgsB,OAAAn0B,EAAAwzB,GACAtrB,EAAAC,EAAA,KACA,SAAAhJ,GAEA,IADA,IAAAT,EAAAT,GAAA,EAAAyB,EAAA8zB,EAAA3tB,SACA5H,EAAAyB,GAAAM,GAAAtB,EAAA80B,EAAAv1B,OAAAS,EAAAyE,EAAAhE,GACA,OAAAa,EAAAuY,KAAA,MAKA,IAAAyc,GAAAV,GJtDA,SAAAp1B,GACA,eAAAA,EAAA60B,IACAjB,QAAAtvB,SAAAuR,cAAA,OAAAge,GAAAvvB,SAAAsR,gBAAAke,GAAAxvB,SAAA+T,aACAub,GAAAhuB,MAAA8L,UAAA1R,EACAA,EAAA8zB,GAAAtb,iBAAAqb,GAAAxc,YAAAuc,IAAA,MAAArb,iBAAA,aACAsb,GAAA3Z,YAAA0Z,IACA5zB,IAAAoM,MAAA,MAAAmI,MAAA,KACA2gB,IAAAl1B,EAAA,IAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,MI+CA,qBACA+1B,GAAAX,GJ7CA,SAAAp1B,GACA,aAAAA,EAAA60B,IACAd,QAAAzvB,SAAAmR,gBAAA,mCACAse,GAAA3a,aAAA,YAAApZ,IACAA,EAAA+zB,GAAAriB,UAAAskB,QAAAC,gBACAj2B,IAAAiQ,OACAilB,GAAAl1B,EAAAgJ,EAAAhJ,EAAAiJ,EAAAjJ,EAAAZ,EAAAY,EAAAX,EAAAW,EAAA0E,EAAA1E,EAAAiK,IAFA4qB,KIyCA,cC9DAqB,GAAAhtB,KAAAitB,MAKA,SAAAC,GAAAnyB,GACA,QAAAA,EAAAiF,KAAAmtB,IAAApyB,IAAA,EAAAA,GAAA,EAaA,IAAAqyB,GAAA,SAAA7S,EAAA8S,GACA,IAKAx3B,EACAy3B,EANAC,EAAAhT,EAAA,GAAAiT,EAAAjT,EAAA,GAAAkT,EAAAlT,EAAA,GACAmT,EAAAL,EAAA,GAAAM,EAAAN,EAAA,GAAAO,EAAAP,EAAA,GACA1U,EAAA+U,EAAAH,EACA3U,EAAA+U,EAAAH,EACAK,EAAAlV,IAAAC,IAKA,GAAAiV,EA1BA,MA2BAP,EAAAttB,KAAAoE,IAAAwpB,EAAAH,GAAAT,GACAn3B,EAAA,SAAAkB,GACA,OACAw2B,EAAAx2B,EAAA4hB,EACA6U,EAAAz2B,EAAA6hB,EACA6U,EAAAztB,KAAAmtB,IAAAH,GAAAj2B,EAAAu2B,SAMA,CACA,IAAAQ,EAAA9tB,KAAAC,KAAA4tB,GACAE,GAAAH,IAAAH,IAzCA,EAyCAI,IAAA,EAAAJ,EA1CA,EA0CAK,GACAE,GAAAJ,IAAAH,IA1CA,EA0CAI,IAAA,EAAAD,EA3CA,EA2CAE,GACAG,EAAAjuB,KAAAoE,IAAApE,KAAAC,KAAA8tB,IAAA,GAAAA,GACAG,EAAAluB,KAAAoE,IAAApE,KAAAC,KAAA+tB,IAAA,GAAAA,GACAV,GAAAY,EAAAD,GAAAjB,GACAn3B,EAAA,SAAAkB,GACA,IAAAa,EAAAb,EAAAu2B,EACAa,EAAAjB,GAAAe,GACAG,EAAAX,GAlDA,EAkDAK,IAAAK,EAtCA,SAAApzB,GACA,QAAAA,EAAAiF,KAAAmtB,IAAA,EAAApyB,IAAA,IAAAA,EAAA,GAqCAszB,CAAArB,GAAAp1B,EAAAq2B,GA1CA,SAAAlzB,GACA,QAAAA,EAAAiF,KAAAmtB,IAAApyB,IAAA,EAAAA,GAAA,EAyCAuzB,CAAAL,IACA,OACAV,EAAAa,EAAAzV,EACA6U,EAAAY,EAAAxV,EACA6U,EAAAU,EAAAjB,GAAAF,GAAAp1B,EAAAq2B,KAOA,OAFAp4B,EAAA04B,SAAA,IAAAjB,EAEAz3B,GC3DA,SAAA24B,GAAAC,GACA,gBAAAnrB,EAAAomB,GACA,IAAA/D,EAAA8I,GAAAnrB,EAAAuiB,GAAAviB,IAAAqiB,GAAA+D,EAAA7D,GAAA6D,IAAA/D,GACA/tB,EAAA0xB,GAAAhmB,EAAA1L,EAAA8xB,EAAA9xB,GACA9B,EAAAwzB,GAAAhmB,EAAAxN,EAAA4zB,EAAA5zB,GACA0vB,EAAA8D,GAAAhmB,EAAAkiB,QAAAkE,EAAAlE,SACA,gBAAAzuB,GAKA,OAJAuM,EAAAqiB,IAAA5uB,GACAuM,EAAA1L,IAAAb,GACAuM,EAAAxN,IAAAiB,GACAuM,EAAAkiB,UAAAzuB,GACAuM,EAAA,KAKA,IAAAorB,GAAAF,GAAApF,IACAuF,GAAAH,GAAAlF,ICjBA,SAAAsF,GAAAtrB,EAAAomB,GACA,IAAA5zB,EAAAwzB,IAAAhmB,EAAAgkB,GAAAhkB,IAAAxN,GAAA4zB,EAAApC,GAAAoC,IAAA5zB,GACAgK,EAAAwpB,GAAAhmB,EAAAxD,EAAA4pB,EAAA5pB,GACAC,EAAAupB,GAAAhmB,EAAAvD,EAAA2pB,EAAA3pB,GACAylB,EAAA8D,GAAAhmB,EAAAkiB,QAAAkE,EAAAlE,SACA,gBAAAzuB,GAKA,OAJAuM,EAAAxN,IAAAiB,GACAuM,EAAAxD,IAAA/I,GACAuM,EAAAvD,IAAAhJ,GACAuM,EAAAkiB,UAAAzuB,GACAuM,EAAA,ICVA,SAAAurB,GAAAJ,GACA,gBAAAnrB,EAAAomB,GACA,IAAA/D,EAAA8I,GAAAnrB,EAAAskB,GAAAtkB,IAAAqiB,GAAA+D,EAAA9B,GAAA8B,IAAA/D,GACAzvB,EAAAozB,GAAAhmB,EAAApN,EAAAwzB,EAAAxzB,GACAJ,EAAAwzB,GAAAhmB,EAAAxN,EAAA4zB,EAAA5zB,GACA0vB,EAAA8D,GAAAhmB,EAAAkiB,QAAAkE,EAAAlE,SACA,gBAAAzuB,GAKA,OAJAuM,EAAAqiB,IAAA5uB,GACAuM,EAAApN,IAAAa,GACAuM,EAAAxN,IAAAiB,GACAuM,EAAAkiB,UAAAzuB,GACAuM,EAAA,KAKA,IAAAwrB,GAAAD,GAAAzF,IACA2F,GAAAF,GAAAvF,ICjBA,SAAA0F,GAAAP,GACA,gBAAAQ,EAAAj0B,GAGA,SAAAk0B,EAAA5rB,EAAAomB,GACA,IAAA/D,EAAA8I,GAAAnrB,EAAA6kB,GAAA7kB,IAAAqiB,GAAA+D,EAAAvB,GAAAuB,IAAA/D,GACA/tB,EAAA0xB,GAAAhmB,EAAA1L,EAAA8xB,EAAA9xB,GACA9B,EAAAwzB,GAAAhmB,EAAAxN,EAAA4zB,EAAA5zB,GACA0vB,EAAA8D,GAAAhmB,EAAAkiB,QAAAkE,EAAAlE,SACA,gBAAAzuB,GAKA,OAJAuM,EAAAqiB,IAAA5uB,GACAuM,EAAA1L,IAAAb,GACAuM,EAAAxN,IAAAkK,KAAAE,IAAAnJ,EAAAiE,IACAsI,EAAAkiB,UAAAzuB,GACAuM,EAAA,IAMA,OAlBAtI,KAgBAk0B,EAAA7F,MAAA4F,EAEAC,EAnBA,CAoBG,GAGH,IAAAC,GAAAH,GAAA5F,IACAgG,GAAAJ,GAAA1F,IC5BA,SAAA+F,GAAAC,EAAAjtB,GAEA,IADA,IAAAxM,EAAA,EAAAyB,EAAA+K,EAAA5E,OAAA,EAAAsF,EAAAV,EAAA,GAAAktB,EAAA,IAAAl1B,MAAA/C,EAAA,IAAAA,GACAzB,EAAAyB,GAAAi4B,EAAA15B,GAAAy5B,EAAAvsB,IAAAV,IAAAxM,IACA,gBAAAkB,GACA,IAAAlB,EAAAmK,KAAAlD,IAAA,EAAAkD,KAAAnD,IAAAvF,EAAA,EAAA0I,KAAAkE,MAAAnN,GAAAO,KACA,OAAAi4B,EAAA15B,GAAAkB,EAAAlB,ICLA,ICIA25B,GACAC,GDLAC,GAAA,SAAAC,EAAAr4B,GAEA,IADA,IAAAs4B,EAAA,IAAAv1B,MAAA/C,GACAzB,EAAA,EAAiBA,EAAAyB,IAAOzB,EAAA+5B,EAAA/5B,GAAA85B,EAAA95B,GAAAyB,EAAA,IACxB,OAAAs4B,GCHAC,GAAA,EACAC,GAAA,EACAC,GAAA,EACAC,GAAA,IAGAC,GAAA,EACAC,GAAA,EACAC,GAAA,EACAC,GAAA,iBAAAC,yBAAAp2B,IAAAo2B,YAAAr2B,KACAs2B,GAAA,iBAAA76B,eAAA86B,sBAAA96B,OAAA86B,sBAAAl5B,KAAA5B,QAAA,SAAAsL,GAAqIuX,WAAAvX,EAAA,KAErI,SAAA9G,KACA,OAAAi2B,KAAAI,GAAAE,IAAAN,GAAAE,GAAAn2B,MAAAk2B,IAGA,SAAAK,KACAN,GAAA,EAGA,SAAAO,KACAn3B,KAAAo3B,MACAp3B,KAAAq3B,MACAr3B,KAAA0U,MAAA,KA0BA,SAAA4iB,GAAAz0B,EAAA00B,EAAAC,GACA,IAAA/5B,EAAA,IAAA05B,GAEA,OADA15B,EAAAg6B,QAAA50B,EAAA00B,EAAAC,GACA/5B,EAGA,SAAAi6B,KACA/2B,OACA41B,GAEA,IADA,IAAAr0B,EAAAzE,EAAAy4B,GACAz4B,IACAyE,EAAA00B,GAAAn5B,EAAA45B,QAAA,GAAA55B,EAAA25B,MAAA16B,KAAA,KAAAwF,GACAzE,IAAAiX,QAEA6hB,GAGA,SAAAoB,KACAf,IAAAD,GAAAG,GAAAn2B,OAAAk2B,GACAN,GAAAC,GAAA,EACA,IACAkB,KACG,QACHnB,GAAA,EAWA,WACA,IAAAqB,EAAArI,EAAAL,EAAAgH,GAAAsB,EAAAj2B,IACA,KAAA2tB,GACAA,EAAAkI,OACAI,EAAAtI,EAAAmI,QAAAG,EAAAtI,EAAAmI,OACAO,EAAA1I,MAAAxa,QAEA6a,EAAAL,EAAAxa,MAAAwa,EAAAxa,MAAA,KACAwa,EAAA0I,IAAAljB,MAAA6a,EAAA2G,GAAA3G,GAGA4G,GAAAyB,EACAC,GAAAL,GAtBAM,GACAlB,GAAA,GAIA,SAAAmB,KACA,IAAAp3B,EAAAm2B,GAAAn2B,MAAA42B,EAAA52B,EAAAg2B,GACAY,EAAAb,KAAAG,IAAAU,EAAAZ,GAAAh2B,GAkBA,SAAAk3B,GAAAL,GACAjB,KACAC,QAAAzV,aAAAyV,KACAgB,EAAAZ,GACA,IACAY,EAAAj2B,MAAAi1B,GAAAxX,WAAA2Y,GAAAH,EAAAV,GAAAn2B,MAAAk2B,KACAJ,QAAAuB,cAAAvB,OAEAA,KAAAE,GAAAG,GAAAn2B,MAAA81B,GAAAwB,YAAAF,GAAArB,KACAH,GAAA,EAAAS,GAAAW,MAjFAR,GAAAh5B,UAAAm5B,GAAAn5B,WACAsT,YAAA0lB,GACAM,QAAA,SAAA50B,EAAA00B,EAAAC,GACA,sBAAA30B,EAAA,UAAAq1B,UAAA,8BACAV,GAAA,MAAAA,EAAA72B,MAAA62B,IAAA,MAAAD,EAAA,GAAAA,GACAv3B,KAAA0U,OAAAyhB,KAAAn2B,OACAm2B,MAAAzhB,MAAA1U,KACAk2B,GAAAl2B,KACAm2B,GAAAn2B,MAEAA,KAAAo3B,MAAAv0B,EACA7C,KAAAq3B,MAAAG,EACAK,MAEA5tB,KAAA,WACAjK,KAAAo3B,QACAp3B,KAAAo3B,MAAA,KACAp3B,KAAAq3B,MAAA91B,IACAs2B,QC1CA,IAAAM,GAAA,SAAAt1B,EAAA00B,EAAAC,GACA,IAAA/5B,EAAA,IAAA05B,GAMA,OALAI,EAAA,MAAAA,EAAA,GAAAA,EACA95B,EAAAg6B,QAAA,SAAAW,GACA36B,EAAAwM,OACApH,EAAAu1B,EAAAb,IACGA,EAAAC,GACH/5B,GCPA46B,GAAA,SAAAx1B,EAAA00B,EAAAC,GACA,IAAA/5B,EAAA,IAAA05B,GAAAmB,EAAAf,EACA,aAAAA,GAAA95B,EAAAg6B,QAAA50B,EAAA00B,EAAAC,GAAA/5B,IACA85B,KAAAC,EAAA,MAAAA,EAAA72B,MAAA62B,EACA/5B,EAAAg6B,QAAA,SAAAxnB,EAAAmoB,GACAA,GAAAE,EACA76B,EAAAg6B,QAAAxnB,EAAAqoB,GAAAf,EAAAC,GACA30B,EAAAu1B,IACGb,EAAAC,GACH/5B,ICRA86B,GAAAnmB,GAAA,2BACAomB,MAEAC,GAAA,EACAC,GAAA,EACAC,GAAA,EACAC,GAAA,EACAC,GAAA,EACAC,GAAA,EACAC,GAAA,EAEAC,GAAA,SAAA5jB,EAAAtY,EAAAuF,EAAA+V,EAAAjD,EAAA8jB,GACA,IAAAC,EAAA9jB,EAAA+jB,aACA,GAAAD,GACA,GAAA72B,KAAA62B,EAAA,YADA9jB,EAAA+jB,iBAmCA,SAAA/jB,EAAA/S,EAAA+2B,GACA,IACAC,EADAH,EAAA9jB,EAAA+jB,aAgBA,SAAAnvB,EAAAouB,GACA,IAAA77B,EAAAsQ,EAAA7O,EAAAhB,EAGA,GAAAo8B,EAAAE,QAAAZ,GAAA,OAAAzuB,IAEA,IAAA1N,KAAA28B,EAEA,IADAl8B,EAAAk8B,EAAA38B,IACAO,OAAAs8B,EAAAt8B,KAAA,CAKA,GAAAE,EAAAs8B,QAAAV,GAAA,OAAAT,GAAAnuB,GAIAhN,EAAAs8B,QAAAT,IACA77B,EAAAs8B,MAAAP,GACA/7B,EAAAs6B,MAAArtB,OACAjN,EAAA0U,GAAAhV,KAAA,YAAA0Y,IAAAR,SAAA5X,EAAAob,MAAApb,EAAAmY,cACA+jB,EAAA38B,KAMAA,EAAA8F,IACArF,EAAAs8B,MAAAP,GACA/7B,EAAAs6B,MAAArtB,cACAivB,EAAA38B,IAoBA,GAZA47B,GAAA,WACAiB,EAAAE,QAAAV,KACAQ,EAAAE,MAAAT,GACAO,EAAA9B,MAAAG,QAAAxnB,EAAAmpB,EAAA7B,MAAA6B,EAAA5B,MACAvnB,EAAAmoB,MAMAgB,EAAAE,MAAAX,GACAS,EAAA1nB,GAAAhV,KAAA,QAAA0Y,IAAAR,SAAAwkB,EAAAhhB,MAAAghB,EAAAjkB,OACAikB,EAAAE,QAAAX,GAAA,CAKA,IAJAS,EAAAE,MAAAV,GAGAS,EAAA,IAAAt4B,MAAA/C,EAAAo7B,EAAAC,MAAAl1B,QACA5H,EAAA,EAAAsQ,GAAA,EAAuBtQ,EAAAyB,IAAOzB,GAC9BS,EAAAo8B,EAAAC,MAAA98B,GAAAiB,MAAAd,KAAA0Y,IAAAR,SAAAwkB,EAAAhhB,MAAAghB,EAAAjkB,UACAkkB,IAAAxsB,GAAA7P,GAGAq8B,EAAAl1B,OAAA0I,EAAA,GAGA,SAAAoD,EAAAmoB,GAKA,IAJA,IAAA36B,EAAA26B,EAAAgB,EAAAnE,SAAAmE,EAAAG,KAAA78B,KAAA,KAAA07B,EAAAgB,EAAAnE,WAAAmE,EAAA9B,MAAAG,QAAAxtB,GAAAmvB,EAAAE,MAAAR,GAAA,GACAv8B,GAAA,EACAyB,EAAAq7B,EAAAl1B,SAEA5H,EAAAyB,GACAq7B,EAAA98B,GAAAG,KAAA,KAAAe,GAIA27B,EAAAE,QAAAR,KACAM,EAAA1nB,GAAAhV,KAAA,MAAA0Y,IAAAR,SAAAwkB,EAAAhhB,MAAAghB,EAAAjkB,OACAlL,KAIA,SAAAA,IAIA,QAAA1N,KAHA68B,EAAAE,MAAAP,GACAK,EAAA9B,MAAArtB,cACAivB,EAAA72B,GACA62B,EAAA,cACA9jB,EAAA+jB,aA/FAD,EAAA72B,GAAA+2B,EACAA,EAAA9B,SAEA,SAAAc,GACAgB,EAAAE,MAAAZ,GACAU,EAAA9B,MAAAG,QAAAztB,EAAAovB,EAAA7B,MAAA6B,EAAA5B,MAGA4B,EAAA7B,OAAAa,GAAApuB,EAAAouB,EAAAgB,EAAA7B,QAPA,EAAA6B,EAAA5B,MAxCAgC,CAAApkB,EAAA/S,GACAvF,OACAsb,QACAjD,QACAzD,GAAA6mB,GACAc,MAAAb,GACAhB,KAAAyB,EAAAzB,KACAD,MAAA0B,EAAA1B,MACAtC,SAAAgE,EAAAhE,SACAsE,KAAAN,EAAAM,KACAjC,MAAA,KACAgC,MAAAb,MAIA,SAAAgB,GAAArkB,EAAA/S,GACA,IAAAq3B,EAAAC,GAAAvkB,EAAA/S,GACA,GAAAq3B,EAAAJ,MAAAb,GAAA,UAAAnnB,MAAA,+BACA,OAAAooB,EAGA,SAAAE,GAAAxkB,EAAA/S,GACA,IAAAq3B,EAAAC,GAAAvkB,EAAA/S,GACA,GAAAq3B,EAAAJ,MAAAX,GAAA,UAAArnB,MAAA,6BACA,OAAAooB,EAGA,SAAAC,GAAAvkB,EAAA/S,GACA,IAAAq3B,EAAAtkB,EAAA+jB,aACA,IAAAO,SAAAr3B,IAAA,UAAAiP,MAAA,wBACA,OAAAooB,EC9CA,IAAAG,GAAA,SAAAzkB,EAAAtY,GACA,IACA48B,EACAta,EAEA7iB,EAJA28B,EAAA9jB,EAAA+jB,aAGA1d,GAAA,EAGA,GAAAyd,EAAA,CAIA,IAAA38B,KAFAO,EAAA,MAAAA,EAAA,KAAAA,EAAA,GAEAo8B,GACAQ,EAAAR,EAAA38B,IAAAO,UACAsiB,EAAAsa,EAAAJ,MAAAX,IAAAe,EAAAJ,MAAAR,GACAY,EAAAJ,MAAAP,GACAW,EAAApC,MAAArtB,OACAmV,GAAAsa,EAAAhoB,GAAAhV,KAAA,YAAA0Y,IAAAR,SAAA8kB,EAAAthB,MAAAshB,EAAAvkB,cACA+jB,EAAA38B,IALkDkf,GAAA,EAQlDA,UAAArG,EAAA+jB,eC+CA,SAAAW,GAAAppB,EAAA5T,EAAAU,GACA,IAAA6E,EAAAqO,EAAAqpB,IAOA,OALArpB,EAAAI,KAAA,WACA,IAAA4oB,EAAAE,GAAA55B,KAAAqC,IACAq3B,EAAAl8B,QAAAk8B,EAAAl8B,WAA2CV,GAAAU,EAAA6R,MAAArP,KAAAkE,aAG3C,SAAAkR,GACA,OAAAukB,GAAAvkB,EAAA/S,GAAA7E,MAAAV,IC3EA,IAAAk9B,GAAA,SAAAxzB,EAAAC,GACA,IAAA7J,EACA,wBAAA6J,EAAAuqB,GACAvqB,aAAA8kB,GAAA0G,IACAr1B,EAAA2uB,GAAA9kB,OAAA7J,EAAAq1B,IACAT,IAAAhrB,EAAAC,ICAA,ICNAwzB,GAAA1d,GAAApe,UAAAsT,YCaA,ICIAyoB,GAAA,EAEA,SAAAC,GAAArgB,EAAAC,EAAAjd,EAAAuF,GACArC,KAAAga,QAAAF,EACA9Z,KAAAia,SAAAF,EACA/Z,KAAAo6B,MAAAt9B,EACAkD,KAAA+5B,IAAA13B,EAGA,SAAAg4B,GAAAv9B,GACA,OAAAyf,KAAA7L,WAAA5T,GAGA,SAAAw9B,KACA,QAAAJ,GAGA,IAAAK,GAAAhe,GAAApe,UCpCA,SAAAq8B,GAAA/8B,GACA,OAAAA,ECDA,SAAAg9B,GAAAh9B,GACA,OAAAA,IAGA,SAAAi9B,GAAAj9B,GACA,OAAAA,GAAA,EAAAA,GAGA,SAAAk9B,GAAAl9B,GACA,QAAAA,GAAA,MAAAA,SAAA,EAAAA,GAAA,KCTA,SAAAm9B,GAAAn9B,GACA,OAAAA,MAGA,SAAAo9B,GAAAp9B,GACA,QAAAA,MAAA,EAGA,SAAAq9B,GAAAr9B,GACA,QAAAA,GAAA,MAAAA,UAAA,GAAAA,IAAA,KH6BA08B,GAAAh8B,UAAAk8B,GAAAl8B,WACAsT,YAAA0oB,GACAl3B,OIpCA,SAAAA,GACA,IAAAnG,EAAAkD,KAAAo6B,MACA/3B,EAAArC,KAAA+5B,IAEA,mBAAA92B,MAAAsQ,GAAAtQ,IAEA,QAAA6W,EAAA9Z,KAAAga,QAAArd,EAAAmd,EAAA3V,OAAAgW,EAAA,IAAApZ,MAAApE,GAAAkQ,EAAA,EAAqFA,EAAAlQ,IAAOkQ,EAC5F,QAAAuI,EAAAgF,EAAAjF,EAAA2E,EAAAjN,GAAA7O,EAAAmX,EAAAhR,OAAAkW,EAAAF,EAAAtN,GAAA,IAAA9L,MAAA/C,GAAAzB,EAAA,EAA+GA,EAAAyB,IAAOzB,GACtH6Y,EAAAD,EAAA5Y,MAAA6d,EAAAnX,EAAAvG,KAAA0Y,IAAAR,SAAArY,EAAA4Y,MACA,aAAAC,IAAAgF,EAAAxF,SAAAQ,EAAAR,UACAyF,EAAA9d,GAAA6d,EACA4e,GAAA3e,EAAA9d,GAAAO,EAAAuF,EAAA9F,EAAA8d,EAAAsf,GAAAvkB,EAAA/S,KAKA,WAAA83B,GAAAhgB,EAAAna,KAAAia,SAAAnd,EAAAuF,IJqBAqB,UKrCA,SAAAT,GACA,IAAAnG,EAAAkD,KAAAo6B,MACA/3B,EAAArC,KAAA+5B,IAEA,mBAAA92B,MAAAyQ,GAAAzQ,IAEA,QAAA6W,EAAA9Z,KAAAga,QAAArd,EAAAmd,EAAA3V,OAAAgW,KAAAJ,KAAAlN,EAAA,EAAyFA,EAAAlQ,IAAOkQ,EAChG,QAAAuI,EAAAD,EAAA2E,EAAAjN,GAAA7O,EAAAmX,EAAAhR,OAAA5H,EAAA,EAA8DA,EAAAyB,IAAOzB,EACrE,GAAA6Y,EAAAD,EAAA5Y,GAAA,CACA,QAAAuY,EAAAimB,EAAA93B,EAAAvG,KAAA0Y,IAAAR,SAAArY,EAAA4Y,GAAA6lB,EAAArB,GAAAvkB,EAAA/S,GAAAoC,EAAA,EAAAjI,EAAAu+B,EAAA52B,OAAmIM,EAAAjI,IAAOiI,GAC1IqQ,EAAAimB,EAAAt2B,KACAu0B,GAAAlkB,EAAAhY,EAAAuF,EAAAoC,EAAAs2B,EAAAC,GAGA7gB,EAAApX,KAAAg4B,GACAhhB,EAAAhX,KAAAqS,GAKA,WAAA+kB,GAAAhgB,EAAAJ,EAAAjd,EAAAuF,ILkBAyE,OMvCA,SAAAwT,GACA,mBAAAA,MAAAlG,GAAAkG,IAEA,QAAAR,EAAA9Z,KAAAga,QAAArd,EAAAmd,EAAA3V,OAAAgW,EAAA,IAAApZ,MAAApE,GAAAkQ,EAAA,EAAqFA,EAAAlQ,IAAOkQ,EAC5F,QAAAuI,EAAAD,EAAA2E,EAAAjN,GAAA7O,EAAAmX,EAAAhR,OAAAkW,EAAAF,EAAAtN,MAAAtQ,EAAA,EAA4FA,EAAAyB,IAAOzB,GACnG6Y,EAAAD,EAAA5Y,KAAA+d,EAAA5d,KAAA0Y,IAAAR,SAAArY,EAAA4Y,IACAkF,EAAAtX,KAAAqS,GAKA,WAAA+kB,GAAAhgB,EAAAna,KAAAia,SAAAja,KAAAo6B,MAAAp6B,KAAA+5B,MN6BAvpB,MOzCA,SAAAE,GACA,GAAAA,EAAAqpB,MAAA/5B,KAAA+5B,IAAA,UAAAzoB,MAEA,QAAAwJ,EAAA9a,KAAAga,QAAAe,EAAArK,EAAAsJ,QAAAgB,EAAAF,EAAA3W,OAAA8W,EAAAF,EAAA5W,OAAAxH,EAAA+J,KAAAnD,IAAAyX,EAAAC,GAAAC,EAAA,IAAAna,MAAAia,GAAAnO,EAAA,EAA+JA,EAAAlQ,IAAOkQ,EACtK,QAAAuI,EAAA+F,EAAAL,EAAAjO,GAAAuO,EAAAL,EAAAlO,GAAA7O,EAAAmd,EAAAhX,OAAAqM,EAAA0K,EAAArO,GAAA,IAAA9L,MAAA/C,GAAAzB,EAAA,EAAwHA,EAAAyB,IAAOzB,GAC/H6Y,EAAA+F,EAAA5e,IAAA6e,EAAA7e,MACAiU,EAAAjU,GAAA6Y,GAKA,KAAQvI,EAAAmO,IAAQnO,EAChBqO,EAAArO,GAAAiO,EAAAjO,GAGA,WAAAstB,GAAAjf,EAAAlb,KAAAia,SAAAja,KAAAo6B,MAAAp6B,KAAA+5B,MP2BAhqB,UFxCA,WACA,WAAAkqB,GAAAj6B,KAAAga,QAAAha,KAAAia,WEwCAvJ,sBQrCA,IAJA,IAAA5T,EAAAkD,KAAAo6B,MACAa,EAAAj7B,KAAA+5B,IACAmB,EAAAZ,KAEAxgB,EAAA9Z,KAAAga,QAAArd,EAAAmd,EAAA3V,OAAA0I,EAAA,EAA2DA,EAAAlQ,IAAOkQ,EAClE,QAAAuI,EAAAD,EAAA2E,EAAAjN,GAAA7O,EAAAmX,EAAAhR,OAAA5H,EAAA,EAA8DA,EAAAyB,IAAOzB,EACrE,GAAA6Y,EAAAD,EAAA5Y,GAAA,CACA,IAAAy+B,EAAArB,GAAAvkB,EAAA6lB,GACAjC,GAAA5jB,EAAAtY,EAAAo+B,EAAA3+B,EAAA4Y,GACAqiB,KAAAwD,EAAAxD,KAAAwD,EAAAzD,MAAAyD,EAAA/F,SACAsC,MAAA,EACAtC,SAAA+F,EAAA/F,SACAsE,KAAAyB,EAAAzB,OAMA,WAAAY,GAAArgB,EAAA9Z,KAAAia,SAAAnd,EAAAo+B,IRwBAx+B,KAAA69B,GAAA79B,KACA8e,MAAA+e,GAAA/e,MACApG,KAAAmlB,GAAAnlB,KACAmF,KAAAggB,GAAAhgB,KACAkB,MAAA8e,GAAA9e,MACA3K,KAAAypB,GAAAzpB,KACAY,GS3BA,SAAA5U,EAAAqb,GACA,IAAA9V,EAAArC,KAAA+5B,IAEA,OAAA71B,UAAAC,OAAA,EACAw1B,GAAA35B,KAAAoV,OAAA/S,GAAAqP,MAAA5U,GACAkD,KAAA8Q,KApBA,SAAAzO,EAAAvF,EAAAqb,GACA,IAAAgjB,EAAAC,EAAAC,EATA,SAAAv+B,GACA,OAAAA,EAAA,IAAAgV,OAAAC,MAAA,SAAAupB,MAAA,SAAA79B,GACA,IAAAlB,EAAAkB,EAAAuU,QAAA,KAEA,OADAzV,GAAA,IAAAkB,IAAAmM,MAAA,EAAArN,KACAkB,GAAA,UAAAA,IAKA89B,CAAAz+B,GAAA28B,GAAAG,GACA,kBACA,IAAAF,EAAA2B,EAAAr7B,KAAAqC,GACAqP,EAAAgoB,EAAAhoB,GAKAA,IAAAypB,IAAAC,GAAAD,EAAAzpB,GAAA5B,QAAA4B,GAAA5U,EAAAqb,GAEAuhB,EAAAhoB,GAAA0pB,GASAI,CAAAn5B,EAAAvF,EAAAqb,KTuBAhV,KUcA,SAAArG,EAAAU,GACA,IAAAuV,EAAAL,GAAA5V,GAAAP,EAAA,cAAAwW,EAAAwgB,GAAAyG,GACA,OAAAh6B,KAAAy7B,UAAA3+B,EAAA,mBAAAU,GACAuV,EAAAF,MAjBA,SAAAE,EAAAijB,EAAAx4B,GACA,IAAAk+B,EACAC,EACAC,EACA,kBACA,IAAAhzB,EAAAizB,EAAAr+B,EAAAwC,MACA,SAAA67B,EAEA,OADAjzB,EAAA5I,KAAA0b,eAAA3I,EAAAH,MAAAG,EAAAF,UACAgpB,EAAA,KACAjzB,IAAA8yB,GAAAG,IAAAF,EAAAC,EACAA,EAAA5F,EAAA0F,EAAA9yB,EAAA+yB,EAAAE,GAJA77B,KAAA2b,kBAAA5I,EAAAH,MAAAG,EAAAF,SApBA,SAAA/V,EAAAk5B,EAAAx4B,GACA,IAAAk+B,EACAC,EACAC,EACA,kBACA,IAAAhzB,EAAAizB,EAAAr+B,EAAAwC,MACA,SAAA67B,EAEA,OADAjzB,EAAA5I,KAAA2Q,aAAA7T,MACA++B,EAAA,KACAjzB,IAAA8yB,GAAAG,IAAAF,EAAAC,EACAA,EAAA5F,EAAA0F,EAAA9yB,EAAA+yB,EAAAE,GAJA77B,KAAA4b,gBAAA9e,MAyBAiW,EAAAxW,EAAAu9B,GAAA95B,KAAA,QAAAlD,EAAAU,IACA,MAAAA,GAAAuV,EAAAF,MA5DA,SAAAE,GACA,kBACA/S,KAAA2b,kBAAA5I,EAAAH,MAAAG,EAAAF,SARA,SAAA/V,GACA,kBACAkD,KAAA4b,gBAAA9e,MAgEAiW,IACAA,EAAAF,MA5CA,SAAAE,EAAAijB,EAAA6F,GACA,IAAAH,EACAE,EACA,kBACA,IAAAhzB,EAAA5I,KAAA0b,eAAA3I,EAAAH,MAAAG,EAAAF,OACA,OAAAjK,IAAAizB,EAAA,KACAjzB,IAAA8yB,EAAAE,EACAA,EAAA5F,EAAA0F,EAAA9yB,EAAAizB,KAlBA,SAAA/+B,EAAAk5B,EAAA6F,GACA,IAAAH,EACAE,EACA,kBACA,IAAAhzB,EAAA5I,KAAA2Q,aAAA7T,GACA,OAAA8L,IAAAizB,EAAA,KACAjzB,IAAA8yB,EAAAE,EACAA,EAAA5F,EAAA0F,EAAA9yB,EAAAizB,MAgDA9oB,EAAAxW,EAAAiB,EAAA,MVlBAi+B,UW9BA,SAAA3+B,EAAAU,GACA,IAAAM,EAAA,QAAAhB,EACA,GAAAoH,UAAAC,OAAA,SAAArG,EAAAkC,KAAAq5B,MAAAv7B,OAAAg+B,OACA,SAAAt+B,EAAA,OAAAwC,KAAAq5B,MAAAv7B,EAAA,MACA,sBAAAN,EAAA,UAAA8T,MACA,IAAAyB,EAAAL,GAAA5V,GACA,OAAAkD,KAAAq5B,MAAAv7B,GAAAiV,EAAAF,MA5BA,SAAAE,EAAAvV,GACA,SAAA67B,IACA,IAAAjkB,EAAApV,KAAAzD,EAAAiB,EAAA6R,MAAA+F,EAAAlR,WACA,OAAA3H,GAAA,SAAAkB,GACA2X,EAAAyG,eAAA9I,EAAAH,MAAAG,EAAAF,MAAAtW,EAAAkB,KAIA,OADA47B,EAAAyC,OAAAt+B,EACA67B,GAGA,SAAAv8B,EAAAU,GACA,SAAA67B,IACA,IAAAjkB,EAAApV,KAAAzD,EAAAiB,EAAA6R,MAAA+F,EAAAlR,WACA,OAAA3H,GAAA,SAAAkB,GACA2X,EAAAwB,aAAA9Z,EAAAP,EAAAkB,KAIA,OADA47B,EAAAyC,OAAAt+B,EACA67B,IASAtmB,EAAAvV,KXyBA4F,MYNA,SAAAtG,EAAAU,EAAAse,GACA,IAAAvf,EAAA,cAAAO,GAAA,IAAAw2B,GAAA0G,GACA,aAAAx8B,EAAAwC,KACA+7B,WAAAj/B,EA/CA,SAAAA,EAAAk5B,GACA,IAAA0F,EACAC,EACAC,EACA,kBACA,IAAAhzB,EAAAkN,GAAA9V,KAAAlD,GACA++B,GAAA77B,KAAAoD,MAAA2Y,eAAAjf,GAAAgZ,GAAA9V,KAAAlD,IACA,OAAA8L,IAAAizB,EAAA,KACAjzB,IAAA8yB,GAAAG,IAAAF,EAAAC,EACAA,EAAA5F,EAAA0F,EAAA9yB,EAAA+yB,EAAAE,IAsCAG,CAAAl/B,EAAAP,IACAmV,GAAA,aAAA5U,EAnCA,SAAAA,GACA,kBACAkD,KAAAoD,MAAA2Y,eAAAjf,IAiCAm/B,CAAAn/B,IACAkD,KAAA+7B,WAAAj/B,EAAA,mBAAAU,EAnBA,SAAAV,EAAAk5B,EAAAx4B,GACA,IAAAk+B,EACAC,EACAC,EACA,kBACA,IAAAhzB,EAAAkN,GAAA9V,KAAAlD,GACA++B,EAAAr+B,EAAAwC,MAEA,OADA,MAAA67B,IAAA77B,KAAAoD,MAAA2Y,eAAAjf,GAAA++B,EAAA/lB,GAAA9V,KAAAlD,IACA8L,IAAAizB,EAAA,KACAjzB,IAAA8yB,GAAAG,IAAAF,EAAAC,EACAA,EAAA5F,EAAA0F,EAAA9yB,EAAA+yB,EAAAE,IAUAK,CAAAp/B,EAAAP,EAAAu9B,GAAA95B,KAAA,SAAAlD,EAAAU,IA/BA,SAAAV,EAAAk5B,EAAA6F,GACA,IAAAH,EACAE,EACA,kBACA,IAAAhzB,EAAAkN,GAAA9V,KAAAlD,GACA,OAAA8L,IAAAizB,EAAA,KACAjzB,IAAA8yB,EAAAE,EACAA,EAAA5F,EAAA0F,EAAA9yB,EAAAizB,IAyBAM,CAAAr/B,EAAAP,EAAAiB,EAAA,IAAAse,IZAAigB,Wa7CA,SAAAj/B,EAAAU,EAAAse,GACA,IAAAhe,EAAA,UAAAhB,GAAA,IACA,GAAAoH,UAAAC,OAAA,SAAArG,EAAAkC,KAAAq5B,MAAAv7B,OAAAg+B,OACA,SAAAt+B,EAAA,OAAAwC,KAAAq5B,MAAAv7B,EAAA,MACA,sBAAAN,EAAA,UAAA8T,MACA,OAAAtR,KAAAq5B,MAAAv7B,EAhBA,SAAAhB,EAAAU,EAAAse,GACA,SAAAud,IACA,IAAAjkB,EAAApV,KAAAzD,EAAAiB,EAAA6R,MAAA+F,EAAAlR,WACA,OAAA3H,GAAA,SAAAkB,GACA2X,EAAAhS,MAAA4Y,YAAAlf,EAAAP,EAAAkB,GAAAqe,IAIA,OADAud,EAAAyC,OAAAt+B,EACA67B,EAQA0C,CAAAj/B,EAAAU,EAAA,MAAAse,EAAA,GAAAA,KbyCAvL,KD1CA,SAAA/S,GACA,OAAAwC,KAAAq5B,MAAA,0BAAA77B,EARA,SAAAA,GACA,kBACA,IAAAq+B,EAAAr+B,EAAAwC,MACAA,KAAAiX,YAAA,MAAA4kB,EAAA,GAAAA,GAMAO,CAAAtC,GAAA95B,KAAA,OAAAxC,IAfA,SAAAA,GACA,kBACAwC,KAAAiX,YAAAzZ,GAcA6+B,CAAA,MAAA7+B,EAAA,GAAAA,EAAA,MCwCAqT,OHlDA,WACA,OAAA7Q,KAAA0R,GAAA,aATA,SAAArP,GACA,kBACA,IAAAmS,EAAAxU,KAAA4Q,WACA,QAAArU,KAAAyD,KAAAm5B,aAAA,IAAA58B,IAAA8F,EAAA,OACAmS,KAAAkD,YAAA1X,OAKAs8B,CAAAt8B,KAAA+5B,OGkDAV,MLRA,SAAAv8B,EAAAU,GACA,IAAA6E,EAAArC,KAAA+5B,IAIA,GAFAj9B,GAAA,GAEAoH,UAAAC,OAAA,GAEA,IADA,IACA1G,EADA47B,EAAAM,GAAA35B,KAAAoV,OAAA/S,GAAAg3B,MACA98B,EAAA,EAAAyB,EAAAq7B,EAAAl1B,OAAwC5H,EAAAyB,IAAOzB,EAC/C,IAAAkB,EAAA47B,EAAA98B,IAAAO,SACA,OAAAW,EAAAD,MAGA,YAGA,OAAAwC,KAAA8Q,MAAA,MAAAtT,EAhEA,SAAA6E,EAAAvF,GACA,IAAAy/B,EAAAC,EACA,kBACA,IAAA9C,EAAAE,GAAA55B,KAAAqC,GACAg3B,EAAAK,EAAAL,MAKA,GAAAA,IAAAkD,EAEA,QAAAhgC,EAAA,EAAAyB,GADAw+B,EAAAD,EAAAlD,GACAl1B,OAAwC5H,EAAAyB,IAAOzB,EAC/C,GAAAigC,EAAAjgC,GAAAO,SAAA,EACA0/B,IAAA5yB,SACAkN,OAAAva,EAAA,GACA,MAKAm9B,EAAAL,MAAAmD,IAIA,SAAAn6B,EAAAvF,EAAAU,GACA,IAAA++B,EAAAC,EACA,sBAAAh/B,EAAA,UAAA8T,MACA,kBACA,IAAAooB,EAAAE,GAAA55B,KAAAqC,GACAg3B,EAAAK,EAAAL,MAKA,GAAAA,IAAAkD,EAAA,CACAC,GAAAD,EAAAlD,GAAAzvB,QACA,QAAAnM,GAAoBX,OAAAU,SAAyBjB,EAAA,EAAAyB,EAAAw+B,EAAAr4B,OAA2B5H,EAAAyB,IAAOzB,EAC/E,GAAAigC,EAAAjgC,GAAAO,SAAA,CACA0/B,EAAAjgC,GAAAkB,EACA,MAGAlB,IAAAyB,GAAAw+B,EAAAz5B,KAAAtF,GAGAi8B,EAAAL,MAAAmD,KAmBAn6B,EAAAvF,EAAAU,KKNA+5B,Mc9CA,SAAA/5B,GACA,IAAA6E,EAAArC,KAAA+5B,IAEA,OAAA71B,UAAAC,OACAnE,KAAA8Q,MAAA,mBAAAtT,EAhBA,SAAA6E,EAAA7E,GACA,kBACAi8B,GAAAz5B,KAAAqC,GAAAk1B,OAAA/5B,EAAA6R,MAAArP,KAAAkE,aAIA,SAAA7B,EAAA7E,GACA,OAAAA,KAAA,WACAi8B,GAAAz5B,KAAAqC,GAAAk1B,MAAA/5B,KAUA6E,EAAA7E,IACAm8B,GAAA35B,KAAAoV,OAAA/S,GAAAk1B,OdwCAtC,Se/CA,SAAAz3B,GACA,IAAA6E,EAAArC,KAAA+5B,IAEA,OAAA71B,UAAAC,OACAnE,KAAA8Q,MAAA,mBAAAtT,EAhBA,SAAA6E,EAAA7E,GACA,kBACAo8B,GAAA55B,KAAAqC,GAAA4yB,UAAAz3B,EAAA6R,MAAArP,KAAAkE,aAIA,SAAA7B,EAAA7E,GACA,OAAAA,KAAA,WACAo8B,GAAA55B,KAAAqC,GAAA4yB,SAAAz3B,KAUA6E,EAAA7E,IACAm8B,GAAA35B,KAAAoV,OAAA/S,GAAA4yB,UfyCAsE,KgBrDA,SAAA/7B,GACA,IAAA6E,EAAArC,KAAA+5B,IAEA,OAAA71B,UAAAC,OACAnE,KAAA8Q,KAXA,SAAAzO,EAAA7E,GACA,sBAAAA,EAAA,UAAA8T,MACA,kBACAsoB,GAAA55B,KAAAqC,GAAAk3B,KAAA/7B,GAQAi/B,CAAAp6B,EAAA7E,IACAm8B,GAAA35B,KAAAoV,OAAA/S,GAAAk3B,OCdA,IAEAmD,GAAA,SAAAC,EAAAz6B,GAGA,SAAAw6B,EAAAj/B,GACA,OAAAiJ,KAAAE,IAAAnJ,EAAAyE,GAKA,OARAA,KAMAw6B,EAAAE,SAAAD,EAEAD,EATA,CAFA,GAcAG,GAAA,SAAAF,EAAAz6B,GAGA,SAAA26B,EAAAp/B,GACA,SAAAiJ,KAAAE,IAAA,EAAAnJ,EAAAyE,GAKA,OARAA,KAMA26B,EAAAD,SAAAD,EAEAE,EATA,CAdA,GA0BAC,GAAA,SAAAH,EAAAz6B,GAGA,SAAA46B,EAAAr/B,GACA,QAAAA,GAAA,MAAAiJ,KAAAE,IAAAnJ,EAAAyE,GAAA,EAAAwE,KAAAE,IAAA,EAAAnJ,EAAAyE,IAAA,EAKA,OARAA,KAMA46B,EAAAF,SAAAD,EAEAG,EATA,CA1BA,GCAAC,GAAAr2B,KAAAqmB,GACAiQ,GAAAD,GAAA,EAEA,SAAAE,GAAAx/B,GACA,SAAAiJ,KAAAinB,IAAAlwB,EAAAu/B,IAGA,SAAAE,GAAAz/B,GACA,OAAAiJ,KAAAknB,IAAAnwB,EAAAu/B,IAGA,SAAAG,GAAA1/B,GACA,SAAAiJ,KAAAinB,IAAAoP,GAAAt/B,IAAA,ECZA,SAAA2/B,GAAA3/B,GACA,OAAAiJ,KAAAE,IAAA,KAAAnJ,EAAA,IAGA,SAAA4/B,GAAA5/B,GACA,SAAAiJ,KAAAE,IAAA,MAAAnJ,GAGA,SAAA6/B,GAAA7/B,GACA,QAAAA,GAAA,MAAAiJ,KAAAE,IAAA,KAAAnJ,EAAA,MAAAiJ,KAAAE,IAAA,QAAAnJ,IAAA,ECTA,SAAA8/B,GAAA9/B,GACA,SAAAiJ,KAAAC,KAAA,EAAAlJ,KAGA,SAAA+/B,GAAA//B,GACA,OAAAiJ,KAAAC,KAAA,KAAAlJ,KAGA,SAAAggC,GAAAhgC,GACA,QAAAA,GAAA,QAAAiJ,KAAAC,KAAA,EAAAlJ,KAAAiJ,KAAAC,KAAA,GAAAlJ,GAAA,GAAAA,GAAA,KCTA,IAAAigC,GAAA,KACAC,GAAA,KACAC,GAAA,KACAC,GAAA,IACAC,GAAA,KACAC,GAAA,MACAC,GAAA,MACAC,GAAA,MACAC,GAAA,MACAC,GAAA,EAAAT,MAEA,SAAAU,GAAA3gC,GACA,SAAA4gC,GAAA,EAAA5gC,GAGA,SAAA4gC,GAAA5gC,GACA,OAAAA,MAAAigC,GAAAS,GAAA1gC,MAAAmgC,GAAAO,IAAA1gC,GAAAkgC,IAAAlgC,EAAAogC,GAAApgC,EAAAsgC,GAAAI,IAAA1gC,GAAAqgC,IAAArgC,EAAAugC,GAAAG,IAAA1gC,GAAAwgC,IAAAxgC,EAAAygC,GAGA,SAAAI,GAAA7gC,GACA,QAAAA,GAAA,QAAA4gC,GAAA,EAAA5gC,GAAA4gC,GAAA5gC,EAAA,QCpBA,IAEA8gC,GAAA,SAAA5B,EAAAr+B,GAGA,SAAAigC,EAAA9gC,GACA,OAAAA,MAAAa,EAAA,GAAAb,EAAAa,GAKA,OARAA,KAMAigC,EAAAC,UAAA7B,EAEA4B,EATA,CAFA,SAcAE,GAAA,SAAA9B,EAAAr+B,GAGA,SAAAmgC,EAAAhhC,GACA,QAAAA,MAAAa,EAAA,GAAAb,EAAAa,GAAA,EAKA,OARAA,KAMAmgC,EAAAD,UAAA7B,EAEA8B,EATA,CAdA,SA0BAC,GAAA,SAAA/B,EAAAr+B,GAGA,SAAAogC,EAAAjhC,GACA,QAAAA,GAAA,KAAAA,MAAAa,EAAA,GAAAb,EAAAa,IAAAb,GAAA,GAAAA,IAAAa,EAAA,GAAAb,EAAAa,GAAA,KAKA,OARAA,KAMAogC,EAAAF,UAAA7B,EAEA+B,EATA,CA1BA,SCAAC,GAAA,EAAAj4B,KAAAqmB,GAIA6R,GAAA,SAAAjC,EAAAn2B,EAAAnI,GACA,IAAAC,EAAAoI,KAAAm4B,KAAA,GAAAr4B,EAAAE,KAAAlD,IAAA,EAAAgD,MAAAnI,GAAAsgC,IAEA,SAAAC,EAAAnhC,GACA,OAAA+I,EAAAE,KAAAE,IAAA,OAAAnJ,GAAAiJ,KAAAknB,KAAAtvB,EAAAb,GAAAY,GAMA,OAHAugC,EAAAE,UAAA,SAAAt4B,GAAqC,OAAAm2B,EAAAn2B,EAAAnI,EAAAsgC,KACrCC,EAAAG,OAAA,SAAA1gC,GAAkC,OAAAs+B,EAAAn2B,EAAAnI,IAElCugC,EAVA,CAHA,EACA,IAeAI,GAAA,SAAArC,EAAAn2B,EAAAnI,GACA,IAAAC,EAAAoI,KAAAm4B,KAAA,GAAAr4B,EAAAE,KAAAlD,IAAA,EAAAgD,MAAAnI,GAAAsgC,IAEA,SAAAK,EAAAvhC,GACA,SAAA+I,EAAAE,KAAAE,IAAA,OAAAnJ,OAAAiJ,KAAAknB,KAAAnwB,EAAAa,GAAAD,GAMA,OAHA2gC,EAAAF,UAAA,SAAAt4B,GAAsC,OAAAm2B,EAAAn2B,EAAAnI,EAAAsgC,KACtCK,EAAAD,OAAA,SAAA1gC,GAAmC,OAAAs+B,EAAAn2B,EAAAnI,IAEnC2gC,EAVA,CAhBA,EACA,IA4BAC,GAAA,SAAAtC,EAAAn2B,EAAAnI,GACA,IAAAC,EAAAoI,KAAAm4B,KAAA,GAAAr4B,EAAAE,KAAAlD,IAAA,EAAAgD,MAAAnI,GAAAsgC,IAEA,SAAAM,EAAAxhC,GACA,QAAAA,EAAA,EAAAA,EAAA,KACA+I,EAAAE,KAAAE,IAAA,KAAAnJ,GAAAiJ,KAAAknB,KAAAtvB,EAAAb,GAAAY,GACA,EAAAmI,EAAAE,KAAAE,IAAA,MAAAnJ,GAAAiJ,KAAAknB,KAAAtvB,EAAAb,GAAAY,IAAA,EAMA,OAHA4gC,EAAAH,UAAA,SAAAt4B,GAAwC,OAAAm2B,EAAAn2B,EAAAnI,EAAAsgC,KACxCM,EAAAF,OAAA,SAAA1gC,GAAqC,OAAAs+B,EAAAn2B,EAAAnI,IAErC4gC,EAZA,CA7BA,EACA,ICGAC,IACA1H,KAAA,KACAD,MAAA,EACAtC,SAAA,IACAsE,KAAAuB,IAGA,SAAAqE,GAAA/pB,EAAA/S,GAEA,IADA,IAAA42B,IACAA,EAAA7jB,EAAA+jB,iBAAAF,IAAA52B,KACA,KAAA+S,IAAAxE,YACA,OAAAsuB,GAAA1H,KAAA72B,KAAAu+B,GAGA,OAAAjG,ECfA1c,GAAApe,UAAA07B,UCFA,SAAA/8B,GACA,OAAAkD,KAAA8Q,KAAA,WACA+oB,GAAA75B,KAAAlD,MDCAyf,GAAApe,UAAAuS,WDiBA,SAAA5T,GACA,IAAAuF,EACA42B,EAEAn8B,aAAAq9B,IACA93B,EAAAvF,EAAAi9B,IAAAj9B,IAAAs9B,QAEA/3B,EAAAi4B,MAAArB,EAAAiG,IAAA1H,KAAA72B,KAAA7D,EAAA,MAAAA,EAAA,KAAAA,EAAA,IAGA,QAAAgd,EAAA9Z,KAAAga,QAAArd,EAAAmd,EAAA3V,OAAA0I,EAAA,EAA2DA,EAAAlQ,IAAOkQ,EAClE,QAAAuI,EAAAD,EAAA2E,EAAAjN,GAAA7O,EAAAmX,EAAAhR,OAAA5H,EAAA,EAA8DA,EAAAyB,IAAOzB,GACrE6Y,EAAAD,EAAA5Y,KACAy8B,GAAA5jB,EAAAtY,EAAAuF,EAAA9F,EAAA4Y,EAAA8jB,GAAAkG,GAAA/pB,EAAA/S,IAKA,WAAA83B,GAAArgB,EAAA9Z,KAAAia,SAAAnd,EAAAuF,IGrCA,IAAA+8B,IAAA,MAEAC,GAAA,SAAAjqB,EAAAtY,GACA,IACA48B,EACAn9B,EAFA28B,EAAA9jB,EAAA+jB,aAIA,GAAAD,EAEA,IAAA38B,KADAO,EAAA,MAAAA,EAAA,KAAAA,EAAA,GACAo8B,EACA,IAAAQ,EAAAR,EAAA38B,IAAA+8B,MAAAZ,IAAAgB,EAAA58B,SACA,WAAAq9B,KAAA/kB,IAAAgqB,GAAAtiC,GAAAP,GAKA,aCnBA+iC,GAAA,SAAA79B,GACA,kBACA,OAAAA,ICFA89B,GAAA,SAAAn9B,EAAAT,EAAAoO,GACA/P,KAAAoC,SACApC,KAAA2B,OACA3B,KAAA+P,aCDA,SAAAyvB,KACAznB,GAAAwG,2BAGA,IAAAkhB,GAAA,WACA1nB,GAAA0G,iBACA1G,GAAAwG,4BCCAmhB,IAAiB5iC,KAAA,QACjB6iC,IAAkB7iC,KAAA,SAClB8iC,IAAmB9iC,KAAA,UACnB+iC,IAAmB/iC,KAAA,UAEnBgjC,IACAhjC,KAAA,IACAijC,SAAA,SAAAx/B,IAAAy/B,IACAC,MAAA,SAAAx+B,EAAAS,GAAyB,OAAAT,OAAA,GAAAS,EAAA,QAAAT,EAAA,GAAAS,EAAA,SACzBg+B,OAAA,SAAAC,GAAwB,OAAAA,MAAA,MAAAA,EAAA,SAGxBC,IACAtjC,KAAA,IACAijC,SAAA,SAAAx/B,IAAAy/B,IACAC,MAAA,SAAAv+B,EAAAQ,GAAyB,OAAAR,KAAAQ,EAAA,MAAAR,EAAA,KAAAQ,EAAA,MAAAR,EAAA,MACzBw+B,OAAA,SAAAC,GAAwB,OAAAA,MAAA,MAAAA,EAAA,SAGxBE,IACAvjC,KAAA,KACAijC,SAAA,qCAAAx/B,IAAAy/B,IACAC,MAAA,SAAAE,GAAuB,OAAAA,GACvBD,OAAA,SAAAC,GAAwB,OAAAA,IAGxBG,IACAC,QAAA,YACAxwB,UAAA,OACA/R,EAAA,YACAkE,EAAA,YACA5D,EAAA,YACAkiC,EAAA,YACAC,GAAA,cACAC,GAAA,cACAC,GAAA,cACAC,GAAA,eAGAC,IACA3+B,EAAA,IACAs+B,EAAA,IACAC,GAAA,KACAC,GAAA,KACAC,GAAA,KACAC,GAAA,MAGAE,IACA9iC,EAAA,IACAM,EAAA,IACAmiC,GAAA,KACAC,GAAA,KACAC,GAAA,KACAC,GAAA,MAGAG,IACAR,QAAA,EACAxwB,UAAA,EACA/R,EAAA,KACAkE,EAAA,EACA5D,EAAA,KACAkiC,GAAA,EACAC,IAAA,EACAC,GAAA,EACAC,GAAA,EACAC,IAAA,GAGAI,IACAT,QAAA,EACAxwB,UAAA,EACA/R,GAAA,EACAkE,EAAA,KACA5D,EAAA,EACAkiC,EAAA,KACAC,IAAA,EACAC,IAAA,EACAC,GAAA,EACAC,GAAA,GAGA,SAAAZ,GAAAviC,GACA,OAAUkE,KAAAlE,GAIV,SAAAwjC,KACA,OAAAlpB,GAAAyH,OAGA,SAAA0hB,KACA,IAAAtgC,EAAAZ,KAAAgd,iBAAAhd,KACA,cAAAY,EAAAnC,MAAA+0B,QAAAh2B,MAAAoD,EAAAlC,OAAA80B,QAAAh2B,QAIA,SAAA2jC,GAAA/rB,GACA,MAAAA,EAAAgsB,SAAA,KAAAhsB,IAAAxE,YAAA,OACA,OAAAwE,EAAAgsB,QAGA,SAAAC,GAAAC,GACA,OAAAA,EAAA,QAAAA,EAAA,OACAA,EAAA,QAAAA,EAAA,MAGA,SAAAC,GAAAnsB,GACA,IAAAkkB,EAAAlkB,EAAAgsB,QACA,OAAA9H,IAAAkI,IAAAtB,OAAA5G,EAAAvpB,WAAA,KAGA,SAAA0xB,KACA,OAAAC,GAAA5B,IAGA,SAAA6B,KACA,OAAAD,GAAAtB,sBAIA,OAAAsB,GAAArB,KAGA,SAAAqB,GAAAF,GACA,IAIAxhB,EAJAshB,EAAAJ,GACAp6B,EAAAm6B,GACA7gB,EAAAhO,GAAAwvB,EAAA,uBACAC,EAAA,EAGA,SAAAD,EAAAzsB,GACA,IAAAorB,EAAAprB,EACAjX,SAAA,UAAA4jC,GACAp+B,UAAA,YACA9D,MAAAogC,GAAA,aAEAO,EAAA58B,QAAAT,OAAA,QACAC,KAAA,mBACAA,KAAA,wBACAA,KAAA,SAAAm9B,GAAAC,SACA/vB,MAAA+vB,GACAzvB,KAAA,WACA,IAAAwwB,EAAAH,GAAAnhC,MAAAshC,OACA9kB,GAAAxc,MACAmD,KAAA,IAAAm+B,EAAA,OACAn+B,KAAA,IAAAm+B,EAAA,OACAn+B,KAAA,QAAAm+B,EAAA,MAAAA,EAAA,OACAn+B,KAAA,SAAAm+B,EAAA,MAAAA,EAAA,SAGAnsB,EAAAzR,UAAA,cACA9D,MAAAogC,GAAA,eACAr8B,QAAAT,OAAA,QACAC,KAAA,qBACAA,KAAA,SAAAm9B,GAAAvwB,WACA5M,KAAA,eACAA,KAAA,mBACAA,KAAA,iBACAA,KAAA,gCAEA,IAAA4+B,EAAA5sB,EAAAzR,UAAA,WACA9D,KAAA4hC,EAAAzB,QAAA,SAAAljC,GAAsC,OAAAA,EAAA8E,OAEtCogC,EAAA3xB,OAAAS,SAEAkxB,EAAAp+B,QAAAT,OAAA,QACAC,KAAA,iBAAAtG,GAAoC,wBAAAA,EAAA8E,OACpCwB,KAAA,kBAAAtG,GAAqC,OAAAyjC,GAAAzjC,EAAA8E,QAErCwT,EACArE,KAAAkxB,GACA7+B,KAAA,eACAA,KAAA,wBACAC,MAAA,+CACAsO,GAAA,mCAAAuwB,GAyCA,SAAAD,IACA,IAAA7sB,EAAAqH,GAAAxc,MACA+P,EAAAoxB,GAAAnhC,MAAA+P,UAEAA,GACAoF,EAAAzR,UAAA,cACAN,MAAA,gBACAD,KAAA,IAAA4M,EAAA,OACA5M,KAAA,IAAA4M,EAAA,OACA5M,KAAA,QAAA4M,EAAA,MAAAA,EAAA,OACA5M,KAAA,SAAA4M,EAAA,MAAAA,EAAA,OAEAoF,EAAAzR,UAAA,WACAN,MAAA,gBACAD,KAAA,aAAAtG,GAAkC,YAAAA,EAAA8E,KAAA9E,EAAA8E,KAAAwC,OAAA,GAAA4L,EAAA,MAAA8xB,EAAA,EAAA9xB,EAAA,MAAA8xB,EAAA,IAClC1+B,KAAA,aAAAtG,GAAkC,YAAAA,EAAA8E,KAAA,GAAAoO,EAAA,MAAA8xB,EAAA,EAAA9xB,EAAA,MAAA8xB,EAAA,IAClC1+B,KAAA,iBAAAtG,GAAsC,YAAAA,EAAA8E,MAAA,MAAA9E,EAAA8E,KAAAoO,EAAA,MAAAA,EAAA,MAAA8xB,MACtC1+B,KAAA,kBAAAtG,GAAuC,YAAAA,EAAA8E,MAAA,MAAA9E,EAAA8E,KAAAoO,EAAA,MAAAA,EAAA,MAAA8xB,OAIvC1sB,EAAAzR,UAAA,sBACAN,MAAA,kBACAD,KAAA,UACAA,KAAA,UACAA,KAAA,cACAA,KAAA,eAIA,SAAA++B,EAAAhwB,EAAAC,GACA,OAAAD,EAAAkvB,QAAAc,SAAA,IAAAC,EAAAjwB,EAAAC,GAGA,SAAAgwB,EAAAjwB,EAAAC,GACAnS,KAAAkS,OACAlS,KAAAmS,OACAnS,KAAAs5B,MAAApnB,EAAAkvB,QACAphC,KAAAof,OAAA,EAyBA,SAAA6iB,IACA,GAAAlqB,GAAAkG,SAAwB,GAAAlG,GAAA+F,eAAA3Z,OAAA4T,GAAAkG,QAAA9Z,OAAA,OAAAs7B,UACxB,GAAAzf,EAAA,OACA,GAAAlZ,EAAAuI,MAAArP,KAAAkE,WAAA,CAEA,IAQAiwB,EAAAG,EACAzrB,EAAAC,EACAs5B,EAAAC,EACAC,EAAAC,EACAljB,EACAC,EACAkjB,EAEAC,EACAC,EAjBAxwB,EAAAlS,KACA2B,EAAAoW,GAAA3V,OAAAwS,SAAAjT,KACAjE,EAAA,eAAAqa,GAAA4qB,QAAAhhC,EAAA,UAAAA,GAAA+9B,GAAA3nB,GAAA6qB,OAAA/C,GAAAD,GACAiD,EAAArB,IAAApB,GAAA,KAAAW,GAAAp/B,GACAmhC,EAAAtB,IAAA1B,GAAA,KAAAkB,GAAAr/B,GACA23B,EAAA6H,GAAAjvB,GACAovB,EAAAhI,EAAAgI,OACAvxB,EAAAupB,EAAAvpB,UACAgzB,EAAAzB,EAAA,MACA0B,EAAA1B,EAAA,MACA2B,EAAA3B,EAAA,MACAtN,EAAAsN,EAAA,MAIA4B,EAAAL,GAAAC,GAAA/qB,GAAAorB,SAGAC,EAAAvlB,GAAA3L,GACAgL,EAAAkmB,EACAC,EAAAnB,EAAAhwB,EAAAhO,WAAA0c,cAEA,YAAAjf,EACA23B,EAAAvpB,cACAokB,EAAAqN,IAAApB,GAAA2C,EAAAK,EAAA,GAAAv6B,EAAA24B,IAAA1B,GAAAkD,EAAAI,EAAA,KACAhB,EAAAZ,IAAApB,GAAA6C,EAAA9O,EAAAmO,EAAAd,IAAA1B,GAAA9L,EAAAnrB,KAGAsrB,EAAApkB,EAAA,MACAlH,EAAAkH,EAAA,MACAqyB,EAAAryB,EAAA,MACAuyB,EAAAvyB,EAAA,OAGAukB,EAAAH,EACArrB,EAAAD,EACAw5B,EAAAD,EACAG,EAAAD,EAEA,IAAAntB,EAAAqH,GAAAtK,GACA/O,KAAA,yBAEAo9B,EAAAprB,EAAAzR,UAAA,YACAP,KAAA,SAAAm9B,GAAA3+B,IAEA,GAAAoW,GAAAkG,QACA9I,EACAzD,GAAA,kBAAA4xB,GAAA,GACA5xB,GAAA,mCAAA6xB,GAAA,OACK,CACL,IAAA5kB,EAAAnC,GAAAzE,GAAA4G,MACAjN,GAAA,gBAkGA,WACA,OAAAqG,GAAAyrB,SACA,QACAN,EAAAL,GAAAC,EACA,MAEA,QACAplC,IAAAkiC,KACAiD,IAAAT,EAAAC,EAAAhjB,EAAAwjB,EAAA1O,EAAAG,EAAAjV,EAAAwjB,GACAC,IAAAR,EAAAC,EAAAjjB,EAAAwjB,EAAAj6B,EAAAC,EAAAwW,EAAAwjB,GACAplC,EAAAmiC,GACA4D,KAEA,MAEA,QACA/lC,IAAAkiC,IAAAliC,IAAAmiC,KACAgD,EAAA,EAAAT,EAAAC,EAAAhjB,EAAwCwjB,EAAA,IAAA1O,EAAAG,EAAAjV,GACxCyjB,EAAA,EAAAR,EAAAC,EAAAjjB,EAAwCwjB,EAAA,IAAAj6B,EAAAC,EAAAwW,GACxC5hB,EAAAiiC,GACAY,EAAAp9B,KAAA,SAAAm9B,GAAAvwB,WACA0zB,KAEA,MAEA,eAEAhE,OA7HA,GACA/tB,GAAA,cA+HA,WACA,OAAAqG,GAAAyrB,SACA,QACAN,IACAT,EAAAC,EAAAQ,GAAA,EACAO,KAEA,MAEA,QACA/lC,IAAAmiC,KACAgD,EAAA,EAAAT,EAAAC,EAAmCQ,EAAA,IAAA1O,EAAAG,GACnCwO,EAAA,EAAAR,EAAAC,EAAmCO,EAAA,IAAAj6B,EAAAC,GACnCpL,EAAAkiC,GACA6D,KAEA,MAEA,QACA/lC,IAAAiiC,KACA5nB,GAAA6qB,QACAC,IAAAT,EAAAC,EAAAhjB,EAAAwjB,EAAA1O,EAAAG,EAAAjV,EAAAwjB,GACAC,IAAAR,EAAAC,EAAAjjB,EAAAwjB,EAAAj6B,EAAAC,EAAAwW,EAAAwjB,GACAplC,EAAAmiC,KAEAgD,EAAA,EAAAT,EAAAC,EAAqCQ,EAAA,IAAA1O,EAAAG,GACrCwO,EAAA,EAAAR,EAAAC,EAAqCO,EAAA,IAAAj6B,EAAAC,GACrCpL,EAAAkiC,IAEAW,EAAAp9B,KAAA,SAAAm9B,GAAA3+B,IACA8hC,KAEA,MAEA,eAEAhE,OAnKA,GACA/tB,GAAA,kBAAA4xB,GAAA,GACA5xB,GAAA,gBAAA6xB,GAAA,GAEA7kB,GAAA3G,GAAA4G,MAGA6gB,KACA3F,GAAA3nB,GACA8vB,EAAAtlC,KAAAwV,GACAmxB,EAAAr5B,QAEA,SAAAs5B,IACA,IAAAI,EAAA7lB,GAAA3L,IACAgxB,GAAAT,GAAAC,IACAh8B,KAAAyE,IAAAu4B,EAAA,GAAAxmB,EAAA,IAAAxW,KAAAyE,IAAAu4B,EAAA,GAAAxmB,EAAA,IAAAwlB,GAAA,EACAD,GAAA,GAEAvlB,EAAAwmB,EACAlB,GAAA,EACA/C,KACAgE,IAGA,SAAAA,IACA,IAAAhmC,EAKA,OAHA4hB,EAAAnC,EAAA,GAAAkmB,EAAA,GACA9jB,EAAApC,EAAA,GAAAkmB,EAAA,GAEA1lC,GACA,KAAAiiC,GACA,KAAAD,GACAmD,IAAAxjB,EAAA3Y,KAAAlD,IAAAu/B,EAAA5O,EAAAztB,KAAAnD,IAAA0/B,EAAAb,EAAA/iB,IAAAiV,EAAAH,EAAA9U,EAAAgjB,EAAAD,EAAA/iB,GACAyjB,IAAAxjB,EAAA5Y,KAAAlD,IAAAw/B,EAAAn6B,EAAAnC,KAAAnD,IAAAywB,EAAAsO,EAAAhjB,IAAAxW,EAAAD,EAAAyW,EAAAijB,EAAAD,EAAAhjB,GACA,MAEA,KAAAsgB,GACAiD,EAAA,GAAAxjB,EAAA3Y,KAAAlD,IAAAu/B,EAAA5O,EAAAztB,KAAAnD,IAAA0/B,EAAA9O,EAAA9U,IAAAiV,EAAAH,EAAA9U,EAAAgjB,EAAAD,GACAS,EAAA,IAAAxjB,EAAA3Y,KAAAlD,IAAAu/B,EAAAX,EAAA17B,KAAAnD,IAAA0/B,EAAAb,EAAA/iB,IAAAiV,EAAAH,EAAAkO,EAAAD,EAAA/iB,GACAyjB,EAAA,GAAAxjB,EAAA5Y,KAAAlD,IAAAw/B,EAAAn6B,EAAAnC,KAAAnD,IAAAywB,EAAAnrB,EAAAyW,IAAAxW,EAAAD,EAAAyW,EAAAijB,EAAAD,GACAQ,EAAA,IAAAxjB,EAAA5Y,KAAAlD,IAAAw/B,EAAAV,EAAA57B,KAAAnD,IAAAywB,EAAAsO,EAAAhjB,IAAAxW,EAAAD,EAAA05B,EAAAD,EAAAhjB,GACA,MAEA,KAAAugB,GACAgD,IAAAvO,EAAA5tB,KAAAlD,IAAAu/B,EAAAr8B,KAAAnD,IAAA0/B,EAAA9O,EAAA9U,EAAAwjB,IAAAR,EAAA37B,KAAAlD,IAAAu/B,EAAAr8B,KAAAnD,IAAA0/B,EAAAb,EAAA/iB,EAAAwjB,KACAC,IAAAh6B,EAAApC,KAAAlD,IAAAw/B,EAAAt8B,KAAAnD,IAAAywB,EAAAnrB,EAAAyW,EAAAwjB,IAAAP,EAAA77B,KAAAlD,IAAAw/B,EAAAt8B,KAAAnD,IAAAywB,EAAAsO,EAAAhjB,EAAAwjB,KAKAT,EAAA/N,IACAuO,IAAA,EACAplC,EAAA02B,IAAAiO,IAAA3kC,EACAA,EAAA62B,IAAA+N,IAAA5kC,EACAkE,KAAAk/B,IAAAN,EAAAp9B,KAAA,SAAAm9B,GAAA3+B,EAAAk/B,GAAAl/B,MAGA4gC,EAAAz5B,IACAg6B,IAAA,EACArlC,EAAAoL,IAAAy5B,IAAA7kC,EACAA,EAAAqL,IAAAy5B,IAAA9kC,EACAkE,KAAAm/B,IAAAP,EAAAp9B,KAAA,SAAAm9B,GAAA3+B,EAAAm/B,GAAAn/B,MAGA23B,EAAAvpB,cAAAupB,EAAAvpB,WACA0yB,IAAAnO,EAAAvkB,EAAA,MAAAsyB,EAAAtyB,EAAA,OACA2yB,IAAA55B,EAAAiH,EAAA,MAAAwyB,EAAAxyB,EAAA,OAEAA,EAAA,QAAAukB,GACAvkB,EAAA,QAAAjH,GACAiH,EAAA,QAAAsyB,GACAtyB,EAAA,QAAAwyB,IACAjJ,EAAAvpB,YAAAukB,EAAAxrB,IAAAu5B,EAAAE,IACAP,EAAAtlC,KAAAwV,GACAmxB,EAAAzB,SAIA,SAAA2B,IAEA,GADA/D,KACAznB,GAAAkG,QAAA,CACA,GAAAlG,GAAAkG,QAAA9Z,OAAA,OACA6b,GAAAe,aAAAf,GACAA,EAAAhB,WAAA,WAA6CgB,EAAA,MAAsB,KACnE7K,EAAAzD,GAAA,8DAEAoN,GAAA/G,GAAA4G,KAAA6jB,GACA7jB,EAAAjN,GAAA,gEAEAyD,EAAAhS,KAAA,wBACAo9B,EAAAp9B,KAAA,SAAAm9B,GAAAC,SACAjH,EAAAvpB,cAAAupB,EAAAvpB,WACAsxB,GAAAtxB,KAAAupB,EAAAvpB,UAAA,KAAAiyB,EAAAtlC,KAAAwV,IACAmxB,EAAAjT,OAyEA,SAAA0R,IACA,IAAAxI,EAAAt5B,KAAAohC,UAAiCrxB,UAAA,MAGjC,OAFAupB,EAAAgI,SAAAjyB,MAAArP,KAAAkE,WACAo1B,EAAAkI,MACAlI,EAoBA,OA7VAsI,EAAA6B,KAAA,SAAAtuB,EAAApF,GACAoF,EAAApF,UACAoF,EACAzD,GAAA,yBAAyCwwB,EAAAliC,KAAAkE,WAAA0c,cAAA5W,UACzC0H,GAAA,uCAAuDwwB,EAAAliC,KAAAkE,WAAAksB,QACvDiJ,MAAA,mBACA,IAAAnnB,EAAAlS,KACAs5B,EAAApnB,EAAAkvB,QACAiC,EAAAnB,EAAAhwB,EAAAhO,WACAy/B,EAAArK,EAAAvpB,UACA6zB,EAAApC,EAAAvB,MAAA,mBAAAlwB,IAAAV,MAAArP,KAAAkE,WAAA6L,EAAAupB,EAAAgI,QACA/kC,EAAAs0B,GAAA8S,EAAAC,GAEA,SAAAvK,EAAA57B,GACA67B,EAAAvpB,UAAA,IAAAtS,GAAA4jC,GAAAuC,GAAA,KAAArnC,EAAAkB,GACAukC,EAAAtlC,KAAAwV,GACAmxB,EAAAzB,QAGA,OAAA+B,GAAAC,EAAAvK,IAAA,KAGAlkB,EACArE,KAAA,WACA,IACAqB,EAAAjO,UACAo1B,EAFAt5B,KAEAohC,QACAwC,EAAApC,EAAAvB,MAAA,mBAAAlwB,IAAAV,MAHArP,KAGAmS,GAAApC,EAAAupB,EAAAgI,QACA+B,EAAAnB,EAJAliC,KAIAmS,GAAAyO,cAEAiZ,GANA75B,MAOAs5B,EAAAvpB,UAAA,MAAA6zB,GAAAvC,GAAAuC,GAAA,KAAAA,EACA5B,EAAAtlC,KARAsD,MASAqjC,EAAAr5B,QAAA43B,QAAAxR,SA8CA+R,EAAAhkC,WACAyiB,YAAA,WAEA,OADA,KAAA5gB,KAAAof,SAAApf,KAAAs5B,MAAA4I,QAAAliC,UAAA6jC,UAAA,GACA7jC,MAEAgK,MAAA,WAEA,OADAhK,KAAA6jC,WAAA7jC,KAAA6jC,UAAA,EAAA7jC,KAAAqjC,KAAA,UACArjC,MAEA4hC,MAAA,WAEA,OADA5hC,KAAAqjC,KAAA,SACArjC,MAEAowB,IAAA,WAEA,OADA,KAAApwB,KAAAof,gBAAApf,KAAAs5B,MAAA4I,QAAAliC,KAAAqjC,KAAA,QACArjC,MAEAqjC,KAAA,SAAA1hC,GACAuX,GAAA,IAAAqmB,GAAAqC,EAAAjgC,EAAA6/B,EAAAtB,OAAAlgC,KAAAs5B,MAAAvpB,YAAAqQ,EAAA/Q,MAAA+Q,GAAAze,EAAA3B,KAAAkS,KAAAlS,KAAAmS,SA2OAyvB,EAAAN,OAAA,SAAAr1B,GACA,OAAA/H,UAAAC,QAAAm9B,EAAA,mBAAAr1B,IAAAqzB,MAAArzB,EAAA,OAAAA,EAAA,SAAAA,EAAA,OAAAA,EAAA,SAAA21B,GAAAN,GAGAM,EAAA96B,OAAA,SAAAmF,GACA,OAAA/H,UAAAC,QAAA2C,EAAA,mBAAAmF,IAAAqzB,KAAArzB,GAAA21B,GAAA96B,GAGA86B,EAAAC,WAAA,SAAA51B,GACA,OAAA/H,UAAAC,QAAA09B,GAAA51B,EAAA21B,GAAAC,GAGAD,EAAAlwB,GAAA,WACA,IAAAlU,EAAA4iB,EAAA1O,GAAArC,MAAA+Q,EAAAlc,WACA,OAAA1G,IAAA4iB,EAAAwhB,EAAApkC,GAGAokC,ECzhBA,IAAAjU,GAAAjnB,KAAAinB,IACAC,GAAAlnB,KAAAknB,IACAkW,GAAAp9B,KAAAqmB,GACAgX,GAAAD,GAAA,EACAE,GAAA,EAAAF,GACAG,GAAAv9B,KAAAlD,ICOA,IAAA0gC,GAAA,WACA,IAAAC,EAAA,EACAC,EAAA,KACAC,EAAA,KACAC,EAAA,KAEA,SAAAC,EAAA92B,GACA,IAOAhJ,EACAhD,EACAkK,EACA0T,EACA9iB,EACAsQ,EAZA7O,EAAAyP,EAAAtJ,OACAqgC,KACAC,EAAA16B,EAAA/L,GACA0mC,KACAC,KACA7qB,EAAA6qB,EAAA7qB,OAAA,IAAA/Y,MAAA/C,GACAmc,EAAA,IAAApZ,MAAA/C,KASkB,IAAlByG,EAAA,EAAAlI,GAAA,IAAkBA,EAAAyB,GAAA,CACE,IAApByD,EAAA,EAAAoL,GAAA,IAAoBA,EAAA7O,GACpByD,GAAAgM,EAAAlR,GAAAsQ,GAEA23B,EAAAzhC,KAAAtB,GACAijC,EAAA3hC,KAAAgH,EAAA/L,IACAyG,GAAAhD,EAuBkB,IAnBlB2iC,GAAAK,EAAAz9B,KAAA,SAAAR,EAAAC,GACA,OAAA29B,EAAAI,EAAAh+B,GAAAg+B,EAAA/9B,MAIA49B,GAAAK,EAAA9hC,QAAA,SAAA/F,EAAAN,GACAM,EAAAmK,KAAA,SAAAR,EAAAC,GACA,OAAA49B,EAAA52B,EAAAlR,GAAAiK,GAAAiH,EAAAlR,GAAAkK,QAQA4Y,GADA5a,EAAAw/B,GAAA,EAAAD,GAAAG,EAAAnmC,GAAAyG,GACA0/B,EAAAH,GAAAhmC,EAIAyD,EAAA,EAAAlF,GAAA,IAAkBA,EAAAyB,GAAA,CACG,IAArB2N,EAAAlK,EAAAoL,GAAA,IAAqBA,EAAA7O,GAAA,CACrB,IAAA4mC,EAAAH,EAAAloC,GACAsoC,EAAAH,EAAAE,GAAA/3B,GACApD,EAAAgE,EAAAm3B,GAAAC,GACAC,EAAArjC,EACAsjC,EAAAtjC,GAAAgI,EAAAhF,EACA0V,EAAA0qB,EAAA7mC,EAAA4mC,IACAxsB,MAAAwsB,EACAI,SAAAH,EACAI,WAAAH,EACAI,SAAAH,EACAvnC,MAAAiM,GAGAqQ,EAAA8qB,IACAxsB,MAAAwsB,EACAK,WAAAt5B,EACAu5B,SAAAzjC,EACAjE,MAAAgnC,EAAAI,IAEAnjC,GAAA4d,EAIW,IAAX9iB,GAAA,IAAWA,EAAAyB,GACK,IAAhB6O,EAAAtQ,EAAA,IAAgBsQ,EAAA7O,GAAA,CAChB,IAAA6e,EAAA1C,EAAAtN,EAAA7O,EAAAzB,GACA6F,EAAA+X,EAAA5d,EAAAyB,EAAA6O,IACAgQ,EAAArf,OAAA4E,EAAA5E,QACAmnC,EAAA5hC,KAAA8Z,EAAArf,MAAA4E,EAAA5E,OACiBqf,OAAAza,SAAAya,IACAA,SAAAza,WAKjB,OAAAkiC,EAAAK,EAAA39B,KAAAs9B,GAAAK,EAmBA,OAhBAJ,EAAAJ,SAAA,SAAAl4B,GACA,OAAA/H,UAAAC,QAAAggC,EAAAF,GAAA,EAAAh4B,GAAAs4B,GAAAJ,GAGAI,EAAAH,WAAA,SAAAn4B,GACA,OAAA/H,UAAAC,QAAAigC,EAAAn4B,EAAAs4B,GAAAH,GAGAG,EAAAF,cAAA,SAAAp4B,GACA,OAAA/H,UAAAC,QAAAkgC,EAAAp4B,EAAAs4B,GAAAF,GAGAE,EAAAD,WAAA,SAAAr4B,GACA,OAAA/H,UAAAC,QAAA,MAAA8H,EAAAq4B,EAAA,MAAAA,EAjHA,SAAA98B,GACA,gBAAAhB,EAAAC,GACA,OAAAe,EACAhB,EAAAqW,OAAArf,MAAAgJ,EAAApE,OAAA5E,MACAiJ,EAAAoW,OAAArf,MAAAiJ,EAAArE,OAAA5E,QA6GA2nC,CAAAl5B,QAAAs4B,GAAAD,KAAAr4B,GAGAs4B,GCvHAa,GAAArkC,MAAA5C,UAAAyL,MCAAy7B,GAAA,SAAA5jC,GACA,kBACA,OAAAA,ICFA6jC,GAAA5+B,KAAAqmB,GACAwY,GAAA,EAAAD,GAEAE,GAAAD,GADA,KAGA,SAAAE,KACAzlC,KAAA0lC,IAAA1lC,KAAA2lC,IACA3lC,KAAA4lC,IAAA5lC,KAAA6lC,IAAA,KACA7lC,KAAAiM,EAAA,GAGA,SAAA65B,KACA,WAAAL,GAGAA,GAAAtnC,UAAA2nC,GAAA3nC,WACAsT,YAAAg0B,GACAM,OAAA,SAAAtkC,EAAAC,GACA1B,KAAAiM,GAAA,KAAAjM,KAAA0lC,IAAA1lC,KAAA4lC,KAAAnkC,GAAA,KAAAzB,KAAA2lC,IAAA3lC,KAAA6lC,KAAAnkC,IAEAskC,UAAA,WACA,OAAAhmC,KAAA4lC,MACA5lC,KAAA4lC,IAAA5lC,KAAA0lC,IAAA1lC,KAAA6lC,IAAA7lC,KAAA2lC,IACA3lC,KAAAiM,GAAA,MAGAg6B,OAAA,SAAAxkC,EAAAC,GACA1B,KAAAiM,GAAA,KAAAjM,KAAA4lC,KAAAnkC,GAAA,KAAAzB,KAAA6lC,KAAAnkC,IAEAwkC,iBAAA,SAAAlgC,EAAAE,EAAAzE,EAAAC,GACA1B,KAAAiM,GAAA,MAAAjG,EAAA,MAAAE,EAAA,KAAAlG,KAAA4lC,KAAAnkC,GAAA,KAAAzB,KAAA6lC,KAAAnkC,IAEAykC,cAAA,SAAAngC,EAAAE,EAAAD,EAAAE,EAAA1E,EAAAC,GACA1B,KAAAiM,GAAA,MAAAjG,EAAA,MAAAE,EAAA,MAAAD,EAAA,MAAAE,EAAA,KAAAnG,KAAA4lC,KAAAnkC,GAAA,KAAAzB,KAAA6lC,KAAAnkC,IAEA0kC,MAAA,SAAApgC,EAAAE,EAAAD,EAAAE,EAAA9I,GACA2I,KAAAE,KAAAD,KAAAE,KAAA9I,KACA,IAAAsO,EAAA3L,KAAA4lC,IACAS,EAAArmC,KAAA6lC,IACAS,EAAArgC,EAAAD,EACAugC,EAAApgC,EAAAD,EACAsgC,EAAA76B,EAAA3F,EACAygC,EAAAJ,EAAAngC,EACAwgC,EAAAF,IAAAC,IAGA,GAAAppC,EAAA,YAAAiU,MAAA,oBAAAjU,GAGA,UAAA2C,KAAA4lC,IACA5lC,KAAAiM,GAAA,KAAAjM,KAAA4lC,IAAA5/B,GAAA,KAAAhG,KAAA6lC,IAAA3/B,QAIA,GAAAwgC,EApDA,KAyDA,GAAAhgC,KAAAyE,IAAAs7B,EAAAH,EAAAC,EAAAC,GAzDA,MAyDAnpC,EAKA,CACA,IAAAspC,EAAA1gC,EAAA0F,EACAi7B,EAAAzgC,EAAAkgC,EACAQ,EAAAP,IAAAC,IACAO,EAAAH,IAAAC,IACAG,EAAArgC,KAAAC,KAAAkgC,GACAG,EAAAtgC,KAAAC,KAAA+/B,GACAlqC,EAAAa,EAAAqJ,KAAAkkB,KAAA0a,GAAA5+B,KAAAugC,MAAAJ,EAAAH,EAAAI,IAAA,EAAAC,EAAAC,KAAA,GACAE,EAAA1qC,EAAAwqC,EACAG,EAAA3qC,EAAAuqC,EAGArgC,KAAAyE,IAAA+7B,EAAA,GA1EA,OA2EAlnC,KAAAiM,GAAA,KAAAjG,EAAAkhC,EAAAV,GAAA,KAAAtgC,EAAAghC,EAAAT,IAGAzmC,KAAAiM,GAAA,IAAA5O,EAAA,IAAAA,EAAA,WAAAopC,EAAAE,EAAAH,EAAAI,GAAA,KAAA5mC,KAAA4lC,IAAA5/B,EAAAmhC,EAAAb,GAAA,KAAAtmC,KAAA6lC,IAAA3/B,EAAAihC,EAAAZ,QApBAvmC,KAAAiM,GAAA,KAAAjM,KAAA4lC,IAAA5/B,GAAA,KAAAhG,KAAA6lC,IAAA3/B,UAuBAkhC,IAAA,SAAA3lC,EAAAC,EAAArE,EAAAynC,EAAAC,EAAAsC,GACA5lC,KAAAC,KACA,IAAA2d,GADAhiB,MACAqJ,KAAAinB,IAAAmX,GACAxlB,EAAAjiB,EAAAqJ,KAAAknB,IAAAkX,GACAn5B,EAAAlK,EAAA4d,EACAgnB,EAAA3kC,EAAA4d,EACAgoB,EAAA,EAAAD,EACAE,EAAAF,EAAAvC,EAAAC,IAAAD,EAGA,GAAAznC,EAAA,YAAAiU,MAAA,oBAAAjU,GAGA,OAAA2C,KAAA4lC,IACA5lC,KAAAiM,GAAA,IAAAN,EAAA,IAAA06B,GAIA3/B,KAAAyE,IAAAnL,KAAA4lC,IAAAj6B,GAnGA,MAmGAjF,KAAAyE,IAAAnL,KAAA6lC,IAAAQ,GAnGA,QAoGArmC,KAAAiM,GAAA,IAAAN,EAAA,IAAA06B,GAIAhpC,IAGAkqC,EAAA,IAAAA,IAAAhC,OAGAgC,EAAA/B,GACAxlC,KAAAiM,GAAA,IAAA5O,EAAA,IAAAA,EAAA,QAAAiqC,EAAA,KAAA7lC,EAAA4d,GAAA,KAAA3d,EAAA4d,GAAA,IAAAjiB,EAAA,IAAAA,EAAA,QAAAiqC,EAAA,KAAAtnC,KAAA4lC,IAAAj6B,GAAA,KAAA3L,KAAA6lC,IAAAQ,GAIAkB,EAnHA,OAoHAvnC,KAAAiM,GAAA,IAAA5O,EAAA,IAAAA,EAAA,SAAAkqC,GAAAjC,IAAA,IAAAgC,EAAA,KAAAtnC,KAAA4lC,IAAAnkC,EAAApE,EAAAqJ,KAAAinB,IAAAoX,IAAA,KAAA/kC,KAAA6lC,IAAAnkC,EAAArE,EAAAqJ,KAAAknB,IAAAmX,OAGAvnB,KAAA,SAAA/b,EAAAC,EAAA8+B,EAAAnU,GACArsB,KAAAiM,GAAA,KAAAjM,KAAA0lC,IAAA1lC,KAAA4lC,KAAAnkC,GAAA,KAAAzB,KAAA2lC,IAAA3lC,KAAA6lC,KAAAnkC,GAAA,MAAA8+B,EAAA,MAAAnU,EAAA,KAAAmU,EAAA,KAEA5jB,SAAA,WACA,OAAA5c,KAAAiM,IAIA,IAAAu7B,GAAA,GC5HA,SAAAC,GAAA5qC,GACA,OAAAA,EAAAggB,OAGA,SAAA6qB,GAAA7qC,GACA,OAAAA,EAAAuF,OAGA,SAAAulC,GAAA9qC,GACA,OAAAA,EAAAiH,OAGA,SAAA8jC,GAAA/qC,GACA,OAAAA,EAAAooC,WAGA,SAAA4C,GAAAhrC,GACA,OAAAA,EAAAqoC,SAGA,IAAA4C,GAAA,WACA,IAAAjrB,EAAA4qB,GACArlC,EAAAslC,GACA5jC,EAAA6jC,GACA1C,EAAA2C,GACA1C,EAAA2C,GACAz4B,EAAA,KAEA,SAAA24B,IACA,IAAAC,EACAC,EAAA7C,GAAA1oC,KAAAwH,WACA5F,EAAAue,EAAAxN,MAAArP,KAAAioC,GACAxqC,EAAA2E,EAAAiN,MAAArP,KAAAioC,GACAC,GAAApkC,EAAAuL,MAAArP,MAAAioC,EAAA,GAAA3pC,EAAA2pC,IACAE,EAAAlD,EAAA51B,MAAArP,KAAAioC,GAAAlE,GACAqE,EAAAlD,EAAA71B,MAAArP,KAAAioC,GAAAlE,GACAsE,EAAAH,EAAAva,GAAAwa,GACAG,EAAAJ,EAAAta,GAAAua,GACAI,GAAAzkC,EAAAuL,MAAArP,MAAAioC,EAAA,GAAAxqC,EAAAwqC,IACAO,EAAAvD,EAAA51B,MAAArP,KAAAioC,GAAAlE,GACA0E,EAAAvD,EAAA71B,MAAArP,KAAAioC,GAAAlE,GAaA,GAXA30B,MAAA44B,EAAAR,MAEAp4B,EAAA22B,OAAAsC,EAAAC,GACAl5B,EAAAg4B,IAAA,IAAAc,EAAAC,EAAAC,GACAD,IAAAK,GAAAJ,IAAAK,IACAr5B,EAAA82B,iBAAA,IAAAqC,EAAA5a,GAAA6a,GAAAD,EAAA3a,GAAA4a,IACAp5B,EAAAg4B,IAAA,IAAAmB,EAAAC,EAAAC,IAEAr5B,EAAA82B,iBAAA,IAAAmC,EAAAC,GACAl5B,EAAA42B,YAEAgC,EAAA,OAAA54B,EAAA,KAAA44B,EAAA,SA2BA,OAxBAD,EAAAjkC,OAAA,SAAAmI,GACA,OAAA/H,UAAAC,QAAAL,EAAA,mBAAAmI,IAAAo5B,IAAAp5B,GAAA87B,GAAAjkC,GAGAikC,EAAA9C,WAAA,SAAAh5B,GACA,OAAA/H,UAAAC,QAAA8gC,EAAA,mBAAAh5B,IAAAo5B,IAAAp5B,GAAA87B,GAAA9C,GAGA8C,EAAA7C,SAAA,SAAAj5B,GACA,OAAA/H,UAAAC,QAAA+gC,EAAA,mBAAAj5B,IAAAo5B,IAAAp5B,GAAA87B,GAAA7C,GAGA6C,EAAAlrB,OAAA,SAAA5Q,GACA,OAAA/H,UAAAC,QAAA0Y,EAAA5Q,EAAA87B,GAAAlrB,GAGAkrB,EAAA3lC,OAAA,SAAA6J,GACA,OAAA/H,UAAAC,QAAA/B,EAAA6J,EAAA87B,GAAA3lC,GAGA2lC,EAAA34B,QAAA,SAAAnD,GACA,OAAA/H,UAAAC,QAAAiL,EAAA,MAAAnD,EAAA,KAAAA,EAAA87B,GAAA34B,GAGA24B,GCnFA,SAAAW,MAkDA,SAAAC,GAAA1qC,EAAAwJ,GACA,IAAAlH,EAAA,IAAAmoC,GAGA,GAAAzqC,aAAAyqC,GAAAzqC,EAAA6S,KAAA,SAAAtT,EAAAM,GAA+DyC,EAAAiR,IAAA1T,EAAAN,UAG/D,GAAAuD,MAAAC,QAAA/C,GAAA,CACA,IAEAjB,EAFAT,GAAA,EACAyB,EAAAC,EAAAkG,OAGA,SAAAsD,EAAA,OAAAlL,EAAAyB,GAAAuC,EAAAiR,IAAAjV,EAAA0B,EAAA1B,SACA,OAAAA,EAAAyB,GAAAuC,EAAAiR,IAAA/J,EAAAzK,EAAAiB,EAAA1B,KAAA0B,GAAAjB,QAIA,GAAAiB,EAAA,QAAAH,KAAAG,EAAAsC,EAAAiR,IAAA1T,EAAAG,EAAAH,IAEA,OAAAyC,EAnEAmoC,GAAAvqC,UAAAwqC,GAAAxqC,WACAsT,YAAAi3B,GACAE,IAAA,SAAA9qC,GACA,MAPA,IAOAA,KAAAkC,MAEA5C,IAAA,SAAAU,GACA,OAAAkC,KAVA,IAUAlC,IAEA0T,IAAA,SAAA1T,EAAAN,GAEA,OADAwC,KAbA,IAaAlC,GAAAN,EACAwC,MAEA6Q,OAAA,SAAA/S,GACA,IAAAI,EAjBA,IAiBAJ,EACA,OAAAI,KAAA8B,kBAAA9B,IAEA2qC,MAAA,WACA,QAAA3qC,KAAA8B,KArBA,MAqBA9B,EAAA,WAAA8B,KAAA9B,IAEA4qC,KAAA,WACA,IAAAA,KACA,QAAA5qC,KAAA8B,KAzBA,MAyBA9B,EAAA,IAAA4qC,EAAA/lC,KAAA7E,EAAA0L,MAAA,IACA,OAAAk/B,GAEA//B,OAAA,WACA,IAAAA,KACA,QAAA7K,KAAA8B,KA9BA,MA8BA9B,EAAA,IAAA6K,EAAAhG,KAAA/C,KAAA9B,IACA,OAAA6K,GAEA3H,QAAA,WACA,IAAAA,KACA,QAAAlD,KAAA8B,KAnCA,MAmCA9B,EAAA,IAAAkD,EAAA2B,MAAyEjF,IAAAI,EAAA0L,MAAA,GAAApM,MAAAwC,KAAA9B,KACzE,OAAAkD,GAEAmZ,KAAA,WACA,IAAAA,EAAA,EACA,QAAArc,KAAA8B,KAxCA,MAwCA9B,EAAA,MAAAqc,EACA,OAAAA,GAEAkB,MAAA,WACA,QAAAvd,KAAA8B,KAAA,GA5CA,MA4CA9B,EAAA,YACA,UAEA4S,KAAA,SAAArJ,GACA,QAAAvJ,KAAA8B,KAhDA,MAgDA9B,EAAA,IAAAuJ,EAAAzH,KAAA9B,KAAA0L,MAAA,GAAA5J,QA0BA,IAAA+oC,GAAA,GCxEAC,GAAA,WACA,IAEAC,EACAC,EACAC,EAJAL,KACAM,KAKA,SAAA/5B,EAAAhH,EAAAghC,EAAAC,EAAAC,GACA,GAAAF,GAAAP,EAAA3kC,OAEA,OADA,MAAA8kC,GAAA5gC,EAAArB,KAAAiiC,GACA,MAAAC,IAAA7gC,KAYA,IATA,IAGAmN,EACAhY,EAEAuL,EANAxM,GAAA,EACAyB,EAAAqK,EAAAlE,OACArG,EAAAgrC,EAAAO,KAGAG,EAAAT,KAEAjoC,EAAAwoC,MAEA/sC,EAAAyB,IACA+K,EAAAygC,EAAApsC,IAAAoY,EAAA1X,EAAAN,EAAA6K,EAAA9L,IAAA,KACAwM,EAAAhG,KAAAvF,GAEAgsC,EAAAh4B,IAAAgE,GAAAhY,IAQA,OAJAgsC,EAAA14B,KAAA,SAAA/H,EAAAjL,GACAyrC,EAAAzoC,EAAAhD,EAAAuR,EAAAtG,EAAAsgC,EAAAC,EAAAC,MAGAzoC,EAWA,OAAAqoC,GACAlrC,OAAA,SAAAoK,GAA6B,OAAAgH,EAAAhH,EAAA,EAAAohC,GAAAC,KAC7BnpC,IAAA,SAAA8H,GAA0B,OAAAgH,EAAAhH,EAAA,EAAAshC,GAAAC,KAC1BxoC,QAAA,SAAAiH,GAA8B,OAX9B,SAAAjH,EAAAb,EAAA8oC,GACA,KAAAA,EAAAP,EAAA3kC,OAAA,OAAA5D,EACA,IAAA8H,EAAAwhC,EAAAT,EAAAC,EAAA,GAGA,OAFA,MAAAH,GAAAG,GAAAP,EAAA3kC,OAAAkE,EAAA9H,EAAAa,WACAiH,KAAA9H,EAAAuQ,KAAA,SAAArH,EAAAhF,GAA8C4D,EAAAtF,MAAajF,IAAA2G,EAAAsE,OAAA3H,EAAAqI,EAAA4/B,QAC3D,MAAAQ,EAAAxhC,EAAArB,KAAA,SAAAR,EAAAC,GAAwD,OAAAojC,EAAArjC,EAAA1I,IAAA2I,EAAA3I,OAAgCuK,EAM1DjH,CAAAiO,EAAAhH,EAAA,EAAAshC,GAAAC,IAAA,IAC9B9rC,IAAA,SAAAjB,GAAoC,OAAdisC,EAAA/lC,KAAAlG,GAAcssC,GACpCC,SAAA,SAAAl5B,GAAkE,OAAnCk5B,EAAAN,EAAA3kC,OAAA,GAAA+L,EAAmCi5B,GAClEF,WAAA,SAAA/4B,GAAqD,OAApB+4B,EAAA/4B,EAAoBi5B,GACrDD,OAAA,SAAAzhC,GAAqC,OAAZyhC,EAAAzhC,EAAY0hC,KAIrC,SAAAM,KACA,SAGA,SAAAC,GAAAzrC,EAAAH,EAAAN,GACAS,EAAAH,GAAAN,EAGA,SAAAmsC,KACA,OAAAZ,KAGA,SAAAa,GAAArpC,EAAAzC,EAAAN,GACA+C,EAAAiR,IAAA1T,EAAAN,GCrEA,SAAAssC,MAEA,IAAAC,GAAAhB,GAAA5qC,UAkBA,SAAA6rC,GAAA/rC,EAAAwJ,GACA,IAAA+J,EAAA,IAAAs4B,GAGA,GAAA7rC,aAAA6rC,GAAA7rC,EAAA6S,KAAA,SAAAtT,GAA0DgU,EAAAkF,IAAAlZ,UAG1D,GAAAS,EAAA,CACA,IAAA1B,GAAA,EAAAyB,EAAAC,EAAAkG,OACA,SAAAsD,EAAA,OAAAlL,EAAAyB,GAAAwT,EAAAkF,IAAAzY,EAAA1B,SACA,OAAAA,EAAAyB,GAAAwT,EAAAkF,IAAAjP,EAAAxJ,EAAA1B,KAAA0B,IAGA,OAAAuT,EA7BAs4B,GAAA3rC,UAAA6rC,GAAA7rC,WACAsT,YAAAq4B,GACAlB,IAAAmB,GAAAnB,IACAlyB,IAAA,SAAAlZ,GAGA,OADAwC,KFXA,KEUAxC,GAAA,KACAA,EACAwC,MAEA6Q,OAAAk5B,GAAAl5B,OACAg4B,MAAAkB,GAAAlB,MACA9/B,OAAAghC,GAAAjB,KACAvuB,KAAAwvB,GAAAxvB,KACAkB,MAAAsuB,GAAAtuB,MACA3K,KAAAi5B,GAAAj5B,MAmBA,IAAAm5B,GAAA,GCtCAC,GAAA,SAAA3pC,GACA,IAAAuoC,KACA,QAAAhrC,KAAAyC,EAAAuoC,EAAA/lC,KAAAjF,GACA,OAAAgrC,GCHAqB,GAAA,SAAA5pC,GACA,IAAAwI,KACA,QAAAjL,KAAAyC,EAAAwI,EAAAhG,KAAAxC,EAAAzC,IACA,OAAAiL,GCHAqhC,GAAA,SAAA7pC,GACA,IAAAa,KACA,QAAAtD,KAAAyC,EAAAa,EAAA2B,MAAqCjF,MAAAN,MAAA+C,EAAAzC,KACrC,OAAAsD,GCDAipC,GAFAtpC,MAAA5C,UAEAyL,MCFA0gC,GAAA,SAAA9jC,EAAAC,GACA,OAAAD,EAAAC,GCDA8jC,GAAA,SAAAC,GAEA,IADA,IAAAjuC,EAAA,EAAAyB,EAAAwsC,EAAArmC,OAAAsmC,EAAAD,EAAAxsC,EAAA,MAAAwsC,EAAA,MAAAA,EAAAxsC,EAAA,MAAAwsC,EAAA,QACAjuC,EAAAyB,GAAAysC,GAAAD,EAAAjuC,EAAA,MAAAiuC,EAAAjuC,GAAA,GAAAiuC,EAAAjuC,EAAA,MAAAiuC,EAAAjuC,GAAA,GACA,OAAAkuC,GCHAC,GAAA,SAAAjpC,GACA,kBACA,OAAAA,ICFAsV,GAAA,SAAAyzB,EAAAG,GAEA,IADA,IAAA/tC,EAAAL,GAAA,EAAAyB,EAAA2sC,EAAAxmC,SACA5H,EAAAyB,GAAA,GAAApB,EAAAguC,GAAAJ,EAAAG,EAAApuC,IAAA,OAAAK,EACA,UAGA,SAAAguC,GAAAJ,EAAAttB,GAEA,IADA,IAAAzb,EAAAyb,EAAA,GAAAxb,EAAAwb,EAAA,GAAAnG,GAAA,EACAxa,EAAA,EAAAyB,EAAAwsC,EAAArmC,OAAA0I,EAAA7O,EAAA,EAA6CzB,EAAAyB,EAAO6O,EAAAtQ,IAAA,CACpD,IAAAwgC,EAAAyN,EAAAjuC,GAAA4Q,EAAA4vB,EAAA,GAAA8N,EAAA9N,EAAA,GAAA+N,EAAAN,EAAA39B,GAAAO,EAAA09B,EAAA,GAAAC,EAAAD,EAAA,GACA,GAAAE,GAAAjO,EAAA+N,EAAA5tB,GAAA,SACA2tB,EAAAnpC,GAAAqpC,EAAArpC,GAAAD,GAAA2L,EAAAD,IAAAzL,EAAAmpC,IAAAE,EAAAF,GAAA19B,IAAA4J,MAEA,OAAAA,EAGA,SAAAi0B,GAAAxkC,EAAAC,EAAA7J,GACA,IAAAL,EAAQ,OAGR,SAAAiK,EAAAC,EAAA7J,GACA,OAAA6J,EAAA,GAAAD,EAAA,KAAA5J,EAAA,GAAA4J,EAAA,MAAA5J,EAAA,GAAA4J,EAAA,KAAAC,EAAA,GAAAD,EAAA,IAJQykC,CAAAzkC,EAAAC,EAAA7J,IAOR,SAAAyB,EAAAyzB,EAAAz0B,GACA,OAAAgB,GAAAyzB,MAAAz0B,MAAAy0B,MAAAzzB,EARQ6sC,CAAA1kC,EAAAjK,IAAAiK,EAAA,KAAAC,EAAA,KAAA7J,EAAAL,GAAAkK,EAAAlK,ICjBR,IAAA4uC,GAAA,aCQAC,UAEA,mBACA,oBACA,mBACA,mBACA,oCACA,mBACA,kBACA,kBACA,mBACA,oCACA,mBACA,mBACA,oBACA,oBAIAC,GAAA,WACA,IAAAhsB,EAAA,EACAC,EAAA,EACA9T,EAAAH,EACAigC,EAAAC,EAEA,SAAAC,EAAAziC,GACA,IAAA6C,EAAAJ,EAAAzC,GAGA,GAAAhI,MAAAC,QAAA4K,GAKAA,IAAAhC,QAAA5C,KAAAsjC,QALA,CACA,IAAAhnC,EAAAoG,EAAAX,GAAAiB,EAAA1G,EAAA,GAAA2G,EAAA3G,EAAA,GACAsI,EAAAX,EAAAjB,EAAAC,EAAA2B,GACAA,EAAA7B,EAAArD,KAAAkE,MAAAZ,EAAA4B,KAAAlF,KAAAkE,MAAAX,EAAA2B,QAKA,OAAAA,EAAArL,IAAA,SAAA/C,GACA,OAAAiuC,EAAA1iC,EAAAvL,KAMA,SAAAiuC,EAAA1iC,EAAAvL,GACA,IAAAkuC,KACAC,KAiBA,OASA,SAAA5iC,EAAAvL,EAAAqF,GACA,IAEApB,EAAAC,EAAAk2B,EAAA1I,EAAAK,EAAAhC,EAFAqe,EAAA,IAAA7qC,MACA8qC,EAAA,IAAA9qC,MAIAU,EAAAC,GAAA,EACAwtB,EAAAnmB,EAAA,IAAAvL,EACA4tC,GAAAlc,GAAA,GAAAtsB,QAAAkpC,GACA,OAAArqC,EAAA4d,EAAA,GACAuY,EAAA1I,IAAAnmB,EAAAtH,EAAA,IAAAjE,EACA4tC,GAAAxT,EAAA1I,GAAA,GAAAtsB,QAAAkpC,GAEAV,GAAAlc,GAAA,GAAAtsB,QAAAkpC,GAGA,OAAApqC,EAAA4d,EAAA,IAKA,IAJA7d,GAAA,EACAytB,EAAAnmB,EAAArH,EAAA2d,MAAA7hB,EACA+xB,EAAAxmB,EAAArH,EAAA2d,IAAA7hB,EACA4tC,GAAAlc,GAAA,EAAAK,GAAA,GAAA3sB,QAAAkpC,KACArqC,EAAA4d,EAAA,GACAuY,EAAA1I,IAAAnmB,EAAArH,EAAA2d,IAAA5d,EAAA,IAAAjE,EACA+vB,EAAAgC,IAAAxmB,EAAArH,EAAA2d,EAAA5d,EAAA,IAAAjE,EACA4tC,GAAAxT,EAAA1I,GAAA,EAAAK,GAAA,EAAAhC,GAAA,GAAA3qB,QAAAkpC,GAEAV,GAAAlc,EAAAK,GAAA,GAAA3sB,QAAAkpC,GAIArqC,GAAA,EACA8tB,EAAAxmB,EAAArH,EAAA2d,IAAA7hB,EACA4tC,GAAA7b,GAAA,GAAA3sB,QAAAkpC,GACA,OAAArqC,EAAA4d,EAAA,GACAkO,EAAAgC,IAAAxmB,EAAArH,EAAA2d,EAAA5d,EAAA,IAAAjE,EACA4tC,GAAA7b,GAAA,EAAAhC,GAAA,GAAA3qB,QAAAkpC,GAIA,SAAAA,EAAAx7B,GACA,IAIA7I,EAAAskB,EAJA/hB,GAAAsG,EAAA,MAAA7O,EAAA6O,EAAA,MAAA5O,GACA0uB,GAAA9f,EAAA,MAAA7O,EAAA6O,EAAA,MAAA5O,GACAqqC,EAAA3zB,EAAApO,GACAgiC,EAAA5zB,EAAAgY,IAEA3oB,EAAAokC,EAAAE,KACAhgB,EAAA6f,EAAAI,YACAH,EAAApkC,EAAA2oB,YACAwb,EAAA7f,EAAA/hB,OACAvC,IAAAskB,GACAtkB,EAAA+iC,KAAAznC,KAAAqtB,GACAvtB,EAAA4E,EAAA+iC,OAEAoB,EAAAnkC,EAAAuC,OAAA6hC,EAAA9f,EAAAqE,MAA+DpmB,MAAAvC,EAAAuC,MAAAomB,IAAArE,EAAAqE,IAAAoa,KAAA/iC,EAAA+iC,KAAAxoC,OAAA+pB,EAAAye,gBAG/DqB,EAAApkC,EAAA2oB,KACA3oB,EAAA+iC,KAAAznC,KAAAqtB,GACAyb,EAAApkC,EAAA2oB,IAAA4b,GAAAvkC,IAEOA,EAAAmkC,EAAAI,KACPjgB,EAAA8f,EAAAE,YACAH,EAAAnkC,EAAAuC,cACA6hC,EAAA9f,EAAAqE,KACA3oB,IAAAskB,GACAtkB,EAAA+iC,KAAAznC,KAAAqtB,GACAvtB,EAAA4E,EAAA+iC,OAEAoB,EAAA7f,EAAA/hB,OAAA6hC,EAAApkC,EAAA2oB,MAA+DpmB,MAAA+hB,EAAA/hB,MAAAomB,IAAA3oB,EAAA2oB,IAAAoa,KAAAze,EAAAye,KAAAxoC,OAAAyF,EAAA+iC,gBAG/DoB,EAAAnkC,EAAAuC,OACAvC,EAAA+iC,KAAAyB,QAAAjiC,GACA4hC,EAAAnkC,EAAAuC,MAAA+hC,GAAAtkC,GAGAmkC,EAAAG,GAAAF,EAAAG,IAAiEhiC,MAAA+hC,EAAA3b,IAAA4b,EAAAxB,MAAAxgC,EAAAomB,IAvCjEgb,GAAA7b,GAAA,GAAA3sB,QAAAkpC,GA7DAI,CAAAnjC,EAAAvL,EAAA,SAAAgtC,GACAc,EAAAd,EAAAzhC,EAAAvL,GACA+sC,GAAAC,GAAA,EAAAkB,EAAA3oC,MAAAynC,IACAmB,EAAA5oC,KAAAynC,KAGAmB,EAAA/oC,QAAA,SAAA+nC,GACA,QAAAwB,EAAA5vC,EAAA,EAAAyB,EAAA0tC,EAAAvnC,OAAmD5H,EAAAyB,IAAOzB,EAC1D,QAAAwa,IAAAo1B,EAAAT,EAAAnvC,IAAA,GAAAouC,GAEA,YADAwB,EAAAppC,KAAA4nC,MAOAhpC,KAAA,eACAnE,QACA4uC,YAAAV,GAuFA,SAAAtzB,EAAA8E,GACA,SAAAA,EAAA,GAAAA,EAAA,IAAAmC,EAAA,KAGA,SAAAksB,EAAAf,EAAAzhC,EAAAvL,GACAgtC,EAAA5nC,QAAA,SAAAsa,GACA,IAIAiS,EAJA1tB,EAAAyb,EAAA,GACAxb,EAAAwb,EAAA,GACAmvB,EAAA,EAAA5qC,EACA6qC,EAAA,EAAA5qC,EAEA0tB,EAAArmB,EAAAujC,EAAAjtB,EAAAgtB,GACA5qC,EAAA,GAAAA,EAAA4d,GAAAgtB,IAAA5qC,IACA0tB,EAAApmB,EAAAujC,EAAAjtB,EAAAgtB,EAAA,GACAnvB,EAAA,GAAAzb,GAAAjE,EAAA2xB,IAAAC,EAAAD,GAAA,IAEAztB,EAAA,GAAAA,EAAA4d,GAAAgtB,IAAA5qC,IACAytB,EAAApmB,GAAAujC,EAAA,GAAAjtB,EAAAgtB,GACAnvB,EAAA,GAAAxb,GAAAlE,EAAA2xB,IAAAC,EAAAD,GAAA,MAsBA,OAjBAqc,EAAAC,UAEAD,EAAAjxB,KAAA,SAAAtO,GACA,IAAA/H,UAAAC,OAAA,OAAAkb,EAAAC,GACA,IAAAitB,EAAA7lC,KAAAyD,KAAA8B,EAAA,IAAAugC,EAAA9lC,KAAAyD,KAAA8B,EAAA,IACA,KAAAsgC,EAAA,GAAAC,EAAA,aAAAl7B,MAAA,gBACA,OAAA+N,EAAAktB,EAAAjtB,EAAAktB,EAAAhB,GAGAA,EAAAt/B,WAAA,SAAAD,GACA,OAAA/H,UAAAC,QAAAqH,EAAA,mBAAAS,IAAAlL,MAAAC,QAAAiL,GAAAy+B,GAAAL,GAAA3tC,KAAAuP,IAAAy+B,GAAAz+B,GAAAu/B,GAAAhgC,GAGAggC,EAAAF,OAAA,SAAAr/B,GACA,OAAA/H,UAAAC,QAAAmnC,EAAAr/B,EAAAs/B,EAAAJ,GAAAK,GAAAF,IAAAC,GAGAC,GCtMA,SAAAiB,GAAA5vB,EAAAza,EAAA/E,GAIA,IAHA,IAAAW,EAAA6e,EAAApe,MACA9B,EAAAkgB,EAAAne,OACA8hC,EAAA,GAAAnjC,GAAA,GACAwP,EAAA,EAAiBA,EAAAlQ,IAAOkQ,EACxB,QAAAtQ,EAAA,EAAA2rC,EAAA,EAA2B3rC,EAAAyB,EAAAX,IAAWd,EACtCA,EAAAyB,IACAkqC,GAAArrB,EAAAjd,KAAArD,EAAAsQ,EAAA7O,IAEAzB,GAAAc,IACAd,GAAAikC,IACA0H,GAAArrB,EAAAjd,KAAArD,EAAAikC,EAAA3zB,EAAA7O,IAEAoE,EAAAxC,KAAArD,EAAAc,EAAAwP,EAAA7O,GAAAkqC,EAAAxhC,KAAAnD,IAAAhH,EAAA,EAAAyB,EAAA,EAAAwiC,EAAAjkC,EAAAikC,IASA,SAAAkM,GAAA7vB,EAAAza,EAAA/E,GAIA,IAHA,IAAAW,EAAA6e,EAAApe,MACA9B,EAAAkgB,EAAAne,OACA8hC,EAAA,GAAAnjC,GAAA,GACAd,EAAA,EAAiBA,EAAAyB,IAAOzB,EACxB,QAAAsQ,EAAA,EAAAq7B,EAAA,EAA2Br7B,EAAAlQ,EAAAU,IAAWwP,EACtCA,EAAAlQ,IACAurC,GAAArrB,EAAAjd,KAAArD,EAAAsQ,EAAA7O,IAEA6O,GAAAxP,IACAwP,GAAA2zB,IACA0H,GAAArrB,EAAAjd,KAAArD,GAAAsQ,EAAA2zB,GAAAxiC,IAEAoE,EAAAxC,KAAArD,GAAAsQ,EAAAxP,GAAAW,GAAAkqC,EAAAxhC,KAAAnD,IAAAsJ,EAAA,EAAAlQ,EAAA,EAAA6jC,EAAA3zB,EAAA2zB,IChCA,SAAAmM,GAAA9vC,GACA,OAAAA,EAAA,GAGA,SAAA+vC,GAAA/vC,GACA,OAAAA,EAAA,GAGA,SAAAgwC,KACA,SAGA,IAAAC,GAAA,WACA,IAAArrC,EAAAkrC,GACAjrC,EAAAkrC,GACAG,EAAAF,GACAxtB,EAAA,IACAC,EAAA,IACAjiB,EAAA,GACAoH,EAAA,EACAzH,EAAA,EAAAK,EACAW,EAAAqhB,EAAA,EAAAriB,GAAAyH,EACA9H,EAAA2iB,EAAA,EAAAtiB,GAAAyH,EACA+G,EAAAk/B,GAAA,IAEA,SAAAsC,EAAAptC,GACA,IAAA4I,EAAA,IAAAykC,aAAAjvC,EAAArB,GACA8L,EAAA,IAAAwkC,aAAAjvC,EAAArB,GAEAiD,EAAAgD,QAAA,SAAA/F,EAAAN,EAAAqD,GACA,IAAAuN,GAAA1L,EAAA5E,EAAAN,EAAAqD,GAAA5C,GAAAyH,EACAomC,GAAAnpC,EAAA7E,EAAAN,EAAAqD,GAAA5C,GAAAyH,EACAyoC,GAAAH,EAAAlwC,EAAAN,EAAAqD,GACAuN,GAAA,GAAAA,EAAAnP,GAAA6sC,GAAA,GAAAA,EAAAluC,IACA6L,EAAA2E,EAAA09B,EAAA7sC,IAAAkvC,KAKAT,IAAWhuC,MAAAT,EAAAU,OAAA/B,EAAAiD,KAAA4I,IAAsC/J,MAAAT,EAAAU,OAAA/B,EAAAiD,KAAA6I,GAAmCpL,GAAAoH,GACpFioC,IAAWjuC,MAAAT,EAAAU,OAAA/B,EAAAiD,KAAA6I,IAAsChK,MAAAT,EAAAU,OAAA/B,EAAAiD,KAAA4I,GAAmCnL,GAAAoH,GACpFgoC,IAAWhuC,MAAAT,EAAAU,OAAA/B,EAAAiD,KAAA4I,IAAsC/J,MAAAT,EAAAU,OAAA/B,EAAAiD,KAAA6I,GAAmCpL,GAAAoH,GACpFioC,IAAWjuC,MAAAT,EAAAU,OAAA/B,EAAAiD,KAAA6I,IAAsChK,MAAAT,EAAAU,OAAA/B,EAAAiD,KAAA4I,GAAmCnL,GAAAoH,GACpFgoC,IAAWhuC,MAAAT,EAAAU,OAAA/B,EAAAiD,KAAA4I,IAAsC/J,MAAAT,EAAAU,OAAA/B,EAAAiD,KAAA6I,GAAmCpL,GAAAoH,GACpFioC,IAAWjuC,MAAAT,EAAAU,OAAA/B,EAAAiD,KAAA6I,IAAsChK,MAAAT,EAAAU,OAAA/B,EAAAiD,KAAA4I,GAAmCnL,GAAAoH,GAEpF,IAAAmH,EAAAJ,EAAAhD,GAGA,IAAAzH,MAAAC,QAAA4K,GAAA,CACA,IAAA3B,EAAAqC,EAAA9D,GACAoD,EAAAX,EAAA,EAAAhB,EAAA2B,IACAA,EAAA7B,EAAA,EAAArD,KAAAkE,MAAAX,EAAA2B,SACAC,QAGA,OAAAw/B,KACAn/B,WAAAN,GACA2O,MAAAvc,EAAArB,GAFA0uC,CAGA7iC,GACAjI,IAAA2O,GAGA,SAAAA,EAAAi+B,GAGA,OAFAA,EAAA3vC,OAAAkJ,KAAAE,IAAA,KAAAnC,GACA0oC,EAAAf,YAAAxpC,QAAAwqC,GACAD,EAGA,SAAAC,EAAAhB,GACAA,EAAAxpC,QAAAyqC,GAGA,SAAAA,EAAAjB,GACAA,EAAAxpC,QAAA0qC,GAIA,SAAAA,EAAAlB,GACAA,EAAA,GAAAA,EAAA,GAAA1lC,KAAAE,IAAA,EAAAnC,GAAAzH,EACAovC,EAAA,GAAAA,EAAA,GAAA1lC,KAAAE,IAAA,EAAAnC,GAAAzH,EAGA,SAAAuwC,IAIA,OAFAvvC,EAAAqhB,EAAA,GADAriB,EAAA,EAAAK,IACAoH,EACA9H,EAAA2iB,EAAA,EAAAtiB,GAAAyH,EACAuoC,EAsCA,OAnCAA,EAAAvrC,EAAA,SAAAwK,GACA,OAAA/H,UAAAC,QAAA1C,EAAA,mBAAAwK,IAAAy+B,IAAAz+B,GAAA+gC,GAAAvrC,GAGAurC,EAAAtrC,EAAA,SAAAuK,GACA,OAAA/H,UAAAC,QAAAzC,EAAA,mBAAAuK,IAAAy+B,IAAAz+B,GAAA+gC,GAAAtrC,GAGAsrC,EAAAD,OAAA,SAAA9gC,GACA,OAAA/H,UAAAC,QAAA4oC,EAAA,mBAAA9gC,IAAAy+B,IAAAz+B,GAAA+gC,GAAAD,GAGAC,EAAAzyB,KAAA,SAAAtO,GACA,IAAA/H,UAAAC,OAAA,OAAAkb,EAAAC,GACA,IAAAitB,EAAA7lC,KAAAyD,KAAA8B,EAAA,IAAAugC,EAAA9lC,KAAAyD,KAAA8B,EAAA,IACA,KAAAsgC,GAAA,GAAAA,GAAA,aAAAj7B,MAAA,gBACA,OAAA+N,EAAAktB,EAAAjtB,EAAAktB,EAAAe,KAGAP,EAAAQ,SAAA,SAAAvhC,GACA,IAAA/H,UAAAC,OAAA,UAAAM,EACA,MAAAwH,OAAA,aAAAqF,MAAA,qBACA,OAAA7M,EAAAiC,KAAAkE,MAAAlE,KAAAoE,IAAAmB,GAAAvF,KAAA4E,KAAAiiC,KAGAP,EAAA9gC,WAAA,SAAAD,GACA,OAAA/H,UAAAC,QAAAqH,EAAA,mBAAAS,IAAAlL,MAAAC,QAAAiL,GAAAy+B,GAAAL,GAAA3tC,KAAAuP,IAAAy+B,GAAAz+B,GAAA+gC,GAAAxhC,GAGAwhC,EAAAr9B,UAAA,SAAA1D,GACA,IAAA/H,UAAAC,OAAA,OAAAuC,KAAAC,KAAAtJ,KAAA,IACA,MAAA4O,OAAA,aAAAqF,MAAA,qBACA,OAAAjU,EAAAqJ,KAAAmJ,OAAAnJ,KAAAC,KAAA,EAAAsF,IAAA,SAAAshC,KAGAP,GCnIAS,MACAC,MACAC,GAAA,GACAC,GAAA,GACAC,GAAA,GAEA,SAAAC,GAAAC,GACA,WAAAC,SAAA,eAAoCD,EAAAxtC,IAAA,SAAAzD,EAAAP,GACpC,OAAA0xC,KAAAC,UAAApxC,GAAA,OAAAP,EAAA,MACGsa,KAAA,UA0BH,IAAAs3B,GAAA,SAAAC,GACA,IAAAC,EAAA,IAAAzsB,OAAA,KAAAwsB,EAAA,SACAE,EAAAF,EAAAG,WAAA,GAWA,SAAAC,EAAAj+B,EAAA9I,GACA,IAIAhK,EAJAgxC,KACAzL,EAAAzyB,EAAApM,OACA8xB,EAAA,EACAj4B,EAAA,EAEA0wC,EAAA1L,GAAA,EACA2L,GAAA,EAMA,SAAAC,IACA,GAAAF,EAAA,OAAAhB,GACA,GAAAiB,EAAA,OAAAA,GAAA,EAAAlB,GAGA,IAAAlxC,EAAAK,EAAAiQ,EAAAopB,EACA,GAAA1lB,EAAAg+B,WAAA1hC,KAAA8gC,GAAA,CACA,KAAA1X,IAAA+M,GAAAzyB,EAAAg+B,WAAAtY,KAAA0X,IAAAp9B,EAAAg+B,aAAAtY,KAAA0X,KAIA,OAHApxC,EAAA05B,IAAA+M,EAAA0L,GAAA,GACA9xC,EAAA2T,EAAAg+B,WAAAtY,QAAA2X,GAAAe,GAAA,EACA/xC,IAAAixC,KAAgCc,GAAA,EAAYp+B,EAAAg+B,WAAAtY,KAAA2X,MAAA3X,GAC5C1lB,EAAA3G,MAAAiD,EAAA,EAAAtQ,EAAA,GAAAsyC,QAAA,WAIA,KAAA5Y,EAAA+M,GAAA,CACA,IAAApmC,EAAA2T,EAAAg+B,WAAAhyC,EAAA05B,QAAA2X,GAAAe,GAAA,OACA,GAAA/xC,IAAAixC,GAAgCc,GAAA,EAAYp+B,EAAAg+B,WAAAtY,KAAA2X,MAAA3X,OAC5C,GAAAr5B,IAAA0xC,EAAA,SACA,OAAA/9B,EAAA3G,MAAAiD,EAAAtQ,GAIA,OAAAmyC,GAAA,EAAAn+B,EAAA3G,MAAAiD,EAAAm2B,GAGA,IA7BAzyB,EAAAg+B,WAAAvL,EAAA,KAAA4K,MAAA5K,EACAzyB,EAAAg+B,WAAAvL,EAAA,KAAA6K,MAAA7K,GA4BAvlC,EAAAmxC,OAAAlB,IAAA,CAEA,IADA,IAAA9/B,KACAnQ,IAAAgwC,IAAAhwC,IAAAiwC,IAAA9/B,EAAA7K,KAAAtF,KAAAmxC,IACAnnC,GAAA,OAAAmG,EAAAnG,EAAAmG,EAAA5P,OACAywC,EAAA1rC,KAAA6K,GAGA,OAAA6gC,EAgBA,SAAAK,EAAAlhC,GACA,OAAAA,EAAArN,IAAAwuC,GAAAl4B,KAAAu3B,GAGA,SAAAW,EAAAx+B,GACA,aAAAA,EAAA,GACA89B,EAAAW,KAAAz+B,GAAA,QAAAA,EAAAs+B,QAAA,eACAt+B,EAGA,OACAsiB,MAlFA,SAAAtiB,EAAA9I,GACA,IAAAwnC,EAAAlB,EAAAU,EAAAD,EAAAj+B,EAAA,SAAA3C,EAAArR,GACA,GAAA0yC,EAAA,OAAAA,EAAArhC,EAAArR,EAAA,GACAwxC,EAAAngC,EAAAqhC,EAAAxnC,EA9BA,SAAAsmC,EAAAtmC,GACA,IAAAxJ,EAAA6vC,GAAAC,GACA,gBAAAngC,EAAArR,GACA,OAAAkL,EAAAxJ,EAAA2P,GAAArR,EAAAwxC,IA2BAmB,CAAAthC,EAAAnG,GAAAqmC,GAAAlgC,KAGA,OADA6gC,EAAAV,cACAU,GA6EAD,YACAl/B,OA1BA,SAAAm/B,EAAAV,GAEA,OADA,MAAAA,MA9EA,SAAAU,GACA,IAAAU,EAAAlyC,OAAAY,OAAA,MACAkwC,KAUA,OARAU,EAAA7rC,QAAA,SAAAgL,GACA,QAAAwhC,KAAAxhC,EACAwhC,KAAAD,GACApB,EAAAhrC,KAAAosC,EAAAC,QAKArB,EAkEAsB,CAAAZ,KACAV,EAAAxtC,IAAAwuC,GAAAl4B,KAAAu3B,IAAApsC,OAAAysC,EAAAluC,IAAA,SAAAqN,GACA,OAAAmgC,EAAAxtC,IAAA,SAAA6uC,GACA,OAAAL,EAAAnhC,EAAAwhC,MACOv4B,KAAAu3B,MACFv3B,KAAA,OAqBLy4B,WAlBA,SAAAb,GACA,OAAAA,EAAAluC,IAAAuuC,GAAAj4B,KAAA,SCzGA04B,GAAApB,GAAA,KAEAqB,GAAAD,GAAA1c,MACA4c,GAAAF,GAAAf,UACAkB,GAAAH,GAAAjgC,OACAqgC,GAAAJ,GAAAD,WCLAM,GAAAzB,GAAA,MAEA0B,GAAAD,GAAA/c,MACAid,GAAAF,GAAApB,UACAuB,GAAAH,GAAAtgC,OACA0gC,GAAAJ,GAAAN,WCPA,SAAAW,GAAAC,GACA,IAAAA,EAAAC,GAAA,UAAA7+B,MAAA4+B,EAAAE,OAAA,IAAAF,EAAAG,YACA,OAAAH,EAAAI,OAGA,IAAAA,GAAA,SAAArQ,EAAAsQ,GACA,OAAAC,MAAAvQ,EAAAsQ,GAAAE,KAAAR,KCNA,SAAAS,GAAAR,GACA,IAAAA,EAAAC,GAAA,UAAA7+B,MAAA4+B,EAAAE,OAAA,IAAAF,EAAAG,YACA,OAAAH,EAAAS,cAGA,IAAAC,GAAA,SAAA3Q,EAAAsQ,GACA,OAAAC,MAAAvQ,EAAAsQ,GAAAE,KAAAC,KCNA,SAAAG,GAAAX,GACA,IAAAA,EAAAC,GAAA,UAAA7+B,MAAA4+B,EAAAE,OAAA,IAAAF,EAAAG,YACA,OAAAH,EAAA3/B,OAGA,IAAAugC,GAAA,SAAA7Q,EAAAsQ,GACA,OAAAC,MAAAvQ,EAAAsQ,GAAAE,KAAAI,KCHA,SAAAE,GAAAle,GACA,gBAAAoN,EAAAsQ,EAAA3iC,GAEA,OADA,IAAA1J,UAAAC,QAAA,mBAAAosC,IAAA3iC,EAAA2iC,SAAAnsC,GACA0sC,GAAA7Q,EAAAsQ,GAAAE,KAAA,SAAAP,GACA,OAAArd,EAAAqd,EAAAtiC,MAKA,SAAAojC,GAAA5C,EAAAnO,EAAAsQ,EAAA3iC,GACA,IAAA1J,UAAAC,QAAA,mBAAAosC,IAAA3iC,EAAA2iC,SAAAnsC,GACA,IAAAkL,EAAA6+B,GAAAC,GACA,OAAA0C,GAAA7Q,EAAAsQ,GAAAE,KAAA,SAAAP,GACA,OAAA5gC,EAAAujB,MAAAqd,EAAAtiC,KAIA,IAAAqjC,GAAAF,GAAAvB,IACA0B,GAAAH,GAAAlB,ICrBAsB,GAAA,SAAAlR,EAAAsQ,GACA,WAAAa,QAAA,SAAAC,EAAAC,GACA,IAAAC,EAAA,IAAAC,MACA,QAAA1zC,KAAAyyC,EAAAgB,EAAAzzC,GAAAyyC,EAAAzyC,GACAyzC,EAAAE,QAAAH,EACAC,EAAAG,OAAA,WAA+BL,EAAAE,IAC/BA,EAAAI,IAAA1R,KCNA,SAAA2R,GAAA1B,GACA,IAAAA,EAAAC,GAAA,UAAA7+B,MAAA4+B,EAAAE,OAAA,IAAAF,EAAAG,YACA,OAAAH,EAAA2B,OAGA,IAAAA,GAAA,SAAA5R,EAAAsQ,GACA,OAAAC,MAAAvQ,EAAAsQ,GAAAE,KAAAmB,KCJA,SAAAE,GAAAnwC,GACA,gBAAAs+B,EAAAsQ,GACA,OAAAO,GAAA7Q,EAAAsQ,GAAAE,KAAA,SAAAlgC,GACA,WAAAwhC,WAAAC,gBAAAzhC,EAAA5O,aAKAmwC,GAAA,mBAEAG,GAAAH,GAAA,aAEAlxC,GAAAkxC,GAAA,iBCdAI,GAAA,SAAAzwC,EAAAC,GACA,IAAA8Z,EAKA,SAAA22B,IACA,IAAA51C,EAEA6Y,EADApX,EAAAwd,EAAArX,OAEAiuC,EAAA,EACAC,EAAA,EAEA,IAAA91C,EAAA,EAAeA,EAAAyB,IAAOzB,EACtB61C,IAAAh9B,EAAAoG,EAAAjf,IAAAkF,EAAA4wC,GAAAj9B,EAAA1T,EAGA,IAAA0wC,IAAAp0C,EAAAyD,EAAA4wC,IAAAr0C,EAAA0D,EAAAnF,EAAA,EAAiDA,EAAAyB,IAAOzB,GACxD6Y,EAAAoG,EAAAjf,IAAAkF,GAAA2wC,EAAAh9B,EAAA1T,GAAA2wC,EAgBA,OA/BA,MAAA5wC,MAAA,GACA,MAAAC,MAAA,GAkBAywC,EAAArQ,WAAA,SAAA71B,GACAuP,EAAAvP,GAGAkmC,EAAA1wC,EAAA,SAAAwK,GACA,OAAA/H,UAAAC,QAAA1C,GAAAwK,EAAAkmC,GAAA1wC,GAGA0wC,EAAAzwC,EAAA,SAAAuK,GACA,OAAA/H,UAAAC,QAAAzC,GAAAuK,EAAAkmC,GAAAzwC,GAGAywC,GClCAG,GAAA,SAAA7wC,GACA,kBACA,OAAAA,ICFA8wC,GAAA,WACA,aAAA7rC,KAAA4G,SAAA,KCKA,SAAAklC,GAAAC,EAAAhxC,EAAAC,EAAA7E,GACA,GAAA0M,MAAA9H,IAAA8H,MAAA7H,GAAA,OAAA+wC,EAEA,IAAAj+B,EAOAk+B,EACAC,EACAC,EACAC,EACA9qC,EACA+qC,EACAv2C,EACAsQ,EAbAuI,EAAAq9B,EAAAM,MACAC,GAAcpzC,KAAA/C,GACd8O,EAAA8mC,EAAA/M,IACAW,EAAAoM,EAAA9M,IACA3/B,EAAAysC,EAAA7M,IACA1/B,EAAAusC,EAAA5M,IAWA,IAAAzwB,EAAA,OAAAq9B,EAAAM,MAAAC,EAAAP,EAGA,KAAAr9B,EAAAjR,QAGA,IAFA4D,EAAAtG,IAAAixC,GAAA/mC,EAAA3F,GAAA,IAAA2F,EAAA+mC,EAAmD1sC,EAAA0sC,GACnDI,EAAApxC,IAAAixC,GAAAtM,EAAAngC,GAAA,IAAAmgC,EAAAsM,EAAoDzsC,EAAAysC,EACpDn+B,EAAAY,QAAA7Y,EAAAu2C,GAAA,EAAA/qC,IAAA,OAAAyM,EAAAjY,GAAAy2C,EAAAP,EAMA,GAFAG,GAAAH,EAAAQ,GAAAv2C,KAAA,KAAA0Y,EAAAxV,MACAizC,GAAAJ,EAAAS,GAAAx2C,KAAA,KAAA0Y,EAAAxV,MACA6B,IAAAmxC,GAAAlxC,IAAAmxC,EAAA,OAAAG,EAAAh+B,KAAAI,EAAAZ,IAAAjY,GAAAy2C,EAAAP,EAAAM,MAAAC,EAAAP,EAGA,GACAj+B,MAAAjY,GAAA,IAAAwE,MAAA,GAAA0xC,EAAAM,MAAA,IAAAhyC,MAAA,IACAgH,EAAAtG,IAAAixC,GAAA/mC,EAAA3F,GAAA,IAAA2F,EAAA+mC,EAAmD1sC,EAAA0sC,GACnDI,EAAApxC,IAAAixC,GAAAtM,EAAAngC,GAAA,IAAAmgC,EAAAsM,EAAoDzsC,EAAAysC,SACjDp2C,EAAAu2C,GAAA,EAAA/qC,KAAA8E,GAAAgmC,GAAAF,IAAA,EAAAC,GAAAF,IACH,OAAAl+B,EAAA3H,GAAAuI,EAAAZ,EAAAjY,GAAAy2C,EAAAP,EC9CA,ICAAU,GAAA,SAAA/9B,EAAAzJ,EAAA06B,EAAArgC,EAAAE,GACAlG,KAAAoV,OACApV,KAAA2L,KACA3L,KAAAqmC,KACArmC,KAAAgG,KACAhG,KAAAkG,MCLA,SAAAktC,GAAAv2C,GACA,OAAAA,EAAA,GCDA,SAAAw2C,GAAAx2C,GACA,OAAAA,EAAA,GCYA,SAAAy2C,GAAA93B,EAAA/Z,EAAAC,GACA,IAAA+wC,EAAA,IAAAc,GAAA,MAAA9xC,EAAA2xC,GAAA3xC,EAAA,MAAAC,EAAA2xC,GAAA3xC,EAAA4F,iBACA,aAAAkU,EAAAi3B,IAAAe,OAAAh4B,GAGA,SAAA+3B,GAAA9xC,EAAAC,EAAAiK,EAAA06B,EAAArgC,EAAAE,GACAlG,KAAAizC,GAAAxxC,EACAzB,KAAAkzC,GAAAxxC,EACA1B,KAAA0lC,IAAA/5B,EACA3L,KAAA2lC,IAAAU,EACArmC,KAAA4lC,IAAA5/B,EACAhG,KAAA6lC,IAAA3/B,EACAlG,KAAA+yC,WAAA3uC,EAGA,SAAAqvC,GAAAT,GAEA,IADA,IAAAljC,GAAclQ,KAAAozC,EAAApzC,MAAgBoV,EAAAlF,EAC9BkjC,IAAAh+B,gBAA+CpV,KAAAozC,EAAApzC,MAC/C,OAAAkQ,EAGA,IAAA4jC,GAAAJ,GAAAn1C,UAAAo1C,GAAAp1C,UC9BA,SAAAw1C,GAAA92C,GACA,OAAAA,EAAA4E,EAAA5E,EAAA+2C,GAGA,SAAAC,GAAAh3C,GACA,OAAAA,EAAA6E,EAAA7E,EAAAi3C,GD2BAJ,GAAA5jC,KAAA,WACA,IAEA0L,EACA1G,EAHAhF,EAAA,IAAAyjC,GAAAvzC,KAAAizC,GAAAjzC,KAAAkzC,GAAAlzC,KAAA0lC,IAAA1lC,KAAA2lC,IAAA3lC,KAAA4lC,IAAA5lC,KAAA6lC,KACAzwB,EAAApV,KAAA+yC,MAIA,IAAA39B,EAAA,OAAAtF,EAEA,IAAAsF,EAAAjR,OAAA,OAAA2L,EAAAijC,MAAAU,GAAAr+B,GAAAtF,EAGA,IADA0L,IAAYqB,OAAAzH,EAAAhT,OAAA0N,EAAAijC,MAAA,IAAAhyC,MAAA,KACZqU,EAAAoG,EAAA1P,OACA,QAAAvP,EAAA,EAAmBA,EAAA,IAAOA,GAC1BuY,EAAAM,EAAAyH,OAAAtgB,MACAuY,EAAA3Q,OAAAqX,EAAAzY,MAAsC8Z,OAAA/H,EAAA1S,OAAAgT,EAAAhT,OAAA7F,GAAA,IAAAwE,MAAA,KACtCqU,EAAAhT,OAAA7F,GAAAk3C,GAAA3+B,IAKA,OAAAhF,GAGA4jC,GAAAh9B,IL3DA,SAAA7Z,GACA,IAAA4E,GAAAzB,KAAAizC,GAAAv2C,KAAA,KAAAG,GACA6E,GAAA1B,KAAAkzC,GAAAx2C,KAAA,KAAAG,GACA,OAAA21C,GAAAxyC,KAAA+zC,MAAAtyC,EAAAC,GAAAD,EAAAC,EAAA7E,IKyDA62C,GAAAF,OLXA,SAAA5zC,GACA,IAAA/C,EAAAN,EACAkF,EACAC,EAFA1D,EAAA4B,EAAAuE,OAGAuH,EAAA,IAAA3K,MAAA/C,GACAg2C,EAAA,IAAAjzC,MAAA/C,GACA2N,EAAApK,IACA8kC,EAAA9kC,IACAyE,GAAA,IACAE,GAAA,IAGA,IAAA3J,EAAA,EAAaA,EAAAyB,IAAOzB,EACpBgN,MAAA9H,GAAAzB,KAAAizC,GAAAv2C,KAAA,KAAAG,EAAA+C,EAAArD,MAAAgN,MAAA7H,GAAA1B,KAAAkzC,GAAAx2C,KAAA,KAAAG,MACA6O,EAAAnP,GAAAkF,EACAuyC,EAAAz3C,GAAAmF,EACAD,EAAAkK,MAAAlK,GACAA,EAAAuE,MAAAvE,GACAC,EAAA2kC,MAAA3kC,GACAA,EAAAwE,MAAAxE,IAWA,IAPAsE,EAAA2F,MAAA3L,KAAA0lC,IAAA1/B,EAAAhG,KAAA4lC,KACA1/B,EAAAmgC,MAAArmC,KAAA2lC,IAAAz/B,EAAAlG,KAAA6lC,KAGA7lC,KAAA+zC,MAAApoC,EAAA06B,GAAA0N,MAAA/tC,EAAAE,GAGA3J,EAAA,EAAaA,EAAAyB,IAAOzB,EACpBi2C,GAAAxyC,KAAA0L,EAAAnP,GAAAy3C,EAAAz3C,GAAAqD,EAAArD,IAGA,OAAAyD,MKtBA0zC,GAAAK,MJ7DA,SAAAtyC,EAAAC,GACA,GAAA6H,MAAA9H,OAAA8H,MAAA7H,MAAA,OAAA1B,KAEA,IAAA2L,EAAA3L,KAAA0lC,IACAW,EAAArmC,KAAA2lC,IACA3/B,EAAAhG,KAAA4lC,IACA1/B,EAAAlG,KAAA6lC,IAKA,GAAAt8B,MAAAoC,GACA3F,GAAA2F,EAAAjF,KAAAkE,MAAAnJ,IAAA,EACAyE,GAAAmgC,EAAA3/B,KAAAkE,MAAAlJ,IAAA,MAIA,MAAAiK,EAAAlK,KAAAuE,GAAAqgC,EAAA3kC,KAAAwE,GAiCA,OAAAlG,KAhCA,IAEAwU,EACAjY,EAHAsxB,EAAA7nB,EAAA2F,EACAyJ,EAAApV,KAAA+yC,MAIA,OAAAx2C,GAAAmF,GAAA2kC,EAAAngC,GAAA,MAAAzE,GAAAkK,EAAA3F,GAAA,GACA,OACA,IAAAwO,EAAA,IAAAzT,MAAA,IAAAxE,GAAA6Y,IAAAZ,QACAtO,EAAAmgC,GAAAxY,GAAA,GAAApsB,GAAAuE,EAAA2F,EAAAkiB,IAAAnsB,EAAAwE,GACA,MAEA,OACA,IAAAsO,EAAA,IAAAzT,MAAA,IAAAxE,GAAA6Y,IAAAZ,QACAtO,EAAAmgC,GAAAxY,GAAA,IAAAliB,EAAA3F,EAAA6nB,GAAApsB,GAAAC,EAAAwE,GACA,MAEA,OACA,IAAAsO,EAAA,IAAAzT,MAAA,IAAAxE,GAAA6Y,IAAAZ,QACA6xB,EAAAngC,GAAA2nB,GAAA,GAAApsB,GAAAuE,EAAA2F,EAAAkiB,IAAAwY,EAAA3kC,GACA,MAEA,OACA,IAAA8S,EAAA,IAAAzT,MAAA,IAAAxE,GAAA6Y,IAAAZ,QACA6xB,EAAAngC,GAAA2nB,GAAA,IAAAliB,EAAA3F,EAAA6nB,GAAApsB,GAAA4kC,EAAA3kC,GAKA1B,KAAA+yC,OAAA/yC,KAAA+yC,MAAA5uC,SAAAnE,KAAA+yC,MAAA39B,GAUA,OAJApV,KAAA0lC,IAAA/5B,EACA3L,KAAA2lC,IAAAU,EACArmC,KAAA4lC,IAAA5/B,EACAhG,KAAA6lC,IAAA3/B,EACAlG,MIMA0zC,GAAA9zC,KE9DA,WACA,IAAAA,KAIA,OAHAI,KAAAi0C,MAAA,SAAA7+B,GACA,IAAAA,EAAAjR,OAAA,GAAAvE,EAAAmD,KAAAqS,EAAAxV,YAA8CwV,IAAAJ,QAE9CpV,GF0DA8zC,GAAApS,OG/DA,SAAAr1B,GACA,OAAA/H,UAAAC,OACAnE,KAAA+zC,OAAA9nC,EAAA,OAAAA,EAAA,OAAA8nC,OAAA9nC,EAAA,OAAAA,EAAA,OACA1C,MAAAvJ,KAAA0lC,UAAAthC,IAAApE,KAAA0lC,IAAA1lC,KAAA2lC,MAAA3lC,KAAA4lC,IAAA5lC,KAAA6lC,OH6DA6N,GAAAQ,KI9DA,SAAAzyC,EAAAC,EAAAoC,GACA,IAAAlE,EAGAoG,EACAE,EACAD,EACAE,EAKA2rB,EACAv1B,EAXAoP,EAAA3L,KAAA0lC,IACAW,EAAArmC,KAAA2lC,IAKAwO,EAAAn0C,KAAA4lC,IACAwO,EAAAp0C,KAAA6lC,IACAwO,KACAj/B,EAAApV,KAAA+yC,MAYA,IARA39B,GAAAi/B,EAAAtxC,KAAA,IAAAowC,GAAA/9B,EAAAzJ,EAAA06B,EAAA8N,EAAAC,IACA,MAAAtwC,IAAAvC,KAEAoK,EAAAlK,EAAAqC,EAAAuiC,EAAA3kC,EAAAoC,EACAqwC,EAAA1yC,EAAAqC,EAAAswC,EAAA1yC,EAAAoC,EACAA,MAGAguB,EAAAuiB,EAAAvoC,OAGA,OAAAsJ,EAAA0c,EAAA1c,QACApP,EAAA8rB,EAAAnmB,IAAAwoC,IACAjuC,EAAA4rB,EAAAuU,IAAA+N,IACAnuC,EAAA6rB,EAAA9rB,IAAA2F,IACAxF,EAAA2rB,EAAA5rB,IAAAmgC,GAGA,GAAAjxB,EAAAjR,OAAA,CACA,IAAAuuC,GAAA1sC,EAAAC,GAAA,EACA0sC,GAAAzsC,EAAAC,GAAA,EAEAkuC,EAAAtxC,KACA,IAAAowC,GAAA/9B,EAAA,GAAAs9B,EAAAC,EAAA1sC,EAAAE,GACA,IAAAgtC,GAAA/9B,EAAA,GAAApP,EAAA2sC,EAAAD,EAAAvsC,GACA,IAAAgtC,GAAA/9B,EAAA,GAAAs9B,EAAAxsC,EAAAD,EAAA0sC,GACA,IAAAQ,GAAA/9B,EAAA,GAAApP,EAAAE,EAAAwsC,EAAAC,KAIAp2C,GAAAmF,GAAAixC,IAAA,EAAAlxC,GAAAixC,KACA5gB,EAAAuiB,IAAAlwC,OAAA,GACAkwC,IAAAlwC,OAAA,GAAAkwC,IAAAlwC,OAAA,EAAA5H,GACA83C,IAAAlwC,OAAA,EAAA5H,GAAAu1B,OAKA,CACA,IAAAzS,EAAA5d,GAAAzB,KAAAizC,GAAAv2C,KAAA,KAAA0Y,EAAAxV,MACA0f,EAAA5d,GAAA1B,KAAAkzC,GAAAx2C,KAAA,KAAA0Y,EAAAxV,MACA20B,EAAAlV,IAAAC,IACA,GAAAiV,EAAAzwB,EAAA,CACA,IAAAjH,EAAA6J,KAAAC,KAAA7C,EAAAywB,GACA5oB,EAAAlK,EAAA5E,EAAAwpC,EAAA3kC,EAAA7E,EACAs3C,EAAA1yC,EAAA5E,EAAAu3C,EAAA1yC,EAAA7E,EACA+C,EAAAwV,EAAAxV,MAKA,OAAAA,GJHA8zC,GAAA7iC,OKjEA,SAAAhU,GACA,GAAA0M,MAAA9H,GAAAzB,KAAAizC,GAAAv2C,KAAA,KAAAG,KAAA0M,MAAA7H,GAAA1B,KAAAkzC,GAAAx2C,KAAA,KAAAG,IAAA,OAAAmD,KAEA,IAAAwU,EAEA8/B,EACA35B,EACA3F,EAKAvT,EACAC,EACAgxC,EACAC,EACA5qC,EACA+qC,EACAv2C,EACAsQ,EAfAuI,EAAApV,KAAA+yC,MAIApnC,EAAA3L,KAAA0lC,IACAW,EAAArmC,KAAA2lC,IACA3/B,EAAAhG,KAAA4lC,IACA1/B,EAAAlG,KAAA6lC,IAWA,IAAAzwB,EAAA,OAAApV,KAIA,GAAAoV,EAAAjR,OAAA,QAGA,IAFA4D,EAAAtG,IAAAixC,GAAA/mC,EAAA3F,GAAA,IAAA2F,EAAA+mC,EAAmD1sC,EAAA0sC,GACnDI,EAAApxC,IAAAixC,GAAAtM,EAAAngC,GAAA,IAAAmgC,EAAAsM,EAAoDzsC,EAAAysC,EACpDn+B,EAAAY,QAAA7Y,EAAAu2C,GAAA,EAAA/qC,IAAA,OAAA/H,KACA,IAAAoV,EAAAjR,OAAA,OACAqQ,EAAAjY,EAAA,MAAAiY,EAAAjY,EAAA,MAAAiY,EAAAjY,EAAA,QAAA+3C,EAAA9/B,EAAA3H,EAAAtQ,GAIA,KAAA6Y,EAAAxV,OAAA/C,GAAA,GAAA8d,EAAAvF,QAAAJ,MAAA,OAAAhV,KAIA,OAHAgV,EAAAI,EAAAJ,cAAAI,EAAAJ,KAGA2F,GAAA3F,EAAA2F,EAAA3F,cAAA2F,EAAA3F,KAAAhV,MAGAwU,GAGAQ,EAAAR,EAAAjY,GAAAyY,SAAAR,EAAAjY,IAGA6Y,EAAAZ,EAAA,IAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,KACAY,KAAAZ,EAAA,IAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,MACAY,EAAAjR,SACAmwC,IAAAznC,GAAAuI,EACApV,KAAA+yC,MAAA39B,GAGApV,OAbAA,KAAA+yC,MAAA/9B,EAAAhV,OLwBA0zC,GAAAa,UKRA,SAAA30C,GACA,QAAArD,EAAA,EAAAyB,EAAA4B,EAAAuE,OAAkC5H,EAAAyB,IAAOzB,EAAAyD,KAAA6Q,OAAAjR,EAAArD,IACzC,OAAAyD,MLOA0zC,GAAA73C,KMnEA,WACA,OAAAmE,KAAA+yC,ONmEAW,GAAAn5B,KOpEA,WACA,IAAAA,EAAA,EAIA,OAHAva,KAAAi0C,MAAA,SAAA7+B,GACA,IAAAA,EAAAjR,OAAA,KAAAoW,QAAgCnF,IAAAJ,QAEhCuF,GPgEAm5B,GAAAO,MQnEA,SAAApxC,GACA,IAAAivB,EAAAhd,EAAAnJ,EAAA06B,EAAArgC,EAAAE,EAAAmuC,KAAAj/B,EAAApV,KAAA+yC,MAEA,IADA39B,GAAAi/B,EAAAtxC,KAAA,IAAAowC,GAAA/9B,EAAApV,KAAA0lC,IAAA1lC,KAAA2lC,IAAA3lC,KAAA4lC,IAAA5lC,KAAA6lC,MACA/T,EAAAuiB,EAAAvoC,OACA,IAAAjJ,EAAAuS,EAAA0c,EAAA1c,KAAAzJ,EAAAmmB,EAAAnmB,GAAA06B,EAAAvU,EAAAuU,GAAArgC,EAAA8rB,EAAA9rB,GAAAE,EAAA4rB,EAAA5rB,KAAAkP,EAAAjR,OAAA,CACA,IAAAuuC,GAAA/mC,EAAA3F,GAAA,EAAA2sC,GAAAtM,EAAAngC,GAAA,GACA4O,EAAAM,EAAA,KAAAi/B,EAAAtxC,KAAA,IAAAowC,GAAAr+B,EAAA49B,EAAAC,EAAA3sC,EAAAE,KACA4O,EAAAM,EAAA,KAAAi/B,EAAAtxC,KAAA,IAAAowC,GAAAr+B,EAAAnJ,EAAAgnC,EAAAD,EAAAxsC,KACA4O,EAAAM,EAAA,KAAAi/B,EAAAtxC,KAAA,IAAAowC,GAAAr+B,EAAA49B,EAAArM,EAAArgC,EAAA2sC,KACA79B,EAAAM,EAAA,KAAAi/B,EAAAtxC,KAAA,IAAAowC,GAAAr+B,EAAAnJ,EAAA06B,EAAAqM,EAAAC,IAGA,OAAA3yC,MRwDA0zC,GAAAc,WSpEA,SAAA3xC,GACA,IAAAivB,EAAAuiB,KAAAr/B,KAEA,IADAhV,KAAA+yC,OAAAsB,EAAAtxC,KAAA,IAAAowC,GAAAnzC,KAAA+yC,MAAA/yC,KAAA0lC,IAAA1lC,KAAA2lC,IAAA3lC,KAAA4lC,IAAA5lC,KAAA6lC,MACA/T,EAAAuiB,EAAAvoC,OAAA,CACA,IAAAsJ,EAAA0c,EAAA1c,KACA,GAAAA,EAAAjR,OAAA,CACA,IAAA2Q,EAAAnJ,EAAAmmB,EAAAnmB,GAAA06B,EAAAvU,EAAAuU,GAAArgC,EAAA8rB,EAAA9rB,GAAAE,EAAA4rB,EAAA5rB,GAAAwsC,GAAA/mC,EAAA3F,GAAA,EAAA2sC,GAAAtM,EAAAngC,GAAA,GACA4O,EAAAM,EAAA,KAAAi/B,EAAAtxC,KAAA,IAAAowC,GAAAr+B,EAAAnJ,EAAA06B,EAAAqM,EAAAC,KACA79B,EAAAM,EAAA,KAAAi/B,EAAAtxC,KAAA,IAAAowC,GAAAr+B,EAAA49B,EAAArM,EAAArgC,EAAA2sC,KACA79B,EAAAM,EAAA,KAAAi/B,EAAAtxC,KAAA,IAAAowC,GAAAr+B,EAAAnJ,EAAAgnC,EAAAD,EAAAxsC,KACA4O,EAAAM,EAAA,KAAAi/B,EAAAtxC,KAAA,IAAAowC,GAAAr+B,EAAA49B,EAAAC,EAAA3sC,EAAAE,IAEA8O,EAAAjS,KAAA+uB,GAEA,KAAAA,EAAA9c,EAAAlJ,OACAjJ,EAAAivB,EAAA1c,KAAA0c,EAAAnmB,GAAAmmB,EAAAuU,GAAAvU,EAAA9rB,GAAA8rB,EAAA5rB,IAEA,OAAAlG,MToDA0zC,GAAAjyC,EFnEA,SAAAwK,GACA,OAAA/H,UAAAC,QAAAnE,KAAAizC,GAAAhnC,EAAAjM,WAAAizC,IEmEAS,GAAAhyC,EDpEA,SAAAuK,GACA,OAAA/H,UAAAC,QAAAnE,KAAAkzC,GAAAjnC,EAAAjM,WAAAkzC,IEOA,IAAAuB,GAAA,SAAA3wC,GACA,IAAA0X,EACAk5B,EACAC,EAAA,EACAC,EAAA,EAIA,SAAAzC,IASA,IARA,IAAA51C,EACAk2C,EACAr9B,EACAjI,EACA09B,EACAgK,EACAC,EANA92C,EAAAwd,EAAArX,OAQAM,EAAA,EAAmBA,EAAAmwC,IAAgBnwC,EAEnC,IADAguC,EAAAa,GAAA93B,EAAAm4B,GAAAE,IAAAW,WAAAO,GACAx4C,EAAA,EAAiBA,EAAAyB,IAAOzB,EACxB6Y,EAAAoG,EAAAjf,GACAs4C,EAAAH,EAAAt/B,EAAAgD,OAAA08B,EAAAD,IACA1nC,EAAAiI,EAAA3T,EAAA2T,EAAAw+B,GACA/I,EAAAz1B,EAAA1T,EAAA0T,EAAA0+B,GACArB,EAAAwB,MAAA5kC,GAIA,SAAAA,EAAA2lC,EAAArpC,EAAA06B,EAAArgC,EAAAE,GACA,IAAAtG,EAAAo1C,EAAAp1C,KAAAq1C,EAAAD,EAAA33C,IAAAw3C,EAAAI,EACA,IAAAr1C,EAiBA,OAAA+L,EAAAwB,EAAA9P,GAAA2I,EAAAmH,EAAA9P,GAAAgpC,EAAAwE,EAAAxtC,GAAA6I,EAAA2kC,EAAAxtC,EAhBA,GAAAuC,EAAAwY,MAAAhD,EAAAgD,MAAA,CACA,IAAA3W,EAAA0L,EAAAvN,EAAA6B,EAAA7B,EAAAg0C,GACAlyC,EAAAmpC,EAAAjrC,EAAA8B,EAAA9B,EAAAk0C,GACAt3C,EAAAiF,IAAAC,IACAlF,EAAAa,MACA,IAAAoE,IAAAjF,IAAAiF,EAAA8wC,MAAA9wC,GACA,IAAAC,IAAAlF,IAAAkF,EAAA6wC,MAAA7wC,GACAlF,GAAAa,GAAAb,EAAAkK,KAAAC,KAAAnK,OAAAm4C,EACAv/B,EAAAw+B,KAAAnyC,GAAAjF,IAAAa,GAAA43C,OAAAH,EAAAG,IACA7/B,EAAA0+B,KAAApyC,GAAAlF,GAAAa,EACAuC,EAAAg0C,IAAAnyC,GAAApE,EAAA,EAAAA,GACAuC,EAAAk0C,IAAApyC,EAAArE,KASA,SAAA03C,EAAAC,GACA,GAAAA,EAAAp1C,KAAA,OAAAo1C,EAAA33C,EAAAq3C,EAAAM,EAAAp1C,KAAAwY,OACA,QAAA7b,EAAAy4C,EAAA33C,EAAA,EAA4Bd,EAAA,IAAOA,EACnCy4C,EAAAz4C,IAAAy4C,EAAAz4C,GAAAc,EAAA23C,EAAA33C,IACA23C,EAAA33C,EAAA23C,EAAAz4C,GAAAc,GAKA,SAAAykC,IACA,GAAAtmB,EAAA,CACA,IAAAjf,EAAA6Y,EAAApX,EAAAwd,EAAArX,OAEA,IADAuwC,EAAA,IAAA3zC,MAAA/C,GACAzB,EAAA,EAAeA,EAAAyB,IAAOzB,EAAA6Y,EAAAoG,EAAAjf,GAAAm4C,EAAAt/B,EAAAgD,QAAAtU,EAAAsR,EAAA7Y,EAAAif,IAoBtB,MA9EA,mBAAA1X,MAAAwuC,GAAA,MAAAxuC,EAAA,GAAAA,IA6DAquC,EAAArQ,WAAA,SAAA71B,GACAuP,EAAAvP,EACA61B,KAGAqQ,EAAAyC,WAAA,SAAA3oC,GACA,OAAA/H,UAAAC,QAAAywC,GAAA3oC,EAAAkmC,GAAAyC,GAGAzC,EAAAwC,SAAA,SAAA1oC,GACA,OAAA/H,UAAAC,QAAAwwC,GAAA1oC,EAAAkmC,GAAAwC,GAGAxC,EAAAruC,OAAA,SAAAmI,GACA,OAAA/H,UAAAC,QAAAL,EAAA,mBAAAmI,IAAAqmC,IAAArmC,GAAA61B,IAAAqQ,GAAAruC,GAGAquC,GS5FA,SAAA+C,GAAAr4C,GACA,OAAAA,EAAAub,MAGA,SAAA+8B,GAAAC,EAAAC,GACA,IAAAjgC,EAAAggC,EAAAh4C,IAAAi4C,GACA,IAAAjgC,EAAA,UAAA9D,MAAA,YAAA+jC,GACA,OAAAjgC,kBAGAkgC,GACA,IAEAC,EAEAC,EACAh6B,EACAhR,EACAirC,EAPApzC,EAAA6yC,GACAP,EAWA,SAAAe,GACA,SAAAhvC,KAAAnD,IAAAiH,EAAAkrC,EAAA74B,OAAAzE,OAAA5N,EAAAkrC,EAAAtzC,OAAAgW,SAVArS,EAAAusC,GAAA,IAKAsC,EAAA,EAQA,SAAAzC,EAAAwD,GACA,QAAAlxC,EAAA,EAAAzG,EAAAs3C,EAAAnxC,OAAqCM,EAAAmwC,IAAgBnwC,EACrD,QAAAixC,EAAA74B,EAAAza,EAAAX,EAAAC,EAAAlF,EAAAiK,EAAAlK,EAAA,EAAuDA,EAAAyB,IAAOzB,EAC9DsgB,GAAA64B,EAAAJ,EAAA/4C,IAAAsgB,OACApb,GADAW,EAAAszC,EAAAtzC,QACAX,EAAAW,EAAAwxC,GAAA/2B,EAAApb,EAAAob,EAAA+2B,IAAArB,KACA7wC,EAAAU,EAAAV,EAAAU,EAAA0xC,GAAAj3B,EAAAnb,EAAAmb,EAAAi3B,IAAAvB,KAGA9wC,GADAjF,IADAA,EAAAkK,KAAAC,KAAAlF,IAAAC,MACA8zC,EAAAj5C,IAAAC,EAAAm5C,EAAAJ,EAAAh5C,GACAmF,GAAAlF,EACA4F,EAAAwxC,IAAAnyC,GAAAgF,EAAAgvC,EAAAl5C,IACA6F,EAAA0xC,IAAApyC,EAAA+E,EACAoW,EAAA+2B,IAAAnyC,GAAAgF,EAAA,EAAAA,GACAoW,EAAAi3B,IAAApyC,EAAA+E,EAKA,SAAAq7B,IACA,GAAAtmB,EAAA,CAEA,IAAAjf,EAIAm5C,EAHA13C,EAAAwd,EAAArX,OACAxH,EAAA24C,EAAAnxC,OACAixC,EAAArM,GAAAvtB,EAAAnZ,GAGA,IAAA9F,EAAA,EAAAiO,EAAA,IAAAzJ,MAAA/C,GAAqCzB,EAAAI,IAAOJ,GAC5Cm5C,EAAAJ,EAAA/4C,IAAA6b,MAAA7b,EACA,iBAAAm5C,EAAA74B,SAAA64B,EAAA74B,OAAAs4B,GAAAC,EAAAM,EAAA74B,SACA,iBAAA64B,EAAAtzC,SAAAszC,EAAAtzC,OAAA+yC,GAAAC,EAAAM,EAAAtzC,SACAoI,EAAAkrC,EAAA74B,OAAAzE,QAAA5N,EAAAkrC,EAAA74B,OAAAzE,QAAA,KACA5N,EAAAkrC,EAAAtzC,OAAAgW,QAAA5N,EAAAkrC,EAAAtzC,OAAAgW,QAAA,KAGA,IAAA7b,EAAA,EAAAk5C,EAAA,IAAA10C,MAAApE,GAAoCJ,EAAAI,IAAOJ,EAC3Cm5C,EAAAJ,EAAA/4C,GAAAk5C,EAAAl5C,GAAAiO,EAAAkrC,EAAA74B,OAAAzE,QAAA5N,EAAAkrC,EAAA74B,OAAAzE,OAAA5N,EAAAkrC,EAAAtzC,OAAAgW,QAGAm9B,EAAA,IAAAx0C,MAAApE,GAAAi5C,IACAJ,EAAA,IAAAz0C,MAAApE,GAAAk5C,KAGA,SAAAD,IACA,GAAAp6B,EAEA,QAAAjf,EAAA,EAAAyB,EAAAs3C,EAAAnxC,OAAqC5H,EAAAyB,IAAOzB,EAC5Cg5C,EAAAh5C,IAAAo4C,EAAAW,EAAA/4C,KAAA+4C,GAIA,SAAAO,IACA,GAAAr6B,EAEA,QAAAjf,EAAA,EAAAyB,EAAAs3C,EAAAnxC,OAAqC5H,EAAAyB,IAAOzB,EAC5Ci5C,EAAAj5C,IAAAwJ,EAAAuvC,EAAA/4C,KAAA+4C,GA6BA,OAzFA,MAAAA,UAgEAnD,EAAArQ,WAAA,SAAA71B,GACAuP,EAAAvP,EACA61B,KAGAqQ,EAAAmD,MAAA,SAAArpC,GACA,OAAA/H,UAAAC,QAAAmxC,EAAArpC,EAAA61B,IAAAqQ,GAAAmD,GAGAnD,EAAA9vC,GAAA,SAAA4J,GACA,OAAA/H,UAAAC,QAAA9B,EAAA4J,EAAAkmC,GAAA9vC,GAGA8vC,EAAAyC,WAAA,SAAA3oC,GACA,OAAA/H,UAAAC,QAAAywC,GAAA3oC,EAAAkmC,GAAAyC,GAGAzC,EAAAwC,SAAA,SAAA1oC,GACA,OAAA/H,UAAAC,QAAAwwC,EAAA,mBAAA1oC,IAAAqmC,IAAArmC,GAAA2pC,IAAAzD,GAAAwC,GAGAxC,EAAApsC,SAAA,SAAAkG,GACA,OAAA/H,UAAAC,QAAA4B,EAAA,mBAAAkG,IAAAqmC,IAAArmC,GAAA4pC,IAAA1D,GAAApsC,GAGAosC,GC9GA,SAAA2D,GAAAj5C,GACA,OAAAA,EAAA4E,EAGA,SAAAs0C,GAAAl5C,GACA,OAAAA,EAAA6E,EAGA,IAAAs0C,GAAA,GACAC,GAAAvvC,KAAAqmB,IAAA,EAAArmB,KAAAC,KAAA,IAEAuvC,GAAA,SAAA16B,GACA,IAAA26B,EACAR,EAAA,EACAS,EAAA,KACAC,EAAA,EAAA3vC,KAAAE,IAAAwvC,EAAA,OACAE,EAAA,EACAC,EAAA,GACAC,EAAAzN,KACA0N,EAAAnf,GAAAptB,GACAoO,EAAAlG,GAAA,cAIA,SAAAlI,IACA+F,IACAqI,EAAA5b,KAAA,OAAAy5C,GACAR,EAAAS,IACAK,EAAAxsC,OACAqO,EAAA5b,KAAA,MAAAy5C,IAIA,SAAAlmC,IACA,IAAA1T,EAAA6Y,EAAApX,EAAAwd,EAAArX,OAQA,IANAwxC,IAAAW,EAAAX,GAAAU,EAEAG,EAAA1lC,KAAA,SAAAqhC,GACAA,EAAAwD,KAGAp5C,EAAA,EAAeA,EAAAyB,IAAOzB,EAEtB,OADA6Y,EAAAoG,EAAAjf,IACAm6C,GAAAthC,EAAA3T,GAAA2T,EAAAw+B,IAAA2C,GACAnhC,EAAA3T,EAAA2T,EAAAshC,GAAAthC,EAAAw+B,GAAA,GACA,MAAAx+B,EAAAuhC,GAAAvhC,EAAA1T,GAAA0T,EAAA0+B,IAAAyC,GACAnhC,EAAA1T,EAAA0T,EAAAuhC,GAAAvhC,EAAA0+B,GAAA,GAIA,SAAA8C,IACA,QAAAxhC,EAAA7Y,EAAA,EAAAyB,EAAAwd,EAAArX,OAA2C5H,EAAAyB,IAAOzB,EAAA,CAElD,IADA6Y,EAAAoG,EAAAjf,IAAA6b,MAAA7b,EACAgN,MAAA6L,EAAA3T,IAAA8H,MAAA6L,EAAA1T,GAAA,CACA,IAAAoC,EAAAkyC,GAAAtvC,KAAAC,KAAApK,GAAAs6C,EAAAt6C,EAAA05C,GACA7gC,EAAA3T,EAAAqC,EAAA4C,KAAAinB,IAAAkpB,GACAzhC,EAAA1T,EAAAoC,EAAA4C,KAAAknB,IAAAipB,IAEAttC,MAAA6L,EAAAw+B,KAAArqC,MAAA6L,EAAA0+B,OACA1+B,EAAAw+B,GAAAx+B,EAAA0+B,GAAA,IAKA,SAAAgD,EAAA3E,GAEA,OADAA,EAAArQ,YAAAqQ,EAAArQ,WAAAtmB,GACA22B,EAKA,OAlDA,MAAA32B,UAgDAo7B,IAEAT,GACAlmC,OAEAwnB,QAAA,WACA,OAAAgf,EAAAhf,QAAAvtB,GAAAisC,GAGAlsC,KAAA,WACA,OAAAwsC,EAAAxsC,OAAAksC,GAGA36B,MAAA,SAAAvP,GACA,OAAA/H,UAAAC,QAAAqX,EAAAvP,EAAA2qC,IAAAJ,EAAA1lC,KAAAgmC,GAAAX,GAAA36B,GAGAm6B,MAAA,SAAA1pC,GACA,OAAA/H,UAAAC,QAAAwxC,GAAA1pC,EAAAkqC,GAAAR,GAGAS,SAAA,SAAAnqC,GACA,OAAA/H,UAAAC,QAAAiyC,GAAAnqC,EAAAkqC,GAAAC,GAGAC,WAAA,SAAApqC,GACA,OAAA/H,UAAAC,QAAAkyC,GAAApqC,EAAAkqC,IAAAE,GAGAC,YAAA,SAAArqC,GACA,OAAA/H,UAAAC,QAAAmyC,GAAArqC,EAAAkqC,GAAAG,GAGAC,cAAA,SAAAtqC,GACA,OAAA/H,UAAAC,QAAAoyC,EAAA,EAAAtqC,EAAAkqC,GAAA,EAAAI,GAGApE,MAAA,SAAAr1C,EAAAmP,GACA,OAAA/H,UAAAC,OAAA,SAAA8H,EAAAuqC,EAAA3lC,OAAA/T,GAAA05C,EAAAhlC,IAAA1U,EAAAg6C,EAAA7qC,IAAAkqC,GAAAK,EAAAp5C,IAAAN,IAGAo3C,KAAA,SAAAzyC,EAAAC,EAAAoC,GACA,IAEAub,EACAC,EACAiV,EACAnf,EACA2hC,EANAx6C,EAAA,EACAyB,EAAAwd,EAAArX,OAUA,IAHA,MAAAL,IAAAvC,IACAuC,KAEAvH,EAAA,EAAiBA,EAAAyB,IAAOzB,GAIxBg4B,GAFAlV,EAAA5d,GADA2T,EAAAoG,EAAAjf,IACAkF,GAEA4d,GADAC,EAAA5d,EAAA0T,EAAA1T,GACA4d,GACAxb,IAAAizC,EAAA3hC,EAAAtR,EAAAywB,GAGA,OAAAwiB,GAGArlC,GAAA,SAAA5U,EAAAmP,GACA,OAAA/H,UAAAC,OAAA,GAAAmU,EAAA5G,GAAA5U,EAAAmP,GAAAkqC,GAAA79B,EAAA5G,GAAA5U,oBCrIA,IAAA0e,EACApG,EACAugC,EAEAJ,EADAZ,EAAArC,IAAA,IAEA0E,EAAA,EACAC,EAAA11C,IACA21C,EAAA,IAEA,SAAA/E,EAAAlmC,GACA,IAAA1P,EAAAyB,EAAAwd,EAAArX,OAAAsuC,EAAAa,GAAA93B,EAAAs6B,GAAAC,IAAAvB,WAAA2C,GACA,IAAAxB,EAAA1pC,EAAA1P,EAAA,EAA0BA,EAAAyB,IAAOzB,EAAA6Y,EAAAoG,EAAAjf,GAAAk2C,EAAAwB,MAAA5kC,GAGjC,SAAAyyB,IACA,GAAAtmB,EAAA,CACA,IAAAjf,EAAA6Y,EAAApX,EAAAwd,EAAArX,OAEA,IADAoxC,EAAA,IAAAx0C,MAAA/C,GACAzB,EAAA,EAAeA,EAAAyB,IAAOzB,EAAA6Y,EAAAoG,EAAAjf,GAAAg5C,EAAAngC,EAAAgD,QAAAu8B,EAAAv/B,EAAA7Y,EAAAif,IAGtB,SAAA27B,EAAAnC,GACA,IAAAljB,EAAAl1B,EAAA6E,EAAAC,EAAAnF,EAAAo4C,EAAA,EAAA5H,EAAA,EAGA,GAAAiI,EAAA7wC,OAAA,CACA,IAAA1C,EAAAC,EAAAnF,EAAA,EAAyBA,EAAA,IAAOA,GAChCu1B,EAAAkjB,EAAAz4C,MAAAK,EAAA8J,KAAAyE,IAAA2mB,EAAAt0B,UACAm3C,GAAA7iB,EAAAt0B,MAAAuvC,GAAAnwC,EAAA6E,GAAA7E,EAAAk1B,EAAArwB,EAAAC,GAAA9E,EAAAk1B,EAAApwB,GAGAszC,EAAAvzC,IAAAsrC,EACAiI,EAAAtzC,IAAAqrC,MAIA,EACAjb,EAAAkjB,GACAvzC,EAAAqwB,EAAAlyB,KAAA6B,EACAqwB,EAAApwB,EAAAowB,EAAAlyB,KAAA8B,EACA,GAAAizC,GAAAY,EAAAzjB,EAAAlyB,KAAAwY,aACA0Z,IAAA9c,MAGAggC,EAAAx3C,MAAAm3C,EAGA,SAAAtlC,EAAA2lC,EAAAhvC,EAAAiG,EAAAhG,GACA,IAAA+uC,EAAAx3C,MAAA,SAEA,IAAAiE,EAAAuzC,EAAAvzC,EAAA2T,EAAA3T,EACAC,EAAAszC,EAAAtzC,EAAA0T,EAAA1T,EACA8+B,EAAAv6B,EAAAD,EACAxJ,EAAAiF,IAAAC,IAIA,GAAA8+B,IAAA0W,EAAA16C,EAQA,OAPAA,EAAAy6C,IACA,IAAAx1C,IAAAjF,IAAAiF,EAAA8wC,MAAA9wC,GACA,IAAAC,IAAAlF,IAAAkF,EAAA6wC,MAAA7wC,GACAlF,EAAAw6C,IAAAx6C,EAAAkK,KAAAC,KAAAqwC,EAAAx6C,IACA4Y,EAAAw+B,IAAAnyC,EAAAuzC,EAAAx3C,MAAAm4C,EAAAn5C,EACA4Y,EAAA0+B,IAAApyC,EAAAszC,EAAAx3C,MAAAm4C,EAAAn5C,IAEA,EAIA,KAAAw4C,EAAA7wC,QAAA3H,GAAAy6C,GAAA,EAGAjC,EAAAp1C,OAAAwV,GAAA4/B,EAAAhgC,QACA,IAAAvT,IAAAjF,IAAAiF,EAAA8wC,MAAA9wC,GACA,IAAAC,IAAAlF,IAAAkF,EAAA6wC,MAAA7wC,GACAlF,EAAAw6C,IAAAx6C,EAAAkK,KAAAC,KAAAqwC,EAAAx6C,KAGA,GAAAw4C,EAAAp1C,OAAAwV,IACAorB,EAAA+U,EAAAP,EAAAp1C,KAAAwY,OAAAu9B,EAAAn5C,EACA4Y,EAAAw+B,IAAAnyC,EAAA++B,EACAprB,EAAA0+B,IAAApyC,EAAA8+B,SACKwU,IAAAhgC,OAwBL,OArBAm9B,EAAArQ,WAAA,SAAA71B,GACAuP,EAAAvP,EACA61B,KAGAqQ,EAAAwC,SAAA,SAAA1oC,GACA,OAAA/H,UAAAC,QAAAwwC,EAAA,mBAAA1oC,IAAAqmC,IAAArmC,GAAA61B,IAAAqQ,GAAAwC,GAGAxC,EAAAiF,YAAA,SAAAnrC,GACA,OAAA/H,UAAAC,QAAA6yC,EAAA/qC,IAAAkmC,GAAAzrC,KAAAC,KAAAqwC,IAGA7E,EAAAkF,YAAA,SAAAprC,GACA,OAAA/H,UAAAC,QAAA8yC,EAAAhrC,IAAAkmC,GAAAzrC,KAAAC,KAAAswC,IAGA9E,EAAAmF,MAAA,SAAArrC,GACA,OAAA/H,UAAAC,QAAA+yC,EAAAjrC,IAAAkmC,GAAAzrC,KAAAC,KAAAuwC,IAGA/E,GC9GAoF,GAAA,SAAAzzC,EAAArC,EAAAC,GACA,IAAA8Z,EAEA+5B,EACAiC,EAFA7C,EAAArC,GAAA,IAQA,SAAAH,EAAAwD,GACA,QAAAp5C,EAAA,EAAAyB,EAAAwd,EAAArX,OAAqC5H,EAAAyB,IAAOzB,EAAA,CAC5C,IAAA6Y,EAAAoG,EAAAjf,GACA8iB,EAAAjK,EAAA3T,KAAA,KACA6d,EAAAlK,EAAA1T,KAAA,KACArE,EAAAqJ,KAAAC,KAAA0Y,IAAAC,KACA7a,GAAA+yC,EAAAj7C,GAAAc,GAAAk4C,EAAAh5C,GAAAo5C,EAAAt4C,EACA+X,EAAAw+B,IAAAv0B,EAAA5a,EACA2Q,EAAA0+B,IAAAx0B,EAAA7a,GAIA,SAAAq9B,IACA,GAAAtmB,EAAA,CACA,IAAAjf,EAAAyB,EAAAwd,EAAArX,OAGA,IAFAoxC,EAAA,IAAAx0C,MAAA/C,GACAw5C,EAAA,IAAAz2C,MAAA/C,GACAzB,EAAA,EAAeA,EAAAyB,IAAOzB,EACtBi7C,EAAAj7C,IAAAuH,EAAA0X,EAAAjf,KAAAif,GACA+5B,EAAAh5C,GAAAgN,MAAAiuC,EAAAj7C,IAAA,GAAAo4C,EAAAn5B,EAAAjf,KAAAif,IAwBA,MA/CA,mBAAA1X,MAAAwuC,IAAAxuC,IACA,MAAArC,MAAA,GACA,MAAAC,MAAA,GAyBAywC,EAAArQ,WAAA,SAAA71B,GACAuP,EAAAvP,EAAA61B,KAGAqQ,EAAAwC,SAAA,SAAA1oC,GACA,OAAA/H,UAAAC,QAAAwwC,EAAA,mBAAA1oC,IAAAqmC,IAAArmC,GAAA61B,IAAAqQ,GAAAwC,GAGAxC,EAAAruC,OAAA,SAAAmI,GACA,OAAA/H,UAAAC,QAAAL,EAAA,mBAAAmI,IAAAqmC,IAAArmC,GAAA61B,IAAAqQ,GAAAruC,GAGAquC,EAAA1wC,EAAA,SAAAwK,GACA,OAAA/H,UAAAC,QAAA1C,GAAAwK,EAAAkmC,GAAA1wC,GAGA0wC,EAAAzwC,EAAA,SAAAuK,GACA,OAAA/H,UAAAC,QAAAzC,GAAAuK,EAAAkmC,GAAAzwC,GAGAywC,GCrDAsF,GAAA,SAAAh2C,GACA,IACA+Z,EACA+5B,EACA7pC,EAHAipC,EAAArC,GAAA,IAOA,SAAAH,EAAAwD,GACA,QAAAvgC,EAAA7Y,EAAA,EAAAyB,EAAAwd,EAAArX,OAA2C5H,EAAAyB,IAAOzB,GAClD6Y,EAAAoG,EAAAjf,IAAAq3C,KAAAloC,EAAAnP,GAAA6Y,EAAA3T,GAAA8zC,EAAAh5C,GAAAo5C,EAIA,SAAA7T,IACA,GAAAtmB,EAAA,CACA,IAAAjf,EAAAyB,EAAAwd,EAAArX,OAGA,IAFAoxC,EAAA,IAAAx0C,MAAA/C,GACA0N,EAAA,IAAA3K,MAAA/C,GACAzB,EAAA,EAAeA,EAAAyB,IAAOzB,EACtBg5C,EAAAh5C,GAAAgN,MAAAmC,EAAAnP,IAAAkF,EAAA+Z,EAAAjf,KAAAif,IAAA,GAAAm5B,EAAAn5B,EAAAjf,KAAAif,IAiBA,MA/BA,mBAAA/Z,MAAA6wC,GAAA,MAAA7wC,EAAA,GAAAA,IAkBA0wC,EAAArQ,WAAA,SAAA71B,GACAuP,EAAAvP,EACA61B,KAGAqQ,EAAAwC,SAAA,SAAA1oC,GACA,OAAA/H,UAAAC,QAAAwwC,EAAA,mBAAA1oC,IAAAqmC,IAAArmC,GAAA61B,IAAAqQ,GAAAwC,GAGAxC,EAAA1wC,EAAA,SAAAwK,GACA,OAAA/H,UAAAC,QAAA1C,EAAA,mBAAAwK,IAAAqmC,IAAArmC,GAAA61B,IAAAqQ,GAAA1wC,GAGA0wC,GCrCAuF,GAAA,SAAAh2C,GACA,IACA8Z,EACA+5B,EACAvB,EAHAW,EAAArC,GAAA,IAOA,SAAAH,EAAAwD,GACA,QAAAvgC,EAAA7Y,EAAA,EAAAyB,EAAAwd,EAAArX,OAA2C5H,EAAAyB,IAAOzB,GAClD6Y,EAAAoG,EAAAjf,IAAAu3C,KAAAE,EAAAz3C,GAAA6Y,EAAA1T,GAAA6zC,EAAAh5C,GAAAo5C,EAIA,SAAA7T,IACA,GAAAtmB,EAAA,CACA,IAAAjf,EAAAyB,EAAAwd,EAAArX,OAGA,IAFAoxC,EAAA,IAAAx0C,MAAA/C,GACAg2C,EAAA,IAAAjzC,MAAA/C,GACAzB,EAAA,EAAeA,EAAAyB,IAAOzB,EACtBg5C,EAAAh5C,GAAAgN,MAAAyqC,EAAAz3C,IAAAmF,EAAA8Z,EAAAjf,KAAAif,IAAA,GAAAm5B,EAAAn5B,EAAAjf,KAAAif,IAiBA,MA/BA,mBAAA9Z,MAAA4wC,GAAA,MAAA5wC,EAAA,GAAAA,IAkBAywC,EAAArQ,WAAA,SAAA71B,GACAuP,EAAAvP,EACA61B,KAGAqQ,EAAAwC,SAAA,SAAA1oC,GACA,OAAA/H,UAAAC,QAAAwwC,EAAA,mBAAA1oC,IAAAqmC,IAAArmC,GAAA61B,IAAAqQ,GAAAwC,GAGAxC,EAAAzwC,EAAA,SAAAuK,GACA,OAAA/H,UAAAC,QAAAzC,EAAA,mBAAAuK,IAAAqmC,IAAArmC,GAAA61B,IAAAqQ,GAAAzwC,GAGAywC,GCpCAwF,GAAA,SAAAl2C,EAAApD,GACA,IAAA9B,GAAAkF,EAAApD,EAAAoD,EAAAm2C,cAAAv5C,EAAA,GAAAoD,EAAAm2C,iBAAA5lC,QAAA,oBACA,IAAAzV,EAAAs7C,EAAAp2C,EAAAmI,MAAA,EAAArN,GAIA,OACAs7C,EAAA1zC,OAAA,EAAA0zC,EAAA,GAAAA,EAAAjuC,MAAA,GAAAiuC,GACAp2C,EAAAmI,MAAArN,EAAA,KCTAu7C,GAAA,SAAAr2C,GACA,OAAAA,EAAAk2C,GAAAjxC,KAAAyE,IAAA1J,OAAA,GAAA6F,KCFAywC,GAAA,4EAEA,SAAAC,GAAAC,GACA,WAAAC,GAAAD,GAKA,SAAAC,GAAAD,GACA,KAAA39B,EAAAy9B,GAAAtsB,KAAAwsB,IAAA,UAAA3mC,MAAA,mBAAA2mC,GACA,IAAA39B,EACAta,KAAA6D,KAAAyW,EAAA,QACAta,KAAAm4C,MAAA79B,EAAA,QACAta,KAAAo4C,KAAA99B,EAAA,QACAta,KAAAq4C,OAAA/9B,EAAA,OACAta,KAAAs4C,OAAAh+B,EAAA,GACAta,KAAAvB,MAAA6b,EAAA,KAAAA,EAAA,GACAta,KAAAu4C,QAAAj+B,EAAA,GACAta,KAAAw4C,UAAAl+B,EAAA,KAAAA,EAAA,GAAA1Q,MAAA,GACA5J,KAAA8R,OAAAwI,EAAA,GACAta,KAAA2B,KAAA2Y,EAAA,QAdA09B,GAAA75C,UAAA+5C,GAAA/5C,UAiBA+5C,GAAA/5C,UAAAye,SAAA,WACA,OAAA5c,KAAA6D,KACA7D,KAAAm4C,MACAn4C,KAAAo4C,KACAp4C,KAAAq4C,QACAr4C,KAAAs4C,KAAA,SACA,MAAAt4C,KAAAvB,MAAA,GAAAiI,KAAAlD,IAAA,IAAAxD,KAAAvB,SACAuB,KAAAu4C,MAAA,SACA,MAAAv4C,KAAAw4C,UAAA,OAAA9xC,KAAAlD,IAAA,IAAAxD,KAAAw4C,aACAx4C,KAAA8R,KAAA,QACA9R,KAAA2B,MCjCA,ICCA82C,GCAAC,GACAC,GACAC,GFHAC,GAAA,SAAAv6C,GACAw6C,EAAA,QAAAnwC,EAAA3K,EAAAM,EAAA6F,OAAA5H,EAAA,EAAAmM,GAAA,EAAiDnM,EAAAyB,IAAOzB,EACxD,OAAA+B,EAAA/B,IACA,QAAAmM,EAAAC,EAAApM,EAA4B,MAC5B,YAAAmM,MAAAnM,GAAqCoM,EAAApM,EAAQ,MAC7C,WAAAmM,EAAA,GAA4B,KAAApK,EAAA/B,GAAA,MAAAu8C,EAAuBpwC,EAAA,GAGnD,OAAAA,EAAA,EAAApK,EAAAsL,MAAA,EAAAlB,GAAApK,EAAAsL,MAAAjB,EAAA,GAAArK,GGPAy6C,GAAA,SAAAt3C,EAAApD,GACA,IAAAxB,EAAA86C,GAAAl2C,EAAApD,GACA,IAAAxB,EAAA,OAAA4E,EAAA,GACA,IAAAo2C,EAAAh7C,EAAA,GACA+/B,EAAA//B,EAAA,GACA,OAAA+/B,EAAA,WAAA77B,OAAA67B,GAAA/lB,KAAA,KAAAghC,EACAA,EAAA1zC,OAAAy4B,EAAA,EAAAib,EAAAjuC,MAAA,EAAAgzB,EAAA,OAAAib,EAAAjuC,MAAAgzB,EAAA,GACAib,EAAA,IAAA92C,MAAA67B,EAAAib,EAAA1zC,OAAA,GAAA0S,KAAA,MCNAmiC,IACAC,IAAA,SAAAx3C,EAAApD,GAAuB,WAAAoD,GAAAy3C,QAAA76C,IACvBoI,EAAA,SAAAhF,GAAoB,OAAAiF,KAAAmJ,MAAApO,GAAAmb,SAAA,IACpBhgB,EAAA,SAAA6E,GAAoB,OAAAA,EAAA,IACpB5E,EAAA,SAAA4E,GAAoB,OAAAiF,KAAAmJ,MAAApO,GAAAmb,SAAA,KACpB1a,EAAA,SAAAT,EAAApD,GAAuB,OAAAoD,EAAAm2C,cAAAv5C,IACvBoJ,EAAA,SAAAhG,EAAApD,GAAuB,OAAAoD,EAAAy3C,QAAA76C,IACvB0tB,EAAA,SAAAtqB,EAAApD,GAAuB,OAAAoD,EAAA03C,YAAA96C,IACvBrB,EAAA,SAAAyE,GAAoB,OAAAiF,KAAAmJ,MAAApO,GAAAmb,SAAA,IACpBve,EAAA,SAAAoD,EAAApD,GAAuB,OAAA06C,GAAA,IAAAt3C,EAAApD,IACvBhB,EAAA07C,GACAz6C,EHVA,SAAAmD,EAAApD,GACA,IAAAxB,EAAA86C,GAAAl2C,EAAApD,GACA,IAAAxB,EAAA,OAAA4E,EAAA,GACA,IAAAo2C,EAAAh7C,EAAA,GACA+/B,EAAA//B,EAAA,GACAN,EAAAqgC,GAAA6b,GAAA,EAAA/xC,KAAAlD,KAAA,EAAAkD,KAAAnD,IAAA,EAAAmD,KAAAkE,MAAAgyB,EAAA,QACA5+B,EAAA65C,EAAA1zC,OACA,OAAA5H,IAAAyB,EAAA65C,EACAt7C,EAAAyB,EAAA65C,EAAA,IAAA92C,MAAAxE,EAAAyB,EAAA,GAAA6Y,KAAA,KACAta,EAAA,EAAAs7C,EAAAjuC,MAAA,EAAArN,GAAA,IAAAs7C,EAAAjuC,MAAArN,GACA,SAAAwE,MAAA,EAAAxE,GAAAsa,KAAA,KAAA8gC,GAAAl2C,EAAAiF,KAAAlD,IAAA,EAAAnF,EAAA9B,EAAA,QGCA68C,EAAA,SAAA33C,GAAoB,OAAAiF,KAAAmJ,MAAApO,GAAAmb,SAAA,IAAAy8B,eACpB53C,EAAA,SAAAA,GAAoB,OAAAiF,KAAAmJ,MAAApO,GAAAmb,SAAA,MChBpB08B,GAAA,SAAA73C,GACA,OAAAA,GCQA83C,IAAA,oEAEAC,GAAA,SAAAC,GACA,IAAAtkC,EAAAskC,EAAAC,UAAAD,EAAAE,UCZA,SAAAD,EAAAC,GACA,gBAAAn8C,EAAAiB,GAOA,IANA,IAAAlC,EAAAiB,EAAA2G,OACA1G,KACAoP,EAAA,EACAkf,EAAA2tB,EAAA,GACAv1C,EAAA,EAEA5H,EAAA,GAAAwvB,EAAA,IACA5nB,EAAA4nB,EAAA,EAAAttB,IAAAstB,EAAArlB,KAAAlD,IAAA,EAAA/E,EAAA0F,IACA1G,EAAAsF,KAAAvF,EAAAo8C,UAAAr9C,GAAAwvB,EAAAxvB,EAAAwvB,OACA5nB,GAAA4nB,EAAA,GAAAttB,KACAstB,EAAA2tB,EAAA7sC,KAAA,GAAA6sC,EAAAv1C,QAGA,OAAA1G,EAAAgN,UAAAoM,KAAA8iC,IDHAE,CAAAJ,EAAAC,SAAAD,EAAAE,WAAAL,GACAQ,EAAAL,EAAAK,SACAC,EAAAN,EAAAM,QACAC,EAAAP,EAAAO,SEfA,SAAAA,GACA,gBAAAx8C,GACA,OAAAA,EAAAqxC,QAAA,kBAAAtyC,GACA,OAAAy9C,GAAAz9C,MFYA09C,CAAAR,EAAAO,UAAAV,GACAY,EAAAT,EAAAS,SAAA,IAEA,SAAAC,EAAAlC,GAGA,IAAAp0C,GAFAo0C,EAAAD,GAAAC,IAEAp0C,KACAs0C,EAAAF,EAAAE,MACAC,EAAAH,EAAAG,KACAC,EAAAJ,EAAAI,OACAC,EAAAL,EAAAK,KACA75C,EAAAw5C,EAAAx5C,MACA85C,EAAAN,EAAAM,MACAC,EAAAP,EAAAO,UACA1mC,EAAAmmC,EAAAnmC,KACAnQ,EAAAs2C,EAAAt2C,KAGA,MAAAA,GAAA42C,GAAA,EAAA52C,EAAA,KAGAq3C,GAAAr3C,KAAA,MAAA62C,MAAA,IAAA1mC,GAAA,EAAAnQ,EAAA,MAGA22C,GAAA,MAAAz0C,GAAA,MAAAs0C,KAAAG,GAAA,EAAAz0C,EAAA,IAAAs0C,EAAA,KAIA,IAAAxlC,EAAA,MAAA0lC,EAAAyB,EAAA,SAAAzB,GAAA,SAAArJ,KAAArtC,GAAA,IAAAA,EAAA6pB,cAAA,GACA4uB,EAAA,MAAA/B,EAAAyB,EAAA,UAAA9K,KAAArtC,GAAAu4C,EAAA,GAKAG,EAAArB,GAAAr3C,GACA24C,EAAA,aAAAtL,KAAArtC,GAUA,SAAA2N,EAAA9R,GACA,IAEAjB,EAAAyB,EAAApB,EAFA29C,EAAA5nC,EACA6nC,EAAAJ,EAGA,SAAAz4C,EACA64C,EAAAH,EAAA78C,GAAAg9C,EACAh9C,EAAA,OACO,CAIP,IAAAi9C,GAHAj9C,MAGA,EAeA,GAdAA,EAAA68C,EAAA3zC,KAAAyE,IAAA3N,GAAAg7C,GAGA1mC,IAAAtU,EAAAq7C,GAAAr7C,IAGAi9C,GAAA,IAAAj9C,IAAAi9C,GAAA,GAGAF,GAAAE,EAAA,MAAArC,IAAA,UAAAA,GAAA,MAAAA,EAAA,GAAAA,GAAAmC,EACAC,GAAA,MAAA74C,EAAA43C,GAAA,EAAAd,GAAA,OAAA+B,GAAAC,GAAA,MAAArC,EAAA,QAIAkC,EAEA,IADA/9C,GAAA,EAAAyB,EAAAR,EAAA2G,SACA5H,EAAAyB,GACA,OAAApB,EAAAY,EAAA+wC,WAAAhyC,KAAAK,EAAA,IACA49C,GAAA,KAAA59C,EAAAm9C,EAAAv8C,EAAAoM,MAAArN,EAAA,GAAAiB,EAAAoM,MAAArN,IAAAi+C,EACAh9C,IAAAoM,MAAA,EAAArN,GACA,OAOAg8C,IAAAD,IAAA96C,EAAA2X,EAAA3X,EAAA+D,MAGA,IAAA4C,EAAAo2C,EAAAp2C,OAAA3G,EAAA2G,OAAAq2C,EAAAr2C,OACAxF,EAAAwF,EAAA1F,EAAA,IAAAsC,MAAAtC,EAAA0F,EAAA,GAAA0S,KAAAhT,GAAA,GAMA,OAHA00C,GAAAD,IAAA96C,EAAA2X,EAAAxW,EAAAnB,EAAAmB,EAAAwF,OAAA1F,EAAA+7C,EAAAr2C,OAAA5C,KAAA5C,EAAA,IAGAw5C,GACA,QAAA36C,EAAA+8C,EAAA/8C,EAAAg9C,EAAA77C,EAAsE,MACtE,QAAAnB,EAAA+8C,EAAA57C,EAAAnB,EAAAg9C,EAAsE,MACtE,QAAAh9C,EAAAmB,EAAAiL,MAAA,EAAAzF,EAAAxF,EAAAwF,QAAA,GAAAo2C,EAAA/8C,EAAAg9C,EAAA77C,EAAAiL,MAAAzF,GAAqI,MACrI,QAAA3G,EAAAmB,EAAA47C,EAAA/8C,EAAAg9C,EAGA,OAAAR,EAAAx8C,GAOA,OApEAg7C,EAAA,MAAAA,EAAA,EACA,SAAAxJ,KAAArtC,GAAA+E,KAAAlD,IAAA,EAAAkD,KAAAnD,IAAA,GAAAi1C,IACA9xC,KAAAlD,IAAA,EAAAkD,KAAAnD,IAAA,GAAAi1C,IA8DAlpC,EAAAsN,SAAA,WACA,OAAAq7B,EAAA,IAGA3oC,EAaA,OACAA,OAAA6qC,EACAO,aAZA,SAAAzC,EAAAz6C,GACA,IAAAiK,EAAA0yC,IAAAlC,EAAAD,GAAAC,IAAAt2C,KAAA,IAAAs2C,IACA/1C,EAAA,EAAAwE,KAAAlD,KAAA,EAAAkD,KAAAnD,IAAA,EAAAmD,KAAAkE,MAAAktC,GAAAt6C,GAAA,KACAiH,EAAAiC,KAAAE,IAAA,IAAA1E,GACAyQ,EAAA4mC,GAAA,EAAAr3C,EAAA,GACA,gBAAA1E,GACA,OAAAiK,EAAAhD,EAAAjH,GAAAmV,MJxHA,SAAAgoC,GAAAv5B,GAIA,OAHAs3B,GAAAc,GAAAp4B,GACAu3B,GAAAD,GAAAppC,OACAspC,GAAAF,GAAAgC,aACAhC,GAXAiC,IACAZ,QAAA,IACAJ,UAAA,IACAD,UAAA,GACAI,UAAA,UORA,IAAAc,GAAA,SAAA1wC,GACA,OAAAxD,KAAAlD,IAAA,GAAAs0C,GAAApxC,KAAAyE,IAAAjB,MCDA2wC,GAAA,SAAA3wC,EAAA1M,GACA,OAAAkJ,KAAAlD,IAAA,IAAAkD,KAAAlD,KAAA,EAAAkD,KAAAnD,IAAA,EAAAmD,KAAAkE,MAAAktC,GAAAt6C,GAAA,KAAAs6C,GAAApxC,KAAAyE,IAAAjB,MCDA4wC,GAAA,SAAA5wC,EAAA1G,GAEA,OADA0G,EAAAxD,KAAAyE,IAAAjB,GAAA1G,EAAAkD,KAAAyE,IAAA3H,GAAA0G,EACAxD,KAAAlD,IAAA,EAAAs0C,GAAAt0C,GAAAs0C,GAAA5tC,IAAA,GCGA6wC,GAAA,WACA,WAAAC,IAGA,SAAAA,KACAh7C,KAAAi7C,QAGAD,GAAA78C,WACAsT,YAAAupC,GACAC,MAAA,WACAj7C,KAAA1B,EACA0B,KAAAvC,EAAA,GAEAiZ,IAAA,SAAAhV,GACAw5C,GAAAC,GAAAz5C,EAAA1B,KAAAvC,GACAy9C,GAAAl7C,KAAAm7C,GAAA78C,EAAA0B,KAAA1B,GACA0B,KAAA1B,EAAA0B,KAAAvC,GAAA09C,GAAA19C,EACAuC,KAAA1B,EAAA68C,GAAA19C,GAEAy0B,QAAA,WACA,OAAAlyB,KAAA1B,IAIA,IAAA68C,GAAA,IAAAH,GAEA,SAAAE,GAAAH,EAAAv0C,EAAAC,GACA,IAAAhF,EAAAs5C,EAAAz8C,EAAAkI,EAAAC,EACA20C,EAAA35C,EAAA+E,EACA60C,EAAA55C,EAAA25C,EACAL,EAAAt9C,EAAA+I,EAAA60C,GAAA50C,EAAA20C,GCtCA,IAAAE,GAAA,KAEAC,GAAA70C,KAAAqmB,GACAyuB,GAAAD,GAAA,EACAE,GAAAF,GAAA,EACAG,GAAA,EAAAH,GAEAI,GAAA,IAAAJ,GACAK,GAAAL,GAAA,IAEApwC,GAAAzE,KAAAyE,IACAwnB,GAAAjsB,KAAAisB,KACAvE,GAAA1nB,KAAA0nB,MACAytB,GAAAn1C,KAAAinB,IACAxjB,GAAAzD,KAAAyD,KACA0pB,GAAAntB,KAAAmtB,IAEA/oB,IADApE,KAAAkE,MACAlE,KAAAoE,KACAlE,GAAAF,KAAAE,IACAk1C,GAAAp1C,KAAAknB,IACAmuB,GAAAr1C,KAAA0xC,MAAA,SAAA32C,GAA4C,OAAAA,EAAA,IAAAA,EAAA,QAC5CkF,GAAAD,KAAAC,KACAikB,GAAAlkB,KAAAkkB,IAEA,SAAAqc,GAAAxlC,GACA,OAAAA,EAAA,IAAAA,GAAA,EAAA85C,GAAA70C,KAAAugC,KAAAxlC,GAGA,SAAAo9B,GAAAp9B,GACA,OAAAA,EAAA,EAAA+5C,GAAA/5C,GAAA,GAAA+5C,GAAA90C,KAAAm4B,KAAAp9B,GAGA,SAAAu6C,GAAAv6C,GACA,OAAAA,EAAAq6C,GAAAr6C,EAAA,IAAAA,ECjCA,SAAAw6C,MCAA,SAAAC,GAAA/O,EAAAgP,GACAhP,GAAAiP,GAAAh+C,eAAA+uC,EAAAxrC,OACAy6C,GAAAjP,EAAAxrC,MAAAwrC,EAAAgP,GAIA,IAAAE,IACAC,QAAA,SAAAr+C,EAAAk+C,GACAD,GAAAj+C,EAAAkvC,SAAAgP,IAEAI,kBAAA,SAAAt+C,EAAAk+C,GAEA,IADA,IAAAK,EAAAv+C,EAAAu+C,SAAAjgD,GAAA,EAAAyB,EAAAw+C,EAAAr4C,SACA5H,EAAAyB,GAAAk+C,GAAAM,EAAAjgD,GAAA4wC,SAAAgP,KAIAC,IACAK,OAAA,SAAAx+C,EAAAk+C,GACAA,EAAAO,UAEAC,MAAA,SAAA1+C,EAAAk+C,GACAl+C,IAAAmuC,YACA+P,EAAAj/B,MAAAjf,EAAA,GAAAA,EAAA,GAAAA,EAAA,KAEA2+C,WAAA,SAAA3+C,EAAAk+C,GAEA,IADA,IAAA/P,EAAAnuC,EAAAmuC,YAAA7vC,GAAA,EAAAyB,EAAAouC,EAAAjoC,SACA5H,EAAAyB,GAAAC,EAAAmuC,EAAA7vC,GAAA4/C,EAAAj/B,MAAAjf,EAAA,GAAAA,EAAA,GAAAA,EAAA,KAEA4+C,WAAA,SAAA5+C,EAAAk+C,GACAW,GAAA7+C,EAAAmuC,YAAA+P,EAAA,IAEAY,gBAAA,SAAA9+C,EAAAk+C,GAEA,IADA,IAAA/P,EAAAnuC,EAAAmuC,YAAA7vC,GAAA,EAAAyB,EAAAouC,EAAAjoC,SACA5H,EAAAyB,GAAA8+C,GAAA1Q,EAAA7vC,GAAA4/C,EAAA,IAEAa,QAAA,SAAA/+C,EAAAk+C,GACAc,GAAAh/C,EAAAmuC,YAAA+P,IAEAe,aAAA,SAAAj/C,EAAAk+C,GAEA,IADA,IAAA/P,EAAAnuC,EAAAmuC,YAAA7vC,GAAA,EAAAyB,EAAAouC,EAAAjoC,SACA5H,EAAAyB,GAAAi/C,GAAA7Q,EAAA7vC,GAAA4/C,IAEAgB,mBAAA,SAAAl/C,EAAAk+C,GAEA,IADA,IAAAiB,EAAAn/C,EAAAm/C,WAAA7gD,GAAA,EAAAyB,EAAAo/C,EAAAj5C,SACA5H,EAAAyB,GAAAk+C,GAAAkB,EAAA7gD,GAAA4/C,KAIA,SAAAW,GAAA1Q,EAAA+P,EAAAkB,GACA,IAAAC,EAAA/gD,GAAA,EAAAyB,EAAAouC,EAAAjoC,OAAAk5C,EAEA,IADAlB,EAAAoB,cACAhhD,EAAAyB,GAAAs/C,EAAAlR,EAAA7vC,GAAA4/C,EAAAj/B,MAAAogC,EAAA,GAAAA,EAAA,GAAAA,EAAA,IACAnB,EAAAqB,UAGA,SAAAP,GAAA7Q,EAAA+P,GACA,IAAA5/C,GAAA,EAAAyB,EAAAouC,EAAAjoC,OAEA,IADAg4C,EAAAsB,iBACAlhD,EAAAyB,GAAA8+C,GAAA1Q,EAAA7vC,GAAA4/C,EAAA,GACAA,EAAAuB,aAGA,ICtDAC,GACAC,GACAC,GACAC,GACAC,GDkDAC,GAAA,SAAA//C,EAAAk+C,GACAl+C,GAAAo+C,GAAAj+C,eAAAH,EAAA0D,MACA06C,GAAAp+C,EAAA0D,MAAA1D,EAAAk+C,GAEAD,GAAAj+C,EAAAk+C,IC7DA8B,GAAAlD,KAEAmD,GAAAnD,KAOAoD,IACAjhC,MAAA++B,GACAsB,UAAAtB,GACAuB,QAAAvB,GACAwB,aAAA,WACAQ,GAAAhD,QACAkD,GAAAZ,UAAAa,GACAD,GAAAX,QAAAa,IAEAX,WAAA,WACA,IAAAY,GAAAL,GACAC,GAAAxnC,IAAA4nC,EAAA,EAAA5C,GAAA4C,KACAt+C,KAAAu9C,UAAAv9C,KAAAw9C,QAAAx9C,KAAAkd,MAAA++B,IAEAS,OAAA,WACAwB,GAAAxnC,IAAAglC,MAIA,SAAA0C,KACAD,GAAAjhC,MAAAqhC,GAGA,SAAAF,KACAG,GAAAb,GAAAC,IAGA,SAAAW,GAAAE,EAAAC,GACAP,GAAAjhC,MAAAshC,GACAb,GAAAc,EAAAb,GAAAc,EAEAb,GADAY,GAAA7C,GACAkC,GAAAjC,GAAA6C,GADAA,GAAA9C,IACA,EAAAH,IAAAsC,GAAAjC,GAAA4C,GAGA,SAAAF,GAAAC,EAAAC,GAEAA,GADAA,GAAA9C,IACA,EAAAH,GAKA,IAAAkD,GANAF,GAAA7C,IAMAiC,GACAe,EAAAD,GAAA,OACAE,EAAAD,EAAAD,EACAG,EAAAjD,GAAA6C,GACAK,EAAAjD,GAAA4C,GACAj6C,EAAAs5C,GAAAgB,EACAjqB,EAAAgpB,GAAAgB,EAAAr6C,EAAAo3C,GAAAgD,GACAp1C,EAAAhF,EAAAm6C,EAAA9C,GAAA+C,GACAZ,GAAAvnC,IAAA0X,GAAA3kB,EAAAqrB,IAGA+oB,GAAAY,EAAAX,GAAAgB,EAAAf,GAAAgB,EAGA,IAAAC,GAAA,SAAA/gD,GAGA,OAFAigD,GAAAjD,QACA+C,GAAA//C,EAAAkgD,IACA,EAAAD,ICtEA,SAAAe,GAAAC,GACA,OAAA9wB,GAAA8wB,EAAA,GAAAA,EAAA,IAAArgB,GAAAqgB,EAAA,KAGA,SAAAC,GAAAC,GACA,IAAAX,EAAAW,EAAA,GAAAV,EAAAU,EAAA,GAAAN,EAAAjD,GAAA6C,GACA,OAAAI,EAAAjD,GAAA4C,GAAAK,EAAAhD,GAAA2C,GAAA3C,GAAA4C,IAGA,SAAAW,GAAA74C,EAAAC,GACA,OAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAGA,SAAA64C,GAAA94C,EAAAC,GACA,OAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,IAIA,SAAA84C,GAAA/4C,EAAAC,GACAD,EAAA,IAAAC,EAAA,GAAAD,EAAA,IAAAC,EAAA,GAAAD,EAAA,IAAAC,EAAA,GAGA,SAAA+4C,GAAAC,EAAAh7C,GACA,OAAAg7C,EAAA,GAAAh7C,EAAAg7C,EAAA,GAAAh7C,EAAAg7C,EAAA,GAAAh7C,GAIA,SAAAi7C,GAAA7iD,GACA,IAAAL,EAAAmK,GAAA9J,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,IACAA,EAAA,IAAAL,EAAAK,EAAA,IAAAL,EAAAK,EAAA,IAAAL,ECzBA,IAAAmjD,GAAAC,GAAAC,GAAAC,GACAC,GACAC,GAAAC,GACAC,GAEAC,GACAC,GAFAC,GAAAtF,KAIAuF,IACApjC,MAAAqjC,GACAhD,UAAAiD,GACAhD,QAAAiD,GACAhD,aAAA,WACA6C,GAAApjC,MAAAwjC,GACAJ,GAAA/C,UAAAoD,GACAL,GAAA9C,QAAAoD,GACAP,GAAApF,QACAkD,GAAAV,gBAEAC,WAAA,WACAS,GAAAT,aACA4C,GAAApjC,MAAAqjC,GACAD,GAAA/C,UAAAiD,GACAF,GAAA9C,QAAAiD,GACAxC,GAAA,GAAA0B,KAAAE,GAAA,KAAAD,KAAAE,GAAA,KACAO,GAAA/E,GAAAwE,GAAA,GACAO,IAAA/E,KAAAsE,IAAA,IACAQ,GAAA,GAAAT,GAAAS,GAAA,GAAAP,KAIA,SAAAU,GAAA9B,EAAAC,GACAyB,GAAAp9C,KAAAq9C,IAAAT,GAAAlB,EAAAoB,GAAApB,IACAC,EAAAkB,QAAAlB,GACAA,EAAAoB,QAAApB,GAGA,SAAAmC,GAAApC,EAAAC,GACA,IAAArgD,EAAA8gD,IAAAV,EAAA7C,GAAA8C,EAAA9C,KACA,GAAAsE,GAAA,CACA,IAAAY,EAAAxB,GAAAY,GAAA7hD,GAEA0iD,EAAAzB,IADAwB,EAAA,IAAAA,EAAA,MACAA,GACApB,GAAAqB,GACAA,EAAA9B,GAAA8B,GACA,IAGAC,EAHA53C,EAAAq1C,EAAAsB,GACA3H,EAAAhvC,EAAA,OACA63C,EAAAF,EAAA,GAAApF,GAAAvD,EAEA8I,EAAA/1C,GAAA/B,GAAA,IACA83C,GAAA9I,EAAA2H,GAAAkB,KAAA7I,EAAAqG,IACAuC,EAAAD,EAAA,GAAApF,IACAmE,QAAAkB,GACKE,GAAA9I,EAAA2H,IAAAkB,KAAA,eAAAA,EAAA7I,EAAAqG,IACLuC,GAAAD,EAAA,GAAApF,IACAiE,QAAAoB,IAEAtC,EAAAkB,QAAAlB,GACAA,EAAAoB,QAAApB,IAEAwC,EACAzC,EAAAsB,GACAoB,GAAAxB,GAAAlB,GAAA0C,GAAAxB,GAAAE,SAAApB,GAEA0C,GAAA1C,EAAAoB,IAAAsB,GAAAxB,GAAAE,MAAAF,GAAAlB,GAGAoB,IAAAF,IACAlB,EAAAkB,QAAAlB,GACAA,EAAAoB,QAAApB,IAEAA,EAAAsB,GACAoB,GAAAxB,GAAAlB,GAAA0C,GAAAxB,GAAAE,SAAApB,GAEA0C,GAAA1C,EAAAoB,IAAAsB,GAAAxB,GAAAE,MAAAF,GAAAlB,QAKA0B,GAAAp9C,KAAAq9C,IAAAT,GAAAlB,EAAAoB,GAAApB,IAEAC,EAAAkB,QAAAlB,GACAA,EAAAoB,QAAApB,GACAwB,GAAA7hD,EAAA0hD,GAAAtB,EAGA,SAAA+B,KACAF,GAAApjC,MAAA2jC,GAGA,SAAAJ,KACAL,GAAA,GAAAT,GAAAS,GAAA,GAAAP,GACAS,GAAApjC,MAAAqjC,GACAL,GAAA,KAGA,SAAAQ,GAAAjC,EAAAC,GACA,GAAAwB,GAAA,CACA,IAAA92C,EAAAq1C,EAAAsB,GACAM,GAAA3pC,IAAAvL,GAAA/B,GAAA,IAAAA,KAAA,YAAAA,QAEA42C,GAAAvB,EAAAwB,GAAAvB,EAEAP,GAAAjhC,MAAAuhC,EAAAC,GACAmC,GAAApC,EAAAC,GAGA,SAAAiC,KACAxC,GAAAZ,YAGA,SAAAqD,KACAF,GAAAV,GAAAC,IACA9B,GAAAX,UACAryC,GAAAk1C,IAAA/E,KAAAqE,KAAAE,GAAA,MACAO,GAAA,GAAAT,GAAAS,GAAA,GAAAP,GACAK,GAAA,KAMA,SAAAiB,GAAAC,EAAAC,GACA,OAAAA,GAAAD,GAAA,EAAAC,EAAA,IAAAA,EAGA,SAAAC,GAAA96C,EAAAC,GACA,OAAAD,EAAA,GAAAC,EAAA,GAGA,SAAA86C,GAAA99C,EAAAhC,GACA,OAAAgC,EAAA,IAAAA,EAAA,GAAAA,EAAA,IAAAhC,MAAAgC,EAAA,GAAAhC,EAAAgC,EAAA,IAAAA,EAAA,GAAAhC,EAGA,ICxIA+/C,GAAAC,GACAC,GAAAC,GAAAC,GACAC,GAAAC,GAAAC,GACAC,GAAAC,GAAAC,GACAC,GAAAC,GACAC,GAAAC,GAAAC,GDmIAC,GAAA,SAAAC,GACA,IAAAlmD,EAAAyB,EAAAwI,EAAAC,EAAAmG,EAAA81C,EAAAt5C,EAOA,GALA02C,GAAAD,KAAAF,GAAAC,GAAAr+C,KACA4+C,MACAnC,GAAAyE,EAAAnC,IAGAtiD,EAAAmiD,GAAAh8C,OAAA,CAIA,IAHAg8C,GAAAn5C,KAAAs6C,IAGA/kD,EAAA,EAAAqQ,GAAApG,EAAA25C,GAAA,IAA4C5jD,EAAAyB,IAAOzB,EAEnDglD,GAAA/6C,GADAC,EAAA05C,GAAA5jD,IACA,KAAAglD,GAAA/6C,EAAAC,EAAA,KACA06C,GAAA36C,EAAA,GAAAC,EAAA,IAAA06C,GAAA36C,EAAA,GAAAA,EAAA,MAAAA,EAAA,GAAAC,EAAA,IACA06C,GAAA16C,EAAA,GAAAD,EAAA,IAAA26C,GAAA36C,EAAA,GAAAA,EAAA,MAAAA,EAAA,GAAAC,EAAA,KAEAmG,EAAA7J,KAAAyD,EAAAC,GAMA,IAAAi8C,GAAAnhD,IAAAhF,EAAA,EAAAiK,EAAAoG,EAAA5O,EAAA4O,EAAAzI,OAAA,GAA2E5H,GAAAyB,EAAQwI,EAAAC,IAAAlK,EACnFkK,EAAAmG,EAAArQ,IACA6M,EAAA+3C,GAAA36C,EAAA,GAAAC,EAAA,KAAAi8C,MAAAt5C,EAAAu2C,GAAAl5C,EAAA,GAAAo5C,GAAAr5C,EAAA,IAMA,OAFA25C,GAAAC,GAAA,KAEAT,KAAAp+C,KAAAq+C,KAAAr+C,MACA+F,sBACAq4C,GAAAC,KAAAC,GAAAC,MCnKA6C,IACAjG,OAAAT,GACA/+B,MAAA0lC,GACArF,UAAAsF,GACArF,QAAAsF,GACArF,aAAA,WACAkF,GAAApF,UAAAwF,GACAJ,GAAAnF,QAAAwF,IAEAtF,WAAA,WACAiF,GAAApF,UAAAsF,GACAF,GAAAnF,QAAAsF,KAKA,SAAAF,GAAAnE,EAAAC,GACAD,GAAA7C,GACA,IAAAkD,EAAAjD,GADA6C,GAAA9C,IAEAqH,GAAAnE,EAAAjD,GAAA4C,GAAAK,EAAAhD,GAAA2C,GAAA3C,GAAA4C,IAGA,SAAAuE,GAAAxhD,EAAAC,EAAAmsB,GAEA6zB,KAAAjgD,EAAAigD,MADAF,GAEAG,KAAAjgD,EAAAigD,IAAAH,GACAI,KAAA/zB,EAAA+zB,IAAAJ,GAGA,SAAAqB,KACAF,GAAAzlC,MAAAgmC,GAGA,SAAAA,GAAAzE,EAAAC,GACAD,GAAA7C,GACA,IAAAkD,EAAAjD,GADA6C,GAAA9C,IAEAyG,GAAAvD,EAAAjD,GAAA4C,GACA6D,GAAAxD,EAAAhD,GAAA2C,GACA8D,GAAAzG,GAAA4C,GACAiE,GAAAzlC,MAAAimC,GACAF,GAAAZ,GAAAC,GAAAC,IAGA,SAAAY,GAAA1E,EAAAC,GACAD,GAAA7C,GACA,IAAAkD,EAAAjD,GADA6C,GAAA9C,IAEAn6C,EAAAq9C,EAAAjD,GAAA4C,GACA/8C,EAAAo9C,EAAAhD,GAAA2C,GACA5wB,EAAAiuB,GAAA4C,GACAle,EAAApS,GAAAznB,IAAA65B,EAAA8hB,GAAAz0B,EAAA00B,GAAA7gD,GAAA8+B,KAAA+hB,GAAA9gD,EAAA4gD,GAAAx0B,GAAA2S,KAAA6hB,GAAA3gD,EAAA4gD,GAAA7gD,GAAA++B,GAAA6hB,GAAA5gD,EAAA6gD,GAAA5gD,EAAA6gD,GAAA10B,GACA4zB,IAAAjhB,EACAqhB,IAAArhB,GAAA6hB,OAAA5gD,IACAqgD,IAAAthB,GAAA8hB,OAAA5gD,IACAqgD,IAAAvhB,GAAA+hB,OAAA10B,IACAo1B,GAAAZ,GAAAC,GAAAC,IAGA,SAAAO,KACAH,GAAAzlC,MAAA0lC,GAKA,SAAAG,KACAJ,GAAAzlC,MAAAkmC,GAGA,SAAAJ,KACAK,GAAAlB,GAAAC,IACAO,GAAAzlC,MAAA0lC,GAGA,SAAAQ,GAAA3E,EAAAC,GACAyD,GAAA1D,EAAA2D,GAAA1D,EACAD,GAAA7C,GAAA8C,GAAA9C,GACA+G,GAAAzlC,MAAAmmC,GACA,IAAAvE,EAAAjD,GAAA6C,GACA2D,GAAAvD,EAAAjD,GAAA4C,GACA6D,GAAAxD,EAAAhD,GAAA2C,GACA8D,GAAAzG,GAAA4C,GACAuE,GAAAZ,GAAAC,GAAAC,IAGA,SAAAc,GAAA5E,EAAAC,GACAD,GAAA7C,GACA,IAAAkD,EAAAjD,GADA6C,GAAA9C,IAEAn6C,EAAAq9C,EAAAjD,GAAA4C,GACA/8C,EAAAo9C,EAAAhD,GAAA2C,GACA5wB,EAAAiuB,GAAA4C,GACA36C,EAAAu+C,GAAAz0B,EAAA00B,GAAA7gD,EACAsC,EAAAu+C,GAAA9gD,EAAA4gD,GAAAx0B,EACAy1B,EAAAjB,GAAA3gD,EAAA4gD,GAAA7gD,EACA9E,EAAAgK,GAAA5C,IAAAC,IAAAs/C,KACA9iB,EAAA3B,GAAAliC,GACA8M,EAAA9M,IAAA6jC,EAAA7jC,EACAqlD,IAAAv4C,EAAA1F,EACAk+C,IAAAx4C,EAAAzF,EACAk+C,IAAAz4C,EAAA65C,EACA7B,IAAAjhB,EACAqhB,IAAArhB,GAAA6hB,OAAA5gD,IACAqgD,IAAAthB,GAAA8hB,OAAA5gD,IACAqgD,IAAAvhB,GAAA+hB,OAAA10B,IACAo1B,GAAAZ,GAAAC,GAAAC,oBAGAtkD,GACAujD,GAAAC,GACAC,GAAAC,GAAAC,GACAC,GAAAC,GAAAC,GACAC,GAAAC,GAAAC,GAAA,EACAlE,GAAA//C,EAAA0kD,IAEA,IAAAlhD,EAAAugD,GACAtgD,EAAAugD,GACAp0B,EAAAq0B,GACAvlD,EAAA8E,IAAAC,IAAAmsB,IAGA,OAAAlxB,ENhIA,QMiIA8E,EAAAogD,GAAAngD,EAAAogD,GAAAj0B,EAAAk0B,GAEAN,GAAAnG,KAAA75C,EAAAigD,GAAAhgD,EAAAigD,GAAA9zB,EAAA+zB,KACAjlD,EAAA8E,IAAAC,IAAAmsB,KNpIA,QMsIAvmB,UAGA8mB,GAAA1sB,EAAAD,GAAAk6C,GAAA9c,GAAAhR,EAAAlnB,GAAAhK,IAAAg/C,KC1IA4H,GAAA,SAAA9hD,GACA,kBACA,OAAAA,ICFA+hD,GAAA,SAAAh9C,EAAAC,GAEA,SAAA+8C,EAAA/hD,EAAAC,GACA,OAAAD,EAAA+E,EAAA/E,EAAAC,GAAA+E,EAAAhF,EAAA,GAAAA,EAAA,IAOA,OAJA+E,EAAA/D,QAAAgE,EAAAhE,SAAA+gD,EAAA/gD,OAAA,SAAAhB,EAAAC,GACA,OAAAD,EAAAgF,EAAAhE,OAAAhB,EAAAC,KAAA8E,EAAA/D,OAAAhB,EAAA,GAAAA,EAAA,MAGA+hD,GCPA,SAAAC,GAAAhF,EAAAC,GACA,OAAAD,EAAAlD,GAAAkD,EAAA/C,GAAA+C,GAAAlD,GAAAkD,EAAA/C,GAAA+C,EAAAC,GAKA,SAAAgF,GAAAC,EAAAC,EAAAC,GACA,OAAAF,GAAAjI,IAAAkI,GAAAC,EAAAL,GAAAM,GAAAH,GAAAI,GAAAH,EAAAC,IACAC,GAAAH,GACAC,GAAAC,EAAAE,GAAAH,EAAAC,GACAJ,GAGA,SAAAO,GAAAL,GACA,gBAAAlF,EAAAC,GACA,QAAAD,GAAAkF,GAAApI,GAAAkD,EAAA/C,GAAA+C,GAAAlD,GAAAkD,EAAA/C,GAAA+C,EAAAC,IAIA,SAAAoF,GAAAH,GACA,IAAAM,EAAAD,GAAAL,GAEA,OADAM,EAAAxhD,OAAAuhD,IAAAL,GACAM,EAGA,SAAAF,GAAAH,EAAAC,GACA,IAAAK,EAAArI,GAAA+H,GACAO,EAAArI,GAAA8H,GACAQ,EAAAvI,GAAAgI,GACAQ,EAAAvI,GAAA+H,GAEA,SAAAI,EAAAxF,EAAAC,GACA,IAAAI,EAAAjD,GAAA6C,GACAj9C,EAAAo6C,GAAA4C,GAAAK,EACAp9C,EAAAo6C,GAAA2C,GAAAK,EACAjxB,EAAAiuB,GAAA4C,GACAj6C,EAAAopB,EAAAq2B,EAAAziD,EAAA0iD,EACA,OACA/1B,GAAA1sB,EAAA0iD,EAAA3/C,EAAA4/C,EAAA5iD,EAAAyiD,EAAAr2B,EAAAs2B,GACAtlB,GAAAp6B,EAAA2/C,EAAA1iD,EAAA2iD,IAgBA,OAZAJ,EAAAxhD,OAAA,SAAAg8C,EAAAC,GACA,IAAAI,EAAAjD,GAAA6C,GACAj9C,EAAAo6C,GAAA4C,GAAAK,EACAp9C,EAAAo6C,GAAA2C,GAAAK,EACAjxB,EAAAiuB,GAAA4C,GACAj6C,EAAAopB,EAAAu2B,EAAA1iD,EAAA2iD,EACA,OACAj2B,GAAA1sB,EAAA0iD,EAAAv2B,EAAAw2B,EAAA5iD,EAAAyiD,EAAAz/C,EAAA0/C,GACAtlB,GAAAp6B,EAAAy/C,EAAAziD,EAAA0iD,KAIAF,EAnDAR,GAAAhhD,OAAAghD,GAsDA,IAAAa,GAAA,SAAAhyB,GAGA,SAAAiyB,EAAAnY,GAEA,OADAA,EAAA9Z,EAAA8Z,EAAA,GAAAwP,GAAAxP,EAAA,GAAAwP,KACA,IAAAD,GAAAvP,EAAA,IAAAuP,GAAAvP,EAQA,OAZA9Z,EAAAoxB,GAAApxB,EAAA,GAAAspB,GAAAtpB,EAAA,GAAAspB,GAAAtpB,EAAAnuB,OAAA,EAAAmuB,EAAA,GAAAspB,GAAA,GAOA2I,EAAA9hD,OAAA,SAAA2pC,GAEA,OADAA,EAAA9Z,EAAA7vB,OAAA2pC,EAAA,GAAAwP,GAAAxP,EAAA,GAAAwP,KACA,IAAAD,GAAAvP,EAAA,IAAAuP,GAAAvP,GAGAmY,GCpEA,SAAAC,GAAArI,EAAAr4C,EAAAsF,EAAAq7C,EAAA7sB,EAAA1I,GACA,GAAA9lB,EAAA,CACA,IAAAs7C,EAAA7I,GAAA/3C,GACA6gD,EAAA7I,GAAAh4C,GACAoG,EAAAu6C,EAAAr7C,EACA,MAAAwuB,GACAA,EAAA9zB,EAAA2gD,EAAA/I,GACAxsB,EAAAprB,EAAAoG,EAAA,IAEA0tB,EAAA/4B,GAAA6lD,EAAA9sB,GACA1I,EAAArwB,GAAA6lD,EAAAx1B,IACAu1B,EAAA,EAAA7sB,EAAA1I,EAAA0I,EAAA1I,KAAA0I,GAAA6sB,EAAA/I,KAEA,QAAAx+B,EAAAzf,EAAAm6B,EAAyB6sB,EAAA,EAAAhnD,EAAAyxB,EAAAzxB,EAAAyxB,EAAiCzxB,GAAAyM,EAC1DgT,EAAA+hC,IAAAyF,GAAAC,EAAA9I,GAAAp+C,IAAAknD,EAAA7I,GAAAr+C,KACA0+C,EAAAj/B,QAAA,GAAAA,EAAA,KAKA,SAAAre,GAAA6lD,EAAAxnC,IACAA,EAAAiiC,GAAAjiC,IAAA,IAAAwnC,EACAhF,GAAAxiC,GACA,IAAApZ,EAAAmjC,IAAA/pB,EAAA,IACA,SAAAA,EAAA,MAAApZ,KAAA43C,GAAAJ,IAAAI,GAGA,IAAAkJ,GAAA,WACA,IAGApa,EACAlY,EAJAuyB,EAAAtB,IAAA,MACAz/C,EAAAy/C,GAAA,IACA/K,EAAA+K,GAAA,GAGApH,GAAgBj/B,MAEhB,SAAAzb,EAAAC,GACA8oC,EAAAznC,KAAAtB,EAAA6wB,EAAA7wB,EAAAC,IACAD,EAAA,IAAAk6C,GAAAl6C,EAAA,IAAAk6C,KAGA,SAAA74C,IACA,IAAAlG,EAAAioD,EAAAx1C,MAAArP,KAAAkE,WACA7G,EAAAyG,EAAAuL,MAAArP,KAAAkE,WAAA03C,GACAv9C,EAAAm6C,EAAAnpC,MAAArP,KAAAkE,WAAA03C,GAMA,OALApR,KACAlY,EAAAoxB,IAAA9mD,EAAA,GAAAg/C,IAAAh/C,EAAA,GAAAg/C,GAAA,GAAAn5C,OACA+hD,GAAArI,EAAA9+C,EAAAgB,EAAA,GACAzB,GAAS+E,KAAA,UAAAyqC,aAAA5B,IACTA,EAAAlY,EAAA,KACA11B,EAeA,OAZAkG,EAAA+hD,OAAA,SAAA54C,GACA,OAAA/H,UAAAC,QAAA0gD,EAAA,mBAAA54C,IAAAs3C,KAAAt3C,EAAA,IAAAA,EAAA,KAAAnJ,GAAA+hD,GAGA/hD,EAAAgB,OAAA,SAAAmI,GACA,OAAA/H,UAAAC,QAAAL,EAAA,mBAAAmI,IAAAs3C,IAAAt3C,GAAAnJ,GAAAgB,GAGAhB,EAAA01C,UAAA,SAAAvsC,GACA,OAAA/H,UAAAC,QAAAq0C,EAAA,mBAAAvsC,IAAAs3C,IAAAt3C,GAAAnJ,GAAA01C,GAGA11C,GCpEAgiD,GAAA,WACA,IACAx0C,EADAy0C,KAEA,OACA7nC,MAAA,SAAAzb,EAAAC,GACA4O,EAAAvN,MAAAtB,EAAAC,KAEA67C,UAAA,WACAwH,EAAAhiD,KAAAuN,OAEAktC,QAAAvB,GACA+I,OAAA,WACAD,EAAA5gD,OAAA,GAAA4gD,EAAAhiD,KAAAgiD,EAAAj5C,MAAA9J,OAAA+iD,EAAAl5C,WAEA/K,OAAA,WACA,IAAAA,EAAAikD,EAGA,OAFAA,KACAz0C,EAAA,KACAxP,KClBAmkD,GAAA,SAAAz+C,EAAAC,GACA,OAAA0E,GAAA3E,EAAA,GAAAC,EAAA,IAAA60C,IAAAnwC,GAAA3E,EAAA,GAAAC,EAAA,IAAA60C,ICDA,SAAA4J,GAAAhoC,EAAAmB,EAAA8mC,EAAA9jD,GACArB,KAAAyB,EAAAyb,EACAld,KAAA6tB,EAAAxP,EACAre,KAAAhD,EAAAmoD,EACAnlD,KAAAkC,EAAAb,EACArB,KAAAyJ,GAAA,EACAzJ,KAAAhC,EAAAgC,KAAA3B,EAAA,KAMA,IAAA2mD,GAAA,SAAAI,EAAAC,EAAAC,EAAAtvB,EAAAmmB,GACA,IAEA5/C,EACAyB,EAHAmhB,KACAomC,KAwBA,GApBAH,EAAAxiD,QAAA,SAAA4iD,GACA,MAAAxnD,EAAAwnD,EAAArhD,OAAA,QACA,IAAAnG,EAAAyD,EAAAwf,EAAAukC,EAAA,GAAAzxB,EAAAyxB,EAAAxnD,GAKA,GAAAinD,GAAAhkC,EAAA8S,GAAA,CAEA,IADAooB,EAAAoB,YACAhhD,EAAA,EAAiBA,EAAAyB,IAAOzB,EAAA4/C,EAAAj/B,OAAA+D,EAAAukC,EAAAjpD,IAAA,GAAA0kB,EAAA,IACxBk7B,EAAAqB,eAIAr+B,EAAApc,KAAAtB,EAAA,IAAAyjD,GAAAjkC,EAAAukC,EAAA,UACAD,EAAAxiD,KAAAtB,EAAAzE,EAAA,IAAAkoD,GAAAjkC,EAAA,KAAAxf,GAAA,IACA0d,EAAApc,KAAAtB,EAAA,IAAAyjD,GAAAnxB,EAAAyxB,EAAA,UACAD,EAAAxiD,KAAAtB,EAAAzE,EAAA,IAAAkoD,GAAAnxB,EAAA,KAAAtyB,GAAA,OAGA0d,EAAAhb,OAAA,CAMA,IAJAohD,EAAAv+C,KAAAq+C,GACAI,GAAAtmC,GACAsmC,GAAAF,GAEAhpD,EAAA,EAAAyB,EAAAunD,EAAAphD,OAA8B5H,EAAAyB,IAAOzB,EACrCgpD,EAAAhpD,GAAA2F,EAAAojD,KAOA,IAJA,IACAjnC,EACAnB,EAFAlT,EAAAmV,EAAA,KAIA,CAIA,IAFA,IAAArC,EAAA9S,EACA07C,GAAA,EACA5oC,EAAArT,GAAA,IAAAqT,IAAA9e,KAAAgM,EAAA,OACAqU,EAAAvB,EAAA+Q,EACAsuB,EAAAoB,YACA,GAEA,GADAzgC,EAAArT,EAAAqT,EAAA9f,EAAAyM,GAAA,EACAqT,EAAA5a,EAAA,CACA,GAAAwjD,EACA,IAAAnpD,EAAA,EAAAyB,EAAAqgB,EAAAla,OAAwC5H,EAAAyB,IAAOzB,EAAA4/C,EAAAj/B,SAAAmB,EAAA9hB,IAAA,GAAA2gB,EAAA,SAE/C8Y,EAAAlZ,EAAArb,EAAAqb,EAAA9e,EAAAyD,EAAA,EAAA06C,GAEAr/B,IAAA9e,MACO,CACP,GAAA0nD,EAEA,IADArnC,EAAAvB,EAAAze,EAAAwvB,EACAtxB,EAAA8hB,EAAAla,OAAA,EAAqC5H,GAAA,IAAQA,EAAA4/C,EAAAj/B,SAAAmB,EAAA9hB,IAAA,GAAA2gB,EAAA,SAE7C8Y,EAAAlZ,EAAArb,EAAAqb,EAAAze,EAAAoD,GAAA,EAAA06C,GAEAr/B,IAAAze,EAGAggB,GADAvB,IAAA9f,GACA6wB,EACA63B,YACK5oC,EAAArT,GACL0yC,EAAAqB,aAIA,SAAAiI,GAAAp9C,GACA,GAAArK,EAAAqK,EAAAlE,OAAA,CAKA,IAJA,IAAAnG,EAGAyI,EAFAlK,EAAA,EACAiK,EAAA6B,EAAA,KAEA9L,EAAAyB,GACAwI,EAAAxI,EAAAyI,EAAA4B,EAAA9L,GACAkK,EAAApI,EAAAmI,EACAA,EAAAC,EAEAD,EAAAxI,EAAAyI,EAAA4B,EAAA,GACA5B,EAAApI,EAAAmI,GC/FA,IAAAm/C,GAAA5K,KAEA6K,GAAA,SAAAzZ,EAAAjvB,GACA,IAAAuhC,EAAAvhC,EAAA,GACAwhC,EAAAxhC,EAAA,GACA6hC,EAAAjD,GAAA4C,GACAoC,GAAAhF,GAAA2C,IAAA5C,GAAA4C,GAAA,GACA5H,EAAA,EACAgP,EAAA,EAEAF,GAAA1K,QAEA,IAAA8D,EAAAL,EAAAlD,GAAAF,IACA,IAAAyD,IAAAL,GAAAlD,GAAAF,IAEA,QAAA/+C,EAAA,EAAAyB,EAAAmuC,EAAAhoC,OAAqC5H,EAAAyB,IAAOzB,EAC5C,GAAAI,GAAA6tC,EAAA2B,EAAA5vC,IAAA4H,OASA,IARA,IAAAqmC,EACA7tC,EACAymC,EAAAoH,EAAA7tC,EAAA,GACAykD,EAAAhe,EAAA,GACA0iB,EAAA1iB,EAAA,KAAAqY,GACAsK,EAAAjK,GAAAgK,GACAE,EAAAnK,GAAAiK,GAEAj5C,EAAA,EAAmBA,EAAAlQ,IAAOkQ,EAAAu0C,EAAAC,EAAA0E,EAAAE,EAAAD,EAAAE,EAAA9iB,EAAAM,EAAA,CAC1B,IAAAA,EAAA8G,EAAA39B,GACAw0C,EAAA3d,EAAA,GACAyiB,EAAAziB,EAAA,KAAA+X,GACAwK,EAAAnK,GAAAqK,GACAD,EAAArK,GAAAsK,GACA/8C,EAAAi4C,EAAAD,EACAhJ,EAAAhvC,GAAA,OACAg9C,EAAAhO,EAAAhvC,EACA83C,EAAAkF,EAAA7K,GACA92C,EAAAshD,EAAAE,EAOA,GALAN,GAAAjvC,IAAA0X,GAAA3pB,EAAA2zC,EAAA0D,GAAAsK,GAAAJ,EAAAE,EAAAzhD,EAAAo3C,GAAAuK,KACAvP,GAAAqK,EAAA93C,EAAAgvC,EAAAsD,GAAAtyC,EAIA83C,EAAAE,GAAA3C,EAAA4C,GAAA5C,EAAA,CACA,IAAArX,EAAAkY,GAAAH,GAAA/b,GAAA+b,GAAAzb,IACAgc,GAAAtY,GACA,IAAAif,EAAA/G,GAAAwB,EAAA1Z,GACAsY,GAAA2G,GACA,IAAAC,GAAApF,EAAA93C,GAAA,QAAAy1B,GAAAwnB,EAAA,KACA3H,EAAA4H,GAAA5H,IAAA4H,IAAAlf,EAAA,IAAAA,EAAA,OACAye,GAAA3E,EAAA93C,GAAA,SAiBA,OAAAytC,GAAAyE,IAAAzE,EAAAyE,IAAAqK,IAAArK,IAAA,EAAAuK,GChEAU,GAAA,SAAAC,EAAAC,EAAAzwB,EAAAhsB,GACA,gBAAA08C,GACA,IAIAva,EACAiZ,EACA5a,EANAl6B,EAAAm2C,EAAAC,GACAC,EAAA7B,KACA8B,EAAAH,EAAAE,GACAE,GAAA,EAKAtB,GACAroC,QACAqgC,YACAC,UACAC,aAAA,WACA8H,EAAAroC,MAAA4pC,EACAvB,EAAAhI,UAAAwJ,EACAxB,EAAA/H,QAAAwJ,EACA5B,KACAjZ,MAEAuR,WAAA,WACA6H,EAAAroC,QACAqoC,EAAAhI,YACAgI,EAAA/H,UACA4H,EAAA14C,EAAA04C,GACA,IAAAE,EAAAM,GAAAzZ,EAAAniC,GACAo7C,EAAAjhD,QACA0iD,IAAAH,EAAAjJ,eAAAoJ,GAAA,GACA7B,GAAAI,EAAA6B,GAAA3B,EAAAtvB,EAAA0wB,IACSpB,IACTuB,IAAAH,EAAAjJ,eAAAoJ,GAAA,GACAH,EAAAnJ,YACAvnB,EAAA,YAAA0wB,GACAA,EAAAlJ,WAEAqJ,IAAAH,EAAAhJ,aAAAmJ,GAAA,GACAzB,EAAAjZ,EAAA,MAEAuQ,OAAA,WACAgK,EAAAjJ,eACAiJ,EAAAnJ,YACAvnB,EAAA,YAAA0wB,GACAA,EAAAlJ,UACAkJ,EAAAhJ,eAIA,SAAAxgC,EAAAuhC,EAAAC,GACA8H,EAAA/H,EAAAC,IAAAgI,EAAAxpC,MAAAuhC,EAAAC,GAGA,SAAAwI,EAAAzI,EAAAC,GACApuC,EAAA4M,MAAAuhC,EAAAC,GAGA,SAAAnB,IACAgI,EAAAroC,MAAAgqC,EACA52C,EAAAitC,YAGA,SAAAC,IACA+H,EAAAroC,QACA5M,EAAAktC,UAGA,SAAAsJ,EAAArI,EAAAC,GACAlU,EAAAznC,MAAA07C,EAAAC,IACAkI,EAAA1pC,MAAAuhC,EAAAC,GAGA,SAAAqI,IACAH,EAAArJ,YACA/S,KAGA,SAAAwc,IACAF,EAAAtc,EAAA,MAAAA,EAAA,OACAoc,EAAApJ,UAEA,IAEAjhD,EAAAI,EACA6oD,EACAtoC,EAJAiqC,EAAAP,EAAAO,QACAC,EAAAT,EAAA7lD,SACA9C,EAAAopD,EAAAjjD,OAQA,GAJAqmC,EAAA1+B,MACAqgC,EAAAppC,KAAAynC,GACAA,EAAA,KAEAxsC,EAGA,KAAAmpD,GAEA,IAAAxqD,GADA6oD,EAAA4B,EAAA,IACAjjD,OAAA,MAGA,IAFA0iD,IAAAH,EAAAjJ,eAAAoJ,GAAA,GACAH,EAAAnJ,YACAhhD,EAAA,EAAqBA,EAAAI,IAAOJ,EAAAmqD,EAAAxpC,SAAAsoC,EAAAjpD,IAAA,GAAA2gB,EAAA,IAC5BwpC,EAAAlJ,gBAOAx/C,EAAA,KAAAmpD,GAAAC,EAAArkD,KAAAqkD,EAAAt7C,MAAA9J,OAAAolD,EAAAv7C,UAEAu5C,EAAAriD,KAAAqkD,EAAAtgD,OAAAugD,KAGA,OAAA9B,IAIA,SAAA8B,GAAA7B,GACA,OAAAA,EAAArhD,OAAA,EAKA,SAAA8iD,GAAAzgD,EAAAC,GACA,QAAAD,IAAA/E,GAAA,KAAA+E,EAAA,GAAAg1C,GAAAF,GAAAE,GAAAh1C,EAAA,MACAC,IAAAhF,GAAA,KAAAgF,EAAA,GAAA+0C,GAAAF,GAAAE,GAAA/0C,EAAA,WC9HA8/C,GACA,WAAc,UASd,SAAApK,GACA,IAGAgL,EAHA/F,EAAA95C,IACAw+C,EAAAx+C,IACAggD,EAAAhgD,IAGA,OACAi2C,UAAA,WACApB,EAAAoB,YACA4J,EAAA,GAEAjqC,MAAA,SAAAmkC,EAAA8E,GACA,IAAAoB,EAAAlG,EAAA,EAAA9F,OACAnyC,EAAA+B,GAAAk2C,EAAAD,GACAj2C,GAAA/B,EAAAmyC,IAAAD,IACAa,EAAAj/B,MAAAkkC,EAAA0E,KAAAK,GAAA,IAAA3K,QACAW,EAAAj/B,MAAAoqC,EAAAxB,GACA3J,EAAAqB,UACArB,EAAAoB,YACApB,EAAAj/B,MAAAqqC,EAAAzB,GACA3J,EAAAj/B,MAAAmkC,EAAAyE,GACAqB,EAAA,GACOG,IAAAC,GAAAn+C,GAAAmyC,KACPpwC,GAAAi2C,EAAAkG,GAAAhM,KAAA8F,GAAAkG,EAAAhM,IACAnwC,GAAAk2C,EAAAkG,GAAAjM,KAAA+F,GAAAkG,EAAAjM,IACAwK,EAoBA,SAAA1E,EAAA0E,EAAAzE,EAAA8E,GACA,IAAAH,EACAE,EACAsB,EAAA1L,GAAAsF,EAAAC,GACA,OAAAl2C,GAAAq8C,GAAAlM,GACA3oB,IAAAmpB,GAAAgK,IAAAI,EAAArK,GAAAsK,IAAArK,GAAAuF,GACAvF,GAAAqK,IAAAH,EAAAnK,GAAAiK,IAAAhK,GAAAsF,KACA4E,EAAAE,EAAAsB,KACA1B,EAAAK,GAAA,EA5BAsB,CAAArG,EAAA0E,EAAAzE,EAAA8E,GACAhK,EAAAj/B,MAAAoqC,EAAAxB,GACA3J,EAAAqB,UACArB,EAAAoB,YACApB,EAAAj/B,MAAAqqC,EAAAzB,GACAqB,EAAA,GAEAhL,EAAAj/B,MAAAkkC,EAAAC,EAAAyE,EAAAK,GACAmB,EAAAC,GAEA/J,QAAA,WACArB,EAAAqB,UACA4D,EAAA0E,EAAAx+C,KAEA6/C,MAAA,WACA,SAAAA,KAgBA,SAAAO,EAAAC,EAAAlD,EAAAtI,GACA,IAAAuC,EACA,SAAAgJ,EACAhJ,EAAA+F,EAAAjJ,GACAW,EAAAj/B,OAAAq+B,GAAAmD,GACAvC,EAAAj/B,MAAA,EAAAwhC,GACAvC,EAAAj/B,MAAAq+B,GAAAmD,GACAvC,EAAAj/B,MAAAq+B,GAAA,GACAY,EAAAj/B,MAAAq+B,IAAAmD,GACAvC,EAAAj/B,MAAA,GAAAwhC,GACAvC,EAAAj/B,OAAAq+B,IAAAmD,GACAvC,EAAAj/B,OAAAq+B,GAAA,GACAY,EAAAj/B,OAAAq+B,GAAAmD,QACG,GAAAvzC,GAAAu8C,EAAA,GAAAC,EAAA,IAAArM,GAAA,CACH,IAAAmD,EAAAiJ,EAAA,GAAAC,EAAA,GAAApM,OACAmD,EAAA+F,EAAAhG,EAAA,EACAtC,EAAAj/B,OAAAuhC,EAAAC,GACAvC,EAAAj/B,MAAA,EAAAwhC,GACAvC,EAAAj/B,MAAAuhC,EAAAC,QAEAvC,EAAAj/B,MAAAyqC,EAAA,GAAAA,EAAA,OAlFApM,IAAAC,KCDA,IAAAoM,GAAA,SAAA9jD,GACA,IAAA+jD,EAAAhM,GAAA/3C,GACAsF,EAAA,EAAAwyC,GACAkM,EAAAD,EAAA,EACAE,EAAA58C,GAAA08C,GAAAvM,GAMA,SAAA0M,EAAAvJ,EAAAC,GACA,OAAA7C,GAAA4C,GAAA5C,GAAA6C,GAAAmJ,EAuFA,SAAAI,EAAAzhD,EAAAC,EAAAyhD,GACA,IAKAp/C,GAAA,OACAq/C,EAAA7I,GANAH,GAAA34C,GACA24C,GAAA14C,IAMA2hD,EAAA/I,GAAA8I,KACAE,EAAAF,EAAA,GACAG,EAAAF,EAAAC,IAGA,IAAAC,EAAA,OAAAJ,GAAA1hD,EAEA,IAAA+hD,EAAAV,EAAAO,EAAAE,EACAE,GAAAX,EAAAQ,EAAAC,EACAG,EAAAnJ,GAAAx2C,EAAAq/C,GACAjpD,EAAAsgD,GAAA12C,EAAAy/C,GAEAhJ,GAAArgD,EADAsgD,GAAA2I,EAAAK,IAIA,IAAA1zB,EAAA2zB,EACAjoB,EAAA6e,GAAAngD,EAAA41B,GACA4zB,EAAArJ,GAAAvqB,KACAvF,EAAAiR,IAAAkoB,GAAArJ,GAAAngD,KAAA,GAEA,KAAAqwB,EAAA,IAEA,IAAA9xB,EAAAkJ,GAAA4oB,GACAuC,EAAA0tB,GAAA1qB,IAAA0L,EAAA/iC,GAAAirD,GAIA,GAHAnJ,GAAAztB,EAAA5yB,GACA4yB,EAAAmtB,GAAAntB,IAEAo2B,EAAA,OAAAp2B,EAGA,IAIAjE,EAJAuzB,EAAA56C,EAAA,GACA66C,EAAA56C,EAAA,GACAq/C,EAAAt/C,EAAA,GACA2/C,EAAA1/C,EAAA,GAGA46C,EAAAD,IAAAvzB,EAAAuzB,IAAAC,IAAAxzB,GAEA,IAAAzkB,EAAAi4C,EAAAD,EACAuH,EAAAx9C,GAAA/B,EAAAmyC,IAAAD,GAMA,IAHAqN,GAAAxC,EAAAL,IAAAj4B,EAAAi4B,IAAAK,IAAAt4B,GAFA86B,GAAAv/C,EAAAkyC,GAMAqN,EACA7C,EAAAK,EAAA,EAAAr0B,EAAA,IAAA3mB,GAAA2mB,EAAA,GAAAsvB,GAAA9F,GAAAwK,EAAAK,GACAL,GAAAh0B,EAAA,IAAAA,EAAA,IAAAq0B,EACA/8C,EAAAmyC,IAAA6F,GAAAtvB,EAAA,IAAAA,EAAA,IAAAuvB,GAAA,CACA,IAAAuH,EAAApJ,GAAA1qB,IAAA0L,EAAA/iC,GAAAirD,GAEA,OADAnJ,GAAAqJ,EAAA1pD,IACA4yB,EAAAmtB,GAAA2J,MAMA,SAAAC,EAAApK,EAAAC,GACA,IAAArhD,EAAAyqD,EAAAhkD,EAAAy3C,GAAAz3C,EACA+kD,EAAA,EAKA,OAJApK,GAAAphD,EAAAwrD,GAAA,EACApK,EAAAphD,IAAAwrD,GAAA,GACAnK,GAAArhD,EAAAwrD,GAAA,EACAnK,EAAArhD,IAAAwrD,GAAA,GACAA,EAGA,OAAAtC,GAAAyB,EA5JA,SAAA7L,GACA,IAAA/Y,EACA0lB,EACA35B,EACA45B,EACA5B,EACA,OACA5J,UAAA,WACAwL,EAAA55B,GAAA,EACAg4B,EAAA,GAEAjqC,MAAA,SAAAuhC,EAAAC,GACA,IACAsK,EADAtlB,GAAA+a,EAAAC,GAEAj1C,EAAAu+C,EAAAvJ,EAAAC,GACA9hD,EAAAkrD,EACAr+C,EAAA,EAAAo/C,EAAApK,EAAAC,GACAj1C,EAAAo/C,EAAApK,KAAA,EAAAlD,QAAAmD,GAAA,EAYA,IAXAtb,IAAA2lB,EAAA55B,EAAA1lB,IAAA0yC,EAAAoB,YAGA9zC,IAAA0lB,MACA65B,EAAAf,EAAA7kB,EAAAM,KACAuhB,GAAA7hB,EAAA4lB,IAAA/D,GAAAvhB,EAAAslB,MACAtlB,EAAA,IAAA4X,GACA5X,EAAA,IAAA4X,GACA7xC,EAAAu+C,EAAAtkB,EAAA,GAAAA,EAAA,KAGAj6B,IAAA0lB,EACAg4B,EAAA,EACA19C,GAEA0yC,EAAAoB,YACAyL,EAAAf,EAAAvkB,EAAAN,GACA+Y,EAAAj/B,MAAA8rC,EAAA,GAAAA,EAAA,MAGAA,EAAAf,EAAA7kB,EAAAM,GACAyY,EAAAj/B,MAAA8rC,EAAA,GAAAA,EAAA,IACA7M,EAAAqB,WAEApa,EAAA4lB,OACS,GAAAjB,GAAA3kB,GAAA0kB,EAAAr+C,EAAA,CACT,IAAAhM,EAGAb,EAAAksD,KAAArrD,EAAAwqD,EAAAvkB,EAAAN,GAAA,MACA+jB,EAAA,EACAW,GACA3L,EAAAoB,YACApB,EAAAj/B,MAAAzf,EAAA,MAAAA,EAAA,OACA0+C,EAAAj/B,MAAAzf,EAAA,MAAAA,EAAA,OACA0+C,EAAAqB,YAEArB,EAAAj/B,MAAAzf,EAAA,MAAAA,EAAA,OACA0+C,EAAAqB,UACArB,EAAAoB,YACApB,EAAAj/B,MAAAzf,EAAA,MAAAA,EAAA,UAIAgM,GAAA25B,GAAA6hB,GAAA7hB,EAAAM,IACAyY,EAAAj/B,MAAAwmB,EAAA,GAAAA,EAAA,IAEAN,EAAAM,EAAAvU,EAAA1lB,EAAAq/C,EAAAlsD,GAEA4gD,QAAA,WACAruB,GAAAgtB,EAAAqB,UACApa,EAAA,MAIA+jB,MAAA,WACA,OAAAA,GAAA4B,GAAA55B,IAAA,KAtFA,SAAAu4B,EAAAC,EAAAlD,EAAAtI,GACAqI,GAAArI,EAAAr4C,EAAAsF,EAAAq7C,EAAAiD,EAAAC,IAuKAG,GAAA,GAAAhkD,KAAAy3C,GAAAz3C,EAAAy3C,MCpLA0N,GAAA,SAAAziD,EAAAC,EAAAkF,EAAA06B,EAAArgC,EAAAE,GACA,IAQA7I,EARA6rD,EAAA1iD,EAAA,GACA2iD,EAAA3iD,EAAA,GAGAoxB,EAAA,EACA1I,EAAA,EACA7P,EAJA5Y,EAAA,GAIAyiD,EACA5pC,EAJA7Y,EAAA,GAIA0iD,EAIA,GADA9rD,EAAAsO,EAAAu9C,EACA7pC,KAAAhiB,EAAA,IAEA,GADAA,GAAAgiB,EACAA,EAAA,GACA,GAAAhiB,EAAAu6B,EAAA,OACAv6B,EAAA6xB,MAAA7xB,QACG,GAAAgiB,EAAA,GACH,GAAAhiB,EAAA6xB,EAAA,OACA7xB,EAAAu6B,MAAAv6B,GAIA,GADAA,EAAA2I,EAAAkjD,EACA7pC,KAAAhiB,EAAA,IAEA,GADAA,GAAAgiB,EACAA,EAAA,GACA,GAAAhiB,EAAA6xB,EAAA,OACA7xB,EAAAu6B,MAAAv6B,QACG,GAAAgiB,EAAA,GACH,GAAAhiB,EAAAu6B,EAAA,OACAv6B,EAAA6xB,MAAA7xB,GAIA,GADAA,EAAAgpC,EAAA8iB,EACA7pC,KAAAjiB,EAAA,IAEA,GADAA,GAAAiiB,EACAA,EAAA,GACA,GAAAjiB,EAAAu6B,EAAA,OACAv6B,EAAA6xB,MAAA7xB,QACG,GAAAiiB,EAAA,GACH,GAAAjiB,EAAA6xB,EAAA,OACA7xB,EAAAu6B,MAAAv6B,GAIA,GADAA,EAAA6I,EAAAijD,EACA7pC,KAAAjiB,EAAA,IAEA,GADAA,GAAAiiB,EACAA,EAAA,GACA,GAAAjiB,EAAA6xB,EAAA,OACA7xB,EAAAu6B,MAAAv6B,QACG,GAAAiiB,EAAA,GACH,GAAAjiB,EAAAu6B,EAAA,OACAv6B,EAAA6xB,MAAA7xB,GAKA,OAFAu6B,EAAA,IAAApxB,EAAA,GAAA0iD,EAAAtxB,EAAAvY,EAAA7Y,EAAA,GAAA2iD,EAAAvxB,EAAAtY,GACA4P,EAAA,IAAAzoB,EAAA,GAAAyiD,EAAAh6B,EAAA7P,EAAA5Y,EAAA,GAAA0iD,EAAAj6B,EAAA5P,IACA,OCnDA8pC,GAAA,IAAAC,IAAAD,GAKA,SAAAE,GAAA39C,EAAA06B,EAAArgC,EAAAE,GAEA,SAAA8hD,EAAAvmD,EAAAC,GACA,OAAAiK,GAAAlK,MAAAuE,GAAAqgC,GAAA3kC,MAAAwE,EAGA,SAAA8vB,EAAA0xB,EAAAC,EAAAlD,EAAAtI,GACA,IAAA31C,EAAA,EAAAu+B,EAAA,EACA,SAAA2iB,IACAlhD,EAAA+iD,EAAA7B,EAAAjD,OAAA1f,EAAAwkB,EAAA5B,EAAAlD,KACA+E,EAAA9B,EAAAC,GAAA,EAAAlD,EAAA,EACA,GAAAtI,EAAAj/B,MAAA,IAAA1W,GAAA,IAAAA,EAAAmF,EAAA3F,EAAAQ,EAAA,EAAAN,EAAAmgC,UACA7/B,KAAAi+C,EAAA,QAAA1f,QAEAoX,EAAAj/B,MAAAyqC,EAAA,GAAAA,EAAA,IAIA,SAAA4B,EAAAlrD,EAAAomD,GACA,OAAAt5C,GAAA9M,EAAA,GAAAsN,GAAA2vC,GAAAmJ,EAAA,MACAt5C,GAAA9M,EAAA,GAAA2H,GAAAs1C,GAAAmJ,EAAA,MACAt5C,GAAA9M,EAAA,GAAAgoC,GAAAiV,GAAAmJ,EAAA,MACAA,EAAA,MAGA,SAAAY,EAAA7+C,EAAAC,GACA,OAAA+iD,EAAAhjD,EAAA/E,EAAAgF,EAAAhF,GAGA,SAAA+nD,EAAAhjD,EAAAC,GACA,IAAAgjD,EAAAF,EAAA/iD,EAAA,GACAkjD,EAAAH,EAAA9iD,EAAA,GACA,OAAAgjD,IAAAC,EAAAD,EAAAC,EACA,IAAAD,EAAAhjD,EAAA,GAAAD,EAAA,GACA,IAAAijD,EAAAjjD,EAAA,GAAAC,EAAA,GACA,IAAAgjD,EAAAjjD,EAAA,GAAAC,EAAA,GACAA,EAAA,GAAAD,EAAA,GAGA,gBAAA21C,GACA,IAEAiJ,EACAjZ,EACA3B,EACAmf,EAAAC,EAAAC,EACAC,EAAAC,EAAAC,EACAC,EACA9C,EARA+C,EAAA/N,EACAgO,EAAArF,KASAsF,GACAltC,QACAqgC,UAgDA,WACA6M,EAAAltC,MAAAmtC,EACAle,KAAAppC,KAAAynC,MACAyf,GAAA,EACAD,GAAA,EACAF,EAAAC,EAAAziD,KApDAk2C,QA0DA,WACA4H,IACAiF,EAAAV,EAAAC,GACAC,GAAAG,GAAAG,EAAAnF,SACAI,EAAAriD,KAAAonD,EAAArpD,WAEAspD,EAAAltC,QACA8sC,GAAAE,EAAA1M,WAhEAC,aAuBA,WACAyM,EAAAC,EAAA/E,KAAAjZ,KAAAgb,GAAA,GAvBAzJ,WA0BA,WACA,IAAA4H,EApBA,WAGA,IAFA,IAAAO,EAAA,EAEAtpD,EAAA,EAAAyB,EAAAmuC,EAAAhoC,OAAyC5H,EAAAyB,IAAOzB,EAChD,QAAAuoC,EAAAC,EAAAyF,EAAA2B,EAAA5vC,GAAAsQ,EAAA,EAAAlQ,EAAA6tC,EAAArmC,OAAA+Y,EAAAstB,EAAA,GAAA/V,EAAAvX,EAAA,GAAAwX,EAAAxX,EAAA,GAAkHrQ,EAAAlQ,IAAOkQ,EACzHi4B,EAAArQ,EAAAsQ,EAAArQ,EAAAxX,EAAAstB,EAAA39B,GAAA4nB,EAAAvX,EAAA,GAAAwX,EAAAxX,EAAA,GACA6nB,GAAA7+B,EAAyBwuB,EAAAxuB,IAAAuuB,EAAAqQ,IAAA5+B,EAAA6+B,IAAArQ,EAAAqQ,IAAAp5B,EAAAm5B,MAAA+gB,EACTnxB,GAAAxuB,IAAAuuB,EAAAqQ,IAAA5+B,EAAA6+B,IAAArQ,EAAAqQ,IAAAp5B,EAAAm5B,MAAA+gB,EAIhB,OAAAA,EASAyE,GACAC,EAAApD,GAAA7B,EACA0C,GAAA5C,EAAA14C,EAAA04C,IAAAjhD,QACAomD,GAAAvC,KACA7L,EAAAsB,eACA8M,IACApO,EAAAoB,YACAvnB,EAAA,YAAAmmB,GACAA,EAAAqB,WAEAwK,GACAhD,GAAAI,EAAAC,EAAAC,EAAAtvB,EAAAmmB,GAEAA,EAAAuB,cAEAwM,EAAA/N,EAAAiJ,EAAAjZ,EAAA3B,EAAA,OAvCA,SAAAttB,EAAAzb,EAAAC,GACAsmD,EAAAvmD,EAAAC,IAAAwoD,EAAAhtC,MAAAzb,EAAAC,GA8DA,SAAA2oD,EAAA5oD,EAAAC,GACA,IAAA+H,EAAAu+C,EAAAvmD,EAAAC,GAEA,GADAyqC,GAAA3B,EAAAznC,MAAAtB,EAAAC,IACAuoD,EACAN,EAAAloD,EAAAmoD,EAAAloD,EAAAmoD,EAAApgD,EACAwgD,GAAA,EACAxgD,IACAygD,EAAA3M,YACA2M,EAAAhtC,MAAAzb,EAAAC,SAGA,GAAA+H,GAAAugD,EAAAE,EAAAhtC,MAAAzb,EAAAC,OACA,CACA,IAAA8E,GAAAsjD,EAAApjD,KAAAlD,IAAA6lD,GAAA3iD,KAAAnD,IAAA6lD,GAAAU,IAAAC,EAAArjD,KAAAlD,IAAA6lD,GAAA3iD,KAAAnD,IAAA6lD,GAAAW,KACAtjD,GAAAhF,EAAAiF,KAAAlD,IAAA6lD,GAAA3iD,KAAAnD,IAAA6lD,GAAA3nD,IAAAC,EAAAgF,KAAAlD,IAAA6lD,GAAA3iD,KAAAnD,IAAA6lD,GAAA1nD,KACAunD,GAAAziD,EAAAC,EAAAkF,EAAA06B,EAAArgC,EAAAE,IACA8jD,IACAE,EAAA3M,YACA2M,EAAAhtC,MAAA1W,EAAA,GAAAA,EAAA,KAEA0jD,EAAAhtC,MAAAzW,EAAA,GAAAA,EAAA,IACAgD,GAAAygD,EAAA1M,UACA2J,GAAA,GACW19C,IACXygD,EAAA3M,YACA2M,EAAAhtC,MAAAzb,EAAAC,GACAylD,GAAA,GAIA2C,EAAAroD,EAAAsoD,EAAAroD,EAAAsoD,EAAAvgD,EAGA,OAAA2gD,GCnKA,ICIAI,GACAC,GACAC,GDNAC,GAAA,WACA,IAIAC,EACAC,EACAtF,EANA55C,EAAA,EACA06B,EAAA,EACArgC,EAAA,IACAE,EAAA,IAKA,OAAAq/C,GACApJ,OAAA,SAAAA,GACA,OAAAyO,GAAAC,IAAA1O,EAAAyO,IAAAtB,GAAA39C,EAAA06B,EAAArgC,EAAAE,EAAAojD,CAAAuB,EAAA1O,IAEA7a,OAAA,SAAAr1B,GACA,OAAA/H,UAAAC,QAAAwH,GAAAM,EAAA,MAAAo6B,GAAAp6B,EAAA,MAAAjG,GAAAiG,EAAA,MAAA/F,GAAA+F,EAAA,MAAA2+C,EAAAC,EAAA,KAAAtF,KAAA55C,EAAA06B,IAAArgC,EAAAE,OCXA4kD,GAAA/P,KAKAgQ,IACArO,OAAAT,GACA/+B,MAAA++B,GACAsB,UAMA,WACAwN,GAAA7tC,MAAA8tC,GACAD,GAAAvN,QAAAyN,IAPAzN,QAAAvB,GACAwB,aAAAxB,GACAyB,WAAAzB,IAQA,SAAAgP,KACAF,GAAA7tC,MAAA6tC,GAAAvN,QAAAvB,GAGA,SAAA+O,GAAAvM,EAAAC,GAEA8L,GADA/L,GAAA7C,GACA6O,GAAA3O,GADA4C,GAAA9C,IACA8O,GAAA7O,GAAA6C,GACAqM,GAAA7tC,MAAAguC,GAGA,SAAAA,GAAAzM,EAAAC,GACAD,GAAA7C,GACA,IAAAmD,EAAAjD,GADA4C,GAAA9C,IAEAkD,EAAAjD,GAAA6C,GACAt1C,EAAA+B,GAAAszC,EAAA+L,IACAW,EAAAtP,GAAAzyC,GAEA3H,EAAAq9C,EADAhD,GAAA1yC,GAEA1H,EAAAgpD,GAAA3L,EAAA0L,GAAA3L,EAAAqM,EACAt9B,EAAA48B,GAAA1L,EAAA2L,GAAA5L,EAAAqM,EACAL,GAAAp0C,IAAA0X,GAAAznB,GAAAlF,IAAAC,KAAAmsB,IACA28B,GAAA/L,EAAAgM,GAAA1L,EAAA2L,GAAA5L,EAGA,IAAAsM,GAAA,SAAAntD,GAGA,OAFA6sD,GAAA7P,QACA+C,GAAA//C,EAAA8sD,KACAD,ICjDAO,IAAA,WACAC,IAAc3pD,KAAA,aAAAyqC,YAAAif,IAEdE,GAAA,SAAA/kD,EAAAC,GAGA,OAFA4kD,GAAA,GAAA7kD,EACA6kD,GAAA,GAAA5kD,EACA2kD,GAAAE,KCJAE,IACAlP,QAAA,SAAAr+C,EAAAif,GACA,OAAAuuC,GAAAxtD,EAAAkvC,SAAAjwB,IAEAq/B,kBAAA,SAAAt+C,EAAAif,GAEA,IADA,IAAAs/B,EAAAv+C,EAAAu+C,SAAAjgD,GAAA,EAAAyB,EAAAw+C,EAAAr4C,SACA5H,EAAAyB,GAAA,GAAAytD,GAAAjP,EAAAjgD,GAAA4wC,SAAAjwB,GAAA,SACA,WAIAwuC,IACAjP,OAAA,WACA,UAEAE,MAAA,SAAA1+C,EAAAif,GACA,OAAAyuC,GAAA1tD,EAAAmuC,YAAAlvB,IAEA0/B,WAAA,SAAA3+C,EAAAif,GAEA,IADA,IAAAkvB,EAAAnuC,EAAAmuC,YAAA7vC,GAAA,EAAAyB,EAAAouC,EAAAjoC,SACA5H,EAAAyB,GAAA,GAAA2tD,GAAAvf,EAAA7vC,GAAA2gB,GAAA,SACA,UAEA2/B,WAAA,SAAA5+C,EAAAif,GACA,OAAA0uC,GAAA3tD,EAAAmuC,YAAAlvB,IAEA6/B,gBAAA,SAAA9+C,EAAAif,GAEA,IADA,IAAAkvB,EAAAnuC,EAAAmuC,YAAA7vC,GAAA,EAAAyB,EAAAouC,EAAAjoC,SACA5H,EAAAyB,GAAA,GAAA4tD,GAAAxf,EAAA7vC,GAAA2gB,GAAA,SACA,UAEA8/B,QAAA,SAAA/+C,EAAAif,GACA,OAAA2uC,GAAA5tD,EAAAmuC,YAAAlvB,IAEAggC,aAAA,SAAAj/C,EAAAif,GAEA,IADA,IAAAkvB,EAAAnuC,EAAAmuC,YAAA7vC,GAAA,EAAAyB,EAAAouC,EAAAjoC,SACA5H,EAAAyB,GAAA,GAAA6tD,GAAAzf,EAAA7vC,GAAA2gB,GAAA,SACA,UAEAigC,mBAAA,SAAAl/C,EAAAif,GAEA,IADA,IAAAkgC,EAAAn/C,EAAAm/C,WAAA7gD,GAAA,EAAAyB,EAAAo/C,EAAAj5C,SACA5H,EAAAyB,GAAA,GAAAytD,GAAArO,EAAA7gD,GAAA2gB,GAAA,SACA,WAIA,SAAAuuC,GAAAte,EAAAjwB,GACA,SAAAiwB,IAAAue,GAAAttD,eAAA+uC,EAAAxrC,QACA+pD,GAAAve,EAAAxrC,MAAAwrC,EAAAjwB,GAIA,SAAAyuC,GAAAvf,EAAAlvB,GACA,WAAAquC,GAAAnf,EAAAlvB,GAGA,SAAA0uC,GAAAxf,EAAAlvB,GACA,IAAA4uC,EAAAP,GAAAnf,EAAA,GAAAA,EAAA,IAGA,OAFAmf,GAAAnf,EAAA,GAAAlvB,GACAquC,GAAAruC,EAAAkvB,EAAA,KACA0f,EAAAxQ,GAGA,SAAAuQ,GAAAzf,EAAAlvB,GACA,QAAA0oC,GAAAxZ,EAAA7rC,IAAAwrD,IAAAC,GAAA9uC,IAGA,SAAA6uC,GAAAvhB,GACA,OAAAA,IAAAjqC,IAAAyrD,KAAAlgD,MAAA0+B,EAGA,SAAAwhB,GAAA9uC,GACA,OAAAA,EAAA,GAAA0+B,GAAA1+B,EAAA,GAAA0+B,IAGA,IAAAqQ,GAAA,SAAAhuD,EAAAif,GACA,OAAAjf,GAAAutD,GAAAptD,eAAAH,EAAA0D,MACA6pD,GAAAvtD,EAAA0D,MACA8pD,IAAAxtD,EAAAif,IC/EA,SAAAgvC,GAAA7lB,EAAAngC,EAAAoZ,GACA,IAAA5d,EAAAqI,EAAAs8B,EAAAngC,EAAAo1C,GAAAh8B,GAAAtd,OAAAkE,GACA,gBAAAzE,GAAsB,OAAAC,EAAAnB,IAAA,SAAAmB,GAA2B,OAAAD,EAAAC,MAGjD,SAAAyqD,GAAAxgD,EAAA3F,EAAAqZ,GACA,IAAA5d,EAAAsI,EAAA4B,EAAA3F,EAAAs1C,GAAAj8B,GAAArd,OAAAgE,GACA,gBAAAtE,GAAsB,OAAAD,EAAAlB,IAAA,SAAAkB,GAA2B,OAAAA,EAAAC,MAGjD,SAAA0qD,KACA,IAAApmD,EAAA2F,EAAA0gD,EAAAC,EACApmD,EAAAmgC,EAAAkmB,EAAAC,EAEA/qD,EAAAC,EAAA03C,EAAAqT,EADAptC,EAAA,GAAAC,EAAAD,EAAAqtC,EAAA,GAAAC,EAAA,IAEAnU,EAAA,IAEA,SAAAoU,IACA,OAAYjrD,KAAA,kBAAAyqC,YAAA2Y,KAGZ,SAAAA,IACA,OAAAh7C,EAAAI,GAAAmiD,EAAAI,KAAAL,EAAAK,GAAAnsD,IAAA64C,GACAp3C,OAAA+H,EAAAI,GAAAqiD,EAAAG,KAAAJ,EAAAI,GAAApsD,IAAAksD,IACAzqD,OAAA+H,EAAAI,GAAAwB,EAAA0T,KAAArZ,EAAAqZ,GAAAvY,OAAA,SAAArF,GAAsE,OAAA0J,GAAA1J,EAAAirD,GAAApR,KAAgC/6C,IAAAkB,IACtGO,OAAA+H,EAAAI,GAAAk8B,EAAA/mB,KAAApZ,EAAAoZ,GAAAxY,OAAA,SAAApF,GAAsE,OAAAyJ,GAAAzJ,EAAAirD,GAAArR,KAAgC/6C,IAAAmB,IAqEtG,OAlEAkrD,EAAA7H,MAAA,WACA,OAAAA,IAAAxkD,IAAA,SAAA6rC,GAA8C,OAASzqC,KAAA,aAAAyqC,kBAGvDwgB,EAAAC,QAAA,WACA,OACAlrD,KAAA,UACAyqC,aACAgN,EAAAkT,GAAAtqD,OACAyqD,EAAAF,GAAA3iD,MAAA,GACAwvC,EAAAiT,GAAA5hD,UAAAb,MAAA,GACA6iD,EAAAD,GAAA/hD,UAAAb,MAAA,OAKAgjD,EAAAtrB,OAAA,SAAAr1B,GACA,OAAA/H,UAAAC,OACAyoD,EAAAE,YAAA7gD,GAAA8gD,YAAA9gD,GADA2gD,EAAAG,eAIAH,EAAAE,YAAA,SAAA7gD,GACA,OAAA/H,UAAAC,QACAmoD,GAAArgD,EAAA,MAAAogD,GAAApgD,EAAA,MACAugD,GAAAvgD,EAAA,MAAAsgD,GAAAtgD,EAAA,MACAqgD,EAAAD,IAAApgD,EAAAqgD,IAAAD,IAAApgD,GACAugD,EAAAD,IAAAtgD,EAAAugD,IAAAD,IAAAtgD,GACA2gD,EAAApU,gBALA8T,EAAAE,IAAAH,EAAAE,KAQAK,EAAAG,YAAA,SAAA9gD,GACA,OAAA/H,UAAAC,QACAwH,GAAAM,EAAA,MAAAjG,GAAAiG,EAAA,MACAo6B,GAAAp6B,EAAA,MAAA/F,GAAA+F,EAAA,MACAN,EAAA3F,IAAAiG,EAAAN,IAAA3F,IAAAiG,GACAo6B,EAAAngC,IAAA+F,EAAAo6B,IAAAngC,IAAA+F,GACA2gD,EAAApU,gBALA7sC,EAAA06B,IAAArgC,EAAAE,KAQA0mD,EAAA1iD,KAAA,SAAA+B,GACA,OAAA/H,UAAAC,OACAyoD,EAAAI,UAAA/gD,GAAAghD,UAAAhhD,GADA2gD,EAAAK,aAIAL,EAAAI,UAAA,SAAA/gD,GACA,OAAA/H,UAAAC,QACAuoD,GAAAzgD,EAAA,GAAA0gD,GAAA1gD,EAAA,GACA2gD,IAFAF,EAAAC,IAKAC,EAAAK,UAAA,SAAAhhD,GACA,OAAA/H,UAAAC,QACAkb,GAAApT,EAAA,GAAAqT,GAAArT,EAAA,GACA2gD,IAFAvtC,EAAAC,IAKAstC,EAAApU,UAAA,SAAAvsC,GACA,OAAA/H,UAAAC,QACAq0C,GAAAvsC,EACAxK,EAAAyqD,GAAA7lB,EAAAngC,EAAA,IACAxE,EAAAyqD,GAAAxgD,EAAA3F,EAAAwyC,GACAY,EAAA8S,GAAAM,EAAAD,EAAA,IACAE,EAAAN,GAAAG,EAAAD,EAAA7T,GACAoU,GANApU,GASAoU,EACAE,eAAA,QAAAxR,KAAA,OAAAA,MACAyR,eAAA,QAAAzR,KAAA,OAAAA,MAGA,SAAA4R,KACA,OAAAd,OCrGA,ICIAe,GACAC,GACAC,GACAC,GDPAC,GAAA,SAAA/mD,EAAAC,GACA,IAAAkF,EAAAnF,EAAA,GAAAo1C,GACAvV,EAAA7/B,EAAA,GAAAo1C,GACA51C,EAAAS,EAAA,GAAAm1C,GACA11C,EAAAO,EAAA,GAAAm1C,GACA4R,EAAA3R,GAAAxV,GACAiC,EAAAwT,GAAAzV,GACAonB,EAAA5R,GAAA31C,GACAwnD,EAAA5R,GAAA51C,GACAynD,EAAAH,EAAA3R,GAAAlwC,GACAiiD,EAAAJ,EAAA1R,GAAAnwC,GACAkiD,EAAAJ,EAAA5R,GAAA71C,GACA8nD,EAAAL,EAAA3R,GAAA91C,GACAnJ,EAAA,EAAAgiC,GAAAl4B,GAAAq1C,GAAA91C,EAAAmgC,GAAAmnB,EAAAC,EAAAzR,GAAAh2C,EAAA2F,KACAlH,EAAAq3C,GAAAj/C,GAEAm5B,EAAAn5B,EAAA,SAAAY,GACA,IAAA0B,EAAA28C,GAAAr+C,GAAAZ,GAAA4H,EACAvF,EAAA48C,GAAAj/C,EAAAY,GAAAgH,EACAhD,EAAAvC,EAAAyuD,EAAAxuD,EAAA0uD,EACAnsD,EAAAxC,EAAA0uD,EAAAzuD,EAAA2uD,EACAjgC,EAAA3uB,EAAAopC,EAAAnpC,EAAAuuD,EACA,OACAt/B,GAAA1sB,EAAAD,GAAAk6C,GACAvtB,GAAAP,EAAAlnB,GAAAlF,IAAAC,MAAAi6C,KAEG,WACH,OAAAhwC,EAAAgwC,GAAAtV,EAAAsV,KAKA,OAFA3lB,EAAAjwB,SAAAlJ,EAEAm5B,GElCA+3B,GAAA,SAAAtsD,GACA,OAAAA,GDGAusD,GAAAjT,KACAkT,GAAAlT,KAMAmT,IACAhxC,MAAA++B,GACAsB,UAAAtB,GACAuB,QAAAvB,GACAwB,aAAA,WACAyQ,GAAA3Q,UAAA4Q,GACAD,GAAA1Q,QAAA4Q,IAEA1Q,WAAA,WACAwQ,GAAA3Q,UAAA2Q,GAAA1Q,QAAA0Q,GAAAhxC,MAAA++B,GACA+R,GAAAt3C,IAAAvL,GAAA8iD,KACAA,GAAAhT,SAEAn6C,OAAA,WACA,IAAA2pC,EAAAujB,GAAA,EAEA,OADAA,GAAA/S,QACAxQ,IAIA,SAAA0jB,KACAD,GAAAhxC,MAAAmxC,GAGA,SAAAA,GAAA5sD,EAAAC,GACAwsD,GAAAhxC,MAAAoxC,GACAnB,GAAAE,GAAA5rD,EAAA2rD,GAAAE,GAAA5rD,EAGA,SAAA4sD,GAAA7sD,EAAAC,GACAusD,GAAAv3C,IAAA42C,GAAA7rD,EAAA4rD,GAAA3rD,GACA2rD,GAAA5rD,EAAA6rD,GAAA5rD,EAGA,SAAA0sD,KACAE,GAAAnB,GAAAC,IAGA,IAAAmB,GAAA,GE/CAC,GAAAjtD,IACAktD,GAAAD,GACAE,IAAAF,GACAG,GAAAD,GAsBA,ICdAE,GACAC,GACAC,GACAC,GDWAC,IAnBA9xC,MAYA,SAAAzb,EAAAC,GACAD,EAAA+sD,QAAA/sD,GACAA,EAAAitD,QAAAjtD,GACAC,EAAA+sD,QAAA/sD,GACAA,EAAAitD,QAAAjtD,IAfA67C,UAAAtB,GACAuB,QAAAvB,GACAwB,aAAAxB,GACAyB,WAAAzB,GACAn7C,OAAA,WACA,IAAA0hD,IAAAgM,GAAAC,KAAAC,GAAAC,KAEA,OADAD,GAAAC,KAAAF,GAAAD,GAAAjtD,KACAihD,ICZAyM,GAAA,EACAC,GAAA,EACAC,GAAA,EACAC,GAAA,EACAC,GAAA,EACAC,GAAA,EACAC,GAAA,EACAC,GAAA,EACAC,GAAA,EAMAC,IACAxyC,MAAAyyC,GACApS,UAAAqS,GACApS,QAAAqS,GACApS,aAAA,WACAiS,GAAAnS,UAAAuS,GACAJ,GAAAlS,QAAAuS,IAEArS,WAAA,WACAgS,GAAAxyC,MAAAyyC,GACAD,GAAAnS,UAAAqS,GACAF,GAAAlS,QAAAqS,IAEA/uD,OAAA,WACA,IAAAkvD,EAAAP,IAAAF,GAAAE,GAAAD,GAAAC,IACAH,IAAAF,GAAAE,GAAAD,GAAAC,IACAH,IAAAF,GAAAE,GAAAD,GAAAC,KACA7nD,SAIA,OAHA2nD,GAAAC,GAAAC,GACAC,GAAAC,GAAAC,GACAC,GAAAC,GAAAC,GAAA,EACAO,IAIA,SAAAL,GAAAluD,EAAAC,GACAutD,IAAAxtD,EACAytD,IAAAxtD,IACAytD,GAGA,SAAAS,KACAF,GAAAxyC,MAAA+yC,GAGA,SAAAA,GAAAxuD,EAAAC,GACAguD,GAAAxyC,MAAAgzC,GACAP,GAAAb,GAAArtD,EAAAstD,GAAArtD,GAGA,SAAAwuD,GAAAzuD,EAAAC,GACA,IAAA2d,EAAA5d,EAAAqtD,GAAAxvC,EAAA5d,EAAAqtD,GAAAlhC,EAAAlnB,GAAA0Y,IAAAC,KACA8vC,IAAAvhC,GAAAihC,GAAArtD,GAAA,EACA4tD,IAAAxhC,GAAAkhC,GAAArtD,GAAA,EACA4tD,IAAAzhC,EACA8hC,GAAAb,GAAArtD,EAAAstD,GAAArtD,GAGA,SAAAmuD,KACAH,GAAAxyC,MAAAyyC,GAGA,SAAAG,KACAJ,GAAAxyC,MAAAizC,GAGA,SAAAJ,KACAK,GAAAxB,GAAAC,IAGA,SAAAsB,GAAA1uD,EAAAC,GACAguD,GAAAxyC,MAAAkzC,GACAT,GAAAf,GAAAE,GAAArtD,EAAAotD,GAAAE,GAAArtD,GAGA,SAAA0uD,GAAA3uD,EAAAC,GACA,IAAA2d,EAAA5d,EAAAqtD,GACAxvC,EAAA5d,EAAAqtD,GACAlhC,EAAAlnB,GAAA0Y,IAAAC,KAEA8vC,IAAAvhC,GAAAihC,GAAArtD,GAAA,EACA4tD,IAAAxhC,GAAAkhC,GAAArtD,GAAA,EACA4tD,IAAAzhC,EAGA0hC,KADA1hC,EAAAkhC,GAAAttD,EAAAqtD,GAAAptD,IACAotD,GAAArtD,GACA+tD,IAAA3hC,GAAAkhC,GAAArtD,GACA+tD,IAAA,EAAA5hC,EACA8hC,GAAAb,GAAArtD,EAAAstD,GAAArtD,GAGA,IAAA2uD,GAAA,GChGA,SAAAC,GAAAlhD,GACApP,KAAAuwD,SAAAnhD,EAGAkhD,GAAAnyD,WACAqyD,QAAA,IACAC,YAAA,SAAAxkD,GACA,OAAAjM,KAAAwwD,QAAAvkD,EAAAjM,MAEAy9C,aAAA,WACAz9C,KAAA0wD,MAAA,GAEAhT,WAAA,WACA19C,KAAA0wD,MAAAppD,KAEAi2C,UAAA,WACAv9C,KAAA2wD,OAAA,GAEAnT,QAAA,WACA,IAAAx9C,KAAA0wD,OAAA1wD,KAAAuwD,SAAAvqB,YACAhmC,KAAA2wD,OAAArpD,KAEA4V,MAAA,SAAAzb,EAAAC,GACA,OAAA1B,KAAA2wD,QACA,OACA3wD,KAAAuwD,SAAAxqB,OAAAtkC,EAAAC,GACA1B,KAAA2wD,OAAA,EACA,MAEA,OACA3wD,KAAAuwD,SAAAtqB,OAAAxkC,EAAAC,GACA,MAEA,QACA1B,KAAAuwD,SAAAxqB,OAAAtkC,EAAAzB,KAAAwwD,QAAA9uD,GACA1B,KAAAuwD,SAAAnpB,IAAA3lC,EAAAC,EAAA1B,KAAAwwD,QAAA,EAAA9U,MAKA56C,OAAAm7C,ICvCA,IACA2U,GACAC,GACAC,GACAC,GACAC,GALAC,GAAAlW,KAOAmW,IACAh0C,MAAA++B,GACAsB,UAAA,WACA2T,GAAAh0C,MAAAi0C,IAEA3T,QAAA,WACAoT,IAAAQ,GAAAP,GAAAC,IACAI,GAAAh0C,MAAA++B,IAEAwB,aAAA,WACAmT,IAAA,GAEAlT,WAAA,WACAkT,GAAA,MAEA9vD,OAAA,WACA,IAAAqD,GAAA8sD,GAEA,OADAA,GAAAhW,QACA92C,IAIA,SAAAgtD,GAAA1vD,EAAAC,GACAwvD,GAAAh0C,MAAAk0C,GACAP,GAAAE,GAAAtvD,EAAAqvD,GAAAE,GAAAtvD,EAGA,SAAA0vD,GAAA3vD,EAAAC,GACAqvD,IAAAtvD,EAAAuvD,IAAAtvD,EACAuvD,GAAAv6C,IAAA/P,GAAAoqD,MAAAC,QACAD,GAAAtvD,EAAAuvD,GAAAtvD,EAGA,IAAA2vD,GAAA,GC5CA,SAAAC,KACAtxD,KAAAuxD,WAoDA,SAAAC,GAAA1tD,GACA,YAAAA,EACA,IAAAA,EAAA,IAAAA,EAAA,eAAAA,EACA,IAAAA,EAAA,IAAAA,EAAA,cAAAA,EACA,IArDAwtD,GAAAnzD,WACAqyD,QAAA,IACAhxD,QAAAgyD,GAAA,KACAf,YAAA,SAAAxkD,GAEA,OADAA,QAAAjM,KAAAwwD,UAAAxwD,KAAAwwD,QAAAvkD,EAAAjM,KAAAR,QAAA,MACAQ,MAEAy9C,aAAA,WACAz9C,KAAA0wD,MAAA,GAEAhT,WAAA,WACA19C,KAAA0wD,MAAAppD,KAEAi2C,UAAA,WACAv9C,KAAA2wD,OAAA,GAEAnT,QAAA,WACA,IAAAx9C,KAAA0wD,OAAA1wD,KAAAuxD,QAAAxuD,KAAA,KACA/C,KAAA2wD,OAAArpD,KAEA4V,MAAA,SAAAzb,EAAAC,GACA,OAAA1B,KAAA2wD,QACA,OACA3wD,KAAAuxD,QAAAxuD,KAAA,IAAAtB,EAAA,IAAAC,GACA1B,KAAA2wD,OAAA,EACA,MAEA,OACA3wD,KAAAuxD,QAAAxuD,KAAA,IAAAtB,EAAA,IAAAC,GACA,MAEA,QACA,MAAA1B,KAAAR,UAAAQ,KAAAR,QAAAgyD,GAAAxxD,KAAAwwD,UACAxwD,KAAAuxD,QAAAxuD,KAAA,IAAAtB,EAAA,IAAAC,EAAA1B,KAAAR,WAKAsB,OAAA,WACA,GAAAd,KAAAuxD,QAAAptD,OAAA,CACA,IAAArD,EAAAd,KAAAuxD,QAAA16C,KAAA,IAEA,OADA7W,KAAAuxD,WACAzwD,EAEA,8BCvCA2wD,EAAAriD,GACA,IACAsiD,EACAC,EAFAlB,EAAA,IAIA,SAAAzgD,EAAA/R,GAKA,OAJAA,IACA,mBAAAwyD,GAAAkB,EAAAlB,eAAAphD,MAAArP,KAAAkE,YACA85C,GAAA//C,EAAAyzD,EAAAC,KAEAA,EAAA7wD,SAwCA,OArCAkP,EAAAy6B,KAAA,SAAAxsC,GAEA,OADA+/C,GAAA//C,EAAAyzD,EAAAnD,KACAA,GAAAztD,UAGAkP,EAAAqhD,QAAA,SAAApzD,GAEA,OADA+/C,GAAA//C,EAAAyzD,EAAAL,KACAA,GAAAvwD,UAGAkP,EAAAwyC,OAAA,SAAAvkD,GAEA,OADA+/C,GAAA//C,EAAAyzD,EAAA1C,KACAA,GAAAluD,UAGAkP,EAAAggD,SAAA,SAAA/xD,GAEA,OADA+/C,GAAA//C,EAAAyzD,EAAArB,KACAA,GAAAvvD,UAGAkP,EAAAyhD,WAAA,SAAAxlD,GACA,OAAA/H,UAAAC,QAAAutD,EAAA,MAAAzlD,GAAAwlD,EAAA,KAAA1D,KAAA0D,EAAAxlD,GAAAkwC,OAAAnsC,GAAAyhD,GAGAzhD,EAAAZ,QAAA,SAAAnD,GACA,OAAA/H,UAAAC,QACAwtD,EAAA,MAAA1lD,GAAAmD,EAAA,SAAAkiD,IAAA,IAAAhB,GAAAlhD,EAAAnD,GACA,mBAAAwkD,GAAAkB,EAAAlB,eACAzgD,GAHAZ,GAMAY,EAAAygD,YAAA,SAAAxkD,GACA,OAAA/H,UAAAC,QACAssD,EAAA,mBAAAxkD,KAAA0lD,EAAAlB,aAAAxkD,OACA+D,GAFAygD,GAKAzgD,EAAAyhD,cAAAriD,YC3DAwiD,GAAA,SAAAC,GACA,OACA1V,OAAA2V,GAAAD,KAIA,SAAAC,GAAAD,GACA,gBAAA1V,GACA,IAAA79C,EAAA,IAAAyzD,GACA,QAAAj0D,KAAA+zD,EAAAvzD,EAAAR,GAAA+zD,EAAA/zD,GAEA,OADAQ,EAAA69C,SACA79C,GAIA,SAAAyzD,MCZA,SAAAC,GAAAP,EAAAQ,EAAAh0D,GACA,IAAAsnD,EAAAkM,EAAAS,YAAAT,EAAAS,aAMA,OALAT,EAAA9iD,MAAA,KAAA0kB,WAAA,MACA,MAAAkyB,GAAAkM,EAAAS,WAAA,MACAlU,GAAA//C,EAAAwzD,EAAAtV,OAAA6S,KACAiD,EAAAjD,GAAAluD,UACA,MAAAykD,GAAAkM,EAAAS,WAAA3M,GACAkM,EAGA,SAAAU,GAAAV,EAAAnwB,EAAArjC,GACA,OAAA+zD,GAAAP,EAAA,SAAAhrD,GACA,IAAA+5B,EAAAc,EAAA,MAAAA,EAAA,MACAjV,EAAAiV,EAAA,MAAAA,EAAA,MACA78B,EAAAiC,KAAAnD,IAAAi9B,GAAA/5B,EAAA,MAAAA,EAAA,OAAA4lB,GAAA5lB,EAAA,MAAAA,EAAA,QACAhF,GAAA6/B,EAAA,OAAAd,EAAA/7B,GAAAgC,EAAA,MAAAA,EAAA,UACA/E,GAAA4/B,EAAA,OAAAjV,EAAA5nB,GAAAgC,EAAA,MAAAA,EAAA,UACAgrD,EAAA9iD,MAAA,IAAAlK,GAAA4uB,WAAA5xB,EAAAC,KACGzD,GAGH,SAAAm0D,GAAAX,EAAAl3C,EAAAtc,GACA,OAAAk0D,GAAAV,IAAA,KAAAl3C,GAAAtc,GAGA,SAAAo0D,GAAAZ,EAAAhzD,EAAAR,GACA,OAAA+zD,GAAAP,EAAA,SAAAhrD,GACA,IAAA+5B,GAAA/hC,EACAgG,EAAA+7B,GAAA/5B,EAAA,MAAAA,EAAA,OACAhF,GAAA++B,EAAA/7B,GAAAgC,EAAA,MAAAA,EAAA,UACA/E,GAAA+C,EAAAgC,EAAA,MACAgrD,EAAA9iD,MAAA,IAAAlK,GAAA4uB,WAAA5xB,EAAAC,KACGzD,GAGH,SAAAq0D,GAAAb,EAAA/yD,EAAAT,GACA,OAAA+zD,GAAAP,EAAA,SAAAhrD,GACA,IAAA4lB,GAAA3tB,EACA+F,EAAA4nB,GAAA5lB,EAAA,MAAAA,EAAA,OACAhF,GAAAgD,EAAAgC,EAAA,MACA/E,GAAA2qB,EAAA5nB,GAAAgC,EAAA,MAAAA,EAAA,UACAgrD,EAAA9iD,MAAA,IAAAlK,GAAA4uB,WAAA5xB,EAAAC,KACGzD,GD5BH8zD,GAAA5zD,WACAsT,YAAAsgD,GACA70C,MAAA,SAAAzb,EAAAC,GAAyB1B,KAAAm8C,OAAAj/B,MAAAzb,EAAAC,IACzBg7C,OAAA,WAAsB18C,KAAAm8C,OAAAO,UACtBa,UAAA,WAAyBv9C,KAAAm8C,OAAAoB,aACzBC,QAAA,WAAuBx9C,KAAAm8C,OAAAqB,WACvBC,aAAA,WAA4Bz9C,KAAAm8C,OAAAsB,gBAC5BC,WAAA,WAA0B19C,KAAAm8C,OAAAuB,eEpB1B,IAAA6U,GAAA,GACAC,GAAA3W,GAAA,GAAAD,IAEA6W,GAAA,SAAAC,EAAAC,GACA,OAAAA,EAYA,SAAAD,EAAAC,GAEA,SAAAC,EAAAjnD,EAAA06B,EAAA+a,EAAAtc,EAAArQ,EAAAq0B,EAAA9iD,EAAAE,EAAAm7C,EAAAtc,EAAArQ,EAAA6zB,EAAAlf,EAAA8S,GACA,IAAA98B,EAAArZ,EAAA2F,EACA2T,EAAApZ,EAAAmgC,EACA9R,EAAAlV,IAAAC,IACA,GAAAiV,EAAA,EAAAo+B,GAAAtpB,IAAA,CACA,IAAA7iC,EAAAs+B,EAAAC,EACAt+B,EAAAguB,EAAAC,EACA93B,EAAAksD,EAAAP,EACA5rD,EAAAgK,GAAAH,IAAAC,IAAA7J,KACAi2D,EAAAh0B,GAAAjiC,GAAAD,GACAm2D,EAAA3nD,MAAAvO,GAAA,GAAA0+C,IAAAnwC,GAAAi2C,EAAAC,GAAA/F,IAAA8F,EAAAC,GAAA,EAAAjzB,GAAA3nB,EAAAD,GACAnI,EAAAq0D,EAAAI,EAAAD,GACA5sD,EAAA5H,EAAA,GACA8H,EAAA9H,EAAA,GACA00D,EAAA9sD,EAAA0F,EACAqnD,EAAA7sD,EAAAkgC,EACA4sB,EAAA3zC,EAAAyzC,EAAA1zC,EAAA2zC,GACAC,IAAA1+B,EAAAo+B,GACAxnD,IAAAkU,EAAA0zC,EAAAzzC,EAAA0zC,GAAAz+B,EAAA,QACAuQ,EAAAC,EAAAtQ,EAAAC,EAAAo0B,EAAAP,EAAAiK,MACAI,EAAAjnD,EAAA06B,EAAA+a,EAAAtc,EAAArQ,EAAAq0B,EAAA7iD,EAAAE,EAAA2sD,EAAAtsD,GAAA7J,EAAA8J,GAAA9J,EAAAC,EAAAysC,EAAA8S,GACAA,EAAAj/B,MAAAjX,EAAAE,GACAysD,EAAA3sD,EAAAE,EAAA2sD,EAAAtsD,EAAAC,EAAA7J,EAAAoJ,EAAAE,EAAAm7C,EAAAtc,EAAArQ,EAAA6zB,EAAAlf,EAAA8S,KAIA,gBAAAA,GACA,IAAA+W,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EACAnS,EAAAz1C,EAAA06B,EAAAvB,EAAArQ,EAAAq0B,EAEA0K,GACAt2C,QACAqgC,YACAC,UACAC,aAAA,WAAgCtB,EAAAsB,eAAuB+V,EAAAjW,UAAAwJ,GACvDrJ,WAAA,WAA8BvB,EAAAuB,aAAqB8V,EAAAjW,cAGnD,SAAArgC,EAAAzb,EAAAC,GACAD,EAAAixD,EAAAjxD,EAAAC,GACAy6C,EAAAj/B,MAAAzb,EAAA,GAAAA,EAAA,IAGA,SAAA87C,IACA5xC,EAAArE,IACAksD,EAAAt2C,MAAAmtC,EACAlO,EAAAoB,YAGA,SAAA8M,EAAA5L,EAAAC,GACA,IAAA9hD,EAAAuiD,IAAAV,EAAAC,IAAArgD,EAAAq0D,EAAAjU,EAAAC,GACAkU,EAAAjnD,EAAA06B,EAAA+a,EAAAtc,EAAArQ,EAAAq0B,EAAAn9C,EAAAtN,EAAA,GAAAgoC,EAAAhoC,EAAA,GAAA+iD,EAAA3C,EAAA3Z,EAAAloC,EAAA,GAAA63B,EAAA73B,EAAA,GAAAksD,EAAAlsD,EAAA,GAAA21D,GAAApW,GACAA,EAAAj/B,MAAAvR,EAAA06B,GAGA,SAAAmX,IACAgW,EAAAt2C,QACAi/B,EAAAqB,UAGA,SAAAuJ,IACAxJ,IACAiW,EAAAt2C,MAAAu2C,EACAD,EAAAhW,QAAAwJ,EAGA,SAAAyM,EAAAhV,EAAAC,GACA2L,EAAA6I,EAAAzU,EAAAC,GAAAyU,EAAAxnD,EAAAynD,EAAA/sB,EAAAgtB,EAAAvuB,EAAAwuB,EAAA7+B,EAAA8+B,EAAAzK,EACA0K,EAAAt2C,MAAAmtC,EAGA,SAAArD,IACA4L,EAAAjnD,EAAA06B,EAAA+a,EAAAtc,EAAArQ,EAAAq0B,EAAAqK,EAAAC,EAAAF,EAAAG,EAAAC,EAAAC,EAAAhB,GAAApW,GACAqX,EAAAhW,UACAA,IAGA,OAAAgW,GA3FAE,CAAAhB,EAAAC,GAGA,SAAAD,GACA,OAAAZ,IACA50C,MAAA,SAAAzb,EAAAC,GACAD,EAAAixD,EAAAjxD,EAAAC,GACA1B,KAAAm8C,OAAAj/B,MAAAzb,EAAA,GAAAA,EAAA,OAPAkyD,CAAAjB,ICGA,IAAAkB,GAAA9B,IACA50C,MAAA,SAAAzb,EAAAC,GACA1B,KAAAm8C,OAAAj/B,MAAAzb,EAAAm6C,GAAAl6C,EAAAk6C,OAuBA,SAAAiY,GAAApvD,EAAA4a,EAAAC,EAAAq2B,GACA,IAAAme,EAAAjY,GAAAlG,GACAoe,EAAAjY,GAAAnG,GACAnvC,EAAAstD,EAAArvD,EACAgC,EAAAstD,EAAAtvD,EACAuvD,EAAAF,EAAArvD,EACAmtB,EAAAmiC,EAAAtvD,EACAwvD,GAAAF,EAAAz0C,EAAAw0C,EAAAz0C,GAAA5a,EACAyvD,GAAAH,EAAA10C,EAAAy0C,EAAAx0C,GAAA7a,EACA,SAAAyK,EAAAzN,EAAAC,GACA,OAAA8E,EAAA/E,EAAAgF,EAAA/E,EAAA2d,EAAAC,EAAA7Y,EAAAhF,EAAA+E,EAAA9E,GAKA,OAHAwN,EAAAzM,OAAA,SAAAhB,EAAAC,GACA,OAAAsyD,EAAAvyD,EAAAmwB,EAAAlwB,EAAAuyD,EAAAC,EAAAtiC,EAAAnwB,EAAAuyD,EAAAtyD,IAEAwN,EAGA,SAAAilD,GAAAzB,GACA,OAAA0B,GAAA,WAAuC,OAAA1B,GAAvC0B,GAGA,SAAAA,GAAAC,GACA,IAAA3B,EAIApgC,EAGA+T,EAAArgC,EAAAE,EAEAouD,EACAC,EACAC,EACA5J,EACAC,EAZApmD,EAAA,IACAhD,EAAA,IAAAC,EAAA,IACA+8C,EAAA,EAAAC,EAAA,EACAiF,EAAA,EAAAC,EAAA,EAAAC,EAAA,EACAlO,EAAA,EACA2B,EAAA,KAAAmd,EAAAC,GACA/oD,EAAA,KAAAgpD,EAAA5G,GACA4E,EAAA,GAOA,SAAAlB,EAAAv0C,GACA,OAAAs3C,EAAAt3C,EAAA,GAAA0+B,GAAA1+B,EAAA,GAAA0+B,IAGA,SAAAn5C,EAAAya,GAEA,OADAA,EAAAs3C,EAAA/xD,OAAAya,EAAA,GAAAA,EAAA,OACAA,EAAA,GAAAy+B,GAAAz+B,EAAA,GAAAy+B,IA+DA,SAAAiZ,IACA,IAAA/P,EAAAgP,GAAApvD,EAAA,IAAAkxC,GAAAtmC,MAAA,KAAAqjD,EAAAjU,EAAAC,IACAxvC,GAAAymC,EAAAke,GAvHA,SAAApvD,EAAA4a,EAAAC,GACA,SAAApQ,EAAAzN,EAAAC,GACA,OAAA2d,EAAA5a,EAAAhD,EAAA6d,EAAA7a,EAAA/C,GAKA,OAHAwN,EAAAzM,OAAA,SAAAhB,EAAAC,GACA,QAAAD,EAAA4d,GAAA5a,GAAA6a,EAAA5d,GAAA+C,IAEAyK,IAgHAzK,EAAAhD,EAAAojD,EAAA,GAAAnjD,EAAAmjD,EAAA,GAAAlP,GAKA,OAJArjB,EAAAoxB,GAAAC,EAAAC,EAAAC,GACA0Q,EAAA/Q,GAAAkP,EAAAxjD,GACAslD,EAAAhR,GAAAlxB,EAAAiiC,GACAD,EAAA7B,GAAA8B,EAAA5B,GACA1X,IAGA,SAAAA,IAEA,OADA2P,EAAAC,EAAA,KACA4G,EAGA,OA3EAA,EAAAtV,OAAA,SAAAA,GACA,OAAAyO,GAAAC,IAAA1O,EAAAyO,IAAAgJ,GAnEA,SAAAthC,GACA,OAAAw/B,IACA50C,MAAA,SAAAzb,EAAAC,GACA,IAAArE,EAAAi1B,EAAA7wB,EAAAC,GACA,OAAA1B,KAAAm8C,OAAAj/B,MAAA7f,EAAA,GAAAA,EAAA,OA+DAw3D,CAAAviC,EAAAuiC,CAAAJ,EAAAH,EAAAK,EAAA9J,EAAA1O,QAGAsV,EAAAgD,QAAA,SAAAxoD,GACA,OAAA/H,UAAAC,QAAAswD,EAAAxoD,EAAAqrC,OAAAlzC,EAAA62C,KAAAwZ,GAGAhD,EAAAkD,SAAA,SAAA1oD,GACA,OAAA/H,UAAAC,QAAAwwD,EAAA1oD,EAAAN,EAAA06B,EAAArgC,EAAAE,EAAA,KAAA+0C,KAAA0Z,GAGAlD,EAAAqD,UAAA,SAAA7oD,GACA,OAAA/H,UAAAC,QAAAswD,GAAAxoD,EAAA27C,GAAAtQ,EAAArrC,EAAA2vC,KAAAtE,EAAA,KAAAod,IAAAzZ,KAAA3D,EAAAqE,IAGA8V,EAAAS,WAAA,SAAAjmD,GACA,OAAA/H,UAAAC,QAAAwwD,EAAA,MAAA1oD,GAAAN,EAAA06B,EAAArgC,EAAAE,EAAA,KAAA6nD,IAAAzE,GAAA39C,GAAAM,EAAA,MAAAo6B,GAAAp6B,EAAA,MAAAjG,GAAAiG,EAAA,MAAA/F,GAAA+F,EAAA,OAAAgvC,KAAA,MAAAtvC,EAAA,OAAAA,EAAA06B,IAAArgC,EAAAE,KAGAurD,EAAA9iD,MAAA,SAAA1C,GACA,OAAA/H,UAAAC,QAAAM,GAAAwH,EAAA2oD,KAAAnwD,GAGAgtD,EAAAp+B,UAAA,SAAApnB,GACA,OAAA/H,UAAAC,QAAA1C,GAAAwK,EAAA,GAAAvK,GAAAuK,EAAA,GAAA2oD,MAAAnzD,EAAAC,IAGA+vD,EAAA5M,OAAA,SAAA54C,GACA,OAAA/H,UAAAC,QAAAs6C,EAAAxyC,EAAA,OAAA2vC,GAAA8C,EAAAzyC,EAAA,OAAA2vC,GAAAgZ,MAAAnW,EAAA9C,GAAA+C,EAAA/C,KAGA8V,EAAAn/B,OAAA,SAAArmB,GACA,OAAA/H,UAAAC,QAAAw/C,EAAA13C,EAAA,OAAA2vC,GAAAgI,EAAA33C,EAAA,OAAA2vC,GAAAiI,EAAA53C,EAAA9H,OAAA,EAAA8H,EAAA,OAAA2vC,GAAA,EAAAgZ,MAAAjR,EAAAhI,GAAAiI,EAAAjI,GAAAkI,EAAAlI,KAGA8V,EAAA5a,MAAA,SAAA5qC,GACA,OAAA/H,UAAAC,QAAAwxC,EAAA1pC,EAAA,IAAA2vC,GAAAgZ,KAAAjf,EAAAgG,IAGA8V,EAAAjZ,UAAA,SAAAvsC,GACA,OAAA/H,UAAAC,QAAAmwD,EAAA7B,GAAA8B,EAAA5B,EAAA1mD,KAAAgvC,KAAAt0C,GAAAgsD,IAGAlB,EAAAU,UAAA,SAAA7wB,EAAArjC,GACA,OAAAk0D,GAAAV,EAAAnwB,EAAArjC,IAGAwzD,EAAAW,QAAA,SAAA73C,EAAAtc,GACA,OAAAm0D,GAAAX,EAAAl3C,EAAAtc,IAGAwzD,EAAAY,SAAA,SAAA5zD,EAAAR,GACA,OAAAo0D,GAAAZ,EAAAhzD,EAAAR,IAGAwzD,EAAAa,UAAA,SAAA5zD,EAAAT,GACA,OAAAq0D,GAAAb,EAAA/yD,EAAAT,IAkBA,WAGA,OAFAy0D,EAAA2B,EAAAhlD,MAAArP,KAAAkE,WACAutD,EAAAhvD,OAAAiwD,EAAAjwD,UACAmyD,KC9JA,SAAAG,GAAAV,GACA,IAAAvO,EAAA,EACAK,EAAA5K,GAAA,EACA5+C,EAAAy3D,GAAAC,GACAh2D,EAAA1B,EAAAmpD,EAAAK,GAMA,OAJA9nD,EAAA22D,UAAA,SAAA/oD,GACA,OAAA/H,UAAAC,OAAAxH,EAAAmpD,EAAA75C,EAAA,GAAA2vC,GAAAuK,EAAAl6C,EAAA,GAAA2vC,KAAAkK,EAAAnK,GAAAwK,EAAAxK,KAGAt9C,ECTA,SAAA42D,GAAA5uB,EAAAngC,GACA,IAAAoiC,EAAAwT,GAAAzV,GAAAroC,GAAAsqC,EAAAwT,GAAA51C,IAAA,EAGA,GAAAiF,GAAAnN,GAAAs9C,GAAA,OCNA,SAAAwK,GACA,IAAAE,EAAAnK,GAAAiK,GAEA,SAAAvB,EAAA9F,EAAAC,GACA,OAAAD,EAAAuH,EAAAlK,GAAA4C,GAAAsH,GAOA,OAJAzB,EAAA9hD,OAAA,SAAAhB,EAAAC,GACA,OAAAD,EAAAukD,EAAAnnB,GAAAn9B,EAAAskD,KAGAzB,EDLA2Q,CAAA7uB,GAEA,IAAAzpC,EAAA,EAAA0rC,GAAA,EAAAtqC,EAAAsqC,GAAA3T,EAAAhuB,GAAA/J,GAAAoB,EAEA,SAAA00D,EAAAjxD,EAAAC,GACA,IAAArE,EAAAsJ,GAAA/J,EAAA,EAAAoB,EAAA89C,GAAAp6C,IAAA1D,EACA,OAAAX,EAAAy+C,GAAAr6C,GAAAzD,GAAA22B,EAAAt3B,EAAAw+C,GAAAp6C,IAQA,OALAixD,EAAAjwD,OAAA,SAAAhB,EAAAC,GACA,IAAAyzD,EAAAxgC,EAAAjzB,EACA,OAAA0sB,GAAA3sB,EAAA0J,GAAAgqD,IAAAn3D,EAAA+9C,GAAAoZ,GAAAt2B,IAAAjiC,GAAA6E,IAAA0zD,KAAAn3D,MAAA,EAAAA,MAGA00D,EAGA,IAAA0C,GAAA,WACA,OAAAL,GAAAE,IACAtmD,MAAA,SACAk2C,QAAA,aE1BAwQ,GAAA,WACA,OAAAD,KACAJ,WAAA,YACArmD,MAAA,MACA0kB,WAAA,UACAf,QAAA,OACAuyB,SAAA,WCgBA,IAAAyQ,GAAA,WACA,IAAA1K,EACAC,EACA0K,EACAC,EACAC,EACAv4C,EAHAw4C,EAAAL,KACAM,EAAAP,KAAA9iC,QAAA,QAAAuyB,SAAA,SAAAmQ,WAAA,QACAY,EAAAR,KAAA9iC,QAAA,QAAAuyB,SAAA,SAAAmQ,WAAA,OACAa,GAA4B34C,MAAA,SAAAzb,EAAAC,GAAuBwb,GAAAzb,EAAAC,KAEnD,SAAAo0D,EAAA1pB,GACA,IAAA3qC,EAAA2qC,EAAA,GAAA1qC,EAAA0qC,EAAA,GACA,OAAAlvB,EAAA,KACAq4C,EAAAr4C,MAAAzb,EAAAC,GAAAwb,IACAs4C,EAAAt4C,MAAAzb,EAAAC,GAAAwb,KACAu4C,EAAAv4C,MAAAzb,EAAAC,GAAAwb,GAmEA,SAAA+9B,IAEA,OADA2P,EAAAC,EAAA,KACAiL,EAGA,OArEAA,EAAArzD,OAAA,SAAA2pC,GACA,IAAA3nC,EAAAixD,EAAA/mD,QACAlR,EAAAi4D,EAAAriC,YACA5xB,GAAA2qC,EAAA,GAAA3uC,EAAA,IAAAgH,EACA/C,GAAA0qC,EAAA,GAAA3uC,EAAA,IAAAgH,EACA,OAAA/C,GAAA,KAAAA,EAAA,MAAAD,IAAA,MAAAA,GAAA,KAAAk0D,EACAj0D,GAAA,MAAAA,EAAA,MAAAD,IAAA,MAAAA,GAAA,KAAAm0D,EACAF,GAAAjzD,OAAA2pC,IAGA0pB,EAAA3Z,OAAA,SAAAA,GACA,OAAAyO,GAAAC,IAAA1O,EAAAyO,IA5CA,SAAAmL,GACA,IAAA/3D,EAAA+3D,EAAA5xD,OACA,OACA+Y,MAAA,SAAAzb,EAAAC,GAAuC,IAAZ,IAAAnF,GAAA,IAAYA,EAAAyB,GAAA+3D,EAAAx5D,GAAA2gB,MAAAzb,EAAAC,IACvCg7C,OAAA,WAAoC,IAAZ,IAAAngD,GAAA,IAAYA,EAAAyB,GAAA+3D,EAAAx5D,GAAAmgD,UACpCa,UAAA,WAAuC,IAAZ,IAAAhhD,GAAA,IAAYA,EAAAyB,GAAA+3D,EAAAx5D,GAAAghD,aACvCC,QAAA,WAAqC,IAAZ,IAAAjhD,GAAA,IAAYA,EAAAyB,GAAA+3D,EAAAx5D,GAAAihD,WACrCC,aAAA,WAA0C,IAAZ,IAAAlhD,GAAA,IAAYA,EAAAyB,GAAA+3D,EAAAx5D,GAAAkhD,gBAC1CC,WAAA,WAAwC,IAAZ,IAAAnhD,GAAA,IAAYA,EAAAyB,GAAA+3D,EAAAx5D,GAAAmhD,eAoCxCsY,EAAAN,EAAAvZ,OAAA0O,EAAA1O,GAAAwZ,EAAAxZ,UAAAyZ,EAAAzZ,aAGA2Z,EAAAtd,UAAA,SAAAvsC,GACA,OAAA/H,UAAAC,QACAuxD,EAAAld,UAAAvsC,GAAA0pD,EAAAnd,UAAAvsC,GAAA2pD,EAAApd,UAAAvsC,GACAgvC,KAFAya,EAAAld,aAKAsd,EAAAnnD,MAAA,SAAA1C,GACA,OAAA/H,UAAAC,QACAuxD,EAAA/mD,MAAA1C,GAAA0pD,EAAAhnD,MAAA,IAAA1C,GAAA2pD,EAAAjnD,MAAA1C,GACA6pD,EAAAziC,UAAAqiC,EAAAriC,cAFAqiC,EAAA/mD,SAKAmnD,EAAAziC,UAAA,SAAApnB,GACA,IAAA/H,UAAAC,OAAA,OAAAuxD,EAAAriC,YACA,IAAA5uB,EAAAixD,EAAA/mD,QAAAlN,GAAAwK,EAAA,GAAAvK,GAAAuK,EAAA,GAiBA,OAfAspD,EAAAG,EACAriC,UAAApnB,GACAimD,aAAAzwD,EAAA,KAAAgD,EAAA/C,EAAA,KAAA+C,IAAAhD,EAAA,KAAAgD,EAAA/C,EAAA,KAAA+C,KACA03C,OAAA0Z,GAEAL,EAAAG,EACAtiC,WAAA5xB,EAAA,KAAAgD,EAAA/C,EAAA,KAAA+C,IACAytD,aAAAzwD,EAAA,KAAAgD,EAAA62C,GAAA55C,EAAA,IAAA+C,EAAA62C,KAAA75C,EAAA,KAAAgD,EAAA62C,GAAA55C,EAAA,KAAA+C,EAAA62C,MACAa,OAAA0Z,GAEAJ,EAAAG,EACAviC,WAAA5xB,EAAA,KAAAgD,EAAA/C,EAAA,KAAA+C,IACAytD,aAAAzwD,EAAA,KAAAgD,EAAA62C,GAAA55C,EAAA,KAAA+C,EAAA62C,KAAA75C,EAAA,KAAAgD,EAAA62C,GAAA55C,EAAA,KAAA+C,EAAA62C,MACAa,OAAA0Z,GAEA5a,KAGA6a,EAAA3D,UAAA,SAAA7wB,EAAArjC,GACA,OAAAk0D,GAAA2D,EAAAx0B,EAAArjC,IAGA63D,EAAA1D,QAAA,SAAA73C,EAAAtc,GACA,OAAAm0D,GAAA0D,EAAAv7C,EAAAtc,IAGA63D,EAAAzD,SAAA,SAAA5zD,EAAAR,GACA,OAAAo0D,GAAAyD,EAAAr3D,EAAAR,IAGA63D,EAAAxD,UAAA,SAAA5zD,EAAAT,GACA,OAAAq0D,GAAAwD,EAAAp3D,EAAAT,IAQA63D,EAAAnnD,MAAA,OC3GA,SAAAsnD,GAAAtnD,GACA,gBAAAlN,EAAAC,GACA,IAAAqC,EAAA83C,GAAAp6C,GACAuC,EAAA63C,GAAAn6C,GACA+C,EAAAkK,EAAA5K,EAAAC,GACA,OACAS,EAAAT,EAAA83C,GAAAr6C,GACAgD,EAAAq3C,GAAAp6C,KAKA,SAAAw0D,GAAArf,GACA,gBAAAp1C,EAAAC,GACA,IAAAmsB,EAAAlnB,GAAAlF,IAAAC,KACA9E,EAAAi6C,EAAAhpB,GACAsoC,EAAAra,GAAAl/C,GACAw5D,EAAAva,GAAAj/C,GACA,OACAwxB,GAAA3sB,EAAA00D,EAAAtoC,EAAAuoC,GACAv3B,GAAAhR,GAAAnsB,EAAAy0D,EAAAtoC,KClBA,IAAAwoC,GAAAJ,GAAA,SAAAK,GACA,OAAA3vD,GAAA,KAAA2vD,MAGAD,GAAA5zD,OAAAyzD,GAAA,SAAAroC,GACA,SAAAgR,GAAAhR,EAAA,KAGA,IAAA0oC,GAAA,WACA,OAAApC,GAAAkC,IACA1nD,MAAA,QACAmmD,UAAA,UCXA0B,GAAAP,GAAA,SAAAr5D,GACA,OAAAA,EAAAqqC,GAAArqC,OAAAk/C,GAAAl/C,KAGA45D,GAAA/zD,OAAAyzD,GAAA,SAAAroC,GACA,OAAAA,IAGA,IAAA4oC,GAAA,WACA,OAAAtC,GAAAqC,IACA7nD,MAAA,SACAmmD,UAAA,UCXA,SAAA4B,GAAAjY,EAAAC,GACA,OAAAD,EAAA3zC,GAAA8f,IAAA4wB,GAAAkD,GAAA,KAGAgY,GAAAj0D,OAAA,SAAAhB,EAAAC,GACA,OAAAD,EAAA,EAAAkxB,GAAAkB,GAAAnyB,IAAA85C,KAGA,IAAAmb,GAAA,WACA,OAAAC,GAAAF,IACA/nD,MAAA,IAAA+sC,KAGA,SAAAkb,GAAAlE,GACA,IAKArsB,EAAArgC,EAAAE,EALAvJ,EAAAw3D,GAAAzB,GACA7N,EAAAloD,EAAAkoD,OACAl2C,EAAAhS,EAAAgS,MACA0kB,EAAA12B,EAAA02B,UACA6+B,EAAAv1D,EAAAu1D,WACAvmD,EAAA,KAkBA,SAAAkrD,IACA,IAAApyD,EAAA82C,GAAA5sC,IACAlR,EAAAd,EAAA2nD,GAAA3nD,EAAA21B,UAAA7vB,QAAA,OACA,OAAAyvD,EAAA,MAAAvmD,IACAlO,EAAA,GAAAgH,EAAAhH,EAAA,GAAAgH,IAAAhH,EAAA,GAAAgH,EAAAhH,EAAA,GAAAgH,IAAAiuD,IAAAgE,KACAhwD,KAAAlD,IAAA/F,EAAA,GAAAgH,EAAAkH,GAAA06B,IAAA3/B,KAAAnD,IAAA9F,EAAA,GAAAgH,EAAAuB,GAAAE,MACAyF,EAAAjF,KAAAlD,IAAA/F,EAAA,GAAAgH,EAAA4hC,KAAArgC,EAAAU,KAAAnD,IAAA9F,EAAA,GAAAgH,EAAAyB,MAGA,OAzBAvJ,EAAAgS,MAAA,SAAA1C,GACA,OAAA/H,UAAAC,QAAAwK,EAAA1C,GAAA4qD,KAAAloD,KAGAhS,EAAA02B,UAAA,SAAApnB,GACA,OAAA/H,UAAAC,QAAAkvB,EAAApnB,GAAA4qD,KAAAxjC,KAGA12B,EAAAkoD,OAAA,SAAA54C,GACA,OAAA/H,UAAAC,QAAA0gD,EAAA54C,GAAA4qD,KAAAhS,KAGAloD,EAAAu1D,WAAA,SAAAjmD,GACA,OAAA/H,UAAAC,QAAA,MAAA8H,EAAAN,EAAA06B,EAAArgC,EAAAE,EAAA,MAAAyF,GAAAM,EAAA,MAAAo6B,GAAAp6B,EAAA,MAAAjG,GAAAiG,EAAA,MAAA/F,GAAA+F,EAAA,OAAA4qD,KAAA,MAAAlrD,EAAA,OAAAA,EAAA06B,IAAArgC,EAAAE,KAYA2wD,IC9CA,SAAAC,GAAAp1D,GACA,OAAAkpB,IAAA4wB,GAAA95C,GAAA,GAGA,SAAAq1D,GAAA1wB,EAAAngC,GACA,IAAAsnD,EAAA3R,GAAAxV,GACAroC,EAAAqoC,IAAAngC,EAAA41C,GAAAzV,GAAAv7B,GAAA0iD,EAAA3R,GAAA31C,IAAA4E,GAAAgsD,GAAA5wD,GAAA4wD,GAAAzwB,IACA5+B,EAAA+lD,EAAA5mD,GAAAkwD,GAAAzwB,GAAAroC,KAEA,IAAAA,EAAA,OAAA04D,GAEA,SAAAhE,EAAAjxD,EAAAC,GACA+F,EAAA,EAAgB/F,GAAA85C,GAAAF,KAAA55C,GAAA85C,GAAAF,IACN55C,EAAA85C,GAAAF,KAAA55C,EAAA85C,GAAAF,IACV,IAAAj+C,EAAAoK,EAAAb,GAAAkwD,GAAAp1D,GAAA1D,GACA,OAAAX,EAAAy+C,GAAA99C,EAAAyD,GAAAgG,EAAApK,EAAAw+C,GAAA79C,EAAAyD,IAQA,OALAixD,EAAAjwD,OAAA,SAAAhB,EAAAC,GACA,IAAAi1C,EAAAlvC,EAAA/F,EAAArE,EAAA0+C,GAAA/9C,GAAA2I,GAAAlF,IAAAk1C,KACA,OAAAvoB,GAAA3sB,EAAA0J,GAAAwrC,IAAA34C,EAAA+9C,GAAApF,GAAA,EAAAhkB,GAAA/rB,GAAAa,EAAApK,EAAA,EAAAW,IAAAw9C,KAGAkX,EAGA,IAAAsE,GAAA,WACA,OAAAjC,GAAAgC,IACApoD,MAAA,OACAqmD,WAAA,SC/BA,SAAAiC,GAAAxY,EAAAC,GACA,OAAAD,EAAAC,GAGAuY,GAAAx0D,OAAAw0D,GAEA,IAAAC,GAAA,WACA,OAAA/C,GAAA8C,IACAtoD,MAAA,SCNA,SAAAwoD,GAAA9wB,EAAAngC,GACA,IAAAsnD,EAAA3R,GAAAxV,GACAroC,EAAAqoC,IAAAngC,EAAA41C,GAAAzV,IAAAmnB,EAAA3R,GAAA31C,OAAAmgC,GACAta,EAAAyhC,EAAAxvD,EAAAqoC,EAEA,GAAAl7B,GAAAnN,GAAAs9C,GAAA,OAAA2b,GAEA,SAAAvE,EAAAjxD,EAAAC,GACA,IAAA01D,EAAArrC,EAAArqB,EAAA21D,EAAAr5D,EAAAyD,EACA,OAAA21D,EAAAtb,GAAAub,GAAAtrC,EAAAqrC,EAAAvb,GAAAwb,IAQA,OALA3E,EAAAjwD,OAAA,SAAAhB,EAAAC,GACA,IAAA01D,EAAArrC,EAAArqB,EACA,OAAA0sB,GAAA3sB,EAAA0J,GAAAisD,IAAAp5D,EAAA+9C,GAAAqb,GAAArrC,EAAAgwB,GAAA/9C,GAAA2I,GAAAlF,IAAA21D,OAGA1E,EAGA,IAAA4E,GAAA,WACA,OAAAvC,GAAAoC,IACAxoD,MAAA,SACAk2C,QAAA,aCvBA,SAAA0S,GAAA91D,EAAAC,GACA,IAAAsC,EAAA63C,GAAAn6C,GAAA+C,EAAAo3C,GAAAp6C,GAAAuC,EACA,OAAAA,EAAA83C,GAAAr6C,GAAAgD,EAAAq3C,GAAAp6C,GAAA+C,GAGA8yD,GAAA90D,OAAAyzD,GAAAvjC,IAEA,IAAA6kC,GAAA,WACA,OAAArD,GAAAoD,IACA5oD,MAAA,SACAmmD,UAAA,KCTA,SAAA2C,GAAAC,EAAAC,EAAAC,EAAAC,GACA,WAAAH,GAAA,IAAAC,GAAA,IAAAC,GAAA,IAAAC,EAAA9J,GAAA+D,IACA50C,MAAA,SAAAzb,EAAAC,GACA1B,KAAAm8C,OAAAj/B,MAAAzb,EAAAi2D,EAAAE,EAAAl2D,EAAAi2D,EAAAE,MAKA,IAAAC,GAAA,WACA,IACAzxB,EAAArgC,EAAAE,EAEA0kD,EACAC,EACA4G,EALAhtD,EAAA,EAAAmzD,EAAA,EAAAC,EAAA,EAAAzlB,EAAA,EAAAC,EAAA,EAAAnjC,EAAA6+C,GACApiD,EAAA,KACAgpD,EAAA5G,GAKA,SAAA9S,IAEA,OADA2P,EAAAC,EAAA,KACA4G,EAGA,OAAAA,GACAtV,OAAA,SAAAA,GACA,OAAAyO,GAAAC,IAAA1O,EAAAyO,IAAA17C,EAAAylD,EAAA9J,EAAA1O,KAEAwY,SAAA,SAAA1oD,GACA,OAAA/H,UAAAC,QAAAwwD,EAAA1oD,EAAAN,EAAA06B,EAAArgC,EAAAE,EAAA,KAAA+0C,KAAA0Z,GAEAzC,WAAA,SAAAjmD,GACA,OAAA/H,UAAAC,QAAAwwD,EAAA,MAAA1oD,GAAAN,EAAA06B,EAAArgC,EAAAE,EAAA,KAAA6nD,IAAAzE,GAAA39C,GAAAM,EAAA,MAAAo6B,GAAAp6B,EAAA,MAAAjG,GAAAiG,EAAA,MAAA/F,GAAA+F,EAAA,OAAAgvC,KAAA,MAAAtvC,EAAA,OAAAA,EAAA06B,IAAArgC,EAAAE,KAEAyI,MAAA,SAAA1C,GACA,OAAA/H,UAAAC,QAAA+K,EAAAuoD,IAAAhzD,GAAAwH,GAAAmmC,EAAA3tC,EAAA4tC,EAAAulB,EAAAC,GAAA5c,KAAAx2C,GAEA4uB,UAAA,SAAApnB,GACA,OAAA/H,UAAAC,QAAA+K,EAAAuoD,GAAAhzD,EAAA2tC,EAAA3tC,EAAA4tC,EAAAulB,GAAA3rD,EAAA,GAAA4rD,GAAA5rD,EAAA,IAAAgvC,MAAA2c,EAAAC,IAEAE,SAAA,SAAA9rD,GACA,OAAA/H,UAAAC,QAAA+K,EAAAuoD,GAAAhzD,GAAA2tC,EAAAnmC,GAAA,KAAAxH,EAAA4tC,EAAAulB,EAAAC,GAAA5c,KAAA7I,EAAA,GAEA4lB,SAAA,SAAA/rD,GACA,OAAA/H,UAAAC,QAAA+K,EAAAuoD,GAAAhzD,EAAA2tC,EAAA3tC,GAAA4tC,EAAApmC,GAAA,KAAA2rD,EAAAC,GAAA5c,KAAA5I,EAAA,GAEA8f,UAAA,SAAA7wB,EAAArjC,GACA,OAAAk0D,GAAAV,EAAAnwB,EAAArjC,IAEAm0D,QAAA,SAAA73C,EAAAtc,GACA,OAAAm0D,GAAAX,EAAAl3C,EAAAtc,IAEAo0D,SAAA,SAAA5zD,EAAAR,GACA,OAAAo0D,GAAAZ,EAAAhzD,EAAAR,IAEAq0D,UAAA,SAAA5zD,EAAAT,GACA,OAAAq0D,GAAAb,EAAA/yD,EAAAT,MCvDA,SAAAg6D,GAAAxZ,EAAAC,GACA,IAAAmU,EAAAnU,IAAAwZ,EAAArF,IACA,OACApU,GAAA,cAAAoU,EAAAqF,MAAA,QAAArF,EAAA,QAAAqF,GAAA,UACAxZ,GAAA,SAAAmU,GAAA,QAAAqF,GAAA,QAAArF,EAAA,gBAAAqF,MAIAD,GAAAx1D,OAAA,SAAAhB,EAAAC,GACA,IAAA0H,EAAAs1C,EAAAh9C,EAAAnF,EAAA,GACA,GACA,IAAAs2D,EAAAnU,IAAAwZ,EAAArF,IACAnU,GAAAt1C,GAAAs1C,GAAA,SAAAmU,GAAA,QAAAqF,GAAA,QAAArF,EAAA,gBAAAqF,KAAAx2D,IACA,SAAAmxD,GAAA,QAAAqF,GAAA,QAAArF,EAAA,mBAAAqF,WACG/sD,GAAA/B,GAAAkyC,MAAA/+C,EAAA,GACH,OACAkF,GAAA,OAAAoxD,EAAAnU,MAAAmU,UAAA,gBAAAA,GAAA,mBACAnU,IAIA,IAAAyZ,GAAA,WACA,OAAAhE,GAAA8D,IACAtpD,MAAA,UCtBA,SAAAypD,GAAA32D,EAAAC,GACA,OAAAm6C,GAAAn6C,GAAAo6C,GAAAr6C,GAAAq6C,GAAAp6C,IAGA02D,GAAA31D,OAAAyzD,GAAAr3B,IAEA,IAAAw5B,GAAA,WACA,OAAAlE,GAAAiE,IACAzpD,MAAA,OACAmmD,UAAA,GAAAxZ,KCTA,SAAAgd,GAAA72D,EAAAC,GACA,IAAAsC,EAAA63C,GAAAn6C,GAAA+C,EAAA,EAAAo3C,GAAAp6C,GAAAuC,EACA,OAAAA,EAAA83C,GAAAr6C,GAAAgD,EAAAq3C,GAAAp6C,GAAA+C,GAGA6zD,GAAA71D,OAAAyzD,GAAA,SAAAroC,GACA,SAAA8E,GAAA9E,KAGA,IAAA0qC,GAAA,WACA,OAAApE,GAAAmE,IACA3pD,MAAA,KACAmmD,UAAA,MCbA,SAAA0D,GAAA/Z,EAAAC,GACA,OAAA5zC,GAAA8f,IAAA4wB,GAAAkD,GAAA,KAAAD,GAGA+Z,GAAA/1D,OAAA,SAAAhB,EAAAC,GACA,QAAAA,EAAA,EAAAixB,GAAAkB,GAAApyB,IAAA+5C,KAGA,IAAAid,GAAA,WACA,IAAA97D,EAAAi6D,GAAA4B,IACA3T,EAAAloD,EAAAkoD,OACAvyB,EAAA31B,EAAA21B,OAUA,OARA31B,EAAAkoD,OAAA,SAAA54C,GACA,OAAA/H,UAAAC,OAAA0gD,IAAA54C,EAAA,GAAAA,EAAA,OAAAA,EAAA44C,KAAA,IAAA54C,EAAA,KAGAtP,EAAA21B,OAAA,SAAArmB,GACA,OAAA/H,UAAAC,OAAAmuB,GAAArmB,EAAA,GAAAA,EAAA,GAAAA,EAAA9H,OAAA,EAAA8H,EAAA,aAAAA,EAAAqmB,KAAA,GAAArmB,EAAA,GAAAA,EAAA,QAGAqmB,GAAA,SACA3jB,MAAA,UCzBA,SAAA+pD,GAAAlyD,EAAAC,GACA,OAAAD,EAAAgO,SAAA/N,EAAA+N,OAAA,IAOA,SAAAmkD,GAAAl3D,EAAA7E,GACA,OAAA6E,EAAA7E,EAAA6E,EAOA,SAAAm3D,GAAAl3D,EAAA9E,GACA,OAAA8J,KAAAlD,IAAA9B,EAAA9E,EAAA8E,GAeA,IAAAm3D,GAAA,WACA,IAAAC,EAAAJ,GACAr5C,EAAA,EACAC,EAAA,EACAy5C,GAAA,EAEA,SAAAF,EAAAh9D,GACA,IAAAm9D,EACAv3D,EAAA,EAGA5F,EAAAo9D,UAAA,SAAA7jD,GACA,IAAA2lB,EAAA3lB,EAAA2lB,SACAA,GACA3lB,EAAA3T,EA1CA,SAAAs5B,GACA,OAAAA,EAAA95B,OAAA03D,GAAA,GAAA59B,EAAA52B,OAyCA+0D,CAAAn+B,GACA3lB,EAAA1T,EAnCA,SAAAq5B,GACA,SAAAA,EAAA95B,OAAA23D,GAAA,GAkCAO,CAAAp+B,KAEA3lB,EAAA3T,EAAAu3D,EAAAv3D,GAAAq3D,EAAA1jD,EAAA4jD,GAAA,EACA5jD,EAAA1T,EAAA,EACAs3D,EAAA5jD,KAIA,IAAAzN,EAnCA,SAAAyN,GAEA,IADA,IAAA2lB,EACAA,EAAA3lB,EAAA2lB,UAAA3lB,EAAA2lB,EAAA,GACA,OAAA3lB,EAgCAgkD,CAAAv9D,GACAkM,EA9BA,SAAAqN,GAEA,IADA,IAAA2lB,EACAA,EAAA3lB,EAAA2lB,UAAA3lB,EAAA2lB,IAAA52B,OAAA,GACA,OAAAiR,EA2BAikD,CAAAx9D,GACA8P,EAAAhE,EAAAlG,EAAAq3D,EAAAnxD,EAAAI,GAAA,EACA/B,EAAA+B,EAAAtG,EAAAq3D,EAAA/wD,EAAAJ,GAAA,EAGA,OAAA9L,EAAAo9D,UAAAF,EAAA,SAAA3jD,GACAA,EAAA3T,GAAA2T,EAAA3T,EAAA5F,EAAA4F,GAAA4d,EACAjK,EAAA1T,GAAA7F,EAAA6F,EAAA0T,EAAA1T,GAAA4d,GACK,SAAAlK,GACLA,EAAA3T,GAAA2T,EAAA3T,EAAAkK,IAAA3F,EAAA2F,GAAA0T,EACAjK,EAAA1T,GAAA,GAAA7F,EAAA6F,EAAA0T,EAAA1T,EAAA7F,EAAA6F,EAAA,IAAA4d,IAgBA,OAZAu5C,EAAAC,WAAA,SAAAr3D,GACA,OAAAyC,UAAAC,QAAA20D,EAAAr3D,EAAAo3D,GAAAC,GAGAD,EAAAt+C,KAAA,SAAA9Y,GACA,OAAAyC,UAAAC,QAAA40D,GAAA,EAAA15C,GAAA5d,EAAA,GAAA6d,GAAA7d,EAAA,GAAAo3D,GAAAE,EAAA,MAAA15C,EAAAC,IAGAu5C,EAAAE,SAAA,SAAAt3D,GACA,OAAAyC,UAAAC,QAAA40D,GAAA,EAAA15C,GAAA5d,EAAA,GAAA6d,GAAA7d,EAAA,GAAAo3D,GAAAE,GAAA15C,EAAAC,GAAA,MAGAu5C,GClFA,SAAAS,GAAAlkD,GACA,IAAA9L,EAAA,EACAyxB,EAAA3lB,EAAA2lB,SACAx+B,EAAAw+B,KAAA52B,OACA,GAAA5H,EACA,OAAAA,GAAA,GAAA+M,GAAAyxB,EAAAx+B,GAAAiB,WADA8L,EAAA,EAEA8L,EAAA5X,MAAA8L,ECMA,SAAAiwD,GAAA35D,EAAAm7B,GACA,IAEA3lB,EAEAN,EACA0kD,EACAj9D,EACAyB,EAPAnC,EAAA,IAAA49D,GAAA75D,GACA85D,GAAA95D,EAAApC,QAAA3B,EAAA2B,MAAAoC,EAAApC,OAEAge,GAAA3f,GAQA,IAFA,MAAAk/B,MAAA4+B,IAEAvkD,EAAAoG,EAAA1P,OAEA,GADA4tD,IAAAtkD,EAAA5X,OAAA4X,EAAAxV,KAAApC,QACAg8D,EAAAz+B,EAAA3lB,EAAAxV,SAAA5B,EAAAw7D,EAAAr1D,QAEA,IADAiR,EAAA2lB,SAAA,IAAAh6B,MAAA/C,GACAzB,EAAAyB,EAAA,EAAqBzB,GAAA,IAAQA,EAC7Bif,EAAAzY,KAAA+R,EAAAM,EAAA2lB,SAAAx+B,GAAA,IAAAk9D,GAAAD,EAAAj9D,KACAuY,EAAAN,OAAAY,EACAN,EAAAu0B,MAAAj0B,EAAAi0B,MAAA,EAKA,OAAAxtC,EAAA+9D,WAAAC,IAOA,SAAAF,GAAA98D,GACA,OAAAA,EAAAk+B,SAGA,SAAA++B,GAAA1kD,GACAA,EAAAxV,KAAAwV,EAAAxV,UAGA,SAAAi6D,GAAAzkD,GACA,IAAA1W,EAAA,EACA,GAAA0W,EAAA1W,gBACA0W,IAAAZ,SAAAY,EAAA1W,YAGA,SAAA+6D,GAAA75D,GACAI,KAAAJ,OACAI,KAAAqpC,MACArpC,KAAAtB,OAAA,EACAsB,KAAAwU,OAAA,KAGAilD,GAAAt7D,UAAAo7D,GAAAp7D,WACAsT,YAAAgoD,GACAjvD,MDzDA,WACA,OAAAxK,KAAAi5D,UAAAK,KCyDAxoD,KCnEA,SAAAjO,GACA,IAAAia,EAAAie,EAAAx+B,EAAAyB,EAAAoX,EAAApV,KAAAgV,GAAAI,GACA,GAEA,IADA0H,EAAA9H,EAAAvK,UAAAuK,KACAI,EAAA0H,EAAAhR,OAEA,GADAjJ,EAAAuS,GAAA2lB,EAAA3lB,EAAA2lB,SACA,IAAAx+B,EAAA,EAAAyB,EAAA+8B,EAAA52B,OAAoD5H,EAAAyB,IAAOzB,EAC3DyY,EAAAjS,KAAAg4B,EAAAx+B,UAGGyY,EAAA7Q,QACH,OAAAnE,MDyDAi5D,UEpEA,SAAAp2D,GAEA,IADA,IAAAk4B,EAAAx+B,EAAAyB,EAAAoX,EAAApV,KAAAwb,GAAApG,GAAAJ,KACAI,EAAAoG,EAAA1P,OAEA,GADAkJ,EAAAjS,KAAAqS,GAAA2lB,EAAA3lB,EAAA2lB,SACA,IAAAx+B,EAAA,EAAAyB,EAAA+8B,EAAA52B,OAAkD5H,EAAAyB,IAAOzB,EACzDif,EAAAzY,KAAAg4B,EAAAx+B,IAGA,KAAA6Y,EAAAJ,EAAAlJ,OACAjJ,EAAAuS,GAEA,OAAApV,MF0DA45D,WGrEA,SAAA/2D,GAEA,IADA,IAAAk4B,EAAAx+B,EAAA6Y,EAAApV,KAAAwb,GAAApG,GACAA,EAAAoG,EAAA1P,OAEA,GADAjJ,EAAAuS,GAAA2lB,EAAA3lB,EAAA2lB,SACA,IAAAx+B,EAAAw+B,EAAA52B,OAAA,EAA+C5H,GAAA,IAAQA,EACvDif,EAAAzY,KAAAg4B,EAAAx+B,IAGA,OAAAyD,MH8DAsJ,IItEA,SAAA9L,GACA,OAAAwC,KAAAi5D,UAAA,SAAA7jD,GAIA,IAHA,IAAA9L,GAAA9L,EAAA4X,EAAAxV,OAAA,EACAm7B,EAAA3lB,EAAA2lB,SACAx+B,EAAAw+B,KAAA52B,SACA5H,GAAA,GAAA+M,GAAAyxB,EAAAx+B,GAAAiB,MACA4X,EAAA5X,MAAA8L,KJiEAtC,KKvEA,SAAAQ,GACA,OAAAxH,KAAA45D,WAAA,SAAAxkD,GACAA,EAAA2lB,UACA3lB,EAAA2lB,SAAA/zB,KAAAQ,MLqEAwI,KMxEA,SAAAogB,GAIA,IAHA,IAAApmB,EAAAhK,KACA+5D,EAcA,SAAAvzD,EAAAC,GACA,GAAAD,IAAAC,EAAA,OAAAD,EACA,IAAAwzD,EAAAxzD,EAAAyzD,YACAC,EAAAzzD,EAAAwzD,YACAr9D,EAAA,KAGA,IAFA4J,EAAAwzD,EAAAluD,MACArF,EAAAyzD,EAAApuD,MACAtF,IAAAC,GACA7J,EAAA4J,EACAA,EAAAwzD,EAAAluD,MACArF,EAAAyzD,EAAApuD,MAEA,OAAAlP,EA1BAu9D,CAAAnwD,EAAAomB,GACA5U,GAAAxR,GACAA,IAAA+vD,GACA/vD,IAAAwK,OACAgH,EAAAzY,KAAAiH,GAGA,IADA,IAAAvF,EAAA+W,EAAArX,OACAisB,IAAA2pC,GACAv+C,EAAA1E,OAAArS,EAAA,EAAA2rB,GACAA,IAAA5b,OAEA,OAAAgH,GN4DAy+C,UOzEA,WAEA,IADA,IAAA7kD,EAAApV,KAAAwb,GAAApG,GACAA,IAAAZ,QACAgH,EAAAzY,KAAAqS,GAEA,OAAAoG,GPqEA4+C,YQ1EA,WACA,IAAA5+C,KAIA,OAHAxb,KAAA8Q,KAAA,SAAAsE,GACAoG,EAAAzY,KAAAqS,KAEAoG,GRsEA6+C,OS3EA,WACA,IAAAA,KAMA,OALAr6D,KAAA45D,WAAA,SAAAxkD,GACAA,EAAA2lB,UACAs/B,EAAAt3D,KAAAqS,KAGAilD,GTqEA/kB,MU5EA,WACA,IAAAz5C,EAAAmE,KAAAs1C,KAMA,OALAz5C,EAAAiV,KAAA,SAAAsE,GACAA,IAAAvZ,GACAy5C,EAAAvyC,MAAkB8Z,OAAAzH,EAAAZ,OAAApS,OAAAgT,MAGlBkgC,GVsEAxlC,KAtCA,WACA,OAAAypD,GAAAv5D,MAAA45D,WAAAE,MWxCA,IAAAQ,GAAAv5D,MAAA5C,UAAAyL,MCEA,IAAA2wD,GAAA,SAAAh0D,GAGA,IAFA,IAAAlI,EAAA6D,EAAA3F,EAAA,EAAAyB,GAAAuI,EDDA,SAAA8B,GAKA,IAJA,IACA5K,EACAlB,EAFAI,EAAA0L,EAAAlE,OAIAxH,GACAJ,EAAAmK,KAAA4G,SAAA3Q,IAAA,EACAc,EAAA4K,EAAA1L,GACA0L,EAAA1L,GAAA0L,EAAA9L,GACA8L,EAAA9L,GAAAkB,EAGA,OAAA4K,ECXAmyD,CAAAF,GAAA59D,KAAA6J,KAAApC,OAAAhF,KAEA5C,EAAAyB,GACAK,EAAAkI,EAAAhK,GACA2F,GAAAu4D,GAAAv4D,EAAA7D,KAAA9B,GACA2F,EAAAw4D,GAAAv7D,EAAAw7D,GAAAx7D,EAAAd,IAAA9B,EAAA,GAGA,OAAA2F,GAGA,SAAAy4D,GAAAx7D,EAAAd,GACA,IAAA9B,EAAAsQ,EAEA,GAAA+tD,GAAAv8D,EAAAc,GAAA,OAAAd,GAGA,IAAA9B,EAAA,EAAaA,EAAA4C,EAAAgF,SAAc5H,EAC3B,GAAAs+D,GAAAx8D,EAAAc,EAAA5C,KACAq+D,GAAAE,GAAA37D,EAAA5C,GAAA8B,GAAAc,GACA,OAAAA,EAAA5C,GAAA8B,GAKA,IAAA9B,EAAA,EAAaA,EAAA4C,EAAAgF,OAAA,IAAkB5H,EAC/B,IAAAsQ,EAAAtQ,EAAA,EAAmBsQ,EAAA1N,EAAAgF,SAAc0I,EACjC,GAAAguD,GAAAC,GAAA37D,EAAA5C,GAAA4C,EAAA0N,IAAAxO,IACAw8D,GAAAC,GAAA37D,EAAA5C,GAAA8B,GAAAc,EAAA0N,KACAguD,GAAAC,GAAA37D,EAAA0N,GAAAxO,GAAAc,EAAA5C,KACAq+D,GAAAG,GAAA57D,EAAA5C,GAAA4C,EAAA0N,GAAAxO,GAAAc,GACA,OAAAA,EAAA5C,GAAA4C,EAAA0N,GAAAxO,GAMA,UAAAiT,MAGA,SAAAupD,GAAAr0D,EAAAC,GACA,IAAAu0D,EAAAx0D,EAAAnJ,EAAAoJ,EAAApJ,EAAAgiB,EAAA5Y,EAAAhF,EAAA+E,EAAA/E,EAAA6d,EAAA7Y,EAAA/E,EAAA8E,EAAA9E,EACA,OAAAs5D,EAAA,GAAAA,IAAA37C,IAAAC,IAGA,SAAAm7C,GAAAj0D,EAAAC,GACA,IAAAu0D,EAAAx0D,EAAAnJ,EAAAoJ,EAAApJ,EAAA,KAAAgiB,EAAA5Y,EAAAhF,EAAA+E,EAAA/E,EAAA6d,EAAA7Y,EAAA/E,EAAA8E,EAAA9E,EACA,OAAAs5D,EAAA,GAAAA,IAAA37C,IAAAC,IAGA,SAAAs7C,GAAAp0D,EAAArH,GACA,QAAA5C,EAAA,EAAiBA,EAAA4C,EAAAgF,SAAc5H,EAC/B,IAAAk+D,GAAAj0D,EAAArH,EAAA5C,IACA,SAGA,SAGA,SAAAm+D,GAAAv7D,GACA,OAAAA,EAAAgF,QACA,cAMA,SAAAqC,GACA,OACA/E,EAAA+E,EAAA/E,EACAC,EAAA8E,EAAA9E,EACArE,EAAAmJ,EAAAnJ,GAVA49D,CAAA97D,EAAA,IACA,cAAA27D,GAAA37D,EAAA,GAAAA,EAAA,IACA,cAAA47D,GAAA57D,EAAA,GAAAA,EAAA,GAAAA,EAAA,KAYA,SAAA27D,GAAAt0D,EAAAC,GACA,IAAAT,EAAAQ,EAAA/E,EAAAyE,EAAAM,EAAA9E,EAAAkzB,EAAApuB,EAAAnJ,EACA4I,EAAAQ,EAAAhF,EAAA0E,EAAAM,EAAA/E,EAAAw5D,EAAAz0D,EAAApJ,EACAipC,EAAArgC,EAAAD,EAAAugC,EAAApgC,EAAAD,EAAAi1D,EAAAD,EAAAtmC,EACAp4B,EAAAkK,KAAAC,KAAA2/B,IAAAC,KACA,OACA9kC,GAAAuE,EAAAC,EAAAqgC,EAAA9pC,EAAA2+D,GAAA,EACAz5D,GAAAwE,EAAAC,EAAAogC,EAAA/pC,EAAA2+D,GAAA,EACA99D,GAAAb,EAAAo4B,EAAAsmC,GAAA,GAIA,SAAAH,GAAAv0D,EAAAC,EAAA7J,GACA,IAAAoJ,EAAAQ,EAAA/E,EAAAyE,EAAAM,EAAA9E,EAAAkzB,EAAApuB,EAAAnJ,EACA4I,EAAAQ,EAAAhF,EAAA0E,EAAAM,EAAA/E,EAAAw5D,EAAAz0D,EAAApJ,EACA82C,EAAAv3C,EAAA6E,EAAA2yC,EAAAx3C,EAAA8E,EAAA05D,EAAAx+D,EAAAS,EACAg+D,EAAAr1D,EAAAC,EACAq1D,EAAAt1D,EAAAmuC,EACAxW,EAAAz3B,EAAAC,EACAy3B,EAAA13B,EAAAkuC,EACAoU,EAAA0S,EAAAtmC,EACA2mC,EAAAH,EAAAxmC,EACAJ,EAAAxuB,IAAAE,IAAA0uB,IACAL,EAAAC,EAAAvuB,IAAAE,IAAA+0D,IACA57D,EAAAk1B,EAAA2f,IAAAC,IAAAgnB,IACAtP,EAAAwP,EAAA39B,EAAA09B,EAAAz9B,EACA3K,GAAA0K,EAAAr+B,EAAAs+B,EAAArJ,IAAA,EAAAu3B,GAAA9lD,EACAmtB,GAAAyK,EAAA4qB,EAAA7qB,EAAA49B,GAAAzP,EACA54B,GAAAooC,EAAA/mC,EAAA8mC,EAAA/7D,IAAA,EAAAwsD,GAAA5lD,EACAktB,GAAAioC,EAAAE,EAAAD,EAAA9S,GAAAsD,EACA5sD,EAAAi0B,IAAAC,IAAA,EACAj0B,EAAA,GAAAy1B,EAAA3B,EAAAE,EAAAD,EAAAE,GACA7E,EAAA0E,IAAAC,IAAA0B,IACAv3B,IAAA6B,GAAAC,EAAAuH,KAAAC,KAAAxH,IAAA,EAAAD,EAAAqvB,KAAA,EAAArvB,GAAAqvB,EAAApvB,GACA,OACAsC,EAAAuE,EAAAitB,EAAAE,EAAA91B,EACAqE,EAAAwE,EAAAgtB,EAAAE,EAAA/1B,EACAA,KCjHA,SAAAm+D,GAAA/0D,EAAAD,EAAA5J,GACA,IAAA6E,EAAA45D,EACA35D,EAAAi8B,EADAte,EAAA5Y,EAAAhF,EAAA+E,EAAA/E,EACA6d,EAAA7Y,EAAA/E,EAAA8E,EAAA9E,EACA6yB,EAAAlV,IAAAC,IACAiV,GACA8mC,EAAA70D,EAAAnJ,EAAAT,EAAAS,EAAAg+D,KACA19B,EAAAl3B,EAAApJ,EAAAT,EAAAS,EACAg+D,GADA19B,OAEAl8B,GAAA8yB,EAAAoJ,EAAA09B,IAAA,EAAA9mC,GACA7yB,EAAAgF,KAAAC,KAAAD,KAAAlD,IAAA,EAAAm6B,EAAApJ,EAAA9yB,MACA7E,EAAA6E,EAAAgF,EAAAhF,IAAA4d,EAAA3d,EAAA4d,EACA1iB,EAAA8E,EAAA+E,EAAA/E,EAAAD,EAAA6d,EAAA5d,EAAA2d,IAEA5d,GAAA8yB,EAAA8mC,EAAA19B,IAAA,EAAApJ,GACA7yB,EAAAgF,KAAAC,KAAAD,KAAAlD,IAAA,EAAA63D,EAAA9mC,EAAA9yB,MACA7E,EAAA6E,EAAA+E,EAAA/E,IAAA4d,EAAA3d,EAAA4d,EACA1iB,EAAA8E,EAAA8E,EAAA9E,EAAAD,EAAA6d,EAAA5d,EAAA2d,KAGAziB,EAAA6E,EAAA+E,EAAA/E,EAAA7E,EAAAS,EACAT,EAAA8E,EAAA8E,EAAA9E,GAIA,SAAA+5D,GAAAj1D,EAAAC,GACA,IAAAu0D,EAAAx0D,EAAAnJ,EAAAoJ,EAAApJ,EAAA,KAAAgiB,EAAA5Y,EAAAhF,EAAA+E,EAAA/E,EAAA6d,EAAA7Y,EAAA/E,EAAA8E,EAAA9E,EACA,OAAAs5D,EAAA,GAAAA,IAAA37C,IAAAC,IAGA,SAAAo8C,GAAAtmD,GACA,IAAA5O,EAAA4O,EAAAnJ,EACAxF,EAAA2O,EAAAJ,KAAA/I,EACA6/C,EAAAtlD,EAAAnJ,EAAAoJ,EAAApJ,EACAgiB,GAAA7Y,EAAA/E,EAAAgF,EAAApJ,EAAAoJ,EAAAhF,EAAA+E,EAAAnJ,GAAAyuD,EACAxsC,GAAA9Y,EAAA9E,EAAA+E,EAAApJ,EAAAoJ,EAAA/E,EAAA8E,EAAAnJ,GAAAyuD,EACA,OAAAzsC,IAAAC,IAGA,SAAAq8C,GAAA74D,GACA9C,KAAAiM,EAAAnJ,EACA9C,KAAAgV,KAAA,KACAhV,KAAA2a,SAAA,KAGA,SAAAihD,GAAAr1D,GACA,KAAAvI,EAAAuI,EAAApC,QAAA,SAEA,IAAAqC,EAAAC,EAAA7J,EAAAoB,EAAA69D,EAAApS,EAAAltD,EAAAsQ,EAAApI,EAAAq3D,EAAAC,EAIA,IADAv1D,EAAAD,EAAA,IAAA9E,EAAA,EAAA+E,EAAA9E,EAAA,IACA1D,EAAA,UAAAwI,EAAAnJ,EAIA,GADAoJ,EAAAF,EAAA,GAAAC,EAAA/E,GAAAgF,EAAApJ,EAAAoJ,EAAAhF,EAAA+E,EAAAnJ,EAAAoJ,EAAA/E,EAAA,IACA1D,EAAA,UAAAwI,EAAAnJ,EAAAoJ,EAAApJ,EAGAm+D,GAAA/0D,EAAAD,EAAA5J,EAAA2J,EAAA,IAGAC,EAAA,IAAAm1D,GAAAn1D,GAAAC,EAAA,IAAAk1D,GAAAl1D,GAAA7J,EAAA,IAAA++D,GAAA/+D,GACA4J,EAAAwO,KAAApY,EAAA+d,SAAAlU,EACAA,EAAAuO,KAAAxO,EAAAmU,SAAA/d,EACAA,EAAAoY,KAAAvO,EAAAkU,SAAAnU,EAGAw1D,EAAA,IAAAz/D,EAAA,EAAmBA,EAAAyB,IAAOzB,EAAA,CAC1Bi/D,GAAAh1D,EAAAyF,EAAAxF,EAAAwF,EAAArP,EAAA2J,EAAAhK,IAAAK,EAAA,IAAA++D,GAAA/+D,GAKAiQ,EAAApG,EAAAuO,KAAAvQ,EAAA+B,EAAAmU,SAAAmhD,EAAAr1D,EAAAwF,EAAA5O,EAAA0+D,EAAAv1D,EAAAyF,EAAA5O,EACA,GACA,GAAAy+D,GAAAC,EAAA,CACA,GAAAN,GAAA5uD,EAAAZ,EAAArP,EAAAqP,GAAA,CACAxF,EAAAoG,EAAArG,EAAAwO,KAAAvO,IAAAkU,SAAAnU,IAAAjK,EACA,SAAAy/D,EAEAF,GAAAjvD,EAAAZ,EAAA5O,EAAAwP,IAAAmI,SACO,CACP,GAAAymD,GAAAh3D,EAAAwH,EAAArP,EAAAqP,GAAA,EACAzF,EAAA/B,GAAAuQ,KAAAvO,IAAAkU,SAAAnU,IAAAjK,EACA,SAAAy/D,EAEAD,GAAAt3D,EAAAwH,EAAA5O,EAAAoH,IAAAkW,gBAEK9N,IAAApI,EAAAuQ,MAOL,IAJApY,EAAA+d,SAAAnU,EAAA5J,EAAAoY,KAAAvO,EAAAD,EAAAwO,KAAAvO,EAAAkU,SAAAlU,EAAA7J,EAGAi/D,EAAAH,GAAAl1D,IACA5J,IAAAoY,QAAAvO,IACAgjD,EAAAiS,GAAA9+D,IAAAi/D,IACAr1D,EAAA5J,EAAAi/D,EAAApS,GAGAhjD,EAAAD,EAAAwO,KAImB,IAAnBxO,GAAAC,EAAAwF,GAAArP,EAAA6J,GAAmB7J,IAAAoY,QAAAvO,GAAAD,EAAAzD,KAAAnG,EAAAqP,GAGnB,IAH2DrP,EAAA29D,GAAA/zD,GAG3DjK,EAAA,EAAaA,EAAAyB,IAAOzB,GAAAiK,EAAAD,EAAAhK,IAAAkF,GAAA7E,EAAA6E,EAAA+E,EAAA9E,GAAA9E,EAAA8E,EAEpB,OAAA9E,EAAAS,EAGA,IAAA4+D,GAAA,SAAA11D,GAEA,OADAq1D,GAAAr1D,GACAA,GChHA,SAAA21D,GAAAz0D,GACA,sBAAAA,EAAA,UAAA6J,MACA,OAAA7J,ECNA,SAAA00D,KACA,SAGA,IAAAC,GAAA,SAAA36D,GACA,kBACA,OAAAA,ICFA,SAAA46D,GAAAx/D,GACA,OAAA6J,KAAAC,KAAA9J,EAAAW,OAGA,IAAA8+D,GAAA,WACA,IAAAx4D,EAAA,KACAub,EAAA,EACAC,EAAA,EACA3gB,EAAAw9D,GAEA,SAAAH,EAAAngE,GAYA,OAXAA,EAAA4F,EAAA4d,EAAA,EAAAxjB,EAAA6F,EAAA4d,EAAA,EACAxb,EACAjI,EAAA+9D,WAAA2C,GAAAz4D,IACAm1D,UAAAuD,GAAA79D,EAAA,KACAi7D,WAAA6C,GAAA,IAEA5gE,EAAA+9D,WAAA2C,GAAAF,KACApD,UAAAuD,GAAAL,GAAA,IACAlD,UAAAuD,GAAA79D,EAAA9C,EAAAwB,EAAAqJ,KAAAnD,IAAA8b,EAAAC,KACAs6C,WAAA6C,GAAA/1D,KAAAnD,IAAA8b,EAAAC,IAAA,EAAAzjB,EAAAwB,KAEAxB,EAeA,OAZAmgE,EAAAl4D,OAAA,SAAArC,GACA,OAAAyC,UAAAC,QAAAL,EF9BA,SAAA2D,GACA,aAAAA,EAAA,KAAAy0D,GAAAz0D,GE6BAi1D,CAAAj7D,GAAAu6D,GAAAl4D,GAGAk4D,EAAAzhD,KAAA,SAAA9Y,GACA,OAAAyC,UAAAC,QAAAkb,GAAA5d,EAAA,GAAA6d,GAAA7d,EAAA,GAAAu6D,IAAA38C,EAAAC,IAGA08C,EAAAr9D,QAAA,SAAA8C,GACA,OAAAyC,UAAAC,QAAAxF,EAAA,mBAAA8C,IAAA26D,IAAA36D,GAAAu6D,GAAAr9D,GAGAq9D,GAGA,SAAAO,GAAAz4D,GACA,gBAAAsR,GACAA,EAAA2lB,WACA3lB,EAAA/X,EAAAqJ,KAAAlD,IAAA,GAAAM,EAAAsR,IAAA,KAKA,SAAAonD,GAAA79D,EAAA8F,GACA,gBAAA2Q,GACA,GAAA2lB,EAAA3lB,EAAA2lB,SAAA,CACA,IAAAA,EACAx+B,EAGA2F,EAFAlE,EAAA+8B,EAAA52B,OACA9G,EAAAsB,EAAAyW,GAAA3Q,GAAA,EAGA,GAAApH,EAAA,IAAAd,EAAA,EAAwBA,EAAAyB,IAAOzB,EAAAw+B,EAAAx+B,GAAAc,KAE/B,GADA6E,EAAA05D,GAAA7gC,GACA19B,EAAA,IAAAd,EAAA,EAAwBA,EAAAyB,IAAOzB,EAAAw+B,EAAAx+B,GAAAc,KAC/B+X,EAAA/X,EAAA6E,EAAA7E,IAKA,SAAAo/D,GAAAh4D,GACA,gBAAA2Q,GACA,IAAAZ,EAAAY,EAAAZ,OACAY,EAAA/X,GAAAoH,EACA+P,IACAY,EAAA3T,EAAA+S,EAAA/S,EAAAgD,EAAA2Q,EAAA3T,EACA2T,EAAA1T,EAAA8S,EAAA9S,EAAA+C,EAAA2Q,EAAA1T,IC3EA,IAAAi7D,GAAA,SAAAvnD,GACAA,EAAAzJ,GAAAjF,KAAAmJ,MAAAuF,EAAAzJ,IACAyJ,EAAAixB,GAAA3/B,KAAAmJ,MAAAuF,EAAAixB,IACAjxB,EAAApP,GAAAU,KAAAmJ,MAAAuF,EAAApP,IACAoP,EAAAlP,GAAAQ,KAAAmJ,MAAAuF,EAAAlP,KCJA02D,GAAA,SAAApoD,EAAA7I,EAAA06B,EAAArgC,EAAAE,GAOA,IANA,IACAkP,EADAoG,EAAAhH,EAAAumB,SAEAx+B,GAAA,EACAyB,EAAAwd,EAAArX,OACAM,EAAA+P,EAAAhX,QAAAwI,EAAA2F,GAAA6I,EAAAhX,QAEAjB,EAAAyB,IACAoX,EAAAoG,EAAAjf,IAAA8pC,KAAAjxB,EAAAlP,KACAkP,EAAAzJ,KAAAyJ,EAAApP,GAAA2F,GAAAyJ,EAAA5X,MAAAiH,GCNAo4D,GAAA,WACA,IAAAx9C,EAAA,EACAC,EAAA,EACA3gB,EAAA,EACAkR,GAAA,EAEA,SAAAitD,EAAAjhE,GACA,IAAAmC,EAAAnC,EAAA6C,OAAA,EAOA,OANA7C,EAAA8P,GACA9P,EAAAwqC,GAAA1nC,EACA9C,EAAAmK,GAAAqZ,EACAxjB,EAAAqK,GAAAoZ,EAAAthB,EACAnC,EAAA+9D,WAKA,SAAAt6C,EAAAthB,GACA,gBAAAoX,GACAA,EAAA2lB,UACA6hC,GAAAxnD,IAAAzJ,GAAA2T,GAAAlK,EAAAi0B,MAAA,GAAArrC,EAAAoX,EAAApP,GAAAsZ,GAAAlK,EAAAi0B,MAAA,GAAArrC,GAEA,IAAA2N,EAAAyJ,EAAAzJ,GACA06B,EAAAjxB,EAAAixB,GACArgC,EAAAoP,EAAApP,GAAArH,EACAuH,EAAAkP,EAAAlP,GAAAvH,EACAqH,EAAA2F,MAAA3F,GAAA2F,EAAA3F,GAAA,GACAE,EAAAmgC,MAAAngC,GAAAmgC,EAAAngC,GAAA,GACAkP,EAAAzJ,KACAyJ,EAAAixB,KACAjxB,EAAApP,KACAoP,EAAAlP,MAnBA62D,CAAAz9C,EAAAthB,IACA6R,GAAAhU,EAAA+9D,WAAA+C,IACA9gE,EAiCA,OAZAihE,EAAAjtD,MAAA,SAAApO,GACA,OAAAyC,UAAAC,QAAA0L,IAAApO,EAAAq7D,GAAAjtD,GAGAitD,EAAAviD,KAAA,SAAA9Y,GACA,OAAAyC,UAAAC,QAAAkb,GAAA5d,EAAA,GAAA6d,GAAA7d,EAAA,GAAAq7D,IAAAz9C,EAAAC,IAGAw9C,EAAAn+D,QAAA,SAAA8C,GACA,OAAAyC,UAAAC,QAAAxF,GAAA8C,EAAAq7D,GAAAn+D,GAGAm+D,GC/CAE,GAAA,IACAC,IAAe5zB,OAAA,GACf6zB,MAEA,SAAAC,GAAAtgE,GACA,OAAAA,EAAAwF,GAGA,SAAA+6D,GAAAvgE,GACA,OAAAA,EAAAwgE,2BAIA,IAAAh7D,EAAA86D,GACAE,EAAAD,GAEA,SAAAE,EAAA19D,GACA,IAAA/C,EACAN,EAEAV,EACA2Y,EACAY,EAEAigC,EACAkoB,EANAv/D,EAAA4B,EAAAuE,OAIAqX,EAAA,IAAAza,MAAA/C,GAGAw/D,KAEA,IAAAjhE,EAAA,EAAeA,EAAAyB,IAAOzB,EACtBM,EAAA+C,EAAArD,GAAA6Y,EAAAoG,EAAAjf,GAAA,IAAAk9D,GAAA58D,GACA,OAAAw4C,EAAAhzC,EAAAxF,EAAAN,EAAAqD,MAAAy1C,GAAA,MAEAmoB,EADAD,EAAAP,IAAA5nD,EAAA/S,GAAAgzC,IACAkoB,KAAAC,EAAAN,GAAA9nD,GAIA,IAAA7Y,EAAA,EAAeA,EAAAyB,IAAOzB,EAEtB,GADA6Y,EAAAoG,EAAAjf,GACA,OADA84C,EAAAgoB,EAAAz9D,EAAArD,KAAAqD,MACAy1C,GAAA,IAGO,CAEP,KADA7gC,EAAAgpD,EAAAR,GAAA3nB,IACA,UAAA/jC,MAAA,YAAA+jC,GACA,GAAA7gC,IAAA0oD,GAAA,UAAA5rD,MAAA,cAAA+jC,GACA7gC,EAAAumB,SAAAvmB,EAAAumB,SAAAh4B,KAAAqS,GACAZ,EAAAumB,UAAA3lB,GACAA,EAAAZ,aATA,CACA,GAAA3Y,EAAA,UAAAyV,MAAA,kBACAzV,EAAAuZ,EAWA,IAAAvZ,EAAA,UAAAyV,MAAA,WAIA,GAHAzV,EAAA2Y,OAAAyoD,GACAphE,EAAA+9D,WAAA,SAAAxkD,GAAoCA,EAAAi0B,MAAAj0B,EAAAZ,OAAA60B,MAAA,IAAoCrrC,IAAO47D,WAAAC,IAC/Eh+D,EAAA2Y,OAAA,KACAxW,EAAA,YAAAsT,MAAA,SAEA,OAAAzV,EAWA,OARAyhE,EAAAj7D,GAAA,SAAAZ,GACA,OAAAyC,UAAAC,QAAA9B,EAAA65D,GAAAz6D,GAAA67D,GAAAj7D,GAGAi7D,EAAAD,SAAA,SAAA57D,GACA,OAAAyC,UAAAC,QAAAk5D,EAAAnB,GAAAz6D,GAAA67D,GAAAD,GAGAC,GCrEA,SAAAG,GAAAj3D,EAAAC,GACA,OAAAD,EAAAgO,SAAA/N,EAAA+N,OAAA,IAWA,SAAAkpD,GAAAj0D,GACA,IAAAsxB,EAAAtxB,EAAAsxB,SACA,OAAAA,IAAA,GAAAtxB,EAAAhM,EAIA,SAAAkgE,GAAAl0D,GACA,IAAAsxB,EAAAtxB,EAAAsxB,SACA,OAAAA,MAAA52B,OAAA,GAAAsF,EAAAhM,EAKA,SAAAmgE,GAAAC,EAAAC,EAAAjyD,GACA,IAAAkyD,EAAAlyD,GAAAiyD,EAAAvhE,EAAAshE,EAAAthE,GACAuhE,EAAAlhE,GAAAmhE,EACAD,EAAAx/D,GAAAuN,EACAgyD,EAAAjhE,GAAAmhE,EACAD,EAAAjwC,GAAAhiB,EACAiyD,EAAAnhE,GAAAkP,EAsBA,SAAAmyD,GAAAC,EAAAx0D,EAAAswD,GACA,OAAAkE,EAAAz3D,EAAAgO,SAAA/K,EAAA+K,OAAAypD,EAAAz3D,EAAAuzD,EAGA,SAAAmE,GAAA9oD,EAAA7Y,GACAyD,KAAAiM,EAAAmJ,EACApV,KAAAwU,OAAA,KACAxU,KAAA+6B,SAAA,KACA/6B,KAAAd,EAAA,KACAc,KAAAwG,EAAAxG,KACAA,KAAA6tB,EAAA,EACA7tB,KAAArD,EAAA,EACAqD,KAAApD,EAAA,EACAoD,KAAA1B,EAAA,EACA0B,KAAAvC,EAAA,KACAuC,KAAAzD,IAGA2hE,GAAA//D,UAAAlB,OAAAY,OAAA47D,GAAAt7D,WA0BA,IAAAggE,GAAA,WACA,IAAArF,EAAA2E,GACAp+C,EAAA,EACAC,EAAA,EACAy5C,EAAA,KAEA,SAAAtmB,EAAA52C,GACA,IAAA4B,EA/BA,SAAA5B,GASA,IARA,IACAuZ,EAEAN,EACAimB,EACAx+B,EACAyB,EANAy0C,EAAA,IAAAyrB,GAAAriE,EAAA,GAEA2f,GAAAi3B,GAMAr9B,EAAAoG,EAAA1P,OACA,GAAAivB,EAAA3lB,EAAAnJ,EAAA8uB,SAEA,IADA3lB,EAAA2lB,SAAA,IAAAh6B,MAAA/C,EAAA+8B,EAAA52B,QACA5H,EAAAyB,EAAA,EAAqBzB,GAAA,IAAQA,EAC7Bif,EAAAzY,KAAA+R,EAAAM,EAAA2lB,SAAAx+B,GAAA,IAAA2hE,GAAAnjC,EAAAx+B,OACAuY,EAAAN,OAAAY,EAMA,OADAq9B,EAAAj+B,OAAA,IAAA0pD,GAAA,SAAAnjC,UAAA0X,GACAA,EAWA2rB,CAAAviE,GAOA,GAJA4B,EAAAw7D,UAAAoF,GAAA5gE,EAAA+W,OAAA7X,GAAAc,EAAAowB,EACApwB,EAAAm8D,WAAA0E,GAGAvF,EAAAl9D,EAAA+9D,WAAA2E,OAIA,CACA,IAAA52D,EAAA9L,EACAkM,EAAAlM,EACAi3C,EAAAj3C,EACAA,EAAA+9D,WAAA,SAAAxkD,GACAA,EAAA3T,EAAAkG,EAAAlG,IAAAkG,EAAAyN,GACAA,EAAA3T,EAAAsG,EAAAtG,IAAAsG,EAAAqN,GACAA,EAAAi0B,MAAAyJ,EAAAzJ,QAAAyJ,EAAA19B,KAEA,IAAA9W,EAAAqJ,IAAAI,EAAA,EAAA+wD,EAAAnxD,EAAAI,GAAA,EACA6vD,EAAAt5D,EAAAqJ,EAAAlG,EACAi2D,EAAAr4C,GAAAtX,EAAAtG,EAAAnD,EAAAs5D,GACAD,EAAAr4C,GAAAwzB,EAAAzJ,OAAA,GACAxtC,EAAA+9D,WAAA,SAAAxkD,GACAA,EAAA3T,GAAA2T,EAAA3T,EAAAm2D,GAAAF,EACAtiD,EAAA1T,EAAA0T,EAAAi0B,MAAAsuB,IAIA,OAAA97D,EAOA,SAAAwiE,EAAA50D,GACA,IAAAsxB,EAAAtxB,EAAAsxB,SACAkhC,EAAAxyD,EAAA+K,OAAAumB,SACAyF,EAAA/2B,EAAAlN,EAAA0/D,EAAAxyD,EAAAlN,EAAA,QACA,GAAAw+B,EAAA,EA5GA,SAAAtxB,GAMA,IALA,IAIA+2B,EAJA30B,EAAA,EACAkyD,EAAA,EACAhjC,EAAAtxB,EAAAsxB,SACAx+B,EAAAw+B,EAAA52B,SAEA5H,GAAA,IACAikC,EAAAzF,EAAAx+B,IACAsxB,GAAAhiB,EACA20B,EAAA7jC,GAAAkP,EACAA,GAAA20B,EAAAliC,GAAAy/D,GAAAv9B,EAAA5jC,GAmGA4hE,CAAA/0D,GACA,IAAAg1D,GAAA1jC,EAAA,GAAAlN,EAAAkN,IAAA52B,OAAA,GAAA0pB,GAAA,EACA2S,GACA/2B,EAAAokB,EAAA2S,EAAA3S,EAAAirC,EAAArvD,EAAAwC,EAAAu0B,EAAAv0B,GACAxC,EAAA9M,EAAA8M,EAAAokB,EAAA4wC,GAEAh1D,EAAAokB,EAAA4wC,OAEKj+B,IACL/2B,EAAAokB,EAAA2S,EAAA3S,EAAAirC,EAAArvD,EAAAwC,EAAAu0B,EAAAv0B,IAEAxC,EAAA+K,OAAAtV,EAoBA,SAAAuK,EAAA+2B,EAAAu5B,GACA,GAAAv5B,EAAA,CAUA,IATA,IAQA30B,EARA6yD,EAAAj1D,EACAk1D,EAAAl1D,EACAw0D,EAAAz9B,EACAo+B,EAAAF,EAAAlqD,OAAAumB,SAAA,GACA8jC,EAAAH,EAAA/hE,EACAmiE,EAAAH,EAAAhiE,EACAoiE,EAAAd,EAAAthE,EACAqiE,EAAAJ,EAAAjiE,EAEAshE,EAAAN,GAAAM,GAAAS,EAAAhB,GAAAgB,GAAAT,GAAAS,GACAE,EAAAlB,GAAAkB,IACAD,EAAAhB,GAAAgB,IACAn4D,EAAAiD,GACAoC,EAAAoyD,EAAApwC,EAAAkxC,EAAAL,EAAA7wC,EAAAgxC,EAAA/F,EAAAmF,EAAAhyD,EAAAyyD,EAAAzyD,IACA,IACA2xD,GAAAI,GAAAC,EAAAx0D,EAAAswD,GAAAtwD,EAAAoC,GACAgzD,GAAAhzD,EACAizD,GAAAjzD,GAEAkzD,GAAAd,EAAAthE,EACAkiE,GAAAH,EAAA/hE,EACAqiE,GAAAJ,EAAAjiE,EACAmiE,GAAAH,EAAAhiE,EAEAshE,IAAAN,GAAAgB,KACAA,EAAAlhE,EAAAwgE,EACAU,EAAAhiE,GAAAoiE,EAAAD,GAEAJ,IAAAhB,GAAAkB,KACAA,EAAAnhE,EAAAihE,EACAE,EAAAjiE,GAAAkiE,EAAAG,EACAjF,EAAAtwD,GAGA,OAAAswD,EAxDAkF,CAAAx1D,EAAA+2B,EAAA/2B,EAAA+K,OAAAtV,GAAA+8D,EAAA,IAIA,SAAAqC,EAAA70D,GACAA,EAAAwC,EAAAxK,EAAAgI,EAAAokB,EAAApkB,EAAA+K,OAAA7X,EACA8M,EAAA9M,GAAA8M,EAAA+K,OAAA7X,EAqDA,SAAA4hE,EAAAnpD,GACAA,EAAA3T,GAAA4d,EACAjK,EAAA1T,EAAA0T,EAAAi0B,MAAA/pB,EAeA,OAZAmzB,EAAAqmB,WAAA,SAAAr3D,GACA,OAAAyC,UAAAC,QAAA20D,EAAAr3D,EAAAgxC,GAAAqmB,GAGArmB,EAAAl4B,KAAA,SAAA9Y,GACA,OAAAyC,UAAAC,QAAA40D,GAAA,EAAA15C,GAAA5d,EAAA,GAAA6d,GAAA7d,EAAA,GAAAgxC,GAAAsmB,EAAA,MAAA15C,EAAAC,IAGAmzB,EAAAsmB,SAAA,SAAAt3D,GACA,OAAAyC,UAAAC,QAAA40D,GAAA,EAAA15C,GAAA5d,EAAA,GAAA6d,GAAA7d,EAAA,GAAAgxC,GAAAsmB,GAAA15C,EAAAC,GAAA,MAGAmzB,GC3OAysB,GAAA,SAAA1qD,EAAA7I,EAAA06B,EAAArgC,EAAAE,GAOA,IANA,IACAkP,EADAoG,EAAAhH,EAAAumB,SAEAx+B,GAAA,EACAyB,EAAAwd,EAAArX,OACAM,EAAA+P,EAAAhX,QAAA0I,EAAAmgC,GAAA7xB,EAAAhX,QAEAjB,EAAAyB,IACAoX,EAAAoG,EAAAjf,IAAAoP,KAAAyJ,EAAApP,KACAoP,EAAAixB,KAAAjxB,EAAAlP,GAAAmgC,GAAAjxB,EAAA5X,MAAAiH,GCNA06D,IAAA,EAAAz4D,KAAAC,KAAA,MAEA,SAAAy4D,GAAAC,EAAA7qD,EAAA7I,EAAA06B,EAAArgC,EAAAE,GAkBA,IAjBA,IAEA0H,EACA0xD,EAIAjgD,EAAAC,EAEAigD,EACAC,EACAC,EACAC,EACAC,EACAhqB,EACAiqB,EAfAnxB,KACAjzB,EAAAhH,EAAAumB,SAGAryB,EAAA,EACAC,EAAA,EACA3K,EAAAwd,EAAArX,OAEA3G,EAAAgX,EAAAhX,MASAkL,EAAA1K,GAAA,CACAqhB,EAAArZ,EAAA2F,EAAA2T,EAAApZ,EAAAmgC,EAGA,GAAAk5B,EAAA/jD,EAAA7S,KAAAnL,aAAoC+hE,GAAA52D,EAAA3K,GAOpC,IANAwhE,EAAAC,EAAAF,EAEAK,EAAAL,KADA5pB,EAAAjvC,KAAAlD,IAAA8b,EAAAD,IAAAC,IAAA9hB,EAAA6hE,IAEAM,EAAAj5D,KAAAlD,IAAAi8D,EAAAG,IAAAJ,GAGU72D,EAAA3K,IAAQ2K,EAAA,CAMlB,GALA42D,GAAAD,EAAA9jD,EAAA7S,GAAAnL,MACA8hE,EAAAE,MAAAF,GACAA,EAAAG,MAAAH,GACAM,EAAAL,IAAA5pB,GACA+pB,EAAAh5D,KAAAlD,IAAAi8D,EAAAG,IAAAJ,IACAG,EAAA,CAAgCJ,GAAAD,EAAuB,MACvDK,EAAAD,EAIAjxB,EAAA1rC,KAAA6K,GAAqBpQ,MAAA+hE,EAAA3C,KAAAv9C,EAAAC,EAAAyb,SAAAvf,EAAA5R,MAAAlB,EAAAC,KACrBiF,EAAAgvD,QAAAhvD,EAAAjC,EAAA06B,EAAArgC,EAAAxI,EAAA6oC,GAAA/mB,EAAAigD,EAAA/hE,EAAA0I,GACAg5D,GAAAtxD,EAAAjC,EAAA06B,EAAA7oC,EAAAmO,GAAA0T,EAAAkgD,EAAA/hE,EAAAwI,EAAAE,GACA1I,GAAA+hE,EAAA72D,EAAAC,EAGA,OAAA8lC,EAGA,IAAAoxB,GAAA,SAAAljC,EAAA0iC,GAEA,SAAAQ,EAAArrD,EAAA7I,EAAA06B,EAAArgC,EAAAE,GACAk5D,GAAAC,EAAA7qD,EAAA7I,EAAA06B,EAAArgC,EAAAE,GAOA,OAJA25D,EAAAR,MAAA,SAAA59D,GACA,OAAAk7B,GAAAl7B,MAAA,EAAAA,EAAA,IAGAo+D,EAVA,CAWCV,IC5DDW,GAAA,WACA,IAAAC,EAAAF,GACAhwD,GAAA,EACAwP,EAAA,EACAC,EAAA,EACA0gD,GAAA,GACAC,EAAA9D,GACA+D,EAAA/D,GACAgE,EAAAhE,GACAiE,EAAAjE,GACAkE,EAAAlE,GAEA,SAAAmE,EAAAzkE,GAQA,OAPAA,EAAA8P,GACA9P,EAAAwqC,GAAA,EACAxqC,EAAAmK,GAAAqZ,EACAxjB,EAAAqK,GAAAoZ,EACAzjB,EAAA+9D,WAAAmD,GACAiD,GAAA,GACAnwD,GAAAhU,EAAA+9D,WAAA+C,IACA9gE,EAGA,SAAAkhE,EAAA3nD,GACA,IAAA/W,EAAA2hE,EAAA5qD,EAAAi0B,OACA19B,EAAAyJ,EAAAzJ,GAAAtN,EACAgoC,EAAAjxB,EAAAixB,GAAAhoC,EACA2H,EAAAoP,EAAApP,GAAA3H,EACA6H,EAAAkP,EAAAlP,GAAA7H,EACA2H,EAAA2F,MAAA3F,GAAA2F,EAAA3F,GAAA,GACAE,EAAAmgC,MAAAngC,GAAAmgC,EAAAngC,GAAA,GACAkP,EAAAzJ,KACAyJ,EAAAixB,KACAjxB,EAAApP,KACAoP,EAAAlP,KACAkP,EAAA2lB,WACA18B,EAAA2hE,EAAA5qD,EAAAi0B,MAAA,GAAA42B,EAAA7qD,GAAA,EACAzJ,GAAA00D,EAAAjrD,GAAA/W,EACAgoC,GAAA65B,EAAA9qD,GAAA/W,EACA2H,GAAAm6D,EAAA/qD,GAAA/W,EACA6H,GAAAk6D,EAAAhrD,GAAA/W,EACA2H,EAAA2F,MAAA3F,GAAA2F,EAAA3F,GAAA,GACAE,EAAAmgC,MAAAngC,GAAAmgC,EAAAngC,GAAA,GACA65D,EAAA3qD,EAAAzJ,EAAA06B,EAAArgC,EAAAE,IA4CA,OAxCAo6D,EAAAzwD,MAAA,SAAApO,GACA,OAAAyC,UAAAC,QAAA0L,IAAApO,EAAA6+D,GAAAzwD,GAGAywD,EAAA/lD,KAAA,SAAA9Y,GACA,OAAAyC,UAAAC,QAAAkb,GAAA5d,EAAA,GAAA6d,GAAA7d,EAAA,GAAA6+D,IAAAjhD,EAAAC,IAGAghD,EAAAP,KAAA,SAAAt+D,GACA,OAAAyC,UAAAC,QAAA47D,EAAA7D,GAAAz6D,GAAA6+D,GAAAP,GAGAO,EAAA3hE,QAAA,SAAA8C,GACA,OAAAyC,UAAAC,OAAAm8D,EAAAL,aAAAx+D,GAAA8+D,aAAA9+D,GAAA6+D,EAAAL,gBAGAK,EAAAL,aAAA,SAAAx+D,GACA,OAAAyC,UAAAC,QAAA87D,EAAA,mBAAAx+D,IAAA26D,IAAA36D,GAAA6+D,GAAAL,GAGAK,EAAAC,aAAA,SAAA9+D,GACA,OAAAyC,UAAAC,OAAAm8D,EAAAJ,WAAAz+D,GAAA0+D,aAAA1+D,GAAA2+D,cAAA3+D,GAAA4+D,YAAA5+D,GAAA6+D,EAAAJ,cAGAI,EAAAJ,WAAA,SAAAz+D,GACA,OAAAyC,UAAAC,QAAA+7D,EAAA,mBAAAz+D,IAAA26D,IAAA36D,GAAA6+D,GAAAJ,GAGAI,EAAAH,aAAA,SAAA1+D,GACA,OAAAyC,UAAAC,QAAAg8D,EAAA,mBAAA1+D,IAAA26D,IAAA36D,GAAA6+D,GAAAH,GAGAG,EAAAF,cAAA,SAAA3+D,GACA,OAAAyC,UAAAC,QAAAi8D,EAAA,mBAAA3+D,IAAA26D,IAAA36D,GAAA6+D,GAAAF,GAGAE,EAAAD,YAAA,SAAA5+D,GACA,OAAAyC,UAAAC,QAAAk8D,EAAA,mBAAA5+D,IAAA26D,IAAA36D,GAAA6+D,GAAAD,GAGAC,GC5FAE,GAAA,SAAAhsD,EAAA7I,EAAA06B,EAAArgC,EAAAE,GACA,IACA3J,EACA+M,EAFAkS,EAAAhH,EAAAumB,SACA/8B,EAAAwd,EAAArX,OACAs8D,EAAA,IAAA1/D,MAAA/C,EAAA,GAEA,IAAAyiE,EAAA,GAAAn3D,EAAA/M,EAAA,EAA6BA,EAAAyB,IAAOzB,EACpCkkE,EAAAlkE,EAAA,GAAA+M,GAAAkS,EAAAjf,GAAAiB,OAKA,SAAAs/D,EAAAvgE,EAAAsQ,EAAArP,EAAAmO,EAAA06B,EAAArgC,EAAAE,GACA,GAAA3J,GAAAsQ,EAAA,GACA,IAAAuI,EAAAoG,EAAAjf,GAGA,OAFA6Y,EAAAzJ,KAAAyJ,EAAAixB,KACAjxB,EAAApP,UAAAoP,EAAAlP,MAIA,IAAAw6D,EAAAD,EAAAlkE,GACAokE,EAAAnjE,EAAA,EAAAkjE,EACAj8D,EAAAlI,EAAA,EACAsL,EAAAgF,EAAA,EAEA,KAAApI,EAAAoD,GAAA,CACA,IAAAC,EAAArD,EAAAoD,IAAA,EACA44D,EAAA34D,GAAA64D,EAAAl8D,EAAAqD,EAAA,EACAD,EAAAC,EAGA64D,EAAAF,EAAAh8D,EAAA,GAAAg8D,EAAAh8D,GAAAk8D,GAAApkE,EAAA,EAAAkI,OAEA,IAAAm8D,EAAAH,EAAAh8D,GAAAi8D,EACAG,EAAArjE,EAAAojE,EAEA,GAAA56D,EAAA2F,EAAAzF,EAAAmgC,EAAA,CACA,IAAAy6B,GAAAn1D,EAAAk1D,EAAA76D,EAAA46D,GAAApjE,EACAs/D,EAAAvgE,EAAAkI,EAAAm8D,EAAAj1D,EAAA06B,EAAAy6B,EAAA56D,GACA42D,EAAAr4D,EAAAoI,EAAAg0D,EAAAC,EAAAz6B,EAAArgC,EAAAE,OACK,CACL,IAAA66D,GAAA16B,EAAAw6B,EAAA36D,EAAA06D,GAAApjE,EACAs/D,EAAAvgE,EAAAkI,EAAAm8D,EAAAj1D,EAAA06B,EAAArgC,EAAA+6D,GACAjE,EAAAr4D,EAAAoI,EAAAg0D,EAAAl1D,EAAAo1D,EAAA/6D,EAAAE,IAjCA42D,CAAA,EAAA9+D,EAAAwW,EAAAhX,MAAAmO,EAAA06B,EAAArgC,EAAAE,ICNA86D,GAAA,SAAAxsD,EAAA7I,EAAA06B,EAAArgC,EAAAE,IACA,EAAAsO,EAAA60B,MAAA61B,GAAAtC,IAAApoD,EAAA7I,EAAA06B,EAAArgC,EAAAE,ICAA+6D,GAAA,SAAAtkC,EAAA0iC,GAEA,SAAA6B,EAAA1sD,EAAA7I,EAAA06B,EAAArgC,EAAAE,GACA,IAAAuoC,EAAAj6B,EAAA2sD,YAAA1yB,EAAA4wB,UAUA,IATA,IAAA5wB,EACA7gC,EACA4N,EACAjf,EAEAyB,EADA6O,GAAA,EAEAlQ,EAAA8xC,EAAAtqC,OACA3G,EAAAgX,EAAAhX,QAEAqP,EAAAlQ,GAAA,CAEA,IADA6e,GAAA5N,EAAA6gC,EAAA5hC,IAAAkuB,SACAx+B,EAAAqR,EAAApQ,MAAA,EAAAQ,EAAAwd,EAAArX,OAAiD5H,EAAAyB,IAAOzB,EAAAqR,EAAApQ,OAAAge,EAAAjf,GAAAiB,MACxDoQ,EAAAgvD,QAAAhvD,EAAAjC,EAAA06B,EAAArgC,EAAAqgC,IAAAngC,EAAAmgC,GAAAz4B,EAAApQ,SACA0hE,GAAAtxD,EAAAjC,EAAA06B,EAAA16B,IAAA3F,EAAA2F,GAAAiC,EAAApQ,QAAA0I,GACA1I,GAAAoQ,EAAApQ,WAGAgX,EAAA2sD,UAAA1yB,EAAA2wB,GAAAC,EAAA7qD,EAAA7I,EAAA06B,EAAArgC,EAAAE,GACAuoC,EAAA4wB,QAQA,OAJA6B,EAAA7B,MAAA,SAAA59D,GACA,OAAAk7B,GAAAl7B,MAAA,EAAAA,EAAA,IAGAy/D,EA9BA,CA+BC/B,ICnCDiC,GAAA,SAAAj1B,GAOA,IANA,IAEA3lC,EAFAjK,GAAA,EACAyB,EAAAmuC,EAAAhoC,OAEAsC,EAAA0lC,EAAAnuC,EAAA,GACAysC,EAAA,IAEAluC,EAAAyB,GACAwI,EAAAC,EACAA,EAAA0lC,EAAA5vC,GACAkuC,GAAAjkC,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAGA,OAAAgkC,EAAA,GCbA42B,GAAA,SAAAl1B,GAUA,IATA,IAIA3lC,EAEA5J,EANAL,GAAA,EACAyB,EAAAmuC,EAAAhoC,OACA1C,EAAA,EACAC,EAAA,EAEA+E,EAAA0lC,EAAAnuC,EAAA,GAEAyG,EAAA,IAEAlI,EAAAyB,GACAwI,EAAAC,EACAA,EAAA0lC,EAAA5vC,GACAkI,GAAA7H,EAAA4J,EAAA,GAAAC,EAAA,GAAAA,EAAA,GAAAD,EAAA,GACA/E,IAAA+E,EAAA,GAAAC,EAAA,IAAA7J,EACA8E,IAAA8E,EAAA,GAAAC,EAAA,IAAA7J,EAGA,OAAA6E,GAAAgD,GAAA,GAAA/C,EAAA+C,ICdA68D,GAAA,SAAA96D,EAAAC,EAAA7J,GACA,OAAA6J,EAAA,GAAAD,EAAA,KAAA5J,EAAA,GAAA4J,EAAA,KAAAC,EAAA,GAAAD,EAAA,KAAA5J,EAAA,GAAA4J,EAAA,KCHA,SAAA+6D,GAAA/6D,EAAAC,GACA,OAAAD,EAAA,GAAAC,EAAA,IAAAD,EAAA,GAAAC,EAAA,GAMA,SAAA+6D,GAAAnjD,GAKA,IAJA,IAAArgB,EAAAqgB,EAAAla,OACA6I,GAAA,KACAuN,EAAA,EAEAhe,EAAA,EAAiBA,EAAAyB,IAAOzB,EAAA,CACxB,KAAAge,EAAA,GAAA+mD,GAAAjjD,EAAArR,EAAAuN,EAAA,IAAA8D,EAAArR,EAAAuN,EAAA,IAAA8D,EAAA9hB,KAAA,KAAAge,EACAvN,EAAAuN,KAAAhe,EAGA,OAAAyQ,EAAApD,MAAA,EAAA2Q,GAGA,IAAAknD,GAAA,SAAApjD,GACA,IAAArgB,EAAAqgB,EAAAla,QAAA,cAEA,IAAA5H,EACAyB,EACA0jE,EAAA,IAAA3gE,MAAA/C,GACA2jE,EAAA,IAAA5gE,MAAA/C,GAEA,IAAAzB,EAAA,EAAaA,EAAAyB,IAAOzB,EAAAmlE,EAAAnlE,KAAA8hB,EAAA9hB,GAAA,IAAA8hB,EAAA9hB,GAAA,GAAAA,GAEpB,IADAmlE,EAAA16D,KAAAu6D,IACAhlE,EAAA,EAAaA,EAAAyB,IAAOzB,EAAAolE,EAAAplE,IAAAmlE,EAAAnlE,GAAA,IAAAmlE,EAAAnlE,GAAA,IAEpB,IAAAqlE,EAAAJ,GAAAE,GACAG,EAAAL,GAAAG,GAGAG,EAAAD,EAAA,KAAAD,EAAA,GACAG,EAAAF,IAAA19D,OAAA,KAAAy9D,IAAAz9D,OAAA,GACAs9D,KAIA,IAAAllE,EAAAqlE,EAAAz9D,OAAA,EAAmC5H,GAAA,IAAQA,EAAAklE,EAAA1+D,KAAAsb,EAAAqjD,EAAAE,EAAArlE,IAAA,KAC3C,IAAAA,GAAAulE,EAAqBvlE,EAAAslE,EAAA19D,OAAA49D,IAAqCxlE,EAAAklE,EAAA1+D,KAAAsb,EAAAqjD,EAAAG,EAAAtlE,IAAA,KAE1D,OAAAklE,GC/CAO,GAAA,SAAA71B,EAAAjvB,GAQA,IAPA,IAIAlX,EAAAE,EAJAlI,EAAAmuC,EAAAhoC,OACA9F,EAAA8tC,EAAAnuC,EAAA,GACAyD,EAAAyb,EAAA,GAAAxb,EAAAwb,EAAA,GACAvR,EAAAtN,EAAA,GAAAgoC,EAAAhoC,EAAA,GAEA4jE,GAAA,EAEA1lE,EAAA,EAAiBA,EAAAyB,IAAOzB,EACxByJ,GAAA3H,EAAA8tC,EAAA5vC,IAAA,IAAA2J,EAAA7H,EAAA,IACAqD,GAAA2kC,EAAA3kC,GAAAD,GAAAkK,EAAA3F,IAAAtE,EAAAwE,IAAAmgC,EAAAngC,GAAAF,IAAAi8D,MACAt2D,EAAA3F,EAAAqgC,EAAAngC,EAGA,OAAA+7D,GCdAC,GAAA,SAAA/1B,GAUA,IATA,IAGAlZ,EACAC,EAJA32B,GAAA,EACAyB,EAAAmuC,EAAAhoC,OACAsC,EAAA0lC,EAAAnuC,EAAA,GAGAm1B,EAAA1sB,EAAA,GACA2sB,EAAA3sB,EAAA,GACA07D,EAAA,IAEA5lE,EAAAyB,GACAi1B,EAAAE,EACAD,EAAAE,EAIAH,GAFAE,GADA1sB,EAAA0lC,EAAA5vC,IACA,GAGA22B,GAFAE,EAAA3sB,EAAA,GAGA07D,GAAAz7D,KAAAC,KAAAssB,IAAAC,KAGA,OAAAivC,GCrBAC,GAAA,WACA,OAAA17D,KAAA4G,UCCA+0D,GAAA,SAAAC,EAAAzlD,GACA,SAAA0lD,EAAAh/D,EAAAC,GAKA,OAJAD,EAAA,MAAAA,EAAA,GAAAA,EACAC,EAAA,MAAAA,EAAA,GAAAA,EACA,IAAAU,UAAAC,QAAAX,EAAAD,IAAA,GACAC,GAAAD,EACA,WACA,OAAAsZ,IAAArZ,EAAAD,GAMA,OAFAg/D,EAAA1lD,OAAAylD,EAEAC,EAbA,CAcCH,ICdDI,GAAA,SAAAC,EAAA5lD,GACA,SAAA6lD,EAAAC,EAAAC,GACA,IAAAnhE,EAAApE,EAGA,OAFAslE,EAAA,MAAAA,EAAA,GAAAA,EACAC,EAAA,MAAAA,EAAA,GAAAA,EACA,WACA,IAAAlhE,EAGA,SAAAD,EAAAC,EAAAD,IAAA,UAGA,GACAA,EAAA,EAAAob,IAAA,EACAnb,EAAA,EAAAmb,IAAA,EACAxf,EAAAoE,IAAAC,WACOrE,KAAA,GAEP,OAAAslE,EAAAC,EAAAlhE,EAAAgF,KAAAC,MAAA,EAAAD,KAAAoE,IAAAzN,OAMA,OAFAqlE,EAAA7lD,OAAA4lD,EAEAC,EAxBA,CAyBCN,ICxBDS,GAAA,SAAAC,EAAAjmD,GACA,SAAAkmD,IACA,IAAAL,EAAAF,GAAA3lD,UAAAxN,MAAArP,KAAAkE,WACA,kBACA,OAAAwC,KAAAmtB,IAAA6uC,MAMA,OAFAK,EAAAlmD,OAAAimD,EAEAC,EAVA,CAWCX,ICZDY,GAAA,SAAAC,EAAApmD,GACA,SAAAqmD,EAAAllE,GACA,kBACA,QAAAsL,EAAA,EAAA/M,EAAA,EAA8BA,EAAAyB,IAAOzB,EAAA+M,GAAAuT,IACrC,OAAAvT,GAMA,OAFA45D,EAAArmD,OAAAomD,EAEAC,EAVA,CAWCd,ICVDe,GAAA,SAAAC,EAAAvmD,GACA,SAAAwmD,EAAArlE,GACA,IAAAklE,EAAAF,GAAAnmD,SAAAmmD,CAAAhlE,GACA,kBACA,OAAAklE,IAAAllE,GAMA,OAFAqlE,EAAAxmD,OAAAumD,EAEAC,EAVA,CAWCjB,ICZDkB,GAAA,SAAAC,EAAA1mD,GACA,SAAA2mD,EAAA/kB,GACA,kBACA,OAAA/3C,KAAAoE,IAAA,EAAA+R,KAAA4hC,GAMA,OAFA+kB,EAAA3mD,OAAA0mD,EAEAC,EATA,CAUCpB,ICZDqB,GAAA1iE,MAAA5C,UAEAulE,GAAAD,GAAAljE,IACAojE,GAAAF,GAAA75D,MCAAg6D,IAAuB9mE,KAAA,YAEvB,SAAA+mE,GAAApgE,GACA,IAAA2U,EAAA2wB,KACAzlC,KACAwgE,EAAAF,GAIA,SAAAj1D,EAAA9R,GACA,IAAAiB,EAAAjB,EAAA,GAAAN,EAAA6b,EAAAhb,IAAAU,GACA,IAAAvB,EAAA,CACA,GAAAunE,IAAAF,GAAA,OAAAE,EACA1rD,EAAA5G,IAAA1T,EAAAvB,EAAA+G,EAAAP,KAAAlG,IAEA,OAAA4G,GAAAlH,EAAA,GAAAkH,EAAAU,QA0BA,OAlCAV,EAAA,MAAAA,KAAAkgE,GAAAjnE,KAAA+G,GAWAkL,EAAArL,OAAA,SAAA2I,GACA,IAAA/H,UAAAC,OAAA,OAAAb,EAAAsG,QACAtG,KAAA8U,EAAA2wB,KAEA,IADA,IAAAlsC,EAAAiB,EAAAvB,GAAA,EAAAyB,EAAAiO,EAAA9H,SACA5H,EAAAyB,GAAAoa,EAAAwwB,IAAA9qC,GAAAjB,EAAAoP,EAAA1P,IAAA,KAAA6b,EAAA5G,IAAA1T,EAAAwF,EAAAP,KAAAlG,IACA,OAAA8R,GAGAA,EAAAlL,MAAA,SAAAwI,GACA,OAAA/H,UAAAC,QAAAV,EAAAkgE,GAAAjnE,KAAAuP,GAAA0C,GAAAlL,EAAAmG,SAGA+E,EAAAm1D,QAAA,SAAA73D,GACA,OAAA/H,UAAAC,QAAA2/D,EAAA73D,EAAA0C,GAAAm1D,GAGAn1D,EAAAmB,KAAA,WACA,OAAA+zD,KACAvgE,UACAG,SACAqgE,YAGAn1D,ECzCA,SAAAo1D,KACA,IAIA75D,EACAyF,EALAhB,EAAAk1D,KAAAC,aAAA1/D,GACAd,EAAAqL,EAAArL,OACA0gE,EAAAr1D,EAAAlL,MACAA,GAAA,KAGAoM,GAAA,EACAowD,EAAA,EACAM,EAAA,EACApoB,EAAA,GAIA,SAAA8rB,IACA,IAAAjmE,EAAAsF,IAAAa,OACAsG,EAAAhH,EAAA,GAAAA,EAAA,GACAuG,EAAAvG,EAAAgH,EAAA,GACAR,EAAAxG,EAAA,EAAAgH,GACAP,GAAAD,EAAAD,GAAAtD,KAAAlD,IAAA,EAAAxF,EAAAiiE,EAAA,EAAAM,GACA1wD,IAAA3F,EAAAxD,KAAAkE,MAAAV,IACAF,IAAAC,EAAAD,EAAAE,GAAAlM,EAAAiiE,IAAA9nB,EACAxoC,EAAAzF,GAAA,EAAA+1D,GACApwD,IAAA7F,EAAAtD,KAAAmJ,MAAA7F,GAAA2F,EAAAjJ,KAAAmJ,MAAAF,IACA,IAAA5G,EAAAgB,EAAA/L,GAAAuC,IAAA,SAAAhE,GAA8C,OAAAyN,EAAAE,EAAA3N,IAC9C,OAAAynE,EAAAv5D,EAAA1B,EAAA0B,UAAA1B,GAqDA,cAlEA4F,EAAAm1D,QAgBAn1D,EAAArL,OAAA,SAAA2I,GACA,OAAA/H,UAAAC,QAAAb,EAAA2I,GAAAg4D,KAAA3gE,KAGAqL,EAAAlL,MAAA,SAAAwI,GACA,OAAA/H,UAAAC,QAAAV,IAAAwI,EAAA,IAAAA,EAAA,IAAAg4D,KAAAxgE,EAAAmG,SAGA+E,EAAAu1D,WAAA,SAAAj4D,GACA,OAAAxI,IAAAwI,EAAA,IAAAA,EAAA,IAAA4D,GAAA,EAAAo0D,KAGAt1D,EAAAgB,UAAA,WACA,OAAAA,GAGAhB,EAAAzE,KAAA,WACA,OAAAA,GAGAyE,EAAAkB,MAAA,SAAA5D,GACA,OAAA/H,UAAAC,QAAA0L,IAAA5D,EAAAg4D,KAAAp0D,GAGAlB,EAAAhQ,QAAA,SAAAsN,GACA,OAAA/H,UAAAC,QAAA87D,EAAAM,EAAA75D,KAAAlD,IAAA,EAAAkD,KAAAnD,IAAA,EAAA0I,IAAAg4D,KAAAhE,GAGAtxD,EAAAsxD,aAAA,SAAAh0D,GACA,OAAA/H,UAAAC,QAAA87D,EAAAv5D,KAAAlD,IAAA,EAAAkD,KAAAnD,IAAA,EAAA0I,IAAAg4D,KAAAhE,GAGAtxD,EAAA4xD,aAAA,SAAAt0D,GACA,OAAA/H,UAAAC,QAAAo8D,EAAA75D,KAAAlD,IAAA,EAAAkD,KAAAnD,IAAA,EAAA0I,IAAAg4D,KAAA1D,GAGA5xD,EAAAwpC,MAAA,SAAAlsC,GACA,OAAA/H,UAAAC,QAAAg0C,EAAAzxC,KAAAlD,IAAA,EAAAkD,KAAAnD,IAAA,EAAA0I,IAAAg4D,KAAA9rB,GAGAxpC,EAAAmB,KAAA,WACA,OAAAi0D,KACAzgE,YACAG,SACAoM,SACAowD,gBACAM,gBACApoB,UAGA8rB,IAiBA,SAAAE,KACA,OAfA,SAAAC,EAAAz1D,GACA,IAAAmB,EAAAnB,EAAAmB,KAUA,OARAnB,EAAAhQ,QAAAgQ,EAAA4xD,oBACA5xD,EAAAsxD,oBACAtxD,EAAA4xD,aAEA5xD,EAAAmB,KAAA,WACA,OAAAs0D,EAAAt0D,MAGAnB,EAIAy1D,CAAAL,KAAA9D,aAAA,ICnGA,IAAAoE,GAAA,SAAA5iE,GACA,kBACA,OAAAA,ICFA6iE,GAAA,SAAA7iE,GACA,OAAAA,GCKA8iE,IAAA,KAEA,SAAAC,GAAAh+D,EAAAC,GACA,OAAAA,GAAAD,MACA,SAAA/E,GAAqB,OAAAA,EAAA+E,GAAAC,GACrB49D,GAAA59D,GAiBA,SAAAg+D,GAAAnhE,EAAAG,EAAAihE,EAAAC,GACA,IAAAC,EAAAthE,EAAA,GAAAkxB,EAAAlxB,EAAA,GAAAqxB,EAAAlxB,EAAA,GAAAmxB,EAAAnxB,EAAA,GAGA,OAFA+wB,EAAAowC,KAAAF,EAAAlwC,EAAAowC,GAAAjwC,EAAAgwC,EAAA/vC,EAAAD,KACAiwC,EAAAF,EAAAE,EAAApwC,GAAAG,EAAAgwC,EAAAhwC,EAAAC,IACA,SAAAnzB,GAAsB,OAAAkzB,EAAAiwC,EAAAnjE,KAGtB,SAAAojE,GAAAvhE,EAAAG,EAAAihE,EAAAC,GACA,IAAA93D,EAAAnG,KAAAnD,IAAAD,EAAAa,OAAAV,EAAAU,QAAA,EACAtH,EAAA,IAAAkE,MAAA8L,GACAxP,EAAA,IAAA0D,MAAA8L,GACAtQ,GAAA,EAQA,IALA+G,EAAAuJ,GAAAvJ,EAAA,KACAA,IAAAsG,QAAAa,UACAhH,IAAAmG,QAAAa,aAGAlO,EAAAsQ,GACAhQ,EAAAN,GAAAmoE,EAAAphE,EAAA/G,GAAA+G,EAAA/G,EAAA,IACAc,EAAAd,GAAAooE,EAAAlhE,EAAAlH,GAAAkH,EAAAlH,EAAA,IAGA,gBAAAkF,GACA,IAAAlF,EAAA4L,EAAA7E,EAAA7B,EAAA,EAAAoL,GAAA,EACA,OAAAxP,EAAAd,GAAAM,EAAAN,GAAAkF,KAIA,SAAAqO,GAAA+M,EAAAza,GACA,OAAAA,EACAkB,OAAAuZ,EAAAvZ,UACAG,MAAAoZ,EAAApZ,SACAuyB,YAAAnZ,EAAAmZ,eACA8uC,MAAAjoD,EAAAioD,SAKA,SAAAC,GAAAL,EAAAC,GACA,IAIAK,EACA9kC,EACAD,EANA38B,EAAAihE,GACA9gE,EAAA8gE,GACAvuC,EAAAnF,GACAi0C,GAAA,EAKA,SAAAb,IAGA,OAFAe,EAAAt+D,KAAAnD,IAAAD,EAAAa,OAAAV,EAAAU,QAAA,EAAA0gE,GAAAJ,GACAvkC,EAAAD,EAAA,KACAtxB,EAGA,SAAAA,EAAAlN,GACA,OAAAy+B,MAAA8kC,EAAA1hE,EAAAG,EAAAqhE,EAtEA,SAAAJ,GACA,gBAAAl+D,EAAAC,GACA,IAAA5J,EAAA6nE,EAAAl+D,KAAAC,MACA,gBAAAhF,GAAwB,OAAAA,GAAA+E,EAAA,EAAA/E,GAAAgF,EAAA,EAAA5J,EAAA4E,KAmExBwjE,CAAAP,KAAA1uC,MAAAv0B,GA2BA,OAxBAkN,EAAAlM,OAAA,SAAAf,GACA,OAAAu+B,MAAA+kC,EAAAvhE,EAAAH,EAAAkhE,GAAAM,EAnEA,SAAAH,GACA,gBAAAn+D,EAAAC,GACA,IAAApJ,EAAAsnE,EAAAn+D,KAAAC,MACA,gBAAAhJ,GAAwB,OAAAA,GAAA,EAAA+I,EAAA/I,GAAA,EAAAgJ,EAAApJ,EAAAI,KAgExBynE,CAAAP,SAAAjjE,IAGAiN,EAAArL,OAAA,SAAA2I,GACA,OAAA/H,UAAAC,QAAAb,EAAAogE,GAAAhnE,KAAAuP,EAAAq4D,IAAAL,KAAA3gE,EAAAsG,SAGA+E,EAAAlL,MAAA,SAAAwI,GACA,OAAA/H,UAAAC,QAAAV,EAAAkgE,GAAAjnE,KAAAuP,GAAAg4D,KAAAxgE,EAAAmG,SAGA+E,EAAAu1D,WAAA,SAAAj4D,GACA,OAAAxI,EAAAkgE,GAAAjnE,KAAAuP,GAAA+pB,EAAA7D,GAAA8xC,KAGAt1D,EAAAm2D,MAAA,SAAA74D,GACA,OAAA/H,UAAAC,QAAA2gE,IAAA74D,EAAAg4D,KAAAa,GAGAn2D,EAAAqnB,YAAA,SAAA/pB,GACA,OAAA/H,UAAAC,QAAA6xB,EAAA/pB,EAAAg4D,KAAAjuC,GAGAiuC,IC5GA,IAAAkB,GAAA,SAAA7hE,EAAAkH,EAAAytC,GACA,IAGAO,EAHAxuC,EAAA1G,EAAA,GACA2G,EAAA3G,IAAAa,OAAA,GACA+F,EAAAe,EAAAjB,EAAAC,EAAA,MAAAO,EAAA,GAAAA,GAGA,QADAytC,EAAAD,GAAA,MAAAC,EAAA,KAAAA,IACAt2C,MACA,QACA,IAAAnE,EAAAkJ,KAAAlD,IAAAkD,KAAAyE,IAAAnB,GAAAtD,KAAAyE,IAAAlB,IAEA,OADA,MAAAguC,EAAAO,WAAAjvC,MAAAivC,EAAAqC,GAAA3wC,EAAA1M,MAAAy6C,EAAAO,aACAI,GAAAX,EAAAz6C,GAEA,OACA,QACA,QACA,QACA,QACA,MAAAy6C,EAAAO,WAAAjvC,MAAAivC,EAAAsC,GAAA5wC,EAAAxD,KAAAlD,IAAAkD,KAAAyE,IAAAnB,GAAAtD,KAAAyE,IAAAlB,QAAAguC,EAAAO,aAAA,MAAAP,EAAAt2C,OACA,MAEA,QACA,QACA,MAAAs2C,EAAAO,WAAAjvC,MAAAivC,EAAAoC,GAAA1wC,MAAA+tC,EAAAO,YAAA,SAAAP,EAAAt2C,OAIA,OAAAg3C,GAAAV,ICxBA,SAAAmtB,GAAAz2D,GACA,IAAArL,EAAAqL,EAAArL,OAmDA,OAjDAqL,EAAApE,MAAA,SAAAC,GACA,IAAA3N,EAAAyG,IACA,OAAAiH,EAAA1N,EAAA,GAAAA,IAAAsH,OAAA,SAAAqG,EAAA,GAAAA,IAGAmE,EAAAG,WAAA,SAAAtE,EAAAytC,GACA,OAAAktB,GAAA7hE,IAAAkH,EAAAytC,IAGAtpC,EAAA02D,KAAA,SAAA76D,GACA,MAAAA,MAAA,IAEA,IAKAN,EALArN,EAAAyG,IACAoF,EAAA,EACAC,EAAA9L,EAAAsH,OAAA,EACA6F,EAAAnN,EAAA6L,GACAuB,EAAApN,EAAA8L,GA8BA,OA3BAsB,EAAAD,IACAE,EAAAF,IAAAC,IAAAC,EACAA,EAAAxB,IAAAC,IAAAuB,IAGAA,EAAAQ,EAAAV,EAAAC,EAAAO,IAEA,EAGAN,EAAAQ,EAFAV,EAAAtD,KAAAkE,MAAAZ,EAAAE,KACAD,EAAAvD,KAAAyD,KAAAF,EAAAC,KACAM,GACKN,EAAA,IAGLA,EAAAQ,EAFAV,EAAAtD,KAAAyD,KAAAH,EAAAE,KACAD,EAAAvD,KAAAkE,MAAAX,EAAAC,KACAM,IAGAN,EAAA,GACArN,EAAA6L,GAAAhC,KAAAkE,MAAAZ,EAAAE,KACArN,EAAA8L,GAAAjC,KAAAyD,KAAAF,EAAAC,KACA5G,EAAAzG,IACKqN,EAAA,IACLrN,EAAA6L,GAAAhC,KAAAyD,KAAAH,EAAAE,KACArN,EAAA8L,GAAAjC,KAAAkE,MAAAX,EAAAC,KACA5G,EAAAzG,IAGA8R,GAGAA,EAGA,SAAA22D,KACA,IAAA32D,EAAAo2D,GAAAP,GAAAxzC,IAMA,OAJAriB,EAAAmB,KAAA,WACA,OAAAA,GAAAnB,EAAA22D,OAGAF,GAAAz2D,GC/DA,SAAA42D,KACA,IAAAjiE,GAAA,KAEA,SAAAqL,EAAAlN,GACA,OAAAA,EAaA,OAVAkN,EAAAlM,OAAAkM,EAEAA,EAAArL,OAAAqL,EAAAlL,MAAA,SAAAwI,GACA,OAAA/H,UAAAC,QAAAb,EAAAogE,GAAAhnE,KAAAuP,EAAAq4D,IAAA31D,GAAArL,EAAAsG,SAGA+E,EAAAmB,KAAA,WACA,OAAAy1D,KAAAjiE,WAGA8hE,GAAAz2D,GCrBA,IAAA02D,GAAA,SAAA/hE,EAAAkiE,GAGA,IAIA/nE,EAJAiL,EAAA,EACAC,GAHArF,IAAAsG,SAGAzF,OAAA,EACAwH,EAAArI,EAAAoF,GACA1C,EAAA1C,EAAAqF,GAUA,OAPA3C,EAAA2F,IACAlO,EAAAiL,IAAAC,IAAAlL,EACAA,EAAAkO,IAAA3F,IAAAvI,GAGA6F,EAAAoF,GAAA88D,EAAA56D,MAAAe,GACArI,EAAAqF,GAAA68D,EAAAr7D,KAAAnE,GACA1C,GCVA,SAAAmiE,GAAAj/D,EAAAC,GACA,OAAAA,EAAAC,KAAAoE,IAAArE,EAAAD,IACA,SAAA/E,GAAqB,OAAAiF,KAAAoE,IAAArJ,EAAA+E,GAAAC,GACrB49D,GAAA59D,GAGA,SAAAi/D,GAAAl/D,EAAAC,GACA,OAAAD,EAAA,EACA,SAAA/I,GAAqB,OAAAiJ,KAAAE,KAAAH,EAAAhJ,GAAAiJ,KAAAE,KAAAJ,EAAA,EAAA/I,IACrB,SAAAA,GAAqB,OAAAiJ,KAAAE,IAAAH,EAAAhJ,GAAAiJ,KAAAE,IAAAJ,EAAA,EAAA/I,IAGrB,SAAAkoE,GAAAlkE,GACA,OAAAkJ,SAAAlJ,KAAA,KAAAA,KAAA,IAAAA,EAGA,SAAAmkE,GAAAC,GACA,YAAAA,EAAAF,GACAE,IAAAn/D,KAAAu8B,EAAAv8B,KAAAmtB,IACA,SAAApyB,GAAqB,OAAAiF,KAAAE,IAAAi/D,EAAApkE,IAGrB,SAAAqkE,GAAAD,GACA,OAAAA,IAAAn/D,KAAAu8B,EAAAv8B,KAAAoE,IACA,KAAA+6D,GAAAn/D,KAAAq/D,OACA,IAAAF,GAAAn/D,KAAAs/D,OACAH,EAAAn/D,KAAAoE,IAAA+6D,GAAA,SAAApkE,GAA8C,OAAAiF,KAAAoE,IAAArJ,GAAAokE,IAG9C,SAAAI,GAAAx+D,GACA,gBAAAhG,GACA,OAAAgG,GAAAhG,IAIA,SAAAykE,KACA,IAAAv3D,EAAAo2D,GAAAU,GAAAC,IAAApiE,QAAA,OACAA,EAAAqL,EAAArL,OACAuiE,EAAA,GACAM,EAAAL,GAAA,IACAM,EAAAR,GAAA,IAEA,SAAA3B,IAGA,OAFAkC,EAAAL,GAAAD,GAAAO,EAAAR,GAAAC,GACAviE,IAAA,OAAA6iE,EAAAF,GAAAE,GAAAC,EAAAH,GAAAG,IACAz3D,EA2EA,OAxEAA,EAAAk3D,KAAA,SAAA55D,GACA,OAAA/H,UAAAC,QAAA0hE,GAAA55D,EAAAg4D,KAAA4B,GAGAl3D,EAAArL,OAAA,SAAA2I,GACA,OAAA/H,UAAAC,QAAAb,EAAA2I,GAAAg4D,KAAA3gE,KAGAqL,EAAApE,MAAA,SAAAC,GACA,IAGAnN,EAHAR,EAAAyG,IACAwxB,EAAAj4B,EAAA,GACA4M,EAAA5M,IAAAsH,OAAA,IAGA9G,EAAAoM,EAAAqrB,KAAAv4B,EAAAu4B,IAAArrB,IAAAlN,GAEA,IAEA8B,EACAoG,EACAhH,EAJAlB,EAAA4pE,EAAArxC,GACAjoB,EAAAs5D,EAAA18D,GAIAzL,EAAA,MAAAwM,EAAA,IAAAA,EACAqjB,KAEA,KAAAg4C,EAAA,IAAAh5D,EAAAtQ,EAAAyB,GAEA,GADAzB,EAAAmK,KAAAmJ,MAAAtT,GAAA,EAAAsQ,EAAAnG,KAAAmJ,MAAAhD,GAAA,EACAioB,EAAA,QAAuBv4B,EAAAsQ,IAAOtQ,EAC9B,IAAAkI,EAAA,EAAApG,EAAA+nE,EAAA7pE,GAAgCkI,EAAAohE,IAAUphE,EAE1C,MADAhH,EAAAY,EAAAoG,GACAqwB,GAAA,CACA,GAAAr3B,EAAAgM,EAAA,MACAokB,EAAA9qB,KAAAtF,SAEO,KAAYlB,EAAAsQ,IAAOtQ,EAC1B,IAAAkI,EAAAohE,EAAA,EAAAxnE,EAAA+nE,EAAA7pE,GAAuCkI,GAAA,IAAQA,EAE/C,MADAhH,EAAAY,EAAAoG,GACAqwB,GAAA,CACA,GAAAr3B,EAAAgM,EAAA,MACAokB,EAAA9qB,KAAAtF,SAIAowB,EAAAtjB,EAAAhO,EAAAsQ,EAAAnG,KAAAnD,IAAAsJ,EAAAtQ,EAAAyB,IAAAuC,IAAA6lE,GAGA,OAAA/oE,EAAAwwB,EAAApjB,UAAAojB,GAGAlf,EAAAG,WAAA,SAAAtE,EAAAytC,GAGA,GAFA,MAAAA,MAAA,KAAA4tB,EAAA,WACA,mBAAA5tB,MAAAU,GAAAV,IACAztC,IAAAjJ,IAAA,OAAA02C,EACA,MAAAztC,MAAA,IACA,IAAA/F,EAAAiC,KAAAlD,IAAA,EAAAqiE,EAAAr7D,EAAAmE,EAAApE,QAAApG,QACA,gBAAAtH,GACA,IAAAN,EAAAM,EAAAupE,EAAA1/D,KAAAmJ,MAAAs2D,EAAAtpE,KAEA,OADAN,EAAAspE,IAAA,KAAAtpE,GAAAspE,GACAtpE,GAAAkI,EAAAwzC,EAAAp7C,GAAA,KAIA8R,EAAA02D,KAAA,WACA,OAAA/hE,EAAA+hE,GAAA/hE,KACAsH,MAAA,SAAAnJ,GAA0B,OAAA2kE,EAAA1/D,KAAAkE,MAAAu7D,EAAA1kE,MAC1B0I,KAAA,SAAA1I,GAAyB,OAAA2kE,EAAA1/D,KAAAyD,KAAAg8D,EAAA1kE,UAIzBkN,EAAAmB,KAAA,WACA,OAAAA,GAAAnB,EAAAu3D,KAAAL,UAGAl3D,EC1HA,SAAA03D,GAAA5kE,EAAAm7B,GACA,OAAAn7B,EAAA,GAAAiF,KAAAE,KAAAnF,EAAAm7B,GAAAl2B,KAAAE,IAAAnF,EAAAm7B,GAGA,SAAA0pC,KACA,IAAA1pC,EAAA,EACAjuB,EAAAo2D,GAGA,SAAAv+D,EAAAC,GACA,OAAAA,EAAA4/D,GAAA5/D,EAAAm2B,IAAAp2B,EAAA6/D,GAAA7/D,EAAAo2B,KACA,SAAAn7B,GAAuB,OAAA4kE,GAAA5kE,EAAAm7B,GAAAp2B,GAAAC,GACvB49D,GAAA59D,IAGA,SAAAD,EAAAC,GAEA,OADAA,EAAA4/D,GAAA5/D,EAAAm2B,IAAAp2B,EAAA6/D,GAAA7/D,EAAAo2B,IACA,SAAAn/B,GAAwB,OAAA4oE,GAAA7/D,EAAAC,EAAAhJ,EAAA,EAAAm/B,MAVxBt5B,EAAAqL,EAAArL,OAqBA,OARAqL,EAAAiuB,SAAA,SAAA3wB,GACA,OAAA/H,UAAAC,QAAAy4B,GAAA3wB,EAAA3I,QAAAs5B,GAGAjuB,EAAAmB,KAAA,WACA,OAAAA,GAAAnB,EAAA23D,KAAA1pC,cAGAwoC,GAAAz2D,GAGA,SAAA43D,KACA,OAAAD,KAAA1pC,SAAA,ICjCA,SAAA4pC,KACA,IAAAljE,KACAG,KACAyI,KAEA,SAAA+3D,IACA,IAAA1nE,EAAA,EAAAyB,EAAA0I,KAAAlD,IAAA,EAAAC,EAAAU,QAEA,IADA+H,EAAA,IAAAnL,MAAA/C,EAAA,KACAzB,EAAAyB,GAAAkO,EAAA3P,EAAA,GAAA4P,EAAA7I,EAAA/G,EAAAyB,GACA,OAAA2Q,EAGA,SAAAA,EAAAlN,GACA,IAAA8H,MAAA9H,MAAA,OAAAgC,EAAA0E,EAAA+D,EAAAzK,IAiCA,OA9BAkN,EAAA83D,aAAA,SAAA/kE,GACA,IAAAnF,EAAAkH,EAAAuO,QAAAtQ,GACA,OAAAnF,EAAA,GAAA+K,UACA/K,EAAA,EAAA2P,EAAA3P,EAAA,GAAA+G,EAAA,GACA/G,EAAA2P,EAAA/H,OAAA+H,EAAA3P,GAAA+G,IAAAa,OAAA,KAIAwK,EAAArL,OAAA,SAAA2I,GACA,IAAA/H,UAAAC,OAAA,OAAAb,EAAAsG,QACAtG,KACA,QAAAzG,EAAAN,EAAA,EAAAyB,EAAAiO,EAAA9H,OAAoC5H,EAAAyB,IAAOzB,EAAA,OAAAM,EAAAoP,EAAA1P,KAAAgN,MAAA1M,OAAAyG,EAAAP,KAAAlG,GAE3C,OADAyG,EAAA0D,KAAAK,GACA48D,KAGAt1D,EAAAlL,MAAA,SAAAwI,GACA,OAAA/H,UAAAC,QAAAV,EAAAkgE,GAAAjnE,KAAAuP,GAAAg4D,KAAAxgE,EAAAmG,SAGA+E,EAAA+3D,UAAA,WACA,OAAAx6D,EAAAtC,SAGA+E,EAAAmB,KAAA,WACA,OAAA02D,KACAljE,UACAG,UAGAkL,EC7CA,SAAAg4D,KACA,IAAAh7D,EAAA,EACA3F,EAAA,EACAhI,EAAA,EACAsF,GAAA,IACAG,GAAA,KAEA,SAAAkL,EAAAlN,GACA,GAAAA,KAAA,OAAAgC,EAAA0E,EAAA7E,EAAA7B,EAAA,EAAAzD,IAGA,SAAAimE,IACA,IAAA1nE,GAAA,EAEA,IADA+G,EAAA,IAAAvC,MAAA/C,KACAzB,EAAAyB,GAAAsF,EAAA/G,OAAA,GAAAyJ,GAAAzJ,EAAAyB,GAAA2N,IAAA3N,EAAA,GACA,OAAA2Q,EAyBA,OAtBAA,EAAArL,OAAA,SAAA2I,GACA,OAAA/H,UAAAC,QAAAwH,GAAAM,EAAA,GAAAjG,GAAAiG,EAAA,GAAAg4D,MAAAt4D,EAAA3F,IAGA2I,EAAAlL,MAAA,SAAAwI,GACA,OAAA/H,UAAAC,QAAAnG,GAAAyF,EAAAkgE,GAAAjnE,KAAAuP,IAAA9H,OAAA,EAAA8/D,KAAAxgE,EAAAmG,SAGA+E,EAAA83D,aAAA,SAAA/kE,GACA,IAAAnF,EAAAkH,EAAAuO,QAAAtQ,GACA,OAAAnF,EAAA,GAAA+K,SACA/K,EAAA,GAAAoP,EAAArI,EAAA,IACA/G,GAAAyB,GAAAsF,EAAAtF,EAAA,GAAAgI,IACA1C,EAAA/G,EAAA,GAAA+G,EAAA/G,KAGAoS,EAAAmB,KAAA,WACA,OAAA62D,KACArjE,QAAAqI,EAAA3F,IACAvC,UAGA2hE,GAAAz2D,GCzCA,SAAAi4D,KACA,IAAAtjE,GAAA,IACAG,GAAA,KACAzF,EAAA,EAEA,SAAA2Q,EAAAlN,GACA,GAAAA,KAAA,OAAAgC,EAAA0E,EAAA7E,EAAA7B,EAAA,EAAAzD,IAsBA,OAnBA2Q,EAAArL,OAAA,SAAA2I,GACA,OAAA/H,UAAAC,QAAAb,EAAAqgE,GAAAjnE,KAAAuP,GAAAjO,EAAA0I,KAAAnD,IAAAD,EAAAa,OAAAV,EAAAU,OAAA,GAAAwK,GAAArL,EAAAsG,SAGA+E,EAAAlL,MAAA,SAAAwI,GACA,OAAA/H,UAAAC,QAAAV,EAAAkgE,GAAAjnE,KAAAuP,GAAAjO,EAAA0I,KAAAnD,IAAAD,EAAAa,OAAAV,EAAAU,OAAA,GAAAwK,GAAAlL,EAAAmG,SAGA+E,EAAA83D,aAAA,SAAA/kE,GACA,IAAAnF,EAAAkH,EAAAuO,QAAAtQ,GACA,OAAA4B,EAAA/G,EAAA,GAAA+G,EAAA/G,KAGAoS,EAAAmB,KAAA,WACA,OAAA82D,KACAtjE,UACAG,UAGAkL,EC/BA,IAAAk4D,GAAA,IAAAnmE,KACAomE,GAAA,IAAApmE,KAEA,SAAAqmE,GAAAC,EAAAC,EAAAz8D,EAAA08D,GAEA,SAAA1B,EAAA2B,GACA,OAAAH,EAAAG,EAAA,IAAAzmE,MAAAymE,MA4DA,OAzDA3B,EAAA56D,MAAA46D,EAEAA,EAAAr7D,KAAA,SAAAg9D,GACA,OAAAH,EAAAG,EAAA,IAAAzmE,KAAAymE,EAAA,IAAAF,EAAAE,EAAA,GAAAH,EAAAG,MAGA3B,EAAA31D,MAAA,SAAAs3D,GACA,IAAAvC,EAAAY,EAAA2B,GACA3yC,EAAAgxC,EAAAr7D,KAAAg9D,GACA,OAAAA,EAAAvC,EAAApwC,EAAA2yC,EAAAvC,EAAApwC,GAGAgxC,EAAA51D,OAAA,SAAAu3D,EAAAj9D,GACA,OAAA+8D,EAAAE,EAAA,IAAAzmE,MAAAymE,GAAA,MAAAj9D,EAAA,EAAAxD,KAAAkE,MAAAV,IAAAi9D,GAGA3B,EAAA/hE,MAAA,SAAAuG,EAAAC,EAAAC,GACA,IAAAyQ,EAAAlX,KAGA,GAFAuG,EAAAw7D,EAAAr7D,KAAAH,GACAE,EAAA,MAAAA,EAAA,EAAAxD,KAAAkE,MAAAV,KACAF,EAAAC,GAAAC,EAAA,UAAAzG,EACA,GAAAA,EAAAV,KAAA4X,EAAA,IAAAja,MAAAsJ,IAAAi9D,EAAAj9D,EAAAE,GAAA88D,EAAAh9D,SACA2Q,EAAA3Q,KAAAC,GACA,OAAAxG,GAGA+hE,EAAA1+D,OAAA,SAAAkoC,GACA,OAAA+3B,GAAA,SAAAI,GACA,GAAAA,KAAA,KAAAH,EAAAG,IAAAn4B,EAAAm4B,MAAAp2C,QAAAo2C,EAAA,IACK,SAAAA,EAAAj9D,GACL,GAAAi9D,KACA,GAAAj9D,EAAA,SAAAA,GAAA,GACA,KAAA+8D,EAAAE,GAAA,IAAAn4B,EAAAm4B,UACS,OAAAj9D,GAAA,GACT,KAAA+8D,EAAAE,EAAA,IAAAn4B,EAAAm4B,SAMA38D,IACAg7D,EAAAh7D,MAAA,SAAAR,EAAAomB,GAGA,OAFAy2C,GAAA91C,SAAA/mB,GAAA88D,GAAA/1C,SAAAX,GACA42C,EAAAH,IAAAG,EAAAF,IACApgE,KAAAkE,MAAAJ,EAAAq8D,GAAAC,MAGAtB,EAAAlqC,MAAA,SAAApxB,GAEA,OADAA,EAAAxD,KAAAkE,MAAAV,GACAS,SAAAT,MAAA,EACAA,EAAA,EACAs7D,EAAA1+D,OAAAogE,EACA,SAAArqE,GAA6B,OAAAqqE,EAAArqE,GAAAqN,GAAA,GAC7B,SAAArN,GAA6B,OAAA2oE,EAAAh7D,MAAA,EAAA3N,GAAAqN,GAAA,IAH7Bs7D,EADA,OAQAA,EChEA,IAAA4B,GAAAL,GAAA,aAEC,SAAAI,EAAAj9D,GACDi9D,EAAAp2C,SAAAo2C,EAAAj9D,IACC,SAAAF,EAAAomB,GACD,OAAAA,EAAApmB,IAIAo9D,GAAA9rC,MAAA,SAAA72B,GAEA,OADAA,EAAAiC,KAAAkE,MAAAnG,GACAkG,SAAAlG,MAAA,EACAA,EAAA,EACAsiE,GAAA,SAAAI,GACAA,EAAAp2C,QAAArqB,KAAAkE,MAAAu8D,EAAA1iE,OACG,SAAA0iE,EAAAj9D,GACHi9D,EAAAp2C,SAAAo2C,EAAAj9D,EAAAzF,IACG,SAAAuF,EAAAomB,GACH,OAAAA,EAAApmB,GAAAvF,IANA2iE,GADA,MAWA,IAAAC,GAAA,GACAC,GAAAF,GAAA3jE,MCxBA8jE,GAAA,IAGAC,GAAA,OCDAC,GAAAV,GAAA,SAAAI,GACAA,EAAAp2C,QDJA,ICIArqB,KAAAkE,MAAAu8D,EDJA,OCKC,SAAAA,EAAAj9D,GACDi9D,EAAAp2C,SAAAo2C,EDNA,ICMAj9D,IACC,SAAAF,EAAAomB,GACD,OAAAA,EAAApmB,GDRA,KCSC,SAAAm9D,GACD,OAAAA,EAAAO,wBAIAC,GAAAF,GAAAhkE,MCXAmkE,GAAAb,GAAA,SAAAI,GACAA,EAAAp2C,QAAArqB,KAAAkE,MAAAu8D,EAAAI,SACC,SAAAJ,EAAAj9D,GACDi9D,EAAAp2C,SAAAo2C,EAAAj9D,EAAAq9D,KACC,SAAAv9D,EAAAomB,GACD,OAAAA,EAAApmB,GAAAu9D,IACC,SAAAJ,GACD,OAAAA,EAAAU,qBAIAC,GAAAF,GAAAnkE,MCXAskE,GAAAhB,GAAA,SAAAI,GACA,IAAAv3D,EAAAu3D,EAAAa,oBAAAT,GHFA,KGGA33D,EAAA,IAAAA,GHHA,MGIAu3D,EAAAp2C,QHJA,KGIArqB,KAAAkE,QAAAu8D,EAAAv3D,GHJA,MGIAA,IACC,SAAAu3D,EAAAj9D,GACDi9D,EAAAp2C,SAAAo2C,EHNA,KGMAj9D,IACC,SAAAF,EAAAomB,GACD,OAAAA,EAAApmB,GHRA,MGSC,SAAAm9D,GACD,OAAAA,EAAAc,aAGAC,GAAA,GACAC,GAAAJ,GAAAtkE,MCbA2kE,GAAArB,GAAA,SAAAI,GACAA,EAAAkB,SAAA,UACC,SAAAlB,EAAAj9D,GACDi9D,EAAAmB,QAAAnB,EAAAoB,UAAAr+D,IACC,SAAAF,EAAAomB,GACD,OAAAA,EAAApmB,GAAAomB,EAAA43C,oBAAAh+D,EAAAg+D,qBAAAT,IJLA,OIMC,SAAAJ,GACD,OAAAA,EAAAoB,UAAA,IAGAC,GAAA,GACAC,GAAAL,GAAA3kE,MCXA,SAAAilE,GAAAnsE,GACA,OAAAwqE,GAAA,SAAAI,GACAA,EAAAmB,QAAAnB,EAAAoB,WAAApB,EAAAwB,SAAA,EAAApsE,GAAA,GACA4qE,EAAAkB,SAAA,UACG,SAAAlB,EAAAj9D,GACHi9D,EAAAmB,QAAAnB,EAAAoB,UAAA,EAAAr+D,IACG,SAAAF,EAAAomB,GACH,OAAAA,EAAApmB,GAAAomB,EAAA43C,oBAAAh+D,EAAAg+D,qBAAAT,IAAAC,KAIA,IAAAoB,GAAAF,GAAA,GACAG,GAAAH,GAAA,GACAI,GAAAJ,GAAA,GACAK,GAAAL,GAAA,GACAM,GAAAN,GAAA,GACAO,GAAAP,GAAA,GACAQ,GAAAR,GAAA,GAEAS,GAAAP,GAAAnlE,MACA2lE,GAAAP,GAAAplE,MACA4lE,GAAAP,GAAArlE,MACA6lE,GAAAP,GAAAtlE,MACA8lE,GAAAP,GAAAvlE,MACA+lE,GAAAP,GAAAxlE,MACAgmE,GAAAP,GAAAzlE,MC1BAimE,GAAA3C,GAAA,SAAAI,GACAA,EAAAmB,QAAA,GACAnB,EAAAkB,SAAA,UACC,SAAAlB,EAAAj9D,GACDi9D,EAAAwC,SAAAxC,EAAAyC,WAAA1/D,IACC,SAAAF,EAAAomB,GACD,OAAAA,EAAAw5C,WAAA5/D,EAAA4/D,WAAA,IAAAx5C,EAAAy5C,cAAA7/D,EAAA6/D,gBACC,SAAA1C,GACD,OAAAA,EAAAyC,aAGAE,GAAA,GACAC,GAAAL,GAAAjmE,MCZAumE,GAAAjD,GAAA,SAAAI,GACAA,EAAAwC,SAAA,KACAxC,EAAAkB,SAAA,UACC,SAAAlB,EAAAj9D,GACDi9D,EAAA8C,YAAA9C,EAAA0C,cAAA3/D,IACC,SAAAF,EAAAomB,GACD,OAAAA,EAAAy5C,cAAA7/D,EAAA6/D,eACC,SAAA1C,GACD,OAAAA,EAAA0C,gBAIAG,GAAA1uC,MAAA,SAAA72B,GACA,OAAAkG,SAAAlG,EAAAiC,KAAAkE,MAAAnG,OAAA,EAAAsiE,GAAA,SAAAI,GACAA,EAAA8C,YAAAvjE,KAAAkE,MAAAu8D,EAAA0C,cAAAplE,MACA0iE,EAAAwC,SAAA,KACAxC,EAAAkB,SAAA,UACG,SAAAlB,EAAAj9D,GACHi9D,EAAA8C,YAAA9C,EAAA0C,cAAA3/D,EAAAzF,KALA,MASA,IAAAylE,GAAA,GACAC,GAAAH,GAAAvmE,MCtBA2mE,GAAArD,GAAA,SAAAI,GACAA,EAAAkD,cAAA,MACC,SAAAlD,EAAAj9D,GACDi9D,EAAAp2C,SAAAo2C,EAAAj9D,EAAAq9D,KACC,SAAAv9D,EAAAomB,GACD,OAAAA,EAAApmB,GAAAu9D,IACC,SAAAJ,GACD,OAAAA,EAAAmD,kBAGAC,GAAA,GACAC,GAAAJ,GAAA3mE,MCXAgnE,GAAA1D,GAAA,SAAAI,GACAA,EAAAuD,cAAA,QACC,SAAAvD,EAAAj9D,GACDi9D,EAAAp2C,SAAAo2C,ETJA,KSIAj9D,IACC,SAAAF,EAAAomB,GACD,OAAAA,EAAApmB,GTNA,MSOC,SAAAm9D,GACD,OAAAA,EAAAwD,gBAGAC,GAAA,GACAC,GAAAJ,GAAAhnE,MCXAqnE,GAAA/D,GAAA,SAAAI,GACAA,EAAA4D,YAAA,UACC,SAAA5D,EAAAj9D,GACDi9D,EAAA6D,WAAA7D,EAAA8D,aAAA/gE,IACC,SAAAF,EAAAomB,GACD,OAAAA,EAAApmB,GVLA,OUMC,SAAAm9D,GACD,OAAAA,EAAA8D,aAAA,UAIAC,GAAAJ,GAAArnE,MCXA,SAAA0nE,GAAA5uE,GACA,OAAAwqE,GAAA,SAAAI,GACAA,EAAA6D,WAAA7D,EAAA8D,cAAA9D,EAAAiE,YAAA,EAAA7uE,GAAA,GACA4qE,EAAA4D,YAAA,UACG,SAAA5D,EAAAj9D,GACHi9D,EAAA6D,WAAA7D,EAAA8D,aAAA,EAAA/gE,IACG,SAAAF,EAAAomB,GACH,OAAAA,EAAApmB,GAAAw9D,KAIA,IAAA6D,GAAAF,GAAA,GACAG,GAAAH,GAAA,GACAI,GAAAJ,GAAA,GACAK,GAAAL,GAAA,GACAM,GAAAN,GAAA,GACAO,GAAAP,GAAA,GACAQ,GAAAR,GAAA,GAEAS,GAAAP,GAAA5nE,MACAooE,GAAAP,GAAA7nE,MACAqoE,GAAAP,GAAA9nE,MACAsoE,GAAAP,GAAA/nE,MACAuoE,GAAAP,GAAAhoE,MACAwoE,GAAAP,GAAAjoE,MACAyoE,GAAAP,GAAAloE,MC1BA0oE,GAAApF,GAAA,SAAAI,GACAA,EAAA6D,WAAA,GACA7D,EAAA4D,YAAA,UACC,SAAA5D,EAAAj9D,GACDi9D,EAAAiF,YAAAjF,EAAAkF,cAAAniE,IACC,SAAAF,EAAAomB,GACD,OAAAA,EAAAi8C,cAAAriE,EAAAqiE,cAAA,IAAAj8C,EAAAk8C,iBAAAtiE,EAAAsiE,mBACC,SAAAnF,GACD,OAAAA,EAAAkF,gBAGAE,GAAA,GACAC,GAAAL,GAAA1oE,MCZAgpE,GAAA1F,GAAA,SAAAI,GACAA,EAAAiF,YAAA,KACAjF,EAAA4D,YAAA,UACC,SAAA5D,EAAAj9D,GACDi9D,EAAAuF,eAAAvF,EAAAmF,iBAAApiE,IACC,SAAAF,EAAAomB,GACD,OAAAA,EAAAk8C,iBAAAtiE,EAAAsiE,kBACC,SAAAnF,GACD,OAAAA,EAAAmF,mBAIAG,GAAAnxC,MAAA,SAAA72B,GACA,OAAAkG,SAAAlG,EAAAiC,KAAAkE,MAAAnG,OAAA,EAAAsiE,GAAA,SAAAI,GACAA,EAAAuF,eAAAhmE,KAAAkE,MAAAu8D,EAAAmF,iBAAA7nE,MACA0iE,EAAAiF,YAAA,KACAjF,EAAA4D,YAAA,UACG,SAAA5D,EAAAj9D,GACHi9D,EAAAuF,eAAAvF,EAAAmF,iBAAApiE,EAAAzF,KALA,MASA,IAAAkoE,GAAA,GACAC,GAAAH,GAAAhpE,MCZA,SAAAopE,GAAAhwE,GACA,MAAAA,EAAA6E,GAAA7E,EAAA6E,EAAA,KACA,IAAAylE,EAAA,IAAAzmE,MAAA,EAAA7D,EAAAF,EAAAE,MAAAiwE,EAAAjwE,EAAAkwE,EAAAlwE,EAAAm3B,EAAAn3B,EAAAmwE,GAEA,OADA7F,EAAA8C,YAAAptE,EAAA6E,GACAylE,EAEA,WAAAzmE,KAAA7D,EAAA6E,EAAA7E,EAAAF,EAAAE,MAAAiwE,EAAAjwE,EAAAkwE,EAAAlwE,EAAAm3B,EAAAn3B,EAAAmwE,GAGA,SAAAC,GAAApwE,GACA,MAAAA,EAAA6E,GAAA7E,EAAA6E,EAAA,KACA,IAAAylE,EAAA,IAAAzmE,UAAAwsE,KAAA,EAAArwE,EAAAF,EAAAE,MAAAiwE,EAAAjwE,EAAAkwE,EAAAlwE,EAAAm3B,EAAAn3B,EAAAmwE,IAEA,OADA7F,EAAAuF,eAAA7vE,EAAA6E,GACAylE,EAEA,WAAAzmE,UAAAwsE,IAAArwE,EAAA6E,EAAA7E,EAAAF,EAAAE,MAAAiwE,EAAAjwE,EAAAkwE,EAAAlwE,EAAAm3B,EAAAn3B,EAAAmwE,IAGA,SAAAG,GAAAzrE,GACA,OAAUA,IAAA/E,EAAA,EAAAE,EAAA,EAAAiwE,EAAA,EAAAC,EAAA,EAAA/4C,EAAA,EAAAg5C,EAAA,GAGV,SAAAI,GAAA3zB,GACA,IAAA4zB,EAAA5zB,EAAA6zB,SACAC,EAAA9zB,EAAA0tB,KACAqG,EAAA/zB,EAAAjiB,KACAi2C,EAAAh0B,EAAAi0B,QACAC,EAAAl0B,EAAAgvB,KACAmF,EAAAn0B,EAAAo0B,UACAC,EAAAr0B,EAAAswB,OACAgE,EAAAt0B,EAAAu0B,YAEAC,EAAAC,GAAAT,GACAU,EAAAC,GAAAX,GACAY,EAAAH,GAAAP,GACAW,EAAAF,GAAAT,GACAY,EAAAL,GAAAN,GACAY,EAAAJ,GAAAR,GACAa,EAAAP,GAAAJ,GACAY,EAAAN,GAAAN,GACAa,EAAAT,GAAAH,GACAa,EAAAR,GAAAL,GAEAc,GACAroE,EAkPA,SAAA3J,GACA,OAAA+wE,EAAA/wE,EAAA8rE,WAlPAzpE,EAqPA,SAAArC,GACA,OAAA8wE,EAAA9wE,EAAA8rE,WArPAliE,EAwPA,SAAA5J,GACA,OAAAkxE,EAAAlxE,EAAA+sE,aAxPAzqE,EA2PA,SAAAtC,GACA,OAAAixE,EAAAjxE,EAAA+sE,aA3PAhtE,EAAA,KACAC,EAAAiyE,GACA5sE,EAAA4sE,GACArnE,EAAAsnE,GACAjC,EAAAkC,GACA/4C,EAAAg5C,GACApiE,EAAAqiE,GACAlC,EAAAmC,GACAxyE,EAAAyyE,GACArC,EAAAsC,GACAhxE,EAoPA,SAAAxB,GACA,OAAA4wE,IAAA5wE,EAAAorE,YAAA,MApPAqH,EAAAC,GACAjxE,EAAAkxE,GACAx7C,EAAAy7C,GACA36C,EAAA46C,GACAC,EAAAC,GACAC,EAAAC,GACAtvC,EAAAuvC,GACAhtC,EAAAitC,GACAvuE,EAAA,KACA23C,EAAA,KACA13C,EAAAuuE,GACAxjB,EAAAyjB,GACAC,EAAAC,GACAn3B,IAAAo3B,IAGAC,GACA9pE,EAsOA,SAAA3J,GACA,OAAA+wE,EAAA/wE,EAAAuuE,cAtOAlsE,EAyOA,SAAArC,GACA,OAAA8wE,EAAA9wE,EAAAuuE,cAzOA3kE,EA4OA,SAAA5J,GACA,OAAAkxE,EAAAlxE,EAAAwvE,gBA5OAltE,EA+OA,SAAAtC,GACA,OAAAixE,EAAAjxE,EAAAwvE,gBA/OAzvE,EAAA,KACAC,EAAA0zE,GACAruE,EAAAquE,GACA9oE,EAAA+oE,GACA1D,EAAA2D,GACAx6C,EAAAy6C,GACA7jE,EAAA8jE,GACA3D,EAAA4D,GACAj0E,EAAAk0E,GACA9D,EAAA+D,GACAzyE,EAwOA,SAAAxB,GACA,OAAA4wE,IAAA5wE,EAAA8tE,eAAA,MAxOA2E,EAAAC,GACAjxE,EAAAkxE,GACAx7C,EAAA+8C,GACAj8C,EAAAk8C,GACArB,EAAAsB,GACApB,EAAAqB,GACA1wC,EAAA2wC,GACApuC,EAAAquC,GACA3vE,EAAA,KACA23C,EAAA,KACA13C,EAAA2vE,GACA5kB,EAAA6kB,GACAnB,EAAAoB,GACAt4B,IAAAo3B,IAGAmB,GACAhrE,EAkJA,SAAA3J,EAAAqZ,EAAA3Z,GACA,IAAAyB,EAAAuwE,EAAA9iD,KAAAvV,EAAAtM,MAAArN,IACA,OAAAyB,GAAAnB,EAAA2jC,EAAAguC,EAAAxwE,EAAA,GAAAwtB,eAAAjvB,EAAAyB,EAAA,GAAAmG,SAAA,GAnJAjF,EAsJA,SAAArC,EAAAqZ,EAAA3Z,GACA,IAAAyB,EAAAqwE,EAAA5iD,KAAAvV,EAAAtM,MAAArN,IACA,OAAAyB,GAAAnB,EAAA2jC,EAAA8tC,EAAAtwE,EAAA,GAAAwtB,eAAAjvB,EAAAyB,EAAA,GAAAmG,SAAA,GAvJAsC,EA0JA,SAAA5J,EAAAqZ,EAAA3Z,GACA,IAAAyB,EAAA2wE,EAAAljD,KAAAvV,EAAAtM,MAAArN,IACA,OAAAyB,GAAAnB,EAAAF,EAAAiyE,EAAA5wE,EAAA,GAAAwtB,eAAAjvB,EAAAyB,EAAA,GAAAmG,SAAA,GA3JAhF,EA8JA,SAAAtC,EAAAqZ,EAAA3Z,GACA,IAAAyB,EAAAywE,EAAAhjD,KAAAvV,EAAAtM,MAAArN,IACA,OAAAyB,GAAAnB,EAAAF,EAAA+xE,EAAA1wE,EAAA,GAAAwtB,eAAAjvB,EAAAyB,EAAA,GAAAmG,SAAA,GA/JAvH,EAkKA,SAAAC,EAAAqZ,EAAA3Z,GACA,OAAAk1E,EAAA50E,EAAAwwE,EAAAn3D,EAAA3Z,IAlKAM,EAAA60E,GACAxvE,EAAAwvE,GACAjqE,EAAAkqE,GACA7E,EAAA8E,GACA37C,EAAA27C,GACA/kE,EAAAglE,GACA7E,EAAA8E,GACAn1E,EAAAo1E,GACAhF,EAAAiF,GACA3zE,EA+HA,SAAAxB,EAAAqZ,EAAA3Z,GACA,IAAAyB,EAAAiwE,EAAAxiD,KAAAvV,EAAAtM,MAAArN,IACA,OAAAyB,GAAAnB,EAAAwB,EAAA8vE,EAAAnwE,EAAA,GAAAwtB,eAAAjvB,EAAAyB,EAAA,GAAAmG,SAAA,GAhIAmrE,EAAA2C,GACA3zE,EAAA4zE,GACAl+C,EAAAm+C,GACAr9C,EAAAs9C,GACAzC,EAAA0C,GACAxC,EAAAyC,GACA9xC,EAAA+xC,GACAxvC,EAAAyvC,GACA/wE,EAmJA,SAAA5E,EAAAqZ,EAAA3Z,GACA,OAAAk1E,EAAA50E,EAAA0wE,EAAAr3D,EAAA3Z,IAnJA68C,EAsJA,SAAAv8C,EAAAqZ,EAAA3Z,GACA,OAAAk1E,EAAA50E,EAAA2wE,EAAAt3D,EAAA3Z,IAtJAmF,EAAA+wE,GACAhmB,EAAAimB,GACAvC,EAAAwC,GACA15B,IAAA25B,IAWA,SAAAz4B,EAAAlC,EAAA42B,GACA,gBAAA1H,GACA,IAIAvqE,EACAi2E,EACAvjE,EANA4G,KACA3Z,GAAA,EACAsQ,EAAA,EACA7O,EAAAi6C,EAAA9zC,OAOA,IAFAgjE,aAAAzmE,OAAAymE,EAAA,IAAAzmE,MAAAymE,MAEA5qE,EAAAyB,GACA,KAAAi6C,EAAA1J,WAAAhyC,KACA2Z,EAAAnT,KAAAk1C,EAAAruC,MAAAiD,EAAAtQ,IACA,OAAAs2E,EAAAC,GAAAl2E,EAAAq7C,EAAA86B,SAAAx2E,KAAAK,EAAAq7C,EAAA86B,SAAAx2E,GACAs2E,EAAA,MAAAj2E,EAAA,SACA0S,EAAAu/D,EAAAjyE,QAAA0S,EAAA63D,EAAA0L,IACA38D,EAAAnT,KAAAnG,GACAiQ,EAAAtQ,EAAA,GAKA,OADA2Z,EAAAnT,KAAAk1C,EAAAruC,MAAAiD,EAAAtQ,IACA2Z,EAAAW,KAAA,KAIA,SAAAm8D,EAAA/6B,EAAAg7B,GACA,gBAAA/8D,GACA,IAEAg9D,EAAAC,EAFAt2E,EAAAswE,GAAA,MAGA,GAFAsE,EAAA50E,EAAAo7C,EAAA/hC,GAAA,OAEAA,EAAA/R,OAAA,YAGA,SAAAtH,EAAA,WAAA6D,KAAA7D,EAAAyyE,GAMA,GAHA,MAAAzyE,MAAAiwE,EAAAjwE,EAAAiwE,EAAA,MAAAjwE,EAAAwB,GAGA,MAAAxB,EAAA,CACA,GAAAA,EAAAgzE,EAAA,GAAAhzE,EAAAgzE,EAAA,eACA,MAAAhzE,MAAA2jC,EAAA,GACA,MAAA3jC,GAEAq2E,GADAC,GAAAD,EAAAjG,GAAAE,GAAAtwE,EAAA6E,KAAA0pE,aACA,OAAA+H,EAAA7H,GAAAnhE,KAAA+oE,GAAA5H,GAAA4H,GACAA,EAAAE,GAAAxjE,OAAAsjE,EAAA,GAAAr2E,EAAAgzE,EAAA,IACAhzE,EAAA6E,EAAAwxE,EAAA5G,iBACAzvE,EAAAF,EAAAu2E,EAAA7G,cACAxvE,IAAAq2E,EAAAjI,cAAApuE,EAAA2jC,EAAA,OAGA0yC,GADAC,GAAAD,EAAAD,EAAA9F,GAAAtwE,EAAA6E,KAAAinE,UACA,OAAAwK,EAAAtK,GAAA1+D,KAAA+oE,GAAArK,GAAAqK,GACAA,EAAA1K,GAAA54D,OAAAsjE,EAAA,GAAAr2E,EAAAgzE,EAAA,IACAhzE,EAAA6E,EAAAwxE,EAAArJ,cACAhtE,EAAAF,EAAAu2E,EAAAtJ,WACA/sE,IAAAq2E,EAAA3K,WAAA1rE,EAAA2jC,EAAA,WAEO,MAAA3jC,GAAA,MAAAA,KACP,MAAAA,MAAA2jC,EAAA,MAAA3jC,IAAAi4B,EAAA,QAAAj4B,EAAA,KACAs2E,EAAA,MAAAt2E,EAAAowE,GAAAE,GAAAtwE,EAAA6E,IAAA0pE,YAAA6H,EAAA9F,GAAAtwE,EAAA6E,IAAAinE,SACA9rE,EAAAF,EAAA,EACAE,IAAA,MAAAA,KAAA2jC,EAAA,OAAA3jC,EAAAkmC,GAAAowC,EAAA,KAAAt2E,EAAA2jC,EAAA,EAAA3jC,EAAA8yE,GAAAwD,EAAA,MAKA,YAAAt2E,GACAA,EAAAiwE,GAAAjwE,EAAAszE,EAAA,MACAtzE,EAAAkwE,GAAAlwE,EAAAszE,EAAA,IACAlD,GAAApwE,IAIAo2E,EAAAp2E,IAIA,SAAA40E,EAAA50E,EAAAo7C,EAAA/hC,EAAArJ,GAOA,IANA,IAGAjQ,EACAi2B,EAJAt2B,EAAA,EACAyB,EAAAi6C,EAAA9zC,OACAxH,EAAAuZ,EAAA/R,OAIA5H,EAAAyB,GAAA,CACA,GAAA6O,GAAAlQ,EAAA,SAEA,SADAC,EAAAq7C,EAAA1J,WAAAhyC,OAIA,GAFAK,EAAAq7C,EAAA86B,OAAAx2E,OACAs2B,EAAA2+C,EAAA50E,KAAAk2E,GAAA76B,EAAA86B,OAAAx2E,KAAAK,MACAiQ,EAAAgmB,EAAAh2B,EAAAqZ,EAAArJ,IAAA,gBACO,GAAAjQ,GAAAsZ,EAAAq4B,WAAA1hC,KACP,SAIA,OAAAA,EAgFA,OA1LAgiE,EAAAptE,EAAA04C,EAAAozB,EAAAsB,GACAA,EAAAz1B,EAAAe,EAAAqzB,EAAAqB,GACAA,EAAAjyE,EAAAu9C,EAAAkzB,EAAAwB,GACAyB,EAAA7uE,EAAA04C,EAAAozB,EAAA+C,GACAA,EAAAl3B,EAAAe,EAAAqzB,EAAA8C,GACAA,EAAA1zE,EAAAu9C,EAAAkzB,EAAAiD,IAsLAhhE,OAAA,SAAA2oC,GACA,IAAAxwC,EAAA0yC,EAAAlC,GAAA,GAAA42B,GAEA,OADApnE,EAAAmV,SAAA,WAA+B,OAAAq7B,GAC/BxwC,GAEAorB,MAAA,SAAAolB,GACA,IAAA55C,EAAA20E,EAAA/6B,GAAA,GAAA40B,IAEA,OADAxuE,EAAAue,SAAA,WAA+B,OAAAq7B,GAC/B55C,GAEAg1E,UAAA,SAAAp7B,GACA,IAAAxwC,EAAA0yC,EAAAlC,GAAA,GAAAq4B,GAEA,OADA7oE,EAAAmV,SAAA,WAA+B,OAAAq7B,GAC/BxwC,GAEA6rE,SAAA,SAAAr7B,GACA,IAAA55C,EAAA20E,EAAA/6B,EAAAg1B,IAEA,OADA5uE,EAAAue,SAAA,WAA+B,OAAAq7B,GAC/B55C,IAKA,ICzWAk1E,GACAC,GACAC,GACAJ,GACAC,GDqWAR,IAAYY,IAAA,GAAAznE,EAAA,IAAA0nE,EAAA,KACZC,GAAA,UACAC,GAAA,KACAC,GAAA,sBAEA,SAAAjB,GAAAr1E,EAAAqG,EAAApF,GACA,IAAA25C,EAAA56C,EAAA,SACA0Y,GAAAkiC,GAAA56C,KAAA,GACA2G,EAAA+R,EAAA/R,OACA,OAAAi0C,GAAAj0C,EAAA1F,EAAA,IAAAsC,MAAAtC,EAAA0F,EAAA,GAAA0S,KAAAhT,GAAAqS,KAGA,SAAA69D,GAAAz1E,GACA,OAAAA,EAAAuwC,QAAAilC,GAAA,QAGA,SAAA5F,GAAA13D,GACA,WAAAoL,OAAA,OAAApL,EAAAjW,IAAAwzE,IAAAl9D,KAAA,cAGA,SAAAu3D,GAAA53D,GAEA,IADA,IAAAjW,KAAchE,GAAA,EAAAyB,EAAAwY,EAAArS,SACd5H,EAAAyB,GAAAuC,EAAAiW,EAAAja,GAAAivB,eAAAjvB,EACA,OAAAgE,EAGA,SAAAgyE,GAAA11E,EAAAqZ,EAAA3Z,GACA,IAAAyB,EAAA41E,GAAAnoD,KAAAvV,EAAAtM,MAAArN,IAAA,IACA,OAAAyB,GAAAnB,EAAA2jC,GAAAxiC,EAAA,GAAAzB,EAAAyB,EAAA,GAAAmG,SAAA,EAGA,SAAAiuE,GAAAv1E,EAAAqZ,EAAA3Z,GACA,IAAAyB,EAAA41E,GAAAnoD,KAAAvV,EAAAtM,MAAArN,IAAA,IACA,OAAAyB,GAAAnB,EAAAi4B,GAAA92B,EAAA,GAAAzB,EAAAyB,EAAA,GAAAmG,SAAA,EAGA,SAAAkuE,GAAAx1E,EAAAqZ,EAAA3Z,GACA,IAAAyB,EAAA41E,GAAAnoD,KAAAvV,EAAAtM,MAAArN,IAAA,IACA,OAAAyB,GAAAnB,EAAA8yE,GAAA3xE,EAAA,GAAAzB,EAAAyB,EAAA,GAAAmG,SAAA,EAGA,SAAAmuE,GAAAz1E,EAAAqZ,EAAA3Z,GACA,IAAAyB,EAAA41E,GAAAnoD,KAAAvV,EAAAtM,MAAArN,IAAA,IACA,OAAAyB,GAAAnB,EAAAgzE,GAAA7xE,EAAA,GAAAzB,EAAAyB,EAAA,GAAAmG,SAAA,EAGA,SAAAquE,GAAA31E,EAAAqZ,EAAA3Z,GACA,IAAAyB,EAAA41E,GAAAnoD,KAAAvV,EAAAtM,MAAArN,IAAA,IACA,OAAAyB,GAAAnB,EAAAkmC,GAAA/kC,EAAA,GAAAzB,EAAAyB,EAAA,GAAAmG,SAAA,EAGA,SAAAuuE,GAAA71E,EAAAqZ,EAAA3Z,GACA,IAAAyB,EAAA41E,GAAAnoD,KAAAvV,EAAAtM,MAAArN,IAAA,IACA,OAAAyB,GAAAnB,EAAA6E,GAAA1D,EAAA,GAAAzB,EAAAyB,EAAA,GAAAmG,SAAA,EAGA,SAAAsuE,GAAA51E,EAAAqZ,EAAA3Z,GACA,IAAAyB,EAAA41E,GAAAnoD,KAAAvV,EAAAtM,MAAArN,IAAA,IACA,OAAAyB,GAAAnB,EAAA6E,GAAA1D,EAAA,KAAAA,EAAA,gBAAAzB,EAAAyB,EAAA,GAAAmG,SAAA,EAGA,SAAAwuE,GAAA91E,EAAAqZ,EAAA3Z,GACA,IAAAyB,EAAA,+BAAAytB,KAAAvV,EAAAtM,MAAArN,IAAA,IACA,OAAAyB,GAAAnB,EAAAszE,EAAAnyE,EAAA,OAAAA,EAAA,IAAAA,EAAA,WAAAzB,EAAAyB,EAAA,GAAAmG,SAAA,EAGA,SAAA4tE,GAAAl1E,EAAAqZ,EAAA3Z,GACA,IAAAyB,EAAA41E,GAAAnoD,KAAAvV,EAAAtM,MAAArN,IAAA,IACA,OAAAyB,GAAAnB,EAAAF,EAAAqB,EAAA,KAAAzB,EAAAyB,EAAA,GAAAmG,SAAA,EAGA,SAAAutE,GAAA70E,EAAAqZ,EAAA3Z,GACA,IAAAyB,EAAA41E,GAAAnoD,KAAAvV,EAAAtM,MAAArN,IAAA,IACA,OAAAyB,GAAAnB,KAAAmB,EAAA,GAAAzB,EAAAyB,EAAA,GAAAmG,SAAA,EAGA,SAAA0tE,GAAAh1E,EAAAqZ,EAAA3Z,GACA,IAAAyB,EAAA41E,GAAAnoD,KAAAvV,EAAAtM,MAAArN,IAAA,IACA,OAAAyB,GAAAnB,EAAAF,EAAA,EAAAE,KAAAmB,EAAA,GAAAzB,EAAAyB,EAAA,GAAAmG,SAAA,EAGA,SAAAytE,GAAA/0E,EAAAqZ,EAAA3Z,GACA,IAAAyB,EAAA41E,GAAAnoD,KAAAvV,EAAAtM,MAAArN,IAAA,IACA,OAAAyB,GAAAnB,EAAAiwE,GAAA9uE,EAAA,GAAAzB,EAAAyB,EAAA,GAAAmG,SAAA,EAGA,SAAA6tE,GAAAn1E,EAAAqZ,EAAA3Z,GACA,IAAAyB,EAAA41E,GAAAnoD,KAAAvV,EAAAtM,MAAArN,IAAA,IACA,OAAAyB,GAAAnB,EAAAkwE,GAAA/uE,EAAA,GAAAzB,EAAAyB,EAAA,GAAAmG,SAAA,EAGA,SAAAguE,GAAAt1E,EAAAqZ,EAAA3Z,GACA,IAAAyB,EAAA41E,GAAAnoD,KAAAvV,EAAAtM,MAAArN,IAAA,IACA,OAAAyB,GAAAnB,EAAAm3B,GAAAh2B,EAAA,GAAAzB,EAAAyB,EAAA,GAAAmG,SAAA,EAGA,SAAA2tE,GAAAj1E,EAAAqZ,EAAA3Z,GACA,IAAAyB,EAAA41E,GAAAnoD,KAAAvV,EAAAtM,MAAArN,IAAA,IACA,OAAAyB,GAAAnB,EAAAmwE,GAAAhvE,EAAA,GAAAzB,EAAAyB,EAAA,GAAAmG,SAAA,EAGA,SAAAwtE,GAAA90E,EAAAqZ,EAAA3Z,GACA,IAAAyB,EAAA41E,GAAAnoD,KAAAvV,EAAAtM,MAAArN,IAAA,IACA,OAAAyB,GAAAnB,EAAAmwE,EAAAtmE,KAAAkE,MAAA5M,EAAA,QAAAzB,EAAAyB,EAAA,GAAAmG,SAAA,EAGA,SAAAyuE,GAAA/1E,EAAAqZ,EAAA3Z,GACA,IAAAyB,EAAA61E,GAAApoD,KAAAvV,EAAAtM,MAAArN,IAAA,IACA,OAAAyB,EAAAzB,EAAAyB,EAAA,GAAAmG,QAAA,EAGA,SAAA8tE,GAAAp1E,EAAAqZ,EAAA3Z,GACA,IAAAyB,EAAA41E,GAAAnoD,KAAAvV,EAAAtM,MAAArN,IACA,OAAAyB,GAAAnB,EAAAyyE,GAAAtxE,EAAA,GAAAzB,EAAAyB,EAAA,GAAAmG,SAAA,EAGA,SAAA+tE,GAAAr1E,EAAAqZ,EAAA3Z,GACA,IAAAyB,EAAA41E,GAAAnoD,KAAAvV,EAAAtM,MAAArN,IACA,OAAAyB,GAAAnB,EAAAyyE,EAAA,KAAAtxE,EAAA,GAAAzB,EAAAyB,EAAA,GAAAmG,SAAA,EAGA,SAAA2qE,GAAAjyE,EAAAwB,GACA,OAAAw0E,GAAAh2E,EAAA0rE,UAAAlqE,EAAA,GAGA,SAAA2wE,GAAAnyE,EAAAwB,GACA,OAAAw0E,GAAAh2E,EAAAorE,WAAA5pE,EAAA,GAGA,SAAA4wE,GAAApyE,EAAAwB,GACA,OAAAw0E,GAAAh2E,EAAAorE,WAAA,OAAA5pE,EAAA,GAGA,SAAA6wE,GAAAryE,EAAAwB,GACA,OAAAw0E,GAAA,EAAArK,GAAAh+D,MAAA0/D,GAAArtE,MAAAwB,EAAA,GAGA,SAAA8wE,GAAAtyE,EAAAwB,GACA,OAAAw0E,GAAAh2E,EAAAm3E,kBAAA31E,EAAA,GAGA,SAAA0wE,GAAAlyE,EAAAwB,GACA,OAAA8wE,GAAAtyE,EAAAwB,GAAA,MAGA,SAAA+wE,GAAAvyE,EAAAwB,GACA,OAAAw0E,GAAAh2E,EAAA+sE,WAAA,EAAAvrE,EAAA,GAGA,SAAAgxE,GAAAxyE,EAAAwB,GACA,OAAAw0E,GAAAh2E,EAAAgrE,aAAAxpE,EAAA,GAGA,SAAAoxE,GAAA5yE,EAAAwB,GACA,OAAAw0E,GAAAh2E,EAAAo3E,aAAA51E,EAAA,GAGA,SAAAqxE,GAAA7yE,GACA,IAAAs2E,EAAAt2E,EAAA8rE,SACA,WAAAwK,EAAA,EAAAA,EAGA,SAAAvD,GAAA/yE,EAAAwB,GACA,OAAAw0E,GAAAjK,GAAAp+D,MAAA0/D,GAAArtE,MAAAwB,EAAA,GAGA,SAAAyxE,GAAAjzE,EAAAwB,GACA,IAAA80E,EAAAt2E,EAAA8rE,SAEA,OADA9rE,EAAAs2E,GAAA,OAAAA,EAAAnK,GAAAnsE,GAAAmsE,GAAA7+D,KAAAtN,GACAg2E,GAAA7J,GAAAx+D,MAAA0/D,GAAArtE,OAAA,IAAAqtE,GAAArtE,GAAA8rE,UAAAtqE,EAAA,GAGA,SAAA0xE,GAAAlzE,GACA,OAAAA,EAAA8rE,SAGA,SAAAqH,GAAAnzE,EAAAwB,GACA,OAAAw0E,GAAAhK,GAAAr+D,MAAA0/D,GAAArtE,MAAAwB,EAAA,GAGA,SAAA4xE,GAAApzE,EAAAwB,GACA,OAAAw0E,GAAAh2E,EAAAgtE,cAAA,IAAAxrE,EAAA,GAGA,SAAA6xE,GAAArzE,EAAAwB,GACA,OAAAw0E,GAAAh2E,EAAAgtE,cAAA,IAAAxrE,EAAA,GAGA,SAAA+xE,GAAAvzE,GACA,IAAAgxB,EAAAhxB,EAAAmrE,oBACA,OAAAn6C,EAAA,OAAAA,IAAA,QACAglD,GAAAhlD,EAAA,YACAglD,GAAAhlD,EAAA,UAGA,SAAA0iD,GAAA1zE,EAAAwB,GACA,OAAAw0E,GAAAh2E,EAAAouE,aAAA5sE,EAAA,GAGA,SAAAoyE,GAAA5zE,EAAAwB,GACA,OAAAw0E,GAAAh2E,EAAA8tE,cAAAtsE,EAAA,GAGA,SAAAqyE,GAAA7zE,EAAAwB,GACA,OAAAw0E,GAAAh2E,EAAA8tE,cAAA,OAAAtsE,EAAA,GAGA,SAAAsyE,GAAA9zE,EAAAwB,GACA,OAAAw0E,GAAA,EAAAO,GAAA5oE,MAAAmiE,GAAA9vE,MAAAwB,EAAA,GAGA,SAAAuyE,GAAA/zE,EAAAwB,GACA,OAAAw0E,GAAAh2E,EAAAq3E,qBAAA71E,EAAA,GAGA,SAAAmyE,GAAA3zE,EAAAwB,GACA,OAAAuyE,GAAA/zE,EAAAwB,GAAA,MAGA,SAAAwyE,GAAAh0E,EAAAwB,GACA,OAAAw0E,GAAAh2E,EAAAwvE,cAAA,EAAAhuE,EAAA,GAGA,SAAAyyE,GAAAj0E,EAAAwB,GACA,OAAAw0E,GAAAh2E,EAAAytE,gBAAAjsE,EAAA,GAGA,SAAA0yE,GAAAl0E,EAAAwB,GACA,OAAAw0E,GAAAh2E,EAAA6qE,gBAAArpE,EAAA,GAGA,SAAA2yE,GAAAn0E,GACA,IAAAs3E,EAAAt3E,EAAAuuE,YACA,WAAA+I,EAAA,EAAAA,EAGA,SAAAlD,GAAAp0E,EAAAwB,GACA,OAAAw0E,GAAAxH,GAAA7gE,MAAAmiE,GAAA9vE,MAAAwB,EAAA,GAGA,SAAA6yE,GAAAr0E,EAAAwB,GACA,IAAA80E,EAAAt2E,EAAAuuE,YAEA,OADAvuE,EAAAs2E,GAAA,OAAAA,EAAA1H,GAAA5uE,GAAA4uE,GAAAthE,KAAAtN,GACAg2E,GAAApH,GAAAjhE,MAAAmiE,GAAA9vE,OAAA,IAAA8vE,GAAA9vE,GAAAuuE,aAAA/sE,EAAA,GAGA,SAAA8yE,GAAAt0E,GACA,OAAAA,EAAAuuE,YAGA,SAAAgG,GAAAv0E,EAAAwB,GACA,OAAAw0E,GAAAvH,GAAA9gE,MAAAmiE,GAAA9vE,MAAAwB,EAAA,GAGA,SAAAgzE,GAAAx0E,EAAAwB,GACA,OAAAw0E,GAAAh2E,EAAAyvE,iBAAA,IAAAjuE,EAAA,GAGA,SAAAizE,GAAAz0E,EAAAwB,GACA,OAAAw0E,GAAAh2E,EAAAyvE,iBAAA,IAAAjuE,EAAA,GAGA,SAAAkzE,KACA,cAGA,SAAAlB,KACA,UAGA,SAAAd,GAAA1yE,GACA,OAAAA,EAGA,SAAA2yE,GAAA3yE,GACA,OAAA6J,KAAAkE,OAAA/N,EAAA,KC3mBA,SAAAu3E,GAAAhzD,GAMA,OALAmyD,GAAAnG,GAAAhsD,GACAoyD,GAAAD,GAAAjkE,OACAmkE,GAAAF,GAAA1gD,MACAwgD,GAAAE,GAAAF,UACAC,GAAAC,GAAAD,SACAC,GAjBAa,IACA9G,SAAA,SACAnG,KAAA,aACA3vC,KAAA,eACAk2C,SAAA,WACAjF,MAAA,wEACAoF,WAAA,2CACA9D,QAAA,+GACAiE,aAAA,2ECRA,IAIAqG,GAJA3zE,KAAAvC,UAAAm2E,YAJA,SAAAnN,GACA,OAAAA,EAAAmN,eAKAjB,GARA,yBCMA,IAIAkB,IAJA,IAAA7zE,KAAA,4BALA,SAAAwV,GACA,IAAAixD,EAAA,IAAAzmE,KAAAwV,GACA,OAAA3M,MAAA49D,GAAA,KAAAA,GAKAmM,GDRA,yBEMAkB,GAAA,IACAC,GAAA,GAAAD,GACAE,GAAA,GAAAD,GACAE,GAAA,GAAAD,GACAE,GAAA,EAAAD,GACAE,GAAA,GAAAF,GACAG,GAAA,IAAAH,GAEA,SAAAI,GAAAt3E,GACA,WAAAiD,KAAAjD,GAGA,SAAAu3E,GAAAv3E,GACA,OAAAA,aAAAiD,MAAAjD,GAAA,IAAAiD,MAAAjD,GAGA,SAAAw3E,GAAAC,EAAAC,EAAAjC,EAAAC,EAAAiC,EAAAC,EAAAC,EAAAC,EAAAjmE,GACA,IAAAX,EAAAo2D,GAAAP,GAAAxzC,IACAvuB,EAAAkM,EAAAlM,OACAa,EAAAqL,EAAArL,OAEAkyE,EAAAlmE,EAAA,OACAmmE,EAAAnmE,EAAA,OACAomE,EAAApmE,EAAA,SACAqmE,EAAArmE,EAAA,SACAsmE,EAAAtmE,EAAA,SACAumE,EAAAvmE,EAAA,SACAwmE,EAAAxmE,EAAA,MACAymE,EAAAzmE,EAAA,MAEA0mE,IACAV,EAAA,EAAAd,KACAc,EAAA,IAAAd,KACAc,EAAA,MAAAd,KACAc,EAAA,MAAAd,KACAa,EAAA,EAAAZ,KACAY,EAAA,IAAAZ,KACAY,EAAA,MAAAZ,KACAY,EAAA,MAAAZ,KACAW,EAAA,EAAAV,KACAU,EAAA,IAAAV,KACAU,EAAA,IAAAV,KACAU,EAAA,MAAAV,KACAvB,EAAA,EAAAwB,KACAxB,EAAA,IAAAwB,KACAzB,EAAA,EAAA0B,KACAO,EAAA,EAAAN,KACAM,EAAA,IAAAN,KACAK,EAAA,EAAAJ,KAGA,SAAAhmE,EAAAq4D,GACA,OAAAmO,EAAAnO,KAAAqO,EACAH,EAAAlO,KAAAsO,EACAL,EAAAjO,KAAAuO,EACAvC,EAAAhM,KAAAwO,EACAR,EAAAhO,KAAA+L,EAAA/L,KAAAyO,EAAAC,EACAX,EAAA/N,KAAA2O,EACAC,GAAA5O,GAGA,SAAA8O,EAAAzQ,EAAAx7D,EAAAC,EAAAC,GAMA,GALA,MAAAs7D,MAAA,IAKA,iBAAAA,EAAA,CACA,IAAApjE,EAAAsE,KAAAyE,IAAAlB,EAAAD,GAAAw7D,EACAjpE,EAAAgL,EAAA,SAAAhL,GAAoC,OAAAA,EAAA,KAAewL,MAAAiuE,EAAA5zE,GACnD7F,IAAAy5E,EAAA7xE,QACA+F,EAAAe,EAAAjB,EAAA8qE,GAAA7qE,EAAA6qE,GAAAtP,GACAA,EAAA0P,GACO34E,GAEP2N,GADA3N,EAAAy5E,EAAA5zE,EAAA4zE,EAAAz5E,EAAA,MAAAy5E,EAAAz5E,GAAA,GAAA6F,EAAA7F,EAAA,EAAAA,IACA,GACAipE,EAAAjpE,EAAA,KAEA2N,EAAAxD,KAAAlD,IAAAyH,EAAAjB,EAAAC,EAAAu7D,GAAA,GACAA,EAAA+P,GAIA,aAAArrE,EAAAs7D,IAAAlqC,MAAApxB,GAsCA,OAnCAyE,EAAAlM,OAAA,SAAAf,GACA,WAAAhB,KAAA+B,EAAAf,KAGAiN,EAAArL,OAAA,SAAA2I,GACA,OAAA/H,UAAAC,OAAAb,EAAAogE,GAAAhnE,KAAAuP,EAAA+oE,KAAA1xE,IAAA/C,IAAAw0E,KAGApmE,EAAApE,MAAA,SAAAi7D,EAAAt7D,GACA,IAIAzM,EAJAZ,EAAAyG,IACAs0B,EAAA/6B,EAAA,GACAqyB,EAAAryB,IAAAsH,OAAA,GACA9G,EAAA6xB,EAAA0I,EAKA,OAHAv6B,IAAAI,EAAAm6B,IAAA1I,IAAAzxB,GAEAA,GADAA,EAAAw4E,EAAAzQ,EAAA5tC,EAAA1I,EAAAhlB,IACAzM,EAAAgG,MAAAm0B,EAAA1I,EAAA,MACA7xB,EAAAI,EAAAgN,UAAAhN,GAGAkR,EAAAG,WAAA,SAAAtE,EAAAytC,GACA,aAAAA,EAAAnpC,EAAAQ,EAAA2oC,IAGAtpC,EAAA02D,KAAA,SAAAG,EAAAt7D,GACA,IAAArN,EAAAyG,IACA,OAAAkiE,EAAAyQ,EAAAzQ,EAAA3oE,EAAA,GAAAA,IAAAsH,OAAA,GAAA+F,IACA5G,EAAA+hE,GAAAxoE,EAAA2oE,IACA72D,GAGAA,EAAAmB,KAAA,WACA,OAAAA,GAAAnB,EAAAsmE,GAAAC,EAAAC,EAAAjC,EAAAC,EAAAiC,EAAAC,EAAAC,EAAAC,EAAAjmE,KAGAX,EAGA,IAAAunE,GAAA,WACA,OAAAjB,GAAA/K,GAAAJ,GAAAlB,GAAAJ,GAAAN,GAAAiO,GAAAC,GAAA/O,GAAAmM,IAAAlwE,QAAA,IAAA5C,KAAA,aAAAA,KAAA,YCjIA21E,GAAA,WACA,OAAApB,GAAAtI,GAAAJ,GAAAlB,GAAA+H,GAAAxI,GAAAL,GAAA6L,GAAA/O,GAAAgM,IAAA/vE,QAAA5C,KAAAwsE,IAAA,SAAAxsE,KAAAwsE,IAAA,YCHA,SAAAoJ,GAAAjgD,GACA,IAAA1qB,EAAA,EACA3F,EAAA,EACAuwE,EAAA,EACAzR,GAAA,EAEA,SAAAn2D,EAAAlN,GACA,IAAAhE,GAAAgE,EAAAkK,GAAA4qE,EACA,OAAAlgD,EAAAyuC,EAAAp+D,KAAAlD,IAAA,EAAAkD,KAAAnD,IAAA,EAAA9F,OAmBA,OAhBAkR,EAAArL,OAAA,SAAA2I,GACA,OAAA/H,UAAAC,QAAAwH,GAAAM,EAAA,GAAAjG,GAAAiG,EAAA,GAAAsqE,EAAA5qE,IAAA3F,EAAA,KAAAA,EAAA2F,GAAAgD,IAAAhD,EAAA3F,IAGA2I,EAAAm2D,MAAA,SAAA74D,GACA,OAAA/H,UAAAC,QAAA2gE,IAAA74D,EAAA0C,GAAAm2D,GAGAn2D,EAAA0nB,aAAA,SAAApqB,GACA,OAAA/H,UAAAC,QAAAkyB,EAAApqB,EAAA0C,GAAA0nB,GAGA1nB,EAAAmB,KAAA,WACA,OAAAwmE,GAAAjgD,GAAA/yB,QAAAqI,EAAA3F,IAAA8+D,UAGAM,GAAAz2D,GC3BA,SAAA6nE,GAAAngD,GACA,IAAA1qB,EAAA,EACA3F,EAAA,GACAC,EAAA,EACAswE,EAAA,EACAE,EAAA,EACA3R,GAAA,EAEA,SAAAn2D,EAAAlN,GACA,IAAAhE,EAAA,KAAAgE,MAAAuE,IAAAvE,EAAAuE,EAAAuwE,EAAAE,GACA,OAAApgD,EAAAyuC,EAAAp+D,KAAAlD,IAAA,EAAAkD,KAAAnD,IAAA,EAAA9F,OAmBA,OAhBAkR,EAAArL,OAAA,SAAA2I,GACA,OAAA/H,UAAAC,QAAAwH,GAAAM,EAAA,GAAAjG,GAAAiG,EAAA,GAAAhG,GAAAgG,EAAA,GAAAsqE,EAAA5qE,IAAA3F,EAAA,MAAAA,EAAA2F,GAAA8qE,EAAAzwE,IAAAC,EAAA,MAAAA,EAAAD,GAAA2I,IAAAhD,EAAA3F,EAAAC,IAGA0I,EAAAm2D,MAAA,SAAA74D,GACA,OAAA/H,UAAAC,QAAA2gE,IAAA74D,EAAA0C,GAAAm2D,GAGAn2D,EAAA0nB,aAAA,SAAApqB,GACA,OAAA/H,UAAAC,QAAAkyB,EAAApqB,EAAA0C,GAAA0nB,GAGA1nB,EAAAmB,KAAA,WACA,OAAA0mE,GAAAngD,GAAA/yB,QAAAqI,EAAA3F,EAAAC,IAAA6+D,UAGAM,GAAAz2D,GC/BA,IAAA+nE,GAAA,SAAAz+B,GAEA,IADA,IAAAj6C,EAAAi6C,EAAA9zC,OAAA,IAAAosB,EAAA,IAAAxvB,MAAA/C,GAAAzB,EAAA,EACAA,EAAAyB,GAAAuyB,EAAAh0B,GAAA,IAAA07C,EAAAruC,MAAA,EAAArN,EAAA,IAAAA,GACA,OAAAg0B,GCDAomD,GAAAD,GAAA,gECAAE,GAAAF,GAAA,oDCAAG,GAAAH,GAAA,oDCAAI,GAAAJ,GAAA,4ECAAK,GAAAL,GAAA,0DCAAM,GAAAN,GAAA,oDCAAO,GAAAP,GAAA,0DCAAQ,GAAAR,GAAA,oDCAAS,GAAAT,GAAA,4ECAAU,GAAA,SAAAC,GACA,OAAA7mD,GAAA6mD,IAAAlzE,OAAA,KCAAmzE,GAAA,IAAAv2E,MAAA,GAAAiB,OACA,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,yDACA,+DACA,sEACAzB,IAAAm2E,IAEAa,GAAAH,GAAAE,ICZAE,GAAA,IAAAz2E,MAAA,GAAAiB,OACA,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,yDACA,+DACA,sEACAzB,IAAAm2E,IAEAe,GAAAL,GAAAI,ICZAE,GAAA,IAAA32E,MAAA,GAAAiB,OACA,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,yDACA,+DACA,sEACAzB,IAAAm2E,IAEAiB,GAAAP,GAAAM,ICZAE,GAAA,IAAA72E,MAAA,GAAAiB,OACA,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,yDACA,+DACA,sEACAzB,IAAAm2E,IAEAmB,GAAAT,GAAAQ,ICZAE,GAAA,IAAA/2E,MAAA,GAAAiB,OACA,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,yDACA,+DACA,sEACAzB,IAAAm2E,IAEAqB,GAAAX,GAAAU,ICZAE,GAAA,IAAAj3E,MAAA,GAAAiB,OACA,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,yDACA,+DACA,sEACAzB,IAAAm2E,IAEAuB,GAAAb,GAAAY,ICZAE,GAAA,IAAAn3E,MAAA,GAAAiB,OACA,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,yDACA,+DACA,sEACAzB,IAAAm2E,IAEAyB,GAAAf,GAAAc,ICZAE,GAAA,IAAAr3E,MAAA,GAAAiB,OACA,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,yDACA,+DACA,sEACAzB,IAAAm2E,IAEA2B,GAAAjB,GAAAgB,ICZAE,GAAA,IAAAv3E,MAAA,GAAAiB,OACA,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,yDACA,+DACA,sEACAzB,IAAAm2E,IAEA6B,GAAAnB,GAAAkB,ICZAE,GAAA,IAAAz3E,MAAA,GAAAiB,OACA,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACAzB,IAAAm2E,IAEA+B,GAAArB,GAAAoB,ICVAE,GAAA,IAAA33E,MAAA,GAAAiB,OACA,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACAzB,IAAAm2E,IAEAiC,GAAAvB,GAAAsB,ICVAE,GAAA,IAAA73E,MAAA,GAAAiB,OACA,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACAzB,IAAAm2E,IAEAmC,GAAAzB,GAAAwB,ICVAE,GAAA,IAAA/3E,MAAA,GAAAiB,OACA,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACAzB,IAAAm2E,IAEAqC,GAAA3B,GAAA0B,ICVAE,GAAA,IAAAj4E,MAAA,GAAAiB,OACA,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACAzB,IAAAm2E,IAEAuC,GAAA7B,GAAA4B,ICVAE,GAAA,IAAAn4E,MAAA,GAAAiB,OACA,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACAzB,IAAAm2E,IAEAyC,GAAA/B,GAAA8B,ICVAE,GAAA,IAAAr4E,MAAA,GAAAiB,OACA,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACAzB,IAAAm2E,IAEA2C,GAAAjC,GAAAgC,ICVAE,GAAA,IAAAv4E,MAAA,GAAAiB,OACA,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACAzB,IAAAm2E,IAEA6C,GAAAnC,GAAAkC,ICVAE,GAAA,IAAAz4E,MAAA,GAAAiB,OACA,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACAzB,IAAAm2E,IAEA+C,GAAArC,GAAAoC,ICVAE,GAAA,IAAA34E,MAAA,GAAAiB,OACA,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACAzB,IAAAm2E,IAEAiD,GAAAvC,GAAAsC,ICVAE,GAAA,IAAA74E,MAAA,GAAAiB,OACA,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACAzB,IAAAm2E,IAEAmD,GAAAzC,GAAAwC,ICVAE,GAAA,IAAA/4E,MAAA,GAAAiB,OACA,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACAzB,IAAAm2E,IAEAqD,GAAA3C,GAAA0C,ICVAE,GAAA,IAAAj5E,MAAA,GAAAiB,OACA,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACAzB,IAAAm2E,IAEAuD,GAAA7C,GAAA4C,ICVAE,GAAA,IAAAn5E,MAAA,GAAAiB,OACA,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACAzB,IAAAm2E,IAEAyD,GAAA/C,GAAA8C,ICVAE,GAAA,IAAAr5E,MAAA,GAAAiB,OACA,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACAzB,IAAAm2E,IAEA2D,GAAAjD,GAAAgD,ICVAE,GAAA,IAAAv5E,MAAA,GAAAiB,OACA,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACAzB,IAAAm2E,IAEA6D,GAAAnD,GAAAkD,ICVAE,GAAA,IAAAz5E,MAAA,GAAAiB,OACA,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACAzB,IAAAm2E,IAEA+D,GAAArD,GAAAoD,ICVAE,GAAA,IAAA35E,MAAA,GAAAiB,OACA,qBACA,2BACA,iCACA,uCACA,6CACA,mDACA,0DACAzB,IAAAm2E,IAEAiE,GAAAvD,GAAAsD,ICVAE,GAAA9kD,GAAAjH,GAAA,UAAAA,IAAA,WCAAgsD,GAAA/kD,GAAAjH,IAAA,aAAAA,GAAA,YAEAisD,GAAAhlD,GAAAjH,GAAA,aAAAA,GAAA,YAEAksD,GAAAlsD,KAEAmsD,GAAA,SAAAv9E,IACAA,EAAA,GAAAA,EAAA,KAAAA,GAAAiJ,KAAAkE,MAAAnN,IACA,IAAAw9E,EAAAv0E,KAAAyE,IAAA1N,EAAA,IAIA,OAHAs9E,GAAA1uD,EAAA,IAAA5uB,EAAA,IACAs9E,GAAAz8E,EAAA,QAAA28E,EACAF,GAAAv+E,EAAA,MAAAy+E,EACAF,GAAA,ICbAG,GAAA/uD,KACAgvD,GAAAz0E,KAAAqmB,GAAA,EACAquD,GAAA,EAAA10E,KAAAqmB,GAAA,EAEAsuD,GAAA,SAAA59E,GACA,IAAAgE,EAKA,OAJAhE,GAAA,GAAAA,GAAAiJ,KAAAqmB,GACAmuD,GAAA79E,EAAA,KAAAoE,EAAAiF,KAAAknB,IAAAnwB,IAAAgE,EACAy5E,GAAAnvD,EAAA,KAAAtqB,EAAAiF,KAAAknB,IAAAnwB,EAAA09E,KAAA15E,EACAy5E,GAAAz0E,EAAA,KAAAhF,EAAAiF,KAAAknB,IAAAnwB,EAAA29E,KAAA35E,EACAy5E,GAAA,ICVA,SAAAI,GAAA73E,GACA,IAAAzF,EAAAyF,EAAAU,OACA,gBAAA1G,GACA,OAAAgG,EAAAiD,KAAAlD,IAAA,EAAAkD,KAAAnD,IAAAvF,EAAA,EAAA0I,KAAAkE,MAAAnN,EAAAO,cAIAs9E,GAAA5E,GAAA,qgDAEA6E,GAAAD,GAAA5E,GAAA,qgDAEA8E,GAAAF,GAAA5E,GAAA,qgDAEA+E,GAAAH,GAAA5E,GAAA,qgDCfAgF,GAAA,SAAAj6E,GACA,kBACA,OAAAA,ICFAk6E,GAAAj1E,KAAAyE,IACAywE,GAAAl1E,KAAA0nB,MACAytD,GAAAn1E,KAAAinB,IACAmuD,GAAAp1E,KAAAlD,IACAu4E,GAAAr1E,KAAAnD,IACAy4E,GAAAt1E,KAAAknB,IACAquD,GAAAv1E,KAAAC,KAEAu1E,GAAA,MACAC,GAAAz1E,KAAAqmB,GACAqvD,GAAAD,GAAA,EACAE,GAAA,EAAAF,GAMA,SAAAG,GAAA76E,GACA,OAAAA,GAAA,EAAA26E,GAAA36E,IAAA,GAAA26E,GAAA11E,KAAAm4B,KAAAp9B,GCdA,SAAA86E,GAAA1/E,GACA,OAAAA,EAAA2/E,YAGA,SAAAC,GAAA5/E,GACA,OAAAA,EAAA6/E,YAGA,SAAAC,GAAA9/E,GACA,OAAAA,EAAAooC,WAGA,SAAA23C,GAAA//E,GACA,OAAAA,EAAAqoC,SAGA,SAAA23C,GAAAhgF,GACA,OAAAA,KAAAsnC,SAYA,SAAA24C,GAAAnxE,EAAA06B,EAAArgC,EAAAE,EAAA0uB,EAAAmoD,EAAAz1C,GACA,IAAAd,EAAA76B,EAAA3F,EACAygC,EAAAJ,EAAAngC,EACA0B,GAAA0/B,EAAAy1C,MAAAd,GAAAz1C,IAAAC,KACAu2C,EAAAp1E,EAAA6+B,EACAw2C,GAAAr1E,EAAA4+B,EACA02C,EAAAvxE,EAAAqxE,EACAG,EAAA92C,EAAA42C,EACAG,EAAAp3E,EAAAg3E,EACAK,EAAAn3E,EAAA+2E,EACA9pB,GAAA+pB,EAAAE,GAAA,EACAhqB,GAAA+pB,EAAAE,GAAA,EACAh+D,EAAA+9D,EAAAF,EACA59D,EAAA+9D,EAAAF,EACA5oD,EAAAlV,IAAAC,IACAjiB,EAAAu3B,EAAAmoD,EACAO,EAAAJ,EAAAG,EAAAD,EAAAD,EACAtgF,GAAAyiB,EAAA,QAAA28D,GAAAH,GAAA,EAAAz+E,IAAAk3B,EAAA+oD,MACAC,GAAAD,EAAAh+D,EAAAD,EAAAxiB,GAAA03B,EACAi5B,IAAA8vB,EAAAj+D,EAAAC,EAAAziB,GAAA03B,EACAipD,GAAAF,EAAAh+D,EAAAD,EAAAxiB,GAAA03B,EACAk5B,IAAA6vB,EAAAj+D,EAAAC,EAAAziB,GAAA03B,EACAkpD,EAAAF,EAAApqB,EACAuqB,EAAAlwB,EAAA4F,EACAuqB,EAAAH,EAAArqB,EACAyqB,EAAAnwB,EAAA2F,EAMA,OAFAqqB,IAAAC,IAAAC,IAAAC,MAAAL,EAAAC,EAAAhwB,EAAAC,IAGA1pD,GAAAw5E,EACAv5E,GAAAwpD,EACAhnB,KAAAw2C,EACAv2C,KAAAw2C,EACAC,IAAAK,GAAA3oD,EAAAv3B,EAAA,GACA8/E,IAAA3vB,GAAA54B,EAAAv3B,EAAA,IAIA,IAAAwgF,GAAA,WACA,IAAArB,EAAAD,GACAG,EAAAD,GACAqB,EAAApC,GAAA,GACAqC,EAAA,KACA94C,EAAA03C,GACAz3C,EAAA03C,GACAz4C,EAAA04C,GACAztE,EAAA,KAEA,SAAAg4B,IACA,IAAAY,EACA3qC,EACAs3B,GAAA6nD,EAAAntE,MAAArP,KAAAkE,WACA0wB,GAAA8nD,EAAArtE,MAAArP,KAAAkE,WACA4gC,EAAAG,EAAA51B,MAAArP,KAAAkE,WAAAk4E,GACAr3C,EAAAG,EAAA71B,MAAArP,KAAAkE,WAAAk4E,GACA70C,EAAAo0C,GAAA52C,EAAAD,GACAwC,EAAAvC,EAAAD,EAQA,GANA11B,MAAA44B,EAAAR,MAGA5S,EAAAD,IAAAt3B,EAAAu3B,IAAAD,IAAAt3B,GAGAu3B,EAAAsnD,GAGA,GAAA30C,EAAA80C,GAAAH,GACA9sE,EAAA22B,OAAAnR,EAAAinD,GAAA/2C,GAAAlQ,EAAAonD,GAAAl3C,IACA11B,EAAAg4B,IAAA,IAAAxS,EAAAkQ,EAAAC,GAAAuC,GACA3S,EAAAunD,KACA9sE,EAAA22B,OAAApR,EAAAknD,GAAA92C,GAAApQ,EAAAqnD,GAAAj3C,IACA31B,EAAAg4B,IAAA,IAAAzS,EAAAoQ,EAAAD,EAAAwC,QAKA,CACA,IAWA1P,EACA1I,EAZA8uD,EAAAl5C,EACAm5C,EAAAl5C,EACAsuB,EAAAvuB,EACAo5C,EAAAn5C,EACAo5C,EAAA52C,EACA62C,EAAA72C,EACA82C,EAAAl6C,EAAA90B,MAAArP,KAAAkE,WAAA,EACAo6E,EAAAD,EAAAnC,KAAA6B,KAAA1uE,MAAArP,KAAAkE,WAAA+3E,GAAAtnD,IAAAC,MACAmoD,EAAAhB,GAAAJ,GAAA/mD,EAAAD,GAAA,GAAAmpD,EAAAzuE,MAAArP,KAAAkE,YACAq6E,EAAAxB,EACAyB,EAAAzB,EAKA,GAAAuB,EAAApC,GAAA,CACA,IAAAj7D,EAAAq7D,GAAAgC,EAAA3pD,EAAAqnD,GAAAqC,IACAtqD,EAAAuoD,GAAAgC,EAAA1pD,EAAAonD,GAAAqC,KACAF,GAAA,EAAAl9D,GAAAi7D,IAAA7oB,GAAApyC,GAAAqmB,EAAA,KAAA42C,GAAAj9D,IACAk9D,EAAA,EAAA9qB,EAAA6qB,GAAAp5C,EAAAC,GAAA,IACAq5C,GAAA,EAAArqD,GAAAmoD,IAAA8B,GAAAjqD,GAAAuT,EAAA,KAAA22C,GAAAlqD,IACAqqD,EAAA,EAAAJ,EAAAC,GAAAn5C,EAAAC,GAAA,GAGA,IAAAyB,EAAA5R,EAAAinD,GAAAmC,GACAv3C,EAAA7R,EAAAonD,GAAAgC,GACAZ,EAAAzoD,EAAAknD,GAAAqC,GACAb,EAAA1oD,EAAAqnD,GAAAkC,GAGA,GAAAnB,EAAAb,GAAA,CACA,IAAAgB,EAAAtoD,EAAAinD,GAAAoC,GACAd,EAAAvoD,EAAAonD,GAAAiC,GACA9qB,EAAAx+B,EAAAknD,GAAAxoB,GACAD,EAAAz+B,EAAAqnD,GAAA3oB,GAGA,GAAA9rB,EAAA40C,GAAA,CACA,IAAAsC,EAAAN,EAAAjC,GAhIA,SAAAvwE,EAAA06B,EAAArgC,EAAAE,EAAAD,EAAAE,EAAAguC,EAAAC,GACA,IAAAgpC,EAAAp3E,EAAA2F,EAAA0xE,EAAAn3E,EAAAmgC,EACAq4C,EAAAvqC,EAAAluC,EAAA04E,EAAAvqC,EAAAjuC,EACA1I,GAAAihF,GAAAr4C,EAAAlgC,GAAAw4E,GAAAhzE,EAAA1F,KAAA04E,EAAAvB,EAAAsB,EAAArB,GACA,OAAA1xE,EAAAlO,EAAA2/E,EAAA/2C,EAAA5oC,EAAA4/E,GA4HAuB,CAAAp4C,EAAAC,EAAA0sB,EAAAC,EAAA8pB,EAAAC,EAAAC,EAAAC,IAAAD,EAAAC,GACAn0B,EAAA1iB,EAAAi4C,EAAA,GACAt1B,EAAA1iB,EAAAg4C,EAAA,GACAI,EAAA3B,EAAAuB,EAAA,GACAK,EAAA3B,EAAAsB,EAAA,GACAM,EAAA,EAAA/C,GDhJA,SAAAv6E,GACA,OAAAA,EAAA,IAAAA,GAAA,EAAA06E,GAAAz1E,KAAAugC,KAAAxlC,GC+IAu9E,EAAA91B,EAAA21B,EAAA11B,EAAA21B,IAAA7C,GAAA/yB,IAAAC,KAAA8yB,GAAA4C,IAAAC,OAAA,GACAG,EAAAhD,GAAAwC,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,IACAF,EAAAxC,GAAAgB,GAAApoD,EAAAsqD,IAAAF,EAAA,IACAP,EAAAzC,GAAAgB,GAAAnoD,EAAAqqD,IAAAF,EAAA,KAKAX,EAAAlC,GAGAsC,EAAAtC,IACAtkD,EAAAklD,GAAA3pB,EAAAC,EAAA5sB,EAAAC,EAAA7R,EAAA4pD,EAAAl3C,GACApY,EAAA4tD,GAAAI,EAAAC,EAAAC,EAAAC,EAAAzoD,EAAA4pD,EAAAl3C,GAEAl4B,EAAA22B,OAAAnO,EAAA7zB,GAAA6zB,EAAA4O,IAAA5O,EAAA5zB,GAAA4zB,EAAA6O,KAGA+3C,EAAAzB,EAAA3tE,EAAAg4B,IAAAxP,EAAA7zB,GAAA6zB,EAAA5zB,GAAAw6E,EAAA5C,GAAAhkD,EAAA6O,IAAA7O,EAAA4O,KAAAo1C,GAAA1sD,EAAAuX,IAAAvX,EAAAsX,MAAAc,IAIAl4B,EAAAg4B,IAAAxP,EAAA7zB,GAAA6zB,EAAA5zB,GAAAw6E,EAAA5C,GAAAhkD,EAAA6O,IAAA7O,EAAA4O,KAAAo1C,GAAAhkD,EAAAulD,IAAAvlD,EAAAslD,MAAA51C,GACAl4B,EAAAg4B,IAAA,IAAAxS,EAAAgnD,GAAAhkD,EAAA5zB,GAAA4zB,EAAAulD,IAAAvlD,EAAA7zB,GAAA6zB,EAAAslD,KAAAtB,GAAA1sD,EAAAlrB,GAAAkrB,EAAAiuD,IAAAjuD,EAAAnrB,GAAAmrB,EAAAguD,MAAA51C,GACAl4B,EAAAg4B,IAAAlY,EAAAnrB,GAAAmrB,EAAAlrB,GAAAw6E,EAAA5C,GAAA1sD,EAAAiuD,IAAAjuD,EAAAguD,KAAAtB,GAAA1sD,EAAAuX,IAAAvX,EAAAsX,MAAAc,MAKAl4B,EAAA22B,OAAAS,EAAAC,GAAAr3B,EAAAg4B,IAAA,IAAAxS,EAAAopD,EAAAC,GAAA32C,IArBAl4B,EAAA22B,OAAAS,EAAAC,GAyBA9R,EAAAunD,IAAAiC,EAAAjC,GAGAqC,EAAArC,IACAtkD,EAAAklD,GAAAM,EAAAC,EAAAH,EAAAC,EAAAxoD,GAAA4pD,EAAAj3C,GACApY,EAAA4tD,GAAAt2C,EAAAC,EAAA0sB,EAAAC,EAAAz+B,GAAA4pD,EAAAj3C,GAEAl4B,EAAA62B,OAAArO,EAAA7zB,GAAA6zB,EAAA4O,IAAA5O,EAAA5zB,GAAA4zB,EAAA6O,KAGA83C,EAAAxB,EAAA3tE,EAAAg4B,IAAAxP,EAAA7zB,GAAA6zB,EAAA5zB,GAAAu6E,EAAA3C,GAAAhkD,EAAA6O,IAAA7O,EAAA4O,KAAAo1C,GAAA1sD,EAAAuX,IAAAvX,EAAAsX,MAAAc,IAIAl4B,EAAAg4B,IAAAxP,EAAA7zB,GAAA6zB,EAAA5zB,GAAAu6E,EAAA3C,GAAAhkD,EAAA6O,IAAA7O,EAAA4O,KAAAo1C,GAAAhkD,EAAAulD,IAAAvlD,EAAAslD,MAAA51C,GACAl4B,EAAAg4B,IAAA,IAAAzS,EAAAinD,GAAAhkD,EAAA5zB,GAAA4zB,EAAAulD,IAAAvlD,EAAA7zB,GAAA6zB,EAAAslD,KAAAtB,GAAA1sD,EAAAlrB,GAAAkrB,EAAAiuD,IAAAjuD,EAAAnrB,GAAAmrB,EAAAguD,KAAA51C,GACAl4B,EAAAg4B,IAAAlY,EAAAnrB,GAAAmrB,EAAAlrB,GAAAu6E,EAAA3C,GAAA1sD,EAAAiuD,IAAAjuD,EAAAguD,KAAAtB,GAAA1sD,EAAAuX,IAAAvX,EAAAsX,MAAAc,KAKAl4B,EAAAg4B,IAAA,IAAAzS,EAAAupD,EAAA7qB,EAAA/rB,GArBAl4B,EAAA62B,OAAAm3C,EAAAC,QA1FAjuE,EAAA22B,OAAA,KAoHA,GAFA32B,EAAA42B,YAEAgC,EAAA,OAAA54B,EAAA,KAAA44B,EAAA,SAyCA,OAtCAZ,EAAA4oB,SAAA,WACA,IAAA3yD,IAAAm/E,EAAAntE,MAAArP,KAAAkE,aAAAw4E,EAAArtE,MAAArP,KAAAkE,YAAA,EACAsC,IAAAy+B,EAAA51B,MAAArP,KAAAkE,aAAAghC,EAAA71B,MAAArP,KAAAkE,YAAA,EAAAi4E,GAAA,EACA,OAAAN,GAAAr1E,GAAAnJ,EAAA2+E,GAAAx1E,GAAAnJ,IAGA+pC,EAAAo1C,YAAA,SAAAvwE,GACA,OAAA/H,UAAAC,QAAAq4E,EAAA,mBAAAvwE,IAAAyvE,IAAAzvE,GAAAm7B,GAAAo1C,GAGAp1C,EAAAs1C,YAAA,SAAAzwE,GACA,OAAA/H,UAAAC,QAAAu4E,EAAA,mBAAAzwE,IAAAyvE,IAAAzvE,GAAAm7B,GAAAs1C,GAGAt1C,EAAA02C,aAAA,SAAA7xE,GACA,OAAA/H,UAAAC,QAAA25E,EAAA,mBAAA7xE,IAAAyvE,IAAAzvE,GAAAm7B,GAAA02C,GAGA12C,EAAA22C,UAAA,SAAA9xE,GACA,OAAA/H,UAAAC,QAAA45E,EAAA,MAAA9xE,EAAA,wBAAAA,IAAAyvE,IAAAzvE,GAAAm7B,GAAA22C,GAGA32C,EAAAnC,WAAA,SAAAh5B,GACA,OAAA/H,UAAAC,QAAA8gC,EAAA,mBAAAh5B,IAAAyvE,IAAAzvE,GAAAm7B,GAAAnC,GAGAmC,EAAAlC,SAAA,SAAAj5B,GACA,OAAA/H,UAAAC,QAAA+gC,EAAA,mBAAAj5B,IAAAyvE,IAAAzvE,GAAAm7B,GAAAlC,GAGAkC,EAAAjD,SAAA,SAAAl4B,GACA,OAAA/H,UAAAC,QAAAggC,EAAA,mBAAAl4B,IAAAyvE,IAAAzvE,GAAAm7B,GAAAjD,GAGAiD,EAAAh4B,QAAA,SAAAnD,GACA,OAAA/H,UAAAC,QAAAiL,EAAA,MAAAnD,EAAA,KAAAA,EAAAm7B,GAAAh4B,GAGAg4B,GCjQA,SAAA83C,GAAA9vE,GACApP,KAAAuwD,SAAAnhD,EAGA8vE,GAAA/gF,WACAghF,UAAA,WACAn/E,KAAA0wD,MAAA,GAEA0uB,QAAA,WACAp/E,KAAA0wD,MAAAppD,KAEAi2C,UAAA,WACAv9C,KAAA2wD,OAAA,GAEAnT,QAAA,YACAx9C,KAAA0wD,OAAA,IAAA1wD,KAAA0wD,OAAA,IAAA1wD,KAAA2wD,SAAA3wD,KAAAuwD,SAAAvqB,YACAhmC,KAAA0wD,MAAA,EAAA1wD,KAAA0wD,OAEAxzC,MAAA,SAAAzb,EAAAC,GAEA,OADAD,KAAAC,KACA1B,KAAA2wD,QACA,OAAA3wD,KAAA2wD,OAAA,EAA8B3wD,KAAA0wD,MAAA1wD,KAAAuwD,SAAAtqB,OAAAxkC,EAAAC,GAAA1B,KAAAuwD,SAAAxqB,OAAAtkC,EAAAC,GAAsE,MACpG,OAAA1B,KAAA2wD,OAAA,EACA,QAAA3wD,KAAAuwD,SAAAtqB,OAAAxkC,EAAAC,MAKA,IAAA29E,GAAA,SAAAjwE,GACA,WAAA8vE,GAAA9vE,IC7BA,SAAAkwE,GAAAjhF,GACA,OAAAA,EAAA,GAGA,SAAAkhF,GAAAlhF,GACA,OAAAA,EAAA,qBCCA,IAAAoD,EAAA69E,GACA59E,EAAA69E,GACAC,EAAA9D,IAAA,GACAtsE,EAAA,KACAqwE,EAAAJ,GACAn/C,EAAA,KAEA,SAAA5vB,EAAA1Q,GACA,IAAArD,EAEAM,EAEAmrC,EAHAhqC,EAAA4B,EAAAuE,OAEAu7E,GAAA,EAKA,IAFA,MAAAtwE,IAAA8wB,EAAAu/C,EAAAz3C,EAAAR,OAEAjrC,EAAA,EAAeA,GAAAyB,IAAQzB,IACvBA,EAAAyB,GAAAwhF,EAAA3iF,EAAA+C,EAAArD,KAAAqD,MAAA8/E,KACAA,MAAAx/C,EAAAqd,YACArd,EAAAsd,WAEAkiC,GAAAx/C,EAAAhjB,OAAAzb,EAAA5E,EAAAN,EAAAqD,IAAA8B,EAAA7E,EAAAN,EAAAqD,IAGA,GAAAooC,EAAA,OAAA9H,EAAA,KAAA8H,EAAA,SAuBA,OApBA13B,EAAA7O,EAAA,SAAAwK,GACA,OAAA/H,UAAAC,QAAA1C,EAAA,mBAAAwK,IAAAyvE,IAAAzvE,GAAAqE,GAAA7O,GAGA6O,EAAA5O,EAAA,SAAAuK,GACA,OAAA/H,UAAAC,QAAAzC,EAAA,mBAAAuK,IAAAyvE,IAAAzvE,GAAAqE,GAAA5O,GAGA4O,EAAAkvE,QAAA,SAAAvzE,GACA,OAAA/H,UAAAC,QAAAq7E,EAAA,mBAAAvzE,IAAAyvE,KAAAzvE,GAAAqE,GAAAkvE,GAGAlvE,EAAAmvE,MAAA,SAAAxzE,GACA,OAAA/H,UAAAC,QAAAs7E,EAAAxzE,EAAA,MAAAmD,IAAA8wB,EAAAu/C,EAAArwE,IAAAkB,GAAAmvE,GAGAnvE,EAAAlB,QAAA,SAAAnD,GACA,OAAA/H,UAAAC,QAAA,MAAA8H,EAAAmD,EAAA8wB,EAAA,KAAAA,EAAAu/C,EAAArwE,EAAAnD,GAAAqE,GAAAlB,GAGAkB,GC/CAqvE,GAAA,WACA,IAAAh0E,EAAA2zE,GACAt5E,EAAA,KACAqgC,EAAAq1C,GAAA,GACAx1E,EAAAq5E,GACAC,EAAA9D,IAAA,GACAtsE,EAAA,KACAqwE,EAAAJ,GACAn/C,EAAA,KAEA,SAAAuK,EAAA7qC,GACA,IAAArD,EACAsQ,EACApI,EAEA5H,EAEAmrC,EAHAhqC,EAAA4B,EAAAuE,OAEAu7E,GAAA,EAEAE,EAAA,IAAA7+E,MAAA/C,GACA6hF,EAAA,IAAA9+E,MAAA/C,GAIA,IAFA,MAAAoR,IAAA8wB,EAAAu/C,EAAAz3C,EAAAR,OAEAjrC,EAAA,EAAeA,GAAAyB,IAAQzB,EAAA,CACvB,KAAAA,EAAAyB,GAAAwhF,EAAA3iF,EAAA+C,EAAArD,KAAAqD,MAAA8/E,EACA,GAAAA,KACA7yE,EAAAtQ,EACA2jC,EAAAi/C,YACAj/C,EAAAqd,gBACS,CAGT,IAFArd,EAAAsd,UACAtd,EAAAqd,YACA94C,EAAAlI,EAAA,EAAyBkI,GAAAoI,IAAQpI,EACjCy7B,EAAAhjB,MAAA0iE,EAAAn7E,GAAAo7E,EAAAp7E,IAEAy7B,EAAAsd,UACAtd,EAAAk/C,UAGAM,IACAE,EAAArjF,IAAAoP,EAAA9O,EAAAN,EAAAqD,GAAAigF,EAAAtjF,IAAA8pC,EAAAxpC,EAAAN,EAAAqD,GACAsgC,EAAAhjB,MAAAlX,KAAAnJ,EAAAN,EAAAqD,GAAAggF,EAAArjF,GAAA2J,KAAArJ,EAAAN,EAAAqD,GAAAigF,EAAAtjF,KAIA,GAAAyrC,EAAA,OAAA9H,EAAA,KAAA8H,EAAA,SAGA,SAAA83C,IACA,OAAAC,KAAAP,WAAAC,SAAArwE,WAoDA,OAjDAq7B,EAAAhpC,EAAA,SAAAwK,GACA,OAAA/H,UAAAC,QAAAwH,EAAA,mBAAAM,IAAAyvE,IAAAzvE,GAAAjG,EAAA,KAAAykC,GAAA9+B,GAGA8+B,EAAA9+B,GAAA,SAAAM,GACA,OAAA/H,UAAAC,QAAAwH,EAAA,mBAAAM,IAAAyvE,IAAAzvE,GAAAw+B,GAAA9+B,GAGA8+B,EAAAzkC,GAAA,SAAAiG,GACA,OAAA/H,UAAAC,QAAA6B,EAAA,MAAAiG,EAAA,wBAAAA,IAAAyvE,IAAAzvE,GAAAw+B,GAAAzkC,GAGAykC,EAAA/oC,EAAA,SAAAuK,GACA,OAAA/H,UAAAC,QAAAkiC,EAAA,mBAAAp6B,IAAAyvE,IAAAzvE,GAAA/F,EAAA,KAAAukC,GAAApE,GAGAoE,EAAApE,GAAA,SAAAp6B,GACA,OAAA/H,UAAAC,QAAAkiC,EAAA,mBAAAp6B,IAAAyvE,IAAAzvE,GAAAw+B,GAAApE,GAGAoE,EAAAvkC,GAAA,SAAA+F,GACA,OAAA/H,UAAAC,QAAA+B,EAAA,MAAA+F,EAAA,wBAAAA,IAAAyvE,IAAAzvE,GAAAw+B,GAAAvkC,GAGAukC,EAAAu1C,OACAv1C,EAAAw1C,OAAA,WACA,OAAAH,IAAAr+E,EAAAkK,GAAAjK,EAAA2kC,IAGAoE,EAAAy1C,OAAA,WACA,OAAAJ,IAAAr+E,EAAAkK,GAAAjK,EAAAwE,IAGAukC,EAAA01C,OAAA,WACA,OAAAL,IAAAr+E,EAAAuE,GAAAtE,EAAA2kC,IAGAoE,EAAA+0C,QAAA,SAAAvzE,GACA,OAAA/H,UAAAC,QAAAq7E,EAAA,mBAAAvzE,IAAAyvE,KAAAzvE,GAAAw+B,GAAA+0C,GAGA/0C,EAAAg1C,MAAA,SAAAxzE,GACA,OAAA/H,UAAAC,QAAAs7E,EAAAxzE,EAAA,MAAAmD,IAAA8wB,EAAAu/C,EAAArwE,IAAAq7B,GAAAg1C,GAGAh1C,EAAAr7B,QAAA,SAAAnD,GACA,OAAA/H,UAAAC,QAAA,MAAA8H,EAAAmD,EAAA8wB,EAAA,KAAAA,EAAAu/C,EAAArwE,EAAAnD,GAAAw+B,GAAAr7B,GAGAq7B,GC3GA21C,GAAA,SAAA55E,EAAAC,GACA,OAAAA,EAAAD,GAAA,EAAAC,EAAAD,EAAA,EAAAC,GAAAD,EAAA,EAAAc,KCDA+4E,GAAA,SAAAxjF,GACA,OAAAA,GCIAyjF,GAAA,WACA,IAAA9iF,EAAA6iF,GACAp3C,EAAAm3C,GACAp5E,EAAA,KACAi+B,EAAAy2C,GAAA,GACAx2C,EAAAw2C,GAAAW,IACAl4C,EAAAu3C,GAAA,GAEA,SAAA6E,EAAA3gF,GACA,IAAArD,EAEAsQ,EACApI,EAMAsgC,EAGAt7B,EAXAzL,EAAA4B,EAAAuE,OAGAmF,EAAA,EACA8O,EAAA,IAAArX,MAAA/C,GACAwiF,EAAA,IAAAz/E,MAAA/C,GACA8mC,GAAAG,EAAA51B,MAAArP,KAAAkE,WACAqjC,EAAA7gC,KAAAnD,IAAA84E,GAAA31E,KAAAlD,KAAA64E,GAAAn3C,EAAA71B,MAAArP,KAAAkE,WAAA4gC,IAEAzmC,EAAAqI,KAAAnD,IAAAmD,KAAAyE,IAAAo8B,GAAAvpC,EAAAmmC,EAAA90B,MAAArP,KAAAkE,YACAu8E,EAAApiF,GAAAkpC,EAAA,QAGA,IAAAhrC,EAAA,EAAeA,EAAAyB,IAAOzB,GACtBkN,EAAA+2E,EAAApoE,EAAA7b,OAAAiB,EAAAoC,EAAArD,KAAAqD,IAAA,IACA0J,GAAAG,GASA,IAJA,MAAAw/B,EAAA7wB,EAAApR,KAAA,SAAAzK,EAAAsQ,GAAuD,OAAAo8B,EAAAu3C,EAAAjkF,GAAAikF,EAAA3zE,MACvD,MAAA7F,GAAAoR,EAAApR,KAAA,SAAAzK,EAAAsQ,GAAsD,OAAA7F,EAAApH,EAAArD,GAAAqD,EAAAiN,MAGtDtQ,EAAA,EAAAkI,EAAA6E,GAAAi+B,EAAAvpC,EAAAyiF,GAAAn3E,EAAA,EAAkD/M,EAAAyB,IAAOzB,EAAAuoC,EAAAC,EACzDl4B,EAAAuL,EAAA7b,GAAAwoC,EAAAD,IAAAr7B,EAAA+2E,EAAA3zE,IAAA,EAAApD,EAAAhF,EAAA,GAAAg8E,EAAAD,EAAA3zE,IACAjN,OAAAiN,GACAuL,MAAA7b,EACAiB,MAAAiM,EACAw7B,WAAAH,EACAI,SAAAH,EACAZ,SAAA9lC,GAIA,OAAAmiF,EA2BA,OAxBAD,EAAA/iF,MAAA,SAAAyO,GACA,OAAA/H,UAAAC,QAAA3G,EAAA,mBAAAyO,IAAAyvE,IAAAzvE,GAAAs0E,GAAA/iF,GAGA+iF,EAAAt3C,WAAA,SAAAh9B,GACA,OAAA/H,UAAAC,QAAA8kC,EAAAh9B,EAAAjF,EAAA,KAAAu5E,GAAAt3C,GAGAs3C,EAAAv5E,KAAA,SAAAiF,GACA,OAAA/H,UAAAC,QAAA6C,EAAAiF,EAAAg9B,EAAA,KAAAs3C,GAAAv5E,GAGAu5E,EAAAt7C,WAAA,SAAAh5B,GACA,OAAA/H,UAAAC,QAAA8gC,EAAA,mBAAAh5B,IAAAyvE,IAAAzvE,GAAAs0E,GAAAt7C,GAGAs7C,EAAAr7C,SAAA,SAAAj5B,GACA,OAAA/H,UAAAC,QAAA+gC,EAAA,mBAAAj5B,IAAAyvE,IAAAzvE,GAAAs0E,GAAAr7C,GAGAq7C,EAAAp8C,SAAA,SAAAl4B,GACA,OAAA/H,UAAAC,QAAAggC,EAAA,mBAAAl4B,IAAAyvE,IAAAzvE,GAAAs0E,GAAAp8C,GAGAo8C,GC3EAG,GAAAC,GAAAtB,IAEA,SAAAuB,GAAAnB,GACAz/E,KAAA6gF,OAAApB,EAqBA,SAAAkB,GAAAlB,GAEA,SAAAloC,EAAAnoC,GACA,WAAAwxE,GAAAnB,EAAArwE,IAKA,OAFAmoC,EAAAspC,OAAApB,EAEAloC,EC/BA,SAAAupC,GAAAtkF,GACA,IAAAI,EAAAJ,EAAAijF,MASA,OAPAjjF,EAAAq6C,MAAAr6C,EAAAiF,SAAAjF,EAAAiF,EACAjF,EAAAsH,OAAAtH,EAAAkF,SAAAlF,EAAAkF,EAEAlF,EAAAijF,MAAA,SAAAxzE,GACA,OAAA/H,UAAAC,OAAAvH,EAAA+jF,GAAA10E,IAAArP,IAAAikF,QAGArkF,EDLAokF,GAAAziF,WACAghF,UAAA,WACAn/E,KAAA6gF,OAAA1B,aAEAC,QAAA,WACAp/E,KAAA6gF,OAAAzB,WAEA7hC,UAAA,WACAv9C,KAAA6gF,OAAAtjC,aAEAC,QAAA,WACAx9C,KAAA6gF,OAAArjC,WAEAtgC,MAAA,SAAA1W,EAAAnJ,GACA2C,KAAA6gF,OAAA3jE,MAAA7f,EAAAqJ,KAAAknB,IAAApnB,GAAAnJ,GAAAqJ,KAAAinB,IAAAnnB,MCNA,IAAAu6E,GAAA,WACA,OAAAD,GAAAf,KAAAN,MAAAiB,oBCZA,IAAAl6E,EAAAm5E,KAAAF,MAAAiB,IACA9jF,EAAA4J,EAAAi5E,MACA9zE,EAAAnF,EAAAw5E,OACAh6E,EAAAQ,EAAA25E,OACA95C,EAAA7/B,EAAAy5E,OACA/5E,EAAAM,EAAA05E,OAiBA,OAfA15E,EAAAqwC,MAAArwC,EAAA/E,SAAA+E,EAAA/E,EACA+E,EAAAy+B,WAAAz+B,EAAAmF,UAAAnF,EAAAmF,GACAnF,EAAA0+B,SAAA1+B,EAAAR,UAAAQ,EAAAR,GACAQ,EAAA1C,OAAA0C,EAAA9E,SAAA8E,EAAA9E,EACA8E,EAAAg2E,YAAAh2E,EAAA6/B,UAAA7/B,EAAA6/B,GACA7/B,EAAAk2E,YAAAl2E,EAAAN,UAAAM,EAAAN,GACAM,EAAAw6E,eAAA,WAAiC,OAAAF,GAAAn1E,aAA2BnF,EAAAw5E,OAC5Dx5E,EAAAy6E,aAAA,WAA+B,OAAAH,GAAA96E,aAA2BQ,EAAA25E,OAC1D35E,EAAA06E,gBAAA,WAAkC,OAAAJ,GAAAz6C,aAA2B7/B,EAAAy5E,OAC7Dz5E,EAAA26E,gBAAA,WAAkC,OAAAL,GAAA56E,aAA2BM,EAAA05E,OAE7D15E,EAAAi5E,MAAA,SAAAxzE,GACA,OAAA/H,UAAAC,OAAAvH,EAAA+jF,GAAA10E,IAAArP,IAAAikF,QAGAr6E,GC3BA46E,GAAA,SAAA3/E,EAAAC,GACA,QAAAA,MAAAgF,KAAAinB,IAAAlsB,GAAAiF,KAAAqmB,GAAA,GAAArrB,EAAAgF,KAAAknB,IAAAnsB,KCDA4/E,GAAAtgF,MAAA5C,UAAAyL,MCMA,SAAA03E,GAAAzkF,GACA,OAAAA,EAAAggB,OAGA,SAAA0kE,GAAA1kF,GACA,OAAAA,EAAAuF,OAGA,SAAAo/E,GAAA/B,GACA,IAAA5iE,EAAAykE,GACAl/E,EAAAm/E,GACA9/E,EAAA69E,GACA59E,EAAA69E,GACAnwE,EAAA,KAEA,SAAAsmC,IACA,IAAA1N,EAAAC,EAAAo5C,GAAA3kF,KAAAwH,WAAA5F,EAAAue,EAAAxN,MAAArP,KAAAioC,GAAAxqC,EAAA2E,EAAAiN,MAAArP,KAAAioC,GAGA,GAFA74B,MAAA44B,EAAAR,MACAi4C,EAAArwE,GAAA3N,EAAA4N,MAAArP,MAAAioC,EAAA,GAAA3pC,EAAA2pC,KAAAvmC,EAAA2N,MAAArP,KAAAioC,IAAAxmC,EAAA4N,MAAArP,MAAAioC,EAAA,GAAAxqC,EAAAwqC,KAAAvmC,EAAA2N,MAAArP,KAAAioC,IACAD,EAAA,OAAA54B,EAAA,KAAA44B,EAAA,SAuBA,OApBA0N,EAAA74B,OAAA,SAAA5Q,GACA,OAAA/H,UAAAC,QAAA0Y,EAAA5Q,EAAAypC,GAAA74B,GAGA64B,EAAAtzC,OAAA,SAAA6J,GACA,OAAA/H,UAAAC,QAAA/B,EAAA6J,EAAAypC,GAAAtzC,GAGAszC,EAAAj0C,EAAA,SAAAwK,GACA,OAAA/H,UAAAC,QAAA1C,EAAA,mBAAAwK,IAAAyvE,IAAAzvE,GAAAypC,GAAAj0C,GAGAi0C,EAAAh0C,EAAA,SAAAuK,GACA,OAAA/H,UAAAC,QAAAzC,EAAA,mBAAAuK,IAAAyvE,IAAAzvE,GAAAypC,GAAAh0C,GAGAg0C,EAAAtmC,QAAA,SAAAnD,GACA,OAAA/H,UAAAC,QAAAiL,EAAA,MAAAnD,EAAA,KAAAA,EAAAypC,GAAAtmC,GAGAsmC,EAGA,SAAA+rC,GAAAryE,EAAAzD,EAAA06B,EAAArgC,EAAAE,GACAkJ,EAAA22B,OAAAp6B,EAAA06B,GACAj3B,EAAA+2B,cAAAx6B,KAAA3F,GAAA,EAAAqgC,EAAA16B,EAAAzF,EAAAF,EAAAE,GAGA,SAAAw7E,GAAAtyE,EAAAzD,EAAA06B,EAAArgC,EAAAE,GACAkJ,EAAA22B,OAAAp6B,EAAA06B,GACAj3B,EAAA+2B,cAAAx6B,EAAA06B,KAAAngC,GAAA,EAAAF,EAAAqgC,EAAArgC,EAAAE,GAGA,SAAAy7E,GAAAvyE,EAAAzD,EAAA06B,EAAArgC,EAAAE,GACA,IAAA+a,EAAAmgE,GAAAz1E,EAAA06B,GACAtS,EAAAqtD,GAAAz1E,EAAA06B,KAAAngC,GAAA,GACA07E,EAAAR,GAAAp7E,EAAAqgC,GACAw7C,EAAAT,GAAAp7E,EAAAE,GACAkJ,EAAA22B,OAAA9kB,EAAA,GAAAA,EAAA,IACA7R,EAAA+2B,cAAApS,EAAA,GAAAA,EAAA,GAAA6tD,EAAA,GAAAA,EAAA,GAAAC,EAAA,GAAAA,EAAA,IAGA,SAAAC,KACA,OAAAN,GAAAC,IAGA,SAAAM,KACA,OAAAP,GAAAE,IAGA,SAAAM,KACA,IAAAxlF,EAAAglF,GAAAG,IAGA,OAFAnlF,EAAAq6C,MAAAr6C,EAAAiF,SAAAjF,EAAAiF,EACAjF,EAAAsH,OAAAtH,EAAAkF,SAAAlF,EAAAkF,EACAlF,EChFA,IAAAylF,IACAC,KAAA,SAAA9yE,EAAAmL,GACA,IAAAld,EAAAqJ,KAAAC,KAAA4T,EAAA4hE,IACA/sE,EAAA22B,OAAA1oC,EAAA,GACA+R,EAAAg4B,IAAA,IAAA/pC,EAAA,EAAAg/E,MCNA8F,IACAD,KAAA,SAAA9yE,EAAAmL,GACA,IAAAld,EAAAqJ,KAAAC,KAAA4T,EAAA,KACAnL,EAAA22B,QAAA,EAAA1oC,MACA+R,EAAA62B,QAAA5oC,MACA+R,EAAA62B,QAAA5oC,GAAA,EAAAA,GACA+R,EAAA62B,OAAA5oC,GAAA,EAAAA,GACA+R,EAAA62B,OAAA5oC,MACA+R,EAAA62B,OAAA,EAAA5oC,MACA+R,EAAA62B,OAAA,EAAA5oC,KACA+R,EAAA62B,OAAA5oC,KACA+R,EAAA62B,OAAA5oC,EAAA,EAAAA,GACA+R,EAAA62B,QAAA5oC,EAAA,EAAAA,GACA+R,EAAA62B,QAAA5oC,KACA+R,EAAA62B,QAAA,EAAA5oC,KACA+R,EAAA42B,cCfAo8C,GAAA17E,KAAAC,KAAA,KACA07E,GAAA,EAAAD,GAEAE,IACAJ,KAAA,SAAA9yE,EAAAmL,GACA,IAAA7Y,EAAAgF,KAAAC,KAAA4T,EAAA8nE,IACA5gF,EAAAC,EAAA0gF,GACAhzE,EAAA22B,OAAA,GAAArkC,GACA0N,EAAA62B,OAAAxkC,EAAA,GACA2N,EAAA62B,OAAA,EAAAvkC,GACA0N,EAAA62B,QAAAxkC,EAAA,GACA2N,EAAA42B,cCRAu8C,GAAA77E,KAAAknB,IAAAuuD,GAAA,IAAAz1E,KAAAknB,IAAA,EAAAuuD,GAAA,IACAqG,GAAA97E,KAAAknB,IAAAyuD,GAAA,IAAAkG,GACAE,IAAA/7E,KAAAinB,IAAA0uD,GAAA,IAAAkG,GAEAG,IACAR,KAAA,SAAA9yE,EAAAmL,GACA,IAAAld,EAAAqJ,KAAAC,KAPA,kBAOA4T,GACA9Y,EAAA+gF,GAAAnlF,EACAqE,EAAA+gF,GAAAplF,EACA+R,EAAA22B,OAAA,GAAA1oC,GACA+R,EAAA62B,OAAAxkC,EAAAC,GACA,QAAAnF,EAAA,EAAmBA,EAAA,IAAOA,EAAA,CAC1B,IAAAiK,EAAA61E,GAAA9/E,EAAA,EACAK,EAAA8J,KAAAinB,IAAAnnB,GACAlI,EAAAoI,KAAAknB,IAAApnB,GACA4I,EAAA62B,OAAA3nC,EAAAjB,GAAAT,EAAAS,GACA+R,EAAA62B,OAAArpC,EAAA6E,EAAAnD,EAAAoD,EAAApD,EAAAmD,EAAA7E,EAAA8E,GAEA0N,EAAA42B,cCrBA28C,IACAT,KAAA,SAAA9yE,EAAAmL,GACA,IAAAimB,EAAA95B,KAAAC,KAAA4T,GACA9Y,GAAA++B,EAAA,EACApxB,EAAAoO,KAAA/b,IAAA++B,OCJAoiD,GAAAl8E,KAAAC,KAAA,GAEAk8E,IACAX,KAAA,SAAA9yE,EAAAmL,GACA,IAAA7Y,GAAAgF,KAAAC,KAAA4T,GAAA,EAAAqoE,KACAxzE,EAAA22B,OAAA,IAAArkC,GACA0N,EAAA62B,QAAA28C,GAAAlhF,MACA0N,EAAA62B,OAAA28C,GAAAlhF,MACA0N,EAAA42B,cCPA88C,GAAAp8E,KAAAC,KAAA,KACAo8E,GAAA,EAAAr8E,KAAAC,KAAA,IACAq8E,GAAA,GAAAD,GAAA,KAEAE,IACAf,KAAA,SAAA9yE,EAAAmL,GACA,IAAAld,EAAAqJ,KAAAC,KAAA4T,EAAAyoE,IACAr3E,EAAAtO,EAAA,EACAgpC,EAAAhpC,EAAA0lF,GACA/8E,EAAA2F,EACAzF,EAAA7I,EAAA0lF,GAAA1lF,EACA4I,GAAAD,EACAG,EAAAD,EACAkJ,EAAA22B,OAAAp6B,EAAA06B,GACAj3B,EAAA62B,OAAAjgC,EAAAE,GACAkJ,EAAA62B,OAAAhgC,EAAAE,GACAiJ,EAAA62B,QAjBA,GAiBAt6B,EAAAm3E,GAAAz8C,EAAAy8C,GAAAn3E,GAjBA,GAiBA06B,GACAj3B,EAAA62B,QAlBA,GAkBAjgC,EAAA88E,GAAA58E,EAAA48E,GAAA98E,GAlBA,GAkBAE,GACAkJ,EAAA62B,QAnBA,GAmBAhgC,EAAA68E,GAAA38E,EAAA28E,GAAA78E,GAnBA,GAmBAE,GACAiJ,EAAA62B,QApBA,GAoBAt6B,EAAAm3E,GAAAz8C,GApBA,GAoBAA,EAAAy8C,GAAAn3E,GACAyD,EAAA62B,QArBA,GAqBAjgC,EAAA88E,GAAA58E,GArBA,GAqBAA,EAAA48E,GAAA98E,GACAoJ,EAAA62B,QAtBA,GAsBAhgC,EAAA68E,GAAA38E,GAtBA,GAsBAA,EAAA28E,GAAA78E,GACAmJ,EAAA42B,cCbAk9C,IACAjB,GACAE,GACAG,GACAK,GACAD,GACAG,GACAI,IAGAE,GAAA,WACA,IAAAxhF,EAAA+5E,GAAAuG,IACA1nE,EAAAmhE,GAAA,IACAtsE,EAAA,KAEA,SAAAipC,IACA,IAAArQ,EAGA,GAFA54B,MAAA44B,EAAAR,MACA7lC,EAAA0N,MAAArP,KAAAkE,WAAAg+E,KAAA9yE,GAAAmL,EAAAlL,MAAArP,KAAAkE,YACA8jC,EAAA,OAAA54B,EAAA,KAAA44B,EAAA,SAeA,OAZAqQ,EAAA12C,KAAA,SAAAsK,GACA,OAAA/H,UAAAC,QAAAxC,EAAA,mBAAAsK,IAAAyvE,GAAAzvE,GAAAosC,GAAA12C,GAGA02C,EAAA99B,KAAA,SAAAtO,GACA,OAAA/H,UAAAC,QAAAoW,EAAA,mBAAAtO,IAAAyvE,IAAAzvE,GAAAosC,GAAA99B,GAGA89B,EAAAjpC,QAAA,SAAAnD,GACA,OAAA/H,UAAAC,QAAAiL,EAAA,MAAAnD,EAAA,KAAAA,EAAAosC,GAAAjpC,GAGAipC,GC5CA+qC,GAAA,aCAA,SAAAC,GAAAnxE,EAAAzQ,EAAAC,GACAwQ,EAAAq+C,SAAApqB,eACA,EAAAj0B,EAAAwzB,IAAAxzB,EAAA0zB,KAAA,GACA,EAAA1zB,EAAAyzB,IAAAzzB,EAAA2zB,KAAA,GACA3zB,EAAAwzB,IAAA,EAAAxzB,EAAA0zB,KAAA,GACA1zB,EAAAyzB,IAAA,EAAAzzB,EAAA2zB,KAAA,GACA3zB,EAAAwzB,IAAA,EAAAxzB,EAAA0zB,IAAAnkC,GAAA,GACAyQ,EAAAyzB,IAAA,EAAAzzB,EAAA2zB,IAAAnkC,GAAA,GAIA,SAAA4hF,GAAAl0E,GACApP,KAAAuwD,SAAAnhD,EAGAk0E,GAAAnlF,WACAghF,UAAA,WACAn/E,KAAA0wD,MAAA,GAEA0uB,QAAA,WACAp/E,KAAA0wD,MAAAppD,KAEAi2C,UAAA,WACAv9C,KAAA0lC,IAAA1lC,KAAA4lC,IACA5lC,KAAA2lC,IAAA3lC,KAAA6lC,IAAAv+B,IACAtH,KAAA2wD,OAAA,GAEAnT,QAAA,WACA,OAAAx9C,KAAA2wD,QACA,OAAA0yB,GAAArjF,UAAA4lC,IAAA5lC,KAAA6lC,KACA,OAAA7lC,KAAAuwD,SAAAtqB,OAAAjmC,KAAA4lC,IAAA5lC,KAAA6lC,MAEA7lC,KAAA0wD,OAAA,IAAA1wD,KAAA0wD,OAAA,IAAA1wD,KAAA2wD,SAAA3wD,KAAAuwD,SAAAvqB,YACAhmC,KAAA0wD,MAAA,EAAA1wD,KAAA0wD,OAEAxzC,MAAA,SAAAzb,EAAAC,GAEA,OADAD,KAAAC,KACA1B,KAAA2wD,QACA,OAAA3wD,KAAA2wD,OAAA,EAA8B3wD,KAAA0wD,MAAA1wD,KAAAuwD,SAAAtqB,OAAAxkC,EAAAC,GAAA1B,KAAAuwD,SAAAxqB,OAAAtkC,EAAAC,GAAsE,MACpG,OAAA1B,KAAA2wD,OAAA,EAA8B,MAC9B,OAAA3wD,KAAA2wD,OAAA,EAA8B3wD,KAAAuwD,SAAAtqB,QAAA,EAAAjmC,KAAA0lC,IAAA1lC,KAAA4lC,KAAA,KAAA5lC,KAAA2lC,IAAA3lC,KAAA6lC,KAAA,GAC9B,QAAAw9C,GAAArjF,KAAAyB,EAAAC,GAEA1B,KAAA0lC,IAAA1lC,KAAA4lC,IAAA5lC,KAAA4lC,IAAAnkC,EACAzB,KAAA2lC,IAAA3lC,KAAA6lC,IAAA7lC,KAAA6lC,IAAAnkC,IAIA,IAAA6hF,GAAA,SAAAn0E,GACA,WAAAk0E,GAAAl0E,IC9CA,SAAAo0E,GAAAp0E,GACApP,KAAAuwD,SAAAnhD,EAGAo0E,GAAArlF,WACAghF,UAAAiE,GACAhE,QAAAgE,GACA7lC,UAAA,WACAv9C,KAAA0lC,IAAA1lC,KAAA4lC,IAAA5lC,KAAAyjF,IAAAzjF,KAAA0jF,IAAA1jF,KAAA2jF,IACA3jF,KAAA2lC,IAAA3lC,KAAA6lC,IAAA7lC,KAAA4jF,IAAA5jF,KAAA6jF,IAAA7jF,KAAA8jF,IAAAx8E,IACAtH,KAAA2wD,OAAA,GAEAnT,QAAA,WACA,OAAAx9C,KAAA2wD,QACA,OACA3wD,KAAAuwD,SAAAxqB,OAAA/lC,KAAAyjF,IAAAzjF,KAAA4jF,KACA5jF,KAAAuwD,SAAAvqB,YACA,MAEA,OACAhmC,KAAAuwD,SAAAxqB,QAAA/lC,KAAAyjF,IAAA,EAAAzjF,KAAA0jF,KAAA,GAAA1jF,KAAA4jF,IAAA,EAAA5jF,KAAA6jF,KAAA,GACA7jF,KAAAuwD,SAAAtqB,QAAAjmC,KAAA0jF,IAAA,EAAA1jF,KAAAyjF,KAAA,GAAAzjF,KAAA6jF,IAAA,EAAA7jF,KAAA4jF,KAAA,GACA5jF,KAAAuwD,SAAAvqB,YACA,MAEA,OACAhmC,KAAAkd,MAAAld,KAAAyjF,IAAAzjF,KAAA4jF,KACA5jF,KAAAkd,MAAAld,KAAA0jF,IAAA1jF,KAAA6jF,KACA7jF,KAAAkd,MAAAld,KAAA2jF,IAAA3jF,KAAA8jF,OAKA5mE,MAAA,SAAAzb,EAAAC,GAEA,OADAD,KAAAC,KACA1B,KAAA2wD,QACA,OAAA3wD,KAAA2wD,OAAA,EAA8B3wD,KAAAyjF,IAAAhiF,EAAAzB,KAAA4jF,IAAAliF,EAA4B,MAC1D,OAAA1B,KAAA2wD,OAAA,EAA8B3wD,KAAA0jF,IAAAjiF,EAAAzB,KAAA6jF,IAAAniF,EAA4B,MAC1D,OAAA1B,KAAA2wD,OAAA,EAA8B3wD,KAAA2jF,IAAAliF,EAAAzB,KAAA8jF,IAAApiF,EAA4B1B,KAAAuwD,SAAAxqB,QAAA/lC,KAAA0lC,IAAA,EAAA1lC,KAAA4lC,IAAAnkC,GAAA,GAAAzB,KAAA2lC,IAAA,EAAA3lC,KAAA6lC,IAAAnkC,GAAA,GAA4F,MACtJ,QAAA2hF,GAAArjF,KAAAyB,EAAAC,GAEA1B,KAAA0lC,IAAA1lC,KAAA4lC,IAAA5lC,KAAA4lC,IAAAnkC,EACAzB,KAAA2lC,IAAA3lC,KAAA6lC,IAAA7lC,KAAA6lC,IAAAnkC,IAIA,IAAAqiF,GAAA,SAAA30E,GACA,WAAAo0E,GAAAp0E,IChDA,SAAA40E,GAAA50E,GACApP,KAAAuwD,SAAAnhD,EAGA40E,GAAA7lF,WACAghF,UAAA,WACAn/E,KAAA0wD,MAAA,GAEA0uB,QAAA,WACAp/E,KAAA0wD,MAAAppD,KAEAi2C,UAAA,WACAv9C,KAAA0lC,IAAA1lC,KAAA4lC,IACA5lC,KAAA2lC,IAAA3lC,KAAA6lC,IAAAv+B,IACAtH,KAAA2wD,OAAA,GAEAnT,QAAA,YACAx9C,KAAA0wD,OAAA,IAAA1wD,KAAA0wD,OAAA,IAAA1wD,KAAA2wD,SAAA3wD,KAAAuwD,SAAAvqB,YACAhmC,KAAA0wD,MAAA,EAAA1wD,KAAA0wD,OAEAxzC,MAAA,SAAAzb,EAAAC,GAEA,OADAD,KAAAC,KACA1B,KAAA2wD,QACA,OAAA3wD,KAAA2wD,OAAA,EAA8B,MAC9B,OAAA3wD,KAAA2wD,OAAA,EAA8B,MAC9B,OAAA3wD,KAAA2wD,OAAA,EAA8B,IAAAhlD,GAAA3L,KAAA0lC,IAAA,EAAA1lC,KAAA4lC,IAAAnkC,GAAA,EAAA4kC,GAAArmC,KAAA2lC,IAAA,EAAA3lC,KAAA6lC,IAAAnkC,GAAA,EAAoF1B,KAAA0wD,MAAA1wD,KAAAuwD,SAAAtqB,OAAAt6B,EAAA06B,GAAArmC,KAAAuwD,SAAAxqB,OAAAp6B,EAAA06B,GAA0E,MAC5L,OAAArmC,KAAA2wD,OAAA,EACA,QAAA0yB,GAAArjF,KAAAyB,EAAAC,GAEA1B,KAAA0lC,IAAA1lC,KAAA4lC,IAAA5lC,KAAA4lC,IAAAnkC,EACAzB,KAAA2lC,IAAA3lC,KAAA6lC,IAAA7lC,KAAA6lC,IAAAnkC,IAIA,IAAAuiF,GAAA,SAAA70E,GACA,WAAA40E,GAAA50E,ICnCA,SAAA80E,GAAA90E,EAAAwwD,GACA5/D,KAAAmkF,OAAA,IAAAb,GAAAl0E,GACApP,KAAAokF,MAAAxkB,EAGAskB,GAAA/lF,WACAo/C,UAAA,WACAv9C,KAAAizC,MACAjzC,KAAAkzC,MACAlzC,KAAAmkF,OAAA5mC,aAEAC,QAAA,WACA,IAAA/7C,EAAAzB,KAAAizC,GACAvxC,EAAA1B,KAAAkzC,GACArmC,EAAApL,EAAA0C,OAAA,EAEA,GAAA0I,EAAA,EAQA,IAPA,IAKApP,EALAkO,EAAAlK,EAAA,GACA4kC,EAAA3kC,EAAA,GACA2d,EAAA5d,EAAAoL,GAAAlB,EACA2T,EAAA5d,EAAAmL,GAAAw5B,EACA9pC,GAAA,IAGAA,GAAAsQ,GACApP,EAAAlB,EAAAsQ,EACA7M,KAAAmkF,OAAAjnE,MACAld,KAAAokF,MAAA3iF,EAAAlF,IAAA,EAAAyD,KAAAokF,QAAAz4E,EAAAlO,EAAA4hB,GACArf,KAAAokF,MAAA1iF,EAAAnF,IAAA,EAAAyD,KAAAokF,QAAA/9C,EAAA5oC,EAAA6hB,IAKAtf,KAAAizC,GAAAjzC,KAAAkzC,GAAA,KACAlzC,KAAAmkF,OAAA3mC,WAEAtgC,MAAA,SAAAzb,EAAAC,GACA1B,KAAAizC,GAAAlwC,MAAAtB,GACAzB,KAAAkzC,GAAAnwC,MAAArB,KAIA,IAAA2iF,GAAA,SAAA1nD,EAAAijC,GAEA,SAAA0kB,EAAAl1E,GACA,WAAAwwD,EAAA,IAAA0jB,GAAAl0E,GAAA,IAAA80E,GAAA90E,EAAAwwD,GAOA,OAJA0kB,EAAA1kB,KAAA,SAAAA,GACA,OAAAjjC,GAAAijC,IAGA0kB,EAVA,CAWC,KCvDD,SAAAC,GAAAryE,EAAAzQ,EAAAC,GACAwQ,EAAAq+C,SAAApqB,cACAj0B,EAAA0zB,IAAA1zB,EAAAsyE,IAAAtyE,EAAAuxE,IAAAvxE,EAAAwzB,KACAxzB,EAAA2zB,IAAA3zB,EAAAsyE,IAAAtyE,EAAA0xE,IAAA1xE,EAAAyzB,KACAzzB,EAAAuxE,IAAAvxE,EAAAsyE,IAAAtyE,EAAA0zB,IAAAnkC,GACAyQ,EAAA0xE,IAAA1xE,EAAAsyE,IAAAtyE,EAAA2zB,IAAAnkC,GACAwQ,EAAAuxE,IACAvxE,EAAA0xE,KAIA,SAAAa,GAAAr1E,EAAAs1E,GACA1kF,KAAAuwD,SAAAnhD,EACApP,KAAAwkF,IAAA,EAAAE,GAAA,EAGAD,GAAAtmF,WACAghF,UAAA,WACAn/E,KAAA0wD,MAAA,GAEA0uB,QAAA,WACAp/E,KAAA0wD,MAAAppD,KAEAi2C,UAAA,WACAv9C,KAAA0lC,IAAA1lC,KAAA4lC,IAAA5lC,KAAAyjF,IACAzjF,KAAA2lC,IAAA3lC,KAAA6lC,IAAA7lC,KAAA4jF,IAAAt8E,IACAtH,KAAA2wD,OAAA,GAEAnT,QAAA,WACA,OAAAx9C,KAAA2wD,QACA,OAAA3wD,KAAAuwD,SAAAtqB,OAAAjmC,KAAAyjF,IAAAzjF,KAAA4jF,KAAuD,MACvD,OAAAW,GAAAvkF,UAAA4lC,IAAA5lC,KAAA6lC,MAEA7lC,KAAA0wD,OAAA,IAAA1wD,KAAA0wD,OAAA,IAAA1wD,KAAA2wD,SAAA3wD,KAAAuwD,SAAAvqB,YACAhmC,KAAA0wD,MAAA,EAAA1wD,KAAA0wD,OAEAxzC,MAAA,SAAAzb,EAAAC,GAEA,OADAD,KAAAC,KACA1B,KAAA2wD,QACA,OAAA3wD,KAAA2wD,OAAA,EAA8B3wD,KAAA0wD,MAAA1wD,KAAAuwD,SAAAtqB,OAAAxkC,EAAAC,GAAA1B,KAAAuwD,SAAAxqB,OAAAtkC,EAAAC,GAAsE,MACpG,OAAA1B,KAAA2wD,OAAA,EAA8B3wD,KAAA4lC,IAAAnkC,EAAAzB,KAAA6lC,IAAAnkC,EAA4B,MAC1D,OAAA1B,KAAA2wD,OAAA,EACA,QAAA4zB,GAAAvkF,KAAAyB,EAAAC,GAEA1B,KAAA0lC,IAAA1lC,KAAA4lC,IAAA5lC,KAAA4lC,IAAA5lC,KAAAyjF,IAAAzjF,KAAAyjF,IAAAhiF,EACAzB,KAAA2lC,IAAA3lC,KAAA6lC,IAAA7lC,KAAA6lC,IAAA7lC,KAAA4jF,IAAA5jF,KAAA4jF,IAAAliF,IAIA,IAAAijF,GAAA,SAAAhoD,EAAA+nD,GAEA,SAAAC,EAAAv1E,GACA,WAAAq1E,GAAAr1E,EAAAs1E,GAOA,OAJAC,EAAAD,QAAA,SAAAA,GACA,OAAA/nD,GAAA+nD,IAGAC,EAVA,CAWC,GCzDD,SAAAC,GAAAx1E,EAAAs1E,GACA1kF,KAAAuwD,SAAAnhD,EACApP,KAAAwkF,IAAA,EAAAE,GAAA,EAGAE,GAAAzmF,WACAghF,UAAAiE,GACAhE,QAAAgE,GACA7lC,UAAA,WACAv9C,KAAA0lC,IAAA1lC,KAAA4lC,IAAA5lC,KAAAyjF,IAAAzjF,KAAA0jF,IAAA1jF,KAAA2jF,IAAA3jF,KAAA6kF,IACA7kF,KAAA2lC,IAAA3lC,KAAA6lC,IAAA7lC,KAAA4jF,IAAA5jF,KAAA6jF,IAAA7jF,KAAA8jF,IAAA9jF,KAAA8kF,IAAAx9E,IACAtH,KAAA2wD,OAAA,GAEAnT,QAAA,WACA,OAAAx9C,KAAA2wD,QACA,OACA3wD,KAAAuwD,SAAAxqB,OAAA/lC,KAAA0jF,IAAA1jF,KAAA6jF,KACA7jF,KAAAuwD,SAAAvqB,YACA,MAEA,OACAhmC,KAAAuwD,SAAAtqB,OAAAjmC,KAAA0jF,IAAA1jF,KAAA6jF,KACA7jF,KAAAuwD,SAAAvqB,YACA,MAEA,OACAhmC,KAAAkd,MAAAld,KAAA0jF,IAAA1jF,KAAA6jF,KACA7jF,KAAAkd,MAAAld,KAAA2jF,IAAA3jF,KAAA8jF,KACA9jF,KAAAkd,MAAAld,KAAA6kF,IAAA7kF,KAAA8kF,OAKA5nE,MAAA,SAAAzb,EAAAC,GAEA,OADAD,KAAAC,KACA1B,KAAA2wD,QACA,OAAA3wD,KAAA2wD,OAAA,EAA8B3wD,KAAA0jF,IAAAjiF,EAAAzB,KAAA6jF,IAAAniF,EAA4B,MAC1D,OAAA1B,KAAA2wD,OAAA,EAA8B3wD,KAAAuwD,SAAAxqB,OAAA/lC,KAAA2jF,IAAAliF,EAAAzB,KAAA8jF,IAAApiF,GAAkD,MAChF,OAAA1B,KAAA2wD,OAAA,EAA8B3wD,KAAA6kF,IAAApjF,EAAAzB,KAAA8kF,IAAApjF,EAA4B,MAC1D,QAAA6iF,GAAAvkF,KAAAyB,EAAAC,GAEA1B,KAAA0lC,IAAA1lC,KAAA4lC,IAAA5lC,KAAA4lC,IAAA5lC,KAAAyjF,IAAAzjF,KAAAyjF,IAAAhiF,EACAzB,KAAA2lC,IAAA3lC,KAAA6lC,IAAA7lC,KAAA6lC,IAAA7lC,KAAA4jF,IAAA5jF,KAAA4jF,IAAAliF,IAIA,IAAAqjF,GAAA,SAAApoD,EAAA+nD,GAEA,SAAAC,EAAAv1E,GACA,WAAAw1E,GAAAx1E,EAAAs1E,GAOA,OAJAC,EAAAD,QAAA,SAAAA,GACA,OAAA/nD,GAAA+nD,IAGAC,EAVA,CAWC,GC1DD,SAAAK,GAAA51E,EAAAs1E,GACA1kF,KAAAuwD,SAAAnhD,EACApP,KAAAwkF,IAAA,EAAAE,GAAA,EAGAM,GAAA7mF,WACAghF,UAAA,WACAn/E,KAAA0wD,MAAA,GAEA0uB,QAAA,WACAp/E,KAAA0wD,MAAAppD,KAEAi2C,UAAA,WACAv9C,KAAA0lC,IAAA1lC,KAAA4lC,IAAA5lC,KAAAyjF,IACAzjF,KAAA2lC,IAAA3lC,KAAA6lC,IAAA7lC,KAAA4jF,IAAAt8E,IACAtH,KAAA2wD,OAAA,GAEAnT,QAAA,YACAx9C,KAAA0wD,OAAA,IAAA1wD,KAAA0wD,OAAA,IAAA1wD,KAAA2wD,SAAA3wD,KAAAuwD,SAAAvqB,YACAhmC,KAAA0wD,MAAA,EAAA1wD,KAAA0wD,OAEAxzC,MAAA,SAAAzb,EAAAC,GAEA,OADAD,KAAAC,KACA1B,KAAA2wD,QACA,OAAA3wD,KAAA2wD,OAAA,EAA8B,MAC9B,OAAA3wD,KAAA2wD,OAAA,EAA8B,MAC9B,OAAA3wD,KAAA2wD,OAAA,EAA8B3wD,KAAA0wD,MAAA1wD,KAAAuwD,SAAAtqB,OAAAjmC,KAAAyjF,IAAAzjF,KAAA4jF,KAAA5jF,KAAAuwD,SAAAxqB,OAAA/lC,KAAAyjF,IAAAzjF,KAAA4jF,KAAkG,MAChI,OAAA5jF,KAAA2wD,OAAA,EACA,QAAA4zB,GAAAvkF,KAAAyB,EAAAC,GAEA1B,KAAA0lC,IAAA1lC,KAAA4lC,IAAA5lC,KAAA4lC,IAAA5lC,KAAAyjF,IAAAzjF,KAAAyjF,IAAAhiF,EACAzB,KAAA2lC,IAAA3lC,KAAA6lC,IAAA7lC,KAAA6lC,IAAA7lC,KAAA4jF,IAAA5jF,KAAA4jF,IAAAliF,IAIA,IAAAujF,GAAA,SAAAtoD,EAAA+nD,GAEA,SAAAC,EAAAv1E,GACA,WAAA41E,GAAA51E,EAAAs1E,GAOA,OAJAC,EAAAD,QAAA,SAAAA,GACA,OAAA/nD,GAAA+nD,IAGAC,EAVA,CAWC,GC7CD,SAAAO,GAAAhzE,EAAAzQ,EAAAC,GACA,IAAAsE,EAAAkM,EAAA0zB,IACA1/B,EAAAgM,EAAA2zB,IACA5/B,EAAAiM,EAAAuxE,IACAt9E,EAAA+L,EAAA0xE,IAEA,GAAA1xE,EAAAizE,OAAAjJ,GAAA,CACA,IAAA11E,EAAA,EAAA0L,EAAAkzE,QAAA,EAAAlzE,EAAAizE,OAAAjzE,EAAAmzE,OAAAnzE,EAAAozE,QACAtnF,EAAA,EAAAkU,EAAAizE,QAAAjzE,EAAAizE,OAAAjzE,EAAAmzE,QACAr/E,KAAAQ,EAAA0L,EAAAwzB,IAAAxzB,EAAAozE,QAAApzE,EAAAuxE,IAAAvxE,EAAAkzE,SAAApnF,EACAkI,KAAAM,EAAA0L,EAAAyzB,IAAAzzB,EAAAozE,QAAApzE,EAAA0xE,IAAA1xE,EAAAkzE,SAAApnF,EAGA,GAAAkU,EAAAqzE,OAAArJ,GAAA,CACA,IAAAz1E,EAAA,EAAAyL,EAAAszE,QAAA,EAAAtzE,EAAAqzE,OAAArzE,EAAAmzE,OAAAnzE,EAAAozE,QACA3oF,EAAA,EAAAuV,EAAAqzE,QAAArzE,EAAAqzE,OAAArzE,EAAAmzE,QACAp/E,KAAAQ,EAAAyL,EAAA0zB,IAAA1zB,EAAAszE,QAAA/jF,EAAAyQ,EAAAozE,SAAA3oF,EACAwJ,KAAAM,EAAAyL,EAAA2zB,IAAA3zB,EAAAszE,QAAA9jF,EAAAwQ,EAAAozE,SAAA3oF,EAGAuV,EAAAq+C,SAAApqB,cAAAngC,EAAAE,EAAAD,EAAAE,EAAA+L,EAAAuxE,IAAAvxE,EAAA0xE,KAGA,SAAA6B,GAAAr2E,EAAAumC,GACA31C,KAAAuwD,SAAAnhD,EACApP,KAAA0lF,OAAA/vC,EAGA8vC,GAAAtnF,WACAghF,UAAA,WACAn/E,KAAA0wD,MAAA,GAEA0uB,QAAA,WACAp/E,KAAA0wD,MAAAppD,KAEAi2C,UAAA,WACAv9C,KAAA0lC,IAAA1lC,KAAA4lC,IAAA5lC,KAAAyjF,IACAzjF,KAAA2lC,IAAA3lC,KAAA6lC,IAAA7lC,KAAA4jF,IAAAt8E,IACAtH,KAAAmlF,OAAAnlF,KAAAqlF,OAAArlF,KAAAulF,OACAvlF,KAAAolF,QAAAplF,KAAAslF,QAAAtlF,KAAAwlF,QACAxlF,KAAA2wD,OAAA,GAEAnT,QAAA,WACA,OAAAx9C,KAAA2wD,QACA,OAAA3wD,KAAAuwD,SAAAtqB,OAAAjmC,KAAAyjF,IAAAzjF,KAAA4jF,KAAuD,MACvD,OAAA5jF,KAAAkd,MAAAld,KAAAyjF,IAAAzjF,KAAA4jF,MAEA5jF,KAAA0wD,OAAA,IAAA1wD,KAAA0wD,OAAA,IAAA1wD,KAAA2wD,SAAA3wD,KAAAuwD,SAAAvqB,YACAhmC,KAAA0wD,MAAA,EAAA1wD,KAAA0wD,OAEAxzC,MAAA,SAAAzb,EAAAC,GAGA,GAFAD,KAAAC,KAEA1B,KAAA2wD,OAAA,CACA,IAAAg1B,EAAA3lF,KAAAyjF,IAAAhiF,EACAmkF,EAAA5lF,KAAA4jF,IAAAliF,EACA1B,KAAAulF,OAAA7+E,KAAAC,KAAA3G,KAAAwlF,QAAA9+E,KAAAE,IAAA++E,IAAAC,IAAA5lF,KAAA0lF,SAGA,OAAA1lF,KAAA2wD,QACA,OAAA3wD,KAAA2wD,OAAA,EAA8B3wD,KAAA0wD,MAAA1wD,KAAAuwD,SAAAtqB,OAAAxkC,EAAAC,GAAA1B,KAAAuwD,SAAAxqB,OAAAtkC,EAAAC,GAAsE,MACpG,OAAA1B,KAAA2wD,OAAA,EAA8B,MAC9B,OAAA3wD,KAAA2wD,OAAA,EACA,QAAAu0B,GAAAllF,KAAAyB,EAAAC,GAGA1B,KAAAmlF,OAAAnlF,KAAAqlF,OAAArlF,KAAAqlF,OAAArlF,KAAAulF,OACAvlF,KAAAolF,QAAAplF,KAAAslF,QAAAtlF,KAAAslF,QAAAtlF,KAAAwlF,QACAxlF,KAAA0lC,IAAA1lC,KAAA4lC,IAAA5lC,KAAA4lC,IAAA5lC,KAAAyjF,IAAAzjF,KAAAyjF,IAAAhiF,EACAzB,KAAA2lC,IAAA3lC,KAAA6lC,IAAA7lC,KAAA6lC,IAAA7lC,KAAA4jF,IAAA5jF,KAAA4jF,IAAAliF,IAIA,IAAAmkF,GAAA,SAAAlpD,EAAAgZ,GAEA,SAAAmwC,EAAA12E,GACA,OAAAumC,EAAA,IAAA8vC,GAAAr2E,EAAAumC,GAAA,IAAA8uC,GAAAr1E,EAAA,GAOA,OAJA02E,EAAAnwC,MAAA,SAAAA,GACA,OAAAhZ,GAAAgZ,IAGAmwC,EAVA,CAWC,ICnFD,SAAAC,GAAA32E,EAAAumC,GACA31C,KAAAuwD,SAAAnhD,EACApP,KAAA0lF,OAAA/vC,EAGAowC,GAAA5nF,WACAghF,UAAAiE,GACAhE,QAAAgE,GACA7lC,UAAA,WACAv9C,KAAA0lC,IAAA1lC,KAAA4lC,IAAA5lC,KAAAyjF,IAAAzjF,KAAA0jF,IAAA1jF,KAAA2jF,IAAA3jF,KAAA6kF,IACA7kF,KAAA2lC,IAAA3lC,KAAA6lC,IAAA7lC,KAAA4jF,IAAA5jF,KAAA6jF,IAAA7jF,KAAA8jF,IAAA9jF,KAAA8kF,IAAAx9E,IACAtH,KAAAmlF,OAAAnlF,KAAAqlF,OAAArlF,KAAAulF,OACAvlF,KAAAolF,QAAAplF,KAAAslF,QAAAtlF,KAAAwlF,QACAxlF,KAAA2wD,OAAA,GAEAnT,QAAA,WACA,OAAAx9C,KAAA2wD,QACA,OACA3wD,KAAAuwD,SAAAxqB,OAAA/lC,KAAA0jF,IAAA1jF,KAAA6jF,KACA7jF,KAAAuwD,SAAAvqB,YACA,MAEA,OACAhmC,KAAAuwD,SAAAtqB,OAAAjmC,KAAA0jF,IAAA1jF,KAAA6jF,KACA7jF,KAAAuwD,SAAAvqB,YACA,MAEA,OACAhmC,KAAAkd,MAAAld,KAAA0jF,IAAA1jF,KAAA6jF,KACA7jF,KAAAkd,MAAAld,KAAA2jF,IAAA3jF,KAAA8jF,KACA9jF,KAAAkd,MAAAld,KAAA6kF,IAAA7kF,KAAA8kF,OAKA5nE,MAAA,SAAAzb,EAAAC,GAGA,GAFAD,KAAAC,KAEA1B,KAAA2wD,OAAA,CACA,IAAAg1B,EAAA3lF,KAAAyjF,IAAAhiF,EACAmkF,EAAA5lF,KAAA4jF,IAAAliF,EACA1B,KAAAulF,OAAA7+E,KAAAC,KAAA3G,KAAAwlF,QAAA9+E,KAAAE,IAAA++E,IAAAC,IAAA5lF,KAAA0lF,SAGA,OAAA1lF,KAAA2wD,QACA,OAAA3wD,KAAA2wD,OAAA,EAA8B3wD,KAAA0jF,IAAAjiF,EAAAzB,KAAA6jF,IAAAniF,EAA4B,MAC1D,OAAA1B,KAAA2wD,OAAA,EAA8B3wD,KAAAuwD,SAAAxqB,OAAA/lC,KAAA2jF,IAAAliF,EAAAzB,KAAA8jF,IAAApiF,GAAkD,MAChF,OAAA1B,KAAA2wD,OAAA,EAA8B3wD,KAAA6kF,IAAApjF,EAAAzB,KAAA8kF,IAAApjF,EAA4B,MAC1D,QAAAwjF,GAAAllF,KAAAyB,EAAAC,GAGA1B,KAAAmlF,OAAAnlF,KAAAqlF,OAAArlF,KAAAqlF,OAAArlF,KAAAulF,OACAvlF,KAAAolF,QAAAplF,KAAAslF,QAAAtlF,KAAAslF,QAAAtlF,KAAAwlF,QACAxlF,KAAA0lC,IAAA1lC,KAAA4lC,IAAA5lC,KAAA4lC,IAAA5lC,KAAAyjF,IAAAzjF,KAAAyjF,IAAAhiF,EACAzB,KAAA2lC,IAAA3lC,KAAA6lC,IAAA7lC,KAAA6lC,IAAA7lC,KAAA4jF,IAAA5jF,KAAA4jF,IAAAliF,IAIA,IAAAskF,GAAA,SAAArpD,EAAAgZ,GAEA,SAAAmwC,EAAA12E,GACA,OAAAumC,EAAA,IAAAowC,GAAA32E,EAAAumC,GAAA,IAAAivC,GAAAx1E,EAAA,GAOA,OAJA02E,EAAAnwC,MAAA,SAAAA,GACA,OAAAhZ,GAAAgZ,IAGAmwC,EAVA,CAWC,ICtED,SAAAG,GAAA72E,EAAAumC,GACA31C,KAAAuwD,SAAAnhD,EACApP,KAAA0lF,OAAA/vC,EAGAswC,GAAA9nF,WACAghF,UAAA,WACAn/E,KAAA0wD,MAAA,GAEA0uB,QAAA,WACAp/E,KAAA0wD,MAAAppD,KAEAi2C,UAAA,WACAv9C,KAAA0lC,IAAA1lC,KAAA4lC,IAAA5lC,KAAAyjF,IACAzjF,KAAA2lC,IAAA3lC,KAAA6lC,IAAA7lC,KAAA4jF,IAAAt8E,IACAtH,KAAAmlF,OAAAnlF,KAAAqlF,OAAArlF,KAAAulF,OACAvlF,KAAAolF,QAAAplF,KAAAslF,QAAAtlF,KAAAwlF,QACAxlF,KAAA2wD,OAAA,GAEAnT,QAAA,YACAx9C,KAAA0wD,OAAA,IAAA1wD,KAAA0wD,OAAA,IAAA1wD,KAAA2wD,SAAA3wD,KAAAuwD,SAAAvqB,YACAhmC,KAAA0wD,MAAA,EAAA1wD,KAAA0wD,OAEAxzC,MAAA,SAAAzb,EAAAC,GAGA,GAFAD,KAAAC,KAEA1B,KAAA2wD,OAAA,CACA,IAAAg1B,EAAA3lF,KAAAyjF,IAAAhiF,EACAmkF,EAAA5lF,KAAA4jF,IAAAliF,EACA1B,KAAAulF,OAAA7+E,KAAAC,KAAA3G,KAAAwlF,QAAA9+E,KAAAE,IAAA++E,IAAAC,IAAA5lF,KAAA0lF,SAGA,OAAA1lF,KAAA2wD,QACA,OAAA3wD,KAAA2wD,OAAA,EAA8B,MAC9B,OAAA3wD,KAAA2wD,OAAA,EAA8B,MAC9B,OAAA3wD,KAAA2wD,OAAA,EAA8B3wD,KAAA0wD,MAAA1wD,KAAAuwD,SAAAtqB,OAAAjmC,KAAAyjF,IAAAzjF,KAAA4jF,KAAA5jF,KAAAuwD,SAAAxqB,OAAA/lC,KAAAyjF,IAAAzjF,KAAA4jF,KAAkG,MAChI,OAAA5jF,KAAA2wD,OAAA,EACA,QAAAu0B,GAAAllF,KAAAyB,EAAAC,GAGA1B,KAAAmlF,OAAAnlF,KAAAqlF,OAAArlF,KAAAqlF,OAAArlF,KAAAulF,OACAvlF,KAAAolF,QAAAplF,KAAAslF,QAAAtlF,KAAAslF,QAAAtlF,KAAAwlF,QACAxlF,KAAA0lC,IAAA1lC,KAAA4lC,IAAA5lC,KAAA4lC,IAAA5lC,KAAAyjF,IAAAzjF,KAAAyjF,IAAAhiF,EACAzB,KAAA2lC,IAAA3lC,KAAA6lC,IAAA7lC,KAAA6lC,IAAA7lC,KAAA4jF,IAAA5jF,KAAA4jF,IAAAliF,IAIA,IAAAwkF,GAAA,SAAAvpD,EAAAgZ,GAEA,SAAAmwC,EAAA12E,GACA,OAAAumC,EAAA,IAAAswC,GAAA72E,EAAAumC,GAAA,IAAAqvC,GAAA51E,EAAA,GAOA,OAJA02E,EAAAnwC,MAAA,SAAAA,GACA,OAAAhZ,GAAAgZ,IAGAmwC,EAVA,CAWC,IC3DD,SAAAK,GAAA/2E,GACApP,KAAAuwD,SAAAnhD,EAGA+2E,GAAAhoF,WACAghF,UAAAiE,GACAhE,QAAAgE,GACA7lC,UAAA,WACAv9C,KAAA2wD,OAAA,GAEAnT,QAAA,WACAx9C,KAAA2wD,QAAA3wD,KAAAuwD,SAAAvqB,aAEA9oB,MAAA,SAAAzb,EAAAC,GACAD,KAAAC,KACA1B,KAAA2wD,OAAA3wD,KAAAuwD,SAAAtqB,OAAAxkC,EAAAC,IACA1B,KAAA2wD,OAAA,EAAA3wD,KAAAuwD,SAAAxqB,OAAAtkC,EAAAC,MAIA,IAAA0kF,GAAA,SAAAh3E,GACA,WAAA+2E,GAAA/2E,ICvBA,SAAAi3E,GAAA5kF,GACA,OAAAA,EAAA,OAOA,SAAA6kF,GAAAp0E,EAAAjM,EAAAE,GACA,IAAAogF,EAAAr0E,EAAA0zB,IAAA1zB,EAAAwzB,IACA8gD,EAAAvgF,EAAAiM,EAAA0zB,IACAtD,GAAApwB,EAAA2zB,IAAA3zB,EAAAyzB,MAAA4gD,GAAAC,EAAA,OACAjkD,GAAAp8B,EAAA+L,EAAA2zB,MAAA2gD,GAAAD,EAAA,OACAloF,GAAAikC,EAAAkkD,EAAAjkD,EAAAgkD,MAAAC,GACA,OAAAH,GAAA/jD,GAAA+jD,GAAA9jD,IAAA77B,KAAAnD,IAAAmD,KAAAyE,IAAAm3B,GAAA57B,KAAAyE,IAAAo3B,GAAA,GAAA77B,KAAAyE,IAAA9M,KAAA,EAIA,SAAAooF,GAAAv0E,EAAAzU,GACA,IAAA4uB,EAAAna,EAAA0zB,IAAA1zB,EAAAwzB,IACA,OAAArZ,GAAA,GAAAna,EAAA2zB,IAAA3zB,EAAAyzB,KAAAtZ,EAAA5uB,GAAA,EAAAA,EAMA,SAAAipF,GAAAx0E,EAAA0lB,EAAA1I,GACA,IAAAvjB,EAAAuG,EAAAwzB,IACAW,EAAAn0B,EAAAyzB,IACA3/B,EAAAkM,EAAA0zB,IACA1/B,EAAAgM,EAAA2zB,IACAxmB,GAAArZ,EAAA2F,GAAA,EACAuG,EAAAq+C,SAAApqB,cAAAx6B,EAAA0T,EAAAgnB,EAAAhnB,EAAAuY,EAAA5xB,EAAAqZ,EAAAnZ,EAAAmZ,EAAA6P,EAAAlpB,EAAAE,GAGA,SAAAygF,GAAAv3E,GACApP,KAAAuwD,SAAAnhD,EA0CA,SAAAw3E,GAAAx3E,GACApP,KAAAuwD,SAAA,IAAAs2B,GAAAz3E,GAOA,SAAAy3E,GAAAz3E,GACApP,KAAAuwD,SAAAnhD,EAUA,SAAA03E,GAAA13E,GACA,WAAAu3E,GAAAv3E,GAGA,SAAA23E,GAAA33E,GACA,WAAAw3E,GAAAx3E,GCtGA,SAAA43E,GAAA53E,GACApP,KAAAuwD,SAAAnhD,EA2CA,SAAA63E,GAAAxlF,GACA,IAAAlF,EAEAI,EADAqB,EAAAyD,EAAA0C,OAAA,EAEAqC,EAAA,IAAAzF,MAAA/C,GACAyI,EAAA,IAAA1F,MAAA/C,GACAX,EAAA,IAAA0D,MAAA/C,GAEA,IADAwI,EAAA,KAAAC,EAAA,KAAApJ,EAAA,GAAAoE,EAAA,KAAAA,EAAA,GACAlF,EAAA,EAAaA,EAAAyB,EAAA,IAAWzB,EAAAiK,EAAAjK,GAAA,EAAAkK,EAAAlK,GAAA,EAAAc,EAAAd,GAAA,EAAAkF,EAAAlF,GAAA,EAAAkF,EAAAlF,EAAA,GAExB,IADAiK,EAAAxI,EAAA,KAAAyI,EAAAzI,EAAA,KAAAX,EAAAW,EAAA,KAAAyD,EAAAzD,EAAA,GAAAyD,EAAAzD,GACAzB,EAAA,EAAaA,EAAAyB,IAAOzB,EAAAI,EAAA6J,EAAAjK,GAAAkK,EAAAlK,EAAA,GAAAkK,EAAAlK,IAAAI,EAAAU,EAAAd,IAAAI,EAAAU,EAAAd,EAAA,GAEpB,IADAiK,EAAAxI,EAAA,GAAAX,EAAAW,EAAA,GAAAyI,EAAAzI,EAAA,GACAzB,EAAAyB,EAAA,EAAiBzB,GAAA,IAAQA,EAAAiK,EAAAjK,IAAAc,EAAAd,GAAAiK,EAAAjK,EAAA,IAAAkK,EAAAlK,GAEzB,IADAkK,EAAAzI,EAAA,IAAAyD,EAAAzD,GAAAwI,EAAAxI,EAAA,MACAzB,EAAA,EAAaA,EAAAyB,EAAA,IAAWzB,EAAAkK,EAAAlK,GAAA,EAAAkF,EAAAlF,EAAA,GAAAiK,EAAAjK,EAAA,GACxB,OAAAiK,EAAAC,GDpBAkgF,GAAAxoF,WACAghF,UAAA,WACAn/E,KAAA0wD,MAAA,GAEA0uB,QAAA,WACAp/E,KAAA0wD,MAAAppD,KAEAi2C,UAAA,WACAv9C,KAAA0lC,IAAA1lC,KAAA4lC,IACA5lC,KAAA2lC,IAAA3lC,KAAA6lC,IACA7lC,KAAAknF,IAAA5/E,IACAtH,KAAA2wD,OAAA,GAEAnT,QAAA,WACA,OAAAx9C,KAAA2wD,QACA,OAAA3wD,KAAAuwD,SAAAtqB,OAAAjmC,KAAA4lC,IAAA5lC,KAAA6lC,KAAuD,MACvD,OAAA6gD,GAAA1mF,UAAAknF,IAAAT,GAAAzmF,UAAAknF,OAEAlnF,KAAA0wD,OAAA,IAAA1wD,KAAA0wD,OAAA,IAAA1wD,KAAA2wD,SAAA3wD,KAAAuwD,SAAAvqB,YACAhmC,KAAA0wD,MAAA,EAAA1wD,KAAA0wD,OAEAxzC,MAAA,SAAAzb,EAAAC,GACA,IAAAwtB,EAAA5nB,IAGA,GADA5F,MAAAD,QACAzB,KAAA4lC,KAAAlkC,IAAA1B,KAAA6lC,IAAA,CACA,OAAA7lC,KAAA2wD,QACA,OAAA3wD,KAAA2wD,OAAA,EAA8B3wD,KAAA0wD,MAAA1wD,KAAAuwD,SAAAtqB,OAAAxkC,EAAAC,GAAA1B,KAAAuwD,SAAAxqB,OAAAtkC,EAAAC,GAAsE,MACpG,OAAA1B,KAAA2wD,OAAA,EAA8B,MAC9B,OAAA3wD,KAAA2wD,OAAA,EAA8B+1B,GAAA1mF,KAAAymF,GAAAzmF,KAAAkvB,EAAAo3D,GAAAtmF,KAAAyB,EAAAC,IAAAwtB,GAAwD,MACtF,QAAAw3D,GAAA1mF,UAAAknF,IAAAh4D,EAAAo3D,GAAAtmF,KAAAyB,EAAAC,IAGA1B,KAAA0lC,IAAA1lC,KAAA4lC,IAAA5lC,KAAA4lC,IAAAnkC,EACAzB,KAAA2lC,IAAA3lC,KAAA6lC,IAAA7lC,KAAA6lC,IAAAnkC,EACA1B,KAAAknF,IAAAh4D,MAQA03D,GAAAzoF,UAAAlB,OAAAY,OAAA8oF,GAAAxoF,YAAA+e,MAAA,SAAAzb,EAAAC,GACAilF,GAAAxoF,UAAA+e,MAAAxgB,KAAAsD,KAAA0B,EAAAD,IAOAolF,GAAA1oF,WACA4nC,OAAA,SAAAtkC,EAAAC,GAA0B1B,KAAAuwD,SAAAxqB,OAAArkC,EAAAD,IAC1BukC,UAAA,WAAyBhmC,KAAAuwD,SAAAvqB,aACzBC,OAAA,SAAAxkC,EAAAC,GAA0B1B,KAAAuwD,SAAAtqB,OAAAvkC,EAAAD,IAC1B0kC,cAAA,SAAAngC,EAAAE,EAAAD,EAAAE,EAAA1E,EAAAC,GAAiD1B,KAAAuwD,SAAApqB,cAAAjgC,EAAAF,EAAAG,EAAAF,EAAAvE,EAAAD,KC1FjDulF,GAAA7oF,WACAghF,UAAA,WACAn/E,KAAA0wD,MAAA,GAEA0uB,QAAA,WACAp/E,KAAA0wD,MAAAppD,KAEAi2C,UAAA,WACAv9C,KAAAizC,MACAjzC,KAAAkzC,OAEAsK,QAAA,WACA,IAAA/7C,EAAAzB,KAAAizC,GACAvxC,EAAA1B,KAAAkzC,GACAl1C,EAAAyD,EAAA0C,OAEA,GAAAnG,EAEA,GADAgC,KAAA0wD,MAAA1wD,KAAAuwD,SAAAtqB,OAAAxkC,EAAA,GAAAC,EAAA,IAAA1B,KAAAuwD,SAAAxqB,OAAAtkC,EAAA,GAAAC,EAAA,IACA,IAAA1D,EACAgC,KAAAuwD,SAAAtqB,OAAAxkC,EAAA,GAAAC,EAAA,SAIA,IAFA,IAAAylF,EAAAF,GAAAxlF,GACA2lF,EAAAH,GAAAvlF,GACAgH,EAAA,EAAAC,EAAA,EAAgCA,EAAA3K,IAAQ0K,IAAAC,EACxC3I,KAAAuwD,SAAApqB,cAAAghD,EAAA,GAAAz+E,GAAA0+E,EAAA,GAAA1+E,GAAAy+E,EAAA,GAAAz+E,GAAA0+E,EAAA,GAAA1+E,GAAAjH,EAAAkH,GAAAjH,EAAAiH,KAKA3I,KAAA0wD,OAAA,IAAA1wD,KAAA0wD,OAAA,IAAA1yD,IAAAgC,KAAAuwD,SAAAvqB,YACAhmC,KAAA0wD,MAAA,EAAA1wD,KAAA0wD,MACA1wD,KAAAizC,GAAAjzC,KAAAkzC,GAAA,MAEAh2B,MAAA,SAAAzb,EAAAC,GACA1B,KAAAizC,GAAAlwC,MAAAtB,GACAzB,KAAAkzC,GAAAnwC,MAAArB,KAuBA,IAAA2lF,GAAA,SAAAj4E,GACA,WAAA43E,GAAA53E,IC/DA,SAAAk4E,GAAAl4E,EAAA3R,GACAuC,KAAAuwD,SAAAnhD,EACApP,KAAAunF,GAAA9pF,EAGA6pF,GAAAnpF,WACAghF,UAAA,WACAn/E,KAAA0wD,MAAA,GAEA0uB,QAAA,WACAp/E,KAAA0wD,MAAAppD,KAEAi2C,UAAA,WACAv9C,KAAAizC,GAAAjzC,KAAAkzC,GAAA5rC,IACAtH,KAAA2wD,OAAA,GAEAnT,QAAA,WACA,EAAAx9C,KAAAunF,IAAAvnF,KAAAunF,GAAA,OAAAvnF,KAAA2wD,QAAA3wD,KAAAuwD,SAAAtqB,OAAAjmC,KAAAizC,GAAAjzC,KAAAkzC,KACAlzC,KAAA0wD,OAAA,IAAA1wD,KAAA0wD,OAAA,IAAA1wD,KAAA2wD,SAAA3wD,KAAAuwD,SAAAvqB,YACAhmC,KAAA0wD,OAAA,IAAA1wD,KAAAunF,GAAA,EAAAvnF,KAAAunF,GAAAvnF,KAAA0wD,MAAA,EAAA1wD,KAAA0wD,QAEAxzC,MAAA,SAAAzb,EAAAC,GAEA,OADAD,KAAAC,KACA1B,KAAA2wD,QACA,OAAA3wD,KAAA2wD,OAAA,EAA8B3wD,KAAA0wD,MAAA1wD,KAAAuwD,SAAAtqB,OAAAxkC,EAAAC,GAAA1B,KAAAuwD,SAAAxqB,OAAAtkC,EAAAC,GAAsE,MACpG,OAAA1B,KAAA2wD,OAAA,EACA,QACA,GAAA3wD,KAAAunF,IAAA,EACAvnF,KAAAuwD,SAAAtqB,OAAAjmC,KAAAizC,GAAAvxC,GACA1B,KAAAuwD,SAAAtqB,OAAAxkC,EAAAC,OACS,CACT,IAAAsE,EAAAhG,KAAAizC,IAAA,EAAAjzC,KAAAunF,IAAA9lF,EAAAzB,KAAAunF,GACAvnF,KAAAuwD,SAAAtqB,OAAAjgC,EAAAhG,KAAAkzC,IACAlzC,KAAAuwD,SAAAtqB,OAAAjgC,EAAAtE,IAKA1B,KAAAizC,GAAAxxC,EAAAzB,KAAAkzC,GAAAxxC,IAIA,IAAA8lF,GAAA,SAAAp4E,GACA,WAAAk4E,GAAAl4E,EAAA,KAGA,SAAAq4E,GAAAr4E,GACA,WAAAk4E,GAAAl4E,EAAA,GAGA,SAAAs4E,GAAAt4E,GACA,WAAAk4E,GAAAl4E,EAAA,GCnDA,IAAAu4E,GAAA,SAAAC,EAAA13E,GACA,IAAAlS,EAAA4pF,EAAAzjF,QAAA,EACA,QAAA0I,EAAAy1B,EAAAtkC,EAAAzB,EAAA,EAAAgmC,EAAAqlD,EAAA13E,EAAA,IAAAvT,EAAA4lC,EAAAp+B,OAAiE5H,EAAAyB,IAAOzB,EAExE,IADA+lC,EAAAC,IAAAqlD,EAAA13E,EAAA3T,IACAsQ,EAAA,EAAeA,EAAAlQ,IAAOkQ,EACtB01B,EAAA11B,GAAA,IAAA01B,EAAA11B,GAAA,GAAAtD,MAAA+4B,EAAAz1B,GAAA,IAAAy1B,EAAAz1B,GAAA,GAAAy1B,EAAAz1B,GAAA,ICLAg7E,GAAA,SAAAD,GAEA,IADA,IAAA5pF,EAAA4pF,EAAAzjF,OAAAnH,EAAA,IAAA+D,MAAA/C,KACAA,GAAA,GAAAhB,EAAAgB,KACA,OAAAhB,GCEA,SAAA8qF,GAAAjrF,EAAAiB,GACA,OAAAjB,EAAAiB,GAGA,IAAAiqF,GAAA,WACA,IAAAj/C,EAAA4yC,OACAxrE,EAAA23E,GACAj4E,EAAA+3E,GACAnqF,EAAAsqF,GAEA,SAAAE,EAAApoF,GACA,IACArD,EAIA0rF,EALAC,EAAAp/C,EAAAz5B,MAAArP,KAAAkE,WAEAvH,EAAAiD,EAAAuE,OACAnG,EAAAkqF,EAAA/jF,OACAgkF,EAAA,IAAApnF,MAAA/C,GAGA,IAAAzB,EAAA,EAAeA,EAAAyB,IAAOzB,EAAA,CACtB,QAAA6rF,EAAAC,EAAAH,EAAA3rF,GAAA+rF,EAAAH,EAAA5rF,GAAA,IAAAwE,MAAApE,GAAAkQ,EAAA,EAAiEA,EAAAlQ,IAAOkQ,EACxEy7E,EAAAz7E,GAAAu7E,GAAA,GAAA5qF,EAAAoC,EAAAiN,GAAAw7E,EAAAx7E,EAAAjN,IACAwoF,EAAAxoF,OAAAiN,GAEAy7E,EAAAxqF,IAAAuqF,EAGA,IAAA9rF,EAAA,EAAA0rF,EAAA/3E,EAAAi4E,GAA+B5rF,EAAAyB,IAAOzB,EACtC4rF,EAAAF,EAAA1rF,IAAA6b,MAAA7b,EAIA,OADAqT,EAAAu4E,EAAAF,GACAE,EAmBA,OAhBAH,EAAAl/C,KAAA,SAAA78B,GACA,OAAA/H,UAAAC,QAAA2kC,EAAA,mBAAA78B,IAAAyvE,GAAA2F,GAAA3kF,KAAAuP,IAAA+7E,GAAAl/C,GAGAk/C,EAAAxqF,MAAA,SAAAyO,GACA,OAAA/H,UAAAC,QAAA3G,EAAA,mBAAAyO,IAAAyvE,IAAAzvE,GAAA+7E,GAAAxqF,GAGAwqF,EAAA93E,MAAA,SAAAjE,GACA,OAAA/H,UAAAC,QAAA+L,EAAA,MAAAjE,EAAA47E,GAAA,mBAAA57E,IAAAyvE,GAAA2F,GAAA3kF,KAAAuP,IAAA+7E,GAAA93E,GAGA83E,EAAAp4E,OAAA,SAAA3D,GACA,OAAA/H,UAAAC,QAAAyL,EAAA,MAAA3D,EAAA07E,GAAA17E,EAAA+7E,GAAAp4E,GAGAo4E,GCrDAO,GAAA,SAAAX,EAAA13E,GACA,IAAAlS,EAAA4pF,EAAAzjF,QAAA,GACA,QAAA5H,EAAAyB,EAAA0D,EAAAmL,EAAA,EAAAlQ,EAAAirF,EAAA,GAAAzjF,OAAgD0I,EAAAlQ,IAAOkQ,EAAA,CACvD,IAAAnL,EAAAnF,EAAA,EAAmBA,EAAAyB,IAAOzB,EAAAmF,GAAAkmF,EAAArrF,GAAAsQ,GAAA,MAC1B,GAAAnL,EAAA,IAAAnF,EAAA,EAAsBA,EAAAyB,IAAOzB,EAAAqrF,EAAArrF,GAAAsQ,GAAA,IAAAnL,EAE7BimF,GAAAC,EAAA13E,KCRAs4E,GAAA,SAAAZ,EAAA13E,GACA,IAAAlS,EAAA4pF,EAAAzjF,QAAA,EACA,QAAA5H,EAAAM,EAAAyiB,EAAAuzB,EAAA41C,EAAAzqF,EAAA6O,EAAA,EAAAlQ,EAAAirF,EAAA13E,EAAA,IAAA/L,OAAmE0I,EAAAlQ,IAAOkQ,EAC1E,IAAAgmC,EAAA41C,EAAA,EAAAlsF,EAAA,EAA4BA,EAAAyB,IAAOzB,GACnC+iB,GAAAziB,EAAA+qF,EAAA13E,EAAA3T,IAAAsQ,IAAA,GAAAhQ,EAAA,QACAA,EAAA,GAAAg2C,EAAAh2C,EAAA,GAAAg2C,GAAAvzB,GACOA,EAAA,GACPziB,EAAA,GAAA4rF,EAAA5rF,EAAA,GAAA4rF,GAAAnpE,GAEAziB,EAAA,GAAAg2C,GCPA61C,GAAA,SAAAd,EAAA13E,GACA,IAAAlS,EAAA4pF,EAAAzjF,QAAA,GACA,QAAAnG,EAAA6O,EAAA,EAAAy1B,EAAAslD,EAAA13E,EAAA,IAAAvT,EAAA2lC,EAAAn+B,OAA0D0I,EAAAlQ,IAAOkQ,EAAA,CACjE,QAAAtQ,EAAA,EAAAmF,EAAA,EAA0BnF,EAAAyB,IAAOzB,EAAAmF,GAAAkmF,EAAArrF,GAAAsQ,GAAA,MACjCy1B,EAAAz1B,GAAA,IAAAy1B,EAAAz1B,GAAA,IAAAnL,EAAA,EAEAimF,GAAAC,EAAA13E,KCNAy4E,GAAA,SAAAf,EAAA13E,GACA,IAAAlS,EAAA4pF,EAAAzjF,QAAA,IAAAxH,GAAA2lC,EAAAslD,EAAA13E,EAAA,KAAA/L,QAAA,GACA,QAAAm+B,EAAA3lC,EAAAqB,EAAA0D,EAAA,EAAAmL,EAAA,EAAkCA,EAAAlQ,IAAOkQ,EAAA,CACzC,QAAAtQ,EAAA,EAAAgmC,EAAA,EAAAqmD,EAAA,EAAmCrsF,EAAAyB,IAAOzB,EAAA,CAK1C,IAJA,IAAA+rF,EAAAV,EAAA13E,EAAA3T,IACAssF,EAAAP,EAAAz7E,GAAA,MAEAi8E,GAAAD,GADAP,EAAAz7E,EAAA,WACA,EACApI,EAAA,EAAqBA,EAAAlI,IAAOkI,EAAA,CAC5B,IAAAs3D,EAAA6rB,EAAA13E,EAAAzL,IAGAqkF,IAFA/sB,EAAAlvD,GAAA,QACAkvD,EAAAlvD,EAAA,UAGA01B,GAAAsmD,EAAAD,GAAAE,EAAAD,EAEAvmD,EAAAz1B,EAAA,OAAAy1B,EAAAz1B,EAAA,MAAAnL,EACA6gC,IAAA7gC,GAAAknF,EAAArmD,GAEAD,EAAAz1B,EAAA,OAAAy1B,EAAAz1B,EAAA,MAAAnL,EACAimF,GAAAC,EAAA13E,KCpBA64E,GAAA,SAAAnB,GACA,IAAAnnB,EAAAmnB,EAAArnF,IAAAyoF,IACA,OAAAnB,GAAAD,GAAA5gF,KAAA,SAAAR,EAAAC,GAA2C,OAAAg6D,EAAAj6D,GAAAi6D,EAAAh6D,MAG3C,SAAAuiF,GAAApB,GAEA,IADA,IAAAn+E,EAAAnL,EAAA,EAAA/B,GAAA,EAAAyB,EAAA4pF,EAAAzjF,SACA5H,EAAAyB,IAAAyL,GAAAm+E,EAAArrF,GAAA,MAAA+B,GAAAmL,GACA,OAAAnL,ECRA,IAAA2qF,GAAA,SAAArB,GACA,OAAAmB,GAAAnB,GAAAn9E,WCAAy+E,GAAA,SAAAtB,GACA,IACArrF,EACAsQ,EAFA7O,EAAA4pF,EAAAzjF,OAGAs8D,EAAAmnB,EAAArnF,IAAAyoF,IACA94E,EAAA23E,GAAAD,GAAA5gF,KAAA,SAAAR,EAAAC,GAAgD,OAAAg6D,EAAAh6D,GAAAg6D,EAAAj6D,KAChDmX,EAAA,EACAm1B,EAAA,EACAq2C,KACAC,KAEA,IAAA7sF,EAAA,EAAaA,EAAAyB,IAAOzB,EACpBsQ,EAAAqD,EAAA3T,GACAohB,EAAAm1B,GACAn1B,GAAA8iD,EAAA5zD,GACAs8E,EAAApmF,KAAA8J,KAEAimC,GAAA2tB,EAAA5zD,GACAu8E,EAAArmF,KAAA8J,IAIA,OAAAu8E,EAAA3+E,UAAAzI,OAAAmnF,ICvBAE,GAAA,SAAAzB,GACA,OAAAC,GAAAD,GAAAn9E,WCHA6+E,GAAA,SAAA7nF,GACA,kBACA,OAAAA,ICFA,SAAA8nF,GAAA1sF,GACA,OAAAA,EAAA,GAGA,SAAA2sF,GAAA3sF,GACA,OAAAA,EAAA,GCLA,SAAA4sF,KACAzpF,KAAAiM,EAAA,KAGA,SAAAy9E,GAAAt0E,GACAA,EAAAu6D,EACAv6D,EAAAmZ,EACAnZ,EAAA43D,EACA53D,EAAAu0E,EACAv0E,EAAAw0E,EACAx0E,EAAA4tB,EAAA,KAuLA,SAAA6mD,GAAAp3C,EAAAr9B,GACA,IAAA/W,EAAA+W,EACA0c,EAAA1c,EAAAu0E,EACAn1E,EAAAnW,EAAAsxE,EAEAn7D,EACAA,EAAAw4D,IAAA3uE,EAAAmW,EAAAw4D,EAAAl7C,EACAtd,EAAAm1E,EAAA73D,EAEA2gB,EAAAxmC,EAAA6lB,EAGAA,EAAA69C,EAAAn7D,EACAnW,EAAAsxE,EAAA79C,EACAzzB,EAAAsrF,EAAA73D,EAAAk7C,EACA3uE,EAAAsrF,IAAAtrF,EAAAsrF,EAAAha,EAAAtxE,GACAyzB,EAAAk7C,EAAA3uE,EAGA,SAAAyrF,GAAAr3C,EAAAr9B,GACA,IAAA/W,EAAA+W,EACA0c,EAAA1c,EAAA43D,EACAx4D,EAAAnW,EAAAsxE,EAEAn7D,EACAA,EAAAw4D,IAAA3uE,EAAAmW,EAAAw4D,EAAAl7C,EACAtd,EAAAm1E,EAAA73D,EAEA2gB,EAAAxmC,EAAA6lB,EAGAA,EAAA69C,EAAAn7D,EACAnW,EAAAsxE,EAAA79C,EACAzzB,EAAA2uE,EAAAl7C,EAAA63D,EACAtrF,EAAA2uE,IAAA3uE,EAAA2uE,EAAA2C,EAAAtxE,GACAyzB,EAAA63D,EAAAtrF,EAGA,SAAA0rF,GAAA30E,GACA,KAAAA,EAAA43D,GAAA53D,IAAA43D,EACA,OAAA53D,EA5NAq0E,GAAAtrF,WACAsT,YAAAg4E,GAEAh5E,OAAA,SAAAu5E,EAAA50E,GACA,IAAAZ,EAAAy1E,EAAAC,EAEA,GAAAF,EAAA,CAKA,GAJA50E,EAAAw0E,EAAAI,EACA50E,EAAA4tB,EAAAgnD,EAAAhnD,EACAgnD,EAAAhnD,IAAAgnD,EAAAhnD,EAAA4mD,EAAAx0E,GACA40E,EAAAhnD,EAAA5tB,EACA40E,EAAAL,EAAA,CAEA,IADAK,IAAAL,EACAK,EAAAhd,GAAAgd,IAAAhd,EACAgd,EAAAhd,EAAA53D,OAEA40E,EAAAL,EAAAv0E,EAEAZ,EAAAw1E,OACKhqF,KAAAiM,GACL+9E,EAAAD,GAAA/pF,KAAAiM,GACAmJ,EAAAw0E,EAAA,KACAx0E,EAAA4tB,EAAAgnD,EACAA,EAAAJ,EAAAI,EAAAhd,EAAA53D,EACAZ,EAAAw1E,IAEA50E,EAAAw0E,EAAAx0E,EAAA4tB,EAAA,KACAhjC,KAAAiM,EAAAmJ,EACAZ,EAAA,MAOA,IALAY,EAAA43D,EAAA53D,EAAAu0E,EAAA,KACAv0E,EAAAu6D,EAAAn7D,EACAY,EAAAmZ,GAAA,EAEAy7D,EAAA50E,EACAZ,KAAA+Z,GAEA/Z,KADAy1E,EAAAz1E,EAAAm7D,GACA3C,GACAkd,EAAAD,EAAAN,IACAO,EAAA37D,GACA/Z,EAAA+Z,EAAA27D,EAAA37D,GAAA,EACA07D,EAAA17D,GAAA,EACAy7D,EAAAC,IAEAD,IAAAx1E,EAAAm1E,IACAE,GAAA7pF,KAAAwU,GAEAA,GADAw1E,EAAAx1E,GACAm7D,GAEAn7D,EAAA+Z,GAAA,EACA07D,EAAA17D,GAAA,EACAu7D,GAAA9pF,KAAAiqF,KAGAC,EAAAD,EAAAjd,IACAkd,EAAA37D,GACA/Z,EAAA+Z,EAAA27D,EAAA37D,GAAA,EACA07D,EAAA17D,GAAA,EACAy7D,EAAAC,IAEAD,IAAAx1E,EAAAw4D,IACA8c,GAAA9pF,KAAAwU,GAEAA,GADAw1E,EAAAx1E,GACAm7D,GAEAn7D,EAAA+Z,GAAA,EACA07D,EAAA17D,GAAA,EACAs7D,GAAA7pF,KAAAiqF,IAGAz1E,EAAAw1E,EAAAra,EAEA3vE,KAAAiM,EAAAsiB,GAAA,GAGA1d,OAAA,SAAAuE,GACAA,EAAA4tB,IAAA5tB,EAAA4tB,EAAA4mD,EAAAx0E,EAAAw0E,GACAx0E,EAAAw0E,IAAAx0E,EAAAw0E,EAAA5mD,EAAA5tB,EAAA4tB,GACA5tB,EAAA4tB,EAAA5tB,EAAAw0E,EAAA,KAEA,IACAO,EAGAn1E,EACA2U,EALAnV,EAAAY,EAAAu6D,EAEAhoE,EAAAyN,EAAA43D,EACAjlE,EAAAqN,EAAAu0E,EAsCA,GAhCA30E,EAFArN,EACAI,EACAgiF,GAAAhiF,GADAJ,EADAI,EAIAyM,EACAA,EAAAw4D,IAAA53D,EAAAZ,EAAAw4D,EAAAh4D,EACAR,EAAAm1E,EAAA30E,EAEAhV,KAAAiM,EAAA+I,EAGArN,GAAAI,GACA4hB,EAAA3U,EAAAuZ,EACAvZ,EAAAuZ,EAAAnZ,EAAAmZ,EACAvZ,EAAAg4D,EAAArlE,EACAA,EAAAgoE,EAAA36D,EACAA,IAAAjN,GACAyM,EAAAQ,EAAA26D,EACA36D,EAAA26D,EAAAv6D,EAAAu6D,EACAv6D,EAAAJ,EAAA20E,EACAn1E,EAAAw4D,EAAA53D,EACAJ,EAAA20E,EAAA5hF,EACAA,EAAA4nE,EAAA36D,IAEAA,EAAA26D,EAAAn7D,EACAA,EAAAQ,EACAI,EAAAJ,EAAA20E,KAGAhgE,EAAAvU,EAAAmZ,EACAnZ,EAAAJ,GAGAI,MAAAu6D,EAAAn7D,IACAmV,EACA,GAAAvU,KAAAmZ,EAAyBnZ,EAAAmZ,GAAA,MAAzB,CAEA,GACA,GAAAnZ,IAAApV,KAAAiM,EAAA,MACA,GAAAmJ,IAAAZ,EAAAw4D,GAQA,IAPAmd,EAAA31E,EAAAm1E,GACAp7D,IACA47D,EAAA57D,GAAA,EACA/Z,EAAA+Z,GAAA,EACAs7D,GAAA7pF,KAAAwU,GACA21E,EAAA31E,EAAAm1E,GAEAQ,EAAAnd,GAAAmd,EAAAnd,EAAAz+C,GACA47D,EAAAR,GAAAQ,EAAAR,EAAAp7D,EAAA,CACA47D,EAAAR,GAAAQ,EAAAR,EAAAp7D,IACA47D,EAAAnd,EAAAz+C,GAAA,EACA47D,EAAA57D,GAAA,EACAu7D,GAAA9pF,KAAAmqF,GACAA,EAAA31E,EAAAm1E,GAEAQ,EAAA57D,EAAA/Z,EAAA+Z,EACA/Z,EAAA+Z,EAAA47D,EAAAR,EAAAp7D,GAAA,EACAs7D,GAAA7pF,KAAAwU,GACAY,EAAApV,KAAAiM,EACA,YAUA,IAPAk+E,EAAA31E,EAAAw4D,GACAz+C,IACA47D,EAAA57D,GAAA,EACA/Z,EAAA+Z,GAAA,EACAu7D,GAAA9pF,KAAAwU,GACA21E,EAAA31E,EAAAw4D,GAEAmd,EAAAnd,GAAAmd,EAAAnd,EAAAz+C,GACA47D,EAAAR,GAAAQ,EAAAR,EAAAp7D,EAAA,CACA47D,EAAAnd,GAAAmd,EAAAnd,EAAAz+C,IACA47D,EAAAR,EAAAp7D,GAAA,EACA47D,EAAA57D,GAAA,EACAs7D,GAAA7pF,KAAAmqF,GACAA,EAAA31E,EAAAw4D,GAEAmd,EAAA57D,EAAA/Z,EAAA+Z,EACA/Z,EAAA+Z,EAAA47D,EAAAnd,EAAAz+C,GAAA,EACAu7D,GAAA9pF,KAAAwU,GACAY,EAAApV,KAAAiM,EACA,MAGAk+E,EAAA57D,GAAA,EACAnZ,EAAAZ,EACAA,IAAAm7D,SACKv6D,EAAAmZ,GAELnZ,MAAAmZ,GAAA,MA+CA,IAAA67D,GAAA,GC1OA,SAAAC,GAAA1iF,EAAAI,EAAAonB,EAAAC,GACA,IAAAk7D,GAAA,WACAlyE,EAAAmyE,GAAAxnF,KAAAunF,GAAA,EAOA,OANAA,EAAA3iF,OACA2iF,EAAAviF,QACAonB,GAAAq7D,GAAAF,EAAA3iF,EAAAI,EAAAonB,GACAC,GAAAo7D,GAAAF,EAAAviF,EAAAJ,EAAAynB,GACAq7D,GAAA9iF,EAAAyQ,OAAAsyE,UAAA3nF,KAAAqV,GACAqyE,GAAA1iF,EAAAqQ,OAAAsyE,UAAA3nF,KAAAqV,GACAkyE,EAGA,SAAAK,GAAAhjF,EAAAwnB,EAAAC,GACA,IAAAk7D,GAAAn7D,EAAAC,GAEA,OADAk7D,EAAA3iF,OACA2iF,EAGA,SAAAE,GAAAF,EAAA3iF,EAAAI,EAAA6iF,GACAN,EAAA,IAAAA,EAAA,GAIGA,EAAA3iF,OAAAI,EACHuiF,EAAA,GAAAM,EAEAN,EAAA,GAAAM,GANAN,EAAA,GAAAM,EACAN,EAAA3iF,OACA2iF,EAAAviF,SASA,SAAA8iF,GAAAP,EAAA3+E,EAAA06B,EAAArgC,EAAAE,GACA,IAUA7I,EAVAmJ,EAAA8jF,EAAA,GACA7jF,EAAA6jF,EAAA,GACAphC,EAAA1iD,EAAA,GACA2iD,EAAA3iD,EAAA,GAGAoxB,EAAA,EACA1I,EAAA,EACA7P,EAJA5Y,EAAA,GAIAyiD,EACA5pC,EAJA7Y,EAAA,GAIA0iD,EAIA,GADA9rD,EAAAsO,EAAAu9C,EACA7pC,KAAAhiB,EAAA,IAEA,GADAA,GAAAgiB,EACAA,EAAA,GACA,GAAAhiB,EAAAu6B,EAAA,OACAv6B,EAAA6xB,MAAA7xB,QACG,GAAAgiB,EAAA,GACH,GAAAhiB,EAAA6xB,EAAA,OACA7xB,EAAAu6B,MAAAv6B,GAIA,GADAA,EAAA2I,EAAAkjD,EACA7pC,KAAAhiB,EAAA,IAEA,GADAA,GAAAgiB,EACAA,EAAA,GACA,GAAAhiB,EAAA6xB,EAAA,OACA7xB,EAAAu6B,MAAAv6B,QACG,GAAAgiB,EAAA,GACH,GAAAhiB,EAAAu6B,EAAA,OACAv6B,EAAA6xB,MAAA7xB,GAIA,GADAA,EAAAgpC,EAAA8iB,EACA7pC,KAAAjiB,EAAA,IAEA,GADAA,GAAAiiB,EACAA,EAAA,GACA,GAAAjiB,EAAAu6B,EAAA,OACAv6B,EAAA6xB,MAAA7xB,QACG,GAAAiiB,EAAA,GACH,GAAAjiB,EAAA6xB,EAAA,OACA7xB,EAAAu6B,MAAAv6B,GAIA,GADAA,EAAA6I,EAAAijD,EACA7pC,KAAAjiB,EAAA,IAEA,GADAA,GAAAiiB,EACAA,EAAA,GACA,GAAAjiB,EAAA6xB,EAAA,OACA7xB,EAAAu6B,MAAAv6B,QACG,GAAAiiB,EAAA,GACH,GAAAjiB,EAAAu6B,EAAA,OACAv6B,EAAA6xB,MAAA7xB,GAGA,QAAAu6B,EAAA,GAAA1I,EAAA,KAEA0I,EAAA,IAAA0yD,EAAA,IAAAphC,EAAAtxB,EAAAvY,EAAA8pC,EAAAvxB,EAAAtY,IACA4P,EAAA,IAAAo7D,EAAA,IAAAphC,EAAAh6B,EAAA7P,EAAA8pC,EAAAj6B,EAAA5P,KACA,OAGA,SAAAwrE,GAAAR,EAAA3+E,EAAA06B,EAAArgC,EAAAE,GACA,IAAAkpB,EAAAk7D,EAAA,GACA,GAAAl7D,EAAA,SAEA,IASA27D,EACAC,EAVA77D,EAAAm7D,EAAA,GACA3iF,EAAA2iF,EAAA3iF,KACAI,EAAAuiF,EAAAviF,MACAkjF,EAAAtjF,EAAA,GACAujF,EAAAvjF,EAAA,GACAwjF,EAAApjF,EAAA,GACAqjF,EAAArjF,EAAA,GACA2uC,GAAAu0C,EAAAE,GAAA,EACAx0C,GAAAu0C,EAAAE,GAAA,EAIA,GAAAA,IAAAF,EAAA,CACA,GAAAx0C,EAAA/qC,GAAA+qC,GAAA1wC,EAAA,OACA,GAAAilF,EAAAE,EAAA,CACA,GAAAh8D,GACA,GAAAA,EAAA,IAAAjpB,EAAA,YADAipB,GAAAunB,EAAArQ,GAEAjX,GAAAsnB,EAAAxwC,OACK,CACL,GAAAipB,GACA,GAAAA,EAAA,GAAAkX,EAAA,YADAlX,GAAAunB,EAAAxwC,GAEAkpB,GAAAsnB,EAAArQ,SAKA,GADA2kD,EAAAr0C,GADAo0C,GAAAE,EAAAE,IAAAC,EAAAF,IACAx0C,EACAq0C,GAAA,GAAAA,EAAA,EACA,GAAAE,EAAAE,EAAA,CACA,GAAAh8D,GACA,GAAAA,EAAA,IAAAjpB,EAAA,YADAipB,IAAAkX,EAAA2kD,GAAAD,EAAA1kD,GAEAjX,IAAAlpB,EAAA8kF,GAAAD,EAAA7kF,OACO,CACP,GAAAipB,GACA,GAAAA,EAAA,GAAAkX,EAAA,YADAlX,IAAAjpB,EAAA8kF,GAAAD,EAAA7kF,GAEAkpB,IAAAiX,EAAA2kD,GAAAD,EAAA1kD,QAGA,GAAA6kD,EAAAE,EAAA,CACA,GAAAj8D,GACA,GAAAA,EAAA,IAAAnpB,EAAA,YADAmpB,GAAAxjB,EAAAo/E,EAAAp/E,EAAAq/E,GAEA57D,GAAAppB,EAAA+kF,EAAA/kF,EAAAglF,OACO,CACP,GAAA77D,GACA,GAAAA,EAAA,GAAAxjB,EAAA,YADAwjB,GAAAnpB,EAAA+kF,EAAA/kF,EAAAglF,GAEA57D,GAAAzjB,EAAAo/E,EAAAp/E,EAAAq/E,GAOA,OAFAV,EAAA,GAAAn7D,EACAm7D,EAAA,GAAAl7D,GACA,EC9IA,SAAAi8D,GAAAC,EAAAhB,GACA,IAAAiB,EAAAD,EAAAC,KACAC,EAAAlB,EAAA3iF,KACA8jF,EAAAnB,EAAAviF,MAEA,OADAwjF,IAAAE,MAAAD,IAAAD,GACAE,EAAA/kF,KAAA0nB,MAAAq9D,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,KACAD,IAAAC,KAAAlB,EAAA,GAAAmB,EAAAnB,EAAA,KACAkB,EAAAlB,EAAA,GAAAmB,EAAAnB,EAAA,IACA5jF,KAAA0nB,MAAAo9D,EAAA,GAAAC,EAAA,GAAAA,EAAA,GAAAD,EAAA,KAGA,SAAAE,GAAAJ,EAAAhB,GACA,OAAAA,MAAA3iF,OAAA2jF,EAAAC,OAGA,SAAAI,GAAAL,EAAAhB,GACA,OAAAA,MAAA3iF,OAAA2jF,EAAAC,OCvBA,IAEAK,GAFAC,MAaA,SAAAC,GAAA1kD,GACA,IAAA2kD,EAAA3kD,EAAAwiD,EACAoC,EAAA5kD,EAAApE,EAEA,GAAA+oD,GAAAC,EAAA,CAEA,IAAAC,EAAAF,EAAAR,KACAW,EAAA9kD,EAAAmkD,KACAY,EAAAH,EAAAT,KAEA,GAAAU,IAAAE,EAAA,CAEA,IAAAtN,EAAAqN,EAAA,GACApN,EAAAoN,EAAA,GACAhjC,EAAA+iC,EAAA,GAAApN,EACA11B,EAAA8iC,EAAA,GAAAnN,EACA/6E,EAAAooF,EAAA,GAAAtN,EACA76E,EAAAmoF,EAAA,GAAArN,EAEAjiF,EAAA,GAAAqsD,EAAAllD,EAAAmlD,EAAAplD,GACA,KAAAlH,IAAAuvF,IAAA,CAEA,IAAAC,EAAAnjC,IAAAC,IACAmjC,EAAAvoF,IAAAC,IACAvC,GAAAuC,EAAAqoF,EAAAljC,EAAAmjC,GAAAzvF,EACA6E,GAAAwnD,EAAAojC,EAAAvoF,EAAAsoF,GAAAxvF,EAEAiG,EAAA+oF,GAAA//E,OAAA,IApCA,WACA49E,GAAA1pF,MACAA,KAAAyB,EACAzB,KAAA0B,EACA1B,KAAAonC,IACApnC,KAAAurF,KACAvrF,KAAAgE,GAAA,MA+BAlB,EAAAskC,MACAtkC,EAAAyoF,KAAAW,EACAppF,EAAArB,IAAAo9E,EACA/7E,EAAApB,GAAAoB,EAAAkB,GAAAtC,EAAAo9E,GAAAp4E,KAAAC,KAAAlF,IAAAC,KAEA0lC,EAAAtkC,SAKA,IAHA,IAAAqZ,EAAA,KACA/G,EAAAm3E,GAAAtgF,EAEAmJ,GACA,GAAAtS,EAAApB,EAAA0T,EAAA1T,GAAAoB,EAAApB,IAAA0T,EAAA1T,GAAAoB,EAAArB,GAAA2T,EAAA3T,EAAA,CACA,IAAA2T,EAAA43D,EACA,CAAY7wD,EAAA/G,EAAAw0E,EAAiB,MAD7Bx0E,IAAA43D,MAEK,CACL,IAAA53D,EAAAu0E,EACA,CAAYxtE,EAAA/G,EAAe,MAD3BA,IAAAu0E,EAKA4C,GAAA97E,OAAA0L,EAAArZ,GACAqZ,IAAAyvE,GAAA9oF,MAGA,SAAA0pF,GAAAplD,GACA,IAAAtkC,EAAAskC,EAAAtkC,OACAA,IACAA,EAAA8mF,IAAAgC,GAAA9oF,EAAAkgC,GACAupD,GAAA17E,OAAA/N,GACA+oF,GAAA9oF,KAAAD,GACA4mF,GAAA5mF,GACAskC,EAAAtkC,OAAA,MCrEA,IAAA2pF,MASA,SAAAC,GAAAnB,GACA,IAAAoB,EAAAF,GAAA3gF,OAAA,IARA,WACA49E,GAAA1pF,MACAA,KAAAsqF,KACAtqF,KAAAurF,KACAvrF,KAAA8C,OAAA,MAMA,OADA6pF,EAAApB,OACAoB,EAGA,SAAAC,GAAAD,GACAH,GAAAG,GACAE,GAAAh8E,OAAA87E,GACAF,GAAA1pF,KAAA4pF,GACAjD,GAAAiD,GAGA,SAAAG,GAAAH,GACA,IAAA7pF,EAAA6pF,EAAA7pF,OACArB,EAAAqB,EAAArB,EACAC,EAAAoB,EAAAkB,GACA4mF,GAAAnpF,EAAAC,GACAiZ,EAAAgyE,EAAA/C,EACA50E,EAAA23E,EAAA3pD,EACA+pD,GAAAJ,GAEAC,GAAAD,GAGA,IADA,IAAAZ,EAAApxE,EACAoxE,EAAAjpF,QACA4D,KAAAyE,IAAA1J,EAAAsqF,EAAAjpF,OAAArB,GAAAurF,IACAtmF,KAAAyE,IAAAzJ,EAAAqqF,EAAAjpF,OAAAkB,IAAAgpF,IACAryE,EAAAoxE,EAAAnC,EACAmD,EAAA9gD,QAAA8/C,GACAa,GAAAb,GACAA,EAAApxE,EAGAoyE,EAAA9gD,QAAA8/C,GACAS,GAAAT,GAGA,IADA,IAAAC,EAAAh3E,EACAg3E,EAAAlpF,QACA4D,KAAAyE,IAAA1J,EAAAuqF,EAAAlpF,OAAArB,GAAAurF,IACAtmF,KAAAyE,IAAAzJ,EAAAsqF,EAAAlpF,OAAAkB,IAAAgpF,IACAh4E,EAAAg3E,EAAAhpD,EACA+pD,EAAAhqF,KAAAipF,GACAY,GAAAZ,GACAA,EAAAh3E,EAGA+3E,EAAAhqF,KAAAipF,GACAQ,GAAAR,GAEA,IACAiB,EADAC,EAAAH,EAAA5oF,OAEA,IAAA8oF,EAAA,EAAgBA,EAAAC,IAAcD,EAC9BjB,EAAAe,EAAAE,GACAlB,EAAAgB,EAAAE,EAAA,GACAzC,GAAAwB,EAAA1B,KAAAyB,EAAAR,KAAAS,EAAAT,KAAAX,GAGAmB,EAAAgB,EAAA,IACAf,EAAAe,EAAAG,EAAA,IACA5C,KAAAD,GAAA0B,EAAAR,KAAAS,EAAAT,KAAA,KAAAX,GAEAkB,GAAAC,GACAD,GAAAE,GAGA,SAAAmB,GAAA5B,GASA,IARA,IAEAQ,EACAC,EACAoB,EACAC,EALA5rF,EAAA8pF,EAAA,GACA+B,EAAA/B,EAAA,GAKAn2E,EAAAy3E,GAAA5gF,EAEAmJ,GAEA,IADAg4E,EAAAG,GAAAn4E,EAAAk4E,GAAA7rF,GACAurF,GAAA53E,IAAA43D,MAAqC,CAErC,MADAqgB,EAAA5rF,EAAA+rF,GAAAp4E,EAAAk4E,IACAN,IAMO,CACPI,GAAAJ,IACAjB,EAAA32E,EAAAw0E,EACAoC,EAAA52E,GACSi4E,GAAAL,IACTjB,EAAA32E,EACA42E,EAAA52E,EAAA4tB,GAEA+oD,EAAAC,EAAA52E,EAEA,MAfA,IAAAA,EAAAu0E,EAAA,CACAoC,EAAA32E,EACA,MAEAA,IAAAu0E,GFhGA,SAAA4B,GACAd,GAAAc,EAAAnzE,QACAmzE,OACAb,cE6GA+C,CAAAlC,GACA,IAAAmC,EAAAhB,GAAAnB,GAGA,GAFAsB,GAAAp8E,OAAAs7E,EAAA2B,GAEA3B,GAAAC,EAAA,CAEA,GAAAD,IAAAC,EAOA,OANAQ,GAAAT,GACAC,EAAAU,GAAAX,EAAAR,MACAsB,GAAAp8E,OAAAi9E,EAAA1B,GACA0B,EAAApD,KAAA0B,EAAA1B,KAAAD,GAAA0B,EAAAR,KAAAmC,EAAAnC,MACAO,GAAAC,QACAD,GAAAE,GAIA,GAAAA,EAAA,CAMAQ,GAAAT,GACAS,GAAAR,GAEA,IAAAC,EAAAF,EAAAR,KACAriC,EAAA+iC,EAAA,GACA9iC,EAAA8iC,EAAA,GACApN,EAAA0M,EAAA,GAAAriC,EACA41B,EAAAyM,EAAA,GAAApiC,EACAgjC,EAAAH,EAAAT,KACAxnF,EAAAooF,EAAA,GAAAjjC,EACAllD,EAAAmoF,EAAA,GAAAhjC,EACAtsD,EAAA,GAAAgiF,EAAA76E,EAAA86E,EAAA/6E,GACA4pF,EAAA9O,IAAAC,IACAwN,EAAAvoF,IAAAC,IACA4mF,IAAA5mF,EAAA2pF,EAAA7O,EAAAwN,GAAAzvF,EAAAqsD,GAAA21B,EAAAyN,EAAAvoF,EAAA4pF,GAAA9wF,EAAAssD,GAEAqhC,GAAAwB,EAAA1B,KAAA2B,EAAAE,EAAAvB,GACA8C,EAAApD,KAAAD,GAAA4B,EAAAV,EAAA,KAAAX,GACAoB,EAAA1B,KAAAD,GAAAkB,EAAAY,EAAA,KAAAvB,GACAkB,GAAAC,GACAD,GAAAE,QAzBA0B,EAAApD,KAAAD,GAAA0B,EAAAR,KAAAmC,EAAAnC,OA4BA,SAAAgC,GAAAnmD,EAAAkmD,GACA,IAAA/B,EAAAnkD,EAAAmkD,KACAqC,EAAArC,EAAA,GACAsC,EAAAtC,EAAA,GACAuC,EAAAD,EAAAP,EAEA,IAAAQ,EAAA,OAAAF,EAEA,IAAA7B,EAAA3kD,EAAAwiD,EACA,IAAAmC,EAAA,OAAAxqF,IAGA,IAAAwsF,GADAxC,EAAAQ,EAAAR,MACA,GACAyC,EAAAzC,EAAA,GACA0C,EAAAD,EAAAV,EAEA,IAAAW,EAAA,OAAAF,EAEA,IAAAG,EAAAH,EAAAH,EACAO,EAAA,EAAAL,EAAA,EAAAG,EACAxnF,EAAAynF,EAAAD,EAEA,OAAAE,IAAA1nF,EAAAC,KAAAC,KAAAF,IAAA,EAAA0nF,GAAAD,MAAA,EAAAD,GAAAD,EAAAC,EAAA,EAAAJ,EAAAC,EAAA,KAAAK,EAAAP,GAEAA,EAAAG,GAAA,EAGA,SAAAP,GAAApmD,EAAAkmD,GACA,IAAAtB,EAAA5kD,EAAApE,EACA,GAAAgpD,EAAA,OAAAuB,GAAAvB,EAAAsB,GACA,IAAA/B,EAAAnkD,EAAAmkD,KACA,OAAAA,EAAA,KAAA+B,EAAA/B,EAAA,GAAAhqF,ICzLA,IAEAsrF,GACApC,GACA8B,GACAhC,GALAyC,GAAA,KACAZ,GAAA,MAMA,SAAAgC,GAAA5nF,EAAAC,EAAA7J,GACA,OAAA4J,EAAA,GAAA5J,EAAA,KAAA6J,EAAA,GAAAD,EAAA,KAAAA,EAAA,GAAAC,EAAA,KAAA7J,EAAA,GAAA4J,EAAA,IAGA,SAAA6nF,GAAA7nF,EAAAC,GACA,OAAAA,EAAA,GAAAD,EAAA,IACAC,EAAA,GAAAD,EAAA,GAGA,SAAA8nF,GAAAC,EAAAjtD,GACA,IACA7/B,EACAC,EACAoB,EAHAyoF,EAAAgD,EAAAvnF,KAAAqnF,IAAAviF,MAUA,IALAy+E,MACAE,GAAA,IAAA1pF,MAAAwtF,EAAApqF,QACA0oF,GAAA,IAAAzC,GACAmC,GAAA,IAAAnC,KAIA,GADAtnF,EAAA8oF,GACAL,KAAAzoF,GAAAyoF,EAAA,GAAAzoF,EAAApB,GAAA6pF,EAAA,KAAAzoF,EAAApB,GAAA6pF,EAAA,GAAAzoF,EAAArB,GACA8pF,EAAA,KAAA9pF,GAAA8pF,EAAA,KAAA7pF,IACAyrF,GAAA5B,GACA9pF,EAAA8pF,EAAA,GAAA7pF,EAAA6pF,EAAA,IAEAA,EAAAgD,EAAAziF,UACK,KAAAhJ,EAGL,MAFAgqF,GAAAhqF,EAAAskC,KAQA,GHrBA,WACA,QAAAkkD,EAAAZ,EAAA79E,EAAAlQ,EAAAJ,EAAA,EAAAyB,EAAAysF,GAAAtmF,OAA0D5H,EAAAyB,IAAOzB,EACjE,IAAA+uF,EAAAb,GAAAluF,MAAAI,GAAA+tF,EAAAY,EAAAZ,WAAAvmF,QAAA,CACA,IAAAiU,EAAA,IAAArX,MAAApE,GACA0L,EAAA,IAAAtH,MAAApE,GACA,IAAAkQ,EAAA,EAAiBA,EAAAlQ,IAAOkQ,EAAAuL,EAAAvL,KAAAxE,EAAAwE,GAAAw+E,GAAAC,EAAAf,GAAAG,EAAA79E,KAExB,IADAuL,EAAApR,KAAA,SAAAzK,EAAAsQ,GAAiC,OAAAxE,EAAAwE,GAAAxE,EAAA9L,KACjCsQ,EAAA,EAAiBA,EAAAlQ,IAAOkQ,EAAAxE,EAAAwE,GAAA69E,EAAAtyE,EAAAvL,IACxB,IAAAA,EAAA,EAAiBA,EAAAlQ,IAAOkQ,EAAA69E,EAAA79E,GAAAxE,EAAAwE,IGWxB2hF,GAEAltD,EAAA,CACA,IAAA31B,GAAA21B,EAAA,MACA+E,GAAA/E,EAAA,MACAt7B,GAAAs7B,EAAA,MACAp7B,GAAAo7B,EAAA,OJqGA,SAAA31B,EAAA06B,EAAArgC,EAAAE,GAIA,IAHA,IACAokF,EADA/tF,EAAAguF,GAAApmF,OAGA5H,KACAuuF,GAAAR,EAAAC,GAAAhuF,GAAAoP,EAAA06B,EAAArgC,EAAAE,IACA2kF,GAAAP,EAAA3+E,EAAA06B,EAAArgC,EAAAE,KACAQ,KAAAyE,IAAAm/E,EAAA,MAAAA,EAAA,OAAA0C,IACAtmF,KAAAyE,IAAAm/E,EAAA,MAAAA,EAAA,OAAA0C,YACAzC,GAAAhuF,GI7GAkyF,CAAA9iF,EAAA06B,EAAArgC,EAAAE,GHbA,SAAAyF,EAAA06B,EAAArgC,EAAAE,GACA,IACAwoF,EACApD,EACAC,EACAoD,EACAjE,EACAkE,EACA5kF,EACA6kF,EACAC,EACA1+D,EACA2+D,EACAC,EAZAC,EAAAxE,GAAAtmF,OAaA4vC,GAAA,EAEA,IAAA26C,EAAA,EAAiBA,EAAAO,IAAgBP,EACjC,GAAApD,EAAAb,GAAAiE,GAAA,CAMA,IALAnD,EAAAD,EAAAC,KAEAoD,GADAjE,EAAAY,EAAAZ,WACAvmF,OAGAwqF,KACApE,GAAAG,EAAAiE,KACAjE,EAAA5zE,OAAA63E,EAAA,GAMA,IADAA,EAAA,EAAAC,EAAAlE,EAAAvmF,OACAwqF,EAAAC,GACAG,GAAA3+D,EAAAu7D,GAAAL,EAAAf,GAAAG,EAAAiE,MAAA,GAAAK,EAAA5+D,EAAA,GACAy+D,GAAA7kF,EAAA0hF,GAAAJ,EAAAf,GAAAG,IAAAiE,EAAAC,MAAA,GAAAE,EAAA9kF,EAAA,IACAtD,KAAAyE,IAAA4jF,EAAAF,GAAA7B,IAAAtmF,KAAAyE,IAAA6jF,EAAAF,GAAA9B,MACAtC,EAAA5zE,OAAA63E,EAAA,EAAApE,GAAAxnF,KAAA4nF,GAAAY,EAAAn7D,EACA1pB,KAAAyE,IAAA4jF,EAAApjF,GAAAqhF,IAAA9mF,EAAA8oF,EAAAhC,IAAArhF,EAAAjF,KAAAyE,IAAA0jF,EAAAljF,GAAAqhF,GAAA8B,EAAA5oF,GACAQ,KAAAyE,IAAA6jF,EAAA9oF,GAAA8mF,IAAAhnF,EAAA+oF,EAAA/B,IAAAtmF,KAAAyE,IAAA2jF,EAAA5oF,GAAA8mF,GAAA6B,EAAA7oF,EAAAE,GACAQ,KAAAyE,IAAA4jF,EAAA/oF,GAAAgnF,IAAAgC,EAAA3oD,EAAA2mD,IAAAhnF,EAAAU,KAAAyE,IAAA0jF,EAAA7oF,GAAAgnF,GAAA8B,EAAAzoD,GACA3/B,KAAAyE,IAAA6jF,EAAA3oD,GAAA2mD,IAAA+B,EAAApjF,EAAAqhF,IAAAtmF,KAAAyE,IAAA2jF,EAAAzoD,GAAA2mD,GAAA6B,EAAAljF,EAAA06B,GACA,YACAuoD,GAIAA,IAAA76C,GAAA,GAMA,GAAAA,EAAA,CACA,IAAA10B,EAAAC,EAAAiV,EAAA26D,EAAA3tF,IAEA,IAAAmtF,EAAA,EAAA36C,EAAA,KAAiC26C,EAAAO,IAAgBP,GACjDpD,EAAAb,GAAAiE,MAIAn6D,GAFAlV,GADAksE,EAAAD,EAAAC,MACA,GAAA5/E,GAEA0T,GADAC,EAAAisE,EAAA,GAAAllD,GACA/mB,GACA4vE,MAAA36D,EAAAwf,EAAAu3C,GAIA,GAAAv3C,EAAA,CACA,IAAAgV,GAAAp9C,EAAA06B,GAAA8oD,GAAAxjF,EAAAzF,GAAAkpF,GAAAppF,EAAAE,GAAAmpF,GAAArpF,EAAAqgC,GACA0N,EAAA22C,UAAA3nF,KACAwnF,GAAAxnF,KAAA4nF,GAAAY,EAAAx3C,EAAAw3C,KAAAxiC,EAAAomC,IAAA,EACA5E,GAAAxnF,KAAA4nF,GAAAY,EAAA4D,EAAAC,IAAA,EACA7E,GAAAxnF,KAAA4nF,GAAAY,EAAA6D,EAAAC,IAAA,EACA9E,GAAAxnF,KAAA4nF,GAAAY,EAAA8D,EAAAtmC,IAAA,IAMA,IAAA2lC,EAAA,EAAiBA,EAAAO,IAAgBP,GACjCpD,EAAAb,GAAAiE,MACApD,EAAAZ,UAAAvmF,eACAsmF,GAAAiE,IGjEAY,CAAA3jF,EAAA06B,EAAArgC,EAAAE,GAGAlG,KAAAuvF,MAAAhF,GACAvqF,KAAAyqF,SAEAoC,GACAN,GACAhC,GACAE,GAAA,KAGA6D,GAAAnwF,WACAsT,YAAA68E,GAEA5iD,SAAA,WACA,IAAA6jD,EAAAvvF,KAAAuvF,MAEA,OAAAvvF,KAAAyqF,MAAAlqF,IAAA,SAAA+qF,GACA,IAAAn/C,EAAAm/C,EAAAZ,UAAAnqF,IAAA,SAAAhE,GAAoD,OAAAmvF,GAAAJ,EAAAiE,EAAAhzF,MAEpD,OADA4vC,EAAAvsC,KAAA0rF,EAAAC,KAAA3rF,KACAusC,KAIAqjD,UAAA,WACA,IAAAA,KACAD,EAAAvvF,KAAAuvF,MAsBA,OApBAvvF,KAAAyqF,MAAA7nF,QAAA,SAAA0oF,EAAA/uF,GACA,GAAAI,GAAA+tF,EAAAY,EAAAZ,WAAAvmF,OASA,IARA,IACAumF,EAEA/tF,EACA2lC,EAJAipD,EAAAD,EAAAC,KAEA1+E,GAAA,EAGAw1B,EAAAktD,EAAA7E,EAAA/tF,EAAA,IACA4lC,EAAAF,EAAA16B,OAAA4jF,EAAAlpD,EAAAt6B,MAAAs6B,EAAA16B,OAEAkF,EAAAlQ,GACA2lC,EAAAC,EAEAA,GADAF,EAAAktD,EAAA7E,EAAA79E,KACAlF,OAAA4jF,EAAAlpD,EAAAt6B,MAAAs6B,EAAA16B,KACA26B,GAAAC,GAAAhmC,EAAA+lC,EAAAlqB,OAAA7b,EAAAgmC,EAAAnqB,OAAAg2E,GAAA7C,EAAAjpD,EAAAC,GAAA,GACAitD,EAAAzsF,MAAAwoF,EAAA3rF,KAAA0iC,EAAA1iC,KAAA2iC,EAAA3iC,SAKA4vF,GAGAl6C,MAAA,WACA,OAAAt1C,KAAAuvF,MAAAzoF,OAAA,SAAAwjF,GACA,OAAAA,EAAAviF,QACKxH,IAAA,SAAA+pF,GACL,OACAztE,OAAAytE,EAAA3iF,KAAA/H,KACAwC,OAAAkoF,EAAAviF,MAAAnI,SAKAs0C,KAAA,SAAAzyC,EAAAC,EAAAoC,GAIA,IAHA,IAAA4E,EAAA4iF,EAAAp5E,EAAAlS,KAAA2I,EAAAuJ,EAAAu9E,QAAA,EAAAzxF,EAAAkU,EAAAu4E,MAAAtmF,SAGAmnF,EAAAp5E,EAAAu4E,MAAA9hF,KAAA,KAAAA,GAAA3K,EAAA,YACA,IAAAqhB,EAAA5d,EAAA6pF,EAAAC,KAAA,GAAAjsE,EAAA5d,EAAA4pF,EAAAC,KAAA,GAAAh3D,EAAAlV,IAAAC,IAGA,GACAgsE,EAAAp5E,EAAAu4E,MAAA/hF,EAAAC,KAAA,KACA2iF,EAAAZ,UAAA9nF,QAAA,SAAAV,GACA,IAAAooF,EAAAp4E,EAAAq9E,MAAArtF,GAAAuH,EAAA6gF,EAAA3iF,KACA,GAAA8B,IAAA6hF,EAAAC,MAAA9hF,MAAA6gF,EAAAviF,OAAA,CACA,IAAA6rC,EAAAnyC,EAAAgI,EAAA,GAAAqqC,EAAApyC,EAAA+H,EAAA,GAAA4lB,EAAAukB,IAAAE,IACAzkB,EAAAkF,MAAAlF,EAAA1mB,EAAAc,EAAA2O,gBAEK,OAAAzP,GAIL,OAFAuJ,EAAAu9E,OAAA/mF,EAEA,MAAA5E,GAAAywB,GAAAzwB,IAAAwnF,EAAAC,KAAA,OCvIA,IAAAmE,GAAA,WACA,IAAAjuF,EAAA8nF,GACA7nF,EAAA8nF,GACAloD,EAAA,KAEA,SAAAquD,EAAA/vF,GACA,WAAA0uF,GAAA1uF,EAAAW,IAAA,SAAA1D,EAAAN,GACA,IAAA+B,GAAAoI,KAAAmJ,MAAApO,EAAA5E,EAAAN,EAAAqD,GAAAotF,OAAAtmF,KAAAmJ,MAAAnO,EAAA7E,EAAAN,EAAAqD,GAAAotF,QAGA,OAFA1uF,EAAA8Z,MAAA7b,EACA+B,EAAAsB,KAAA/C,EACAyB,IACKgjC,GA+BL,OA5BAquD,EAAAjkD,SAAA,SAAA9rC,GACA,OAAA+vF,EAAA/vF,GAAA8rC,YAGAikD,EAAAr6C,MAAA,SAAA11C,GACA,OAAA+vF,EAAA/vF,GAAA01C,SAGAq6C,EAAAH,UAAA,SAAA5vF,GACA,OAAA+vF,EAAA/vF,GAAA4vF,aAGAG,EAAAluF,EAAA,SAAAwK,GACA,OAAA/H,UAAAC,QAAA1C,EAAA,mBAAAwK,IAAAq9E,IAAAr9E,GAAA0jF,GAAAluF,GAGAkuF,EAAAjuF,EAAA,SAAAuK,GACA,OAAA/H,UAAAC,QAAAzC,EAAA,mBAAAuK,IAAAq9E,IAAAr9E,GAAA0jF,GAAAjuF,GAGAiuF,EAAAruD,OAAA,SAAAr1B,GACA,OAAA/H,UAAAC,QAAAm9B,EAAA,MAAAr1B,EAAA,QAAAA,EAAA,OAAAA,EAAA,SAAAA,EAAA,OAAAA,EAAA,QAAA0jF,GAAAruD,OAAA,MAAAA,EAAA,QAAAA,EAAA,MAAAA,EAAA,SAGAquD,EAAAp1E,KAAA,SAAAtO,GACA,OAAA/H,UAAAC,QAAAm9B,EAAA,MAAAr1B,EAAA,cAAAA,EAAA,IAAAA,EAAA,KAAA0jF,GAAAruD,MAAA,MAAAA,EAAA,MAAAA,EAAA,MAAAA,EAAA,QAGAquD,GC9CAC,GAAA,SAAAnuF,GACA,kBACA,OAAAA,ICFA,SAAAouF,GAAAprF,EAAAhD,EAAAC,GACA1B,KAAAyE,IACAzE,KAAAyB,IACAzB,KAAA0B,IAGAmuF,GAAA1xF,WACAsT,YAAAo+E,GACAlhF,MAAA,SAAAlK,GACA,WAAAA,EAAAzE,KAAA,IAAA6vF,GAAA7vF,KAAAyE,IAAAzE,KAAAyB,EAAAzB,KAAA0B,IAEA2xB,UAAA,SAAA5xB,EAAAC,GACA,WAAAD,EAAA,IAAAC,EAAA1B,KAAA,IAAA6vF,GAAA7vF,KAAAyE,EAAAzE,KAAAyB,EAAAzB,KAAAyE,EAAAhD,EAAAzB,KAAA0B,EAAA1B,KAAAyE,EAAA/C,IAEA2N,MAAA,SAAA6N,GACA,OAAAA,EAAA,GAAAld,KAAAyE,EAAAzE,KAAAyB,EAAAyb,EAAA,GAAAld,KAAAyE,EAAAzE,KAAA0B,IAEAouF,OAAA,SAAAruF,GACA,OAAAA,EAAAzB,KAAAyE,EAAAzE,KAAAyB,GAEAsuF,OAAA,SAAAruF,GACA,OAAAA,EAAA1B,KAAAyE,EAAAzE,KAAA0B,GAEAe,OAAA,SAAAutF,GACA,QAAAA,EAAA,GAAAhwF,KAAAyB,GAAAzB,KAAAyE,GAAAurF,EAAA,GAAAhwF,KAAA0B,GAAA1B,KAAAyE,IAEAwrF,QAAA,SAAAxuF,GACA,OAAAA,EAAAzB,KAAAyB,GAAAzB,KAAAyE,GAEAyrF,QAAA,SAAAxuF,GACA,OAAAA,EAAA1B,KAAA0B,GAAA1B,KAAAyE,GAEA0rF,SAAA,SAAA1uF,GACA,OAAAA,EAAAqO,OAAAxM,OAAA7B,EAAAgC,QAAAlD,IAAAP,KAAAiwF,QAAAjwF,MAAAO,IAAAkB,EAAAgB,OAAAhB,KAEA2uF,SAAA,SAAA1uF,GACA,OAAAA,EAAAoO,OAAAxM,OAAA5B,EAAA+B,QAAAlD,IAAAP,KAAAkwF,QAAAlwF,MAAAO,IAAAmB,EAAAe,OAAAf,KAEAkb,SAAA,WACA,mBAAA5c,KAAAyB,EAAA,IAAAzB,KAAA0B,EAAA,WAAA1B,KAAAyE,EAAA,MAIA,IAAA4rF,GAAA,IAAAR,GAAA,OAIA,SAAAS,GAAAl7E,GACA,OAAAA,EAAAm7E,QAAAF,GC9CA,SAAAG,KACAz4E,GAAAwG,2BD0CA+xE,GAAAnyF,UAAA0xF,GAAA1xF,UCvCA,IAAAsyF,GAAA,WACA14E,GAAA0G,iBACA1G,GAAAwG,4BCGA,SAAAmyE,KACA,OAAA34E,GAAAyH,OAGA,SAAAmxE,KACA,IAAAnwD,EAAAnU,EAAAnqB,EAAAlC,KASA,OARAkC,aAAA0uF,YAEApwD,GADAt+B,IAAA8a,iBAAA9a,GACAzD,MAAA+0B,QAAAh2B,MACA6uB,EAAAnqB,EAAAxD,OAAA80B,QAAAh2B,QAEAgjC,EAAAt+B,EAAA2uF,YACAxkE,EAAAnqB,EAAA4uF,gBAEA,MAAAtwD,EAAAnU,IAGA,SAAA0kE,KACA,OAAA/wF,KAAAuwF,QAAAF,GAGA,SAAAW,KACA,OAAAj5E,GAAAk5E,QAAAl5E,GAAAm5E,UAAA,WAGA,SAAAC,KACA,uBAAAnxF,KAGA,SAAAoxF,GAAAliF,EAAAoyB,EAAA+vD,GACA,IAAA5T,EAAAvuE,EAAA+gF,QAAA3uD,EAAA,OAAA+vD,EAAA,MACA1T,EAAAzuE,EAAA+gF,QAAA3uD,EAAA,OAAA+vD,EAAA,MACA3T,EAAAxuE,EAAAghF,QAAA5uD,EAAA,OAAA+vD,EAAA,MACAzT,EAAA1uE,EAAAghF,QAAA5uD,EAAA,OAAA+vD,EAAA,MACA,OAAAniF,EAAAmkB,UACAsqD,EAAAF,KAAAE,GAAA,EAAAj3E,KAAAnD,IAAA,EAAAk6E,IAAA/2E,KAAAlD,IAAA,EAAAm6E,GACAC,EAAAF,KAAAE,GAAA,EAAAl3E,KAAAnD,IAAA,EAAAm6E,IAAAh3E,KAAAlD,IAAA,EAAAo6E,IAIA,IAAA0T,GAAA,WACA,IAWAC,EACAvxE,EAZAlZ,EAAA4pF,GACApvD,EAAAqvD,GACAa,EAAAJ,GACAK,EAAAT,GACA9wE,EAAAixE,GACAO,GAAA,EAAAnwF,KACA8vF,KAAA9vF,qBACA0zB,EAAA,IACAe,EAAAlC,GACA3T,KACAC,EAAAhO,GAAA,sBAGAu/E,EAAA,IACAC,EAAA,IACAvxE,EAAA,EAEA,SAAAwxE,EAAA9hF,GACAA,EACA7R,SAAA,SAAA6yF,IACAr/E,GAAA,aAAAogF,GACApgF,GAAA,iBAAA6O,GACA7O,GAAA,gBAAAqgF,GACAjrF,OAAAoZ,GACAxO,GAAA,kBAAA8O,GACA9O,GAAA,iBAAA+O,GACA/O,GAAA,iCAAAgP,GACAtd,MAAA,uBACAA,MAAA,+CA0DA,SAAAuL,EAAAO,EAAAzK,GAEA,OADAA,EAAAiC,KAAAlD,IAAAkuF,EAAA,GAAAhrF,KAAAnD,IAAAmuF,EAAA,GAAAjtF,OACAyK,EAAAzK,EAAAyK,EAAA,IAAA2gF,GAAAprF,EAAAyK,EAAAzN,EAAAyN,EAAAxN,GAGA,SAAA2xB,EAAAnkB,EAAA+R,EAAA8S,GACA,IAAAtyB,EAAAwf,EAAA,GAAA8S,EAAA,GAAA7kB,EAAAzK,EAAA/C,EAAAuf,EAAA,GAAA8S,EAAA,GAAA7kB,EAAAzK,EACA,OAAAhD,IAAAyN,EAAAzN,GAAAC,IAAAwN,EAAAxN,EAAAwN,EAAA,IAAA2gF,GAAA3gF,EAAAzK,EAAAhD,EAAAC,GAGA,SAAAsuD,EAAA1uB,GACA,SAAAA,EAAA,QAAAA,EAAA,WAAAA,EAAA,QAAAA,EAAA,UAGA,SAAA5H,EAAAhpB,EAAAxB,EAAA21C,GACAn0C,EACAgB,GAAA,wBAAsCiP,EAAA3gB,KAAAkE,WAAA8F,UACtC0H,GAAA,qCAAmDiP,EAAA3gB,KAAAkE,WAAAksB,QACnDiJ,MAAA,kBACA,IACAlnB,EAAAjO,UACA6nB,EAAApL,EAFA3gB,KAEAmS,GACAjQ,EAAAo/B,EAAAjyB,MAHArP,KAGAmS,GACA9T,EAAAwmD,GAAAmL,EAAA9tD,GACAs+B,EAAA95B,KAAAlD,IAAAtB,EAAA,MAAAA,EAAA,MAAAA,EAAA,MAAAA,EAAA,OACAsE,EANAxG,KAMAuwF,OACA9pF,EAAA,mBAAAyI,IAAAG,MAPArP,KAOAmS,GAAAjD,EACA3S,EAAAy5B,EAAAxvB,EAAA/D,OAAApE,GAAA2D,OAAAw+B,EAAAh6B,EAAA/B,GAAAgC,EAAAhE,OAAApE,GAAA2D,OAAAw+B,EAAA/5B,EAAAhC,IACA,gBAAAhH,GACA,OAAAA,IAAAgJ,MACA,CAAkB,IAAAjK,EAAAD,EAAAkB,GAAAgH,EAAA+7B,EAAAhkC,EAAA,GAA4BiB,EAAA,IAAAoyF,GAAAprF,EAAApG,EAAA,GAAA7B,EAAA,GAAAiI,EAAApG,EAAA,GAAA7B,EAAA,GAAAiI,GAC9CsnB,EAAA8lE,KAAA,KAAAp0F,MAKA,SAAAkjB,EAAAzO,EAAAC,GACA,QAAA4Z,EAAAxvB,EAAA,EAAAyB,EAAAmiB,EAAAhc,OAA2C5H,EAAAyB,IAAOzB,EAClD,IAAAwvB,EAAA5L,EAAA5jB,IAAA2V,SACA,OAAA6Z,EAGA,WAAAimE,EAAA9/E,EAAAC,GAGA,SAAA6/E,EAAA9/E,EAAAC,GACAnS,KAAAkS,OACAlS,KAAAmS,OACAnS,KAAAoY,OAAA,EACApY,KAAAof,OAAA,EACApf,KAAAshC,SAAAjyB,MAAA6C,EAAAC,GAgCA,SAAA2/E,IACA,GAAAhrF,EAAAuI,MAAArP,KAAAkE,WAAA,CACA,IAAA6nB,EAAApL,EAAA3gB,KAAAkE,WACAzG,EAAAuC,KAAAuwF,OACA9rF,EAAAiC,KAAAlD,IAAAkuF,EAAA,GAAAhrF,KAAAnD,IAAAmuF,EAAA,GAAAj0F,EAAAgH,EAAAiC,KAAAE,IAAA,EAAA6qF,EAAApiF,MAAArP,KAAAkE,cACA7F,EAAAwf,GAAA7d,MAIA,GAAA+rB,EAAAkmE,MACAlmE,EAAAlO,MAAA,QAAAxf,EAAA,IAAA0tB,EAAAlO,MAAA,QAAAxf,EAAA,KACA0tB,EAAAlO,MAAA,GAAApgB,EAAAgF,OAAAspB,EAAAlO,MAAA,GAAAxf,IAEA0iB,aAAAgL,EAAAkmE,WAIA,IAAAx0F,EAAAgH,MAAA,OAIAsnB,EAAAlO,OAAAxf,EAAAZ,EAAAgF,OAAApE,IACAw7B,GAAA75B,MACA+rB,EAAA/hB,QAGAymF,KACA1kE,EAAAkmE,MAAAjzE,WAGA,WACA+M,EAAAkmE,MAAA,KACAlmE,EAAAqE,OALAwhE,GACA7lE,EAAA8lE,KAAA,QAAAL,EAAAn+D,EAAA1kB,EAAAlR,EAAAgH,GAAAsnB,EAAAlO,MAAA,GAAAkO,EAAAlO,MAAA,IAAAkO,EAAAuV,OAAA+vD,KAQA,SAAA9wE,IACA,IAAAP,GAAAlZ,EAAAuI,MAAArP,KAAAkE,WAAA,CACA,IAAA6nB,EAAApL,EAAA3gB,KAAAkE,WACAuF,EAAA+S,GAAAzE,GAAA4G,MAAAjN,GAAA,iBAWA,WAEA,GADA++E,MACA1kE,EAAAuX,MAAA,CACA,IAAAjkB,EAAAtH,GAAAoF,QAAAxR,EAAA2T,EAAAvH,GAAAqF,QAAAipB,EACAta,EAAAuX,MAAAjkB,IAAAC,IAAAe,EAEA0L,EAAA8lE,KAAA,QAAAL,EAAAn+D,EAAAtH,EAAA7Z,KAAAq+E,OAAAxkE,EAAAlO,MAAA,GAAAA,GAAAkO,EAAA7Z,MAAA6Z,EAAAlO,MAAA,IAAAkO,EAAAuV,OAAA+vD,MAjBA,GAAA3/E,GAAA,eAoBA,WACAjI,EAAAiI,GAAA,oCACAoN,GAAA/G,GAAA4G,KAAAoN,EAAAuX,OACAmtD,KACA1kE,EAAAqE,QAxBA,GACA/xB,EAAAwf,GAAA7d,MACA2L,EAAAoM,GAAAoF,QACAkpB,EAAAtuB,GAAAqF,QAEAsB,GAAA3G,GAAA4G,MACA6xE,KACAzkE,EAAAlO,OAAAxf,EAAA2B,KAAAuwF,OAAA9tF,OAAApE,IACAw7B,GAAA75B,MACA+rB,EAAA/hB,SAmBA,SAAA+nF,IACA,GAAAjrF,EAAAuI,MAAArP,KAAAkE,WAAA,CACA,IAAA0zB,EAAA53B,KAAAuwF,OACAtvE,EAAApD,GAAA7d,MACA+zB,EAAA6D,EAAAn1B,OAAAwe,GACAixE,EAAAt6D,EAAAnzB,GAAAsT,GAAAorB,SAAA,MACAjU,EAAAsiE,EAAAn+D,EAAA1kB,EAAAipB,EAAAs6D,GAAAjxE,EAAA8S,GAAAuN,EAAAjyB,MAAArP,KAAAkE,WAAAmtF,GAEAZ,KACAx7D,EAAA,EAAAzY,GAAAxc,MAAA0Q,aAAAukB,YAAAv4B,KAAAg9B,EAAAxK,EAAAjO,GACAzE,GAAAxc,MAAAtD,KAAAm1F,EAAA3iF,UAAAggB,IAGA,SAAA1O,IACA,GAAA1Z,EAAAuI,MAAArP,KAAAkE,WAAA,CACA,IAEA+9B,EACA1lC,EAAAkB,EAAAY,EAHA0tB,EAAApL,EAAA3gB,KAAAkE,WACA+Z,EAAAlG,GAAA+F,eAEA9f,EAAAigB,EAAA9Z,OAGA,IADAqsF,KACAj0F,EAAA,EAAeA,EAAAyB,IAAOzB,EACtBkB,EAAAwgB,EAAA1hB,GACA8B,GADAA,EAAA2f,GAAAhe,KAAAie,EAAAxgB,EAAAygB,YACAle,KAAAuwF,OAAA9tF,OAAApE,GAAAZ,EAAAygB,YACA6N,EAAAomE,OACApmE,EAAAqmE,SAAArmE,EAAAqmE,OAAA/zF,IADA0tB,EAAAomE,OAAA9zF,EAAA4jC,GAAA,GAKA,GAAAsvD,IACAA,EAAAxwE,aAAAwwE,IACAxlE,EAAAqmE,QAIA,OAHArmE,EAAAqE,YACA/xB,EAAAme,GAAAxc,MAAA0R,GAAA,mBACArT,EAAAgR,MAAArP,KAAAkE,YAKA+9B,IACAsvD,EAAAvyE,WAAA,WAA6CuyE,EAAA,MAAwBI,GACrE93D,GAAA75B,MACA+rB,EAAA/hB,UAIA,SAAAyW,IACA,IAEAlkB,EAAAkB,EAAAY,EAAA7B,EAFAuvB,EAAApL,EAAA3gB,KAAAkE,WACA+Z,EAAAlG,GAAA+F,eACA9f,EAAAigB,EAAA9Z,OAIA,IAFAssF,KACAc,MAAAxwE,aAAAwwE,IACAh1F,EAAA,EAAeA,EAAAyB,IAAOzB,EACtBkB,EAAAwgB,EAAA1hB,GAAA8B,EAAA2f,GAAAhe,KAAAie,EAAAxgB,EAAAygB,YACA6N,EAAAomE,QAAApmE,EAAAomE,OAAA,KAAA10F,EAAAygB,WAAA6N,EAAAomE,OAAA,GAAA9zF,EACA0tB,EAAAqmE,QAAArmE,EAAAqmE,OAAA,KAAA30F,EAAAygB,aAAA6N,EAAAqmE,OAAA,GAAA/zF,GAGA,GADAZ,EAAAsuB,EAAA7Z,KAAAq+E,OACAxkE,EAAAqmE,OAAA,CACA,IAAAnxE,EAAA8K,EAAAomE,OAAA,GAAAE,EAAAtmE,EAAAomE,OAAA,GACAp+D,EAAAhI,EAAAqmE,OAAA,GAAAE,EAAAvmE,EAAAqmE,OAAA,GACAG,KAAAx+D,EAAA,GAAA9S,EAAA,IAAAsxE,KAAAx+D,EAAA,GAAA9S,EAAA,IAAAsxE,EACAC,KAAAF,EAAA,GAAAD,EAAA,IAAAG,KAAAF,EAAA,GAAAD,EAAA,IAAAG,EACA/0F,EAAAkR,EAAAlR,EAAAiJ,KAAAC,KAAA4rF,EAAAC,IACAn0F,IAAA4iB,EAAA,GAAA8S,EAAA,OAAA9S,EAAA,GAAA8S,EAAA,OACAv3B,IAAA61F,EAAA,GAAAC,EAAA,OAAAD,EAAA,GAAAC,EAAA,WAEA,KAAAvmE,EAAAomE,OACA,OADA9zF,EAAA0tB,EAAAomE,OAAA,GAAA31F,EAAAuvB,EAAAomE,OAAA,GAEApmE,EAAA8lE,KAAA,QAAAL,EAAAn+D,EAAA51B,EAAAY,EAAA7B,GAAAuvB,EAAAuV,OAAA+vD,IAGA,SAAA3wE,IACA,IAEAnkB,EAAAkB,EAFAsuB,EAAApL,EAAA3gB,KAAAkE,WACA+Z,EAAAlG,GAAA+F,eACA9f,EAAAigB,EAAA9Z,OAKA,IAHAqsF,KACAxwE,GAAAe,aAAAf,GACAA,EAAAhB,WAAA,WAAyCgB,EAAA,MAAsB2xE,GAC/Dp1F,EAAA,EAAeA,EAAAyB,IAAOzB,EACtBkB,EAAAwgB,EAAA1hB,GACAwvB,EAAAomE,QAAApmE,EAAAomE,OAAA,KAAA10F,EAAAygB,kBAAA6N,EAAAomE,OACApmE,EAAAqmE,QAAArmE,EAAAqmE,OAAA,KAAA30F,EAAAygB,mBAAA6N,EAAAqmE,OAEArmE,EAAAqmE,SAAArmE,EAAAomE,SAAApmE,EAAAomE,OAAApmE,EAAAqmE,cAAArmE,EAAAqmE,QACArmE,EAAAomE,OAAApmE,EAAAomE,OAAA,GAAAnyF,KAAAuwF,OAAA9tF,OAAAspB,EAAAomE,OAAA,IACApmE,EAAAqE,MAgDA,OApVAyhE,EAAA3iF,UAAA,SAAAujF,EAAAvjF,GACA,IAAAa,EAAA0iF,EAAA1iF,UAAA0iF,EAAA1iF,YAAA0iF,EACA1iF,EAAA7R,SAAA,SAAA6yF,IACA0B,IAAA1iF,EACA2pB,EAAA+4D,EAAAvjF,GAEAa,EAAA8pB,YAAA/oB,KAAA,WACA6P,EAAA3gB,KAAAkE,WACA8F,QACA6nF,KAAA,wBAAA3iF,IAAAG,MAAArP,KAAAkE,WAAAgL,GACAkhB,SAKAyhE,EAAAa,QAAA,SAAA3iF,EAAAtL,GACAotF,EAAAc,QAAA5iF,EAAA,WAGA,OAFA/P,KAAAuwF,OAAA9rF,GACA,mBAAAA,IAAA4K,MAAArP,KAAAkE,WAAAO,MAKAotF,EAAAc,QAAA,SAAA5iF,EAAAtL,GACAotF,EAAA3iF,UAAAa,EAAA,WACA,IAAA7N,EAAAo/B,EAAAjyB,MAAArP,KAAAkE,WACA0zB,EAAA53B,KAAAuwF,OACAtvE,EAAA+uC,EAAA9tD,GACA6xB,EAAA6D,EAAAn1B,OAAAwe,GACAixE,EAAA,mBAAAztF,IAAA4K,MAAArP,KAAAkE,WAAAO,EACA,OAAA+sF,EAAAn+D,EAAA1kB,EAAAipB,EAAAs6D,GAAAjxE,EAAA8S,GAAA7xB,EAAAmvF,MAIAQ,EAAAe,YAAA,SAAA7iF,EAAAtO,EAAAC,GACAmwF,EAAA3iF,UAAAa,EAAA,WACA,OAAAyhF,EAAAxxF,KAAAuwF,OAAAl9D,UACA,mBAAA5xB,IAAA4N,MAAArP,KAAAkE,WAAAzC,EACA,mBAAAC,IAAA2N,MAAArP,KAAAkE,WAAAxC,GACA4/B,EAAAjyB,MAAArP,KAAAkE,WAAAmtF,MAIAQ,EAAAgB,YAAA,SAAA9iF,EAAAtO,EAAAC,GACAmwF,EAAA3iF,UAAAa,EAAA,WACA,IAAA7N,EAAAo/B,EAAAjyB,MAAArP,KAAAkE,WACAzG,EAAAuC,KAAAuwF,OACAlyF,EAAA2xD,EAAA9tD,GACA,OAAAsvF,EAAAnB,GAAAh9D,UAAAh1B,EAAA,GAAAA,EAAA,IAAAsQ,MAAAlR,EAAAgH,GAAA4uB,UACA,mBAAA5xB,KAAA4N,MAAArP,KAAAkE,YAAAzC,EACA,mBAAAC,KAAA2N,MAAArP,KAAAkE,YAAAxC,GACAQ,EAAAmvF,MAyDAW,EAAA7zF,WACA6L,MAAA,WAKA,OAJA,KAAAhK,KAAAof,SACApf,KAAAoY,MAAA+H,EAAApd,KAAA/C,MAAA,EACAA,KAAAqjC,KAAA,UAEArjC,MAEA6xF,KAAA,SAAA/zF,EAAAoR,GAMA,OALAlP,KAAA6d,OAAA,UAAA/f,IAAAkC,KAAA6d,MAAA,GAAA3O,EAAAzM,OAAAzC,KAAA6d,MAAA,KACA7d,KAAAmyF,QAAA,UAAAr0F,IAAAkC,KAAAmyF,OAAA,GAAAjjF,EAAAzM,OAAAzC,KAAAmyF,OAAA,KACAnyF,KAAAoyF,QAAA,UAAAt0F,IAAAkC,KAAAoyF,OAAA,GAAAljF,EAAAzM,OAAAzC,KAAAoyF,OAAA,KACApyF,KAAAkS,KAAAq+E,OAAArhF,EACAlP,KAAAqjC,KAAA,QACArjC,MAEAowB,IAAA,WAMA,OALA,KAAApwB,KAAAof,SACAe,EAAArJ,OAAA9W,KAAAoY,MAAA,GACApY,KAAAoY,OAAA,EACApY,KAAAqjC,KAAA,QAEArjC,MAEAqjC,KAAA,SAAA1hC,GACAuX,GAAA,ICxNA,SAAA9W,EAAAT,EAAAuN,GACAlP,KAAAoC,SACApC,KAAA2B,OACA3B,KAAAkP,YDqNA,CAAA2iF,EAAAlwF,EAAA3B,KAAAkS,KAAAq+E,QAAAnwE,EAAA/Q,MAAA+Q,GAAAze,EAAA3B,KAAAkS,KAAAlS,KAAAmS,SAkKA0/E,EAAAJ,WAAA,SAAAxlF,GACA,OAAA/H,UAAAC,QAAAstF,EAAA,mBAAAxlF,IAAA2jF,IAAA3jF,GAAA4lF,GAAAJ,GAGAI,EAAA/qF,OAAA,SAAAmF,GACA,OAAA/H,UAAAC,QAAA2C,EAAA,mBAAAmF,IAAA2jF,KAAA3jF,GAAA4lF,GAAA/qF,GAGA+qF,EAAA3xE,UAAA,SAAAjU,GACA,OAAA/H,UAAAC,QAAA+b,EAAA,mBAAAjU,IAAA2jF,KAAA3jF,GAAA4lF,GAAA3xE,GAGA2xE,EAAAvwD,OAAA,SAAAr1B,GACA,OAAA/H,UAAAC,QAAAm9B,EAAA,mBAAAr1B,IAAA2jF,MAAA3jF,EAAA,OAAAA,EAAA,SAAAA,EAAA,OAAAA,EAAA,SAAA4lF,GAAAvwD,GAGAuwD,EAAAH,YAAA,SAAAzlF,GACA,OAAA/H,UAAAC,QAAAutF,EAAA,IAAAzlF,EAAA,GAAAylF,EAAA,IAAAzlF,EAAA,GAAA4lF,IAAAH,EAAA,GAAAA,EAAA,KAGAG,EAAAR,gBAAA,SAAAplF,GACA,OAAA/H,UAAAC,QAAAktF,EAAA,OAAAplF,EAAA,MAAAolF,EAAA,OAAAplF,EAAA,MAAAolF,EAAA,OAAAplF,EAAA,MAAAolF,EAAA,OAAAplF,EAAA,MAAA4lF,KAAAR,EAAA,MAAAA,EAAA,QAAAA,EAAA,MAAAA,EAAA,SAGAQ,EAAAL,UAAA,SAAAvlF,GACA,OAAA/H,UAAAC,QAAAqtF,EAAAvlF,EAAA4lF,GAAAL,GAGAK,EAAA58D,SAAA,SAAAhpB,GACA,OAAA/H,UAAAC,QAAA8wB,GAAAhpB,EAAA4lF,GAAA58D,GAGA48D,EAAA77D,YAAA,SAAA/pB,GACA,OAAA/H,UAAAC,QAAA6xB,EAAA/pB,EAAA4lF,GAAA77D,GAGA67D,EAAAngF,GAAA,WACA,IAAAlU,EAAA4iB,EAAA1O,GAAArC,MAAA+Q,EAAAlc,WACA,OAAA1G,IAAA4iB,EAAAyxE,EAAAr0F,GAGAq0F,EAAA3wE,cAAA,SAAAjV,GACA,OAAA/H,UAAAC,QAAAkc,GAAApU,QAAA4lF,GAAAnrF,KAAAC,KAAA0Z,IAGAwxE,oCxdtaA","file":"d3ml.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"d3ml\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"d3ml\"] = factory();\n\telse\n\t\troot[\"d3ml\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n","const defaultOptions = {\n  rootNode: 'body',\n  width: 500,\n  height: 300,\n  padding: 50,\n  backgroundColor: '#1d1e22',\n  circleRadius: 5,\n  circleFill: 'yellow',\n  circleStroke: 'white'\n};\nconst defaultType = 'None';\n\nconst defaultTypes = {\n  A: 'A',\n  B: 'B',\n  None: 'None'\n};\n\nconst defaultK = 3;\n\nexport default {\n  defaultOptions,\n  defaultType,\n  defaultTypes,\n  defaultK\n};\n","import * as d3 from 'd3';\nimport Circle from './circle';\nimport { defaultOptions, defaultTypes } from './defaults';\n\nexport default class Visualization {\n  constructor(data, options, types) {\n    this.options = Object.assign({}, defaultOptions, options);\n    this.types = Object.assign({}, defaultTypes, types);\n    this.xScale = this.createXScale(data);\n    this.yScale = this.createYScale(data);\n    this.data = data.map(d => this.mapDataToCircle(d));\n    this.svgId = 'd3ml-' + Date.now();\n    this.svg = this.appendSVG();\n  }\n  validateData(data) {\n    let result = false;\n    if (!!data && Array.isArray(data)) {\n      result = data.reduce((res, val) => {\n        return Object.entries(val).reduce((result, entry) => {\n          const key = entry[0];\n          const val = entry[1];\n\n          return result &&\n            ['x', 'y'].includes(key) &&\n            typeof val === 'number' &&\n            val !== Infinity &&\n            val !== -Infinity;\n        }, true);\n      }, true);\n    }\n\n    return result;\n  }\n  mapDataToCircle(data) {\n    return new Circle(\n      this.xScale(data.x),\n      this.yScale(data.y),\n      this.options.circleRadius,\n      this.options.circleFill,\n      this.options.circleStroke,\n      data.type);\n  }\n  onClickSvg(callbacks) { // todo: test\n    document.querySelector(`#${this.svgId}`).addEventListener('click', (e) => {\n      this.clickCallback(e, callbacks);\n    });\n  }\n  isValidEventTarget(e) {\n    return !!e.target && e.target.id === this.svgId;\n  }\n  clickCallback(e, callbacks) {\n    if (this.isValidEventTarget(e)) {\n      const newCircle = this.mapDataToCircle({x: this.xScale.invert(e.offsetX), y: this.yScale.invert(e.offsetY)});\n      callbacks.forEach(callback => {\n        callback.call(this, newCircle);\n      });\n    }\n  }\n  addCircle(circle) {\n    this.data.push(circle);\n    this.drawCircles();\n  }\n  appendSVG() {\n    return d3.select(this.options.rootNode)\n      .append('svg')\n      .attr('id', this.svgId)\n      .attr('width', this.options.width)\n      .attr('height', this.options.height)\n      .style('background-color', this.options.backgroundColor);\n  }\n  createXScale(data) {\n    return d3.scaleLinear()\n      .domain([\n        d3.min(data, function (d) { return d.x; }) - this.options.padding,\n        d3.max(data, function (d) { return d.x; }) + this.options.padding\n      ])\n      .range([0, this.options.width]);\n  }\n  createYScale(data) {\n    return d3.scaleLinear()\n      .domain([\n        d3.min(data, function (d) { return d.y; }) - this.options.padding,\n        d3.max(data, function (d) { return d.y; }) + this.options.padding\n      ])\n      .range([0, this.options.height]);\n  }\n  drawCircles() {\n    this.svg.selectAll('circle')\n      .data(this.data)\n      .enter().append('circle')\n      .style('stroke', function (d) { return d.stroke; })\n      .style('fill', function (d) { return d.fill; })\n      .attr('r', function (d) { return d.radius; })\n      .attr('cx', function (d) { return d.cx; })\n      .attr('cy', function (d) { return d.cy; });\n  }\n  draw() {\n    this.drawCircles();\n  }\n}\n","import { defaultType, defaultOptions } from './defaults';\n\nexport default class Circle {\n  constructor(cx,\n              cy,\n              radius = defaultOptions.circleRadius,\n              fill = defaultOptions.circleFill,\n              stroke = defaultOptions.circleStroke,\n              type = defaultType\n  ) {\n    this.cx = cx;\n    this.cy = cy;\n    this.radius = radius;\n    this.fill = fill;\n    this.stroke = stroke;\n    this.type = type;\n  }\n  setFill(fill) {\n    this.fill = fill;\n  }\n  setStroke(stroke) {\n    this.stroke = stroke;\n  }\n  setType(type) {\n    this.type = type;\n  }\n}\n","import Visualization from './visualization/visualization';\nimport KNNVisualization from './visualization/knn-visualization';\n\nexport {\n  Visualization,\n  KNNVisualization\n};\n","import Circle from './circle';\nimport { defaultK } from './defaults';\nimport Visualization from './visualization';\nimport KNN from '../algorithms/knn';\n\nexport default class KNNVisualization extends Visualization {\n  constructor(data, options, k = defaultK, types) {\n    super(data, options);\n    this.knn = new KNN(this.data, k, types);\n    this.addEventListeners();\n  }\n  addEventListeners() {\n    this.onClickSvg([this.classifyAndAddCircle, this.addBoundingCircle, this.addConnectingLines]);\n  }\n  classifyAndAddCircle(circle) {\n    const circleType = this.knn.classify(circle);\n    circle.setType(circleType);\n    super.addCircle(circle);\n  }\n  addBoundingCircle(circle) {\n    const boundingCircle = this.getBoundingCircle(circle, this.knn.kClosestNeighbors[this.knn.k - 1]);\n    this.addCircle(boundingCircle);\n    this.drawCircles();\n  }\n  addConnectingLines(circle) {\n    const connectingLines = this.getConnectingLines(circle);\n    this.drawConnectingLines(connectingLines);\n  }\n  getBoundingCircle(circle, furthestNeighbor) {\n    const radius = furthestNeighbor.distance + this.options.circleRadius;\n\n    return new Circle(circle.cx, circle.cy, radius, 'transparent', 'white');\n  }\n  getConnectingLines(circle) {\n    return this.knn.kClosestNeighbors.map(n => {\n      return {\n        x1: n.cx,\n        x2: circle.cx,\n        y1: n.cy,\n        y2: circle.cy,\n        strokeWidth: 2,\n        stroke: 'rgba(230,230,230,0.5)'\n      };\n    });\n  }\n  drawConnectingLines(connectingLines) {\n    this.svg.selectAll('line')\n      .data(connectingLines)\n      .enter().append('line')\n      .style('stroke', function (d) { return d.stroke; })\n      .attr('stroke-width', function (d) { return d.strokeWidth; })\n      .attr('x1', function (d) { return d.x1; })\n      .attr('y1', function (d) { return d.y1; })\n      .attr('x2', function (d) { return d.x2; })\n      .attr('y2', function (d) { return d.y2; })\n      .attr('class', 'remove');\n  }\n};\n","import MachineLearningAlgorithm from './machine-learning-algorithm';\nimport { defaultTypes } from '../visualization/defaults';\n\nexport default class KNN extends MachineLearningAlgorithm {\n  constructor(circles, k, types = defaultTypes) {\n    super(circles);\n    this.k = k;\n    this.types = types;\n    this.kClosestNeighbors = null;\n  }\n  calculateDistance(a, b) {\n    return Math.sqrt(Math.pow((b.cx - a.cx), 2) + Math.pow((b.cy - a.cy), 2));\n  }\n  findKClosestNeighbors(newCircle, neighbors, k) {\n    return neighbors.filter(n => n !== newCircle)\n      .map(n => {\n        n.distance = this.calculateDistance(n, newCircle);\n\n        return n;\n      })\n      .sort((a, b) => a.distance > b.distance)\n      .filter((n, i) => i < k);\n  }\n  determineCircleType(kClosestNeighbors) {\n    const counts = {};\n    kClosestNeighbors.map(n => n.type)\n      .forEach(type => {\n        counts[type] = counts[type] ? counts[type] + 1 : 1;\n      });\n\n    return Object.entries(counts).sort((a, b) => a[1] < b[1])[0][0];\n  }\n  classify(newCircle) { // todo: test\n    this.kClosestNeighbors = this.findKClosestNeighbors(newCircle, this.circles, this.k);\n    this.addCircle(newCircle);\n\n    return this.determineCircleType(this.kClosestNeighbors);\n  }\n}\n","export default class MachineLearningAlgorithm {\n  constructor(circles) {\n    this.circles = circles;\n  }\n  addCircle(c) {\n    this.circles.push(c);\n  }\n}\n","export var name = \"d3\";\nexport var version = \"5.5.0\";\nexport var description = \"Data-Driven Documents\";\nexport var keywords = [\"dom\",\"visualization\",\"svg\",\"animation\",\"canvas\"];\nexport var homepage = \"https://d3js.org\";\nexport var license = \"BSD-3-Clause\";\nexport var author = {\"name\":\"Mike Bostock\",\"url\":\"https://bost.ocks.org/mike\"};\nexport var main = \"dist/d3.node.js\";\nexport var unpkg = \"dist/d3.min.js\";\nexport var jsdelivr = \"dist/d3.min.js\";\nexport var module = \"index\";\nexport var repository = {\"type\":\"git\",\"url\":\"https://github.com/d3/d3.git\"};\nexport var scripts = {\"pretest\":\"rimraf dist && mkdir dist && json2module package.json > dist/package.js && node rollup.node\",\"test\":\"tape 'test/**/*-test.js'\",\"prepublishOnly\":\"npm run test && rollup -c --banner \\\"$(preamble)\\\" && uglifyjs -b beautify=false,preamble=\\\"'$(preamble)'\\\" dist/d3.js -c negate_iife=false -m -o dist/d3.min.js\",\"postpublish\":\"git push && git push --tags && cd ../d3.github.com && git pull && cp ../d3/dist/d3.js d3.v5.js && cp ../d3/dist/d3.min.js d3.v5.min.js && git add d3.v5.js d3.v5.min.js && git commit -m \\\"d3 ${npm_package_version}\\\" && git push && cd - && cd ../d3-bower && git pull && cp ../d3/LICENSE ../d3/README.md ../d3/dist/d3.js ../d3/dist/d3.min.js . && git add -- LICENSE README.md d3.js d3.min.js && git commit -m \\\"${npm_package_version}\\\" && git tag -am \\\"${npm_package_version}\\\" v${npm_package_version} && git push && git push --tags && cd - && zip -j dist/d3.zip -- LICENSE README.md API.md CHANGES.md dist/d3.js dist/d3.min.js\"};\nexport var devDependencies = {\"json2module\":\"0.0\",\"package-preamble\":\"0.1\",\"rimraf\":\"2\",\"rollup\":\"0.57\",\"rollup-plugin-ascii\":\"0.0\",\"rollup-plugin-node-resolve\":\"3\",\"tape\":\"4\",\"uglify-js\":\"3.2\"};\nexport var dependencies = {\"d3-array\":\"1\",\"d3-axis\":\"1\",\"d3-brush\":\"1\",\"d3-chord\":\"1\",\"d3-collection\":\"1\",\"d3-color\":\"1\",\"d3-contour\":\"1\",\"d3-dispatch\":\"1\",\"d3-drag\":\"1\",\"d3-dsv\":\"1\",\"d3-ease\":\"1\",\"d3-fetch\":\"1\",\"d3-force\":\"1\",\"d3-format\":\"1\",\"d3-geo\":\"1\",\"d3-hierarchy\":\"1\",\"d3-interpolate\":\"1\",\"d3-path\":\"1\",\"d3-polygon\":\"1\",\"d3-quadtree\":\"1\",\"d3-random\":\"1\",\"d3-scale\":\"2\",\"d3-scale-chromatic\":\"1\",\"d3-selection\":\"1\",\"d3-shape\":\"1\",\"d3-time\":\"1\",\"d3-time-format\":\"2\",\"d3-timer\":\"1\",\"d3-transition\":\"1\",\"d3-voronoi\":\"1\",\"d3-zoom\":\"1\"};\n","export default function(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n","import ascending from \"./ascending\";\n\nexport default function(compare) {\n  if (compare.length === 1) compare = ascendingComparator(compare);\n  return {\n    left: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) < 0) lo = mid + 1;\n        else hi = mid;\n      }\n      return lo;\n    },\n    right: function(a, x, lo, hi) {\n      if (lo == null) lo = 0;\n      if (hi == null) hi = a.length;\n      while (lo < hi) {\n        var mid = lo + hi >>> 1;\n        if (compare(a[mid], x) > 0) hi = mid;\n        else lo = mid + 1;\n      }\n      return lo;\n    }\n  };\n}\n\nfunction ascendingComparator(f) {\n  return function(d, x) {\n    return ascending(f(d), x);\n  };\n}\n","import ascending from \"./ascending\";\nimport bisector from \"./bisector\";\n\nvar ascendingBisect = bisector(ascending);\nexport var bisectRight = ascendingBisect.right;\nexport var bisectLeft = ascendingBisect.left;\nexport default bisectRight;\n","export default function(array, f) {\n  if (f == null) f = pair;\n  var i = 0, n = array.length - 1, p = array[0], pairs = new Array(n < 0 ? 0 : n);\n  while (i < n) pairs[i] = f(p, p = array[++i]);\n  return pairs;\n}\n\nexport function pair(a, b) {\n  return [a, b];\n}\n","import {pair} from \"./pairs\";\n\nexport default function(values0, values1, reduce) {\n  var n0 = values0.length,\n      n1 = values1.length,\n      values = new Array(n0 * n1),\n      i0,\n      i1,\n      i,\n      value0;\n\n  if (reduce == null) reduce = pair;\n\n  for (i0 = i = 0; i0 < n0; ++i0) {\n    for (value0 = values0[i0], i1 = 0; i1 < n1; ++i1, ++i) {\n      values[i] = reduce(value0, values1[i1]);\n    }\n  }\n\n  return values;\n}\n","export default function(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n}\n","export default function(x) {\n  return x === null ? NaN : +x;\n}\n","import number from \"./number\";\n\nexport default function(values, valueof) {\n  var n = values.length,\n      m = 0,\n      i = -1,\n      mean = 0,\n      value,\n      delta,\n      sum = 0;\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (!isNaN(value = number(values[i]))) {\n        delta = value - mean;\n        mean += delta / ++m;\n        sum += delta * (value - mean);\n      }\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(value = number(valueof(values[i], i, values)))) {\n        delta = value - mean;\n        mean += delta / ++m;\n        sum += delta * (value - mean);\n      }\n    }\n  }\n\n  if (m > 1) return sum / (m - 1);\n}\n","import variance from \"./variance\";\n\nexport default function(array, f) {\n  var v = variance(array, f);\n  return v ? Math.sqrt(v) : v;\n}\n","export default function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      min,\n      max;\n\n  if (valueof == null) {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        min = max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = values[i]) != null) {\n            if (min > value) min = value;\n            if (max < value) max = value;\n          }\n        }\n      }\n    }\n  }\n\n  else {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        min = max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null) {\n            if (min > value) min = value;\n            if (max < value) max = value;\n          }\n        }\n      }\n    }\n  }\n\n  return [min, max];\n}\n","var array = Array.prototype;\n\nexport var slice = array.slice;\nexport var map = array.map;\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function(x) {\n  return x;\n}\n","export default function(start, stop, step) {\n  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;\n\n  var i = -1,\n      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,\n      range = new Array(n);\n\n  while (++i < n) {\n    range[i] = start + i * step;\n  }\n\n  return range;\n}\n","var e10 = Math.sqrt(50),\n    e5 = Math.sqrt(10),\n    e2 = Math.sqrt(2);\n\nexport default function(start, stop, count) {\n  var reverse,\n      i = -1,\n      n,\n      ticks,\n      step;\n\n  stop = +stop, start = +start, count = +count;\n  if (start === stop && count > 0) return [start];\n  if (reverse = stop < start) n = start, start = stop, stop = n;\n  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];\n\n  if (step > 0) {\n    start = Math.ceil(start / step);\n    stop = Math.floor(stop / step);\n    ticks = new Array(n = Math.ceil(stop - start + 1));\n    while (++i < n) ticks[i] = (start + i) * step;\n  } else {\n    start = Math.floor(start * step);\n    stop = Math.ceil(stop * step);\n    ticks = new Array(n = Math.ceil(start - stop + 1));\n    while (++i < n) ticks[i] = (start - i) / step;\n  }\n\n  if (reverse) ticks.reverse();\n\n  return ticks;\n}\n\nexport function tickIncrement(start, stop, count) {\n  var step = (stop - start) / Math.max(0, count),\n      power = Math.floor(Math.log(step) / Math.LN10),\n      error = step / Math.pow(10, power);\n  return power >= 0\n      ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power)\n      : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);\n}\n\nexport function tickStep(start, stop, count) {\n  var step0 = Math.abs(stop - start) / Math.max(0, count),\n      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),\n      error = step0 / step1;\n  if (error >= e10) step1 *= 10;\n  else if (error >= e5) step1 *= 5;\n  else if (error >= e2) step1 *= 2;\n  return stop < start ? -step1 : step1;\n}\n","export default function(values) {\n  return Math.ceil(Math.log(values.length) / Math.LN2) + 1;\n}\n","import {slice} from \"./array\";\nimport bisect from \"./bisect\";\nimport constant from \"./constant\";\nimport extent from \"./extent\";\nimport identity from \"./identity\";\nimport range from \"./range\";\nimport {tickStep} from \"./ticks\";\nimport sturges from \"./threshold/sturges\";\n\nexport default function() {\n  var value = identity,\n      domain = extent,\n      threshold = sturges;\n\n  function histogram(data) {\n    var i,\n        n = data.length,\n        x,\n        values = new Array(n);\n\n    for (i = 0; i < n; ++i) {\n      values[i] = value(data[i], i, data);\n    }\n\n    var xz = domain(values),\n        x0 = xz[0],\n        x1 = xz[1],\n        tz = threshold(values, x0, x1);\n\n    // Convert number of thresholds into uniform thresholds.\n    if (!Array.isArray(tz)) {\n      tz = tickStep(x0, x1, tz);\n      tz = range(Math.ceil(x0 / tz) * tz, Math.floor(x1 / tz) * tz, tz); // exclusive\n    }\n\n    // Remove any thresholds outside the domain.\n    var m = tz.length;\n    while (tz[0] <= x0) tz.shift(), --m;\n    while (tz[m - 1] > x1) tz.pop(), --m;\n\n    var bins = new Array(m + 1),\n        bin;\n\n    // Initialize bins.\n    for (i = 0; i <= m; ++i) {\n      bin = bins[i] = [];\n      bin.x0 = i > 0 ? tz[i - 1] : x0;\n      bin.x1 = i < m ? tz[i] : x1;\n    }\n\n    // Assign data to bins by value, ignoring any outside the domain.\n    for (i = 0; i < n; ++i) {\n      x = values[i];\n      if (x0 <= x && x <= x1) {\n        bins[bisect(tz, x, 0, m)].push(data[i]);\n      }\n    }\n\n    return bins;\n  }\n\n  histogram.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(_), histogram) : value;\n  };\n\n  histogram.domain = function(_) {\n    return arguments.length ? (domain = typeof _ === \"function\" ? _ : constant([_[0], _[1]]), histogram) : domain;\n  };\n\n  histogram.thresholds = function(_) {\n    return arguments.length ? (threshold = typeof _ === \"function\" ? _ : Array.isArray(_) ? constant(slice.call(_)) : constant(_), histogram) : threshold;\n  };\n\n  return histogram;\n}\n","import number from \"./number\";\n\nexport default function(values, p, valueof) {\n  if (valueof == null) valueof = number;\n  if (!(n = values.length)) return;\n  if ((p = +p) <= 0 || n < 2) return +valueof(values[0], 0, values);\n  if (p >= 1) return +valueof(values[n - 1], n - 1, values);\n  var n,\n      i = (n - 1) * p,\n      i0 = Math.floor(i),\n      value0 = +valueof(values[i0], i0, values),\n      value1 = +valueof(values[i0 + 1], i0 + 1, values);\n  return value0 + (value1 - value0) * (i - i0);\n}\n","import {map} from \"../array\";\nimport ascending from \"../ascending\";\nimport number from \"../number\";\nimport quantile from \"../quantile\";\n\nexport default function(values, min, max) {\n  values = map.call(values, number).sort(ascending);\n  return Math.ceil((max - min) / (2 * (quantile(values, 0.75) - quantile(values, 0.25)) * Math.pow(values.length, -1 / 3)));\n}\n","import deviation from \"../deviation\";\n\nexport default function(values, min, max) {\n  return Math.ceil((max - min) / (3.5 * deviation(values) * Math.pow(values.length, -1 / 3)));\n}\n","export default function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      max;\n\n  if (valueof == null) {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = values[i]) != null && value > max) {\n            max = value;\n          }\n        }\n      }\n    }\n  }\n\n  else {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        max = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null && value > max) {\n            max = value;\n          }\n        }\n      }\n    }\n  }\n\n  return max;\n}\n","import number from \"./number\";\n\nexport default function(values, valueof) {\n  var n = values.length,\n      m = n,\n      i = -1,\n      value,\n      sum = 0;\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (!isNaN(value = number(values[i]))) sum += value;\n      else --m;\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(value = number(valueof(values[i], i, values)))) sum += value;\n      else --m;\n    }\n  }\n\n  if (m) return sum / m;\n}\n","import ascending from \"./ascending\";\nimport number from \"./number\";\nimport quantile from \"./quantile\";\n\nexport default function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      numbers = [];\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (!isNaN(value = number(values[i]))) {\n        numbers.push(value);\n      }\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (!isNaN(value = number(valueof(values[i], i, values)))) {\n        numbers.push(value);\n      }\n    }\n  }\n\n  return quantile(numbers.sort(ascending), 0.5);\n}\n","export default function(arrays) {\n  var n = arrays.length,\n      m,\n      i = -1,\n      j = 0,\n      merged,\n      array;\n\n  while (++i < n) j += arrays[i].length;\n  merged = new Array(j);\n\n  while (--n >= 0) {\n    array = arrays[n];\n    m = array.length;\n    while (--m >= 0) {\n      merged[--j] = array[m];\n    }\n  }\n\n  return merged;\n}\n","export default function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      min;\n\n  if (valueof == null) {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = values[i]) != null && value >= value) {\n        min = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = values[i]) != null && min > value) {\n            min = value;\n          }\n        }\n      }\n    }\n  }\n\n  else {\n    while (++i < n) { // Find the first comparable value.\n      if ((value = valueof(values[i], i, values)) != null && value >= value) {\n        min = value;\n        while (++i < n) { // Compare the remaining values.\n          if ((value = valueof(values[i], i, values)) != null && min > value) {\n            min = value;\n          }\n        }\n      }\n    }\n  }\n\n  return min;\n}\n","export default function(array, indexes) {\n  var i = indexes.length, permutes = new Array(i);\n  while (i--) permutes[i] = array[indexes[i]];\n  return permutes;\n}\n","import ascending from \"./ascending\";\n\nexport default function(values, compare) {\n  if (!(n = values.length)) return;\n  var n,\n      i = 0,\n      j = 0,\n      xi,\n      xj = values[j];\n\n  if (compare == null) compare = ascending;\n\n  while (++i < n) {\n    if (compare(xi = values[i], xj) < 0 || compare(xj, xj) !== 0) {\n      xj = xi, j = i;\n    }\n  }\n\n  if (compare(xj, xj) === 0) return j;\n}\n","export default function(array, i0, i1) {\n  var m = (i1 == null ? array.length : i1) - (i0 = i0 == null ? 0 : +i0),\n      t,\n      i;\n\n  while (m) {\n    i = Math.random() * m-- | 0;\n    t = array[m + i0];\n    array[m + i0] = array[i + i0];\n    array[i + i0] = t;\n  }\n\n  return array;\n}\n","export default function(values, valueof) {\n  var n = values.length,\n      i = -1,\n      value,\n      sum = 0;\n\n  if (valueof == null) {\n    while (++i < n) {\n      if (value = +values[i]) sum += value; // Note: zero and null are equivalent.\n    }\n  }\n\n  else {\n    while (++i < n) {\n      if (value = +valueof(values[i], i, values)) sum += value;\n    }\n  }\n\n  return sum;\n}\n","import min from \"./min\";\n\nexport default function(matrix) {\n  if (!(n = matrix.length)) return [];\n  for (var i = -1, m = min(matrix, length), transpose = new Array(m); ++i < m;) {\n    for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n;) {\n      row[j] = matrix[j][i];\n    }\n  }\n  return transpose;\n}\n\nfunction length(d) {\n  return d.length;\n}\n","import transpose from \"./transpose\";\n\nexport default function() {\n  return transpose(arguments);\n}\n","export var slice = Array.prototype.slice;\n","export default function(x) {\n  return x;\n}\n","import {slice} from \"./array\";\nimport identity from \"./identity\";\n\nvar top = 1,\n    right = 2,\n    bottom = 3,\n    left = 4,\n    epsilon = 1e-6;\n\nfunction translateX(x) {\n  return \"translate(\" + (x + 0.5) + \",0)\";\n}\n\nfunction translateY(y) {\n  return \"translate(0,\" + (y + 0.5) + \")\";\n}\n\nfunction number(scale) {\n  return function(d) {\n    return +scale(d);\n  };\n}\n\nfunction center(scale) {\n  var offset = Math.max(0, scale.bandwidth() - 1) / 2; // Adjust for 0.5px offset.\n  if (scale.round()) offset = Math.round(offset);\n  return function(d) {\n    return +scale(d) + offset;\n  };\n}\n\nfunction entering() {\n  return !this.__axis;\n}\n\nfunction axis(orient, scale) {\n  var tickArguments = [],\n      tickValues = null,\n      tickFormat = null,\n      tickSizeInner = 6,\n      tickSizeOuter = 6,\n      tickPadding = 3,\n      k = orient === top || orient === left ? -1 : 1,\n      x = orient === left || orient === right ? \"x\" : \"y\",\n      transform = orient === top || orient === bottom ? translateX : translateY;\n\n  function axis(context) {\n    var values = tickValues == null ? (scale.ticks ? scale.ticks.apply(scale, tickArguments) : scale.domain()) : tickValues,\n        format = tickFormat == null ? (scale.tickFormat ? scale.tickFormat.apply(scale, tickArguments) : identity) : tickFormat,\n        spacing = Math.max(tickSizeInner, 0) + tickPadding,\n        range = scale.range(),\n        range0 = +range[0] + 0.5,\n        range1 = +range[range.length - 1] + 0.5,\n        position = (scale.bandwidth ? center : number)(scale.copy()),\n        selection = context.selection ? context.selection() : context,\n        path = selection.selectAll(\".domain\").data([null]),\n        tick = selection.selectAll(\".tick\").data(values, scale).order(),\n        tickExit = tick.exit(),\n        tickEnter = tick.enter().append(\"g\").attr(\"class\", \"tick\"),\n        line = tick.select(\"line\"),\n        text = tick.select(\"text\");\n\n    path = path.merge(path.enter().insert(\"path\", \".tick\")\n        .attr(\"class\", \"domain\")\n        .attr(\"stroke\", \"#000\"));\n\n    tick = tick.merge(tickEnter);\n\n    line = line.merge(tickEnter.append(\"line\")\n        .attr(\"stroke\", \"#000\")\n        .attr(x + \"2\", k * tickSizeInner));\n\n    text = text.merge(tickEnter.append(\"text\")\n        .attr(\"fill\", \"#000\")\n        .attr(x, k * spacing)\n        .attr(\"dy\", orient === top ? \"0em\" : orient === bottom ? \"0.71em\" : \"0.32em\"));\n\n    if (context !== selection) {\n      path = path.transition(context);\n      tick = tick.transition(context);\n      line = line.transition(context);\n      text = text.transition(context);\n\n      tickExit = tickExit.transition(context)\n          .attr(\"opacity\", epsilon)\n          .attr(\"transform\", function(d) { return isFinite(d = position(d)) ? transform(d) : this.getAttribute(\"transform\"); });\n\n      tickEnter\n          .attr(\"opacity\", epsilon)\n          .attr(\"transform\", function(d) { var p = this.parentNode.__axis; return transform(p && isFinite(p = p(d)) ? p : position(d)); });\n    }\n\n    tickExit.remove();\n\n    path\n        .attr(\"d\", orient === left || orient == right\n            ? \"M\" + k * tickSizeOuter + \",\" + range0 + \"H0.5V\" + range1 + \"H\" + k * tickSizeOuter\n            : \"M\" + range0 + \",\" + k * tickSizeOuter + \"V0.5H\" + range1 + \"V\" + k * tickSizeOuter);\n\n    tick\n        .attr(\"opacity\", 1)\n        .attr(\"transform\", function(d) { return transform(position(d)); });\n\n    line\n        .attr(x + \"2\", k * tickSizeInner);\n\n    text\n        .attr(x, k * spacing)\n        .text(format);\n\n    selection.filter(entering)\n        .attr(\"fill\", \"none\")\n        .attr(\"font-size\", 10)\n        .attr(\"font-family\", \"sans-serif\")\n        .attr(\"text-anchor\", orient === right ? \"start\" : orient === left ? \"end\" : \"middle\");\n\n    selection\n        .each(function() { this.__axis = position; });\n  }\n\n  axis.scale = function(_) {\n    return arguments.length ? (scale = _, axis) : scale;\n  };\n\n  axis.ticks = function() {\n    return tickArguments = slice.call(arguments), axis;\n  };\n\n  axis.tickArguments = function(_) {\n    return arguments.length ? (tickArguments = _ == null ? [] : slice.call(_), axis) : tickArguments.slice();\n  };\n\n  axis.tickValues = function(_) {\n    return arguments.length ? (tickValues = _ == null ? null : slice.call(_), axis) : tickValues && tickValues.slice();\n  };\n\n  axis.tickFormat = function(_) {\n    return arguments.length ? (tickFormat = _, axis) : tickFormat;\n  };\n\n  axis.tickSize = function(_) {\n    return arguments.length ? (tickSizeInner = tickSizeOuter = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeInner = function(_) {\n    return arguments.length ? (tickSizeInner = +_, axis) : tickSizeInner;\n  };\n\n  axis.tickSizeOuter = function(_) {\n    return arguments.length ? (tickSizeOuter = +_, axis) : tickSizeOuter;\n  };\n\n  axis.tickPadding = function(_) {\n    return arguments.length ? (tickPadding = +_, axis) : tickPadding;\n  };\n\n  return axis;\n}\n\nexport function axisTop(scale) {\n  return axis(top, scale);\n}\n\nexport function axisRight(scale) {\n  return axis(right, scale);\n}\n\nexport function axisBottom(scale) {\n  return axis(bottom, scale);\n}\n\nexport function axisLeft(scale) {\n  return axis(left, scale);\n}\n","var noop = {value: function() {}};\n\nfunction dispatch() {\n  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\n    if (!(t = arguments[i] + \"\") || (t in _)) throw new Error(\"illegal type: \" + t);\n    _[t] = [];\n  }\n  return new Dispatch(_);\n}\n\nfunction Dispatch(_) {\n  this._ = _;\n}\n\nfunction parseTypenames(typenames, types) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\n    return {type: t, name: name};\n  });\n}\n\nDispatch.prototype = dispatch.prototype = {\n  constructor: Dispatch,\n  on: function(typename, callback) {\n    var _ = this._,\n        T = parseTypenames(typename + \"\", _),\n        t,\n        i = -1,\n        n = T.length;\n\n    // If no callback was specified, return the callback of the given type and name.\n    if (arguments.length < 2) {\n      while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\n      return;\n    }\n\n    // If a type was specified, set the callback for the given type and name.\n    // Otherwise, if a null callback was specified, remove callbacks of the given name.\n    if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    while (++i < n) {\n      if (t = (typename = T[i]).type) _[t] = set(_[t], typename.name, callback);\n      else if (callback == null) for (t in _) _[t] = set(_[t], typename.name, null);\n    }\n\n    return this;\n  },\n  copy: function() {\n    var copy = {}, _ = this._;\n    for (var t in _) copy[t] = _[t].slice();\n    return new Dispatch(copy);\n  },\n  call: function(type, that) {\n    if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  },\n  apply: function(type, that, args) {\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  }\n};\n\nfunction get(type, name) {\n  for (var i = 0, n = type.length, c; i < n; ++i) {\n    if ((c = type[i]).name === name) {\n      return c.value;\n    }\n  }\n}\n\nfunction set(type, name, callback) {\n  for (var i = 0, n = type.length; i < n; ++i) {\n    if (type[i].name === name) {\n      type[i] = noop, type = type.slice(0, i).concat(type.slice(i + 1));\n      break;\n    }\n  }\n  if (callback != null) type.push({name: name, value: callback});\n  return type;\n}\n\nexport default dispatch;\n","export var xhtml = \"http://www.w3.org/1999/xhtml\";\n\nexport default {\n  svg: \"http://www.w3.org/2000/svg\",\n  xhtml: xhtml,\n  xlink: \"http://www.w3.org/1999/xlink\",\n  xml: \"http://www.w3.org/XML/1998/namespace\",\n  xmlns: \"http://www.w3.org/2000/xmlns/\"\n};\n","import namespaces from \"./namespaces\";\n\nexport default function(name) {\n  var prefix = name += \"\", i = prefix.indexOf(\":\");\n  if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n  return namespaces.hasOwnProperty(prefix) ? {space: namespaces[prefix], local: name} : name;\n}\n","import namespace from \"./namespace\";\nimport {xhtml} from \"./namespaces\";\n\nfunction creatorInherit(name) {\n  return function() {\n    var document = this.ownerDocument,\n        uri = this.namespaceURI;\n    return uri === xhtml && document.documentElement.namespaceURI === xhtml\n        ? document.createElement(name)\n        : document.createElementNS(uri, name);\n  };\n}\n\nfunction creatorFixed(fullname) {\n  return function() {\n    return this.ownerDocument.createElementNS(fullname.space, fullname.local);\n  };\n}\n\nexport default function(name) {\n  var fullname = namespace(name);\n  return (fullname.local\n      ? creatorFixed\n      : creatorInherit)(fullname);\n}\n","function none() {}\n\nexport default function(selector) {\n  return selector == null ? none : function() {\n    return this.querySelector(selector);\n  };\n}\n","function empty() {\n  return [];\n}\n\nexport default function(selector) {\n  return selector == null ? empty : function() {\n    return this.querySelectorAll(selector);\n  };\n}\n","var matcher = function(selector) {\n  return function() {\n    return this.matches(selector);\n  };\n};\n\nif (typeof document !== \"undefined\") {\n  var element = document.documentElement;\n  if (!element.matches) {\n    var vendorMatches = element.webkitMatchesSelector\n        || element.msMatchesSelector\n        || element.mozMatchesSelector\n        || element.oMatchesSelector;\n    matcher = function(selector) {\n      return function() {\n        return vendorMatches.call(this, selector);\n      };\n    };\n  }\n}\n\nexport default matcher;\n","export default function(update) {\n  return new Array(update.length);\n}\n","import sparse from \"./sparse\";\nimport {Selection} from \"./index\";\n\nexport default function() {\n  return new Selection(this._enter || this._groups.map(sparse), this._parents);\n}\n\nexport function EnterNode(parent, datum) {\n  this.ownerDocument = parent.ownerDocument;\n  this.namespaceURI = parent.namespaceURI;\n  this._next = null;\n  this._parent = parent;\n  this.__data__ = datum;\n}\n\nEnterNode.prototype = {\n  constructor: EnterNode,\n  appendChild: function(child) { return this._parent.insertBefore(child, this._next); },\n  insertBefore: function(child, next) { return this._parent.insertBefore(child, next); },\n  querySelector: function(selector) { return this._parent.querySelector(selector); },\n  querySelectorAll: function(selector) { return this._parent.querySelectorAll(selector); }\n};\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","import {Selection} from \"./index\";\nimport {EnterNode} from \"./enter\";\nimport constant from \"../constant\";\n\nvar keyPrefix = \"$\"; // Protect against keys like “__proto__”.\n\nfunction bindIndex(parent, group, enter, update, exit, data) {\n  var i = 0,\n      node,\n      groupLength = group.length,\n      dataLength = data.length;\n\n  // Put any non-null nodes that fit into update.\n  // Put any null nodes into enter.\n  // Put any remaining data into enter.\n  for (; i < dataLength; ++i) {\n    if (node = group[i]) {\n      node.__data__ = data[i];\n      update[i] = node;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Put any non-null nodes that don’t fit into exit.\n  for (; i < groupLength; ++i) {\n    if (node = group[i]) {\n      exit[i] = node;\n    }\n  }\n}\n\nfunction bindKey(parent, group, enter, update, exit, data, key) {\n  var i,\n      node,\n      nodeByKeyValue = {},\n      groupLength = group.length,\n      dataLength = data.length,\n      keyValues = new Array(groupLength),\n      keyValue;\n\n  // Compute the key for each node.\n  // If multiple nodes have the same key, the duplicates are added to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if (node = group[i]) {\n      keyValues[i] = keyValue = keyPrefix + key.call(node, node.__data__, i, group);\n      if (keyValue in nodeByKeyValue) {\n        exit[i] = node;\n      } else {\n        nodeByKeyValue[keyValue] = node;\n      }\n    }\n  }\n\n  // Compute the key for each datum.\n  // If there a node associated with this key, join and add it to update.\n  // If there is not (or the key is a duplicate), add it to enter.\n  for (i = 0; i < dataLength; ++i) {\n    keyValue = keyPrefix + key.call(parent, data[i], i, data);\n    if (node = nodeByKeyValue[keyValue]) {\n      update[i] = node;\n      node.__data__ = data[i];\n      nodeByKeyValue[keyValue] = null;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Add any remaining nodes that were not bound to data to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if ((node = group[i]) && (nodeByKeyValue[keyValues[i]] === node)) {\n      exit[i] = node;\n    }\n  }\n}\n\nexport default function(value, key) {\n  if (!value) {\n    data = new Array(this.size()), j = -1;\n    this.each(function(d) { data[++j] = d; });\n    return data;\n  }\n\n  var bind = key ? bindKey : bindIndex,\n      parents = this._parents,\n      groups = this._groups;\n\n  if (typeof value !== \"function\") value = constant(value);\n\n  for (var m = groups.length, update = new Array(m), enter = new Array(m), exit = new Array(m), j = 0; j < m; ++j) {\n    var parent = parents[j],\n        group = groups[j],\n        groupLength = group.length,\n        data = value.call(parent, parent && parent.__data__, j, parents),\n        dataLength = data.length,\n        enterGroup = enter[j] = new Array(dataLength),\n        updateGroup = update[j] = new Array(dataLength),\n        exitGroup = exit[j] = new Array(groupLength);\n\n    bind(parent, group, enterGroup, updateGroup, exitGroup, data, key);\n\n    // Now connect the enter nodes to their following update node, such that\n    // appendChild can insert the materialized enter node before this node,\n    // rather than at the end of the parent node.\n    for (var i0 = 0, i1 = 0, previous, next; i0 < dataLength; ++i0) {\n      if (previous = enterGroup[i0]) {\n        if (i0 >= i1) i1 = i0 + 1;\n        while (!(next = updateGroup[i1]) && ++i1 < dataLength);\n        previous._next = next || null;\n      }\n    }\n  }\n\n  update = new Selection(update, parents);\n  update._enter = enter;\n  update._exit = exit;\n  return update;\n}\n","import {Selection} from \"./index\";\n\nexport default function(compare) {\n  if (!compare) compare = ascending;\n\n  function compareNode(a, b) {\n    return a && b ? compare(a.__data__, b.__data__) : !a - !b;\n  }\n\n  for (var groups = this._groups, m = groups.length, sortgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, sortgroup = sortgroups[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        sortgroup[i] = node;\n      }\n    }\n    sortgroup.sort(compareNode);\n  }\n\n  return new Selection(sortgroups, this._parents).order();\n}\n\nfunction ascending(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n","import namespace from \"../namespace\";\n\nfunction attrRemove(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, value) {\n  return function() {\n    this.setAttribute(name, value);\n  };\n}\n\nfunction attrConstantNS(fullname, value) {\n  return function() {\n    this.setAttributeNS(fullname.space, fullname.local, value);\n  };\n}\n\nfunction attrFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttribute(name);\n    else this.setAttribute(name, v);\n  };\n}\n\nfunction attrFunctionNS(fullname, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttributeNS(fullname.space, fullname.local);\n    else this.setAttributeNS(fullname.space, fullname.local, v);\n  };\n}\n\nexport default function(name, value) {\n  var fullname = namespace(name);\n\n  if (arguments.length < 2) {\n    var node = this.node();\n    return fullname.local\n        ? node.getAttributeNS(fullname.space, fullname.local)\n        : node.getAttribute(fullname);\n  }\n\n  return this.each((value == null\n      ? (fullname.local ? attrRemoveNS : attrRemove) : (typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS : attrFunction)\n      : (fullname.local ? attrConstantNS : attrConstant)))(fullname, value));\n}\n","export default function(node) {\n  return (node.ownerDocument && node.ownerDocument.defaultView) // node is a Node\n      || (node.document && node) // node is a Window\n      || node.defaultView; // node is a Document\n}\n","import defaultView from \"../window\";\n\nfunction styleRemove(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, value, priority) {\n  return function() {\n    this.style.setProperty(name, value, priority);\n  };\n}\n\nfunction styleFunction(name, value, priority) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.style.removeProperty(name);\n    else this.style.setProperty(name, v, priority);\n  };\n}\n\nexport default function(name, value, priority) {\n  return arguments.length > 1\n      ? this.each((value == null\n            ? styleRemove : typeof value === \"function\"\n            ? styleFunction\n            : styleConstant)(name, value, priority == null ? \"\" : priority))\n      : styleValue(this.node(), name);\n}\n\nexport function styleValue(node, name) {\n  return node.style.getPropertyValue(name)\n      || defaultView(node).getComputedStyle(node, null).getPropertyValue(name);\n}\n","function classArray(string) {\n  return string.trim().split(/^|\\s+/);\n}\n\nfunction classList(node) {\n  return node.classList || new ClassList(node);\n}\n\nfunction ClassList(node) {\n  this._node = node;\n  this._names = classArray(node.getAttribute(\"class\") || \"\");\n}\n\nClassList.prototype = {\n  add: function(name) {\n    var i = this._names.indexOf(name);\n    if (i < 0) {\n      this._names.push(name);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  remove: function(name) {\n    var i = this._names.indexOf(name);\n    if (i >= 0) {\n      this._names.splice(i, 1);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  contains: function(name) {\n    return this._names.indexOf(name) >= 0;\n  }\n};\n\nfunction classedAdd(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.add(names[i]);\n}\n\nfunction classedRemove(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.remove(names[i]);\n}\n\nfunction classedTrue(names) {\n  return function() {\n    classedAdd(this, names);\n  };\n}\n\nfunction classedFalse(names) {\n  return function() {\n    classedRemove(this, names);\n  };\n}\n\nfunction classedFunction(names, value) {\n  return function() {\n    (value.apply(this, arguments) ? classedAdd : classedRemove)(this, names);\n  };\n}\n\nexport default function(name, value) {\n  var names = classArray(name + \"\");\n\n  if (arguments.length < 2) {\n    var list = classList(this.node()), i = -1, n = names.length;\n    while (++i < n) if (!list.contains(names[i])) return false;\n    return true;\n  }\n\n  return this.each((typeof value === \"function\"\n      ? classedFunction : value\n      ? classedTrue\n      : classedFalse)(names, value));\n}\n","function textRemove() {\n  this.textContent = \"\";\n}\n\nfunction textConstant(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.textContent = v == null ? \"\" : v;\n  };\n}\n\nexport default function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? textRemove : (typeof value === \"function\"\n          ? textFunction\n          : textConstant)(value))\n      : this.node().textContent;\n}\n","function htmlRemove() {\n  this.innerHTML = \"\";\n}\n\nfunction htmlConstant(value) {\n  return function() {\n    this.innerHTML = value;\n  };\n}\n\nfunction htmlFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.innerHTML = v == null ? \"\" : v;\n  };\n}\n\nexport default function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? htmlRemove : (typeof value === \"function\"\n          ? htmlFunction\n          : htmlConstant)(value))\n      : this.node().innerHTML;\n}\n","function raise() {\n  if (this.nextSibling) this.parentNode.appendChild(this);\n}\n\nexport default function() {\n  return this.each(raise);\n}\n","function lower() {\n  if (this.previousSibling) this.parentNode.insertBefore(this, this.parentNode.firstChild);\n}\n\nexport default function() {\n  return this.each(lower);\n}\n","import creator from \"../creator\";\nimport selector from \"../selector\";\n\nfunction constantNull() {\n  return null;\n}\n\nexport default function(name, before) {\n  var create = typeof name === \"function\" ? name : creator(name),\n      select = before == null ? constantNull : typeof before === \"function\" ? before : selector(before);\n  return this.select(function() {\n    return this.insertBefore(create.apply(this, arguments), select.apply(this, arguments) || null);\n  });\n}\n","function remove() {\n  var parent = this.parentNode;\n  if (parent) parent.removeChild(this);\n}\n\nexport default function() {\n  return this.each(remove);\n}\n","function selection_cloneShallow() {\n  return this.parentNode.insertBefore(this.cloneNode(false), this.nextSibling);\n}\n\nfunction selection_cloneDeep() {\n  return this.parentNode.insertBefore(this.cloneNode(true), this.nextSibling);\n}\n\nexport default function(deep) {\n  return this.select(deep ? selection_cloneDeep : selection_cloneShallow);\n}\n","var filterEvents = {};\n\nexport var event = null;\n\nif (typeof document !== \"undefined\") {\n  var element = document.documentElement;\n  if (!(\"onmouseenter\" in element)) {\n    filterEvents = {mouseenter: \"mouseover\", mouseleave: \"mouseout\"};\n  }\n}\n\nfunction filterContextListener(listener, index, group) {\n  listener = contextListener(listener, index, group);\n  return function(event) {\n    var related = event.relatedTarget;\n    if (!related || (related !== this && !(related.compareDocumentPosition(this) & 8))) {\n      listener.call(this, event);\n    }\n  };\n}\n\nfunction contextListener(listener, index, group) {\n  return function(event1) {\n    var event0 = event; // Events can be reentrant (e.g., focus).\n    event = event1;\n    try {\n      listener.call(this, this.__data__, index, group);\n    } finally {\n      event = event0;\n    }\n  };\n}\n\nfunction parseTypenames(typenames) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    return {type: t, name: name};\n  });\n}\n\nfunction onRemove(typename) {\n  return function() {\n    var on = this.__on;\n    if (!on) return;\n    for (var j = 0, i = -1, m = on.length, o; j < m; ++j) {\n      if (o = on[j], (!typename.type || o.type === typename.type) && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n      } else {\n        on[++i] = o;\n      }\n    }\n    if (++i) on.length = i;\n    else delete this.__on;\n  };\n}\n\nfunction onAdd(typename, value, capture) {\n  var wrap = filterEvents.hasOwnProperty(typename.type) ? filterContextListener : contextListener;\n  return function(d, i, group) {\n    var on = this.__on, o, listener = wrap(value, i, group);\n    if (on) for (var j = 0, m = on.length; j < m; ++j) {\n      if ((o = on[j]).type === typename.type && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.capture);\n        this.addEventListener(o.type, o.listener = listener, o.capture = capture);\n        o.value = value;\n        return;\n      }\n    }\n    this.addEventListener(typename.type, listener, capture);\n    o = {type: typename.type, name: typename.name, value: value, listener: listener, capture: capture};\n    if (!on) this.__on = [o];\n    else on.push(o);\n  };\n}\n\nexport default function(typename, value, capture) {\n  var typenames = parseTypenames(typename + \"\"), i, n = typenames.length, t;\n\n  if (arguments.length < 2) {\n    var on = this.node().__on;\n    if (on) for (var j = 0, m = on.length, o; j < m; ++j) {\n      for (i = 0, o = on[j]; i < n; ++i) {\n        if ((t = typenames[i]).type === o.type && t.name === o.name) {\n          return o.value;\n        }\n      }\n    }\n    return;\n  }\n\n  on = value ? onAdd : onRemove;\n  if (capture == null) capture = false;\n  for (i = 0; i < n; ++i) this.each(on(typenames[i], value, capture));\n  return this;\n}\n\nexport function customEvent(event1, listener, that, args) {\n  var event0 = event;\n  event1.sourceEvent = event;\n  event = event1;\n  try {\n    return listener.apply(that, args);\n  } finally {\n    event = event0;\n  }\n}\n","import defaultView from \"../window\";\n\nfunction dispatchEvent(node, type, params) {\n  var window = defaultView(node),\n      event = window.CustomEvent;\n\n  if (typeof event === \"function\") {\n    event = new event(type, params);\n  } else {\n    event = window.document.createEvent(\"Event\");\n    if (params) event.initEvent(type, params.bubbles, params.cancelable), event.detail = params.detail;\n    else event.initEvent(type, false, false);\n  }\n\n  node.dispatchEvent(event);\n}\n\nfunction dispatchConstant(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params);\n  };\n}\n\nfunction dispatchFunction(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params.apply(this, arguments));\n  };\n}\n\nexport default function(type, params) {\n  return this.each((typeof params === \"function\"\n      ? dispatchFunction\n      : dispatchConstant)(type, params));\n}\n","import selection_select from \"./select\";\nimport selection_selectAll from \"./selectAll\";\nimport selection_filter from \"./filter\";\nimport selection_data from \"./data\";\nimport selection_enter from \"./enter\";\nimport selection_exit from \"./exit\";\nimport selection_merge from \"./merge\";\nimport selection_order from \"./order\";\nimport selection_sort from \"./sort\";\nimport selection_call from \"./call\";\nimport selection_nodes from \"./nodes\";\nimport selection_node from \"./node\";\nimport selection_size from \"./size\";\nimport selection_empty from \"./empty\";\nimport selection_each from \"./each\";\nimport selection_attr from \"./attr\";\nimport selection_style from \"./style\";\nimport selection_property from \"./property\";\nimport selection_classed from \"./classed\";\nimport selection_text from \"./text\";\nimport selection_html from \"./html\";\nimport selection_raise from \"./raise\";\nimport selection_lower from \"./lower\";\nimport selection_append from \"./append\";\nimport selection_insert from \"./insert\";\nimport selection_remove from \"./remove\";\nimport selection_clone from \"./clone\";\nimport selection_datum from \"./datum\";\nimport selection_on from \"./on\";\nimport selection_dispatch from \"./dispatch\";\n\nexport var root = [null];\n\nexport function Selection(groups, parents) {\n  this._groups = groups;\n  this._parents = parents;\n}\n\nfunction selection() {\n  return new Selection([[document.documentElement]], root);\n}\n\nSelection.prototype = selection.prototype = {\n  constructor: Selection,\n  select: selection_select,\n  selectAll: selection_selectAll,\n  filter: selection_filter,\n  data: selection_data,\n  enter: selection_enter,\n  exit: selection_exit,\n  merge: selection_merge,\n  order: selection_order,\n  sort: selection_sort,\n  call: selection_call,\n  nodes: selection_nodes,\n  node: selection_node,\n  size: selection_size,\n  empty: selection_empty,\n  each: selection_each,\n  attr: selection_attr,\n  style: selection_style,\n  property: selection_property,\n  classed: selection_classed,\n  text: selection_text,\n  html: selection_html,\n  raise: selection_raise,\n  lower: selection_lower,\n  append: selection_append,\n  insert: selection_insert,\n  remove: selection_remove,\n  clone: selection_clone,\n  datum: selection_datum,\n  on: selection_on,\n  dispatch: selection_dispatch\n};\n\nexport default selection;\n","import {Selection} from \"./index\";\nimport selector from \"../selector\";\n\nexport default function(select) {\n  if (typeof select !== \"function\") select = selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n}\n","import {Selection} from \"./index\";\nimport selectorAll from \"../selectorAll\";\n\nexport default function(select) {\n  if (typeof select !== \"function\") select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        subgroups.push(select.call(node, node.__data__, i, group));\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, parents);\n}\n","import {Selection} from \"./index\";\nimport matcher from \"../matcher\";\n\nexport default function(match) {\n  if (typeof match !== \"function\") match = matcher(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n}\n","import sparse from \"./sparse\";\nimport {Selection} from \"./index\";\n\nexport default function() {\n  return new Selection(this._exit || this._groups.map(sparse), this._parents);\n}\n","import {Selection} from \"./index\";\n\nexport default function(selection) {\n\n  for (var groups0 = this._groups, groups1 = selection._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Selection(merges, this._parents);\n}\n","export default function() {\n\n  for (var groups = this._groups, j = -1, m = groups.length; ++j < m;) {\n    for (var group = groups[j], i = group.length - 1, next = group[i], node; --i >= 0;) {\n      if (node = group[i]) {\n        if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n        next = node;\n      }\n    }\n  }\n\n  return this;\n}\n","export default function() {\n  var callback = arguments[0];\n  arguments[0] = this;\n  callback.apply(null, arguments);\n  return this;\n}\n","export default function() {\n  var nodes = new Array(this.size()), i = -1;\n  this.each(function() { nodes[++i] = this; });\n  return nodes;\n}\n","export default function() {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length; i < n; ++i) {\n      var node = group[i];\n      if (node) return node;\n    }\n  }\n\n  return null;\n}\n","export default function() {\n  var size = 0;\n  this.each(function() { ++size; });\n  return size;\n}\n","export default function() {\n  return !this.node();\n}\n","export default function(callback) {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {\n      if (node = group[i]) callback.call(node, node.__data__, i, group);\n    }\n  }\n\n  return this;\n}\n","function propertyRemove(name) {\n  return function() {\n    delete this[name];\n  };\n}\n\nfunction propertyConstant(name, value) {\n  return function() {\n    this[name] = value;\n  };\n}\n\nfunction propertyFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) delete this[name];\n    else this[name] = v;\n  };\n}\n\nexport default function(name, value) {\n  return arguments.length > 1\n      ? this.each((value == null\n          ? propertyRemove : typeof value === \"function\"\n          ? propertyFunction\n          : propertyConstant)(name, value))\n      : this.node()[name];\n}\n","import creator from \"../creator\";\n\nexport default function(name) {\n  var create = typeof name === \"function\" ? name : creator(name);\n  return this.select(function() {\n    return this.appendChild(create.apply(this, arguments));\n  });\n}\n","export default function(value) {\n  return arguments.length\n      ? this.property(\"__data__\", value)\n      : this.node().__data__;\n}\n","import {Selection, root} from \"./selection/index\";\n\nexport default function(selector) {\n  return typeof selector === \"string\"\n      ? new Selection([[document.querySelector(selector)]], [document.documentElement])\n      : new Selection([[selector]], root);\n}\n","import creator from \"./creator\";\nimport select from \"./select\";\n\nexport default function(name) {\n  return select(creator(name).call(document.documentElement));\n}\n","var nextId = 0;\n\nexport default function local() {\n  return new Local;\n}\n\nfunction Local() {\n  this._ = \"@\" + (++nextId).toString(36);\n}\n\nLocal.prototype = local.prototype = {\n  constructor: Local,\n  get: function(node) {\n    var id = this._;\n    while (!(id in node)) if (!(node = node.parentNode)) return;\n    return node[id];\n  },\n  set: function(node, value) {\n    return node[this._] = value;\n  },\n  remove: function(node) {\n    return this._ in node && delete node[this._];\n  },\n  toString: function() {\n    return this._;\n  }\n};\n","import {event} from \"./selection/on\";\n\nexport default function() {\n  var current = event, source;\n  while (source = current.sourceEvent) current = source;\n  return current;\n}\n","export default function(node, event) {\n  var svg = node.ownerSVGElement || node;\n\n  if (svg.createSVGPoint) {\n    var point = svg.createSVGPoint();\n    point.x = event.clientX, point.y = event.clientY;\n    point = point.matrixTransform(node.getScreenCTM().inverse());\n    return [point.x, point.y];\n  }\n\n  var rect = node.getBoundingClientRect();\n  return [event.clientX - rect.left - node.clientLeft, event.clientY - rect.top - node.clientTop];\n}\n","import sourceEvent from \"./sourceEvent\";\nimport point from \"./point\";\n\nexport default function(node) {\n  var event = sourceEvent();\n  if (event.changedTouches) event = event.changedTouches[0];\n  return point(node, event);\n}\n","import {Selection, root} from \"./selection/index\";\n\nexport default function(selector) {\n  return typeof selector === \"string\"\n      ? new Selection([document.querySelectorAll(selector)], [document.documentElement])\n      : new Selection([selector == null ? [] : selector], root);\n}\n","import sourceEvent from \"./sourceEvent\";\nimport point from \"./point\";\n\nexport default function(node, touches, identifier) {\n  if (arguments.length < 3) identifier = touches, touches = sourceEvent().changedTouches;\n\n  for (var i = 0, n = touches ? touches.length : 0, touch; i < n; ++i) {\n    if ((touch = touches[i]).identifier === identifier) {\n      return point(node, touch);\n    }\n  }\n\n  return null;\n}\n","import sourceEvent from \"./sourceEvent\";\nimport point from \"./point\";\n\nexport default function(node, touches) {\n  if (touches == null) touches = sourceEvent().touches;\n\n  for (var i = 0, n = touches ? touches.length : 0, points = new Array(n); i < n; ++i) {\n    points[i] = point(node, touches[i]);\n  }\n\n  return points;\n}\n","import {event} from \"d3-selection\";\n\nexport function nopropagation() {\n  event.stopImmediatePropagation();\n}\n\nexport default function() {\n  event.preventDefault();\n  event.stopImmediatePropagation();\n}\n","import {select} from \"d3-selection\";\nimport noevent from \"./noevent\";\n\nexport default function(view) {\n  var root = view.document.documentElement,\n      selection = select(view).on(\"dragstart.drag\", noevent, true);\n  if (\"onselectstart\" in root) {\n    selection.on(\"selectstart.drag\", noevent, true);\n  } else {\n    root.__noselect = root.style.MozUserSelect;\n    root.style.MozUserSelect = \"none\";\n  }\n}\n\nexport function yesdrag(view, noclick) {\n  var root = view.document.documentElement,\n      selection = select(view).on(\"dragstart.drag\", null);\n  if (noclick) {\n    selection.on(\"click.drag\", noevent, true);\n    setTimeout(function() { selection.on(\"click.drag\", null); }, 0);\n  }\n  if (\"onselectstart\" in root) {\n    selection.on(\"selectstart.drag\", null);\n  } else {\n    root.style.MozUserSelect = root.__noselect;\n    delete root.__noselect;\n  }\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function DragEvent(target, type, subject, id, active, x, y, dx, dy, dispatch) {\n  this.target = target;\n  this.type = type;\n  this.subject = subject;\n  this.identifier = id;\n  this.active = active;\n  this.x = x;\n  this.y = y;\n  this.dx = dx;\n  this.dy = dy;\n  this._ = dispatch;\n}\n\nDragEvent.prototype.on = function() {\n  var value = this._.on.apply(this._, arguments);\n  return value === this._ ? this : value;\n};\n","import {dispatch} from \"d3-dispatch\";\nimport {event, customEvent, select, mouse, touch} from \"d3-selection\";\nimport nodrag, {yesdrag} from \"./nodrag\";\nimport noevent, {nopropagation} from \"./noevent\";\nimport constant from \"./constant\";\nimport DragEvent from \"./event\";\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter() {\n  return !event.button;\n}\n\nfunction defaultContainer() {\n  return this.parentNode;\n}\n\nfunction defaultSubject(d) {\n  return d == null ? {x: event.x, y: event.y} : d;\n}\n\nfunction defaultTouchable() {\n  return \"ontouchstart\" in this;\n}\n\nexport default function() {\n  var filter = defaultFilter,\n      container = defaultContainer,\n      subject = defaultSubject,\n      touchable = defaultTouchable,\n      gestures = {},\n      listeners = dispatch(\"start\", \"drag\", \"end\"),\n      active = 0,\n      mousedownx,\n      mousedowny,\n      mousemoving,\n      touchending,\n      clickDistance2 = 0;\n\n  function drag(selection) {\n    selection\n        .on(\"mousedown.drag\", mousedowned)\n      .filter(touchable)\n        .on(\"touchstart.drag\", touchstarted)\n        .on(\"touchmove.drag\", touchmoved)\n        .on(\"touchend.drag touchcancel.drag\", touchended)\n        .style(\"touch-action\", \"none\")\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n  }\n\n  function mousedowned() {\n    if (touchending || !filter.apply(this, arguments)) return;\n    var gesture = beforestart(\"mouse\", container.apply(this, arguments), mouse, this, arguments);\n    if (!gesture) return;\n    select(event.view).on(\"mousemove.drag\", mousemoved, true).on(\"mouseup.drag\", mouseupped, true);\n    nodrag(event.view);\n    nopropagation();\n    mousemoving = false;\n    mousedownx = event.clientX;\n    mousedowny = event.clientY;\n    gesture(\"start\");\n  }\n\n  function mousemoved() {\n    noevent();\n    if (!mousemoving) {\n      var dx = event.clientX - mousedownx, dy = event.clientY - mousedowny;\n      mousemoving = dx * dx + dy * dy > clickDistance2;\n    }\n    gestures.mouse(\"drag\");\n  }\n\n  function mouseupped() {\n    select(event.view).on(\"mousemove.drag mouseup.drag\", null);\n    yesdrag(event.view, mousemoving);\n    noevent();\n    gestures.mouse(\"end\");\n  }\n\n  function touchstarted() {\n    if (!filter.apply(this, arguments)) return;\n    var touches = event.changedTouches,\n        c = container.apply(this, arguments),\n        n = touches.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = beforestart(touches[i].identifier, c, touch, this, arguments)) {\n        nopropagation();\n        gesture(\"start\");\n      }\n    }\n  }\n\n  function touchmoved() {\n    var touches = event.changedTouches,\n        n = touches.length, i, gesture;\n\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches[i].identifier]) {\n        noevent();\n        gesture(\"drag\");\n      }\n    }\n  }\n\n  function touchended() {\n    var touches = event.changedTouches,\n        n = touches.length, i, gesture;\n\n    if (touchending) clearTimeout(touchending);\n    touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n    for (i = 0; i < n; ++i) {\n      if (gesture = gestures[touches[i].identifier]) {\n        nopropagation();\n        gesture(\"end\");\n      }\n    }\n  }\n\n  function beforestart(id, container, point, that, args) {\n    var p = point(container, id), s, dx, dy,\n        sublisteners = listeners.copy();\n\n    if (!customEvent(new DragEvent(drag, \"beforestart\", s, id, active, p[0], p[1], 0, 0, sublisteners), function() {\n      if ((event.subject = s = subject.apply(that, args)) == null) return false;\n      dx = s.x - p[0] || 0;\n      dy = s.y - p[1] || 0;\n      return true;\n    })) return;\n\n    return function gesture(type) {\n      var p0 = p, n;\n      switch (type) {\n        case \"start\": gestures[id] = gesture, n = active++; break;\n        case \"end\": delete gestures[id], --active; // nobreak\n        case \"drag\": p = point(container, id), n = active; break;\n      }\n      customEvent(new DragEvent(drag, type, s, id, n, p[0] + dx, p[1] + dy, p[0] - p0[0], p[1] - p0[1], sublisteners), sublisteners.apply, sublisteners, [type, that, args]);\n    };\n  }\n\n  drag.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant(!!_), drag) : filter;\n  };\n\n  drag.container = function(_) {\n    return arguments.length ? (container = typeof _ === \"function\" ? _ : constant(_), drag) : container;\n  };\n\n  drag.subject = function(_) {\n    return arguments.length ? (subject = typeof _ === \"function\" ? _ : constant(_), drag) : subject;\n  };\n\n  drag.touchable = function(_) {\n    return arguments.length ? (touchable = typeof _ === \"function\" ? _ : constant(!!_), drag) : touchable;\n  };\n\n  drag.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? drag : value;\n  };\n\n  drag.clickDistance = function(_) {\n    return arguments.length ? (clickDistance2 = (_ = +_) * _, drag) : Math.sqrt(clickDistance2);\n  };\n\n  return drag;\n}\n","export default function(constructor, factory, prototype) {\n  constructor.prototype = factory.prototype = prototype;\n  prototype.constructor = constructor;\n}\n\nexport function extend(parent, definition) {\n  var prototype = Object.create(parent.prototype);\n  for (var key in definition) prototype[key] = definition[key];\n  return prototype;\n}\n","import define, {extend} from \"./define\";\n\nexport function Color() {}\n\nexport var darker = 0.7;\nexport var brighter = 1 / darker;\n\nvar reI = \"\\\\s*([+-]?\\\\d+)\\\\s*\",\n    reN = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)\\\\s*\",\n    reP = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)%\\\\s*\",\n    reHex3 = /^#([0-9a-f]{3})$/,\n    reHex6 = /^#([0-9a-f]{6})$/,\n    reRgbInteger = new RegExp(\"^rgb\\\\(\" + [reI, reI, reI] + \"\\\\)$\"),\n    reRgbPercent = new RegExp(\"^rgb\\\\(\" + [reP, reP, reP] + \"\\\\)$\"),\n    reRgbaInteger = new RegExp(\"^rgba\\\\(\" + [reI, reI, reI, reN] + \"\\\\)$\"),\n    reRgbaPercent = new RegExp(\"^rgba\\\\(\" + [reP, reP, reP, reN] + \"\\\\)$\"),\n    reHslPercent = new RegExp(\"^hsl\\\\(\" + [reN, reP, reP] + \"\\\\)$\"),\n    reHslaPercent = new RegExp(\"^hsla\\\\(\" + [reN, reP, reP, reN] + \"\\\\)$\");\n\nvar named = {\n  aliceblue: 0xf0f8ff,\n  antiquewhite: 0xfaebd7,\n  aqua: 0x00ffff,\n  aquamarine: 0x7fffd4,\n  azure: 0xf0ffff,\n  beige: 0xf5f5dc,\n  bisque: 0xffe4c4,\n  black: 0x000000,\n  blanchedalmond: 0xffebcd,\n  blue: 0x0000ff,\n  blueviolet: 0x8a2be2,\n  brown: 0xa52a2a,\n  burlywood: 0xdeb887,\n  cadetblue: 0x5f9ea0,\n  chartreuse: 0x7fff00,\n  chocolate: 0xd2691e,\n  coral: 0xff7f50,\n  cornflowerblue: 0x6495ed,\n  cornsilk: 0xfff8dc,\n  crimson: 0xdc143c,\n  cyan: 0x00ffff,\n  darkblue: 0x00008b,\n  darkcyan: 0x008b8b,\n  darkgoldenrod: 0xb8860b,\n  darkgray: 0xa9a9a9,\n  darkgreen: 0x006400,\n  darkgrey: 0xa9a9a9,\n  darkkhaki: 0xbdb76b,\n  darkmagenta: 0x8b008b,\n  darkolivegreen: 0x556b2f,\n  darkorange: 0xff8c00,\n  darkorchid: 0x9932cc,\n  darkred: 0x8b0000,\n  darksalmon: 0xe9967a,\n  darkseagreen: 0x8fbc8f,\n  darkslateblue: 0x483d8b,\n  darkslategray: 0x2f4f4f,\n  darkslategrey: 0x2f4f4f,\n  darkturquoise: 0x00ced1,\n  darkviolet: 0x9400d3,\n  deeppink: 0xff1493,\n  deepskyblue: 0x00bfff,\n  dimgray: 0x696969,\n  dimgrey: 0x696969,\n  dodgerblue: 0x1e90ff,\n  firebrick: 0xb22222,\n  floralwhite: 0xfffaf0,\n  forestgreen: 0x228b22,\n  fuchsia: 0xff00ff,\n  gainsboro: 0xdcdcdc,\n  ghostwhite: 0xf8f8ff,\n  gold: 0xffd700,\n  goldenrod: 0xdaa520,\n  gray: 0x808080,\n  green: 0x008000,\n  greenyellow: 0xadff2f,\n  grey: 0x808080,\n  honeydew: 0xf0fff0,\n  hotpink: 0xff69b4,\n  indianred: 0xcd5c5c,\n  indigo: 0x4b0082,\n  ivory: 0xfffff0,\n  khaki: 0xf0e68c,\n  lavender: 0xe6e6fa,\n  lavenderblush: 0xfff0f5,\n  lawngreen: 0x7cfc00,\n  lemonchiffon: 0xfffacd,\n  lightblue: 0xadd8e6,\n  lightcoral: 0xf08080,\n  lightcyan: 0xe0ffff,\n  lightgoldenrodyellow: 0xfafad2,\n  lightgray: 0xd3d3d3,\n  lightgreen: 0x90ee90,\n  lightgrey: 0xd3d3d3,\n  lightpink: 0xffb6c1,\n  lightsalmon: 0xffa07a,\n  lightseagreen: 0x20b2aa,\n  lightskyblue: 0x87cefa,\n  lightslategray: 0x778899,\n  lightslategrey: 0x778899,\n  lightsteelblue: 0xb0c4de,\n  lightyellow: 0xffffe0,\n  lime: 0x00ff00,\n  limegreen: 0x32cd32,\n  linen: 0xfaf0e6,\n  magenta: 0xff00ff,\n  maroon: 0x800000,\n  mediumaquamarine: 0x66cdaa,\n  mediumblue: 0x0000cd,\n  mediumorchid: 0xba55d3,\n  mediumpurple: 0x9370db,\n  mediumseagreen: 0x3cb371,\n  mediumslateblue: 0x7b68ee,\n  mediumspringgreen: 0x00fa9a,\n  mediumturquoise: 0x48d1cc,\n  mediumvioletred: 0xc71585,\n  midnightblue: 0x191970,\n  mintcream: 0xf5fffa,\n  mistyrose: 0xffe4e1,\n  moccasin: 0xffe4b5,\n  navajowhite: 0xffdead,\n  navy: 0x000080,\n  oldlace: 0xfdf5e6,\n  olive: 0x808000,\n  olivedrab: 0x6b8e23,\n  orange: 0xffa500,\n  orangered: 0xff4500,\n  orchid: 0xda70d6,\n  palegoldenrod: 0xeee8aa,\n  palegreen: 0x98fb98,\n  paleturquoise: 0xafeeee,\n  palevioletred: 0xdb7093,\n  papayawhip: 0xffefd5,\n  peachpuff: 0xffdab9,\n  peru: 0xcd853f,\n  pink: 0xffc0cb,\n  plum: 0xdda0dd,\n  powderblue: 0xb0e0e6,\n  purple: 0x800080,\n  rebeccapurple: 0x663399,\n  red: 0xff0000,\n  rosybrown: 0xbc8f8f,\n  royalblue: 0x4169e1,\n  saddlebrown: 0x8b4513,\n  salmon: 0xfa8072,\n  sandybrown: 0xf4a460,\n  seagreen: 0x2e8b57,\n  seashell: 0xfff5ee,\n  sienna: 0xa0522d,\n  silver: 0xc0c0c0,\n  skyblue: 0x87ceeb,\n  slateblue: 0x6a5acd,\n  slategray: 0x708090,\n  slategrey: 0x708090,\n  snow: 0xfffafa,\n  springgreen: 0x00ff7f,\n  steelblue: 0x4682b4,\n  tan: 0xd2b48c,\n  teal: 0x008080,\n  thistle: 0xd8bfd8,\n  tomato: 0xff6347,\n  turquoise: 0x40e0d0,\n  violet: 0xee82ee,\n  wheat: 0xf5deb3,\n  white: 0xffffff,\n  whitesmoke: 0xf5f5f5,\n  yellow: 0xffff00,\n  yellowgreen: 0x9acd32\n};\n\ndefine(Color, color, {\n  displayable: function() {\n    return this.rgb().displayable();\n  },\n  hex: function() {\n    return this.rgb().hex();\n  },\n  toString: function() {\n    return this.rgb() + \"\";\n  }\n});\n\nexport default function color(format) {\n  var m;\n  format = (format + \"\").trim().toLowerCase();\n  return (m = reHex3.exec(format)) ? (m = parseInt(m[1], 16), new Rgb((m >> 8 & 0xf) | (m >> 4 & 0x0f0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1)) // #f00\n      : (m = reHex6.exec(format)) ? rgbn(parseInt(m[1], 16)) // #ff0000\n      : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\n      : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)\n      : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\n      : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)\n      : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\n      : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\n      : named.hasOwnProperty(format) ? rgbn(named[format])\n      : format === \"transparent\" ? new Rgb(NaN, NaN, NaN, 0)\n      : null;\n}\n\nfunction rgbn(n) {\n  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);\n}\n\nfunction rgba(r, g, b, a) {\n  if (a <= 0) r = g = b = NaN;\n  return new Rgb(r, g, b, a);\n}\n\nexport function rgbConvert(o) {\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Rgb;\n  o = o.rgb();\n  return new Rgb(o.r, o.g, o.b, o.opacity);\n}\n\nexport function rgb(r, g, b, opacity) {\n  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);\n}\n\nexport function Rgb(r, g, b, opacity) {\n  this.r = +r;\n  this.g = +g;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Rgb, rgb, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  rgb: function() {\n    return this;\n  },\n  displayable: function() {\n    return (0 <= this.r && this.r <= 255)\n        && (0 <= this.g && this.g <= 255)\n        && (0 <= this.b && this.b <= 255)\n        && (0 <= this.opacity && this.opacity <= 1);\n  },\n  hex: function() {\n    return \"#\" + hex(this.r) + hex(this.g) + hex(this.b);\n  },\n  toString: function() {\n    var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n    return (a === 1 ? \"rgb(\" : \"rgba(\")\n        + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + \", \"\n        + Math.max(0, Math.min(255, Math.round(this.b) || 0))\n        + (a === 1 ? \")\" : \", \" + a + \")\");\n  }\n}));\n\nfunction hex(value) {\n  value = Math.max(0, Math.min(255, Math.round(value) || 0));\n  return (value < 16 ? \"0\" : \"\") + value.toString(16);\n}\n\nfunction hsla(h, s, l, a) {\n  if (a <= 0) h = s = l = NaN;\n  else if (l <= 0 || l >= 1) h = s = NaN;\n  else if (s <= 0) h = NaN;\n  return new Hsl(h, s, l, a);\n}\n\nexport function hslConvert(o) {\n  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Hsl;\n  if (o instanceof Hsl) return o;\n  o = o.rgb();\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      h = NaN,\n      s = max - min,\n      l = (max + min) / 2;\n  if (s) {\n    if (r === max) h = (g - b) / s + (g < b) * 6;\n    else if (g === max) h = (b - r) / s + 2;\n    else h = (r - g) / s + 4;\n    s /= l < 0.5 ? max + min : 2 - max - min;\n    h *= 60;\n  } else {\n    s = l > 0 && l < 1 ? 0 : h;\n  }\n  return new Hsl(h, s, l, o.opacity);\n}\n\nexport function hsl(h, s, l, opacity) {\n  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hsl(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hsl, hsl, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = this.h % 360 + (this.h < 0) * 360,\n        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n        l = this.l,\n        m2 = l + (l < 0.5 ? l : 1 - l) * s,\n        m1 = 2 * l - m2;\n    return new Rgb(\n      hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),\n      hsl2rgb(h, m1, m2),\n      hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),\n      this.opacity\n    );\n  },\n  displayable: function() {\n    return (0 <= this.s && this.s <= 1 || isNaN(this.s))\n        && (0 <= this.l && this.l <= 1)\n        && (0 <= this.opacity && this.opacity <= 1);\n  }\n}));\n\n/* From FvD 13.37, CSS Color Module Level 3 */\nfunction hsl2rgb(h, m1, m2) {\n  return (h < 60 ? m1 + (m2 - m1) * h / 60\n      : h < 180 ? m2\n      : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60\n      : m1) * 255;\n}\n","export var deg2rad = Math.PI / 180;\nexport var rad2deg = 180 / Math.PI;\n","import define, {extend} from \"./define\";\nimport {Color, rgbConvert, Rgb} from \"./color\";\nimport {deg2rad, rad2deg} from \"./math\";\n\n// https://beta.observablehq.com/@mbostock/lab-and-rgb\nvar K = 18,\n    Xn = 0.96422,\n    Yn = 1,\n    Zn = 0.82521,\n    t0 = 4 / 29,\n    t1 = 6 / 29,\n    t2 = 3 * t1 * t1,\n    t3 = t1 * t1 * t1;\n\nfunction labConvert(o) {\n  if (o instanceof Lab) return new Lab(o.l, o.a, o.b, o.opacity);\n  if (o instanceof Hcl) {\n    if (isNaN(o.h)) return new Lab(o.l, 0, 0, o.opacity);\n    var h = o.h * deg2rad;\n    return new Lab(o.l, Math.cos(h) * o.c, Math.sin(h) * o.c, o.opacity);\n  }\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = rgb2lrgb(o.r),\n      g = rgb2lrgb(o.g),\n      b = rgb2lrgb(o.b),\n      y = xyz2lab((0.2225045 * r + 0.7168786 * g + 0.0606169 * b) / Yn), x, z;\n  if (r === g && g === b) x = z = y; else {\n    x = xyz2lab((0.4360747 * r + 0.3850649 * g + 0.1430804 * b) / Xn);\n    z = xyz2lab((0.0139322 * r + 0.0971045 * g + 0.7141733 * b) / Zn);\n  }\n  return new Lab(116 * y - 16, 500 * (x - y), 200 * (y - z), o.opacity);\n}\n\nexport function gray(l, opacity) {\n  return new Lab(l, 0, 0, opacity == null ? 1 : opacity);\n}\n\nexport default function lab(l, a, b, opacity) {\n  return arguments.length === 1 ? labConvert(l) : new Lab(l, a, b, opacity == null ? 1 : opacity);\n}\n\nexport function Lab(l, a, b, opacity) {\n  this.l = +l;\n  this.a = +a;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Lab, lab, extend(Color, {\n  brighter: function(k) {\n    return new Lab(this.l + K * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  darker: function(k) {\n    return new Lab(this.l - K * (k == null ? 1 : k), this.a, this.b, this.opacity);\n  },\n  rgb: function() {\n    var y = (this.l + 16) / 116,\n        x = isNaN(this.a) ? y : y + this.a / 500,\n        z = isNaN(this.b) ? y : y - this.b / 200;\n    x = Xn * lab2xyz(x);\n    y = Yn * lab2xyz(y);\n    z = Zn * lab2xyz(z);\n    return new Rgb(\n      lrgb2rgb( 3.1338561 * x - 1.6168667 * y - 0.4906146 * z),\n      lrgb2rgb(-0.9787684 * x + 1.9161415 * y + 0.0334540 * z),\n      lrgb2rgb( 0.0719453 * x - 0.2289914 * y + 1.4052427 * z),\n      this.opacity\n    );\n  }\n}));\n\nfunction xyz2lab(t) {\n  return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;\n}\n\nfunction lab2xyz(t) {\n  return t > t1 ? t * t * t : t2 * (t - t0);\n}\n\nfunction lrgb2rgb(x) {\n  return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);\n}\n\nfunction rgb2lrgb(x) {\n  return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);\n}\n\nfunction hclConvert(o) {\n  if (o instanceof Hcl) return new Hcl(o.h, o.c, o.l, o.opacity);\n  if (!(o instanceof Lab)) o = labConvert(o);\n  if (o.a === 0 && o.b === 0) return new Hcl(NaN, 0, o.l, o.opacity);\n  var h = Math.atan2(o.b, o.a) * rad2deg;\n  return new Hcl(h < 0 ? h + 360 : h, Math.sqrt(o.a * o.a + o.b * o.b), o.l, o.opacity);\n}\n\nexport function lch(l, c, h, opacity) {\n  return arguments.length === 1 ? hclConvert(l) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\n\nexport function hcl(h, c, l, opacity) {\n  return arguments.length === 1 ? hclConvert(h) : new Hcl(h, c, l, opacity == null ? 1 : opacity);\n}\n\nexport function Hcl(h, c, l, opacity) {\n  this.h = +h;\n  this.c = +c;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hcl, hcl, extend(Color, {\n  brighter: function(k) {\n    return new Hcl(this.h, this.c, this.l + K * (k == null ? 1 : k), this.opacity);\n  },\n  darker: function(k) {\n    return new Hcl(this.h, this.c, this.l - K * (k == null ? 1 : k), this.opacity);\n  },\n  rgb: function() {\n    return labConvert(this).rgb();\n  }\n}));\n","import define, {extend} from \"./define\";\nimport {Color, rgbConvert, Rgb, darker, brighter} from \"./color\";\nimport {deg2rad, rad2deg} from \"./math\";\n\nvar A = -0.14861,\n    B = +1.78277,\n    C = -0.29227,\n    D = -0.90649,\n    E = +1.97294,\n    ED = E * D,\n    EB = E * B,\n    BC_DA = B * C - D * A;\n\nfunction cubehelixConvert(o) {\n  if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Rgb)) o = rgbConvert(o);\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB),\n      bl = b - l,\n      k = (E * (g - l) - C * bl) / D,\n      s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)), // NaN if l=0 or l=1\n      h = s ? Math.atan2(k, bl) * rad2deg - 120 : NaN;\n  return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);\n}\n\nexport default function cubehelix(h, s, l, opacity) {\n  return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);\n}\n\nexport function Cubehelix(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Cubehelix, cubehelix, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = isNaN(this.h) ? 0 : (this.h + 120) * deg2rad,\n        l = +this.l,\n        a = isNaN(this.s) ? 0 : this.s * l * (1 - l),\n        cosh = Math.cos(h),\n        sinh = Math.sin(h);\n    return new Rgb(\n      255 * (l + a * (A * cosh + B * sinh)),\n      255 * (l + a * (C * cosh + D * sinh)),\n      255 * (l + a * (E * cosh)),\n      this.opacity\n    );\n  }\n}));\n","export function basis(t1, v0, v1, v2, v3) {\n  var t2 = t1 * t1, t3 = t2 * t1;\n  return ((1 - 3 * t1 + 3 * t2 - t3) * v0\n      + (4 - 6 * t2 + 3 * t3) * v1\n      + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2\n      + t3 * v3) / 6;\n}\n\nexport default function(values) {\n  var n = values.length - 1;\n  return function(t) {\n    var i = t <= 0 ? (t = 0) : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),\n        v1 = values[i],\n        v2 = values[i + 1],\n        v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,\n        v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n}\n","import {basis} from \"./basis\";\n\nexport default function(values) {\n  var n = values.length;\n  return function(t) {\n    var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n),\n        v0 = values[(i + n - 1) % n],\n        v1 = values[i % n],\n        v2 = values[(i + 1) % n],\n        v3 = values[(i + 2) % n];\n    return basis((t - i / n) * n, v0, v1, v2, v3);\n  };\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","import constant from \"./constant\";\n\nfunction linear(a, d) {\n  return function(t) {\n    return a + t * d;\n  };\n}\n\nfunction exponential(a, b, y) {\n  return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function(t) {\n    return Math.pow(a + t * b, y);\n  };\n}\n\nexport function hue(a, b) {\n  var d = b - a;\n  return d ? linear(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : constant(isNaN(a) ? b : a);\n}\n\nexport function gamma(y) {\n  return (y = +y) === 1 ? nogamma : function(a, b) {\n    return b - a ? exponential(a, b, y) : constant(isNaN(a) ? b : a);\n  };\n}\n\nexport default function nogamma(a, b) {\n  var d = b - a;\n  return d ? linear(a, d) : constant(isNaN(a) ? b : a);\n}\n","import {rgb as colorRgb} from \"d3-color\";\nimport basis from \"./basis\";\nimport basisClosed from \"./basisClosed\";\nimport nogamma, {gamma} from \"./color\";\n\nexport default (function rgbGamma(y) {\n  var color = gamma(y);\n\n  function rgb(start, end) {\n    var r = color((start = colorRgb(start)).r, (end = colorRgb(end)).r),\n        g = color(start.g, end.g),\n        b = color(start.b, end.b),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.r = r(t);\n      start.g = g(t);\n      start.b = b(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n\n  rgb.gamma = rgbGamma;\n\n  return rgb;\n})(1);\n\nfunction rgbSpline(spline) {\n  return function(colors) {\n    var n = colors.length,\n        r = new Array(n),\n        g = new Array(n),\n        b = new Array(n),\n        i, color;\n    for (i = 0; i < n; ++i) {\n      color = colorRgb(colors[i]);\n      r[i] = color.r || 0;\n      g[i] = color.g || 0;\n      b[i] = color.b || 0;\n    }\n    r = spline(r);\n    g = spline(g);\n    b = spline(b);\n    color.opacity = 1;\n    return function(t) {\n      color.r = r(t);\n      color.g = g(t);\n      color.b = b(t);\n      return color + \"\";\n    };\n  };\n}\n\nexport var rgbBasis = rgbSpline(basis);\nexport var rgbBasisClosed = rgbSpline(basisClosed);\n","import value from \"./value\";\n\nexport default function(a, b) {\n  var nb = b ? b.length : 0,\n      na = a ? Math.min(nb, a.length) : 0,\n      x = new Array(na),\n      c = new Array(nb),\n      i;\n\n  for (i = 0; i < na; ++i) x[i] = value(a[i], b[i]);\n  for (; i < nb; ++i) c[i] = b[i];\n\n  return function(t) {\n    for (i = 0; i < na; ++i) c[i] = x[i](t);\n    return c;\n  };\n}\n","export default function(a, b) {\n  var d = new Date;\n  return a = +a, b -= a, function(t) {\n    return d.setTime(a + b * t), d;\n  };\n}\n","export default function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return a + b * t;\n  };\n}\n","import value from \"./value\";\n\nexport default function(a, b) {\n  var i = {},\n      c = {},\n      k;\n\n  if (a === null || typeof a !== \"object\") a = {};\n  if (b === null || typeof b !== \"object\") b = {};\n\n  for (k in b) {\n    if (k in a) {\n      i[k] = value(a[k], b[k]);\n    } else {\n      c[k] = b[k];\n    }\n  }\n\n  return function(t) {\n    for (k in i) c[k] = i[k](t);\n    return c;\n  };\n}\n","import number from \"./number\";\n\nvar reA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g,\n    reB = new RegExp(reA.source, \"g\");\n\nfunction zero(b) {\n  return function() {\n    return b;\n  };\n}\n\nfunction one(b) {\n  return function(t) {\n    return b(t) + \"\";\n  };\n}\n\nexport default function(a, b) {\n  var bi = reA.lastIndex = reB.lastIndex = 0, // scan index for next number in b\n      am, // current match in a\n      bm, // current match in b\n      bs, // string preceding current number in b, if any\n      i = -1, // index in s\n      s = [], // string constants and placeholders\n      q = []; // number interpolators\n\n  // Coerce inputs to strings.\n  a = a + \"\", b = b + \"\";\n\n  // Interpolate pairs of numbers in a & b.\n  while ((am = reA.exec(a))\n      && (bm = reB.exec(b))) {\n    if ((bs = bm.index) > bi) { // a string precedes the next number in b\n      bs = b.slice(bi, bs);\n      if (s[i]) s[i] += bs; // coalesce with previous string\n      else s[++i] = bs;\n    }\n    if ((am = am[0]) === (bm = bm[0])) { // numbers in a & b match\n      if (s[i]) s[i] += bm; // coalesce with previous string\n      else s[++i] = bm;\n    } else { // interpolate non-matching numbers\n      s[++i] = null;\n      q.push({i: i, x: number(am, bm)});\n    }\n    bi = reB.lastIndex;\n  }\n\n  // Add remains of b.\n  if (bi < b.length) {\n    bs = b.slice(bi);\n    if (s[i]) s[i] += bs; // coalesce with previous string\n    else s[++i] = bs;\n  }\n\n  // Special optimization for only a single match.\n  // Otherwise, interpolate each of the numbers and rejoin the string.\n  return s.length < 2 ? (q[0]\n      ? one(q[0].x)\n      : zero(b))\n      : (b = q.length, function(t) {\n          for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n          return s.join(\"\");\n        });\n}\n","import decompose, {identity} from \"./decompose\";\n\nvar cssNode,\n    cssRoot,\n    cssView,\n    svgNode;\n\nexport function parseCss(value) {\n  if (value === \"none\") return identity;\n  if (!cssNode) cssNode = document.createElement(\"DIV\"), cssRoot = document.documentElement, cssView = document.defaultView;\n  cssNode.style.transform = value;\n  value = cssView.getComputedStyle(cssRoot.appendChild(cssNode), null).getPropertyValue(\"transform\");\n  cssRoot.removeChild(cssNode);\n  value = value.slice(7, -1).split(\",\");\n  return decompose(+value[0], +value[1], +value[2], +value[3], +value[4], +value[5]);\n}\n\nexport function parseSvg(value) {\n  if (value == null) return identity;\n  if (!svgNode) svgNode = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n  svgNode.setAttribute(\"transform\", value);\n  if (!(value = svgNode.transform.baseVal.consolidate())) return identity;\n  value = value.matrix;\n  return decompose(value.a, value.b, value.c, value.d, value.e, value.f);\n}\n","import {color} from \"d3-color\";\nimport rgb from \"./rgb\";\nimport array from \"./array\";\nimport date from \"./date\";\nimport number from \"./number\";\nimport object from \"./object\";\nimport string from \"./string\";\nimport constant from \"./constant\";\n\nexport default function(a, b) {\n  var t = typeof b, c;\n  return b == null || t === \"boolean\" ? constant(b)\n      : (t === \"number\" ? number\n      : t === \"string\" ? ((c = color(b)) ? (b = c, rgb) : string)\n      : b instanceof color ? rgb\n      : b instanceof Date ? date\n      : Array.isArray(b) ? array\n      : typeof b.valueOf !== \"function\" && typeof b.toString !== \"function\" || isNaN(b) ? object\n      : number)(a, b);\n}\n","export default function(a, b) {\n  return a = +a, b -= a, function(t) {\n    return Math.round(a + b * t);\n  };\n}\n","var degrees = 180 / Math.PI;\n\nexport var identity = {\n  translateX: 0,\n  translateY: 0,\n  rotate: 0,\n  skewX: 0,\n  scaleX: 1,\n  scaleY: 1\n};\n\nexport default function(a, b, c, d, e, f) {\n  var scaleX, scaleY, skewX;\n  if (scaleX = Math.sqrt(a * a + b * b)) a /= scaleX, b /= scaleX;\n  if (skewX = a * c + b * d) c -= a * skewX, d -= b * skewX;\n  if (scaleY = Math.sqrt(c * c + d * d)) c /= scaleY, d /= scaleY, skewX /= scaleY;\n  if (a * d < b * c) a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;\n  return {\n    translateX: e,\n    translateY: f,\n    rotate: Math.atan2(b, a) * degrees,\n    skewX: Math.atan(skewX) * degrees,\n    scaleX: scaleX,\n    scaleY: scaleY\n  };\n}\n","import number from \"../number\";\nimport {parseCss, parseSvg} from \"./parse\";\n\nfunction interpolateTransform(parse, pxComma, pxParen, degParen) {\n\n  function pop(s) {\n    return s.length ? s.pop() + \" \" : \"\";\n  }\n\n  function translate(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(\"translate(\", null, pxComma, null, pxParen);\n      q.push({i: i - 4, x: number(xa, xb)}, {i: i - 2, x: number(ya, yb)});\n    } else if (xb || yb) {\n      s.push(\"translate(\" + xb + pxComma + yb + pxParen);\n    }\n  }\n\n  function rotate(a, b, s, q) {\n    if (a !== b) {\n      if (a - b > 180) b += 360; else if (b - a > 180) a += 360; // shortest path\n      q.push({i: s.push(pop(s) + \"rotate(\", null, degParen) - 2, x: number(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"rotate(\" + b + degParen);\n    }\n  }\n\n  function skewX(a, b, s, q) {\n    if (a !== b) {\n      q.push({i: s.push(pop(s) + \"skewX(\", null, degParen) - 2, x: number(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"skewX(\" + b + degParen);\n    }\n  }\n\n  function scale(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(pop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({i: i - 4, x: number(xa, xb)}, {i: i - 2, x: number(ya, yb)});\n    } else if (xb !== 1 || yb !== 1) {\n      s.push(pop(s) + \"scale(\" + xb + \",\" + yb + \")\");\n    }\n  }\n\n  return function(a, b) {\n    var s = [], // string constants and placeholders\n        q = []; // number interpolators\n    a = parse(a), b = parse(b);\n    translate(a.translateX, a.translateY, b.translateX, b.translateY, s, q);\n    rotate(a.rotate, b.rotate, s, q);\n    skewX(a.skewX, b.skewX, s, q);\n    scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s, q);\n    a = b = null; // gc\n    return function(t) {\n      var i = -1, n = q.length, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  };\n}\n\nexport var interpolateTransformCss = interpolateTransform(parseCss, \"px, \", \"px)\", \"deg)\");\nexport var interpolateTransformSvg = interpolateTransform(parseSvg, \", \", \")\", \")\");\n","var rho = Math.SQRT2,\n    rho2 = 2,\n    rho4 = 4,\n    epsilon2 = 1e-12;\n\nfunction cosh(x) {\n  return ((x = Math.exp(x)) + 1 / x) / 2;\n}\n\nfunction sinh(x) {\n  return ((x = Math.exp(x)) - 1 / x) / 2;\n}\n\nfunction tanh(x) {\n  return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n}\n\n// p0 = [ux0, uy0, w0]\n// p1 = [ux1, uy1, w1]\nexport default function(p0, p1) {\n  var ux0 = p0[0], uy0 = p0[1], w0 = p0[2],\n      ux1 = p1[0], uy1 = p1[1], w1 = p1[2],\n      dx = ux1 - ux0,\n      dy = uy1 - uy0,\n      d2 = dx * dx + dy * dy,\n      i,\n      S;\n\n  // Special case for u0 ≅ u1.\n  if (d2 < epsilon2) {\n    S = Math.log(w1 / w0) / rho;\n    i = function(t) {\n      return [\n        ux0 + t * dx,\n        uy0 + t * dy,\n        w0 * Math.exp(rho * t * S)\n      ];\n    }\n  }\n\n  // General case.\n  else {\n    var d1 = Math.sqrt(d2),\n        b0 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1),\n        b1 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1),\n        r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),\n        r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n    S = (r1 - r0) / rho;\n    i = function(t) {\n      var s = t * S,\n          coshr0 = cosh(r0),\n          u = w0 / (rho2 * d1) * (coshr0 * tanh(rho * s + r0) - sinh(r0));\n      return [\n        ux0 + u * dx,\n        uy0 + u * dy,\n        w0 * coshr0 / cosh(rho * s + r0)\n      ];\n    }\n  }\n\n  i.duration = S * 1000;\n\n  return i;\n}\n","import {hsl as colorHsl} from \"d3-color\";\nimport color, {hue} from \"./color\";\n\nfunction hsl(hue) {\n  return function(start, end) {\n    var h = hue((start = colorHsl(start)).h, (end = colorHsl(end)).h),\n        s = color(start.s, end.s),\n        l = color(start.l, end.l),\n        opacity = color(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.s = s(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nexport default hsl(hue);\nexport var hslLong = hsl(color);\n","import {lab as colorLab} from \"d3-color\";\nimport color from \"./color\";\n\nexport default function lab(start, end) {\n  var l = color((start = colorLab(start)).l, (end = colorLab(end)).l),\n      a = color(start.a, end.a),\n      b = color(start.b, end.b),\n      opacity = color(start.opacity, end.opacity);\n  return function(t) {\n    start.l = l(t);\n    start.a = a(t);\n    start.b = b(t);\n    start.opacity = opacity(t);\n    return start + \"\";\n  };\n}\n","import {hcl as colorHcl} from \"d3-color\";\nimport color, {hue} from \"./color\";\n\nfunction hcl(hue) {\n  return function(start, end) {\n    var h = hue((start = colorHcl(start)).h, (end = colorHcl(end)).h),\n        c = color(start.c, end.c),\n        l = color(start.l, end.l),\n        opacity = color(start.opacity, end.opacity);\n    return function(t) {\n      start.h = h(t);\n      start.c = c(t);\n      start.l = l(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n}\n\nexport default hcl(hue);\nexport var hclLong = hcl(color);\n","import {cubehelix as colorCubehelix} from \"d3-color\";\nimport color, {hue} from \"./color\";\n\nfunction cubehelix(hue) {\n  return (function cubehelixGamma(y) {\n    y = +y;\n\n    function cubehelix(start, end) {\n      var h = hue((start = colorCubehelix(start)).h, (end = colorCubehelix(end)).h),\n          s = color(start.s, end.s),\n          l = color(start.l, end.l),\n          opacity = color(start.opacity, end.opacity);\n      return function(t) {\n        start.h = h(t);\n        start.s = s(t);\n        start.l = l(Math.pow(t, y));\n        start.opacity = opacity(t);\n        return start + \"\";\n      };\n    }\n\n    cubehelix.gamma = cubehelixGamma;\n\n    return cubehelix;\n  })(1);\n}\n\nexport default cubehelix(hue);\nexport var cubehelixLong = cubehelix(color);\n","export default function piecewise(interpolate, values) {\n  var i = 0, n = values.length - 1, v = values[0], I = new Array(n < 0 ? 0 : n);\n  while (i < n) I[i] = interpolate(v, v = values[++i]);\n  return function(t) {\n    var i = Math.max(0, Math.min(n - 1, Math.floor(t *= n)));\n    return I[i](t - i);\n  };\n}\n","export default function(interpolator, n) {\n  var samples = new Array(n);\n  for (var i = 0; i < n; ++i) samples[i] = interpolator(i / (n - 1));\n  return samples;\n}\n","var frame = 0, // is an animation frame pending?\n    timeout = 0, // is a timeout pending?\n    interval = 0, // are any timers active?\n    pokeDelay = 1000, // how frequently we check for clock skew\n    taskHead,\n    taskTail,\n    clockLast = 0,\n    clockNow = 0,\n    clockSkew = 0,\n    clock = typeof performance === \"object\" && performance.now ? performance : Date,\n    setFrame = typeof window === \"object\" && window.requestAnimationFrame ? window.requestAnimationFrame.bind(window) : function(f) { setTimeout(f, 17); };\n\nexport function now() {\n  return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);\n}\n\nfunction clearNow() {\n  clockNow = 0;\n}\n\nexport function Timer() {\n  this._call =\n  this._time =\n  this._next = null;\n}\n\nTimer.prototype = timer.prototype = {\n  constructor: Timer,\n  restart: function(callback, delay, time) {\n    if (typeof callback !== \"function\") throw new TypeError(\"callback is not a function\");\n    time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);\n    if (!this._next && taskTail !== this) {\n      if (taskTail) taskTail._next = this;\n      else taskHead = this;\n      taskTail = this;\n    }\n    this._call = callback;\n    this._time = time;\n    sleep();\n  },\n  stop: function() {\n    if (this._call) {\n      this._call = null;\n      this._time = Infinity;\n      sleep();\n    }\n  }\n};\n\nexport function timer(callback, delay, time) {\n  var t = new Timer;\n  t.restart(callback, delay, time);\n  return t;\n}\n\nexport function timerFlush() {\n  now(); // Get the current time, if not already set.\n  ++frame; // Pretend we’ve set an alarm, if we haven’t already.\n  var t = taskHead, e;\n  while (t) {\n    if ((e = clockNow - t._time) >= 0) t._call.call(null, e);\n    t = t._next;\n  }\n  --frame;\n}\n\nfunction wake() {\n  clockNow = (clockLast = clock.now()) + clockSkew;\n  frame = timeout = 0;\n  try {\n    timerFlush();\n  } finally {\n    frame = 0;\n    nap();\n    clockNow = 0;\n  }\n}\n\nfunction poke() {\n  var now = clock.now(), delay = now - clockLast;\n  if (delay > pokeDelay) clockSkew -= delay, clockLast = now;\n}\n\nfunction nap() {\n  var t0, t1 = taskHead, t2, time = Infinity;\n  while (t1) {\n    if (t1._call) {\n      if (time > t1._time) time = t1._time;\n      t0 = t1, t1 = t1._next;\n    } else {\n      t2 = t1._next, t1._next = null;\n      t1 = t0 ? t0._next = t2 : taskHead = t2;\n    }\n  }\n  taskTail = t0;\n  sleep(time);\n}\n\nfunction sleep(time) {\n  if (frame) return; // Soonest alarm already set, or will be.\n  if (timeout) timeout = clearTimeout(timeout);\n  var delay = time - clockNow; // Strictly less than if we recomputed clockNow.\n  if (delay > 24) {\n    if (time < Infinity) timeout = setTimeout(wake, time - clock.now() - clockSkew);\n    if (interval) interval = clearInterval(interval);\n  } else {\n    if (!interval) clockLast = clock.now(), interval = setInterval(poke, pokeDelay);\n    frame = 1, setFrame(wake);\n  }\n}\n","import {Timer} from \"./timer\";\n\nexport default function(callback, delay, time) {\n  var t = new Timer;\n  delay = delay == null ? 0 : +delay;\n  t.restart(function(elapsed) {\n    t.stop();\n    callback(elapsed + delay);\n  }, delay, time);\n  return t;\n}\n","import {Timer, now} from \"./timer\";\n\nexport default function(callback, delay, time) {\n  var t = new Timer, total = delay;\n  if (delay == null) return t.restart(callback, delay, time), t;\n  delay = +delay, time = time == null ? now() : +time;\n  t.restart(function tick(elapsed) {\n    elapsed += total;\n    t.restart(tick, total += delay, time);\n    callback(elapsed);\n  }, delay, time);\n  return t;\n}\n","import {dispatch} from \"d3-dispatch\";\nimport {timer, timeout} from \"d3-timer\";\n\nvar emptyOn = dispatch(\"start\", \"end\", \"interrupt\");\nvar emptyTween = [];\n\nexport var CREATED = 0;\nexport var SCHEDULED = 1;\nexport var STARTING = 2;\nexport var STARTED = 3;\nexport var RUNNING = 4;\nexport var ENDING = 5;\nexport var ENDED = 6;\n\nexport default function(node, name, id, index, group, timing) {\n  var schedules = node.__transition;\n  if (!schedules) node.__transition = {};\n  else if (id in schedules) return;\n  create(node, id, {\n    name: name,\n    index: index, // For context during callback.\n    group: group, // For context during callback.\n    on: emptyOn,\n    tween: emptyTween,\n    time: timing.time,\n    delay: timing.delay,\n    duration: timing.duration,\n    ease: timing.ease,\n    timer: null,\n    state: CREATED\n  });\n}\n\nexport function init(node, id) {\n  var schedule = get(node, id);\n  if (schedule.state > CREATED) throw new Error(\"too late; already scheduled\");\n  return schedule;\n}\n\nexport function set(node, id) {\n  var schedule = get(node, id);\n  if (schedule.state > STARTING) throw new Error(\"too late; already started\");\n  return schedule;\n}\n\nexport function get(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id])) throw new Error(\"transition not found\");\n  return schedule;\n}\n\nfunction create(node, id, self) {\n  var schedules = node.__transition,\n      tween;\n\n  // Initialize the self timer when the transition is created.\n  // Note the actual delay is not known until the first callback!\n  schedules[id] = self;\n  self.timer = timer(schedule, 0, self.time);\n\n  function schedule(elapsed) {\n    self.state = SCHEDULED;\n    self.timer.restart(start, self.delay, self.time);\n\n    // If the elapsed delay is less than our first sleep, start immediately.\n    if (self.delay <= elapsed) start(elapsed - self.delay);\n  }\n\n  function start(elapsed) {\n    var i, j, n, o;\n\n    // If the state is not SCHEDULED, then we previously errored on start.\n    if (self.state !== SCHEDULED) return stop();\n\n    for (i in schedules) {\n      o = schedules[i];\n      if (o.name !== self.name) continue;\n\n      // While this element already has a starting transition during this frame,\n      // defer starting an interrupting transition until that transition has a\n      // chance to tick (and possibly end); see d3/d3-transition#54!\n      if (o.state === STARTED) return timeout(start);\n\n      // Interrupt the active transition, if any.\n      // Dispatch the interrupt event.\n      if (o.state === RUNNING) {\n        o.state = ENDED;\n        o.timer.stop();\n        o.on.call(\"interrupt\", node, node.__data__, o.index, o.group);\n        delete schedules[i];\n      }\n\n      // Cancel any pre-empted transitions. No interrupt event is dispatched\n      // because the cancelled transitions never started. Note that this also\n      // removes this transition from the pending list!\n      else if (+i < id) {\n        o.state = ENDED;\n        o.timer.stop();\n        delete schedules[i];\n      }\n    }\n\n    // Defer the first tick to end of the current frame; see d3/d3#1576.\n    // Note the transition may be canceled after start and before the first tick!\n    // Note this must be scheduled before the start event; see d3/d3-transition#16!\n    // Assuming this is successful, subsequent callbacks go straight to tick.\n    timeout(function() {\n      if (self.state === STARTED) {\n        self.state = RUNNING;\n        self.timer.restart(tick, self.delay, self.time);\n        tick(elapsed);\n      }\n    });\n\n    // Dispatch the start event.\n    // Note this must be done before the tween are initialized.\n    self.state = STARTING;\n    self.on.call(\"start\", node, node.__data__, self.index, self.group);\n    if (self.state !== STARTING) return; // interrupted\n    self.state = STARTED;\n\n    // Initialize the tween, deleting null tween.\n    tween = new Array(n = self.tween.length);\n    for (i = 0, j = -1; i < n; ++i) {\n      if (o = self.tween[i].value.call(node, node.__data__, self.index, self.group)) {\n        tween[++j] = o;\n      }\n    }\n    tween.length = j + 1;\n  }\n\n  function tick(elapsed) {\n    var t = elapsed < self.duration ? self.ease.call(null, elapsed / self.duration) : (self.timer.restart(stop), self.state = ENDING, 1),\n        i = -1,\n        n = tween.length;\n\n    while (++i < n) {\n      tween[i].call(null, t);\n    }\n\n    // Dispatch the end event.\n    if (self.state === ENDING) {\n      self.on.call(\"end\", node, node.__data__, self.index, self.group);\n      stop();\n    }\n  }\n\n  function stop() {\n    self.state = ENDED;\n    self.timer.stop();\n    delete schedules[id];\n    for (var i in schedules) return; // eslint-disable-line no-unused-vars\n    delete node.__transition;\n  }\n}\n","import {STARTING, ENDING, ENDED} from \"./transition/schedule\";\n\nexport default function(node, name) {\n  var schedules = node.__transition,\n      schedule,\n      active,\n      empty = true,\n      i;\n\n  if (!schedules) return;\n\n  name = name == null ? null : name + \"\";\n\n  for (i in schedules) {\n    if ((schedule = schedules[i]).name !== name) { empty = false; continue; }\n    active = schedule.state > STARTING && schedule.state < ENDING;\n    schedule.state = ENDED;\n    schedule.timer.stop();\n    if (active) schedule.on.call(\"interrupt\", node, node.__data__, schedule.index, schedule.group);\n    delete schedules[i];\n  }\n\n  if (empty) delete node.__transition;\n}\n","import {get, set} from \"./schedule\";\n\nfunction tweenRemove(id, name) {\n  var tween0, tween1;\n  return function() {\n    var schedule = set(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = tween0 = tween;\n      for (var i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1 = tween1.slice();\n          tween1.splice(i, 1);\n          break;\n        }\n      }\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nfunction tweenFunction(id, name, value) {\n  var tween0, tween1;\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    var schedule = set(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = (tween0 = tween).slice();\n      for (var t = {name: name, value: value}, i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1[i] = t;\n          break;\n        }\n      }\n      if (i === n) tween1.push(t);\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nexport default function(name, value) {\n  var id = this._id;\n\n  name += \"\";\n\n  if (arguments.length < 2) {\n    var tween = get(this.node(), id).tween;\n    for (var i = 0, n = tween.length, t; i < n; ++i) {\n      if ((t = tween[i]).name === name) {\n        return t.value;\n      }\n    }\n    return null;\n  }\n\n  return this.each((value == null ? tweenRemove : tweenFunction)(id, name, value));\n}\n\nexport function tweenValue(transition, name, value) {\n  var id = transition._id;\n\n  transition.each(function() {\n    var schedule = set(this, id);\n    (schedule.value || (schedule.value = {}))[name] = value.apply(this, arguments);\n  });\n\n  return function(node) {\n    return get(node, id).value[name];\n  };\n}\n","import {color} from \"d3-color\";\nimport {interpolateNumber, interpolateRgb, interpolateString} from \"d3-interpolate\";\n\nexport default function(a, b) {\n  var c;\n  return (typeof b === \"number\" ? interpolateNumber\n      : b instanceof color ? interpolateRgb\n      : (c = color(b)) ? (b = c, interpolateRgb)\n      : interpolateString)(a, b);\n}\n","function removeFunction(id) {\n  return function() {\n    var parent = this.parentNode;\n    for (var i in this.__transition) if (+i !== id) return;\n    if (parent) parent.removeChild(this);\n  };\n}\n\nexport default function() {\n  return this.on(\"end.remove\", removeFunction(this._id));\n}\n","import {selection} from \"d3-selection\";\n\nvar Selection = selection.prototype.constructor;\n\nexport default function() {\n  return new Selection(this._groups, this._parents);\n}\n","import {tweenValue} from \"./tween\";\n\nfunction textConstant(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function() {\n    var value1 = value(this);\n    this.textContent = value1 == null ? \"\" : value1;\n  };\n}\n\nexport default function(value) {\n  return this.tween(\"text\", typeof value === \"function\"\n      ? textFunction(tweenValue(this, \"text\", value))\n      : textConstant(value == null ? \"\" : value + \"\"));\n}\n","import {selection} from \"d3-selection\";\nimport transition_attr from \"./attr\";\nimport transition_attrTween from \"./attrTween\";\nimport transition_delay from \"./delay\";\nimport transition_duration from \"./duration\";\nimport transition_ease from \"./ease\";\nimport transition_filter from \"./filter\";\nimport transition_merge from \"./merge\";\nimport transition_on from \"./on\";\nimport transition_remove from \"./remove\";\nimport transition_select from \"./select\";\nimport transition_selectAll from \"./selectAll\";\nimport transition_selection from \"./selection\";\nimport transition_style from \"./style\";\nimport transition_styleTween from \"./styleTween\";\nimport transition_text from \"./text\";\nimport transition_transition from \"./transition\";\nimport transition_tween from \"./tween\";\n\nvar id = 0;\n\nexport function Transition(groups, parents, name, id) {\n  this._groups = groups;\n  this._parents = parents;\n  this._name = name;\n  this._id = id;\n}\n\nexport default function transition(name) {\n  return selection().transition(name);\n}\n\nexport function newId() {\n  return ++id;\n}\n\nvar selection_prototype = selection.prototype;\n\nTransition.prototype = transition.prototype = {\n  constructor: Transition,\n  select: transition_select,\n  selectAll: transition_selectAll,\n  filter: transition_filter,\n  merge: transition_merge,\n  selection: transition_selection,\n  transition: transition_transition,\n  call: selection_prototype.call,\n  nodes: selection_prototype.nodes,\n  node: selection_prototype.node,\n  size: selection_prototype.size,\n  empty: selection_prototype.empty,\n  each: selection_prototype.each,\n  on: transition_on,\n  attr: transition_attr,\n  attrTween: transition_attrTween,\n  style: transition_style,\n  styleTween: transition_styleTween,\n  text: transition_text,\n  remove: transition_remove,\n  tween: transition_tween,\n  delay: transition_delay,\n  duration: transition_duration,\n  ease: transition_ease\n};\n","export function linear(t) {\n  return +t;\n}\n","export function quadIn(t) {\n  return t * t;\n}\n\nexport function quadOut(t) {\n  return t * (2 - t);\n}\n\nexport function quadInOut(t) {\n  return ((t *= 2) <= 1 ? t * t : --t * (2 - t) + 1) / 2;\n}\n","export function cubicIn(t) {\n  return t * t * t;\n}\n\nexport function cubicOut(t) {\n  return --t * t * t + 1;\n}\n\nexport function cubicInOut(t) {\n  return ((t *= 2) <= 1 ? t * t * t : (t -= 2) * t * t + 2) / 2;\n}\n","import {selector} from \"d3-selection\";\nimport {Transition} from \"./index\";\nimport schedule, {get} from \"./schedule\";\n\nexport default function(select) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select !== \"function\") select = selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n        schedule(subgroup[i], name, id, i, subgroup, get(node, id));\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, name, id);\n}\n","import {selectorAll} from \"d3-selection\";\nimport {Transition} from \"./index\";\nimport schedule, {get} from \"./schedule\";\n\nexport default function(select) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select !== \"function\") select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        for (var children = select.call(node, node.__data__, i, group), child, inherit = get(node, id), k = 0, l = children.length; k < l; ++k) {\n          if (child = children[k]) {\n            schedule(child, name, id, k, children, inherit);\n          }\n        }\n        subgroups.push(children);\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, parents, name, id);\n}\n","import {matcher} from \"d3-selection\";\nimport {Transition} from \"./index\";\n\nexport default function(match) {\n  if (typeof match !== \"function\") match = matcher(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, this._name, this._id);\n}\n","import {Transition} from \"./index\";\n\nexport default function(transition) {\n  if (transition._id !== this._id) throw new Error;\n\n  for (var groups0 = this._groups, groups1 = transition._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Transition(merges, this._parents, this._name, this._id);\n}\n","import {Transition, newId} from \"./index\";\nimport schedule, {get} from \"./schedule\";\n\nexport default function() {\n  var name = this._name,\n      id0 = this._id,\n      id1 = newId();\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        var inherit = get(node, id0);\n        schedule(node, name, id1, i, group, {\n          time: inherit.time + inherit.delay + inherit.duration,\n          delay: 0,\n          duration: inherit.duration,\n          ease: inherit.ease\n        });\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id1);\n}\n","import {get, set, init} from \"./schedule\";\n\nfunction start(name) {\n  return (name + \"\").trim().split(/^|\\s+/).every(function(t) {\n    var i = t.indexOf(\".\");\n    if (i >= 0) t = t.slice(0, i);\n    return !t || t === \"start\";\n  });\n}\n\nfunction onFunction(id, name, listener) {\n  var on0, on1, sit = start(name) ? init : set;\n  return function() {\n    var schedule = sit(this, id),\n        on = schedule.on;\n\n    // If this node shared a dispatch with the previous node,\n    // just assign the updated shared dispatch and we’re done!\n    // Otherwise, copy-on-write.\n    if (on !== on0) (on1 = (on0 = on).copy()).on(name, listener);\n\n    schedule.on = on1;\n  };\n}\n\nexport default function(name, listener) {\n  var id = this._id;\n\n  return arguments.length < 2\n      ? get(this.node(), id).on.on(name)\n      : this.each(onFunction(id, name, listener));\n}\n","import {interpolateTransformSvg as interpolateTransform} from \"d3-interpolate\";\nimport {namespace} from \"d3-selection\";\nimport {tweenValue} from \"./tween\";\nimport interpolate from \"./interpolate\";\n\nfunction attrRemove(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, interpolate, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = this.getAttribute(name);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value1);\n  };\n}\n\nfunction attrConstantNS(fullname, interpolate, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = this.getAttributeNS(fullname.space, fullname.local);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value1);\n  };\n}\n\nfunction attrFunction(name, interpolate, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0, value1 = value(this);\n    if (value1 == null) return void this.removeAttribute(name);\n    value0 = this.getAttribute(name);\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value10 = value1);\n  };\n}\n\nfunction attrFunctionNS(fullname, interpolate, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0, value1 = value(this);\n    if (value1 == null) return void this.removeAttributeNS(fullname.space, fullname.local);\n    value0 = this.getAttributeNS(fullname.space, fullname.local);\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value10 = value1);\n  };\n}\n\nexport default function(name, value) {\n  var fullname = namespace(name), i = fullname === \"transform\" ? interpolateTransform : interpolate;\n  return this.attrTween(name, typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS : attrFunction)(fullname, i, tweenValue(this, \"attr.\" + name, value))\n      : value == null ? (fullname.local ? attrRemoveNS : attrRemove)(fullname)\n      : (fullname.local ? attrConstantNS : attrConstant)(fullname, i, value + \"\"));\n}\n","import {namespace} from \"d3-selection\";\n\nfunction attrTweenNS(fullname, value) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.setAttributeNS(fullname.space, fullname.local, i(t));\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nfunction attrTween(name, value) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.setAttribute(name, i(t));\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nexport default function(name, value) {\n  var key = \"attr.\" + name;\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  var fullname = namespace(name);\n  return this.tween(key, (fullname.local ? attrTweenNS : attrTween)(fullname, value));\n}\n","import {interpolateTransformCss as interpolateTransform} from \"d3-interpolate\";\nimport {style} from \"d3-selection\";\nimport {tweenValue} from \"./tween\";\nimport interpolate from \"./interpolate\";\n\nfunction styleRemove(name, interpolate) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0 = style(this, name),\n        value1 = (this.style.removeProperty(name), style(this, name));\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value10 = value1);\n  };\n}\n\nfunction styleRemoveEnd(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, interpolate, value1) {\n  var value00,\n      interpolate0;\n  return function() {\n    var value0 = style(this, name);\n    return value0 === value1 ? null\n        : value0 === value00 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value1);\n  };\n}\n\nfunction styleFunction(name, interpolate, value) {\n  var value00,\n      value10,\n      interpolate0;\n  return function() {\n    var value0 = style(this, name),\n        value1 = value(this);\n    if (value1 == null) value1 = (this.style.removeProperty(name), style(this, name));\n    return value0 === value1 ? null\n        : value0 === value00 && value1 === value10 ? interpolate0\n        : interpolate0 = interpolate(value00 = value0, value10 = value1);\n  };\n}\n\nexport default function(name, value, priority) {\n  var i = (name += \"\") === \"transform\" ? interpolateTransform : interpolate;\n  return value == null ? this\n          .styleTween(name, styleRemove(name, i))\n          .on(\"end.style.\" + name, styleRemoveEnd(name))\n      : this.styleTween(name, typeof value === \"function\"\n          ? styleFunction(name, i, tweenValue(this, \"style.\" + name, value))\n          : styleConstant(name, i, value + \"\"), priority);\n}\n","function styleTween(name, value, priority) {\n  function tween() {\n    var node = this, i = value.apply(node, arguments);\n    return i && function(t) {\n      node.style.setProperty(name, i(t), priority);\n    };\n  }\n  tween._value = value;\n  return tween;\n}\n\nexport default function(name, value, priority) {\n  var key = \"style.\" + (name += \"\");\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  return this.tween(key, styleTween(name, value, priority == null ? \"\" : priority));\n}\n","import {get, init} from \"./schedule\";\n\nfunction delayFunction(id, value) {\n  return function() {\n    init(this, id).delay = +value.apply(this, arguments);\n  };\n}\n\nfunction delayConstant(id, value) {\n  return value = +value, function() {\n    init(this, id).delay = value;\n  };\n}\n\nexport default function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? delayFunction\n          : delayConstant)(id, value))\n      : get(this.node(), id).delay;\n}\n","import {get, set} from \"./schedule\";\n\nfunction durationFunction(id, value) {\n  return function() {\n    set(this, id).duration = +value.apply(this, arguments);\n  };\n}\n\nfunction durationConstant(id, value) {\n  return value = +value, function() {\n    set(this, id).duration = value;\n  };\n}\n\nexport default function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? durationFunction\n          : durationConstant)(id, value))\n      : get(this.node(), id).duration;\n}\n","import {get, set} from \"./schedule\";\n\nfunction easeConstant(id, value) {\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    set(this, id).ease = value;\n  };\n}\n\nexport default function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each(easeConstant(id, value))\n      : get(this.node(), id).ease;\n}\n","var exponent = 3;\n\nexport var polyIn = (function custom(e) {\n  e = +e;\n\n  function polyIn(t) {\n    return Math.pow(t, e);\n  }\n\n  polyIn.exponent = custom;\n\n  return polyIn;\n})(exponent);\n\nexport var polyOut = (function custom(e) {\n  e = +e;\n\n  function polyOut(t) {\n    return 1 - Math.pow(1 - t, e);\n  }\n\n  polyOut.exponent = custom;\n\n  return polyOut;\n})(exponent);\n\nexport var polyInOut = (function custom(e) {\n  e = +e;\n\n  function polyInOut(t) {\n    return ((t *= 2) <= 1 ? Math.pow(t, e) : 2 - Math.pow(2 - t, e)) / 2;\n  }\n\n  polyInOut.exponent = custom;\n\n  return polyInOut;\n})(exponent);\n","var pi = Math.PI,\n    halfPi = pi / 2;\n\nexport function sinIn(t) {\n  return 1 - Math.cos(t * halfPi);\n}\n\nexport function sinOut(t) {\n  return Math.sin(t * halfPi);\n}\n\nexport function sinInOut(t) {\n  return (1 - Math.cos(pi * t)) / 2;\n}\n","export function expIn(t) {\n  return Math.pow(2, 10 * t - 10);\n}\n\nexport function expOut(t) {\n  return 1 - Math.pow(2, -10 * t);\n}\n\nexport function expInOut(t) {\n  return ((t *= 2) <= 1 ? Math.pow(2, 10 * t - 10) : 2 - Math.pow(2, 10 - 10 * t)) / 2;\n}\n","export function circleIn(t) {\n  return 1 - Math.sqrt(1 - t * t);\n}\n\nexport function circleOut(t) {\n  return Math.sqrt(1 - --t * t);\n}\n\nexport function circleInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - Math.sqrt(1 - t * t) : Math.sqrt(1 - (t -= 2) * t) + 1) / 2;\n}\n","var b1 = 4 / 11,\n    b2 = 6 / 11,\n    b3 = 8 / 11,\n    b4 = 3 / 4,\n    b5 = 9 / 11,\n    b6 = 10 / 11,\n    b7 = 15 / 16,\n    b8 = 21 / 22,\n    b9 = 63 / 64,\n    b0 = 1 / b1 / b1;\n\nexport function bounceIn(t) {\n  return 1 - bounceOut(1 - t);\n}\n\nexport function bounceOut(t) {\n  return (t = +t) < b1 ? b0 * t * t : t < b3 ? b0 * (t -= b2) * t + b4 : t < b6 ? b0 * (t -= b5) * t + b7 : b0 * (t -= b8) * t + b9;\n}\n\nexport function bounceInOut(t) {\n  return ((t *= 2) <= 1 ? 1 - bounceOut(1 - t) : bounceOut(t - 1) + 1) / 2;\n}\n","var overshoot = 1.70158;\n\nexport var backIn = (function custom(s) {\n  s = +s;\n\n  function backIn(t) {\n    return t * t * ((s + 1) * t - s);\n  }\n\n  backIn.overshoot = custom;\n\n  return backIn;\n})(overshoot);\n\nexport var backOut = (function custom(s) {\n  s = +s;\n\n  function backOut(t) {\n    return --t * t * ((s + 1) * t + s) + 1;\n  }\n\n  backOut.overshoot = custom;\n\n  return backOut;\n})(overshoot);\n\nexport var backInOut = (function custom(s) {\n  s = +s;\n\n  function backInOut(t) {\n    return ((t *= 2) < 1 ? t * t * ((s + 1) * t - s) : (t -= 2) * t * ((s + 1) * t + s) + 2) / 2;\n  }\n\n  backInOut.overshoot = custom;\n\n  return backInOut;\n})(overshoot);\n","var tau = 2 * Math.PI,\n    amplitude = 1,\n    period = 0.3;\n\nexport var elasticIn = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticIn(t) {\n    return a * Math.pow(2, 10 * --t) * Math.sin((s - t) / p);\n  }\n\n  elasticIn.amplitude = function(a) { return custom(a, p * tau); };\n  elasticIn.period = function(p) { return custom(a, p); };\n\n  return elasticIn;\n})(amplitude, period);\n\nexport var elasticOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticOut(t) {\n    return 1 - a * Math.pow(2, -10 * (t = +t)) * Math.sin((t + s) / p);\n  }\n\n  elasticOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticOut.period = function(p) { return custom(a, p); };\n\n  return elasticOut;\n})(amplitude, period);\n\nexport var elasticInOut = (function custom(a, p) {\n  var s = Math.asin(1 / (a = Math.max(1, a))) * (p /= tau);\n\n  function elasticInOut(t) {\n    return ((t = t * 2 - 1) < 0\n        ? a * Math.pow(2, 10 * t) * Math.sin((s - t) / p)\n        : 2 - a * Math.pow(2, -10 * t) * Math.sin((s + t) / p)) / 2;\n  }\n\n  elasticInOut.amplitude = function(a) { return custom(a, p * tau); };\n  elasticInOut.period = function(p) { return custom(a, p); };\n\n  return elasticInOut;\n})(amplitude, period);\n","import {Transition, newId} from \"../transition/index\";\nimport schedule from \"../transition/schedule\";\nimport {easeCubicInOut} from \"d3-ease\";\nimport {now} from \"d3-timer\";\n\nvar defaultTiming = {\n  time: null, // Set on use.\n  delay: 0,\n  duration: 250,\n  ease: easeCubicInOut\n};\n\nfunction inherit(node, id) {\n  var timing;\n  while (!(timing = node.__transition) || !(timing = timing[id])) {\n    if (!(node = node.parentNode)) {\n      return defaultTiming.time = now(), defaultTiming;\n    }\n  }\n  return timing;\n}\n\nexport default function(name) {\n  var id,\n      timing;\n\n  if (name instanceof Transition) {\n    id = name._id, name = name._name;\n  } else {\n    id = newId(), (timing = defaultTiming).time = now(), name = name == null ? null : name + \"\";\n  }\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        schedule(node, name, id, i, group, timing || inherit(node, id));\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id);\n}\n","import {selection} from \"d3-selection\";\nimport selection_interrupt from \"./interrupt\";\nimport selection_transition from \"./transition\";\n\nselection.prototype.interrupt = selection_interrupt;\nselection.prototype.transition = selection_transition;\n","import interrupt from \"../interrupt\";\n\nexport default function(name) {\n  return this.each(function() {\n    interrupt(this, name);\n  });\n}\n","import {Transition} from \"./transition/index\";\nimport {SCHEDULED} from \"./transition/schedule\";\n\nvar root = [null];\n\nexport default function(node, name) {\n  var schedules = node.__transition,\n      schedule,\n      i;\n\n  if (schedules) {\n    name = name == null ? null : name + \"\";\n    for (i in schedules) {\n      if ((schedule = schedules[i]).state > SCHEDULED && schedule.name === name) {\n        return new Transition([[node]], root, name, +i);\n      }\n    }\n  }\n\n  return null;\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function(target, type, selection) {\n  this.target = target;\n  this.type = type;\n  this.selection = selection;\n}\n","import {event} from \"d3-selection\";\n\nexport function nopropagation() {\n  event.stopImmediatePropagation();\n}\n\nexport default function() {\n  event.preventDefault();\n  event.stopImmediatePropagation();\n}\n","import {dispatch} from \"d3-dispatch\";\nimport {dragDisable, dragEnable} from \"d3-drag\";\nimport {interpolate} from \"d3-interpolate\";\nimport {customEvent, event, mouse, select} from \"d3-selection\";\nimport {interrupt} from \"d3-transition\";\nimport constant from \"./constant\";\nimport BrushEvent from \"./event\";\nimport noevent, {nopropagation} from \"./noevent\";\n\nvar MODE_DRAG = {name: \"drag\"},\n    MODE_SPACE = {name: \"space\"},\n    MODE_HANDLE = {name: \"handle\"},\n    MODE_CENTER = {name: \"center\"};\n\nvar X = {\n  name: \"x\",\n  handles: [\"e\", \"w\"].map(type),\n  input: function(x, e) { return x && [[x[0], e[0][1]], [x[1], e[1][1]]]; },\n  output: function(xy) { return xy && [xy[0][0], xy[1][0]]; }\n};\n\nvar Y = {\n  name: \"y\",\n  handles: [\"n\", \"s\"].map(type),\n  input: function(y, e) { return y && [[e[0][0], y[0]], [e[1][0], y[1]]]; },\n  output: function(xy) { return xy && [xy[0][1], xy[1][1]]; }\n};\n\nvar XY = {\n  name: \"xy\",\n  handles: [\"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\"].map(type),\n  input: function(xy) { return xy; },\n  output: function(xy) { return xy; }\n};\n\nvar cursors = {\n  overlay: \"crosshair\",\n  selection: \"move\",\n  n: \"ns-resize\",\n  e: \"ew-resize\",\n  s: \"ns-resize\",\n  w: \"ew-resize\",\n  nw: \"nwse-resize\",\n  ne: \"nesw-resize\",\n  se: \"nwse-resize\",\n  sw: \"nesw-resize\"\n};\n\nvar flipX = {\n  e: \"w\",\n  w: \"e\",\n  nw: \"ne\",\n  ne: \"nw\",\n  se: \"sw\",\n  sw: \"se\"\n};\n\nvar flipY = {\n  n: \"s\",\n  s: \"n\",\n  nw: \"sw\",\n  ne: \"se\",\n  se: \"ne\",\n  sw: \"nw\"\n};\n\nvar signsX = {\n  overlay: +1,\n  selection: +1,\n  n: null,\n  e: +1,\n  s: null,\n  w: -1,\n  nw: -1,\n  ne: +1,\n  se: +1,\n  sw: -1\n};\n\nvar signsY = {\n  overlay: +1,\n  selection: +1,\n  n: -1,\n  e: null,\n  s: +1,\n  w: null,\n  nw: -1,\n  ne: -1,\n  se: +1,\n  sw: +1\n};\n\nfunction type(t) {\n  return {type: t};\n}\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter() {\n  return !event.button;\n}\n\nfunction defaultExtent() {\n  var svg = this.ownerSVGElement || this;\n  return [[0, 0], [svg.width.baseVal.value, svg.height.baseVal.value]];\n}\n\n// Like d3.local, but with the name “__brush” rather than auto-generated.\nfunction local(node) {\n  while (!node.__brush) if (!(node = node.parentNode)) return;\n  return node.__brush;\n}\n\nfunction empty(extent) {\n  return extent[0][0] === extent[1][0]\n      || extent[0][1] === extent[1][1];\n}\n\nexport function brushSelection(node) {\n  var state = node.__brush;\n  return state ? state.dim.output(state.selection) : null;\n}\n\nexport function brushX() {\n  return brush(X);\n}\n\nexport function brushY() {\n  return brush(Y);\n}\n\nexport default function() {\n  return brush(XY);\n}\n\nfunction brush(dim) {\n  var extent = defaultExtent,\n      filter = defaultFilter,\n      listeners = dispatch(brush, \"start\", \"brush\", \"end\"),\n      handleSize = 6,\n      touchending;\n\n  function brush(group) {\n    var overlay = group\n        .property(\"__brush\", initialize)\n      .selectAll(\".overlay\")\n      .data([type(\"overlay\")]);\n\n    overlay.enter().append(\"rect\")\n        .attr(\"class\", \"overlay\")\n        .attr(\"pointer-events\", \"all\")\n        .attr(\"cursor\", cursors.overlay)\n      .merge(overlay)\n        .each(function() {\n          var extent = local(this).extent;\n          select(this)\n              .attr(\"x\", extent[0][0])\n              .attr(\"y\", extent[0][1])\n              .attr(\"width\", extent[1][0] - extent[0][0])\n              .attr(\"height\", extent[1][1] - extent[0][1]);\n        });\n\n    group.selectAll(\".selection\")\n      .data([type(\"selection\")])\n      .enter().append(\"rect\")\n        .attr(\"class\", \"selection\")\n        .attr(\"cursor\", cursors.selection)\n        .attr(\"fill\", \"#777\")\n        .attr(\"fill-opacity\", 0.3)\n        .attr(\"stroke\", \"#fff\")\n        .attr(\"shape-rendering\", \"crispEdges\");\n\n    var handle = group.selectAll(\".handle\")\n      .data(dim.handles, function(d) { return d.type; });\n\n    handle.exit().remove();\n\n    handle.enter().append(\"rect\")\n        .attr(\"class\", function(d) { return \"handle handle--\" + d.type; })\n        .attr(\"cursor\", function(d) { return cursors[d.type]; });\n\n    group\n        .each(redraw)\n        .attr(\"fill\", \"none\")\n        .attr(\"pointer-events\", \"all\")\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\")\n        .on(\"mousedown.brush touchstart.brush\", started);\n  }\n\n  brush.move = function(group, selection) {\n    if (group.selection) {\n      group\n          .on(\"start.brush\", function() { emitter(this, arguments).beforestart().start(); })\n          .on(\"interrupt.brush end.brush\", function() { emitter(this, arguments).end(); })\n          .tween(\"brush\", function() {\n            var that = this,\n                state = that.__brush,\n                emit = emitter(that, arguments),\n                selection0 = state.selection,\n                selection1 = dim.input(typeof selection === \"function\" ? selection.apply(this, arguments) : selection, state.extent),\n                i = interpolate(selection0, selection1);\n\n            function tween(t) {\n              state.selection = t === 1 && empty(selection1) ? null : i(t);\n              redraw.call(that);\n              emit.brush();\n            }\n\n            return selection0 && selection1 ? tween : tween(1);\n          });\n    } else {\n      group\n          .each(function() {\n            var that = this,\n                args = arguments,\n                state = that.__brush,\n                selection1 = dim.input(typeof selection === \"function\" ? selection.apply(that, args) : selection, state.extent),\n                emit = emitter(that, args).beforestart();\n\n            interrupt(that);\n            state.selection = selection1 == null || empty(selection1) ? null : selection1;\n            redraw.call(that);\n            emit.start().brush().end();\n          });\n    }\n  };\n\n  function redraw() {\n    var group = select(this),\n        selection = local(this).selection;\n\n    if (selection) {\n      group.selectAll(\".selection\")\n          .style(\"display\", null)\n          .attr(\"x\", selection[0][0])\n          .attr(\"y\", selection[0][1])\n          .attr(\"width\", selection[1][0] - selection[0][0])\n          .attr(\"height\", selection[1][1] - selection[0][1]);\n\n      group.selectAll(\".handle\")\n          .style(\"display\", null)\n          .attr(\"x\", function(d) { return d.type[d.type.length - 1] === \"e\" ? selection[1][0] - handleSize / 2 : selection[0][0] - handleSize / 2; })\n          .attr(\"y\", function(d) { return d.type[0] === \"s\" ? selection[1][1] - handleSize / 2 : selection[0][1] - handleSize / 2; })\n          .attr(\"width\", function(d) { return d.type === \"n\" || d.type === \"s\" ? selection[1][0] - selection[0][0] + handleSize : handleSize; })\n          .attr(\"height\", function(d) { return d.type === \"e\" || d.type === \"w\" ? selection[1][1] - selection[0][1] + handleSize : handleSize; });\n    }\n\n    else {\n      group.selectAll(\".selection,.handle\")\n          .style(\"display\", \"none\")\n          .attr(\"x\", null)\n          .attr(\"y\", null)\n          .attr(\"width\", null)\n          .attr(\"height\", null);\n    }\n  }\n\n  function emitter(that, args) {\n    return that.__brush.emitter || new Emitter(that, args);\n  }\n\n  function Emitter(that, args) {\n    this.that = that;\n    this.args = args;\n    this.state = that.__brush;\n    this.active = 0;\n  }\n\n  Emitter.prototype = {\n    beforestart: function() {\n      if (++this.active === 1) this.state.emitter = this, this.starting = true;\n      return this;\n    },\n    start: function() {\n      if (this.starting) this.starting = false, this.emit(\"start\");\n      return this;\n    },\n    brush: function() {\n      this.emit(\"brush\");\n      return this;\n    },\n    end: function() {\n      if (--this.active === 0) delete this.state.emitter, this.emit(\"end\");\n      return this;\n    },\n    emit: function(type) {\n      customEvent(new BrushEvent(brush, type, dim.output(this.state.selection)), listeners.apply, listeners, [type, this.that, this.args]);\n    }\n  };\n\n  function started() {\n    if (event.touches) { if (event.changedTouches.length < event.touches.length) return noevent(); }\n    else if (touchending) return;\n    if (!filter.apply(this, arguments)) return;\n\n    var that = this,\n        type = event.target.__data__.type,\n        mode = (event.metaKey ? type = \"overlay\" : type) === \"selection\" ? MODE_DRAG : (event.altKey ? MODE_CENTER : MODE_HANDLE),\n        signX = dim === Y ? null : signsX[type],\n        signY = dim === X ? null : signsY[type],\n        state = local(that),\n        extent = state.extent,\n        selection = state.selection,\n        W = extent[0][0], w0, w1,\n        N = extent[0][1], n0, n1,\n        E = extent[1][0], e0, e1,\n        S = extent[1][1], s0, s1,\n        dx,\n        dy,\n        moving,\n        shifting = signX && signY && event.shiftKey,\n        lockX,\n        lockY,\n        point0 = mouse(that),\n        point = point0,\n        emit = emitter(that, arguments).beforestart();\n\n    if (type === \"overlay\") {\n      state.selection = selection = [\n        [w0 = dim === Y ? W : point0[0], n0 = dim === X ? N : point0[1]],\n        [e0 = dim === Y ? E : w0, s0 = dim === X ? S : n0]\n      ];\n    } else {\n      w0 = selection[0][0];\n      n0 = selection[0][1];\n      e0 = selection[1][0];\n      s0 = selection[1][1];\n    }\n\n    w1 = w0;\n    n1 = n0;\n    e1 = e0;\n    s1 = s0;\n\n    var group = select(that)\n        .attr(\"pointer-events\", \"none\");\n\n    var overlay = group.selectAll(\".overlay\")\n        .attr(\"cursor\", cursors[type]);\n\n    if (event.touches) {\n      group\n          .on(\"touchmove.brush\", moved, true)\n          .on(\"touchend.brush touchcancel.brush\", ended, true);\n    } else {\n      var view = select(event.view)\n          .on(\"keydown.brush\", keydowned, true)\n          .on(\"keyup.brush\", keyupped, true)\n          .on(\"mousemove.brush\", moved, true)\n          .on(\"mouseup.brush\", ended, true);\n\n      dragDisable(event.view);\n    }\n\n    nopropagation();\n    interrupt(that);\n    redraw.call(that);\n    emit.start();\n\n    function moved() {\n      var point1 = mouse(that);\n      if (shifting && !lockX && !lockY) {\n        if (Math.abs(point1[0] - point[0]) > Math.abs(point1[1] - point[1])) lockY = true;\n        else lockX = true;\n      }\n      point = point1;\n      moving = true;\n      noevent();\n      move();\n    }\n\n    function move() {\n      var t;\n\n      dx = point[0] - point0[0];\n      dy = point[1] - point0[1];\n\n      switch (mode) {\n        case MODE_SPACE:\n        case MODE_DRAG: {\n          if (signX) dx = Math.max(W - w0, Math.min(E - e0, dx)), w1 = w0 + dx, e1 = e0 + dx;\n          if (signY) dy = Math.max(N - n0, Math.min(S - s0, dy)), n1 = n0 + dy, s1 = s0 + dy;\n          break;\n        }\n        case MODE_HANDLE: {\n          if (signX < 0) dx = Math.max(W - w0, Math.min(E - w0, dx)), w1 = w0 + dx, e1 = e0;\n          else if (signX > 0) dx = Math.max(W - e0, Math.min(E - e0, dx)), w1 = w0, e1 = e0 + dx;\n          if (signY < 0) dy = Math.max(N - n0, Math.min(S - n0, dy)), n1 = n0 + dy, s1 = s0;\n          else if (signY > 0) dy = Math.max(N - s0, Math.min(S - s0, dy)), n1 = n0, s1 = s0 + dy;\n          break;\n        }\n        case MODE_CENTER: {\n          if (signX) w1 = Math.max(W, Math.min(E, w0 - dx * signX)), e1 = Math.max(W, Math.min(E, e0 + dx * signX));\n          if (signY) n1 = Math.max(N, Math.min(S, n0 - dy * signY)), s1 = Math.max(N, Math.min(S, s0 + dy * signY));\n          break;\n        }\n      }\n\n      if (e1 < w1) {\n        signX *= -1;\n        t = w0, w0 = e0, e0 = t;\n        t = w1, w1 = e1, e1 = t;\n        if (type in flipX) overlay.attr(\"cursor\", cursors[type = flipX[type]]);\n      }\n\n      if (s1 < n1) {\n        signY *= -1;\n        t = n0, n0 = s0, s0 = t;\n        t = n1, n1 = s1, s1 = t;\n        if (type in flipY) overlay.attr(\"cursor\", cursors[type = flipY[type]]);\n      }\n\n      if (state.selection) selection = state.selection; // May be set by brush.move!\n      if (lockX) w1 = selection[0][0], e1 = selection[1][0];\n      if (lockY) n1 = selection[0][1], s1 = selection[1][1];\n\n      if (selection[0][0] !== w1\n          || selection[0][1] !== n1\n          || selection[1][0] !== e1\n          || selection[1][1] !== s1) {\n        state.selection = [[w1, n1], [e1, s1]];\n        redraw.call(that);\n        emit.brush();\n      }\n    }\n\n    function ended() {\n      nopropagation();\n      if (event.touches) {\n        if (event.touches.length) return;\n        if (touchending) clearTimeout(touchending);\n        touchending = setTimeout(function() { touchending = null; }, 500); // Ghost clicks are delayed!\n        group.on(\"touchmove.brush touchend.brush touchcancel.brush\", null);\n      } else {\n        dragEnable(event.view, moving);\n        view.on(\"keydown.brush keyup.brush mousemove.brush mouseup.brush\", null);\n      }\n      group.attr(\"pointer-events\", \"all\");\n      overlay.attr(\"cursor\", cursors.overlay);\n      if (state.selection) selection = state.selection; // May be set by brush.move (on start)!\n      if (empty(selection)) state.selection = null, redraw.call(that);\n      emit.end();\n    }\n\n    function keydowned() {\n      switch (event.keyCode) {\n        case 16: { // SHIFT\n          shifting = signX && signY;\n          break;\n        }\n        case 18: { // ALT\n          if (mode === MODE_HANDLE) {\n            if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n            if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n            mode = MODE_CENTER;\n            move();\n          }\n          break;\n        }\n        case 32: { // SPACE; takes priority over ALT\n          if (mode === MODE_HANDLE || mode === MODE_CENTER) {\n            if (signX < 0) e0 = e1 - dx; else if (signX > 0) w0 = w1 - dx;\n            if (signY < 0) s0 = s1 - dy; else if (signY > 0) n0 = n1 - dy;\n            mode = MODE_SPACE;\n            overlay.attr(\"cursor\", cursors.selection);\n            move();\n          }\n          break;\n        }\n        default: return;\n      }\n      noevent();\n    }\n\n    function keyupped() {\n      switch (event.keyCode) {\n        case 16: { // SHIFT\n          if (shifting) {\n            lockX = lockY = shifting = false;\n            move();\n          }\n          break;\n        }\n        case 18: { // ALT\n          if (mode === MODE_CENTER) {\n            if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n            if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n            mode = MODE_HANDLE;\n            move();\n          }\n          break;\n        }\n        case 32: { // SPACE\n          if (mode === MODE_SPACE) {\n            if (event.altKey) {\n              if (signX) e0 = e1 - dx * signX, w0 = w1 + dx * signX;\n              if (signY) s0 = s1 - dy * signY, n0 = n1 + dy * signY;\n              mode = MODE_CENTER;\n            } else {\n              if (signX < 0) e0 = e1; else if (signX > 0) w0 = w1;\n              if (signY < 0) s0 = s1; else if (signY > 0) n0 = n1;\n              mode = MODE_HANDLE;\n            }\n            overlay.attr(\"cursor\", cursors[type]);\n            move();\n          }\n          break;\n        }\n        default: return;\n      }\n      noevent();\n    }\n  }\n\n  function initialize() {\n    var state = this.__brush || {selection: null};\n    state.extent = extent.apply(this, arguments);\n    state.dim = dim;\n    return state;\n  }\n\n  brush.extent = function(_) {\n    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), brush) : extent;\n  };\n\n  brush.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant(!!_), brush) : filter;\n  };\n\n  brush.handleSize = function(_) {\n    return arguments.length ? (handleSize = +_, brush) : handleSize;\n  };\n\n  brush.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? brush : value;\n  };\n\n  return brush;\n}\n","export var cos = Math.cos;\nexport var sin = Math.sin;\nexport var pi = Math.PI;\nexport var halfPi = pi / 2;\nexport var tau = pi * 2;\nexport var max = Math.max;\n","import {range} from \"d3-array\";\nimport {max, tau} from \"./math\";\n\nfunction compareValue(compare) {\n  return function(a, b) {\n    return compare(\n      a.source.value + a.target.value,\n      b.source.value + b.target.value\n    );\n  };\n}\n\nexport default function() {\n  var padAngle = 0,\n      sortGroups = null,\n      sortSubgroups = null,\n      sortChords = null;\n\n  function chord(matrix) {\n    var n = matrix.length,\n        groupSums = [],\n        groupIndex = range(n),\n        subgroupIndex = [],\n        chords = [],\n        groups = chords.groups = new Array(n),\n        subgroups = new Array(n * n),\n        k,\n        x,\n        x0,\n        dx,\n        i,\n        j;\n\n    // Compute the sum.\n    k = 0, i = -1; while (++i < n) {\n      x = 0, j = -1; while (++j < n) {\n        x += matrix[i][j];\n      }\n      groupSums.push(x);\n      subgroupIndex.push(range(n));\n      k += x;\n    }\n\n    // Sort groups…\n    if (sortGroups) groupIndex.sort(function(a, b) {\n      return sortGroups(groupSums[a], groupSums[b]);\n    });\n\n    // Sort subgroups…\n    if (sortSubgroups) subgroupIndex.forEach(function(d, i) {\n      d.sort(function(a, b) {\n        return sortSubgroups(matrix[i][a], matrix[i][b]);\n      });\n    });\n\n    // Convert the sum to scaling factor for [0, 2pi].\n    // TODO Allow start and end angle to be specified?\n    // TODO Allow padding to be specified as percentage?\n    k = max(0, tau - padAngle * n) / k;\n    dx = k ? padAngle : tau / n;\n\n    // Compute the start and end angle for each group and subgroup.\n    // Note: Opera has a bug reordering object literal properties!\n    x = 0, i = -1; while (++i < n) {\n      x0 = x, j = -1; while (++j < n) {\n        var di = groupIndex[i],\n            dj = subgroupIndex[di][j],\n            v = matrix[di][dj],\n            a0 = x,\n            a1 = x += v * k;\n        subgroups[dj * n + di] = {\n          index: di,\n          subindex: dj,\n          startAngle: a0,\n          endAngle: a1,\n          value: v\n        };\n      }\n      groups[di] = {\n        index: di,\n        startAngle: x0,\n        endAngle: x,\n        value: groupSums[di]\n      };\n      x += dx;\n    }\n\n    // Generate chords for each (non-empty) subgroup-subgroup link.\n    i = -1; while (++i < n) {\n      j = i - 1; while (++j < n) {\n        var source = subgroups[j * n + i],\n            target = subgroups[i * n + j];\n        if (source.value || target.value) {\n          chords.push(source.value < target.value\n              ? {source: target, target: source}\n              : {source: source, target: target});\n        }\n      }\n    }\n\n    return sortChords ? chords.sort(sortChords) : chords;\n  }\n\n  chord.padAngle = function(_) {\n    return arguments.length ? (padAngle = max(0, _), chord) : padAngle;\n  };\n\n  chord.sortGroups = function(_) {\n    return arguments.length ? (sortGroups = _, chord) : sortGroups;\n  };\n\n  chord.sortSubgroups = function(_) {\n    return arguments.length ? (sortSubgroups = _, chord) : sortSubgroups;\n  };\n\n  chord.sortChords = function(_) {\n    return arguments.length ? (_ == null ? sortChords = null : (sortChords = compareValue(_))._ = _, chord) : sortChords && sortChords._;\n  };\n\n  return chord;\n}\n","export var slice = Array.prototype.slice;\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","var pi = Math.PI,\n    tau = 2 * pi,\n    epsilon = 1e-6,\n    tauEpsilon = tau - epsilon;\n\nfunction Path() {\n  this._x0 = this._y0 = // start of current subpath\n  this._x1 = this._y1 = null; // end of current subpath\n  this._ = \"\";\n}\n\nfunction path() {\n  return new Path;\n}\n\nPath.prototype = path.prototype = {\n  constructor: Path,\n  moveTo: function(x, y) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y);\n  },\n  closePath: function() {\n    if (this._x1 !== null) {\n      this._x1 = this._x0, this._y1 = this._y0;\n      this._ += \"Z\";\n    }\n  },\n  lineTo: function(x, y) {\n    this._ += \"L\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  quadraticCurveTo: function(x1, y1, x, y) {\n    this._ += \"Q\" + (+x1) + \",\" + (+y1) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) {\n    this._ += \"C\" + (+x1) + \",\" + (+y1) + \",\" + (+x2) + \",\" + (+y2) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  arcTo: function(x1, y1, x2, y2, r) {\n    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\n    var x0 = this._x1,\n        y0 = this._y1,\n        x21 = x2 - x1,\n        y21 = y2 - y1,\n        x01 = x0 - x1,\n        y01 = y0 - y1,\n        l01_2 = x01 * x01 + y01 * y01;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x1,y1).\n    if (this._x1 === null) {\n      this._ += \"M\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\n    else if (!(l01_2 > epsilon)) {}\n\n    // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\n    // Equivalently, is (x1,y1) coincident with (x2,y2)?\n    // Or, is the radius zero? Line to (x1,y1).\n    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon) || !r) {\n      this._ += \"L\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Otherwise, draw an arc!\n    else {\n      var x20 = x2 - x0,\n          y20 = y2 - y0,\n          l21_2 = x21 * x21 + y21 * y21,\n          l20_2 = x20 * x20 + y20 * y20,\n          l21 = Math.sqrt(l21_2),\n          l01 = Math.sqrt(l01_2),\n          l = r * Math.tan((pi - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\n          t01 = l / l01,\n          t21 = l / l21;\n\n      // If the start tangent is not coincident with (x0,y0), line to.\n      if (Math.abs(t01 - 1) > epsilon) {\n        this._ += \"L\" + (x1 + t01 * x01) + \",\" + (y1 + t01 * y01);\n      }\n\n      this._ += \"A\" + r + \",\" + r + \",0,0,\" + (+(y01 * x20 > x01 * y20)) + \",\" + (this._x1 = x1 + t21 * x21) + \",\" + (this._y1 = y1 + t21 * y21);\n    }\n  },\n  arc: function(x, y, r, a0, a1, ccw) {\n    x = +x, y = +y, r = +r;\n    var dx = r * Math.cos(a0),\n        dy = r * Math.sin(a0),\n        x0 = x + dx,\n        y0 = y + dy,\n        cw = 1 ^ ccw,\n        da = ccw ? a0 - a1 : a1 - a0;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x0,y0).\n    if (this._x1 === null) {\n      this._ += \"M\" + x0 + \",\" + y0;\n    }\n\n    // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\n    else if (Math.abs(this._x1 - x0) > epsilon || Math.abs(this._y1 - y0) > epsilon) {\n      this._ += \"L\" + x0 + \",\" + y0;\n    }\n\n    // Is this arc empty? We’re done.\n    if (!r) return;\n\n    // Does the angle go the wrong way? Flip the direction.\n    if (da < 0) da = da % tau + tau;\n\n    // Is this a complete circle? Draw two arcs to complete the circle.\n    if (da > tauEpsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (x - dx) + \",\" + (y - dy) + \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (this._x1 = x0) + \",\" + (this._y1 = y0);\n    }\n\n    // Is this arc non-empty? Draw an arc!\n    else if (da > epsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,\" + (+(da >= pi)) + \",\" + cw + \",\" + (this._x1 = x + r * Math.cos(a1)) + \",\" + (this._y1 = y + r * Math.sin(a1));\n    }\n  },\n  rect: function(x, y, w, h) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y) + \"h\" + (+w) + \"v\" + (+h) + \"h\" + (-w) + \"Z\";\n  },\n  toString: function() {\n    return this._;\n  }\n};\n\nexport default path;\n","import {slice} from \"./array\";\nimport constant from \"./constant\";\nimport {cos, halfPi, sin} from \"./math\";\nimport {path} from \"d3-path\";\n\nfunction defaultSource(d) {\n  return d.source;\n}\n\nfunction defaultTarget(d) {\n  return d.target;\n}\n\nfunction defaultRadius(d) {\n  return d.radius;\n}\n\nfunction defaultStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction defaultEndAngle(d) {\n  return d.endAngle;\n}\n\nexport default function() {\n  var source = defaultSource,\n      target = defaultTarget,\n      radius = defaultRadius,\n      startAngle = defaultStartAngle,\n      endAngle = defaultEndAngle,\n      context = null;\n\n  function ribbon() {\n    var buffer,\n        argv = slice.call(arguments),\n        s = source.apply(this, argv),\n        t = target.apply(this, argv),\n        sr = +radius.apply(this, (argv[0] = s, argv)),\n        sa0 = startAngle.apply(this, argv) - halfPi,\n        sa1 = endAngle.apply(this, argv) - halfPi,\n        sx0 = sr * cos(sa0),\n        sy0 = sr * sin(sa0),\n        tr = +radius.apply(this, (argv[0] = t, argv)),\n        ta0 = startAngle.apply(this, argv) - halfPi,\n        ta1 = endAngle.apply(this, argv) - halfPi;\n\n    if (!context) context = buffer = path();\n\n    context.moveTo(sx0, sy0);\n    context.arc(0, 0, sr, sa0, sa1);\n    if (sa0 !== ta0 || sa1 !== ta1) { // TODO sr !== tr?\n      context.quadraticCurveTo(0, 0, tr * cos(ta0), tr * sin(ta0));\n      context.arc(0, 0, tr, ta0, ta1);\n    }\n    context.quadraticCurveTo(0, 0, sx0, sy0);\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  ribbon.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant(+_), ribbon) : radius;\n  };\n\n  ribbon.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant(+_), ribbon) : startAngle;\n  };\n\n  ribbon.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant(+_), ribbon) : endAngle;\n  };\n\n  ribbon.source = function(_) {\n    return arguments.length ? (source = _, ribbon) : source;\n  };\n\n  ribbon.target = function(_) {\n    return arguments.length ? (target = _, ribbon) : target;\n  };\n\n  ribbon.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), ribbon) : context;\n  };\n\n  return ribbon;\n}\n","export var prefix = \"$\";\n\nfunction Map() {}\n\nMap.prototype = map.prototype = {\n  constructor: Map,\n  has: function(key) {\n    return (prefix + key) in this;\n  },\n  get: function(key) {\n    return this[prefix + key];\n  },\n  set: function(key, value) {\n    this[prefix + key] = value;\n    return this;\n  },\n  remove: function(key) {\n    var property = prefix + key;\n    return property in this && delete this[property];\n  },\n  clear: function() {\n    for (var property in this) if (property[0] === prefix) delete this[property];\n  },\n  keys: function() {\n    var keys = [];\n    for (var property in this) if (property[0] === prefix) keys.push(property.slice(1));\n    return keys;\n  },\n  values: function() {\n    var values = [];\n    for (var property in this) if (property[0] === prefix) values.push(this[property]);\n    return values;\n  },\n  entries: function() {\n    var entries = [];\n    for (var property in this) if (property[0] === prefix) entries.push({key: property.slice(1), value: this[property]});\n    return entries;\n  },\n  size: function() {\n    var size = 0;\n    for (var property in this) if (property[0] === prefix) ++size;\n    return size;\n  },\n  empty: function() {\n    for (var property in this) if (property[0] === prefix) return false;\n    return true;\n  },\n  each: function(f) {\n    for (var property in this) if (property[0] === prefix) f(this[property], property.slice(1), this);\n  }\n};\n\nfunction map(object, f) {\n  var map = new Map;\n\n  // Copy constructor.\n  if (object instanceof Map) object.each(function(value, key) { map.set(key, value); });\n\n  // Index array by numeric index or specified key function.\n  else if (Array.isArray(object)) {\n    var i = -1,\n        n = object.length,\n        o;\n\n    if (f == null) while (++i < n) map.set(i, object[i]);\n    else while (++i < n) map.set(f(o = object[i], i, object), o);\n  }\n\n  // Convert object to map.\n  else if (object) for (var key in object) map.set(key, object[key]);\n\n  return map;\n}\n\nexport default map;\n","import map from \"./map\";\n\nexport default function() {\n  var keys = [],\n      sortKeys = [],\n      sortValues,\n      rollup,\n      nest;\n\n  function apply(array, depth, createResult, setResult) {\n    if (depth >= keys.length) {\n      if (sortValues != null) array.sort(sortValues);\n      return rollup != null ? rollup(array) : array;\n    }\n\n    var i = -1,\n        n = array.length,\n        key = keys[depth++],\n        keyValue,\n        value,\n        valuesByKey = map(),\n        values,\n        result = createResult();\n\n    while (++i < n) {\n      if (values = valuesByKey.get(keyValue = key(value = array[i]) + \"\")) {\n        values.push(value);\n      } else {\n        valuesByKey.set(keyValue, [value]);\n      }\n    }\n\n    valuesByKey.each(function(values, key) {\n      setResult(result, key, apply(values, depth, createResult, setResult));\n    });\n\n    return result;\n  }\n\n  function entries(map, depth) {\n    if (++depth > keys.length) return map;\n    var array, sortKey = sortKeys[depth - 1];\n    if (rollup != null && depth >= keys.length) array = map.entries();\n    else array = [], map.each(function(v, k) { array.push({key: k, values: entries(v, depth)}); });\n    return sortKey != null ? array.sort(function(a, b) { return sortKey(a.key, b.key); }) : array;\n  }\n\n  return nest = {\n    object: function(array) { return apply(array, 0, createObject, setObject); },\n    map: function(array) { return apply(array, 0, createMap, setMap); },\n    entries: function(array) { return entries(apply(array, 0, createMap, setMap), 0); },\n    key: function(d) { keys.push(d); return nest; },\n    sortKeys: function(order) { sortKeys[keys.length - 1] = order; return nest; },\n    sortValues: function(order) { sortValues = order; return nest; },\n    rollup: function(f) { rollup = f; return nest; }\n  };\n}\n\nfunction createObject() {\n  return {};\n}\n\nfunction setObject(object, key, value) {\n  object[key] = value;\n}\n\nfunction createMap() {\n  return map();\n}\n\nfunction setMap(map, key, value) {\n  map.set(key, value);\n}\n","import {default as map, prefix} from \"./map\";\n\nfunction Set() {}\n\nvar proto = map.prototype;\n\nSet.prototype = set.prototype = {\n  constructor: Set,\n  has: proto.has,\n  add: function(value) {\n    value += \"\";\n    this[prefix + value] = value;\n    return this;\n  },\n  remove: proto.remove,\n  clear: proto.clear,\n  values: proto.keys,\n  size: proto.size,\n  empty: proto.empty,\n  each: proto.each\n};\n\nfunction set(object, f) {\n  var set = new Set;\n\n  // Copy constructor.\n  if (object instanceof Set) object.each(function(value) { set.add(value); });\n\n  // Otherwise, assume it’s an array.\n  else if (object) {\n    var i = -1, n = object.length;\n    if (f == null) while (++i < n) set.add(object[i]);\n    else while (++i < n) set.add(f(object[i], i, object));\n  }\n\n  return set;\n}\n\nexport default set;\n","export default function(map) {\n  var keys = [];\n  for (var key in map) keys.push(key);\n  return keys;\n}\n","export default function(map) {\n  var values = [];\n  for (var key in map) values.push(map[key]);\n  return values;\n}\n","export default function(map) {\n  var entries = [];\n  for (var key in map) entries.push({key: key, value: map[key]});\n  return entries;\n}\n","var array = Array.prototype;\n\nexport var slice = array.slice;\n","export default function(a, b) {\n  return a - b;\n}\n","export default function(ring) {\n  var i = 0, n = ring.length, area = ring[n - 1][1] * ring[0][0] - ring[n - 1][0] * ring[0][1];\n  while (++i < n) area += ring[i - 1][1] * ring[i][0] - ring[i - 1][0] * ring[i][1];\n  return area;\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function(ring, hole) {\n  var i = -1, n = hole.length, c;\n  while (++i < n) if (c = ringContains(ring, hole[i])) return c;\n  return 0;\n}\n\nfunction ringContains(ring, point) {\n  var x = point[0], y = point[1], contains = -1;\n  for (var i = 0, n = ring.length, j = n - 1; i < n; j = i++) {\n    var pi = ring[i], xi = pi[0], yi = pi[1], pj = ring[j], xj = pj[0], yj = pj[1];\n    if (segmentContains(pi, pj, point)) return 0;\n    if (((yi > y) !== (yj > y)) && ((x < (xj - xi) * (y - yi) / (yj - yi) + xi))) contains = -contains;\n  }\n  return contains;\n}\n\nfunction segmentContains(a, b, c) {\n  var i; return collinear(a, b, c) && within(a[i = +(a[0] === b[0])], c[i], b[i]);\n}\n\nfunction collinear(a, b, c) {\n  return (b[0] - a[0]) * (c[1] - a[1]) === (c[0] - a[0]) * (b[1] - a[1]);\n}\n\nfunction within(p, q, r) {\n  return p <= q && q <= r || r <= q && q <= p;\n}\n","export default function() {}\n","import {extent, thresholdSturges, tickStep, range} from \"d3-array\";\nimport {slice} from \"./array\";\nimport ascending from \"./ascending\";\nimport area from \"./area\";\nimport constant from \"./constant\";\nimport contains from \"./contains\";\nimport noop from \"./noop\";\n\nvar cases = [\n  [],\n  [[[1.0, 1.5], [0.5, 1.0]]],\n  [[[1.5, 1.0], [1.0, 1.5]]],\n  [[[1.5, 1.0], [0.5, 1.0]]],\n  [[[1.0, 0.5], [1.5, 1.0]]],\n  [[[1.0, 1.5], [0.5, 1.0]], [[1.0, 0.5], [1.5, 1.0]]],\n  [[[1.0, 0.5], [1.0, 1.5]]],\n  [[[1.0, 0.5], [0.5, 1.0]]],\n  [[[0.5, 1.0], [1.0, 0.5]]],\n  [[[1.0, 1.5], [1.0, 0.5]]],\n  [[[0.5, 1.0], [1.0, 0.5]], [[1.5, 1.0], [1.0, 1.5]]],\n  [[[1.5, 1.0], [1.0, 0.5]]],\n  [[[0.5, 1.0], [1.5, 1.0]]],\n  [[[1.0, 1.5], [1.5, 1.0]]],\n  [[[0.5, 1.0], [1.0, 1.5]]],\n  []\n];\n\nexport default function() {\n  var dx = 1,\n      dy = 1,\n      threshold = thresholdSturges,\n      smooth = smoothLinear;\n\n  function contours(values) {\n    var tz = threshold(values);\n\n    // Convert number of thresholds into uniform thresholds.\n    if (!Array.isArray(tz)) {\n      var domain = extent(values), start = domain[0], stop = domain[1];\n      tz = tickStep(start, stop, tz);\n      tz = range(Math.floor(start / tz) * tz, Math.floor(stop / tz) * tz, tz);\n    } else {\n      tz = tz.slice().sort(ascending);\n    }\n\n    return tz.map(function(value) {\n      return contour(values, value);\n    });\n  }\n\n  // Accumulate, smooth contour rings, assign holes to exterior rings.\n  // Based on https://github.com/mbostock/shapefile/blob/v0.6.2/shp/polygon.js\n  function contour(values, value) {\n    var polygons = [],\n        holes = [];\n\n    isorings(values, value, function(ring) {\n      smooth(ring, values, value);\n      if (area(ring) > 0) polygons.push([ring]);\n      else holes.push(ring);\n    });\n\n    holes.forEach(function(hole) {\n      for (var i = 0, n = polygons.length, polygon; i < n; ++i) {\n        if (contains((polygon = polygons[i])[0], hole) !== -1) {\n          polygon.push(hole);\n          return;\n        }\n      }\n    });\n\n    return {\n      type: \"MultiPolygon\",\n      value: value,\n      coordinates: polygons\n    };\n  }\n\n  // Marching squares with isolines stitched into rings.\n  // Based on https://github.com/topojson/topojson-client/blob/v3.0.0/src/stitch.js\n  function isorings(values, value, callback) {\n    var fragmentByStart = new Array,\n        fragmentByEnd = new Array,\n        x, y, t0, t1, t2, t3;\n\n    // Special case for the first row (y = -1, t2 = t3 = 0).\n    x = y = -1;\n    t1 = values[0] >= value;\n    cases[t1 << 1].forEach(stitch);\n    while (++x < dx - 1) {\n      t0 = t1, t1 = values[x + 1] >= value;\n      cases[t0 | t1 << 1].forEach(stitch);\n    }\n    cases[t1 << 0].forEach(stitch);\n\n    // General case for the intermediate rows.\n    while (++y < dy - 1) {\n      x = -1;\n      t1 = values[y * dx + dx] >= value;\n      t2 = values[y * dx] >= value;\n      cases[t1 << 1 | t2 << 2].forEach(stitch);\n      while (++x < dx - 1) {\n        t0 = t1, t1 = values[y * dx + dx + x + 1] >= value;\n        t3 = t2, t2 = values[y * dx + x + 1] >= value;\n        cases[t0 | t1 << 1 | t2 << 2 | t3 << 3].forEach(stitch);\n      }\n      cases[t1 | t2 << 3].forEach(stitch);\n    }\n\n    // Special case for the last row (y = dy - 1, t0 = t1 = 0).\n    x = -1;\n    t2 = values[y * dx] >= value;\n    cases[t2 << 2].forEach(stitch);\n    while (++x < dx - 1) {\n      t3 = t2, t2 = values[y * dx + x + 1] >= value;\n      cases[t2 << 2 | t3 << 3].forEach(stitch);\n    }\n    cases[t2 << 3].forEach(stitch);\n\n    function stitch(line) {\n      var start = [line[0][0] + x, line[0][1] + y],\n          end = [line[1][0] + x, line[1][1] + y],\n          startIndex = index(start),\n          endIndex = index(end),\n          f, g;\n      if (f = fragmentByEnd[startIndex]) {\n        if (g = fragmentByStart[endIndex]) {\n          delete fragmentByEnd[f.end];\n          delete fragmentByStart[g.start];\n          if (f === g) {\n            f.ring.push(end);\n            callback(f.ring);\n          } else {\n            fragmentByStart[f.start] = fragmentByEnd[g.end] = {start: f.start, end: g.end, ring: f.ring.concat(g.ring)};\n          }\n        } else {\n          delete fragmentByEnd[f.end];\n          f.ring.push(end);\n          fragmentByEnd[f.end = endIndex] = f;\n        }\n      } else if (f = fragmentByStart[endIndex]) {\n        if (g = fragmentByEnd[startIndex]) {\n          delete fragmentByStart[f.start];\n          delete fragmentByEnd[g.end];\n          if (f === g) {\n            f.ring.push(end);\n            callback(f.ring);\n          } else {\n            fragmentByStart[g.start] = fragmentByEnd[f.end] = {start: g.start, end: f.end, ring: g.ring.concat(f.ring)};\n          }\n        } else {\n          delete fragmentByStart[f.start];\n          f.ring.unshift(start);\n          fragmentByStart[f.start = startIndex] = f;\n        }\n      } else {\n        fragmentByStart[startIndex] = fragmentByEnd[endIndex] = {start: startIndex, end: endIndex, ring: [start, end]};\n      }\n    }\n  }\n\n  function index(point) {\n    return point[0] * 2 + point[1] * (dx + 1) * 4;\n  }\n\n  function smoothLinear(ring, values, value) {\n    ring.forEach(function(point) {\n      var x = point[0],\n          y = point[1],\n          xt = x | 0,\n          yt = y | 0,\n          v0,\n          v1 = values[yt * dx + xt];\n      if (x > 0 && x < dx && xt === x) {\n        v0 = values[yt * dx + xt - 1];\n        point[0] = x + (value - v0) / (v1 - v0) - 0.5;\n      }\n      if (y > 0 && y < dy && yt === y) {\n        v0 = values[(yt - 1) * dx + xt];\n        point[1] = y + (value - v0) / (v1 - v0) - 0.5;\n      }\n    });\n  }\n\n  contours.contour = contour;\n\n  contours.size = function(_) {\n    if (!arguments.length) return [dx, dy];\n    var _0 = Math.ceil(_[0]), _1 = Math.ceil(_[1]);\n    if (!(_0 > 0) || !(_1 > 0)) throw new Error(\"invalid size\");\n    return dx = _0, dy = _1, contours;\n  };\n\n  contours.thresholds = function(_) {\n    return arguments.length ? (threshold = typeof _ === \"function\" ? _ : Array.isArray(_) ? constant(slice.call(_)) : constant(_), contours) : threshold;\n  };\n\n  contours.smooth = function(_) {\n    return arguments.length ? (smooth = _ ? smoothLinear : noop, contours) : smooth === smoothLinear;\n  };\n\n  return contours;\n}\n","// TODO Optimize edge cases.\n// TODO Optimize index calculation.\n// TODO Optimize arguments.\nexport function blurX(source, target, r) {\n  var n = source.width,\n      m = source.height,\n      w = (r << 1) + 1;\n  for (var j = 0; j < m; ++j) {\n    for (var i = 0, sr = 0; i < n + r; ++i) {\n      if (i < n) {\n        sr += source.data[i + j * n];\n      }\n      if (i >= r) {\n        if (i >= w) {\n          sr -= source.data[i - w + j * n];\n        }\n        target.data[i - r + j * n] = sr / Math.min(i + 1, n - 1 + w - i, w);\n      }\n    }\n  }\n}\n\n// TODO Optimize edge cases.\n// TODO Optimize index calculation.\n// TODO Optimize arguments.\nexport function blurY(source, target, r) {\n  var n = source.width,\n      m = source.height,\n      w = (r << 1) + 1;\n  for (var i = 0; i < n; ++i) {\n    for (var j = 0, sr = 0; j < m + r; ++j) {\n      if (j < m) {\n        sr += source.data[i + j * n];\n      }\n      if (j >= r) {\n        if (j >= w) {\n          sr -= source.data[i + (j - w) * n];\n        }\n        target.data[i + (j - r) * n] = sr / Math.min(j + 1, m - 1 + w - j, w);\n      }\n    }\n  }\n}\n","import {max, range, tickStep} from \"d3-array\";\nimport {slice} from \"./array\";\nimport {blurX, blurY} from \"./blur\";\nimport constant from \"./constant\";\nimport contours from \"./contours\";\n\nfunction defaultX(d) {\n  return d[0];\n}\n\nfunction defaultY(d) {\n  return d[1];\n}\n\nfunction defaultWeight() {\n  return 1;\n}\n\nexport default function() {\n  var x = defaultX,\n      y = defaultY,\n      weight = defaultWeight,\n      dx = 960,\n      dy = 500,\n      r = 20, // blur radius\n      k = 2, // log2(grid cell size)\n      o = r * 3, // grid offset, to pad for blur\n      n = (dx + o * 2) >> k, // grid width\n      m = (dy + o * 2) >> k, // grid height\n      threshold = constant(20);\n\n  function density(data) {\n    var values0 = new Float32Array(n * m),\n        values1 = new Float32Array(n * m);\n\n    data.forEach(function(d, i, data) {\n      var xi = (+x(d, i, data) + o) >> k,\n          yi = (+y(d, i, data) + o) >> k,\n          wi = +weight(d, i, data);\n      if (xi >= 0 && xi < n && yi >= 0 && yi < m) {\n        values0[xi + yi * n] += wi;\n      }\n    });\n\n    // TODO Optimize.\n    blurX({width: n, height: m, data: values0}, {width: n, height: m, data: values1}, r >> k);\n    blurY({width: n, height: m, data: values1}, {width: n, height: m, data: values0}, r >> k);\n    blurX({width: n, height: m, data: values0}, {width: n, height: m, data: values1}, r >> k);\n    blurY({width: n, height: m, data: values1}, {width: n, height: m, data: values0}, r >> k);\n    blurX({width: n, height: m, data: values0}, {width: n, height: m, data: values1}, r >> k);\n    blurY({width: n, height: m, data: values1}, {width: n, height: m, data: values0}, r >> k);\n\n    var tz = threshold(values0);\n\n    // Convert number of thresholds into uniform thresholds.\n    if (!Array.isArray(tz)) {\n      var stop = max(values0);\n      tz = tickStep(0, stop, tz);\n      tz = range(0, Math.floor(stop / tz) * tz, tz);\n      tz.shift();\n    }\n\n    return contours()\n        .thresholds(tz)\n        .size([n, m])\n      (values0)\n        .map(transform);\n  }\n\n  function transform(geometry) {\n    geometry.value *= Math.pow(2, -2 * k); // Density in points per square pixel.\n    geometry.coordinates.forEach(transformPolygon);\n    return geometry;\n  }\n\n  function transformPolygon(coordinates) {\n    coordinates.forEach(transformRing);\n  }\n\n  function transformRing(coordinates) {\n    coordinates.forEach(transformPoint);\n  }\n\n  // TODO Optimize.\n  function transformPoint(coordinates) {\n    coordinates[0] = coordinates[0] * Math.pow(2, k) - o;\n    coordinates[1] = coordinates[1] * Math.pow(2, k) - o;\n  }\n\n  function resize() {\n    o = r * 3;\n    n = (dx + o * 2) >> k;\n    m = (dy + o * 2) >> k;\n    return density;\n  }\n\n  density.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), density) : x;\n  };\n\n  density.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), density) : y;\n  };\n\n  density.weight = function(_) {\n    return arguments.length ? (weight = typeof _ === \"function\" ? _ : constant(+_), density) : weight;\n  };\n\n  density.size = function(_) {\n    if (!arguments.length) return [dx, dy];\n    var _0 = Math.ceil(_[0]), _1 = Math.ceil(_[1]);\n    if (!(_0 >= 0) && !(_0 >= 0)) throw new Error(\"invalid size\");\n    return dx = _0, dy = _1, resize();\n  };\n\n  density.cellSize = function(_) {\n    if (!arguments.length) return 1 << k;\n    if (!((_ = +_) >= 1)) throw new Error(\"invalid cell size\");\n    return k = Math.floor(Math.log(_) / Math.LN2), resize();\n  };\n\n  density.thresholds = function(_) {\n    return arguments.length ? (threshold = typeof _ === \"function\" ? _ : Array.isArray(_) ? constant(slice.call(_)) : constant(_), density) : threshold;\n  };\n\n  density.bandwidth = function(_) {\n    if (!arguments.length) return Math.sqrt(r * (r + 1));\n    if (!((_ = +_) >= 0)) throw new Error(\"invalid bandwidth\");\n    return r = Math.round((Math.sqrt(4 * _ * _ + 1) - 1) / 2), resize();\n  };\n\n  return density;\n}\n","var EOL = {},\n    EOF = {},\n    QUOTE = 34,\n    NEWLINE = 10,\n    RETURN = 13;\n\nfunction objectConverter(columns) {\n  return new Function(\"d\", \"return {\" + columns.map(function(name, i) {\n    return JSON.stringify(name) + \": d[\" + i + \"]\";\n  }).join(\",\") + \"}\");\n}\n\nfunction customConverter(columns, f) {\n  var object = objectConverter(columns);\n  return function(row, i) {\n    return f(object(row), i, columns);\n  };\n}\n\n// Compute unique columns in order of discovery.\nfunction inferColumns(rows) {\n  var columnSet = Object.create(null),\n      columns = [];\n\n  rows.forEach(function(row) {\n    for (var column in row) {\n      if (!(column in columnSet)) {\n        columns.push(columnSet[column] = column);\n      }\n    }\n  });\n\n  return columns;\n}\n\nexport default function(delimiter) {\n  var reFormat = new RegExp(\"[\\\"\" + delimiter + \"\\n\\r]\"),\n      DELIMITER = delimiter.charCodeAt(0);\n\n  function parse(text, f) {\n    var convert, columns, rows = parseRows(text, function(row, i) {\n      if (convert) return convert(row, i - 1);\n      columns = row, convert = f ? customConverter(row, f) : objectConverter(row);\n    });\n    rows.columns = columns || [];\n    return rows;\n  }\n\n  function parseRows(text, f) {\n    var rows = [], // output rows\n        N = text.length,\n        I = 0, // current character index\n        n = 0, // current line number\n        t, // current token\n        eof = N <= 0, // current token followed by EOF?\n        eol = false; // current token followed by EOL?\n\n    // Strip the trailing newline.\n    if (text.charCodeAt(N - 1) === NEWLINE) --N;\n    if (text.charCodeAt(N - 1) === RETURN) --N;\n\n    function token() {\n      if (eof) return EOF;\n      if (eol) return eol = false, EOL;\n\n      // Unescape quotes.\n      var i, j = I, c;\n      if (text.charCodeAt(j) === QUOTE) {\n        while (I++ < N && text.charCodeAt(I) !== QUOTE || text.charCodeAt(++I) === QUOTE);\n        if ((i = I) >= N) eof = true;\n        else if ((c = text.charCodeAt(I++)) === NEWLINE) eol = true;\n        else if (c === RETURN) { eol = true; if (text.charCodeAt(I) === NEWLINE) ++I; }\n        return text.slice(j + 1, i - 1).replace(/\"\"/g, \"\\\"\");\n      }\n\n      // Find next delimiter or newline.\n      while (I < N) {\n        if ((c = text.charCodeAt(i = I++)) === NEWLINE) eol = true;\n        else if (c === RETURN) { eol = true; if (text.charCodeAt(I) === NEWLINE) ++I; }\n        else if (c !== DELIMITER) continue;\n        return text.slice(j, i);\n      }\n\n      // Return last token before EOF.\n      return eof = true, text.slice(j, N);\n    }\n\n    while ((t = token()) !== EOF) {\n      var row = [];\n      while (t !== EOL && t !== EOF) row.push(t), t = token();\n      if (f && (row = f(row, n++)) == null) continue;\n      rows.push(row);\n    }\n\n    return rows;\n  }\n\n  function format(rows, columns) {\n    if (columns == null) columns = inferColumns(rows);\n    return [columns.map(formatValue).join(delimiter)].concat(rows.map(function(row) {\n      return columns.map(function(column) {\n        return formatValue(row[column]);\n      }).join(delimiter);\n    })).join(\"\\n\");\n  }\n\n  function formatRows(rows) {\n    return rows.map(formatRow).join(\"\\n\");\n  }\n\n  function formatRow(row) {\n    return row.map(formatValue).join(delimiter);\n  }\n\n  function formatValue(text) {\n    return text == null ? \"\"\n        : reFormat.test(text += \"\") ? \"\\\"\" + text.replace(/\"/g, \"\\\"\\\"\") + \"\\\"\"\n        : text;\n  }\n\n  return {\n    parse: parse,\n    parseRows: parseRows,\n    format: format,\n    formatRows: formatRows\n  };\n}\n","import dsv from \"./dsv\";\n\nvar csv = dsv(\",\");\n\nexport var csvParse = csv.parse;\nexport var csvParseRows = csv.parseRows;\nexport var csvFormat = csv.format;\nexport var csvFormatRows = csv.formatRows;\n","import dsv from \"./dsv\";\n\nvar tsv = dsv(\"\\t\");\n\nexport var tsvParse = tsv.parse;\nexport var tsvParseRows = tsv.parseRows;\nexport var tsvFormat = tsv.format;\nexport var tsvFormatRows = tsv.formatRows;\n","function responseBlob(response) {\n  if (!response.ok) throw new Error(response.status + \" \" + response.statusText);\n  return response.blob();\n}\n\nexport default function(input, init) {\n  return fetch(input, init).then(responseBlob);\n}\n","function responseArrayBuffer(response) {\n  if (!response.ok) throw new Error(response.status + \" \" + response.statusText);\n  return response.arrayBuffer();\n}\n\nexport default function(input, init) {\n  return fetch(input, init).then(responseArrayBuffer);\n}\n","function responseText(response) {\n  if (!response.ok) throw new Error(response.status + \" \" + response.statusText);\n  return response.text();\n}\n\nexport default function(input, init) {\n  return fetch(input, init).then(responseText);\n}\n","import {csvParse, dsvFormat, tsvParse} from \"d3-dsv\";\nimport text from \"./text\";\n\nfunction dsvParse(parse) {\n  return function(input, init, row) {\n    if (arguments.length === 2 && typeof init === \"function\") row = init, init = undefined;\n    return text(input, init).then(function(response) {\n      return parse(response, row);\n    });\n  };\n}\n\nexport default function dsv(delimiter, input, init, row) {\n  if (arguments.length === 3 && typeof init === \"function\") row = init, init = undefined;\n  var format = dsvFormat(delimiter);\n  return text(input, init).then(function(response) {\n    return format.parse(response, row);\n  });\n}\n\nexport var csv = dsvParse(csvParse);\nexport var tsv = dsvParse(tsvParse);\n","export default function(input, init) {\n  return new Promise(function(resolve, reject) {\n    var image = new Image;\n    for (var key in init) image[key] = init[key];\n    image.onerror = reject;\n    image.onload = function() { resolve(image); };\n    image.src = input;\n  });\n}\n","function responseJson(response) {\n  if (!response.ok) throw new Error(response.status + \" \" + response.statusText);\n  return response.json();\n}\n\nexport default function(input, init) {\n  return fetch(input, init).then(responseJson);\n}\n","import text from \"./text\";\n\nfunction parser(type) {\n  return function(input, init)  {\n    return text(input, init).then(function(text) {\n      return (new DOMParser).parseFromString(text, type);\n    });\n  };\n}\n\nexport default parser(\"application/xml\");\n\nexport var html = parser(\"text/html\");\n\nexport var svg = parser(\"image/svg+xml\");\n","export default function(x, y) {\n  var nodes;\n\n  if (x == null) x = 0;\n  if (y == null) y = 0;\n\n  function force() {\n    var i,\n        n = nodes.length,\n        node,\n        sx = 0,\n        sy = 0;\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i], sx += node.x, sy += node.y;\n    }\n\n    for (sx = sx / n - x, sy = sy / n - y, i = 0; i < n; ++i) {\n      node = nodes[i], node.x -= sx, node.y -= sy;\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = +_, force) : x;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = +_, force) : y;\n  };\n\n  return force;\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function() {\n  return (Math.random() - 0.5) * 1e-6;\n}\n","export default function(d) {\n  var x = +this._x.call(null, d),\n      y = +this._y.call(null, d);\n  return add(this.cover(x, y), x, y, d);\n}\n\nfunction add(tree, x, y, d) {\n  if (isNaN(x) || isNaN(y)) return tree; // ignore invalid points\n\n  var parent,\n      node = tree._root,\n      leaf = {data: d},\n      x0 = tree._x0,\n      y0 = tree._y0,\n      x1 = tree._x1,\n      y1 = tree._y1,\n      xm,\n      ym,\n      xp,\n      yp,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return tree._root = leaf, tree;\n\n  // Find the existing leaf for the new point, or add it.\n  while (node.length) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (parent = node, !(node = node[i = bottom << 1 | right])) return parent[i] = leaf, tree;\n  }\n\n  // Is the new point is exactly coincident with the existing point?\n  xp = +tree._x.call(null, node.data);\n  yp = +tree._y.call(null, node.data);\n  if (x === xp && y === yp) return leaf.next = node, parent ? parent[i] = leaf : tree._root = leaf, tree;\n\n  // Otherwise, split the leaf node until the old and new point are separated.\n  do {\n    parent = parent ? parent[i] = new Array(4) : tree._root = new Array(4);\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n  } while ((i = bottom << 1 | right) === (j = (yp >= ym) << 1 | (xp >= xm)));\n  return parent[j] = node, parent[i] = leaf, tree;\n}\n\nexport function addAll(data) {\n  var d, i, n = data.length,\n      x,\n      y,\n      xz = new Array(n),\n      yz = new Array(n),\n      x0 = Infinity,\n      y0 = Infinity,\n      x1 = -Infinity,\n      y1 = -Infinity;\n\n  // Compute the points and their extent.\n  for (i = 0; i < n; ++i) {\n    if (isNaN(x = +this._x.call(null, d = data[i])) || isNaN(y = +this._y.call(null, d))) continue;\n    xz[i] = x;\n    yz[i] = y;\n    if (x < x0) x0 = x;\n    if (x > x1) x1 = x;\n    if (y < y0) y0 = y;\n    if (y > y1) y1 = y;\n  }\n\n  // If there were no (valid) points, inherit the existing extent.\n  if (x1 < x0) x0 = this._x0, x1 = this._x1;\n  if (y1 < y0) y0 = this._y0, y1 = this._y1;\n\n  // Expand the tree to cover the new points.\n  this.cover(x0, y0).cover(x1, y1);\n\n  // Add the new points.\n  for (i = 0; i < n; ++i) {\n    add(this, xz[i], yz[i], data[i]);\n  }\n\n  return this;\n}\n","export default function(x, y) {\n  if (isNaN(x = +x) || isNaN(y = +y)) return this; // ignore invalid points\n\n  var x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1;\n\n  // If the quadtree has no extent, initialize them.\n  // Integer extent are necessary so that if we later double the extent,\n  // the existing quadrant boundaries don’t change due to floating point error!\n  if (isNaN(x0)) {\n    x1 = (x0 = Math.floor(x)) + 1;\n    y1 = (y0 = Math.floor(y)) + 1;\n  }\n\n  // Otherwise, double repeatedly to cover.\n  else if (x0 > x || x > x1 || y0 > y || y > y1) {\n    var z = x1 - x0,\n        node = this._root,\n        parent,\n        i;\n\n    switch (i = (y < (y0 + y1) / 2) << 1 | (x < (x0 + x1) / 2)) {\n      case 0: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x1 = x0 + z, y1 = y0 + z, x > x1 || y > y1);\n        break;\n      }\n      case 1: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x0 = x1 - z, y1 = y0 + z, x0 > x || y > y1);\n        break;\n      }\n      case 2: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x1 = x0 + z, y0 = y1 - z, x > x1 || y0 > y);\n        break;\n      }\n      case 3: {\n        do parent = new Array(4), parent[i] = node, node = parent;\n        while (z *= 2, x0 = x1 - z, y0 = y1 - z, x0 > x || y0 > y);\n        break;\n      }\n    }\n\n    if (this._root && this._root.length) this._root = node;\n  }\n\n  // If the quadtree covers the point already, just return.\n  else return this;\n\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  return this;\n}\n","export default function(node, x0, y0, x1, y1) {\n  this.node = node;\n  this.x0 = x0;\n  this.y0 = y0;\n  this.x1 = x1;\n  this.y1 = y1;\n}\n","export function defaultX(d) {\n  return d[0];\n}\n\nexport default function(_) {\n  return arguments.length ? (this._x = _, this) : this._x;\n}\n","export function defaultY(d) {\n  return d[1];\n}\n\nexport default function(_) {\n  return arguments.length ? (this._y = _, this) : this._y;\n}\n","import tree_add, {addAll as tree_addAll} from \"./add\";\nimport tree_cover from \"./cover\";\nimport tree_data from \"./data\";\nimport tree_extent from \"./extent\";\nimport tree_find from \"./find\";\nimport tree_remove, {removeAll as tree_removeAll} from \"./remove\";\nimport tree_root from \"./root\";\nimport tree_size from \"./size\";\nimport tree_visit from \"./visit\";\nimport tree_visitAfter from \"./visitAfter\";\nimport tree_x, {defaultX} from \"./x\";\nimport tree_y, {defaultY} from \"./y\";\n\nexport default function quadtree(nodes, x, y) {\n  var tree = new Quadtree(x == null ? defaultX : x, y == null ? defaultY : y, NaN, NaN, NaN, NaN);\n  return nodes == null ? tree : tree.addAll(nodes);\n}\n\nfunction Quadtree(x, y, x0, y0, x1, y1) {\n  this._x = x;\n  this._y = y;\n  this._x0 = x0;\n  this._y0 = y0;\n  this._x1 = x1;\n  this._y1 = y1;\n  this._root = undefined;\n}\n\nfunction leaf_copy(leaf) {\n  var copy = {data: leaf.data}, next = copy;\n  while (leaf = leaf.next) next = next.next = {data: leaf.data};\n  return copy;\n}\n\nvar treeProto = quadtree.prototype = Quadtree.prototype;\n\ntreeProto.copy = function() {\n  var copy = new Quadtree(this._x, this._y, this._x0, this._y0, this._x1, this._y1),\n      node = this._root,\n      nodes,\n      child;\n\n  if (!node) return copy;\n\n  if (!node.length) return copy._root = leaf_copy(node), copy;\n\n  nodes = [{source: node, target: copy._root = new Array(4)}];\n  while (node = nodes.pop()) {\n    for (var i = 0; i < 4; ++i) {\n      if (child = node.source[i]) {\n        if (child.length) nodes.push({source: child, target: node.target[i] = new Array(4)});\n        else node.target[i] = leaf_copy(child);\n      }\n    }\n  }\n\n  return copy;\n};\n\ntreeProto.add = tree_add;\ntreeProto.addAll = tree_addAll;\ntreeProto.cover = tree_cover;\ntreeProto.data = tree_data;\ntreeProto.extent = tree_extent;\ntreeProto.find = tree_find;\ntreeProto.remove = tree_remove;\ntreeProto.removeAll = tree_removeAll;\ntreeProto.root = tree_root;\ntreeProto.size = tree_size;\ntreeProto.visit = tree_visit;\ntreeProto.visitAfter = tree_visitAfter;\ntreeProto.x = tree_x;\ntreeProto.y = tree_y;\n","import constant from \"./constant\";\nimport jiggle from \"./jiggle\";\nimport {quadtree} from \"d3-quadtree\";\n\nfunction x(d) {\n  return d.x + d.vx;\n}\n\nfunction y(d) {\n  return d.y + d.vy;\n}\n\nexport default function(radius) {\n  var nodes,\n      radii,\n      strength = 1,\n      iterations = 1;\n\n  if (typeof radius !== \"function\") radius = constant(radius == null ? 1 : +radius);\n\n  function force() {\n    var i, n = nodes.length,\n        tree,\n        node,\n        xi,\n        yi,\n        ri,\n        ri2;\n\n    for (var k = 0; k < iterations; ++k) {\n      tree = quadtree(nodes, x, y).visitAfter(prepare);\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        ri = radii[node.index], ri2 = ri * ri;\n        xi = node.x + node.vx;\n        yi = node.y + node.vy;\n        tree.visit(apply);\n      }\n    }\n\n    function apply(quad, x0, y0, x1, y1) {\n      var data = quad.data, rj = quad.r, r = ri + rj;\n      if (data) {\n        if (data.index > node.index) {\n          var x = xi - data.x - data.vx,\n              y = yi - data.y - data.vy,\n              l = x * x + y * y;\n          if (l < r * r) {\n            if (x === 0) x = jiggle(), l += x * x;\n            if (y === 0) y = jiggle(), l += y * y;\n            l = (r - (l = Math.sqrt(l))) / l * strength;\n            node.vx += (x *= l) * (r = (rj *= rj) / (ri2 + rj));\n            node.vy += (y *= l) * r;\n            data.vx -= x * (r = 1 - r);\n            data.vy -= y * r;\n          }\n        }\n        return;\n      }\n      return x0 > xi + r || x1 < xi - r || y0 > yi + r || y1 < yi - r;\n    }\n  }\n\n  function prepare(quad) {\n    if (quad.data) return quad.r = radii[quad.data.index];\n    for (var i = quad.r = 0; i < 4; ++i) {\n      if (quad[i] && quad[i].r > quad.r) {\n        quad.r = quad[i].r;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length, node;\n    radii = new Array(n);\n    for (i = 0; i < n; ++i) node = nodes[i], radii[node.index] = +radius(node, i, nodes);\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.iterations = function(_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = +_, force) : strength;\n  };\n\n  force.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : radius;\n  };\n\n  return force;\n}\n","export default function() {\n  var data = [];\n  this.visit(function(node) {\n    if (!node.length) do data.push(node.data); while (node = node.next)\n  });\n  return data;\n}\n","export default function(_) {\n  return arguments.length\n      ? this.cover(+_[0][0], +_[0][1]).cover(+_[1][0], +_[1][1])\n      : isNaN(this._x0) ? undefined : [[this._x0, this._y0], [this._x1, this._y1]];\n}\n","import Quad from \"./quad\";\n\nexport default function(x, y, radius) {\n  var data,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1,\n      y1,\n      x2,\n      y2,\n      x3 = this._x1,\n      y3 = this._y1,\n      quads = [],\n      node = this._root,\n      q,\n      i;\n\n  if (node) quads.push(new Quad(node, x0, y0, x3, y3));\n  if (radius == null) radius = Infinity;\n  else {\n    x0 = x - radius, y0 = y - radius;\n    x3 = x + radius, y3 = y + radius;\n    radius *= radius;\n  }\n\n  while (q = quads.pop()) {\n\n    // Stop searching if this quadrant can’t contain a closer node.\n    if (!(node = q.node)\n        || (x1 = q.x0) > x3\n        || (y1 = q.y0) > y3\n        || (x2 = q.x1) < x0\n        || (y2 = q.y1) < y0) continue;\n\n    // Bisect the current quadrant.\n    if (node.length) {\n      var xm = (x1 + x2) / 2,\n          ym = (y1 + y2) / 2;\n\n      quads.push(\n        new Quad(node[3], xm, ym, x2, y2),\n        new Quad(node[2], x1, ym, xm, y2),\n        new Quad(node[1], xm, y1, x2, ym),\n        new Quad(node[0], x1, y1, xm, ym)\n      );\n\n      // Visit the closest quadrant first.\n      if (i = (y >= ym) << 1 | (x >= xm)) {\n        q = quads[quads.length - 1];\n        quads[quads.length - 1] = quads[quads.length - 1 - i];\n        quads[quads.length - 1 - i] = q;\n      }\n    }\n\n    // Visit this point. (Visiting coincident points isn’t necessary!)\n    else {\n      var dx = x - +this._x.call(null, node.data),\n          dy = y - +this._y.call(null, node.data),\n          d2 = dx * dx + dy * dy;\n      if (d2 < radius) {\n        var d = Math.sqrt(radius = d2);\n        x0 = x - d, y0 = y - d;\n        x3 = x + d, y3 = y + d;\n        data = node.data;\n      }\n    }\n  }\n\n  return data;\n}\n","export default function(d) {\n  if (isNaN(x = +this._x.call(null, d)) || isNaN(y = +this._y.call(null, d))) return this; // ignore invalid points\n\n  var parent,\n      node = this._root,\n      retainer,\n      previous,\n      next,\n      x0 = this._x0,\n      y0 = this._y0,\n      x1 = this._x1,\n      y1 = this._y1,\n      x,\n      y,\n      xm,\n      ym,\n      right,\n      bottom,\n      i,\n      j;\n\n  // If the tree is empty, initialize the root as a leaf.\n  if (!node) return this;\n\n  // Find the leaf node for the point.\n  // While descending, also retain the deepest parent with a non-removed sibling.\n  if (node.length) while (true) {\n    if (right = x >= (xm = (x0 + x1) / 2)) x0 = xm; else x1 = xm;\n    if (bottom = y >= (ym = (y0 + y1) / 2)) y0 = ym; else y1 = ym;\n    if (!(parent = node, node = node[i = bottom << 1 | right])) return this;\n    if (!node.length) break;\n    if (parent[(i + 1) & 3] || parent[(i + 2) & 3] || parent[(i + 3) & 3]) retainer = parent, j = i;\n  }\n\n  // Find the point to remove.\n  while (node.data !== d) if (!(previous = node, node = node.next)) return this;\n  if (next = node.next) delete node.next;\n\n  // If there are multiple coincident points, remove just the point.\n  if (previous) return (next ? previous.next = next : delete previous.next), this;\n\n  // If this is the root point, remove it.\n  if (!parent) return this._root = next, this;\n\n  // Remove this leaf.\n  next ? parent[i] = next : delete parent[i];\n\n  // If the parent now contains exactly one leaf, collapse superfluous parents.\n  if ((node = parent[0] || parent[1] || parent[2] || parent[3])\n      && node === (parent[3] || parent[2] || parent[1] || parent[0])\n      && !node.length) {\n    if (retainer) retainer[j] = node;\n    else this._root = node;\n  }\n\n  return this;\n}\n\nexport function removeAll(data) {\n  for (var i = 0, n = data.length; i < n; ++i) this.remove(data[i]);\n  return this;\n}\n","export default function() {\n  return this._root;\n}\n","export default function() {\n  var size = 0;\n  this.visit(function(node) {\n    if (!node.length) do ++size; while (node = node.next)\n  });\n  return size;\n}\n","import Quad from \"./quad\";\n\nexport default function(callback) {\n  var quads = [], q, node = this._root, child, x0, y0, x1, y1;\n  if (node) quads.push(new Quad(node, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    if (!callback(node = q.node, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1) && node.length) {\n      var xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n    }\n  }\n  return this;\n}\n","import Quad from \"./quad\";\n\nexport default function(callback) {\n  var quads = [], next = [], q;\n  if (this._root) quads.push(new Quad(this._root, this._x0, this._y0, this._x1, this._y1));\n  while (q = quads.pop()) {\n    var node = q.node;\n    if (node.length) {\n      var child, x0 = q.x0, y0 = q.y0, x1 = q.x1, y1 = q.y1, xm = (x0 + x1) / 2, ym = (y0 + y1) / 2;\n      if (child = node[0]) quads.push(new Quad(child, x0, y0, xm, ym));\n      if (child = node[1]) quads.push(new Quad(child, xm, y0, x1, ym));\n      if (child = node[2]) quads.push(new Quad(child, x0, ym, xm, y1));\n      if (child = node[3]) quads.push(new Quad(child, xm, ym, x1, y1));\n    }\n    next.push(q);\n  }\n  while (q = next.pop()) {\n    callback(q.node, q.x0, q.y0, q.x1, q.y1);\n  }\n  return this;\n}\n","import constant from \"./constant\";\nimport jiggle from \"./jiggle\";\nimport {map} from \"d3-collection\";\n\nfunction index(d) {\n  return d.index;\n}\n\nfunction find(nodeById, nodeId) {\n  var node = nodeById.get(nodeId);\n  if (!node) throw new Error(\"missing: \" + nodeId);\n  return node;\n}\n\nexport default function(links) {\n  var id = index,\n      strength = defaultStrength,\n      strengths,\n      distance = constant(30),\n      distances,\n      nodes,\n      count,\n      bias,\n      iterations = 1;\n\n  if (links == null) links = [];\n\n  function defaultStrength(link) {\n    return 1 / Math.min(count[link.source.index], count[link.target.index]);\n  }\n\n  function force(alpha) {\n    for (var k = 0, n = links.length; k < iterations; ++k) {\n      for (var i = 0, link, source, target, x, y, l, b; i < n; ++i) {\n        link = links[i], source = link.source, target = link.target;\n        x = target.x + target.vx - source.x - source.vx || jiggle();\n        y = target.y + target.vy - source.y - source.vy || jiggle();\n        l = Math.sqrt(x * x + y * y);\n        l = (l - distances[i]) / l * alpha * strengths[i];\n        x *= l, y *= l;\n        target.vx -= x * (b = bias[i]);\n        target.vy -= y * b;\n        source.vx += x * (b = 1 - b);\n        source.vy += y * b;\n      }\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n\n    var i,\n        n = nodes.length,\n        m = links.length,\n        nodeById = map(nodes, id),\n        link;\n\n    for (i = 0, count = new Array(n); i < m; ++i) {\n      link = links[i], link.index = i;\n      if (typeof link.source !== \"object\") link.source = find(nodeById, link.source);\n      if (typeof link.target !== \"object\") link.target = find(nodeById, link.target);\n      count[link.source.index] = (count[link.source.index] || 0) + 1;\n      count[link.target.index] = (count[link.target.index] || 0) + 1;\n    }\n\n    for (i = 0, bias = new Array(m); i < m; ++i) {\n      link = links[i], bias[i] = count[link.source.index] / (count[link.source.index] + count[link.target.index]);\n    }\n\n    strengths = new Array(m), initializeStrength();\n    distances = new Array(m), initializeDistance();\n  }\n\n  function initializeStrength() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      strengths[i] = +strength(links[i], i, links);\n    }\n  }\n\n  function initializeDistance() {\n    if (!nodes) return;\n\n    for (var i = 0, n = links.length; i < n; ++i) {\n      distances[i] = +distance(links[i], i, links);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.links = function(_) {\n    return arguments.length ? (links = _, initialize(), force) : links;\n  };\n\n  force.id = function(_) {\n    return arguments.length ? (id = _, force) : id;\n  };\n\n  force.iterations = function(_) {\n    return arguments.length ? (iterations = +_, force) : iterations;\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initializeStrength(), force) : strength;\n  };\n\n  force.distance = function(_) {\n    return arguments.length ? (distance = typeof _ === \"function\" ? _ : constant(+_), initializeDistance(), force) : distance;\n  };\n\n  return force;\n}\n","import {dispatch} from \"d3-dispatch\";\nimport {map} from \"d3-collection\";\nimport {timer} from \"d3-timer\";\n\nexport function x(d) {\n  return d.x;\n}\n\nexport function y(d) {\n  return d.y;\n}\n\nvar initialRadius = 10,\n    initialAngle = Math.PI * (3 - Math.sqrt(5));\n\nexport default function(nodes) {\n  var simulation,\n      alpha = 1,\n      alphaMin = 0.001,\n      alphaDecay = 1 - Math.pow(alphaMin, 1 / 300),\n      alphaTarget = 0,\n      velocityDecay = 0.6,\n      forces = map(),\n      stepper = timer(step),\n      event = dispatch(\"tick\", \"end\");\n\n  if (nodes == null) nodes = [];\n\n  function step() {\n    tick();\n    event.call(\"tick\", simulation);\n    if (alpha < alphaMin) {\n      stepper.stop();\n      event.call(\"end\", simulation);\n    }\n  }\n\n  function tick() {\n    var i, n = nodes.length, node;\n\n    alpha += (alphaTarget - alpha) * alphaDecay;\n\n    forces.each(function(force) {\n      force(alpha);\n    });\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i];\n      if (node.fx == null) node.x += node.vx *= velocityDecay;\n      else node.x = node.fx, node.vx = 0;\n      if (node.fy == null) node.y += node.vy *= velocityDecay;\n      else node.y = node.fy, node.vy = 0;\n    }\n  }\n\n  function initializeNodes() {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.index = i;\n      if (isNaN(node.x) || isNaN(node.y)) {\n        var radius = initialRadius * Math.sqrt(i), angle = i * initialAngle;\n        node.x = radius * Math.cos(angle);\n        node.y = radius * Math.sin(angle);\n      }\n      if (isNaN(node.vx) || isNaN(node.vy)) {\n        node.vx = node.vy = 0;\n      }\n    }\n  }\n\n  function initializeForce(force) {\n    if (force.initialize) force.initialize(nodes);\n    return force;\n  }\n\n  initializeNodes();\n\n  return simulation = {\n    tick: tick,\n\n    restart: function() {\n      return stepper.restart(step), simulation;\n    },\n\n    stop: function() {\n      return stepper.stop(), simulation;\n    },\n\n    nodes: function(_) {\n      return arguments.length ? (nodes = _, initializeNodes(), forces.each(initializeForce), simulation) : nodes;\n    },\n\n    alpha: function(_) {\n      return arguments.length ? (alpha = +_, simulation) : alpha;\n    },\n\n    alphaMin: function(_) {\n      return arguments.length ? (alphaMin = +_, simulation) : alphaMin;\n    },\n\n    alphaDecay: function(_) {\n      return arguments.length ? (alphaDecay = +_, simulation) : +alphaDecay;\n    },\n\n    alphaTarget: function(_) {\n      return arguments.length ? (alphaTarget = +_, simulation) : alphaTarget;\n    },\n\n    velocityDecay: function(_) {\n      return arguments.length ? (velocityDecay = 1 - _, simulation) : 1 - velocityDecay;\n    },\n\n    force: function(name, _) {\n      return arguments.length > 1 ? ((_ == null ? forces.remove(name) : forces.set(name, initializeForce(_))), simulation) : forces.get(name);\n    },\n\n    find: function(x, y, radius) {\n      var i = 0,\n          n = nodes.length,\n          dx,\n          dy,\n          d2,\n          node,\n          closest;\n\n      if (radius == null) radius = Infinity;\n      else radius *= radius;\n\n      for (i = 0; i < n; ++i) {\n        node = nodes[i];\n        dx = x - node.x;\n        dy = y - node.y;\n        d2 = dx * dx + dy * dy;\n        if (d2 < radius) closest = node, radius = d2;\n      }\n\n      return closest;\n    },\n\n    on: function(name, _) {\n      return arguments.length > 1 ? (event.on(name, _), simulation) : event.on(name);\n    }\n  };\n}\n","import constant from \"./constant\";\nimport jiggle from \"./jiggle\";\nimport {quadtree} from \"d3-quadtree\";\nimport {x, y} from \"./simulation\";\n\nexport default function() {\n  var nodes,\n      node,\n      alpha,\n      strength = constant(-30),\n      strengths,\n      distanceMin2 = 1,\n      distanceMax2 = Infinity,\n      theta2 = 0.81;\n\n  function force(_) {\n    var i, n = nodes.length, tree = quadtree(nodes, x, y).visitAfter(accumulate);\n    for (alpha = _, i = 0; i < n; ++i) node = nodes[i], tree.visit(apply);\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length, node;\n    strengths = new Array(n);\n    for (i = 0; i < n; ++i) node = nodes[i], strengths[node.index] = +strength(node, i, nodes);\n  }\n\n  function accumulate(quad) {\n    var strength = 0, q, c, weight = 0, x, y, i;\n\n    // For internal nodes, accumulate forces from child quadrants.\n    if (quad.length) {\n      for (x = y = i = 0; i < 4; ++i) {\n        if ((q = quad[i]) && (c = Math.abs(q.value))) {\n          strength += q.value, weight += c, x += c * q.x, y += c * q.y;\n        }\n      }\n      quad.x = x / weight;\n      quad.y = y / weight;\n    }\n\n    // For leaf nodes, accumulate forces from coincident quadrants.\n    else {\n      q = quad;\n      q.x = q.data.x;\n      q.y = q.data.y;\n      do strength += strengths[q.data.index];\n      while (q = q.next);\n    }\n\n    quad.value = strength;\n  }\n\n  function apply(quad, x1, _, x2) {\n    if (!quad.value) return true;\n\n    var x = quad.x - node.x,\n        y = quad.y - node.y,\n        w = x2 - x1,\n        l = x * x + y * y;\n\n    // Apply the Barnes-Hut approximation if possible.\n    // Limit forces for very close nodes; randomize direction if coincident.\n    if (w * w / theta2 < l) {\n      if (l < distanceMax2) {\n        if (x === 0) x = jiggle(), l += x * x;\n        if (y === 0) y = jiggle(), l += y * y;\n        if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n        node.vx += x * quad.value * alpha / l;\n        node.vy += y * quad.value * alpha / l;\n      }\n      return true;\n    }\n\n    // Otherwise, process points directly.\n    else if (quad.length || l >= distanceMax2) return;\n\n    // Limit forces for very close nodes; randomize direction if coincident.\n    if (quad.data !== node || quad.next) {\n      if (x === 0) x = jiggle(), l += x * x;\n      if (y === 0) y = jiggle(), l += y * y;\n      if (l < distanceMin2) l = Math.sqrt(distanceMin2 * l);\n    }\n\n    do if (quad.data !== node) {\n      w = strengths[quad.data.index] * alpha / l;\n      node.vx += x * w;\n      node.vy += y * w;\n    } while (quad = quad.next);\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : strength;\n  };\n\n  force.distanceMin = function(_) {\n    return arguments.length ? (distanceMin2 = _ * _, force) : Math.sqrt(distanceMin2);\n  };\n\n  force.distanceMax = function(_) {\n    return arguments.length ? (distanceMax2 = _ * _, force) : Math.sqrt(distanceMax2);\n  };\n\n  force.theta = function(_) {\n    return arguments.length ? (theta2 = _ * _, force) : Math.sqrt(theta2);\n  };\n\n  return force;\n}\n","import constant from \"./constant\";\n\nexport default function(radius, x, y) {\n  var nodes,\n      strength = constant(0.1),\n      strengths,\n      radiuses;\n\n  if (typeof radius !== \"function\") radius = constant(+radius);\n  if (x == null) x = 0;\n  if (y == null) y = 0;\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length; i < n; ++i) {\n      var node = nodes[i],\n          dx = node.x - x || 1e-6,\n          dy = node.y - y || 1e-6,\n          r = Math.sqrt(dx * dx + dy * dy),\n          k = (radiuses[i] - r) * strengths[i] * alpha / r;\n      node.vx += dx * k;\n      node.vy += dy * k;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    radiuses = new Array(n);\n    for (i = 0; i < n; ++i) {\n      radiuses[i] = +radius(nodes[i], i, nodes);\n      strengths[i] = isNaN(radiuses[i]) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _, initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : strength;\n  };\n\n  force.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : radius;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = +_, force) : x;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = +_, force) : y;\n  };\n\n  return force;\n}\n","import constant from \"./constant\";\n\nexport default function(x) {\n  var strength = constant(0.1),\n      nodes,\n      strengths,\n      xz;\n\n  if (typeof x !== \"function\") x = constant(x == null ? 0 : +x);\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vx += (xz[i] - node.x) * strengths[i] * alpha;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    xz = new Array(n);\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(xz[i] = +x(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : strength;\n  };\n\n  force.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : x;\n  };\n\n  return force;\n}\n","import constant from \"./constant\";\n\nexport default function(y) {\n  var strength = constant(0.1),\n      nodes,\n      strengths,\n      yz;\n\n  if (typeof y !== \"function\") y = constant(y == null ? 0 : +y);\n\n  function force(alpha) {\n    for (var i = 0, n = nodes.length, node; i < n; ++i) {\n      node = nodes[i], node.vy += (yz[i] - node.y) * strengths[i] * alpha;\n    }\n  }\n\n  function initialize() {\n    if (!nodes) return;\n    var i, n = nodes.length;\n    strengths = new Array(n);\n    yz = new Array(n);\n    for (i = 0; i < n; ++i) {\n      strengths[i] = isNaN(yz[i] = +y(nodes[i], i, nodes)) ? 0 : +strength(nodes[i], i, nodes);\n    }\n  }\n\n  force.initialize = function(_) {\n    nodes = _;\n    initialize();\n  };\n\n  force.strength = function(_) {\n    return arguments.length ? (strength = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : strength;\n  };\n\n  force.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), initialize(), force) : y;\n  };\n\n  return force;\n}\n","// Computes the decimal coefficient and exponent of the specified number x with\n// significant digits p, where x is positive and p is in [1, 21] or undefined.\n// For example, formatDecimal(1.23) returns [\"123\", 0].\nexport default function(x, p) {\n  if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf(\"e\")) < 0) return null; // NaN, ±Infinity\n  var i, coefficient = x.slice(0, i);\n\n  // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\n  // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\n  return [\n    coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,\n    +x.slice(i + 1)\n  ];\n}\n","import formatDecimal from \"./formatDecimal\";\n\nexport default function(x) {\n  return x = formatDecimal(Math.abs(x)), x ? x[1] : NaN;\n}\n","// [[fill]align][sign][symbol][0][width][,][.precision][~][type]\nvar re = /^(?:(.)?([<>=^]))?([+\\-\\( ])?([$#])?(0)?(\\d+)?(,)?(\\.\\d+)?(~)?([a-z%])?$/i;\n\nexport default function formatSpecifier(specifier) {\n  return new FormatSpecifier(specifier);\n}\n\nformatSpecifier.prototype = FormatSpecifier.prototype; // instanceof\n\nfunction FormatSpecifier(specifier) {\n  if (!(match = re.exec(specifier))) throw new Error(\"invalid format: \" + specifier);\n  var match;\n  this.fill = match[1] || \" \";\n  this.align = match[2] || \">\";\n  this.sign = match[3] || \"-\";\n  this.symbol = match[4] || \"\";\n  this.zero = !!match[5];\n  this.width = match[6] && +match[6];\n  this.comma = !!match[7];\n  this.precision = match[8] && +match[8].slice(1);\n  this.trim = !!match[9];\n  this.type = match[10] || \"\";\n}\n\nFormatSpecifier.prototype.toString = function() {\n  return this.fill\n      + this.align\n      + this.sign\n      + this.symbol\n      + (this.zero ? \"0\" : \"\")\n      + (this.width == null ? \"\" : Math.max(1, this.width | 0))\n      + (this.comma ? \",\" : \"\")\n      + (this.precision == null ? \"\" : \".\" + Math.max(0, this.precision | 0))\n      + (this.trim ? \"~\" : \"\")\n      + this.type;\n};\n","// Trims insignificant zeros, e.g., replaces 1.2000k with 1.2k.\nexport default function(s) {\n  out: for (var n = s.length, i = 1, i0 = -1, i1; i < n; ++i) {\n    switch (s[i]) {\n      case \".\": i0 = i1 = i; break;\n      case \"0\": if (i0 === 0) i0 = i; i1 = i; break;\n      default: if (i0 > 0) { if (!+s[i]) break out; i0 = 0; } break;\n    }\n  }\n  return i0 > 0 ? s.slice(0, i0) + s.slice(i1 + 1) : s;\n}\n","import formatDecimal from \"./formatDecimal\";\n\nexport var prefixExponent;\n\nexport default function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1],\n      i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,\n      n = coefficient.length;\n  return i === n ? coefficient\n      : i > n ? coefficient + new Array(i - n + 1).join(\"0\")\n      : i > 0 ? coefficient.slice(0, i) + \".\" + coefficient.slice(i)\n      : \"0.\" + new Array(1 - i).join(\"0\") + formatDecimal(x, Math.max(0, p + i - 1))[0]; // less than 1y!\n}\n","import formatLocale from \"./locale\";\n\nvar locale;\nexport var format;\nexport var formatPrefix;\n\ndefaultLocale({\n  decimal: \".\",\n  thousands: \",\",\n  grouping: [3],\n  currency: [\"$\", \"\"]\n});\n\nexport default function defaultLocale(definition) {\n  locale = formatLocale(definition);\n  format = locale.format;\n  formatPrefix = locale.formatPrefix;\n  return locale;\n}\n","import formatDecimal from \"./formatDecimal\";\n\nexport default function(x, p) {\n  var d = formatDecimal(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1];\n  return exponent < 0 ? \"0.\" + new Array(-exponent).join(\"0\") + coefficient\n      : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + \".\" + coefficient.slice(exponent + 1)\n      : coefficient + new Array(exponent - coefficient.length + 2).join(\"0\");\n}\n","import formatPrefixAuto from \"./formatPrefixAuto\";\nimport formatRounded from \"./formatRounded\";\n\nexport default {\n  \"%\": function(x, p) { return (x * 100).toFixed(p); },\n  \"b\": function(x) { return Math.round(x).toString(2); },\n  \"c\": function(x) { return x + \"\"; },\n  \"d\": function(x) { return Math.round(x).toString(10); },\n  \"e\": function(x, p) { return x.toExponential(p); },\n  \"f\": function(x, p) { return x.toFixed(p); },\n  \"g\": function(x, p) { return x.toPrecision(p); },\n  \"o\": function(x) { return Math.round(x).toString(8); },\n  \"p\": function(x, p) { return formatRounded(x * 100, p); },\n  \"r\": formatRounded,\n  \"s\": formatPrefixAuto,\n  \"X\": function(x) { return Math.round(x).toString(16).toUpperCase(); },\n  \"x\": function(x) { return Math.round(x).toString(16); }\n};\n","export default function(x) {\n  return x;\n}\n","import exponent from \"./exponent\";\nimport formatGroup from \"./formatGroup\";\nimport formatNumerals from \"./formatNumerals\";\nimport formatSpecifier from \"./formatSpecifier\";\nimport formatTrim from \"./formatTrim\";\nimport formatTypes from \"./formatTypes\";\nimport {prefixExponent} from \"./formatPrefixAuto\";\nimport identity from \"./identity\";\n\nvar prefixes = [\"y\",\"z\",\"a\",\"f\",\"p\",\"n\",\"µ\",\"m\",\"\",\"k\",\"M\",\"G\",\"T\",\"P\",\"E\",\"Z\",\"Y\"];\n\nexport default function(locale) {\n  var group = locale.grouping && locale.thousands ? formatGroup(locale.grouping, locale.thousands) : identity,\n      currency = locale.currency,\n      decimal = locale.decimal,\n      numerals = locale.numerals ? formatNumerals(locale.numerals) : identity,\n      percent = locale.percent || \"%\";\n\n  function newFormat(specifier) {\n    specifier = formatSpecifier(specifier);\n\n    var fill = specifier.fill,\n        align = specifier.align,\n        sign = specifier.sign,\n        symbol = specifier.symbol,\n        zero = specifier.zero,\n        width = specifier.width,\n        comma = specifier.comma,\n        precision = specifier.precision,\n        trim = specifier.trim,\n        type = specifier.type;\n\n    // The \"n\" type is an alias for \",g\".\n    if (type === \"n\") comma = true, type = \"g\";\n\n    // The \"\" type, and any invalid type, is an alias for \".12~g\".\n    else if (!formatTypes[type]) precision == null && (precision = 12), trim = true, type = \"g\";\n\n    // If zero fill is specified, padding goes after sign and before digits.\n    if (zero || (fill === \"0\" && align === \"=\")) zero = true, fill = \"0\", align = \"=\";\n\n    // Compute the prefix and suffix.\n    // For SI-prefix, the suffix is lazily computed.\n    var prefix = symbol === \"$\" ? currency[0] : symbol === \"#\" && /[boxX]/.test(type) ? \"0\" + type.toLowerCase() : \"\",\n        suffix = symbol === \"$\" ? currency[1] : /[%p]/.test(type) ? percent : \"\";\n\n    // What format function should we use?\n    // Is this an integer type?\n    // Can this type generate exponential notation?\n    var formatType = formatTypes[type],\n        maybeSuffix = /[defgprs%]/.test(type);\n\n    // Set the default precision if not specified,\n    // or clamp the specified precision to the supported range.\n    // For significant precision, it must be in [1, 21].\n    // For fixed precision, it must be in [0, 20].\n    precision = precision == null ? 6\n        : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision))\n        : Math.max(0, Math.min(20, precision));\n\n    function format(value) {\n      var valuePrefix = prefix,\n          valueSuffix = suffix,\n          i, n, c;\n\n      if (type === \"c\") {\n        valueSuffix = formatType(value) + valueSuffix;\n        value = \"\";\n      } else {\n        value = +value;\n\n        // Perform the initial formatting.\n        var valueNegative = value < 0;\n        value = formatType(Math.abs(value), precision);\n\n        // Trim insignificant zeros.\n        if (trim) value = formatTrim(value);\n\n        // If a negative value rounds to zero during formatting, treat as positive.\n        if (valueNegative && +value === 0) valueNegative = false;\n\n        // Compute the prefix and suffix.\n        valuePrefix = (valueNegative ? (sign === \"(\" ? sign : \"-\") : sign === \"-\" || sign === \"(\" ? \"\" : sign) + valuePrefix;\n        valueSuffix = (type === \"s\" ? prefixes[8 + prefixExponent / 3] : \"\") + valueSuffix + (valueNegative && sign === \"(\" ? \")\" : \"\");\n\n        // Break the formatted value into the integer “value” part that can be\n        // grouped, and fractional or exponential “suffix” part that is not.\n        if (maybeSuffix) {\n          i = -1, n = value.length;\n          while (++i < n) {\n            if (c = value.charCodeAt(i), 48 > c || c > 57) {\n              valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;\n              value = value.slice(0, i);\n              break;\n            }\n          }\n        }\n      }\n\n      // If the fill character is not \"0\", grouping is applied before padding.\n      if (comma && !zero) value = group(value, Infinity);\n\n      // Compute the padding.\n      var length = valuePrefix.length + value.length + valueSuffix.length,\n          padding = length < width ? new Array(width - length + 1).join(fill) : \"\";\n\n      // If the fill character is \"0\", grouping is applied after padding.\n      if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = \"\";\n\n      // Reconstruct the final output based on the desired alignment.\n      switch (align) {\n        case \"<\": value = valuePrefix + value + valueSuffix + padding; break;\n        case \"=\": value = valuePrefix + padding + value + valueSuffix; break;\n        case \"^\": value = padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length); break;\n        default: value = padding + valuePrefix + value + valueSuffix; break;\n      }\n\n      return numerals(value);\n    }\n\n    format.toString = function() {\n      return specifier + \"\";\n    };\n\n    return format;\n  }\n\n  function formatPrefix(specifier, value) {\n    var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = \"f\", specifier)),\n        e = Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3,\n        k = Math.pow(10, -e),\n        prefix = prefixes[8 + e / 3];\n    return function(value) {\n      return f(k * value) + prefix;\n    };\n  }\n\n  return {\n    format: newFormat,\n    formatPrefix: formatPrefix\n  };\n}\n","export default function(grouping, thousands) {\n  return function(value, width) {\n    var i = value.length,\n        t = [],\n        j = 0,\n        g = grouping[0],\n        length = 0;\n\n    while (i > 0 && g > 0) {\n      if (length + g + 1 > width) g = Math.max(1, width - length);\n      t.push(value.substring(i -= g, i + g));\n      if ((length += g + 1) > width) break;\n      g = grouping[j = (j + 1) % grouping.length];\n    }\n\n    return t.reverse().join(thousands);\n  };\n}\n","export default function(numerals) {\n  return function(value) {\n    return value.replace(/[0-9]/g, function(i) {\n      return numerals[+i];\n    });\n  };\n}\n","import exponent from \"./exponent\";\n\nexport default function(step) {\n  return Math.max(0, -exponent(Math.abs(step)));\n}\n","import exponent from \"./exponent\";\n\nexport default function(step, value) {\n  return Math.max(0, Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3 - exponent(Math.abs(step)));\n}\n","import exponent from \"./exponent\";\n\nexport default function(step, max) {\n  step = Math.abs(step), max = Math.abs(max) - step;\n  return Math.max(0, exponent(max) - exponent(step)) + 1;\n}\n","// Adds floating point numbers with twice the normal precision.\n// Reference: J. R. Shewchuk, Adaptive Precision Floating-Point Arithmetic and\n// Fast Robust Geometric Predicates, Discrete & Computational Geometry 18(3)\n// 305–363 (1997).\n// Code adapted from GeographicLib by Charles F. F. Karney,\n// http://geographiclib.sourceforge.net/\n\nexport default function() {\n  return new Adder;\n}\n\nfunction Adder() {\n  this.reset();\n}\n\nAdder.prototype = {\n  constructor: Adder,\n  reset: function() {\n    this.s = // rounded value\n    this.t = 0; // exact error\n  },\n  add: function(y) {\n    add(temp, y, this.t);\n    add(this, temp.s, this.s);\n    if (this.s) this.t += temp.t;\n    else this.s = temp.t;\n  },\n  valueOf: function() {\n    return this.s;\n  }\n};\n\nvar temp = new Adder;\n\nfunction add(adder, a, b) {\n  var x = adder.s = a + b,\n      bv = x - a,\n      av = x - bv;\n  adder.t = (a - av) + (b - bv);\n}\n","export var epsilon = 1e-6;\nexport var epsilon2 = 1e-12;\nexport var pi = Math.PI;\nexport var halfPi = pi / 2;\nexport var quarterPi = pi / 4;\nexport var tau = pi * 2;\n\nexport var degrees = 180 / pi;\nexport var radians = pi / 180;\n\nexport var abs = Math.abs;\nexport var atan = Math.atan;\nexport var atan2 = Math.atan2;\nexport var cos = Math.cos;\nexport var ceil = Math.ceil;\nexport var exp = Math.exp;\nexport var floor = Math.floor;\nexport var log = Math.log;\nexport var pow = Math.pow;\nexport var sin = Math.sin;\nexport var sign = Math.sign || function(x) { return x > 0 ? 1 : x < 0 ? -1 : 0; };\nexport var sqrt = Math.sqrt;\nexport var tan = Math.tan;\n\nexport function acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);\n}\n\nexport function asin(x) {\n  return x > 1 ? halfPi : x < -1 ? -halfPi : Math.asin(x);\n}\n\nexport function haversin(x) {\n  return (x = sin(x / 2)) * x;\n}\n","export default function noop() {}\n","function streamGeometry(geometry, stream) {\n  if (geometry && streamGeometryType.hasOwnProperty(geometry.type)) {\n    streamGeometryType[geometry.type](geometry, stream);\n  }\n}\n\nvar streamObjectType = {\n  Feature: function(object, stream) {\n    streamGeometry(object.geometry, stream);\n  },\n  FeatureCollection: function(object, stream) {\n    var features = object.features, i = -1, n = features.length;\n    while (++i < n) streamGeometry(features[i].geometry, stream);\n  }\n};\n\nvar streamGeometryType = {\n  Sphere: function(object, stream) {\n    stream.sphere();\n  },\n  Point: function(object, stream) {\n    object = object.coordinates;\n    stream.point(object[0], object[1], object[2]);\n  },\n  MultiPoint: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) object = coordinates[i], stream.point(object[0], object[1], object[2]);\n  },\n  LineString: function(object, stream) {\n    streamLine(object.coordinates, stream, 0);\n  },\n  MultiLineString: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamLine(coordinates[i], stream, 0);\n  },\n  Polygon: function(object, stream) {\n    streamPolygon(object.coordinates, stream);\n  },\n  MultiPolygon: function(object, stream) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) streamPolygon(coordinates[i], stream);\n  },\n  GeometryCollection: function(object, stream) {\n    var geometries = object.geometries, i = -1, n = geometries.length;\n    while (++i < n) streamGeometry(geometries[i], stream);\n  }\n};\n\nfunction streamLine(coordinates, stream, closed) {\n  var i = -1, n = coordinates.length - closed, coordinate;\n  stream.lineStart();\n  while (++i < n) coordinate = coordinates[i], stream.point(coordinate[0], coordinate[1], coordinate[2]);\n  stream.lineEnd();\n}\n\nfunction streamPolygon(coordinates, stream) {\n  var i = -1, n = coordinates.length;\n  stream.polygonStart();\n  while (++i < n) streamLine(coordinates[i], stream, 1);\n  stream.polygonEnd();\n}\n\nexport default function(object, stream) {\n  if (object && streamObjectType.hasOwnProperty(object.type)) {\n    streamObjectType[object.type](object, stream);\n  } else {\n    streamGeometry(object, stream);\n  }\n}\n","import adder from \"./adder\";\nimport {atan2, cos, quarterPi, radians, sin, tau} from \"./math\";\nimport noop from \"./noop\";\nimport stream from \"./stream\";\n\nexport var areaRingSum = adder();\n\nvar areaSum = adder(),\n    lambda00,\n    phi00,\n    lambda0,\n    cosPhi0,\n    sinPhi0;\n\nexport var areaStream = {\n  point: noop,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: function() {\n    areaRingSum.reset();\n    areaStream.lineStart = areaRingStart;\n    areaStream.lineEnd = areaRingEnd;\n  },\n  polygonEnd: function() {\n    var areaRing = +areaRingSum;\n    areaSum.add(areaRing < 0 ? tau + areaRing : areaRing);\n    this.lineStart = this.lineEnd = this.point = noop;\n  },\n  sphere: function() {\n    areaSum.add(tau);\n  }\n};\n\nfunction areaRingStart() {\n  areaStream.point = areaPointFirst;\n}\n\nfunction areaRingEnd() {\n  areaPoint(lambda00, phi00);\n}\n\nfunction areaPointFirst(lambda, phi) {\n  areaStream.point = areaPoint;\n  lambda00 = lambda, phi00 = phi;\n  lambda *= radians, phi *= radians;\n  lambda0 = lambda, cosPhi0 = cos(phi = phi / 2 + quarterPi), sinPhi0 = sin(phi);\n}\n\nfunction areaPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  phi = phi / 2 + quarterPi; // half the angular distance from south pole\n\n  // Spherical excess E for a spherical triangle with vertices: south pole,\n  // previous point, current point.  Uses a formula derived from Cagnoli’s\n  // theorem.  See Todhunter, Spherical Trig. (1871), Sec. 103, Eq. (2).\n  var dLambda = lambda - lambda0,\n      sdLambda = dLambda >= 0 ? 1 : -1,\n      adLambda = sdLambda * dLambda,\n      cosPhi = cos(phi),\n      sinPhi = sin(phi),\n      k = sinPhi0 * sinPhi,\n      u = cosPhi0 * cosPhi + k * cos(adLambda),\n      v = k * sdLambda * sin(adLambda);\n  areaRingSum.add(atan2(v, u));\n\n  // Advance the previous points.\n  lambda0 = lambda, cosPhi0 = cosPhi, sinPhi0 = sinPhi;\n}\n\nexport default function(object) {\n  areaSum.reset();\n  stream(object, areaStream);\n  return areaSum * 2;\n}\n","import {asin, atan2, cos, sin, sqrt} from \"./math\";\n\nexport function spherical(cartesian) {\n  return [atan2(cartesian[1], cartesian[0]), asin(cartesian[2])];\n}\n\nexport function cartesian(spherical) {\n  var lambda = spherical[0], phi = spherical[1], cosPhi = cos(phi);\n  return [cosPhi * cos(lambda), cosPhi * sin(lambda), sin(phi)];\n}\n\nexport function cartesianDot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n\nexport function cartesianCross(a, b) {\n  return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];\n}\n\n// TODO return a\nexport function cartesianAddInPlace(a, b) {\n  a[0] += b[0], a[1] += b[1], a[2] += b[2];\n}\n\nexport function cartesianScale(vector, k) {\n  return [vector[0] * k, vector[1] * k, vector[2] * k];\n}\n\n// TODO return d\nexport function cartesianNormalizeInPlace(d) {\n  var l = sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n  d[0] /= l, d[1] /= l, d[2] /= l;\n}\n","import adder from \"./adder\";\nimport {areaStream, areaRingSum} from \"./area\";\nimport {cartesian, cartesianCross, cartesianNormalizeInPlace, spherical} from \"./cartesian\";\nimport {abs, degrees, epsilon, radians} from \"./math\";\nimport stream from \"./stream\";\n\nvar lambda0, phi0, lambda1, phi1, // bounds\n    lambda2, // previous lambda-coordinate\n    lambda00, phi00, // first point\n    p0, // previous 3D point\n    deltaSum = adder(),\n    ranges,\n    range;\n\nvar boundsStream = {\n  point: boundsPoint,\n  lineStart: boundsLineStart,\n  lineEnd: boundsLineEnd,\n  polygonStart: function() {\n    boundsStream.point = boundsRingPoint;\n    boundsStream.lineStart = boundsRingStart;\n    boundsStream.lineEnd = boundsRingEnd;\n    deltaSum.reset();\n    areaStream.polygonStart();\n  },\n  polygonEnd: function() {\n    areaStream.polygonEnd();\n    boundsStream.point = boundsPoint;\n    boundsStream.lineStart = boundsLineStart;\n    boundsStream.lineEnd = boundsLineEnd;\n    if (areaRingSum < 0) lambda0 = -(lambda1 = 180), phi0 = -(phi1 = 90);\n    else if (deltaSum > epsilon) phi1 = 90;\n    else if (deltaSum < -epsilon) phi0 = -90;\n    range[0] = lambda0, range[1] = lambda1;\n  }\n};\n\nfunction boundsPoint(lambda, phi) {\n  ranges.push(range = [lambda0 = lambda, lambda1 = lambda]);\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n}\n\nfunction linePoint(lambda, phi) {\n  var p = cartesian([lambda * radians, phi * radians]);\n  if (p0) {\n    var normal = cartesianCross(p0, p),\n        equatorial = [normal[1], -normal[0], 0],\n        inflection = cartesianCross(equatorial, normal);\n    cartesianNormalizeInPlace(inflection);\n    inflection = spherical(inflection);\n    var delta = lambda - lambda2,\n        sign = delta > 0 ? 1 : -1,\n        lambdai = inflection[0] * degrees * sign,\n        phii,\n        antimeridian = abs(delta) > 180;\n    if (antimeridian ^ (sign * lambda2 < lambdai && lambdai < sign * lambda)) {\n      phii = inflection[1] * degrees;\n      if (phii > phi1) phi1 = phii;\n    } else if (lambdai = (lambdai + 360) % 360 - 180, antimeridian ^ (sign * lambda2 < lambdai && lambdai < sign * lambda)) {\n      phii = -inflection[1] * degrees;\n      if (phii < phi0) phi0 = phii;\n    } else {\n      if (phi < phi0) phi0 = phi;\n      if (phi > phi1) phi1 = phi;\n    }\n    if (antimeridian) {\n      if (lambda < lambda2) {\n        if (angle(lambda0, lambda) > angle(lambda0, lambda1)) lambda1 = lambda;\n      } else {\n        if (angle(lambda, lambda1) > angle(lambda0, lambda1)) lambda0 = lambda;\n      }\n    } else {\n      if (lambda1 >= lambda0) {\n        if (lambda < lambda0) lambda0 = lambda;\n        if (lambda > lambda1) lambda1 = lambda;\n      } else {\n        if (lambda > lambda2) {\n          if (angle(lambda0, lambda) > angle(lambda0, lambda1)) lambda1 = lambda;\n        } else {\n          if (angle(lambda, lambda1) > angle(lambda0, lambda1)) lambda0 = lambda;\n        }\n      }\n    }\n  } else {\n    ranges.push(range = [lambda0 = lambda, lambda1 = lambda]);\n  }\n  if (phi < phi0) phi0 = phi;\n  if (phi > phi1) phi1 = phi;\n  p0 = p, lambda2 = lambda;\n}\n\nfunction boundsLineStart() {\n  boundsStream.point = linePoint;\n}\n\nfunction boundsLineEnd() {\n  range[0] = lambda0, range[1] = lambda1;\n  boundsStream.point = boundsPoint;\n  p0 = null;\n}\n\nfunction boundsRingPoint(lambda, phi) {\n  if (p0) {\n    var delta = lambda - lambda2;\n    deltaSum.add(abs(delta) > 180 ? delta + (delta > 0 ? 360 : -360) : delta);\n  } else {\n    lambda00 = lambda, phi00 = phi;\n  }\n  areaStream.point(lambda, phi);\n  linePoint(lambda, phi);\n}\n\nfunction boundsRingStart() {\n  areaStream.lineStart();\n}\n\nfunction boundsRingEnd() {\n  boundsRingPoint(lambda00, phi00);\n  areaStream.lineEnd();\n  if (abs(deltaSum) > epsilon) lambda0 = -(lambda1 = 180);\n  range[0] = lambda0, range[1] = lambda1;\n  p0 = null;\n}\n\n// Finds the left-right distance between two longitudes.\n// This is almost the same as (lambda1 - lambda0 + 360°) % 360°, except that we want\n// the distance between ±180° to be 360°.\nfunction angle(lambda0, lambda1) {\n  return (lambda1 -= lambda0) < 0 ? lambda1 + 360 : lambda1;\n}\n\nfunction rangeCompare(a, b) {\n  return a[0] - b[0];\n}\n\nfunction rangeContains(range, x) {\n  return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n}\n\nexport default function(feature) {\n  var i, n, a, b, merged, deltaMax, delta;\n\n  phi1 = lambda1 = -(lambda0 = phi0 = Infinity);\n  ranges = [];\n  stream(feature, boundsStream);\n\n  // First, sort ranges by their minimum longitudes.\n  if (n = ranges.length) {\n    ranges.sort(rangeCompare);\n\n    // Then, merge any ranges that overlap.\n    for (i = 1, a = ranges[0], merged = [a]; i < n; ++i) {\n      b = ranges[i];\n      if (rangeContains(a, b[0]) || rangeContains(a, b[1])) {\n        if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n        if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n      } else {\n        merged.push(a = b);\n      }\n    }\n\n    // Finally, find the largest gap between the merged ranges.\n    // The final bounding box will be the inverse of this gap.\n    for (deltaMax = -Infinity, n = merged.length - 1, i = 0, a = merged[n]; i <= n; a = b, ++i) {\n      b = merged[i];\n      if ((delta = angle(a[1], b[0])) > deltaMax) deltaMax = delta, lambda0 = b[0], lambda1 = a[1];\n    }\n  }\n\n  ranges = range = null;\n\n  return lambda0 === Infinity || phi0 === Infinity\n      ? [[NaN, NaN], [NaN, NaN]]\n      : [[lambda0, phi0], [lambda1, phi1]];\n}\n","import {asin, atan2, cos, degrees, epsilon, epsilon2, radians, sin, sqrt} from \"./math\";\nimport noop from \"./noop\";\nimport stream from \"./stream\";\n\nvar W0, W1,\n    X0, Y0, Z0,\n    X1, Y1, Z1,\n    X2, Y2, Z2,\n    lambda00, phi00, // first point\n    x0, y0, z0; // previous point\n\nvar centroidStream = {\n  sphere: noop,\n  point: centroidPoint,\n  lineStart: centroidLineStart,\n  lineEnd: centroidLineEnd,\n  polygonStart: function() {\n    centroidStream.lineStart = centroidRingStart;\n    centroidStream.lineEnd = centroidRingEnd;\n  },\n  polygonEnd: function() {\n    centroidStream.lineStart = centroidLineStart;\n    centroidStream.lineEnd = centroidLineEnd;\n  }\n};\n\n// Arithmetic mean of Cartesian vectors.\nfunction centroidPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi);\n  centroidPointCartesian(cosPhi * cos(lambda), cosPhi * sin(lambda), sin(phi));\n}\n\nfunction centroidPointCartesian(x, y, z) {\n  ++W0;\n  X0 += (x - X0) / W0;\n  Y0 += (y - Y0) / W0;\n  Z0 += (z - Z0) / W0;\n}\n\nfunction centroidLineStart() {\n  centroidStream.point = centroidLinePointFirst;\n}\n\nfunction centroidLinePointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi);\n  x0 = cosPhi * cos(lambda);\n  y0 = cosPhi * sin(lambda);\n  z0 = sin(phi);\n  centroidStream.point = centroidLinePoint;\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLinePoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi),\n      x = cosPhi * cos(lambda),\n      y = cosPhi * sin(lambda),\n      z = sin(phi),\n      w = atan2(sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidLineEnd() {\n  centroidStream.point = centroidPoint;\n}\n\n// See J. E. Brock, The Inertia Tensor for a Spherical Triangle,\n// J. Applied Mechanics 42, 239 (1975).\nfunction centroidRingStart() {\n  centroidStream.point = centroidRingPointFirst;\n}\n\nfunction centroidRingEnd() {\n  centroidRingPoint(lambda00, phi00);\n  centroidStream.point = centroidPoint;\n}\n\nfunction centroidRingPointFirst(lambda, phi) {\n  lambda00 = lambda, phi00 = phi;\n  lambda *= radians, phi *= radians;\n  centroidStream.point = centroidRingPoint;\n  var cosPhi = cos(phi);\n  x0 = cosPhi * cos(lambda);\n  y0 = cosPhi * sin(lambda);\n  z0 = sin(phi);\n  centroidPointCartesian(x0, y0, z0);\n}\n\nfunction centroidRingPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var cosPhi = cos(phi),\n      x = cosPhi * cos(lambda),\n      y = cosPhi * sin(lambda),\n      z = sin(phi),\n      cx = y0 * z - z0 * y,\n      cy = z0 * x - x0 * z,\n      cz = x0 * y - y0 * x,\n      m = sqrt(cx * cx + cy * cy + cz * cz),\n      w = asin(m), // line weight = angle\n      v = m && -w / m; // area weight multiplier\n  X2 += v * cx;\n  Y2 += v * cy;\n  Z2 += v * cz;\n  W1 += w;\n  X1 += w * (x0 + (x0 = x));\n  Y1 += w * (y0 + (y0 = y));\n  Z1 += w * (z0 + (z0 = z));\n  centroidPointCartesian(x0, y0, z0);\n}\n\nexport default function(object) {\n  W0 = W1 =\n  X0 = Y0 = Z0 =\n  X1 = Y1 = Z1 =\n  X2 = Y2 = Z2 = 0;\n  stream(object, centroidStream);\n\n  var x = X2,\n      y = Y2,\n      z = Z2,\n      m = x * x + y * y + z * z;\n\n  // If the area-weighted ccentroid is undefined, fall back to length-weighted ccentroid.\n  if (m < epsilon2) {\n    x = X1, y = Y1, z = Z1;\n    // If the feature has zero length, fall back to arithmetic mean of point vectors.\n    if (W1 < epsilon) x = X0, y = Y0, z = Z0;\n    m = x * x + y * y + z * z;\n    // If the feature still has an undefined ccentroid, then return.\n    if (m < epsilon2) return [NaN, NaN];\n  }\n\n  return [atan2(y, x) * degrees, asin(z / sqrt(m)) * degrees];\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function(a, b) {\n\n  function compose(x, y) {\n    return x = a(x, y), b(x[0], x[1]);\n  }\n\n  if (a.invert && b.invert) compose.invert = function(x, y) {\n    return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n  };\n\n  return compose;\n}\n","import compose from \"./compose\";\nimport {asin, atan2, cos, degrees, pi, radians, sin, tau} from \"./math\";\n\nfunction rotationIdentity(lambda, phi) {\n  return [lambda > pi ? lambda - tau : lambda < -pi ? lambda + tau : lambda, phi];\n}\n\nrotationIdentity.invert = rotationIdentity;\n\nexport function rotateRadians(deltaLambda, deltaPhi, deltaGamma) {\n  return (deltaLambda %= tau) ? (deltaPhi || deltaGamma ? compose(rotationLambda(deltaLambda), rotationPhiGamma(deltaPhi, deltaGamma))\n    : rotationLambda(deltaLambda))\n    : (deltaPhi || deltaGamma ? rotationPhiGamma(deltaPhi, deltaGamma)\n    : rotationIdentity);\n}\n\nfunction forwardRotationLambda(deltaLambda) {\n  return function(lambda, phi) {\n    return lambda += deltaLambda, [lambda > pi ? lambda - tau : lambda < -pi ? lambda + tau : lambda, phi];\n  };\n}\n\nfunction rotationLambda(deltaLambda) {\n  var rotation = forwardRotationLambda(deltaLambda);\n  rotation.invert = forwardRotationLambda(-deltaLambda);\n  return rotation;\n}\n\nfunction rotationPhiGamma(deltaPhi, deltaGamma) {\n  var cosDeltaPhi = cos(deltaPhi),\n      sinDeltaPhi = sin(deltaPhi),\n      cosDeltaGamma = cos(deltaGamma),\n      sinDeltaGamma = sin(deltaGamma);\n\n  function rotation(lambda, phi) {\n    var cosPhi = cos(phi),\n        x = cos(lambda) * cosPhi,\n        y = sin(lambda) * cosPhi,\n        z = sin(phi),\n        k = z * cosDeltaPhi + x * sinDeltaPhi;\n    return [\n      atan2(y * cosDeltaGamma - k * sinDeltaGamma, x * cosDeltaPhi - z * sinDeltaPhi),\n      asin(k * cosDeltaGamma + y * sinDeltaGamma)\n    ];\n  }\n\n  rotation.invert = function(lambda, phi) {\n    var cosPhi = cos(phi),\n        x = cos(lambda) * cosPhi,\n        y = sin(lambda) * cosPhi,\n        z = sin(phi),\n        k = z * cosDeltaGamma - y * sinDeltaGamma;\n    return [\n      atan2(y * cosDeltaGamma + z * sinDeltaGamma, x * cosDeltaPhi + k * sinDeltaPhi),\n      asin(k * cosDeltaPhi - x * sinDeltaPhi)\n    ];\n  };\n\n  return rotation;\n}\n\nexport default function(rotate) {\n  rotate = rotateRadians(rotate[0] * radians, rotate[1] * radians, rotate.length > 2 ? rotate[2] * radians : 0);\n\n  function forward(coordinates) {\n    coordinates = rotate(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees, coordinates[1] *= degrees, coordinates;\n  }\n\n  forward.invert = function(coordinates) {\n    coordinates = rotate.invert(coordinates[0] * radians, coordinates[1] * radians);\n    return coordinates[0] *= degrees, coordinates[1] *= degrees, coordinates;\n  };\n\n  return forward;\n}\n","import {cartesian, cartesianNormalizeInPlace, spherical} from \"./cartesian\";\nimport constant from \"./constant\";\nimport {acos, cos, degrees, epsilon, radians, sin, tau} from \"./math\";\nimport {rotateRadians} from \"./rotation\";\n\n// Generates a circle centered at [0°, 0°], with a given radius and precision.\nexport function circleStream(stream, radius, delta, direction, t0, t1) {\n  if (!delta) return;\n  var cosRadius = cos(radius),\n      sinRadius = sin(radius),\n      step = direction * delta;\n  if (t0 == null) {\n    t0 = radius + direction * tau;\n    t1 = radius - step / 2;\n  } else {\n    t0 = circleRadius(cosRadius, t0);\n    t1 = circleRadius(cosRadius, t1);\n    if (direction > 0 ? t0 < t1 : t0 > t1) t0 += direction * tau;\n  }\n  for (var point, t = t0; direction > 0 ? t > t1 : t < t1; t -= step) {\n    point = spherical([cosRadius, -sinRadius * cos(t), -sinRadius * sin(t)]);\n    stream.point(point[0], point[1]);\n  }\n}\n\n// Returns the signed angle of a cartesian point relative to [cosRadius, 0, 0].\nfunction circleRadius(cosRadius, point) {\n  point = cartesian(point), point[0] -= cosRadius;\n  cartesianNormalizeInPlace(point);\n  var radius = acos(-point[1]);\n  return ((-point[2] < 0 ? -radius : radius) + tau - epsilon) % tau;\n}\n\nexport default function() {\n  var center = constant([0, 0]),\n      radius = constant(90),\n      precision = constant(6),\n      ring,\n      rotate,\n      stream = {point: point};\n\n  function point(x, y) {\n    ring.push(x = rotate(x, y));\n    x[0] *= degrees, x[1] *= degrees;\n  }\n\n  function circle() {\n    var c = center.apply(this, arguments),\n        r = radius.apply(this, arguments) * radians,\n        p = precision.apply(this, arguments) * radians;\n    ring = [];\n    rotate = rotateRadians(-c[0] * radians, -c[1] * radians, 0).invert;\n    circleStream(stream, r, p, 1);\n    c = {type: \"Polygon\", coordinates: [ring]};\n    ring = rotate = null;\n    return c;\n  }\n\n  circle.center = function(_) {\n    return arguments.length ? (center = typeof _ === \"function\" ? _ : constant([+_[0], +_[1]]), circle) : center;\n  };\n\n  circle.radius = function(_) {\n    return arguments.length ? (radius = typeof _ === \"function\" ? _ : constant(+_), circle) : radius;\n  };\n\n  circle.precision = function(_) {\n    return arguments.length ? (precision = typeof _ === \"function\" ? _ : constant(+_), circle) : precision;\n  };\n\n  return circle;\n}\n","import noop from \"../noop\";\n\nexport default function() {\n  var lines = [],\n      line;\n  return {\n    point: function(x, y) {\n      line.push([x, y]);\n    },\n    lineStart: function() {\n      lines.push(line = []);\n    },\n    lineEnd: noop,\n    rejoin: function() {\n      if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n    },\n    result: function() {\n      var result = lines;\n      lines = [];\n      line = null;\n      return result;\n    }\n  };\n}\n","import {abs, epsilon} from \"./math\";\n\nexport default function(a, b) {\n  return abs(a[0] - b[0]) < epsilon && abs(a[1] - b[1]) < epsilon;\n}\n","import pointEqual from \"../pointEqual\";\n\nfunction Intersection(point, points, other, entry) {\n  this.x = point;\n  this.z = points;\n  this.o = other; // another intersection\n  this.e = entry; // is an entry?\n  this.v = false; // visited\n  this.n = this.p = null; // next & previous\n}\n\n// A generalized polygon clipping algorithm: given a polygon that has been cut\n// into its visible line segments, and rejoins the segments by interpolating\n// along the clip edge.\nexport default function(segments, compareIntersection, startInside, interpolate, stream) {\n  var subject = [],\n      clip = [],\n      i,\n      n;\n\n  segments.forEach(function(segment) {\n    if ((n = segment.length - 1) <= 0) return;\n    var n, p0 = segment[0], p1 = segment[n], x;\n\n    // If the first and last points of a segment are coincident, then treat as a\n    // closed ring. TODO if all rings are closed, then the winding order of the\n    // exterior ring should be checked.\n    if (pointEqual(p0, p1)) {\n      stream.lineStart();\n      for (i = 0; i < n; ++i) stream.point((p0 = segment[i])[0], p0[1]);\n      stream.lineEnd();\n      return;\n    }\n\n    subject.push(x = new Intersection(p0, segment, null, true));\n    clip.push(x.o = new Intersection(p0, null, x, false));\n    subject.push(x = new Intersection(p1, segment, null, false));\n    clip.push(x.o = new Intersection(p1, null, x, true));\n  });\n\n  if (!subject.length) return;\n\n  clip.sort(compareIntersection);\n  link(subject);\n  link(clip);\n\n  for (i = 0, n = clip.length; i < n; ++i) {\n    clip[i].e = startInside = !startInside;\n  }\n\n  var start = subject[0],\n      points,\n      point;\n\n  while (1) {\n    // Find first unvisited intersection.\n    var current = start,\n        isSubject = true;\n    while (current.v) if ((current = current.n) === start) return;\n    points = current.z;\n    stream.lineStart();\n    do {\n      current.v = current.o.v = true;\n      if (current.e) {\n        if (isSubject) {\n          for (i = 0, n = points.length; i < n; ++i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.n.x, 1, stream);\n        }\n        current = current.n;\n      } else {\n        if (isSubject) {\n          points = current.p.z;\n          for (i = points.length - 1; i >= 0; --i) stream.point((point = points[i])[0], point[1]);\n        } else {\n          interpolate(current.x, current.p.x, -1, stream);\n        }\n        current = current.p;\n      }\n      current = current.o;\n      points = current.z;\n      isSubject = !isSubject;\n    } while (!current.v);\n    stream.lineEnd();\n  }\n}\n\nfunction link(array) {\n  if (!(n = array.length)) return;\n  var n,\n      i = 0,\n      a = array[0],\n      b;\n  while (++i < n) {\n    a.n = b = array[i];\n    b.p = a;\n    a = b;\n  }\n  a.n = b = array[0];\n  b.p = a;\n}\n","import adder from \"./adder\";\nimport {cartesian, cartesianCross, cartesianNormalizeInPlace} from \"./cartesian\";\nimport {asin, atan2, cos, epsilon, halfPi, pi, quarterPi, sin, tau} from \"./math\";\n\nvar sum = adder();\n\nexport default function(polygon, point) {\n  var lambda = point[0],\n      phi = point[1],\n      sinPhi = sin(phi),\n      normal = [sin(lambda), -cos(lambda), 0],\n      angle = 0,\n      winding = 0;\n\n  sum.reset();\n\n  if (sinPhi === 1) phi = halfPi + epsilon;\n  else if (sinPhi === -1) phi = -halfPi - epsilon;\n\n  for (var i = 0, n = polygon.length; i < n; ++i) {\n    if (!(m = (ring = polygon[i]).length)) continue;\n    var ring,\n        m,\n        point0 = ring[m - 1],\n        lambda0 = point0[0],\n        phi0 = point0[1] / 2 + quarterPi,\n        sinPhi0 = sin(phi0),\n        cosPhi0 = cos(phi0);\n\n    for (var j = 0; j < m; ++j, lambda0 = lambda1, sinPhi0 = sinPhi1, cosPhi0 = cosPhi1, point0 = point1) {\n      var point1 = ring[j],\n          lambda1 = point1[0],\n          phi1 = point1[1] / 2 + quarterPi,\n          sinPhi1 = sin(phi1),\n          cosPhi1 = cos(phi1),\n          delta = lambda1 - lambda0,\n          sign = delta >= 0 ? 1 : -1,\n          absDelta = sign * delta,\n          antimeridian = absDelta > pi,\n          k = sinPhi0 * sinPhi1;\n\n      sum.add(atan2(k * sign * sin(absDelta), cosPhi0 * cosPhi1 + k * cos(absDelta)));\n      angle += antimeridian ? delta + sign * tau : delta;\n\n      // Are the longitudes either side of the point’s meridian (lambda),\n      // and are the latitudes smaller than the parallel (phi)?\n      if (antimeridian ^ lambda0 >= lambda ^ lambda1 >= lambda) {\n        var arc = cartesianCross(cartesian(point0), cartesian(point1));\n        cartesianNormalizeInPlace(arc);\n        var intersection = cartesianCross(normal, arc);\n        cartesianNormalizeInPlace(intersection);\n        var phiArc = (antimeridian ^ delta >= 0 ? -1 : 1) * asin(intersection[2]);\n        if (phi > phiArc || phi === phiArc && (arc[0] || arc[1])) {\n          winding += antimeridian ^ delta >= 0 ? 1 : -1;\n        }\n      }\n    }\n  }\n\n  // First, determine whether the South pole is inside or outside:\n  //\n  // It is inside if:\n  // * the polygon winds around it in a clockwise direction.\n  // * the polygon does not (cumulatively) wind around it, but has a negative\n  //   (counter-clockwise) area.\n  //\n  // Second, count the (signed) number of times a segment crosses a lambda\n  // from the point to the South pole.  If it is zero, then the point is the\n  // same side as the South pole.\n\n  return (angle < -epsilon || angle < epsilon && sum < -epsilon) ^ (winding & 1);\n}\n","import clipBuffer from \"./buffer\";\nimport clipRejoin from \"./rejoin\";\nimport {epsilon, halfPi} from \"../math\";\nimport polygonContains from \"../polygonContains\";\nimport {merge} from \"d3-array\";\n\nexport default function(pointVisible, clipLine, interpolate, start) {\n  return function(sink) {\n    var line = clipLine(sink),\n        ringBuffer = clipBuffer(),\n        ringSink = clipLine(ringBuffer),\n        polygonStarted = false,\n        polygon,\n        segments,\n        ring;\n\n    var clip = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        clip.point = pointRing;\n        clip.lineStart = ringStart;\n        clip.lineEnd = ringEnd;\n        segments = [];\n        polygon = [];\n      },\n      polygonEnd: function() {\n        clip.point = point;\n        clip.lineStart = lineStart;\n        clip.lineEnd = lineEnd;\n        segments = merge(segments);\n        var startInside = polygonContains(polygon, start);\n        if (segments.length) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          clipRejoin(segments, compareIntersection, startInside, interpolate, sink);\n        } else if (startInside) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          interpolate(null, null, 1, sink);\n          sink.lineEnd();\n        }\n        if (polygonStarted) sink.polygonEnd(), polygonStarted = false;\n        segments = polygon = null;\n      },\n      sphere: function() {\n        sink.polygonStart();\n        sink.lineStart();\n        interpolate(null, null, 1, sink);\n        sink.lineEnd();\n        sink.polygonEnd();\n      }\n    };\n\n    function point(lambda, phi) {\n      if (pointVisible(lambda, phi)) sink.point(lambda, phi);\n    }\n\n    function pointLine(lambda, phi) {\n      line.point(lambda, phi);\n    }\n\n    function lineStart() {\n      clip.point = pointLine;\n      line.lineStart();\n    }\n\n    function lineEnd() {\n      clip.point = point;\n      line.lineEnd();\n    }\n\n    function pointRing(lambda, phi) {\n      ring.push([lambda, phi]);\n      ringSink.point(lambda, phi);\n    }\n\n    function ringStart() {\n      ringSink.lineStart();\n      ring = [];\n    }\n\n    function ringEnd() {\n      pointRing(ring[0][0], ring[0][1]);\n      ringSink.lineEnd();\n\n      var clean = ringSink.clean(),\n          ringSegments = ringBuffer.result(),\n          i, n = ringSegments.length, m,\n          segment,\n          point;\n\n      ring.pop();\n      polygon.push(ring);\n      ring = null;\n\n      if (!n) return;\n\n      // No intersections.\n      if (clean & 1) {\n        segment = ringSegments[0];\n        if ((m = segment.length - 1) > 0) {\n          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;\n          sink.lineStart();\n          for (i = 0; i < m; ++i) sink.point((point = segment[i])[0], point[1]);\n          sink.lineEnd();\n        }\n        return;\n      }\n\n      // Rejoin connected segments.\n      // TODO reuse ringBuffer.rejoin()?\n      if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n\n      segments.push(ringSegments.filter(validSegment));\n    }\n\n    return clip;\n  };\n}\n\nfunction validSegment(segment) {\n  return segment.length > 1;\n}\n\n// Intersections are sorted along the clip edge. For both antimeridian cutting\n// and circle clipping, the same comparison is used.\nfunction compareIntersection(a, b) {\n  return ((a = a.x)[0] < 0 ? a[1] - halfPi - epsilon : halfPi - a[1])\n       - ((b = b.x)[0] < 0 ? b[1] - halfPi - epsilon : halfPi - b[1]);\n}\n","import clip from \"./index\";\nimport {abs, atan, cos, epsilon, halfPi, pi, sin} from \"../math\";\n\nexport default clip(\n  function() { return true; },\n  clipAntimeridianLine,\n  clipAntimeridianInterpolate,\n  [-pi, -halfPi]\n);\n\n// Takes a line and cuts into visible segments. Return values: 0 - there were\n// intersections or the line was empty; 1 - no intersections; 2 - there were\n// intersections, and the first and last segments should be rejoined.\nfunction clipAntimeridianLine(stream) {\n  var lambda0 = NaN,\n      phi0 = NaN,\n      sign0 = NaN,\n      clean; // no intersections\n\n  return {\n    lineStart: function() {\n      stream.lineStart();\n      clean = 1;\n    },\n    point: function(lambda1, phi1) {\n      var sign1 = lambda1 > 0 ? pi : -pi,\n          delta = abs(lambda1 - lambda0);\n      if (abs(delta - pi) < epsilon) { // line crosses a pole\n        stream.point(lambda0, phi0 = (phi0 + phi1) / 2 > 0 ? halfPi : -halfPi);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        stream.point(lambda1, phi0);\n        clean = 0;\n      } else if (sign0 !== sign1 && delta >= pi) { // line crosses antimeridian\n        if (abs(lambda0 - sign0) < epsilon) lambda0 -= sign0 * epsilon; // handle degeneracies\n        if (abs(lambda1 - sign1) < epsilon) lambda1 -= sign1 * epsilon;\n        phi0 = clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1);\n        stream.point(sign0, phi0);\n        stream.lineEnd();\n        stream.lineStart();\n        stream.point(sign1, phi0);\n        clean = 0;\n      }\n      stream.point(lambda0 = lambda1, phi0 = phi1);\n      sign0 = sign1;\n    },\n    lineEnd: function() {\n      stream.lineEnd();\n      lambda0 = phi0 = NaN;\n    },\n    clean: function() {\n      return 2 - clean; // if intersections, rejoin first and last segments\n    }\n  };\n}\n\nfunction clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1) {\n  var cosPhi0,\n      cosPhi1,\n      sinLambda0Lambda1 = sin(lambda0 - lambda1);\n  return abs(sinLambda0Lambda1) > epsilon\n      ? atan((sin(phi0) * (cosPhi1 = cos(phi1)) * sin(lambda1)\n          - sin(phi1) * (cosPhi0 = cos(phi0)) * sin(lambda0))\n          / (cosPhi0 * cosPhi1 * sinLambda0Lambda1))\n      : (phi0 + phi1) / 2;\n}\n\nfunction clipAntimeridianInterpolate(from, to, direction, stream) {\n  var phi;\n  if (from == null) {\n    phi = direction * halfPi;\n    stream.point(-pi, phi);\n    stream.point(0, phi);\n    stream.point(pi, phi);\n    stream.point(pi, 0);\n    stream.point(pi, -phi);\n    stream.point(0, -phi);\n    stream.point(-pi, -phi);\n    stream.point(-pi, 0);\n    stream.point(-pi, phi);\n  } else if (abs(from[0] - to[0]) > epsilon) {\n    var lambda = from[0] < to[0] ? pi : -pi;\n    phi = direction * lambda / 2;\n    stream.point(-lambda, phi);\n    stream.point(0, phi);\n    stream.point(lambda, phi);\n  } else {\n    stream.point(to[0], to[1]);\n  }\n}\n","import {cartesian, cartesianAddInPlace, cartesianCross, cartesianDot, cartesianScale, spherical} from \"../cartesian\";\nimport {circleStream} from \"../circle\";\nimport {abs, cos, epsilon, pi, radians, sqrt} from \"../math\";\nimport pointEqual from \"../pointEqual\";\nimport clip from \"./index\";\n\nexport default function(radius) {\n  var cr = cos(radius),\n      delta = 6 * radians,\n      smallRadius = cr > 0,\n      notHemisphere = abs(cr) > epsilon; // TODO optimise for this common case\n\n  function interpolate(from, to, direction, stream) {\n    circleStream(stream, radius, delta, direction, from, to);\n  }\n\n  function visible(lambda, phi) {\n    return cos(lambda) * cos(phi) > cr;\n  }\n\n  // Takes a line and cuts into visible segments. Return values used for polygon\n  // clipping: 0 - there were intersections or the line was empty; 1 - no\n  // intersections 2 - there were intersections, and the first and last segments\n  // should be rejoined.\n  function clipLine(stream) {\n    var point0, // previous point\n        c0, // code for previous point\n        v0, // visibility of previous point\n        v00, // visibility of first point\n        clean; // no intersections\n    return {\n      lineStart: function() {\n        v00 = v0 = false;\n        clean = 1;\n      },\n      point: function(lambda, phi) {\n        var point1 = [lambda, phi],\n            point2,\n            v = visible(lambda, phi),\n            c = smallRadius\n              ? v ? 0 : code(lambda, phi)\n              : v ? code(lambda + (lambda < 0 ? pi : -pi), phi) : 0;\n        if (!point0 && (v00 = v0 = v)) stream.lineStart();\n        // Handle degeneracies.\n        // TODO ignore if not clipping polygons.\n        if (v !== v0) {\n          point2 = intersect(point0, point1);\n          if (!point2 || pointEqual(point0, point2) || pointEqual(point1, point2)) {\n            point1[0] += epsilon;\n            point1[1] += epsilon;\n            v = visible(point1[0], point1[1]);\n          }\n        }\n        if (v !== v0) {\n          clean = 0;\n          if (v) {\n            // outside going in\n            stream.lineStart();\n            point2 = intersect(point1, point0);\n            stream.point(point2[0], point2[1]);\n          } else {\n            // inside going out\n            point2 = intersect(point0, point1);\n            stream.point(point2[0], point2[1]);\n            stream.lineEnd();\n          }\n          point0 = point2;\n        } else if (notHemisphere && point0 && smallRadius ^ v) {\n          var t;\n          // If the codes for two points are different, or are both zero,\n          // and there this segment intersects with the small circle.\n          if (!(c & c0) && (t = intersect(point1, point0, true))) {\n            clean = 0;\n            if (smallRadius) {\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n            } else {\n              stream.point(t[1][0], t[1][1]);\n              stream.lineEnd();\n              stream.lineStart();\n              stream.point(t[0][0], t[0][1]);\n            }\n          }\n        }\n        if (v && (!point0 || !pointEqual(point0, point1))) {\n          stream.point(point1[0], point1[1]);\n        }\n        point0 = point1, v0 = v, c0 = c;\n      },\n      lineEnd: function() {\n        if (v0) stream.lineEnd();\n        point0 = null;\n      },\n      // Rejoin first and last segments if there were intersections and the first\n      // and last points were visible.\n      clean: function() {\n        return clean | ((v00 && v0) << 1);\n      }\n    };\n  }\n\n  // Intersects the great circle between a and b with the clip circle.\n  function intersect(a, b, two) {\n    var pa = cartesian(a),\n        pb = cartesian(b);\n\n    // We have two planes, n1.p = d1 and n2.p = d2.\n    // Find intersection line p(t) = c1 n1 + c2 n2 + t (n1 ⨯ n2).\n    var n1 = [1, 0, 0], // normal\n        n2 = cartesianCross(pa, pb),\n        n2n2 = cartesianDot(n2, n2),\n        n1n2 = n2[0], // cartesianDot(n1, n2),\n        determinant = n2n2 - n1n2 * n1n2;\n\n    // Two polar points.\n    if (!determinant) return !two && a;\n\n    var c1 =  cr * n2n2 / determinant,\n        c2 = -cr * n1n2 / determinant,\n        n1xn2 = cartesianCross(n1, n2),\n        A = cartesianScale(n1, c1),\n        B = cartesianScale(n2, c2);\n    cartesianAddInPlace(A, B);\n\n    // Solve |p(t)|^2 = 1.\n    var u = n1xn2,\n        w = cartesianDot(A, u),\n        uu = cartesianDot(u, u),\n        t2 = w * w - uu * (cartesianDot(A, A) - 1);\n\n    if (t2 < 0) return;\n\n    var t = sqrt(t2),\n        q = cartesianScale(u, (-w - t) / uu);\n    cartesianAddInPlace(q, A);\n    q = spherical(q);\n\n    if (!two) return q;\n\n    // Two intersection points.\n    var lambda0 = a[0],\n        lambda1 = b[0],\n        phi0 = a[1],\n        phi1 = b[1],\n        z;\n\n    if (lambda1 < lambda0) z = lambda0, lambda0 = lambda1, lambda1 = z;\n\n    var delta = lambda1 - lambda0,\n        polar = abs(delta - pi) < epsilon,\n        meridian = polar || delta < epsilon;\n\n    if (!polar && phi1 < phi0) z = phi0, phi0 = phi1, phi1 = z;\n\n    // Check that the first point is between a and b.\n    if (meridian\n        ? polar\n          ? phi0 + phi1 > 0 ^ q[1] < (abs(q[0] - lambda0) < epsilon ? phi0 : phi1)\n          : phi0 <= q[1] && q[1] <= phi1\n        : delta > pi ^ (lambda0 <= q[0] && q[0] <= lambda1)) {\n      var q1 = cartesianScale(u, (-w + t) / uu);\n      cartesianAddInPlace(q1, A);\n      return [q, spherical(q1)];\n    }\n  }\n\n  // Generates a 4-bit vector representing the location of a point relative to\n  // the small circle's bounding box.\n  function code(lambda, phi) {\n    var r = smallRadius ? radius : pi - radius,\n        code = 0;\n    if (lambda < -r) code |= 1; // left\n    else if (lambda > r) code |= 2; // right\n    if (phi < -r) code |= 4; // below\n    else if (phi > r) code |= 8; // above\n    return code;\n  }\n\n  return clip(visible, clipLine, interpolate, smallRadius ? [0, -radius] : [-pi, radius - pi]);\n}\n","export default function(a, b, x0, y0, x1, y1) {\n  var ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (t0 > 0) a[0] = ax + t0 * dx, a[1] = ay + t0 * dy;\n  if (t1 < 1) b[0] = ax + t1 * dx, b[1] = ay + t1 * dy;\n  return true;\n}\n","import {abs, epsilon} from \"../math\";\nimport clipBuffer from \"./buffer\";\nimport clipLine from \"./line\";\nimport clipRejoin from \"./rejoin\";\nimport {merge} from \"d3-array\";\n\nvar clipMax = 1e9, clipMin = -clipMax;\n\n// TODO Use d3-polygon’s polygonContains here for the ring check?\n// TODO Eliminate duplicate buffering in clipBuffer and polygon.push?\n\nexport default function clipRectangle(x0, y0, x1, y1) {\n\n  function visible(x, y) {\n    return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n  }\n\n  function interpolate(from, to, direction, stream) {\n    var a = 0, a1 = 0;\n    if (from == null\n        || (a = corner(from, direction)) !== (a1 = corner(to, direction))\n        || comparePoint(from, to) < 0 ^ direction > 0) {\n      do stream.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n      while ((a = (a + direction + 4) % 4) !== a1);\n    } else {\n      stream.point(to[0], to[1]);\n    }\n  }\n\n  function corner(p, direction) {\n    return abs(p[0] - x0) < epsilon ? direction > 0 ? 0 : 3\n        : abs(p[0] - x1) < epsilon ? direction > 0 ? 2 : 1\n        : abs(p[1] - y0) < epsilon ? direction > 0 ? 1 : 0\n        : direction > 0 ? 3 : 2; // abs(p[1] - y1) < epsilon\n  }\n\n  function compareIntersection(a, b) {\n    return comparePoint(a.x, b.x);\n  }\n\n  function comparePoint(a, b) {\n    var ca = corner(a, 1),\n        cb = corner(b, 1);\n    return ca !== cb ? ca - cb\n        : ca === 0 ? b[1] - a[1]\n        : ca === 1 ? a[0] - b[0]\n        : ca === 2 ? a[1] - b[1]\n        : b[0] - a[0];\n  }\n\n  return function(stream) {\n    var activeStream = stream,\n        bufferStream = clipBuffer(),\n        segments,\n        polygon,\n        ring,\n        x__, y__, v__, // first point\n        x_, y_, v_, // previous point\n        first,\n        clean;\n\n    var clipStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: polygonStart,\n      polygonEnd: polygonEnd\n    };\n\n    function point(x, y) {\n      if (visible(x, y)) activeStream.point(x, y);\n    }\n\n    function polygonInside() {\n      var winding = 0;\n\n      for (var i = 0, n = polygon.length; i < n; ++i) {\n        for (var ring = polygon[i], j = 1, m = ring.length, point = ring[0], a0, a1, b0 = point[0], b1 = point[1]; j < m; ++j) {\n          a0 = b0, a1 = b1, point = ring[j], b0 = point[0], b1 = point[1];\n          if (a1 <= y1) { if (b1 > y1 && (b0 - a0) * (y1 - a1) > (b1 - a1) * (x0 - a0)) ++winding; }\n          else { if (b1 <= y1 && (b0 - a0) * (y1 - a1) < (b1 - a1) * (x0 - a0)) --winding; }\n        }\n      }\n\n      return winding;\n    }\n\n    // Buffer geometry within a polygon and then clip it en masse.\n    function polygonStart() {\n      activeStream = bufferStream, segments = [], polygon = [], clean = true;\n    }\n\n    function polygonEnd() {\n      var startInside = polygonInside(),\n          cleanInside = clean && startInside,\n          visible = (segments = merge(segments)).length;\n      if (cleanInside || visible) {\n        stream.polygonStart();\n        if (cleanInside) {\n          stream.lineStart();\n          interpolate(null, null, 1, stream);\n          stream.lineEnd();\n        }\n        if (visible) {\n          clipRejoin(segments, compareIntersection, startInside, interpolate, stream);\n        }\n        stream.polygonEnd();\n      }\n      activeStream = stream, segments = polygon = ring = null;\n    }\n\n    function lineStart() {\n      clipStream.point = linePoint;\n      if (polygon) polygon.push(ring = []);\n      first = true;\n      v_ = false;\n      x_ = y_ = NaN;\n    }\n\n    // TODO rather than special-case polygons, simply handle them separately.\n    // Ideally, coincident intersection points should be jittered to avoid\n    // clipping issues.\n    function lineEnd() {\n      if (segments) {\n        linePoint(x__, y__);\n        if (v__ && v_) bufferStream.rejoin();\n        segments.push(bufferStream.result());\n      }\n      clipStream.point = point;\n      if (v_) activeStream.lineEnd();\n    }\n\n    function linePoint(x, y) {\n      var v = visible(x, y);\n      if (polygon) ring.push([x, y]);\n      if (first) {\n        x__ = x, y__ = y, v__ = v;\n        first = false;\n        if (v) {\n          activeStream.lineStart();\n          activeStream.point(x, y);\n        }\n      } else {\n        if (v && v_) activeStream.point(x, y);\n        else {\n          var a = [x_ = Math.max(clipMin, Math.min(clipMax, x_)), y_ = Math.max(clipMin, Math.min(clipMax, y_))],\n              b = [x = Math.max(clipMin, Math.min(clipMax, x)), y = Math.max(clipMin, Math.min(clipMax, y))];\n          if (clipLine(a, b, x0, y0, x1, y1)) {\n            if (!v_) {\n              activeStream.lineStart();\n              activeStream.point(a[0], a[1]);\n            }\n            activeStream.point(b[0], b[1]);\n            if (!v) activeStream.lineEnd();\n            clean = false;\n          } else if (v) {\n            activeStream.lineStart();\n            activeStream.point(x, y);\n            clean = false;\n          }\n        }\n      }\n      x_ = x, y_ = y, v_ = v;\n    }\n\n    return clipStream;\n  };\n}\n","import clipRectangle from \"./rectangle\";\n\nexport default function() {\n  var x0 = 0,\n      y0 = 0,\n      x1 = 960,\n      y1 = 500,\n      cache,\n      cacheStream,\n      clip;\n\n  return clip = {\n    stream: function(stream) {\n      return cache && cacheStream === stream ? cache : cache = clipRectangle(x0, y0, x1, y1)(cacheStream = stream);\n    },\n    extent: function(_) {\n      return arguments.length ? (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1], cache = cacheStream = null, clip) : [[x0, y0], [x1, y1]];\n    }\n  };\n}\n","import adder from \"./adder\";\nimport {abs, atan2, cos, radians, sin, sqrt} from \"./math\";\nimport noop from \"./noop\";\nimport stream from \"./stream\";\n\nvar lengthSum = adder(),\n    lambda0,\n    sinPhi0,\n    cosPhi0;\n\nvar lengthStream = {\n  sphere: noop,\n  point: noop,\n  lineStart: lengthLineStart,\n  lineEnd: noop,\n  polygonStart: noop,\n  polygonEnd: noop\n};\n\nfunction lengthLineStart() {\n  lengthStream.point = lengthPointFirst;\n  lengthStream.lineEnd = lengthLineEnd;\n}\n\nfunction lengthLineEnd() {\n  lengthStream.point = lengthStream.lineEnd = noop;\n}\n\nfunction lengthPointFirst(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  lambda0 = lambda, sinPhi0 = sin(phi), cosPhi0 = cos(phi);\n  lengthStream.point = lengthPoint;\n}\n\nfunction lengthPoint(lambda, phi) {\n  lambda *= radians, phi *= radians;\n  var sinPhi = sin(phi),\n      cosPhi = cos(phi),\n      delta = abs(lambda - lambda0),\n      cosDelta = cos(delta),\n      sinDelta = sin(delta),\n      x = cosPhi * sinDelta,\n      y = cosPhi0 * sinPhi - sinPhi0 * cosPhi * cosDelta,\n      z = sinPhi0 * sinPhi + cosPhi0 * cosPhi * cosDelta;\n  lengthSum.add(atan2(sqrt(x * x + y * y), z));\n  lambda0 = lambda, sinPhi0 = sinPhi, cosPhi0 = cosPhi;\n}\n\nexport default function(object) {\n  lengthSum.reset();\n  stream(object, lengthStream);\n  return +lengthSum;\n}\n","import length from \"./length\";\n\nvar coordinates = [null, null],\n    object = {type: \"LineString\", coordinates: coordinates};\n\nexport default function(a, b) {\n  coordinates[0] = a;\n  coordinates[1] = b;\n  return length(object);\n}\n","import {default as polygonContains} from \"./polygonContains\";\nimport {default as distance} from \"./distance\";\nimport {epsilon, radians} from \"./math\";\n\nvar containsObjectType = {\n  Feature: function(object, point) {\n    return containsGeometry(object.geometry, point);\n  },\n  FeatureCollection: function(object, point) {\n    var features = object.features, i = -1, n = features.length;\n    while (++i < n) if (containsGeometry(features[i].geometry, point)) return true;\n    return false;\n  }\n};\n\nvar containsGeometryType = {\n  Sphere: function() {\n    return true;\n  },\n  Point: function(object, point) {\n    return containsPoint(object.coordinates, point);\n  },\n  MultiPoint: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsPoint(coordinates[i], point)) return true;\n    return false;\n  },\n  LineString: function(object, point) {\n    return containsLine(object.coordinates, point);\n  },\n  MultiLineString: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsLine(coordinates[i], point)) return true;\n    return false;\n  },\n  Polygon: function(object, point) {\n    return containsPolygon(object.coordinates, point);\n  },\n  MultiPolygon: function(object, point) {\n    var coordinates = object.coordinates, i = -1, n = coordinates.length;\n    while (++i < n) if (containsPolygon(coordinates[i], point)) return true;\n    return false;\n  },\n  GeometryCollection: function(object, point) {\n    var geometries = object.geometries, i = -1, n = geometries.length;\n    while (++i < n) if (containsGeometry(geometries[i], point)) return true;\n    return false;\n  }\n};\n\nfunction containsGeometry(geometry, point) {\n  return geometry && containsGeometryType.hasOwnProperty(geometry.type)\n      ? containsGeometryType[geometry.type](geometry, point)\n      : false;\n}\n\nfunction containsPoint(coordinates, point) {\n  return distance(coordinates, point) === 0;\n}\n\nfunction containsLine(coordinates, point) {\n  var ab = distance(coordinates[0], coordinates[1]),\n      ao = distance(coordinates[0], point),\n      ob = distance(point, coordinates[1]);\n  return ao + ob <= ab + epsilon;\n}\n\nfunction containsPolygon(coordinates, point) {\n  return !!polygonContains(coordinates.map(ringRadians), pointRadians(point));\n}\n\nfunction ringRadians(ring) {\n  return ring = ring.map(pointRadians), ring.pop(), ring;\n}\n\nfunction pointRadians(point) {\n  return [point[0] * radians, point[1] * radians];\n}\n\nexport default function(object, point) {\n  return (object && containsObjectType.hasOwnProperty(object.type)\n      ? containsObjectType[object.type]\n      : containsGeometry)(object, point);\n}\n","import {range} from \"d3-array\";\nimport {abs, ceil, epsilon} from \"./math\";\n\nfunction graticuleX(y0, y1, dy) {\n  var y = range(y0, y1 - epsilon, dy).concat(y1);\n  return function(x) { return y.map(function(y) { return [x, y]; }); };\n}\n\nfunction graticuleY(x0, x1, dx) {\n  var x = range(x0, x1 - epsilon, dx).concat(x1);\n  return function(y) { return x.map(function(x) { return [x, y]; }); };\n}\n\nexport default function graticule() {\n  var x1, x0, X1, X0,\n      y1, y0, Y1, Y0,\n      dx = 10, dy = dx, DX = 90, DY = 360,\n      x, y, X, Y,\n      precision = 2.5;\n\n  function graticule() {\n    return {type: \"MultiLineString\", coordinates: lines()};\n  }\n\n  function lines() {\n    return range(ceil(X0 / DX) * DX, X1, DX).map(X)\n        .concat(range(ceil(Y0 / DY) * DY, Y1, DY).map(Y))\n        .concat(range(ceil(x0 / dx) * dx, x1, dx).filter(function(x) { return abs(x % DX) > epsilon; }).map(x))\n        .concat(range(ceil(y0 / dy) * dy, y1, dy).filter(function(y) { return abs(y % DY) > epsilon; }).map(y));\n  }\n\n  graticule.lines = function() {\n    return lines().map(function(coordinates) { return {type: \"LineString\", coordinates: coordinates}; });\n  };\n\n  graticule.outline = function() {\n    return {\n      type: \"Polygon\",\n      coordinates: [\n        X(X0).concat(\n        Y(Y1).slice(1),\n        X(X1).reverse().slice(1),\n        Y(Y0).reverse().slice(1))\n      ]\n    };\n  };\n\n  graticule.extent = function(_) {\n    if (!arguments.length) return graticule.extentMinor();\n    return graticule.extentMajor(_).extentMinor(_);\n  };\n\n  graticule.extentMajor = function(_) {\n    if (!arguments.length) return [[X0, Y0], [X1, Y1]];\n    X0 = +_[0][0], X1 = +_[1][0];\n    Y0 = +_[0][1], Y1 = +_[1][1];\n    if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n    if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.extentMinor = function(_) {\n    if (!arguments.length) return [[x0, y0], [x1, y1]];\n    x0 = +_[0][0], x1 = +_[1][0];\n    y0 = +_[0][1], y1 = +_[1][1];\n    if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n    if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n    return graticule.precision(precision);\n  };\n\n  graticule.step = function(_) {\n    if (!arguments.length) return graticule.stepMinor();\n    return graticule.stepMajor(_).stepMinor(_);\n  };\n\n  graticule.stepMajor = function(_) {\n    if (!arguments.length) return [DX, DY];\n    DX = +_[0], DY = +_[1];\n    return graticule;\n  };\n\n  graticule.stepMinor = function(_) {\n    if (!arguments.length) return [dx, dy];\n    dx = +_[0], dy = +_[1];\n    return graticule;\n  };\n\n  graticule.precision = function(_) {\n    if (!arguments.length) return precision;\n    precision = +_;\n    x = graticuleX(y0, y1, 90);\n    y = graticuleY(x0, x1, precision);\n    X = graticuleX(Y0, Y1, 90);\n    Y = graticuleY(X0, X1, precision);\n    return graticule;\n  };\n\n  return graticule\n      .extentMajor([[-180, -90 + epsilon], [180, 90 - epsilon]])\n      .extentMinor([[-180, -80 - epsilon], [180, 80 + epsilon]]);\n}\n\nexport function graticule10() {\n  return graticule()();\n}\n","import {asin, atan2, cos, degrees, haversin, radians, sin, sqrt} from \"./math\";\n\nexport default function(a, b) {\n  var x0 = a[0] * radians,\n      y0 = a[1] * radians,\n      x1 = b[0] * radians,\n      y1 = b[1] * radians,\n      cy0 = cos(y0),\n      sy0 = sin(y0),\n      cy1 = cos(y1),\n      sy1 = sin(y1),\n      kx0 = cy0 * cos(x0),\n      ky0 = cy0 * sin(x0),\n      kx1 = cy1 * cos(x1),\n      ky1 = cy1 * sin(x1),\n      d = 2 * asin(sqrt(haversin(y1 - y0) + cy0 * cy1 * haversin(x1 - x0))),\n      k = sin(d);\n\n  var interpolate = d ? function(t) {\n    var B = sin(t *= d) / k,\n        A = sin(d - t) / k,\n        x = A * kx0 + B * kx1,\n        y = A * ky0 + B * ky1,\n        z = A * sy0 + B * sy1;\n    return [\n      atan2(y, x) * degrees,\n      atan2(z, sqrt(x * x + y * y)) * degrees\n    ];\n  } : function() {\n    return [x0 * degrees, y0 * degrees];\n  };\n\n  interpolate.distance = d;\n\n  return interpolate;\n}\n","import adder from \"../adder\";\nimport {abs} from \"../math\";\nimport noop from \"../noop\";\n\nvar areaSum = adder(),\n    areaRingSum = adder(),\n    x00,\n    y00,\n    x0,\n    y0;\n\nvar areaStream = {\n  point: noop,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: function() {\n    areaStream.lineStart = areaRingStart;\n    areaStream.lineEnd = areaRingEnd;\n  },\n  polygonEnd: function() {\n    areaStream.lineStart = areaStream.lineEnd = areaStream.point = noop;\n    areaSum.add(abs(areaRingSum));\n    areaRingSum.reset();\n  },\n  result: function() {\n    var area = areaSum / 2;\n    areaSum.reset();\n    return area;\n  }\n};\n\nfunction areaRingStart() {\n  areaStream.point = areaPointFirst;\n}\n\nfunction areaPointFirst(x, y) {\n  areaStream.point = areaPoint;\n  x00 = x0 = x, y00 = y0 = y;\n}\n\nfunction areaPoint(x, y) {\n  areaRingSum.add(y0 * x - x0 * y);\n  x0 = x, y0 = y;\n}\n\nfunction areaRingEnd() {\n  areaPoint(x00, y00);\n}\n\nexport default areaStream;\n","export default function(x) {\n  return x;\n}\n","import noop from \"../noop\";\n\nvar x0 = Infinity,\n    y0 = x0,\n    x1 = -x0,\n    y1 = x1;\n\nvar boundsStream = {\n  point: boundsPoint,\n  lineStart: noop,\n  lineEnd: noop,\n  polygonStart: noop,\n  polygonEnd: noop,\n  result: function() {\n    var bounds = [[x0, y0], [x1, y1]];\n    x1 = y1 = -(y0 = x0 = Infinity);\n    return bounds;\n  }\n};\n\nfunction boundsPoint(x, y) {\n  if (x < x0) x0 = x;\n  if (x > x1) x1 = x;\n  if (y < y0) y0 = y;\n  if (y > y1) y1 = y;\n}\n\nexport default boundsStream;\n","import {sqrt} from \"../math\";\n\n// TODO Enforce positive area for exterior, negative area for interior?\n\nvar X0 = 0,\n    Y0 = 0,\n    Z0 = 0,\n    X1 = 0,\n    Y1 = 0,\n    Z1 = 0,\n    X2 = 0,\n    Y2 = 0,\n    Z2 = 0,\n    x00,\n    y00,\n    x0,\n    y0;\n\nvar centroidStream = {\n  point: centroidPoint,\n  lineStart: centroidLineStart,\n  lineEnd: centroidLineEnd,\n  polygonStart: function() {\n    centroidStream.lineStart = centroidRingStart;\n    centroidStream.lineEnd = centroidRingEnd;\n  },\n  polygonEnd: function() {\n    centroidStream.point = centroidPoint;\n    centroidStream.lineStart = centroidLineStart;\n    centroidStream.lineEnd = centroidLineEnd;\n  },\n  result: function() {\n    var centroid = Z2 ? [X2 / Z2, Y2 / Z2]\n        : Z1 ? [X1 / Z1, Y1 / Z1]\n        : Z0 ? [X0 / Z0, Y0 / Z0]\n        : [NaN, NaN];\n    X0 = Y0 = Z0 =\n    X1 = Y1 = Z1 =\n    X2 = Y2 = Z2 = 0;\n    return centroid;\n  }\n};\n\nfunction centroidPoint(x, y) {\n  X0 += x;\n  Y0 += y;\n  ++Z0;\n}\n\nfunction centroidLineStart() {\n  centroidStream.point = centroidPointFirstLine;\n}\n\nfunction centroidPointFirstLine(x, y) {\n  centroidStream.point = centroidPointLine;\n  centroidPoint(x0 = x, y0 = y);\n}\n\nfunction centroidPointLine(x, y) {\n  var dx = x - x0, dy = y - y0, z = sqrt(dx * dx + dy * dy);\n  X1 += z * (x0 + x) / 2;\n  Y1 += z * (y0 + y) / 2;\n  Z1 += z;\n  centroidPoint(x0 = x, y0 = y);\n}\n\nfunction centroidLineEnd() {\n  centroidStream.point = centroidPoint;\n}\n\nfunction centroidRingStart() {\n  centroidStream.point = centroidPointFirstRing;\n}\n\nfunction centroidRingEnd() {\n  centroidPointRing(x00, y00);\n}\n\nfunction centroidPointFirstRing(x, y) {\n  centroidStream.point = centroidPointRing;\n  centroidPoint(x00 = x0 = x, y00 = y0 = y);\n}\n\nfunction centroidPointRing(x, y) {\n  var dx = x - x0,\n      dy = y - y0,\n      z = sqrt(dx * dx + dy * dy);\n\n  X1 += z * (x0 + x) / 2;\n  Y1 += z * (y0 + y) / 2;\n  Z1 += z;\n\n  z = y0 * x - x0 * y;\n  X2 += z * (x0 + x);\n  Y2 += z * (y0 + y);\n  Z2 += z * 3;\n  centroidPoint(x0 = x, y0 = y);\n}\n\nexport default centroidStream;\n","import {tau} from \"../math\";\nimport noop from \"../noop\";\n\nexport default function PathContext(context) {\n  this._context = context;\n}\n\nPathContext.prototype = {\n  _radius: 4.5,\n  pointRadius: function(_) {\n    return this._radius = _, this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._context.closePath();\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._context.moveTo(x, y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._context.lineTo(x, y);\n        break;\n      }\n      default: {\n        this._context.moveTo(x + this._radius, y);\n        this._context.arc(x, y, this._radius, 0, tau);\n        break;\n      }\n    }\n  },\n  result: noop\n};\n","import adder from \"../adder\";\nimport {sqrt} from \"../math\";\nimport noop from \"../noop\";\n\nvar lengthSum = adder(),\n    lengthRing,\n    x00,\n    y00,\n    x0,\n    y0;\n\nvar lengthStream = {\n  point: noop,\n  lineStart: function() {\n    lengthStream.point = lengthPointFirst;\n  },\n  lineEnd: function() {\n    if (lengthRing) lengthPoint(x00, y00);\n    lengthStream.point = noop;\n  },\n  polygonStart: function() {\n    lengthRing = true;\n  },\n  polygonEnd: function() {\n    lengthRing = null;\n  },\n  result: function() {\n    var length = +lengthSum;\n    lengthSum.reset();\n    return length;\n  }\n};\n\nfunction lengthPointFirst(x, y) {\n  lengthStream.point = lengthPoint;\n  x00 = x0 = x, y00 = y0 = y;\n}\n\nfunction lengthPoint(x, y) {\n  x0 -= x, y0 -= y;\n  lengthSum.add(sqrt(x0 * x0 + y0 * y0));\n  x0 = x, y0 = y;\n}\n\nexport default lengthStream;\n","export default function PathString() {\n  this._string = [];\n}\n\nPathString.prototype = {\n  _radius: 4.5,\n  _circle: circle(4.5),\n  pointRadius: function(_) {\n    if ((_ = +_) !== this._radius) this._radius = _, this._circle = null;\n    return this;\n  },\n  polygonStart: function() {\n    this._line = 0;\n  },\n  polygonEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line === 0) this._string.push(\"Z\");\n    this._point = NaN;\n  },\n  point: function(x, y) {\n    switch (this._point) {\n      case 0: {\n        this._string.push(\"M\", x, \",\", y);\n        this._point = 1;\n        break;\n      }\n      case 1: {\n        this._string.push(\"L\", x, \",\", y);\n        break;\n      }\n      default: {\n        if (this._circle == null) this._circle = circle(this._radius);\n        this._string.push(\"M\", x, \",\", y, this._circle);\n        break;\n      }\n    }\n  },\n  result: function() {\n    if (this._string.length) {\n      var result = this._string.join(\"\");\n      this._string = [];\n      return result;\n    } else {\n      return null;\n    }\n  }\n};\n\nfunction circle(radius) {\n  return \"m0,\" + radius\n      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius\n      + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius\n      + \"z\";\n}\n","import identity from \"../identity\";\nimport stream from \"../stream\";\nimport pathArea from \"./area\";\nimport pathBounds from \"./bounds\";\nimport pathCentroid from \"./centroid\";\nimport PathContext from \"./context\";\nimport pathMeasure from \"./measure\";\nimport PathString from \"./string\";\n\nexport default function(projection, context) {\n  var pointRadius = 4.5,\n      projectionStream,\n      contextStream;\n\n  function path(object) {\n    if (object) {\n      if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n      stream(object, projectionStream(contextStream));\n    }\n    return contextStream.result();\n  }\n\n  path.area = function(object) {\n    stream(object, projectionStream(pathArea));\n    return pathArea.result();\n  };\n\n  path.measure = function(object) {\n    stream(object, projectionStream(pathMeasure));\n    return pathMeasure.result();\n  };\n\n  path.bounds = function(object) {\n    stream(object, projectionStream(pathBounds));\n    return pathBounds.result();\n  };\n\n  path.centroid = function(object) {\n    stream(object, projectionStream(pathCentroid));\n    return pathCentroid.result();\n  };\n\n  path.projection = function(_) {\n    return arguments.length ? (projectionStream = _ == null ? (projection = null, identity) : (projection = _).stream, path) : projection;\n  };\n\n  path.context = function(_) {\n    if (!arguments.length) return context;\n    contextStream = _ == null ? (context = null, new PathString) : new PathContext(context = _);\n    if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n    return path;\n  };\n\n  path.pointRadius = function(_) {\n    if (!arguments.length) return pointRadius;\n    pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n    return path;\n  };\n\n  return path.projection(projection).context(context);\n}\n","export default function(methods) {\n  return {\n    stream: transformer(methods)\n  };\n}\n\nexport function transformer(methods) {\n  return function(stream) {\n    var s = new TransformStream;\n    for (var key in methods) s[key] = methods[key];\n    s.stream = stream;\n    return s;\n  };\n}\n\nfunction TransformStream() {}\n\nTransformStream.prototype = {\n  constructor: TransformStream,\n  point: function(x, y) { this.stream.point(x, y); },\n  sphere: function() { this.stream.sphere(); },\n  lineStart: function() { this.stream.lineStart(); },\n  lineEnd: function() { this.stream.lineEnd(); },\n  polygonStart: function() { this.stream.polygonStart(); },\n  polygonEnd: function() { this.stream.polygonEnd(); }\n};\n","import {default as geoStream} from \"../stream\";\nimport boundsStream from \"../path/bounds\";\n\nfunction fit(projection, fitBounds, object) {\n  var clip = projection.clipExtent && projection.clipExtent();\n  projection.scale(150).translate([0, 0]);\n  if (clip != null) projection.clipExtent(null);\n  geoStream(object, projection.stream(boundsStream));\n  fitBounds(boundsStream.result());\n  if (clip != null) projection.clipExtent(clip);\n  return projection;\n}\n\nexport function fitExtent(projection, extent, object) {\n  return fit(projection, function(b) {\n    var w = extent[1][0] - extent[0][0],\n        h = extent[1][1] - extent[0][1],\n        k = Math.min(w / (b[1][0] - b[0][0]), h / (b[1][1] - b[0][1])),\n        x = +extent[0][0] + (w - k * (b[1][0] + b[0][0])) / 2,\n        y = +extent[0][1] + (h - k * (b[1][1] + b[0][1])) / 2;\n    projection.scale(150 * k).translate([x, y]);\n  }, object);\n}\n\nexport function fitSize(projection, size, object) {\n  return fitExtent(projection, [[0, 0], size], object);\n}\n\nexport function fitWidth(projection, width, object) {\n  return fit(projection, function(b) {\n    var w = +width,\n        k = w / (b[1][0] - b[0][0]),\n        x = (w - k * (b[1][0] + b[0][0])) / 2,\n        y = -k * b[0][1];\n    projection.scale(150 * k).translate([x, y]);\n  }, object);\n}\n\nexport function fitHeight(projection, height, object) {\n  return fit(projection, function(b) {\n    var h = +height,\n        k = h / (b[1][1] - b[0][1]),\n        x = -k * b[0][0],\n        y = (h - k * (b[1][1] + b[0][1])) / 2;\n    projection.scale(150 * k).translate([x, y]);\n  }, object);\n}\n","import {cartesian} from \"../cartesian\";\nimport {abs, asin, atan2, cos, epsilon, radians, sqrt} from \"../math\";\nimport {transformer} from \"../transform\";\n\nvar maxDepth = 16, // maximum depth of subdivision\n    cosMinDistance = cos(30 * radians); // cos(minimum angular distance)\n\nexport default function(project, delta2) {\n  return +delta2 ? resample(project, delta2) : resampleNone(project);\n}\n\nfunction resampleNone(project) {\n  return transformer({\n    point: function(x, y) {\n      x = project(x, y);\n      this.stream.point(x[0], x[1]);\n    }\n  });\n}\n\nfunction resample(project, delta2) {\n\n  function resampleLineTo(x0, y0, lambda0, a0, b0, c0, x1, y1, lambda1, a1, b1, c1, depth, stream) {\n    var dx = x1 - x0,\n        dy = y1 - y0,\n        d2 = dx * dx + dy * dy;\n    if (d2 > 4 * delta2 && depth--) {\n      var a = a0 + a1,\n          b = b0 + b1,\n          c = c0 + c1,\n          m = sqrt(a * a + b * b + c * c),\n          phi2 = asin(c /= m),\n          lambda2 = abs(abs(c) - 1) < epsilon || abs(lambda0 - lambda1) < epsilon ? (lambda0 + lambda1) / 2 : atan2(b, a),\n          p = project(lambda2, phi2),\n          x2 = p[0],\n          y2 = p[1],\n          dx2 = x2 - x0,\n          dy2 = y2 - y0,\n          dz = dy * dx2 - dx * dy2;\n      if (dz * dz / d2 > delta2 // perpendicular projected distance\n          || abs((dx * dx2 + dy * dy2) / d2 - 0.5) > 0.3 // midpoint close to an end\n          || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) { // angular distance\n        resampleLineTo(x0, y0, lambda0, a0, b0, c0, x2, y2, lambda2, a /= m, b /= m, c, depth, stream);\n        stream.point(x2, y2);\n        resampleLineTo(x2, y2, lambda2, a, b, c, x1, y1, lambda1, a1, b1, c1, depth, stream);\n      }\n    }\n  }\n  return function(stream) {\n    var lambda00, x00, y00, a00, b00, c00, // first point\n        lambda0, x0, y0, a0, b0, c0; // previous point\n\n    var resampleStream = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() { stream.polygonStart(); resampleStream.lineStart = ringStart; },\n      polygonEnd: function() { stream.polygonEnd(); resampleStream.lineStart = lineStart; }\n    };\n\n    function point(x, y) {\n      x = project(x, y);\n      stream.point(x[0], x[1]);\n    }\n\n    function lineStart() {\n      x0 = NaN;\n      resampleStream.point = linePoint;\n      stream.lineStart();\n    }\n\n    function linePoint(lambda, phi) {\n      var c = cartesian([lambda, phi]), p = project(lambda, phi);\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x0 = p[0], y0 = p[1], lambda0 = lambda, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n      stream.point(x0, y0);\n    }\n\n    function lineEnd() {\n      resampleStream.point = point;\n      stream.lineEnd();\n    }\n\n    function ringStart() {\n      lineStart();\n      resampleStream.point = ringPoint;\n      resampleStream.lineEnd = ringEnd;\n    }\n\n    function ringPoint(lambda, phi) {\n      linePoint(lambda00 = lambda, phi), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n      resampleStream.point = linePoint;\n    }\n\n    function ringEnd() {\n      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x00, y00, lambda00, a00, b00, c00, maxDepth, stream);\n      resampleStream.lineEnd = lineEnd;\n      lineEnd();\n    }\n\n    return resampleStream;\n  };\n}\n","import clipAntimeridian from \"../clip/antimeridian\";\nimport clipCircle from \"../clip/circle\";\nimport clipRectangle from \"../clip/rectangle\";\nimport compose from \"../compose\";\nimport identity from \"../identity\";\nimport {cos, degrees, radians, sin, sqrt} from \"../math\";\nimport {rotateRadians} from \"../rotation\";\nimport {transformer} from \"../transform\";\nimport {fitExtent, fitSize, fitWidth, fitHeight} from \"./fit\";\nimport resample from \"./resample\";\n\nvar transformRadians = transformer({\n  point: function(x, y) {\n    this.stream.point(x * radians, y * radians);\n  }\n});\n\nfunction transformRotate(rotate) {\n  return transformer({\n    point: function(x, y) {\n      var r = rotate(x, y);\n      return this.stream.point(r[0], r[1]);\n    }\n  });\n}\n\nfunction scaleTranslate(k, dx, dy) {\n  function transform(x, y) {\n    return [dx + k * x, dy - k * y];\n  }\n  transform.invert = function(x, y) {\n    return [(x - dx) / k, (dy - y) / k];\n  };\n  return transform;\n}\n\nfunction scaleTranslateRotate(k, dx, dy, alpha) {\n  var cosAlpha = cos(alpha),\n      sinAlpha = sin(alpha),\n      a = cosAlpha * k,\n      b = sinAlpha * k,\n      ai = cosAlpha / k,\n      bi = sinAlpha / k,\n      ci = (sinAlpha * dy - cosAlpha * dx) / k,\n      fi = (sinAlpha * dx + cosAlpha * dy) / k;\n  function transform(x, y) {\n    return [a * x - b * y + dx, dy - b * x - a * y];\n  }\n  transform.invert = function(x, y) {\n    return [ai * x - bi * y + ci, fi - bi * x - ai * y];\n  };\n  return transform;\n}\n\nexport default function projection(project) {\n  return projectionMutator(function() { return project; })();\n}\n\nexport function projectionMutator(projectAt) {\n  var project,\n      k = 150, // scale\n      x = 480, y = 250, // translate\n      lambda = 0, phi = 0, // center\n      deltaLambda = 0, deltaPhi = 0, deltaGamma = 0, rotate, // pre-rotate\n      alpha = 0, // post-rotate\n      theta = null, preclip = clipAntimeridian, // pre-clip angle\n      x0 = null, y0, x1, y1, postclip = identity, // post-clip extent\n      delta2 = 0.5, // precision\n      projectResample,\n      projectTransform,\n      projectRotateTransform,\n      cache,\n      cacheStream;\n\n  function projection(point) {\n    return projectRotateTransform(point[0] * radians, point[1] * radians);\n  }\n\n  function invert(point) {\n    point = projectRotateTransform.invert(point[0], point[1]);\n    return point && [point[0] * degrees, point[1] * degrees];\n  }\n\n  projection.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = transformRadians(transformRotate(rotate)(preclip(projectResample(postclip(cacheStream = stream)))));\n  };\n\n  projection.preclip = function(_) {\n    return arguments.length ? (preclip = _, theta = undefined, reset()) : preclip;\n  };\n\n  projection.postclip = function(_) {\n    return arguments.length ? (postclip = _, x0 = y0 = x1 = y1 = null, reset()) : postclip;\n  };\n\n  projection.clipAngle = function(_) {\n    return arguments.length ? (preclip = +_ ? clipCircle(theta = _ * radians) : (theta = null, clipAntimeridian), reset()) : theta * degrees;\n  };\n\n  projection.clipExtent = function(_) {\n    return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity) : clipRectangle(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  projection.scale = function(_) {\n    return arguments.length ? (k = +_, recenter()) : k;\n  };\n\n  projection.translate = function(_) {\n    return arguments.length ? (x = +_[0], y = +_[1], recenter()) : [x, y];\n  };\n\n  projection.center = function(_) {\n    return arguments.length ? (lambda = _[0] % 360 * radians, phi = _[1] % 360 * radians, recenter()) : [lambda * degrees, phi * degrees];\n  };\n\n  projection.rotate = function(_) {\n    return arguments.length ? (deltaLambda = _[0] % 360 * radians, deltaPhi = _[1] % 360 * radians, deltaGamma = _.length > 2 ? _[2] % 360 * radians : 0, recenter()) : [deltaLambda * degrees, deltaPhi * degrees, deltaGamma * degrees];\n  };\n\n  projection.angle = function(_) {\n    return arguments.length ? (alpha = _ % 360 * radians, recenter()) : alpha * degrees;\n  };\n\n  projection.precision = function(_) {\n    return arguments.length ? (projectResample = resample(projectTransform, delta2 = _ * _), reset()) : sqrt(delta2);\n  };\n\n  projection.fitExtent = function(extent, object) {\n    return fitExtent(projection, extent, object);\n  };\n\n  projection.fitSize = function(size, object) {\n    return fitSize(projection, size, object);\n  };\n\n  projection.fitWidth = function(width, object) {\n    return fitWidth(projection, width, object);\n  };\n\n  projection.fitHeight = function(height, object) {\n    return fitHeight(projection, height, object);\n  };\n\n  function recenter() {\n    var center = scaleTranslateRotate(k, 0, 0, alpha).apply(null, project(lambda, phi)),\n        transform = (alpha ? scaleTranslateRotate : scaleTranslate)(k, x - center[0], y - center[1], alpha);\n    rotate = rotateRadians(deltaLambda, deltaPhi, deltaGamma);\n    projectTransform = compose(project, transform);\n    projectRotateTransform = compose(rotate, projectTransform);\n    projectResample = resample(projectTransform, delta2);\n    return reset();\n  }\n\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  return function() {\n    project = projectAt.apply(this, arguments);\n    projection.invert = project.invert && invert;\n    return recenter();\n  };\n}\n","import {degrees, pi, radians} from \"../math\";\nimport {projectionMutator} from \"./index\";\n\nexport function conicProjection(projectAt) {\n  var phi0 = 0,\n      phi1 = pi / 3,\n      m = projectionMutator(projectAt),\n      p = m(phi0, phi1);\n\n  p.parallels = function(_) {\n    return arguments.length ? m(phi0 = _[0] * radians, phi1 = _[1] * radians) : [phi0 * degrees, phi1 * degrees];\n  };\n\n  return p;\n}\n","import {abs, asin, atan2, cos, epsilon, sign, sin, sqrt} from \"../math\";\nimport {conicProjection} from \"./conic\";\nimport {cylindricalEqualAreaRaw} from \"./cylindricalEqualArea\";\n\nexport function conicEqualAreaRaw(y0, y1) {\n  var sy0 = sin(y0), n = (sy0 + sin(y1)) / 2;\n\n  // Are the parallels symmetrical around the Equator?\n  if (abs(n) < epsilon) return cylindricalEqualAreaRaw(y0);\n\n  var c = 1 + sy0 * (2 * n - sy0), r0 = sqrt(c) / n;\n\n  function project(x, y) {\n    var r = sqrt(c - 2 * n * sin(y)) / n;\n    return [r * sin(x *= n), r0 - r * cos(x)];\n  }\n\n  project.invert = function(x, y) {\n    var r0y = r0 - y;\n    return [atan2(x, abs(r0y)) / n * sign(r0y), asin((c - (x * x + r0y * r0y) * n * n) / (2 * n))];\n  };\n\n  return project;\n}\n\nexport default function() {\n  return conicProjection(conicEqualAreaRaw)\n      .scale(155.424)\n      .center([0, 33.6442]);\n}\n","import {asin, cos, sin} from \"../math\";\n\nexport function cylindricalEqualAreaRaw(phi0) {\n  var cosPhi0 = cos(phi0);\n\n  function forward(lambda, phi) {\n    return [lambda * cosPhi0, sin(phi) / cosPhi0];\n  }\n\n  forward.invert = function(x, y) {\n    return [x / cosPhi0, asin(y * cosPhi0)];\n  };\n\n  return forward;\n}\n","import conicEqualArea from \"./conicEqualArea\";\n\nexport default function() {\n  return conicEqualArea()\n      .parallels([29.5, 45.5])\n      .scale(1070)\n      .translate([480, 250])\n      .rotate([96, 0])\n      .center([-0.6, 38.7]);\n}\n","import {epsilon} from \"../math\";\nimport albers from \"./albers\";\nimport conicEqualArea from \"./conicEqualArea\";\nimport {fitExtent, fitSize, fitWidth, fitHeight} from \"./fit\";\n\n// The projections must have mutually exclusive clip regions on the sphere,\n// as this will avoid emitting interleaving lines and polygons.\nfunction multiplex(streams) {\n  var n = streams.length;\n  return {\n    point: function(x, y) { var i = -1; while (++i < n) streams[i].point(x, y); },\n    sphere: function() { var i = -1; while (++i < n) streams[i].sphere(); },\n    lineStart: function() { var i = -1; while (++i < n) streams[i].lineStart(); },\n    lineEnd: function() { var i = -1; while (++i < n) streams[i].lineEnd(); },\n    polygonStart: function() { var i = -1; while (++i < n) streams[i].polygonStart(); },\n    polygonEnd: function() { var i = -1; while (++i < n) streams[i].polygonEnd(); }\n  };\n}\n\n// A composite projection for the United States, configured by default for\n// 960×500. The projection also works quite well at 960×600 if you change the\n// scale to 1285 and adjust the translate accordingly. The set of standard\n// parallels for each region comes from USGS, which is published here:\n// http://egsc.usgs.gov/isb/pubs/MapProjections/projections.html#albers\nexport default function() {\n  var cache,\n      cacheStream,\n      lower48 = albers(), lower48Point,\n      alaska = conicEqualArea().rotate([154, 0]).center([-2, 58.5]).parallels([55, 65]), alaskaPoint, // EPSG:3338\n      hawaii = conicEqualArea().rotate([157, 0]).center([-3, 19.9]).parallels([8, 18]), hawaiiPoint, // ESRI:102007\n      point, pointStream = {point: function(x, y) { point = [x, y]; }};\n\n  function albersUsa(coordinates) {\n    var x = coordinates[0], y = coordinates[1];\n    return point = null,\n        (lower48Point.point(x, y), point)\n        || (alaskaPoint.point(x, y), point)\n        || (hawaiiPoint.point(x, y), point);\n  }\n\n  albersUsa.invert = function(coordinates) {\n    var k = lower48.scale(),\n        t = lower48.translate(),\n        x = (coordinates[0] - t[0]) / k,\n        y = (coordinates[1] - t[1]) / k;\n    return (y >= 0.120 && y < 0.234 && x >= -0.425 && x < -0.214 ? alaska\n        : y >= 0.166 && y < 0.234 && x >= -0.214 && x < -0.115 ? hawaii\n        : lower48).invert(coordinates);\n  };\n\n  albersUsa.stream = function(stream) {\n    return cache && cacheStream === stream ? cache : cache = multiplex([lower48.stream(cacheStream = stream), alaska.stream(stream), hawaii.stream(stream)]);\n  };\n\n  albersUsa.precision = function(_) {\n    if (!arguments.length) return lower48.precision();\n    lower48.precision(_), alaska.precision(_), hawaii.precision(_);\n    return reset();\n  };\n\n  albersUsa.scale = function(_) {\n    if (!arguments.length) return lower48.scale();\n    lower48.scale(_), alaska.scale(_ * 0.35), hawaii.scale(_);\n    return albersUsa.translate(lower48.translate());\n  };\n\n  albersUsa.translate = function(_) {\n    if (!arguments.length) return lower48.translate();\n    var k = lower48.scale(), x = +_[0], y = +_[1];\n\n    lower48Point = lower48\n        .translate(_)\n        .clipExtent([[x - 0.455 * k, y - 0.238 * k], [x + 0.455 * k, y + 0.238 * k]])\n        .stream(pointStream);\n\n    alaskaPoint = alaska\n        .translate([x - 0.307 * k, y + 0.201 * k])\n        .clipExtent([[x - 0.425 * k + epsilon, y + 0.120 * k + epsilon], [x - 0.214 * k - epsilon, y + 0.234 * k - epsilon]])\n        .stream(pointStream);\n\n    hawaiiPoint = hawaii\n        .translate([x - 0.205 * k, y + 0.212 * k])\n        .clipExtent([[x - 0.214 * k + epsilon, y + 0.166 * k + epsilon], [x - 0.115 * k - epsilon, y + 0.234 * k - epsilon]])\n        .stream(pointStream);\n\n    return reset();\n  };\n\n  albersUsa.fitExtent = function(extent, object) {\n    return fitExtent(albersUsa, extent, object);\n  };\n\n  albersUsa.fitSize = function(size, object) {\n    return fitSize(albersUsa, size, object);\n  };\n\n  albersUsa.fitWidth = function(width, object) {\n    return fitWidth(albersUsa, width, object);\n  };\n\n  albersUsa.fitHeight = function(height, object) {\n    return fitHeight(albersUsa, height, object);\n  };\n\n  function reset() {\n    cache = cacheStream = null;\n    return albersUsa;\n  }\n\n  return albersUsa.scale(1070);\n}\n","import {asin, atan2, cos, sin, sqrt} from \"../math\";\n\nexport function azimuthalRaw(scale) {\n  return function(x, y) {\n    var cx = cos(x),\n        cy = cos(y),\n        k = scale(cx * cy);\n    return [\n      k * cy * sin(x),\n      k * sin(y)\n    ];\n  }\n}\n\nexport function azimuthalInvert(angle) {\n  return function(x, y) {\n    var z = sqrt(x * x + y * y),\n        c = angle(z),\n        sc = sin(c),\n        cc = cos(c);\n    return [\n      atan2(x * sc, z * cc),\n      asin(z && y * sc / z)\n    ];\n  }\n}\n","import {asin, sqrt} from \"../math\";\nimport {azimuthalRaw, azimuthalInvert} from \"./azimuthal\";\nimport projection from \"./index\";\n\nexport var azimuthalEqualAreaRaw = azimuthalRaw(function(cxcy) {\n  return sqrt(2 / (1 + cxcy));\n});\n\nazimuthalEqualAreaRaw.invert = azimuthalInvert(function(z) {\n  return 2 * asin(z / 2);\n});\n\nexport default function() {\n  return projection(azimuthalEqualAreaRaw)\n      .scale(124.75)\n      .clipAngle(180 - 1e-3);\n}\n","import {acos, sin} from \"../math\";\nimport {azimuthalRaw, azimuthalInvert} from \"./azimuthal\";\nimport projection from \"./index\";\n\nexport var azimuthalEquidistantRaw = azimuthalRaw(function(c) {\n  return (c = acos(c)) && c / sin(c);\n});\n\nazimuthalEquidistantRaw.invert = azimuthalInvert(function(z) {\n  return z;\n});\n\nexport default function() {\n  return projection(azimuthalEquidistantRaw)\n      .scale(79.4188)\n      .clipAngle(180 - 1e-3);\n}\n","import {atan, exp, halfPi, log, pi, tan, tau} from \"../math\";\nimport rotation from \"../rotation\";\nimport projection from \"./index\";\n\nexport function mercatorRaw(lambda, phi) {\n  return [lambda, log(tan((halfPi + phi) / 2))];\n}\n\nmercatorRaw.invert = function(x, y) {\n  return [x, 2 * atan(exp(y)) - halfPi];\n};\n\nexport default function() {\n  return mercatorProjection(mercatorRaw)\n      .scale(961 / tau);\n}\n\nexport function mercatorProjection(project) {\n  var m = projection(project),\n      center = m.center,\n      scale = m.scale,\n      translate = m.translate,\n      clipExtent = m.clipExtent,\n      x0 = null, y0, x1, y1; // clip extent\n\n  m.scale = function(_) {\n    return arguments.length ? (scale(_), reclip()) : scale();\n  };\n\n  m.translate = function(_) {\n    return arguments.length ? (translate(_), reclip()) : translate();\n  };\n\n  m.center = function(_) {\n    return arguments.length ? (center(_), reclip()) : center();\n  };\n\n  m.clipExtent = function(_) {\n    return arguments.length ? ((_ == null ? x0 = y0 = x1 = y1 = null : (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1])), reclip()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n  };\n\n  function reclip() {\n    var k = pi * scale(),\n        t = m(rotation(m.rotate()).invert([0, 0]));\n    return clipExtent(x0 == null\n        ? [[t[0] - k, t[1] - k], [t[0] + k, t[1] + k]] : project === mercatorRaw\n        ? [[Math.max(t[0] - k, x0), y0], [Math.min(t[0] + k, x1), y1]]\n        : [[x0, Math.max(t[1] - k, y0)], [x1, Math.min(t[1] + k, y1)]]);\n  }\n\n  return reclip();\n}\n","import {abs, atan, atan2, cos, epsilon, halfPi, log, pow, sign, sin, sqrt, tan} from \"../math\";\nimport {conicProjection} from \"./conic\";\nimport {mercatorRaw} from \"./mercator\";\n\nfunction tany(y) {\n  return tan((halfPi + y) / 2);\n}\n\nexport function conicConformalRaw(y0, y1) {\n  var cy0 = cos(y0),\n      n = y0 === y1 ? sin(y0) : log(cy0 / cos(y1)) / log(tany(y1) / tany(y0)),\n      f = cy0 * pow(tany(y0), n) / n;\n\n  if (!n) return mercatorRaw;\n\n  function project(x, y) {\n    if (f > 0) { if (y < -halfPi + epsilon) y = -halfPi + epsilon; }\n    else { if (y > halfPi - epsilon) y = halfPi - epsilon; }\n    var r = f / pow(tany(y), n);\n    return [r * sin(n * x), f - r * cos(n * x)];\n  }\n\n  project.invert = function(x, y) {\n    var fy = f - y, r = sign(n) * sqrt(x * x + fy * fy);\n    return [atan2(x, abs(fy)) / n * sign(fy), 2 * atan(pow(f / r, 1 / n)) - halfPi];\n  };\n\n  return project;\n}\n\nexport default function() {\n  return conicProjection(conicConformalRaw)\n      .scale(109.5)\n      .parallels([30, 30]);\n}\n","import projection from \"./index\";\n\nexport function equirectangularRaw(lambda, phi) {\n  return [lambda, phi];\n}\n\nequirectangularRaw.invert = equirectangularRaw;\n\nexport default function() {\n  return projection(equirectangularRaw)\n      .scale(152.63);\n}\n","import {abs, atan2, cos, epsilon, sign, sin, sqrt} from \"../math\";\nimport {conicProjection} from \"./conic\";\nimport {equirectangularRaw} from \"./equirectangular\";\n\nexport function conicEquidistantRaw(y0, y1) {\n  var cy0 = cos(y0),\n      n = y0 === y1 ? sin(y0) : (cy0 - cos(y1)) / (y1 - y0),\n      g = cy0 / n + y0;\n\n  if (abs(n) < epsilon) return equirectangularRaw;\n\n  function project(x, y) {\n    var gy = g - y, nx = n * x;\n    return [gy * sin(nx), g - gy * cos(nx)];\n  }\n\n  project.invert = function(x, y) {\n    var gy = g - y;\n    return [atan2(x, abs(gy)) / n * sign(gy), g - sign(n) * sqrt(x * x + gy * gy)];\n  };\n\n  return project;\n}\n\nexport default function() {\n  return conicProjection(conicEquidistantRaw)\n      .scale(131.154)\n      .center([0, 13.9389]);\n}\n","import {atan, cos, sin} from \"../math\";\nimport {azimuthalInvert} from \"./azimuthal\";\nimport projection from \"./index\";\n\nexport function gnomonicRaw(x, y) {\n  var cy = cos(y), k = cos(x) * cy;\n  return [cy * sin(x) / k, sin(y) / k];\n}\n\ngnomonicRaw.invert = azimuthalInvert(atan);\n\nexport default function() {\n  return projection(gnomonicRaw)\n      .scale(144.049)\n      .clipAngle(60);\n}\n","import clipRectangle from \"../clip/rectangle\";\nimport identity from \"../identity\";\nimport {transformer} from \"../transform\";\nimport {fitExtent, fitSize, fitWidth, fitHeight} from \"./fit\";\n\nfunction scaleTranslate(kx, ky, tx, ty) {\n  return kx === 1 && ky === 1 && tx === 0 && ty === 0 ? identity : transformer({\n    point: function(x, y) {\n      this.stream.point(x * kx + tx, y * ky + ty);\n    }\n  });\n}\n\nexport default function() {\n  var k = 1, tx = 0, ty = 0, sx = 1, sy = 1, transform = identity, // scale, translate and reflect\n      x0 = null, y0, x1, y1, // clip extent\n      postclip = identity,\n      cache,\n      cacheStream,\n      projection;\n\n  function reset() {\n    cache = cacheStream = null;\n    return projection;\n  }\n\n  return projection = {\n    stream: function(stream) {\n      return cache && cacheStream === stream ? cache : cache = transform(postclip(cacheStream = stream));\n    },\n    postclip: function(_) {\n      return arguments.length ? (postclip = _, x0 = y0 = x1 = y1 = null, reset()) : postclip;\n    },\n    clipExtent: function(_) {\n      return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, identity) : clipRectangle(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];\n    },\n    scale: function(_) {\n      return arguments.length ? (transform = scaleTranslate((k = +_) * sx, k * sy, tx, ty), reset()) : k;\n    },\n    translate: function(_) {\n      return arguments.length ? (transform = scaleTranslate(k * sx, k * sy, tx = +_[0], ty = +_[1]), reset()) : [tx, ty];\n    },\n    reflectX: function(_) {\n      return arguments.length ? (transform = scaleTranslate(k * (sx = _ ? -1 : 1), k * sy, tx, ty), reset()) : sx < 0;\n    },\n    reflectY: function(_) {\n      return arguments.length ? (transform = scaleTranslate(k * sx, k * (sy = _ ? -1 : 1), tx, ty), reset()) : sy < 0;\n    },\n    fitExtent: function(extent, object) {\n      return fitExtent(projection, extent, object);\n    },\n    fitSize: function(size, object) {\n      return fitSize(projection, size, object);\n    },\n    fitWidth: function(width, object) {\n      return fitWidth(projection, width, object);\n    },\n    fitHeight: function(height, object) {\n      return fitHeight(projection, height, object);\n    }\n  };\n}\n","import projection from \"./index\";\nimport {abs, epsilon} from \"../math\";\n\nexport function naturalEarth1Raw(lambda, phi) {\n  var phi2 = phi * phi, phi4 = phi2 * phi2;\n  return [\n    lambda * (0.8707 - 0.131979 * phi2 + phi4 * (-0.013791 + phi4 * (0.003971 * phi2 - 0.001529 * phi4))),\n    phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4)))\n  ];\n}\n\nnaturalEarth1Raw.invert = function(x, y) {\n  var phi = y, i = 25, delta;\n  do {\n    var phi2 = phi * phi, phi4 = phi2 * phi2;\n    phi -= delta = (phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4))) - y) /\n        (1.007226 + phi2 * (0.015085 * 3 + phi4 * (-0.044475 * 7 + 0.028874 * 9 * phi2 - 0.005916 * 11 * phi4)));\n  } while (abs(delta) > epsilon && --i > 0);\n  return [\n    x / (0.8707 + (phi2 = phi * phi) * (-0.131979 + phi2 * (-0.013791 + phi2 * phi2 * phi2 * (0.003971 - 0.001529 * phi2)))),\n    phi\n  ];\n};\n\nexport default function() {\n  return projection(naturalEarth1Raw)\n      .scale(175.295);\n}\n","import {asin, cos, epsilon, sin} from \"../math\";\nimport {azimuthalInvert} from \"./azimuthal\";\nimport projection from \"./index\";\n\nexport function orthographicRaw(x, y) {\n  return [cos(y) * sin(x), sin(y)];\n}\n\northographicRaw.invert = azimuthalInvert(asin);\n\nexport default function() {\n  return projection(orthographicRaw)\n      .scale(249.5)\n      .clipAngle(90 + epsilon);\n}\n","import {atan, cos, sin} from \"../math\";\nimport {azimuthalInvert} from \"./azimuthal\";\nimport projection from \"./index\";\n\nexport function stereographicRaw(x, y) {\n  var cy = cos(y), k = 1 + cos(x) * cy;\n  return [cy * sin(x) / k, sin(y) / k];\n}\n\nstereographicRaw.invert = azimuthalInvert(function(z) {\n  return 2 * atan(z);\n});\n\nexport default function() {\n  return projection(stereographicRaw)\n      .scale(250)\n      .clipAngle(142);\n}\n","import {atan, exp, halfPi, log, tan} from \"../math\";\nimport {mercatorProjection} from \"./mercator\";\n\nexport function transverseMercatorRaw(lambda, phi) {\n  return [log(tan((halfPi + phi) / 2)), -lambda];\n}\n\ntransverseMercatorRaw.invert = function(x, y) {\n  return [-y, 2 * atan(exp(x)) - halfPi];\n};\n\nexport default function() {\n  var m = mercatorProjection(transverseMercatorRaw),\n      center = m.center,\n      rotate = m.rotate;\n\n  m.center = function(_) {\n    return arguments.length ? center([-_[1], _[0]]) : (_ = center(), [_[1], -_[0]]);\n  };\n\n  m.rotate = function(_) {\n    return arguments.length ? rotate([_[0], _[1], _.length > 2 ? _[2] + 90 : 90]) : (_ = rotate(), [_[0], _[1], _[2] - 90]);\n  };\n\n  return rotate([0, 0, 90])\n      .scale(159.155);\n}\n","function defaultSeparation(a, b) {\n  return a.parent === b.parent ? 1 : 2;\n}\n\nfunction meanX(children) {\n  return children.reduce(meanXReduce, 0) / children.length;\n}\n\nfunction meanXReduce(x, c) {\n  return x + c.x;\n}\n\nfunction maxY(children) {\n  return 1 + children.reduce(maxYReduce, 0);\n}\n\nfunction maxYReduce(y, c) {\n  return Math.max(y, c.y);\n}\n\nfunction leafLeft(node) {\n  var children;\n  while (children = node.children) node = children[0];\n  return node;\n}\n\nfunction leafRight(node) {\n  var children;\n  while (children = node.children) node = children[children.length - 1];\n  return node;\n}\n\nexport default function() {\n  var separation = defaultSeparation,\n      dx = 1,\n      dy = 1,\n      nodeSize = false;\n\n  function cluster(root) {\n    var previousNode,\n        x = 0;\n\n    // First walk, computing the initial x & y values.\n    root.eachAfter(function(node) {\n      var children = node.children;\n      if (children) {\n        node.x = meanX(children);\n        node.y = maxY(children);\n      } else {\n        node.x = previousNode ? x += separation(node, previousNode) : 0;\n        node.y = 0;\n        previousNode = node;\n      }\n    });\n\n    var left = leafLeft(root),\n        right = leafRight(root),\n        x0 = left.x - separation(left, right) / 2,\n        x1 = right.x + separation(right, left) / 2;\n\n    // Second walk, normalizing x & y to the desired size.\n    return root.eachAfter(nodeSize ? function(node) {\n      node.x = (node.x - root.x) * dx;\n      node.y = (root.y - node.y) * dy;\n    } : function(node) {\n      node.x = (node.x - x0) / (x1 - x0) * dx;\n      node.y = (1 - (root.y ? node.y / root.y : 1)) * dy;\n    });\n  }\n\n  cluster.separation = function(x) {\n    return arguments.length ? (separation = x, cluster) : separation;\n  };\n\n  cluster.size = function(x) {\n    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? null : [dx, dy]);\n  };\n\n  cluster.nodeSize = function(x) {\n    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], cluster) : (nodeSize ? [dx, dy] : null);\n  };\n\n  return cluster;\n}\n","function count(node) {\n  var sum = 0,\n      children = node.children,\n      i = children && children.length;\n  if (!i) sum = 1;\n  else while (--i >= 0) sum += children[i].value;\n  node.value = sum;\n}\n\nexport default function() {\n  return this.eachAfter(count);\n}\n","import node_count from \"./count\";\nimport node_each from \"./each\";\nimport node_eachBefore from \"./eachBefore\";\nimport node_eachAfter from \"./eachAfter\";\nimport node_sum from \"./sum\";\nimport node_sort from \"./sort\";\nimport node_path from \"./path\";\nimport node_ancestors from \"./ancestors\";\nimport node_descendants from \"./descendants\";\nimport node_leaves from \"./leaves\";\nimport node_links from \"./links\";\n\nexport default function hierarchy(data, children) {\n  var root = new Node(data),\n      valued = +data.value && (root.value = data.value),\n      node,\n      nodes = [root],\n      child,\n      childs,\n      i,\n      n;\n\n  if (children == null) children = defaultChildren;\n\n  while (node = nodes.pop()) {\n    if (valued) node.value = +node.data.value;\n    if ((childs = children(node.data)) && (n = childs.length)) {\n      node.children = new Array(n);\n      for (i = n - 1; i >= 0; --i) {\n        nodes.push(child = node.children[i] = new Node(childs[i]));\n        child.parent = node;\n        child.depth = node.depth + 1;\n      }\n    }\n  }\n\n  return root.eachBefore(computeHeight);\n}\n\nfunction node_copy() {\n  return hierarchy(this).eachBefore(copyData);\n}\n\nfunction defaultChildren(d) {\n  return d.children;\n}\n\nfunction copyData(node) {\n  node.data = node.data.data;\n}\n\nexport function computeHeight(node) {\n  var height = 0;\n  do node.height = height;\n  while ((node = node.parent) && (node.height < ++height));\n}\n\nexport function Node(data) {\n  this.data = data;\n  this.depth =\n  this.height = 0;\n  this.parent = null;\n}\n\nNode.prototype = hierarchy.prototype = {\n  constructor: Node,\n  count: node_count,\n  each: node_each,\n  eachAfter: node_eachAfter,\n  eachBefore: node_eachBefore,\n  sum: node_sum,\n  sort: node_sort,\n  path: node_path,\n  ancestors: node_ancestors,\n  descendants: node_descendants,\n  leaves: node_leaves,\n  links: node_links,\n  copy: node_copy\n};\n","export default function(callback) {\n  var node = this, current, next = [node], children, i, n;\n  do {\n    current = next.reverse(), next = [];\n    while (node = current.pop()) {\n      callback(node), children = node.children;\n      if (children) for (i = 0, n = children.length; i < n; ++i) {\n        next.push(children[i]);\n      }\n    }\n  } while (next.length);\n  return this;\n}\n","export default function(callback) {\n  var node = this, nodes = [node], next = [], children, i, n;\n  while (node = nodes.pop()) {\n    next.push(node), children = node.children;\n    if (children) for (i = 0, n = children.length; i < n; ++i) {\n      nodes.push(children[i]);\n    }\n  }\n  while (node = next.pop()) {\n    callback(node);\n  }\n  return this;\n}\n","export default function(callback) {\n  var node = this, nodes = [node], children, i;\n  while (node = nodes.pop()) {\n    callback(node), children = node.children;\n    if (children) for (i = children.length - 1; i >= 0; --i) {\n      nodes.push(children[i]);\n    }\n  }\n  return this;\n}\n","export default function(value) {\n  return this.eachAfter(function(node) {\n    var sum = +value(node.data) || 0,\n        children = node.children,\n        i = children && children.length;\n    while (--i >= 0) sum += children[i].value;\n    node.value = sum;\n  });\n}\n","export default function(compare) {\n  return this.eachBefore(function(node) {\n    if (node.children) {\n      node.children.sort(compare);\n    }\n  });\n}\n","export default function(end) {\n  var start = this,\n      ancestor = leastCommonAncestor(start, end),\n      nodes = [start];\n  while (start !== ancestor) {\n    start = start.parent;\n    nodes.push(start);\n  }\n  var k = nodes.length;\n  while (end !== ancestor) {\n    nodes.splice(k, 0, end);\n    end = end.parent;\n  }\n  return nodes;\n}\n\nfunction leastCommonAncestor(a, b) {\n  if (a === b) return a;\n  var aNodes = a.ancestors(),\n      bNodes = b.ancestors(),\n      c = null;\n  a = aNodes.pop();\n  b = bNodes.pop();\n  while (a === b) {\n    c = a;\n    a = aNodes.pop();\n    b = bNodes.pop();\n  }\n  return c;\n}\n","export default function() {\n  var node = this, nodes = [node];\n  while (node = node.parent) {\n    nodes.push(node);\n  }\n  return nodes;\n}\n","export default function() {\n  var nodes = [];\n  this.each(function(node) {\n    nodes.push(node);\n  });\n  return nodes;\n}\n","export default function() {\n  var leaves = [];\n  this.eachBefore(function(node) {\n    if (!node.children) {\n      leaves.push(node);\n    }\n  });\n  return leaves;\n}\n","export default function() {\n  var root = this, links = [];\n  root.each(function(node) {\n    if (node !== root) { // Don’t include the root’s parent, if any.\n      links.push({source: node.parent, target: node});\n    }\n  });\n  return links;\n}\n","export var slice = Array.prototype.slice;\n\nexport function shuffle(array) {\n  var m = array.length,\n      t,\n      i;\n\n  while (m) {\n    i = Math.random() * m-- | 0;\n    t = array[m];\n    array[m] = array[i];\n    array[i] = t;\n  }\n\n  return array;\n}\n","import {shuffle, slice} from \"../array\";\n\nexport default function(circles) {\n  var i = 0, n = (circles = shuffle(slice.call(circles))).length, B = [], p, e;\n\n  while (i < n) {\n    p = circles[i];\n    if (e && enclosesWeak(e, p)) ++i;\n    else e = encloseBasis(B = extendBasis(B, p)), i = 0;\n  }\n\n  return e;\n}\n\nfunction extendBasis(B, p) {\n  var i, j;\n\n  if (enclosesWeakAll(p, B)) return [p];\n\n  // If we get here then B must have at least one element.\n  for (i = 0; i < B.length; ++i) {\n    if (enclosesNot(p, B[i])\n        && enclosesWeakAll(encloseBasis2(B[i], p), B)) {\n      return [B[i], p];\n    }\n  }\n\n  // If we get here then B must have at least two elements.\n  for (i = 0; i < B.length - 1; ++i) {\n    for (j = i + 1; j < B.length; ++j) {\n      if (enclosesNot(encloseBasis2(B[i], B[j]), p)\n          && enclosesNot(encloseBasis2(B[i], p), B[j])\n          && enclosesNot(encloseBasis2(B[j], p), B[i])\n          && enclosesWeakAll(encloseBasis3(B[i], B[j], p), B)) {\n        return [B[i], B[j], p];\n      }\n    }\n  }\n\n  // If we get here then something is very wrong.\n  throw new Error;\n}\n\nfunction enclosesNot(a, b) {\n  var dr = a.r - b.r, dx = b.x - a.x, dy = b.y - a.y;\n  return dr < 0 || dr * dr < dx * dx + dy * dy;\n}\n\nfunction enclosesWeak(a, b) {\n  var dr = a.r - b.r + 1e-6, dx = b.x - a.x, dy = b.y - a.y;\n  return dr > 0 && dr * dr > dx * dx + dy * dy;\n}\n\nfunction enclosesWeakAll(a, B) {\n  for (var i = 0; i < B.length; ++i) {\n    if (!enclosesWeak(a, B[i])) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction encloseBasis(B) {\n  switch (B.length) {\n    case 1: return encloseBasis1(B[0]);\n    case 2: return encloseBasis2(B[0], B[1]);\n    case 3: return encloseBasis3(B[0], B[1], B[2]);\n  }\n}\n\nfunction encloseBasis1(a) {\n  return {\n    x: a.x,\n    y: a.y,\n    r: a.r\n  };\n}\n\nfunction encloseBasis2(a, b) {\n  var x1 = a.x, y1 = a.y, r1 = a.r,\n      x2 = b.x, y2 = b.y, r2 = b.r,\n      x21 = x2 - x1, y21 = y2 - y1, r21 = r2 - r1,\n      l = Math.sqrt(x21 * x21 + y21 * y21);\n  return {\n    x: (x1 + x2 + x21 / l * r21) / 2,\n    y: (y1 + y2 + y21 / l * r21) / 2,\n    r: (l + r1 + r2) / 2\n  };\n}\n\nfunction encloseBasis3(a, b, c) {\n  var x1 = a.x, y1 = a.y, r1 = a.r,\n      x2 = b.x, y2 = b.y, r2 = b.r,\n      x3 = c.x, y3 = c.y, r3 = c.r,\n      a2 = x1 - x2,\n      a3 = x1 - x3,\n      b2 = y1 - y2,\n      b3 = y1 - y3,\n      c2 = r2 - r1,\n      c3 = r3 - r1,\n      d1 = x1 * x1 + y1 * y1 - r1 * r1,\n      d2 = d1 - x2 * x2 - y2 * y2 + r2 * r2,\n      d3 = d1 - x3 * x3 - y3 * y3 + r3 * r3,\n      ab = a3 * b2 - a2 * b3,\n      xa = (b2 * d3 - b3 * d2) / (ab * 2) - x1,\n      xb = (b3 * c2 - b2 * c3) / ab,\n      ya = (a3 * d2 - a2 * d3) / (ab * 2) - y1,\n      yb = (a2 * c3 - a3 * c2) / ab,\n      A = xb * xb + yb * yb - 1,\n      B = 2 * (r1 + xa * xb + ya * yb),\n      C = xa * xa + ya * ya - r1 * r1,\n      r = -(A ? (B + Math.sqrt(B * B - 4 * A * C)) / (2 * A) : C / B);\n  return {\n    x: x1 + xa + xb * r,\n    y: y1 + ya + yb * r,\n    r: r\n  };\n}\n","import enclose from \"./enclose\";\n\nfunction place(b, a, c) {\n  var dx = b.x - a.x, x, a2,\n      dy = b.y - a.y, y, b2,\n      d2 = dx * dx + dy * dy;\n  if (d2) {\n    a2 = a.r + c.r, a2 *= a2;\n    b2 = b.r + c.r, b2 *= b2;\n    if (a2 > b2) {\n      x = (d2 + b2 - a2) / (2 * d2);\n      y = Math.sqrt(Math.max(0, b2 / d2 - x * x));\n      c.x = b.x - x * dx - y * dy;\n      c.y = b.y - x * dy + y * dx;\n    } else {\n      x = (d2 + a2 - b2) / (2 * d2);\n      y = Math.sqrt(Math.max(0, a2 / d2 - x * x));\n      c.x = a.x + x * dx - y * dy;\n      c.y = a.y + x * dy + y * dx;\n    }\n  } else {\n    c.x = a.x + c.r;\n    c.y = a.y;\n  }\n}\n\nfunction intersects(a, b) {\n  var dr = a.r + b.r - 1e-6, dx = b.x - a.x, dy = b.y - a.y;\n  return dr > 0 && dr * dr > dx * dx + dy * dy;\n}\n\nfunction score(node) {\n  var a = node._,\n      b = node.next._,\n      ab = a.r + b.r,\n      dx = (a.x * b.r + b.x * a.r) / ab,\n      dy = (a.y * b.r + b.y * a.r) / ab;\n  return dx * dx + dy * dy;\n}\n\nfunction Node(circle) {\n  this._ = circle;\n  this.next = null;\n  this.previous = null;\n}\n\nexport function packEnclose(circles) {\n  if (!(n = circles.length)) return 0;\n\n  var a, b, c, n, aa, ca, i, j, k, sj, sk;\n\n  // Place the first circle.\n  a = circles[0], a.x = 0, a.y = 0;\n  if (!(n > 1)) return a.r;\n\n  // Place the second circle.\n  b = circles[1], a.x = -b.r, b.x = a.r, b.y = 0;\n  if (!(n > 2)) return a.r + b.r;\n\n  // Place the third circle.\n  place(b, a, c = circles[2]);\n\n  // Initialize the front-chain using the first three circles a, b and c.\n  a = new Node(a), b = new Node(b), c = new Node(c);\n  a.next = c.previous = b;\n  b.next = a.previous = c;\n  c.next = b.previous = a;\n\n  // Attempt to place each remaining circle…\n  pack: for (i = 3; i < n; ++i) {\n    place(a._, b._, c = circles[i]), c = new Node(c);\n\n    // Find the closest intersecting circle on the front-chain, if any.\n    // “Closeness” is determined by linear distance along the front-chain.\n    // “Ahead” or “behind” is likewise determined by linear distance.\n    j = b.next, k = a.previous, sj = b._.r, sk = a._.r;\n    do {\n      if (sj <= sk) {\n        if (intersects(j._, c._)) {\n          b = j, a.next = b, b.previous = a, --i;\n          continue pack;\n        }\n        sj += j._.r, j = j.next;\n      } else {\n        if (intersects(k._, c._)) {\n          a = k, a.next = b, b.previous = a, --i;\n          continue pack;\n        }\n        sk += k._.r, k = k.previous;\n      }\n    } while (j !== k.next);\n\n    // Success! Insert the new circle c between a and b.\n    c.previous = a, c.next = b, a.next = b.previous = b = c;\n\n    // Compute the new closest circle pair to the centroid.\n    aa = score(a);\n    while ((c = c.next) !== b) {\n      if ((ca = score(c)) < aa) {\n        a = c, aa = ca;\n      }\n    }\n    b = a.next;\n  }\n\n  // Compute the enclosing circle of the front chain.\n  a = [b._], c = b; while ((c = c.next) !== b) a.push(c._); c = enclose(a);\n\n  // Translate the circles to put the enclosing circle around the origin.\n  for (i = 0; i < n; ++i) a = circles[i], a.x -= c.x, a.y -= c.y;\n\n  return c.r;\n}\n\nexport default function(circles) {\n  packEnclose(circles);\n  return circles;\n}\n","export function optional(f) {\n  return f == null ? null : required(f);\n}\n\nexport function required(f) {\n  if (typeof f !== \"function\") throw new Error;\n  return f;\n}\n","export function constantZero() {\n  return 0;\n}\n\nexport default function(x) {\n  return function() {\n    return x;\n  };\n}\n","import {packEnclose} from \"./siblings\";\nimport {optional} from \"../accessors\";\nimport constant, {constantZero} from \"../constant\";\n\nfunction defaultRadius(d) {\n  return Math.sqrt(d.value);\n}\n\nexport default function() {\n  var radius = null,\n      dx = 1,\n      dy = 1,\n      padding = constantZero;\n\n  function pack(root) {\n    root.x = dx / 2, root.y = dy / 2;\n    if (radius) {\n      root.eachBefore(radiusLeaf(radius))\n          .eachAfter(packChildren(padding, 0.5))\n          .eachBefore(translateChild(1));\n    } else {\n      root.eachBefore(radiusLeaf(defaultRadius))\n          .eachAfter(packChildren(constantZero, 1))\n          .eachAfter(packChildren(padding, root.r / Math.min(dx, dy)))\n          .eachBefore(translateChild(Math.min(dx, dy) / (2 * root.r)));\n    }\n    return root;\n  }\n\n  pack.radius = function(x) {\n    return arguments.length ? (radius = optional(x), pack) : radius;\n  };\n\n  pack.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], pack) : [dx, dy];\n  };\n\n  pack.padding = function(x) {\n    return arguments.length ? (padding = typeof x === \"function\" ? x : constant(+x), pack) : padding;\n  };\n\n  return pack;\n}\n\nfunction radiusLeaf(radius) {\n  return function(node) {\n    if (!node.children) {\n      node.r = Math.max(0, +radius(node) || 0);\n    }\n  };\n}\n\nfunction packChildren(padding, k) {\n  return function(node) {\n    if (children = node.children) {\n      var children,\n          i,\n          n = children.length,\n          r = padding(node) * k || 0,\n          e;\n\n      if (r) for (i = 0; i < n; ++i) children[i].r += r;\n      e = packEnclose(children);\n      if (r) for (i = 0; i < n; ++i) children[i].r -= r;\n      node.r = e + r;\n    }\n  };\n}\n\nfunction translateChild(k) {\n  return function(node) {\n    var parent = node.parent;\n    node.r *= k;\n    if (parent) {\n      node.x = parent.x + k * node.x;\n      node.y = parent.y + k * node.y;\n    }\n  };\n}\n","export default function(node) {\n  node.x0 = Math.round(node.x0);\n  node.y0 = Math.round(node.y0);\n  node.x1 = Math.round(node.x1);\n  node.y1 = Math.round(node.y1);\n}\n","export default function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      node,\n      i = -1,\n      n = nodes.length,\n      k = parent.value && (x1 - x0) / parent.value;\n\n  while (++i < n) {\n    node = nodes[i], node.y0 = y0, node.y1 = y1;\n    node.x0 = x0, node.x1 = x0 += node.value * k;\n  }\n}\n","import roundNode from \"./treemap/round\";\nimport treemapDice from \"./treemap/dice\";\n\nexport default function() {\n  var dx = 1,\n      dy = 1,\n      padding = 0,\n      round = false;\n\n  function partition(root) {\n    var n = root.height + 1;\n    root.x0 =\n    root.y0 = padding;\n    root.x1 = dx;\n    root.y1 = dy / n;\n    root.eachBefore(positionNode(dy, n));\n    if (round) root.eachBefore(roundNode);\n    return root;\n  }\n\n  function positionNode(dy, n) {\n    return function(node) {\n      if (node.children) {\n        treemapDice(node, node.x0, dy * (node.depth + 1) / n, node.x1, dy * (node.depth + 2) / n);\n      }\n      var x0 = node.x0,\n          y0 = node.y0,\n          x1 = node.x1 - padding,\n          y1 = node.y1 - padding;\n      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n      node.x0 = x0;\n      node.y0 = y0;\n      node.x1 = x1;\n      node.y1 = y1;\n    };\n  }\n\n  partition.round = function(x) {\n    return arguments.length ? (round = !!x, partition) : round;\n  };\n\n  partition.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], partition) : [dx, dy];\n  };\n\n  partition.padding = function(x) {\n    return arguments.length ? (padding = +x, partition) : padding;\n  };\n\n  return partition;\n}\n","import {required} from \"./accessors\";\nimport {Node, computeHeight} from \"./hierarchy/index\";\n\nvar keyPrefix = \"$\", // Protect against keys like “__proto__”.\n    preroot = {depth: -1},\n    ambiguous = {};\n\nfunction defaultId(d) {\n  return d.id;\n}\n\nfunction defaultParentId(d) {\n  return d.parentId;\n}\n\nexport default function() {\n  var id = defaultId,\n      parentId = defaultParentId;\n\n  function stratify(data) {\n    var d,\n        i,\n        n = data.length,\n        root,\n        parent,\n        node,\n        nodes = new Array(n),\n        nodeId,\n        nodeKey,\n        nodeByKey = {};\n\n    for (i = 0; i < n; ++i) {\n      d = data[i], node = nodes[i] = new Node(d);\n      if ((nodeId = id(d, i, data)) != null && (nodeId += \"\")) {\n        nodeKey = keyPrefix + (node.id = nodeId);\n        nodeByKey[nodeKey] = nodeKey in nodeByKey ? ambiguous : node;\n      }\n    }\n\n    for (i = 0; i < n; ++i) {\n      node = nodes[i], nodeId = parentId(data[i], i, data);\n      if (nodeId == null || !(nodeId += \"\")) {\n        if (root) throw new Error(\"multiple roots\");\n        root = node;\n      } else {\n        parent = nodeByKey[keyPrefix + nodeId];\n        if (!parent) throw new Error(\"missing: \" + nodeId);\n        if (parent === ambiguous) throw new Error(\"ambiguous: \" + nodeId);\n        if (parent.children) parent.children.push(node);\n        else parent.children = [node];\n        node.parent = parent;\n      }\n    }\n\n    if (!root) throw new Error(\"no root\");\n    root.parent = preroot;\n    root.eachBefore(function(node) { node.depth = node.parent.depth + 1; --n; }).eachBefore(computeHeight);\n    root.parent = null;\n    if (n > 0) throw new Error(\"cycle\");\n\n    return root;\n  }\n\n  stratify.id = function(x) {\n    return arguments.length ? (id = required(x), stratify) : id;\n  };\n\n  stratify.parentId = function(x) {\n    return arguments.length ? (parentId = required(x), stratify) : parentId;\n  };\n\n  return stratify;\n}\n","import {Node} from \"./hierarchy/index\";\n\nfunction defaultSeparation(a, b) {\n  return a.parent === b.parent ? 1 : 2;\n}\n\n// function radialSeparation(a, b) {\n//   return (a.parent === b.parent ? 1 : 2) / a.depth;\n// }\n\n// This function is used to traverse the left contour of a subtree (or\n// subforest). It returns the successor of v on this contour. This successor is\n// either given by the leftmost child of v or by the thread of v. The function\n// returns null if and only if v is on the highest level of its subtree.\nfunction nextLeft(v) {\n  var children = v.children;\n  return children ? children[0] : v.t;\n}\n\n// This function works analogously to nextLeft.\nfunction nextRight(v) {\n  var children = v.children;\n  return children ? children[children.length - 1] : v.t;\n}\n\n// Shifts the current subtree rooted at w+. This is done by increasing\n// prelim(w+) and mod(w+) by shift.\nfunction moveSubtree(wm, wp, shift) {\n  var change = shift / (wp.i - wm.i);\n  wp.c -= change;\n  wp.s += shift;\n  wm.c += change;\n  wp.z += shift;\n  wp.m += shift;\n}\n\n// All other shifts, applied to the smaller subtrees between w- and w+, are\n// performed by this function. To prepare the shifts, we have to adjust\n// change(w+), shift(w+), and change(w-).\nfunction executeShifts(v) {\n  var shift = 0,\n      change = 0,\n      children = v.children,\n      i = children.length,\n      w;\n  while (--i >= 0) {\n    w = children[i];\n    w.z += shift;\n    w.m += shift;\n    shift += w.s + (change += w.c);\n  }\n}\n\n// If vi-’s ancestor is a sibling of v, returns vi-’s ancestor. Otherwise,\n// returns the specified (default) ancestor.\nfunction nextAncestor(vim, v, ancestor) {\n  return vim.a.parent === v.parent ? vim.a : ancestor;\n}\n\nfunction TreeNode(node, i) {\n  this._ = node;\n  this.parent = null;\n  this.children = null;\n  this.A = null; // default ancestor\n  this.a = this; // ancestor\n  this.z = 0; // prelim\n  this.m = 0; // mod\n  this.c = 0; // change\n  this.s = 0; // shift\n  this.t = null; // thread\n  this.i = i; // number\n}\n\nTreeNode.prototype = Object.create(Node.prototype);\n\nfunction treeRoot(root) {\n  var tree = new TreeNode(root, 0),\n      node,\n      nodes = [tree],\n      child,\n      children,\n      i,\n      n;\n\n  while (node = nodes.pop()) {\n    if (children = node._.children) {\n      node.children = new Array(n = children.length);\n      for (i = n - 1; i >= 0; --i) {\n        nodes.push(child = node.children[i] = new TreeNode(children[i], i));\n        child.parent = node;\n      }\n    }\n  }\n\n  (tree.parent = new TreeNode(null, 0)).children = [tree];\n  return tree;\n}\n\n// Node-link tree diagram using the Reingold-Tilford \"tidy\" algorithm\nexport default function() {\n  var separation = defaultSeparation,\n      dx = 1,\n      dy = 1,\n      nodeSize = null;\n\n  function tree(root) {\n    var t = treeRoot(root);\n\n    // Compute the layout using Buchheim et al.’s algorithm.\n    t.eachAfter(firstWalk), t.parent.m = -t.z;\n    t.eachBefore(secondWalk);\n\n    // If a fixed node size is specified, scale x and y.\n    if (nodeSize) root.eachBefore(sizeNode);\n\n    // If a fixed tree size is specified, scale x and y based on the extent.\n    // Compute the left-most, right-most, and depth-most nodes for extents.\n    else {\n      var left = root,\n          right = root,\n          bottom = root;\n      root.eachBefore(function(node) {\n        if (node.x < left.x) left = node;\n        if (node.x > right.x) right = node;\n        if (node.depth > bottom.depth) bottom = node;\n      });\n      var s = left === right ? 1 : separation(left, right) / 2,\n          tx = s - left.x,\n          kx = dx / (right.x + s + tx),\n          ky = dy / (bottom.depth || 1);\n      root.eachBefore(function(node) {\n        node.x = (node.x + tx) * kx;\n        node.y = node.depth * ky;\n      });\n    }\n\n    return root;\n  }\n\n  // Computes a preliminary x-coordinate for v. Before that, FIRST WALK is\n  // applied recursively to the children of v, as well as the function\n  // APPORTION. After spacing out the children by calling EXECUTE SHIFTS, the\n  // node v is placed to the midpoint of its outermost children.\n  function firstWalk(v) {\n    var children = v.children,\n        siblings = v.parent.children,\n        w = v.i ? siblings[v.i - 1] : null;\n    if (children) {\n      executeShifts(v);\n      var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n      if (w) {\n        v.z = w.z + separation(v._, w._);\n        v.m = v.z - midpoint;\n      } else {\n        v.z = midpoint;\n      }\n    } else if (w) {\n      v.z = w.z + separation(v._, w._);\n    }\n    v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n  }\n\n  // Computes all real x-coordinates by summing up the modifiers recursively.\n  function secondWalk(v) {\n    v._.x = v.z + v.parent.m;\n    v.m += v.parent.m;\n  }\n\n  // The core of the algorithm. Here, a new subtree is combined with the\n  // previous subtrees. Threads are used to traverse the inside and outside\n  // contours of the left and right subtree up to the highest common level. The\n  // vertices used for the traversals are vi+, vi-, vo-, and vo+, where the\n  // superscript o means outside and i means inside, the subscript - means left\n  // subtree and + means right subtree. For summing up the modifiers along the\n  // contour, we use respective variables si+, si-, so-, and so+. Whenever two\n  // nodes of the inside contours conflict, we compute the left one of the\n  // greatest uncommon ancestors using the function ANCESTOR and call MOVE\n  // SUBTREE to shift the subtree and prepare the shifts of smaller subtrees.\n  // Finally, we add a new thread (if necessary).\n  function apportion(v, w, ancestor) {\n    if (w) {\n      var vip = v,\n          vop = v,\n          vim = w,\n          vom = vip.parent.children[0],\n          sip = vip.m,\n          sop = vop.m,\n          sim = vim.m,\n          som = vom.m,\n          shift;\n      while (vim = nextRight(vim), vip = nextLeft(vip), vim && vip) {\n        vom = nextLeft(vom);\n        vop = nextRight(vop);\n        vop.a = v;\n        shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n        if (shift > 0) {\n          moveSubtree(nextAncestor(vim, v, ancestor), v, shift);\n          sip += shift;\n          sop += shift;\n        }\n        sim += vim.m;\n        sip += vip.m;\n        som += vom.m;\n        sop += vop.m;\n      }\n      if (vim && !nextRight(vop)) {\n        vop.t = vim;\n        vop.m += sim - sop;\n      }\n      if (vip && !nextLeft(vom)) {\n        vom.t = vip;\n        vom.m += sip - som;\n        ancestor = v;\n      }\n    }\n    return ancestor;\n  }\n\n  function sizeNode(node) {\n    node.x *= dx;\n    node.y = node.depth * dy;\n  }\n\n  tree.separation = function(x) {\n    return arguments.length ? (separation = x, tree) : separation;\n  };\n\n  tree.size = function(x) {\n    return arguments.length ? (nodeSize = false, dx = +x[0], dy = +x[1], tree) : (nodeSize ? null : [dx, dy]);\n  };\n\n  tree.nodeSize = function(x) {\n    return arguments.length ? (nodeSize = true, dx = +x[0], dy = +x[1], tree) : (nodeSize ? [dx, dy] : null);\n  };\n\n  return tree;\n}\n","export default function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      node,\n      i = -1,\n      n = nodes.length,\n      k = parent.value && (y1 - y0) / parent.value;\n\n  while (++i < n) {\n    node = nodes[i], node.x0 = x0, node.x1 = x1;\n    node.y0 = y0, node.y1 = y0 += node.value * k;\n  }\n}\n","import treemapDice from \"./dice\";\nimport treemapSlice from \"./slice\";\n\nexport var phi = (1 + Math.sqrt(5)) / 2;\n\nexport function squarifyRatio(ratio, parent, x0, y0, x1, y1) {\n  var rows = [],\n      nodes = parent.children,\n      row,\n      nodeValue,\n      i0 = 0,\n      i1 = 0,\n      n = nodes.length,\n      dx, dy,\n      value = parent.value,\n      sumValue,\n      minValue,\n      maxValue,\n      newRatio,\n      minRatio,\n      alpha,\n      beta;\n\n  while (i0 < n) {\n    dx = x1 - x0, dy = y1 - y0;\n\n    // Find the next non-empty node.\n    do sumValue = nodes[i1++].value; while (!sumValue && i1 < n);\n    minValue = maxValue = sumValue;\n    alpha = Math.max(dy / dx, dx / dy) / (value * ratio);\n    beta = sumValue * sumValue * alpha;\n    minRatio = Math.max(maxValue / beta, beta / minValue);\n\n    // Keep adding nodes while the aspect ratio maintains or improves.\n    for (; i1 < n; ++i1) {\n      sumValue += nodeValue = nodes[i1].value;\n      if (nodeValue < minValue) minValue = nodeValue;\n      if (nodeValue > maxValue) maxValue = nodeValue;\n      beta = sumValue * sumValue * alpha;\n      newRatio = Math.max(maxValue / beta, beta / minValue);\n      if (newRatio > minRatio) { sumValue -= nodeValue; break; }\n      minRatio = newRatio;\n    }\n\n    // Position and record the row orientation.\n    rows.push(row = {value: sumValue, dice: dx < dy, children: nodes.slice(i0, i1)});\n    if (row.dice) treemapDice(row, x0, y0, x1, value ? y0 += dy * sumValue / value : y1);\n    else treemapSlice(row, x0, y0, value ? x0 += dx * sumValue / value : x1, y1);\n    value -= sumValue, i0 = i1;\n  }\n\n  return rows;\n}\n\nexport default (function custom(ratio) {\n\n  function squarify(parent, x0, y0, x1, y1) {\n    squarifyRatio(ratio, parent, x0, y0, x1, y1);\n  }\n\n  squarify.ratio = function(x) {\n    return custom((x = +x) > 1 ? x : 1);\n  };\n\n  return squarify;\n})(phi);\n","import roundNode from \"./round\";\nimport squarify from \"./squarify\";\nimport {required} from \"../accessors\";\nimport constant, {constantZero} from \"../constant\";\n\nexport default function() {\n  var tile = squarify,\n      round = false,\n      dx = 1,\n      dy = 1,\n      paddingStack = [0],\n      paddingInner = constantZero,\n      paddingTop = constantZero,\n      paddingRight = constantZero,\n      paddingBottom = constantZero,\n      paddingLeft = constantZero;\n\n  function treemap(root) {\n    root.x0 =\n    root.y0 = 0;\n    root.x1 = dx;\n    root.y1 = dy;\n    root.eachBefore(positionNode);\n    paddingStack = [0];\n    if (round) root.eachBefore(roundNode);\n    return root;\n  }\n\n  function positionNode(node) {\n    var p = paddingStack[node.depth],\n        x0 = node.x0 + p,\n        y0 = node.y0 + p,\n        x1 = node.x1 - p,\n        y1 = node.y1 - p;\n    if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n    if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n    node.x0 = x0;\n    node.y0 = y0;\n    node.x1 = x1;\n    node.y1 = y1;\n    if (node.children) {\n      p = paddingStack[node.depth + 1] = paddingInner(node) / 2;\n      x0 += paddingLeft(node) - p;\n      y0 += paddingTop(node) - p;\n      x1 -= paddingRight(node) - p;\n      y1 -= paddingBottom(node) - p;\n      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n      tile(node, x0, y0, x1, y1);\n    }\n  }\n\n  treemap.round = function(x) {\n    return arguments.length ? (round = !!x, treemap) : round;\n  };\n\n  treemap.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], treemap) : [dx, dy];\n  };\n\n  treemap.tile = function(x) {\n    return arguments.length ? (tile = required(x), treemap) : tile;\n  };\n\n  treemap.padding = function(x) {\n    return arguments.length ? treemap.paddingInner(x).paddingOuter(x) : treemap.paddingInner();\n  };\n\n  treemap.paddingInner = function(x) {\n    return arguments.length ? (paddingInner = typeof x === \"function\" ? x : constant(+x), treemap) : paddingInner;\n  };\n\n  treemap.paddingOuter = function(x) {\n    return arguments.length ? treemap.paddingTop(x).paddingRight(x).paddingBottom(x).paddingLeft(x) : treemap.paddingTop();\n  };\n\n  treemap.paddingTop = function(x) {\n    return arguments.length ? (paddingTop = typeof x === \"function\" ? x : constant(+x), treemap) : paddingTop;\n  };\n\n  treemap.paddingRight = function(x) {\n    return arguments.length ? (paddingRight = typeof x === \"function\" ? x : constant(+x), treemap) : paddingRight;\n  };\n\n  treemap.paddingBottom = function(x) {\n    return arguments.length ? (paddingBottom = typeof x === \"function\" ? x : constant(+x), treemap) : paddingBottom;\n  };\n\n  treemap.paddingLeft = function(x) {\n    return arguments.length ? (paddingLeft = typeof x === \"function\" ? x : constant(+x), treemap) : paddingLeft;\n  };\n\n  return treemap;\n}\n","export default function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      i, n = nodes.length,\n      sum, sums = new Array(n + 1);\n\n  for (sums[0] = sum = i = 0; i < n; ++i) {\n    sums[i + 1] = sum += nodes[i].value;\n  }\n\n  partition(0, n, parent.value, x0, y0, x1, y1);\n\n  function partition(i, j, value, x0, y0, x1, y1) {\n    if (i >= j - 1) {\n      var node = nodes[i];\n      node.x0 = x0, node.y0 = y0;\n      node.x1 = x1, node.y1 = y1;\n      return;\n    }\n\n    var valueOffset = sums[i],\n        valueTarget = (value / 2) + valueOffset,\n        k = i + 1,\n        hi = j - 1;\n\n    while (k < hi) {\n      var mid = k + hi >>> 1;\n      if (sums[mid] < valueTarget) k = mid + 1;\n      else hi = mid;\n    }\n\n    if ((valueTarget - sums[k - 1]) < (sums[k] - valueTarget) && i + 1 < k) --k;\n\n    var valueLeft = sums[k] - valueOffset,\n        valueRight = value - valueLeft;\n\n    if ((x1 - x0) > (y1 - y0)) {\n      var xk = (x0 * valueRight + x1 * valueLeft) / value;\n      partition(i, k, valueLeft, x0, y0, xk, y1);\n      partition(k, j, valueRight, xk, y0, x1, y1);\n    } else {\n      var yk = (y0 * valueRight + y1 * valueLeft) / value;\n      partition(i, k, valueLeft, x0, y0, x1, yk);\n      partition(k, j, valueRight, x0, yk, x1, y1);\n    }\n  }\n}\n","import dice from \"./dice\";\nimport slice from \"./slice\";\n\nexport default function(parent, x0, y0, x1, y1) {\n  (parent.depth & 1 ? slice : dice)(parent, x0, y0, x1, y1);\n}\n","import treemapDice from \"./dice\";\nimport treemapSlice from \"./slice\";\nimport {phi, squarifyRatio} from \"./squarify\";\n\nexport default (function custom(ratio) {\n\n  function resquarify(parent, x0, y0, x1, y1) {\n    if ((rows = parent._squarify) && (rows.ratio === ratio)) {\n      var rows,\n          row,\n          nodes,\n          i,\n          j = -1,\n          n,\n          m = rows.length,\n          value = parent.value;\n\n      while (++j < m) {\n        row = rows[j], nodes = row.children;\n        for (i = row.value = 0, n = nodes.length; i < n; ++i) row.value += nodes[i].value;\n        if (row.dice) treemapDice(row, x0, y0, x1, y0 += (y1 - y0) * row.value / value);\n        else treemapSlice(row, x0, y0, x0 += (x1 - x0) * row.value / value, y1);\n        value -= row.value;\n      }\n    } else {\n      parent._squarify = rows = squarifyRatio(ratio, parent, x0, y0, x1, y1);\n      rows.ratio = ratio;\n    }\n  }\n\n  resquarify.ratio = function(x) {\n    return custom((x = +x) > 1 ? x : 1);\n  };\n\n  return resquarify;\n})(phi);\n","export default function(polygon) {\n  var i = -1,\n      n = polygon.length,\n      a,\n      b = polygon[n - 1],\n      area = 0;\n\n  while (++i < n) {\n    a = b;\n    b = polygon[i];\n    area += a[1] * b[0] - a[0] * b[1];\n  }\n\n  return area / 2;\n}\n","export default function(polygon) {\n  var i = -1,\n      n = polygon.length,\n      x = 0,\n      y = 0,\n      a,\n      b = polygon[n - 1],\n      c,\n      k = 0;\n\n  while (++i < n) {\n    a = b;\n    b = polygon[i];\n    k += c = a[0] * b[1] - b[0] * a[1];\n    x += (a[0] + b[0]) * c;\n    y += (a[1] + b[1]) * c;\n  }\n\n  return k *= 3, [x / k, y / k];\n}\n","// Returns the 2D cross product of AB and AC vectors, i.e., the z-component of\n// the 3D cross product in a quadrant I Cartesian coordinate system (+x is\n// right, +y is up). Returns a positive value if ABC is counter-clockwise,\n// negative if clockwise, and zero if the points are collinear.\nexport default function(a, b, c) {\n  return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n}\n","import cross from \"./cross\";\n\nfunction lexicographicOrder(a, b) {\n  return a[0] - b[0] || a[1] - b[1];\n}\n\n// Computes the upper convex hull per the monotone chain algorithm.\n// Assumes points.length >= 3, is sorted by x, unique in y.\n// Returns an array of indices into points in left-to-right order.\nfunction computeUpperHullIndexes(points) {\n  var n = points.length,\n      indexes = [0, 1],\n      size = 2;\n\n  for (var i = 2; i < n; ++i) {\n    while (size > 1 && cross(points[indexes[size - 2]], points[indexes[size - 1]], points[i]) <= 0) --size;\n    indexes[size++] = i;\n  }\n\n  return indexes.slice(0, size); // remove popped points\n}\n\nexport default function(points) {\n  if ((n = points.length) < 3) return null;\n\n  var i,\n      n,\n      sortedPoints = new Array(n),\n      flippedPoints = new Array(n);\n\n  for (i = 0; i < n; ++i) sortedPoints[i] = [+points[i][0], +points[i][1], i];\n  sortedPoints.sort(lexicographicOrder);\n  for (i = 0; i < n; ++i) flippedPoints[i] = [sortedPoints[i][0], -sortedPoints[i][1]];\n\n  var upperIndexes = computeUpperHullIndexes(sortedPoints),\n      lowerIndexes = computeUpperHullIndexes(flippedPoints);\n\n  // Construct the hull polygon, removing possible duplicate endpoints.\n  var skipLeft = lowerIndexes[0] === upperIndexes[0],\n      skipRight = lowerIndexes[lowerIndexes.length - 1] === upperIndexes[upperIndexes.length - 1],\n      hull = [];\n\n  // Add upper hull in right-to-l order.\n  // Then add lower hull in left-to-right order.\n  for (i = upperIndexes.length - 1; i >= 0; --i) hull.push(points[sortedPoints[upperIndexes[i]][2]]);\n  for (i = +skipLeft; i < lowerIndexes.length - skipRight; ++i) hull.push(points[sortedPoints[lowerIndexes[i]][2]]);\n\n  return hull;\n}\n","export default function(polygon, point) {\n  var n = polygon.length,\n      p = polygon[n - 1],\n      x = point[0], y = point[1],\n      x0 = p[0], y0 = p[1],\n      x1, y1,\n      inside = false;\n\n  for (var i = 0; i < n; ++i) {\n    p = polygon[i], x1 = p[0], y1 = p[1];\n    if (((y1 > y) !== (y0 > y)) && (x < (x0 - x1) * (y - y1) / (y0 - y1) + x1)) inside = !inside;\n    x0 = x1, y0 = y1;\n  }\n\n  return inside;\n}\n","export default function(polygon) {\n  var i = -1,\n      n = polygon.length,\n      b = polygon[n - 1],\n      xa,\n      ya,\n      xb = b[0],\n      yb = b[1],\n      perimeter = 0;\n\n  while (++i < n) {\n    xa = xb;\n    ya = yb;\n    b = polygon[i];\n    xb = b[0];\n    yb = b[1];\n    xa -= xb;\n    ya -= yb;\n    perimeter += Math.sqrt(xa * xa + ya * ya);\n  }\n\n  return perimeter;\n}\n","export default function() {\n  return Math.random();\n}\n","import defaultSource from \"./defaultSource\";\n\nexport default (function sourceRandomUniform(source) {\n  function randomUniform(min, max) {\n    min = min == null ? 0 : +min;\n    max = max == null ? 1 : +max;\n    if (arguments.length === 1) max = min, min = 0;\n    else max -= min;\n    return function() {\n      return source() * max + min;\n    };\n  }\n\n  randomUniform.source = sourceRandomUniform;\n\n  return randomUniform;\n})(defaultSource);\n","import defaultSource from \"./defaultSource\";\n\nexport default (function sourceRandomNormal(source) {\n  function randomNormal(mu, sigma) {\n    var x, r;\n    mu = mu == null ? 0 : +mu;\n    sigma = sigma == null ? 1 : +sigma;\n    return function() {\n      var y;\n\n      // If available, use the second previously-generated uniform random.\n      if (x != null) y = x, x = null;\n\n      // Otherwise, generate a new x and y.\n      else do {\n        x = source() * 2 - 1;\n        y = source() * 2 - 1;\n        r = x * x + y * y;\n      } while (!r || r > 1);\n\n      return mu + sigma * y * Math.sqrt(-2 * Math.log(r) / r);\n    };\n  }\n\n  randomNormal.source = sourceRandomNormal;\n\n  return randomNormal;\n})(defaultSource);\n","import defaultSource from \"./defaultSource\";\nimport normal from \"./normal\";\n\nexport default (function sourceRandomLogNormal(source) {\n  function randomLogNormal() {\n    var randomNormal = normal.source(source).apply(this, arguments);\n    return function() {\n      return Math.exp(randomNormal());\n    };\n  }\n\n  randomLogNormal.source = sourceRandomLogNormal;\n\n  return randomLogNormal;\n})(defaultSource);\n","import defaultSource from \"./defaultSource\";\n\nexport default (function sourceRandomIrwinHall(source) {\n  function randomIrwinHall(n) {\n    return function() {\n      for (var sum = 0, i = 0; i < n; ++i) sum += source();\n      return sum;\n    };\n  }\n\n  randomIrwinHall.source = sourceRandomIrwinHall;\n\n  return randomIrwinHall;\n})(defaultSource);\n","import defaultSource from \"./defaultSource\";\nimport irwinHall from \"./irwinHall\";\n\nexport default (function sourceRandomBates(source) {\n  function randomBates(n) {\n    var randomIrwinHall = irwinHall.source(source)(n);\n    return function() {\n      return randomIrwinHall() / n;\n    };\n  }\n\n  randomBates.source = sourceRandomBates;\n\n  return randomBates;\n})(defaultSource);\n","import defaultSource from \"./defaultSource\";\n\nexport default (function sourceRandomExponential(source) {\n  function randomExponential(lambda) {\n    return function() {\n      return -Math.log(1 - source()) / lambda;\n    };\n  }\n\n  randomExponential.source = sourceRandomExponential;\n\n  return randomExponential;\n})(defaultSource);\n","var array = Array.prototype;\n\nexport var map = array.map;\nexport var slice = array.slice;\n","import {map} from \"d3-collection\";\nimport {slice} from \"./array\";\n\nexport var implicit = {name: \"implicit\"};\n\nexport default function ordinal(range) {\n  var index = map(),\n      domain = [],\n      unknown = implicit;\n\n  range = range == null ? [] : slice.call(range);\n\n  function scale(d) {\n    var key = d + \"\", i = index.get(key);\n    if (!i) {\n      if (unknown !== implicit) return unknown;\n      index.set(key, i = domain.push(d));\n    }\n    return range[(i - 1) % range.length];\n  }\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [], index = map();\n    var i = -1, n = _.length, d, key;\n    while (++i < n) if (!index.has(key = (d = _[i]) + \"\")) index.set(key, domain.push(d));\n    return scale;\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), scale) : range.slice();\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  scale.copy = function() {\n    return ordinal()\n        .domain(domain)\n        .range(range)\n        .unknown(unknown);\n  };\n\n  return scale;\n}\n","import {range as sequence} from \"d3-array\";\nimport ordinal from \"./ordinal\";\n\nexport default function band() {\n  var scale = ordinal().unknown(undefined),\n      domain = scale.domain,\n      ordinalRange = scale.range,\n      range = [0, 1],\n      step,\n      bandwidth,\n      round = false,\n      paddingInner = 0,\n      paddingOuter = 0,\n      align = 0.5;\n\n  delete scale.unknown;\n\n  function rescale() {\n    var n = domain().length,\n        reverse = range[1] < range[0],\n        start = range[reverse - 0],\n        stop = range[1 - reverse];\n    step = (stop - start) / Math.max(1, n - paddingInner + paddingOuter * 2);\n    if (round) step = Math.floor(step);\n    start += (stop - start - step * (n - paddingInner)) * align;\n    bandwidth = step * (1 - paddingInner);\n    if (round) start = Math.round(start), bandwidth = Math.round(bandwidth);\n    var values = sequence(n).map(function(i) { return start + step * i; });\n    return ordinalRange(reverse ? values.reverse() : values);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = [+_[0], +_[1]], rescale()) : range.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range = [+_[0], +_[1]], round = true, rescale();\n  };\n\n  scale.bandwidth = function() {\n    return bandwidth;\n  };\n\n  scale.step = function() {\n    return step;\n  };\n\n  scale.round = function(_) {\n    return arguments.length ? (round = !!_, rescale()) : round;\n  };\n\n  scale.padding = function(_) {\n    return arguments.length ? (paddingInner = paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n  };\n\n  scale.paddingInner = function(_) {\n    return arguments.length ? (paddingInner = Math.max(0, Math.min(1, _)), rescale()) : paddingInner;\n  };\n\n  scale.paddingOuter = function(_) {\n    return arguments.length ? (paddingOuter = Math.max(0, Math.min(1, _)), rescale()) : paddingOuter;\n  };\n\n  scale.align = function(_) {\n    return arguments.length ? (align = Math.max(0, Math.min(1, _)), rescale()) : align;\n  };\n\n  scale.copy = function() {\n    return band()\n        .domain(domain())\n        .range(range)\n        .round(round)\n        .paddingInner(paddingInner)\n        .paddingOuter(paddingOuter)\n        .align(align);\n  };\n\n  return rescale();\n}\n\nfunction pointish(scale) {\n  var copy = scale.copy;\n\n  scale.padding = scale.paddingOuter;\n  delete scale.paddingInner;\n  delete scale.paddingOuter;\n\n  scale.copy = function() {\n    return pointish(copy());\n  };\n\n  return scale;\n}\n\nexport function point() {\n  return pointish(band().paddingInner(1));\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function(x) {\n  return +x;\n}\n","import {bisect} from \"d3-array\";\nimport {interpolate as interpolateValue, interpolateRound} from \"d3-interpolate\";\nimport {map, slice} from \"./array\";\nimport constant from \"./constant\";\nimport number from \"./number\";\n\nvar unit = [0, 1];\n\nexport function deinterpolateLinear(a, b) {\n  return (b -= (a = +a))\n      ? function(x) { return (x - a) / b; }\n      : constant(b);\n}\n\nfunction deinterpolateClamp(deinterpolate) {\n  return function(a, b) {\n    var d = deinterpolate(a = +a, b = +b);\n    return function(x) { return x <= a ? 0 : x >= b ? 1 : d(x); };\n  };\n}\n\nfunction reinterpolateClamp(reinterpolate) {\n  return function(a, b) {\n    var r = reinterpolate(a = +a, b = +b);\n    return function(t) { return t <= 0 ? a : t >= 1 ? b : r(t); };\n  };\n}\n\nfunction bimap(domain, range, deinterpolate, reinterpolate) {\n  var d0 = domain[0], d1 = domain[1], r0 = range[0], r1 = range[1];\n  if (d1 < d0) d0 = deinterpolate(d1, d0), r0 = reinterpolate(r1, r0);\n  else d0 = deinterpolate(d0, d1), r0 = reinterpolate(r0, r1);\n  return function(x) { return r0(d0(x)); };\n}\n\nfunction polymap(domain, range, deinterpolate, reinterpolate) {\n  var j = Math.min(domain.length, range.length) - 1,\n      d = new Array(j),\n      r = new Array(j),\n      i = -1;\n\n  // Reverse descending domains.\n  if (domain[j] < domain[0]) {\n    domain = domain.slice().reverse();\n    range = range.slice().reverse();\n  }\n\n  while (++i < j) {\n    d[i] = deinterpolate(domain[i], domain[i + 1]);\n    r[i] = reinterpolate(range[i], range[i + 1]);\n  }\n\n  return function(x) {\n    var i = bisect(domain, x, 1, j) - 1;\n    return r[i](d[i](x));\n  };\n}\n\nexport function copy(source, target) {\n  return target\n      .domain(source.domain())\n      .range(source.range())\n      .interpolate(source.interpolate())\n      .clamp(source.clamp());\n}\n\n// deinterpolate(a, b)(x) takes a domain value x in [a,b] and returns the corresponding parameter t in [0,1].\n// reinterpolate(a, b)(t) takes a parameter t in [0,1] and returns the corresponding domain value x in [a,b].\nexport default function continuous(deinterpolate, reinterpolate) {\n  var domain = unit,\n      range = unit,\n      interpolate = interpolateValue,\n      clamp = false,\n      piecewise,\n      output,\n      input;\n\n  function rescale() {\n    piecewise = Math.min(domain.length, range.length) > 2 ? polymap : bimap;\n    output = input = null;\n    return scale;\n  }\n\n  function scale(x) {\n    return (output || (output = piecewise(domain, range, clamp ? deinterpolateClamp(deinterpolate) : deinterpolate, interpolate)))(+x);\n  }\n\n  scale.invert = function(y) {\n    return (input || (input = piecewise(range, domain, deinterpolateLinear, clamp ? reinterpolateClamp(reinterpolate) : reinterpolate)))(+y);\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = map.call(_, number), rescale()) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), rescale()) : range.slice();\n  };\n\n  scale.rangeRound = function(_) {\n    return range = slice.call(_), interpolate = interpolateRound, rescale();\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, rescale()) : clamp;\n  };\n\n  scale.interpolate = function(_) {\n    return arguments.length ? (interpolate = _, rescale()) : interpolate;\n  };\n\n  return rescale();\n}\n","import {tickStep} from \"d3-array\";\nimport {format, formatPrefix, formatSpecifier, precisionFixed, precisionPrefix, precisionRound} from \"d3-format\";\n\nexport default function(domain, count, specifier) {\n  var start = domain[0],\n      stop = domain[domain.length - 1],\n      step = tickStep(start, stop, count == null ? 10 : count),\n      precision;\n  specifier = formatSpecifier(specifier == null ? \",f\" : specifier);\n  switch (specifier.type) {\n    case \"s\": {\n      var value = Math.max(Math.abs(start), Math.abs(stop));\n      if (specifier.precision == null && !isNaN(precision = precisionPrefix(step, value))) specifier.precision = precision;\n      return formatPrefix(specifier, value);\n    }\n    case \"\":\n    case \"e\":\n    case \"g\":\n    case \"p\":\n    case \"r\": {\n      if (specifier.precision == null && !isNaN(precision = precisionRound(step, Math.max(Math.abs(start), Math.abs(stop))))) specifier.precision = precision - (specifier.type === \"e\");\n      break;\n    }\n    case \"f\":\n    case \"%\": {\n      if (specifier.precision == null && !isNaN(precision = precisionFixed(step))) specifier.precision = precision - (specifier.type === \"%\") * 2;\n      break;\n    }\n  }\n  return format(specifier);\n}\n","import {ticks, tickIncrement} from \"d3-array\";\nimport {interpolateNumber as reinterpolate} from \"d3-interpolate\";\nimport {default as continuous, copy, deinterpolateLinear as deinterpolate} from \"./continuous\";\nimport tickFormat from \"./tickFormat\";\n\nexport function linearish(scale) {\n  var domain = scale.domain;\n\n  scale.ticks = function(count) {\n    var d = domain();\n    return ticks(d[0], d[d.length - 1], count == null ? 10 : count);\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return tickFormat(domain(), count, specifier);\n  };\n\n  scale.nice = function(count) {\n    if (count == null) count = 10;\n\n    var d = domain(),\n        i0 = 0,\n        i1 = d.length - 1,\n        start = d[i0],\n        stop = d[i1],\n        step;\n\n    if (stop < start) {\n      step = start, start = stop, stop = step;\n      step = i0, i0 = i1, i1 = step;\n    }\n\n    step = tickIncrement(start, stop, count);\n\n    if (step > 0) {\n      start = Math.floor(start / step) * step;\n      stop = Math.ceil(stop / step) * step;\n      step = tickIncrement(start, stop, count);\n    } else if (step < 0) {\n      start = Math.ceil(start * step) / step;\n      stop = Math.floor(stop * step) / step;\n      step = tickIncrement(start, stop, count);\n    }\n\n    if (step > 0) {\n      d[i0] = Math.floor(start / step) * step;\n      d[i1] = Math.ceil(stop / step) * step;\n      domain(d);\n    } else if (step < 0) {\n      d[i0] = Math.ceil(start * step) / step;\n      d[i1] = Math.floor(stop * step) / step;\n      domain(d);\n    }\n\n    return scale;\n  };\n\n  return scale;\n}\n\nexport default function linear() {\n  var scale = continuous(deinterpolate, reinterpolate);\n\n  scale.copy = function() {\n    return copy(scale, linear());\n  };\n\n  return linearish(scale);\n}\n","import {map} from \"./array\";\nimport {linearish} from \"./linear\";\nimport number from \"./number\";\n\nexport default function identity() {\n  var domain = [0, 1];\n\n  function scale(x) {\n    return +x;\n  }\n\n  scale.invert = scale;\n\n  scale.domain = scale.range = function(_) {\n    return arguments.length ? (domain = map.call(_, number), scale) : domain.slice();\n  };\n\n  scale.copy = function() {\n    return identity().domain(domain);\n  };\n\n  return linearish(scale);\n}\n","export default function(domain, interval) {\n  domain = domain.slice();\n\n  var i0 = 0,\n      i1 = domain.length - 1,\n      x0 = domain[i0],\n      x1 = domain[i1],\n      t;\n\n  if (x1 < x0) {\n    t = i0, i0 = i1, i1 = t;\n    t = x0, x0 = x1, x1 = t;\n  }\n\n  domain[i0] = interval.floor(x0);\n  domain[i1] = interval.ceil(x1);\n  return domain;\n}\n","import {ticks} from \"d3-array\";\nimport {format} from \"d3-format\";\nimport constant from \"./constant\";\nimport nice from \"./nice\";\nimport {default as continuous, copy} from \"./continuous\";\n\nfunction deinterpolate(a, b) {\n  return (b = Math.log(b / a))\n      ? function(x) { return Math.log(x / a) / b; }\n      : constant(b);\n}\n\nfunction reinterpolate(a, b) {\n  return a < 0\n      ? function(t) { return -Math.pow(-b, t) * Math.pow(-a, 1 - t); }\n      : function(t) { return Math.pow(b, t) * Math.pow(a, 1 - t); };\n}\n\nfunction pow10(x) {\n  return isFinite(x) ? +(\"1e\" + x) : x < 0 ? 0 : x;\n}\n\nfunction powp(base) {\n  return base === 10 ? pow10\n      : base === Math.E ? Math.exp\n      : function(x) { return Math.pow(base, x); };\n}\n\nfunction logp(base) {\n  return base === Math.E ? Math.log\n      : base === 10 && Math.log10\n      || base === 2 && Math.log2\n      || (base = Math.log(base), function(x) { return Math.log(x) / base; });\n}\n\nfunction reflect(f) {\n  return function(x) {\n    return -f(-x);\n  };\n}\n\nexport default function log() {\n  var scale = continuous(deinterpolate, reinterpolate).domain([1, 10]),\n      domain = scale.domain,\n      base = 10,\n      logs = logp(10),\n      pows = powp(10);\n\n  function rescale() {\n    logs = logp(base), pows = powp(base);\n    if (domain()[0] < 0) logs = reflect(logs), pows = reflect(pows);\n    return scale;\n  }\n\n  scale.base = function(_) {\n    return arguments.length ? (base = +_, rescale()) : base;\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain(_), rescale()) : domain();\n  };\n\n  scale.ticks = function(count) {\n    var d = domain(),\n        u = d[0],\n        v = d[d.length - 1],\n        r;\n\n    if (r = v < u) i = u, u = v, v = i;\n\n    var i = logs(u),\n        j = logs(v),\n        p,\n        k,\n        t,\n        n = count == null ? 10 : +count,\n        z = [];\n\n    if (!(base % 1) && j - i < n) {\n      i = Math.round(i) - 1, j = Math.round(j) + 1;\n      if (u > 0) for (; i < j; ++i) {\n        for (k = 1, p = pows(i); k < base; ++k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      } else for (; i < j; ++i) {\n        for (k = base - 1, p = pows(i); k >= 1; --k) {\n          t = p * k;\n          if (t < u) continue;\n          if (t > v) break;\n          z.push(t);\n        }\n      }\n    } else {\n      z = ticks(i, j, Math.min(j - i, n)).map(pows);\n    }\n\n    return r ? z.reverse() : z;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    if (specifier == null) specifier = base === 10 ? \".0e\" : \",\";\n    if (typeof specifier !== \"function\") specifier = format(specifier);\n    if (count === Infinity) return specifier;\n    if (count == null) count = 10;\n    var k = Math.max(1, base * count / scale.ticks().length); // TODO fast estimate?\n    return function(d) {\n      var i = d / pows(Math.round(logs(d)));\n      if (i * base < base - 0.5) i *= base;\n      return i <= k ? specifier(d) : \"\";\n    };\n  };\n\n  scale.nice = function() {\n    return domain(nice(domain(), {\n      floor: function(x) { return pows(Math.floor(logs(x))); },\n      ceil: function(x) { return pows(Math.ceil(logs(x))); }\n    }));\n  };\n\n  scale.copy = function() {\n    return copy(scale, log().base(base));\n  };\n\n  return scale;\n}\n","import constant from \"./constant\";\nimport {linearish} from \"./linear\";\nimport {default as continuous, copy} from \"./continuous\";\n\nfunction raise(x, exponent) {\n  return x < 0 ? -Math.pow(-x, exponent) : Math.pow(x, exponent);\n}\n\nexport default function pow() {\n  var exponent = 1,\n      scale = continuous(deinterpolate, reinterpolate),\n      domain = scale.domain;\n\n  function deinterpolate(a, b) {\n    return (b = raise(b, exponent) - (a = raise(a, exponent)))\n        ? function(x) { return (raise(x, exponent) - a) / b; }\n        : constant(b);\n  }\n\n  function reinterpolate(a, b) {\n    b = raise(b, exponent) - (a = raise(a, exponent));\n    return function(t) { return raise(a + b * t, 1 / exponent); };\n  }\n\n  scale.exponent = function(_) {\n    return arguments.length ? (exponent = +_, domain(domain())) : exponent;\n  };\n\n  scale.copy = function() {\n    return copy(scale, pow().exponent(exponent));\n  };\n\n  return linearish(scale);\n}\n\nexport function sqrt() {\n  return pow().exponent(0.5);\n}\n","import {ascending, bisect, quantile as threshold} from \"d3-array\";\nimport {slice} from \"./array\";\n\nexport default function quantile() {\n  var domain = [],\n      range = [],\n      thresholds = [];\n\n  function rescale() {\n    var i = 0, n = Math.max(1, range.length);\n    thresholds = new Array(n - 1);\n    while (++i < n) thresholds[i - 1] = threshold(domain, i / n);\n    return scale;\n  }\n\n  function scale(x) {\n    if (!isNaN(x = +x)) return range[bisect(thresholds, x)];\n  }\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return i < 0 ? [NaN, NaN] : [\n      i > 0 ? thresholds[i - 1] : domain[0],\n      i < thresholds.length ? thresholds[i] : domain[domain.length - 1]\n    ];\n  };\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [];\n    for (var i = 0, n = _.length, d; i < n; ++i) if (d = _[i], d != null && !isNaN(d = +d)) domain.push(d);\n    domain.sort(ascending);\n    return rescale();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), rescale()) : range.slice();\n  };\n\n  scale.quantiles = function() {\n    return thresholds.slice();\n  };\n\n  scale.copy = function() {\n    return quantile()\n        .domain(domain)\n        .range(range);\n  };\n\n  return scale;\n}\n","import {bisect} from \"d3-array\";\nimport {slice} from \"./array\";\nimport {linearish} from \"./linear\";\n\nexport default function quantize() {\n  var x0 = 0,\n      x1 = 1,\n      n = 1,\n      domain = [0.5],\n      range = [0, 1];\n\n  function scale(x) {\n    if (x <= x) return range[bisect(domain, x, 0, n)];\n  }\n\n  function rescale() {\n    var i = -1;\n    domain = new Array(n);\n    while (++i < n) domain[i] = ((i + 1) * x1 - (i - n) * x0) / (n + 1);\n    return scale;\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], rescale()) : [x0, x1];\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (n = (range = slice.call(_)).length - 1, rescale()) : range.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return i < 0 ? [NaN, NaN]\n        : i < 1 ? [x0, domain[0]]\n        : i >= n ? [domain[n - 1], x1]\n        : [domain[i - 1], domain[i]];\n  };\n\n  scale.copy = function() {\n    return quantize()\n        .domain([x0, x1])\n        .range(range);\n  };\n\n  return linearish(scale);\n}\n","import {bisect} from \"d3-array\";\nimport {slice} from \"./array\";\n\nexport default function threshold() {\n  var domain = [0.5],\n      range = [0, 1],\n      n = 1;\n\n  function scale(x) {\n    if (x <= x) return range[bisect(domain, x, 0, n)];\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (domain = slice.call(_), n = Math.min(domain.length, range.length - 1), scale) : domain.slice();\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = slice.call(_), n = Math.min(domain.length, range.length - 1), scale) : range.slice();\n  };\n\n  scale.invertExtent = function(y) {\n    var i = range.indexOf(y);\n    return [domain[i - 1], domain[i]];\n  };\n\n  scale.copy = function() {\n    return threshold()\n        .domain(domain)\n        .range(range);\n  };\n\n  return scale;\n}\n","var t0 = new Date,\n    t1 = new Date;\n\nexport default function newInterval(floori, offseti, count, field) {\n\n  function interval(date) {\n    return floori(date = new Date(+date)), date;\n  }\n\n  interval.floor = interval;\n\n  interval.ceil = function(date) {\n    return floori(date = new Date(date - 1)), offseti(date, 1), floori(date), date;\n  };\n\n  interval.round = function(date) {\n    var d0 = interval(date),\n        d1 = interval.ceil(date);\n    return date - d0 < d1 - date ? d0 : d1;\n  };\n\n  interval.offset = function(date, step) {\n    return offseti(date = new Date(+date), step == null ? 1 : Math.floor(step)), date;\n  };\n\n  interval.range = function(start, stop, step) {\n    var range = [], previous;\n    start = interval.ceil(start);\n    step = step == null ? 1 : Math.floor(step);\n    if (!(start < stop) || !(step > 0)) return range; // also handles Invalid Date\n    do range.push(previous = new Date(+start)), offseti(start, step), floori(start);\n    while (previous < start && start < stop);\n    return range;\n  };\n\n  interval.filter = function(test) {\n    return newInterval(function(date) {\n      if (date >= date) while (floori(date), !test(date)) date.setTime(date - 1);\n    }, function(date, step) {\n      if (date >= date) {\n        if (step < 0) while (++step <= 0) {\n          while (offseti(date, -1), !test(date)) {} // eslint-disable-line no-empty\n        } else while (--step >= 0) {\n          while (offseti(date, +1), !test(date)) {} // eslint-disable-line no-empty\n        }\n      }\n    });\n  };\n\n  if (count) {\n    interval.count = function(start, end) {\n      t0.setTime(+start), t1.setTime(+end);\n      floori(t0), floori(t1);\n      return Math.floor(count(t0, t1));\n    };\n\n    interval.every = function(step) {\n      step = Math.floor(step);\n      return !isFinite(step) || !(step > 0) ? null\n          : !(step > 1) ? interval\n          : interval.filter(field\n              ? function(d) { return field(d) % step === 0; }\n              : function(d) { return interval.count(0, d) % step === 0; });\n    };\n  }\n\n  return interval;\n}\n","import interval from \"./interval\";\n\nvar millisecond = interval(function() {\n  // noop\n}, function(date, step) {\n  date.setTime(+date + step);\n}, function(start, end) {\n  return end - start;\n});\n\n// An optimized implementation for this simple case.\nmillisecond.every = function(k) {\n  k = Math.floor(k);\n  if (!isFinite(k) || !(k > 0)) return null;\n  if (!(k > 1)) return millisecond;\n  return interval(function(date) {\n    date.setTime(Math.floor(date / k) * k);\n  }, function(date, step) {\n    date.setTime(+date + step * k);\n  }, function(start, end) {\n    return (end - start) / k;\n  });\n};\n\nexport default millisecond;\nexport var milliseconds = millisecond.range;\n","export var durationSecond = 1e3;\nexport var durationMinute = 6e4;\nexport var durationHour = 36e5;\nexport var durationDay = 864e5;\nexport var durationWeek = 6048e5;\n","import interval from \"./interval\";\nimport {durationSecond} from \"./duration\";\n\nvar second = interval(function(date) {\n  date.setTime(Math.floor(date / durationSecond) * durationSecond);\n}, function(date, step) {\n  date.setTime(+date + step * durationSecond);\n}, function(start, end) {\n  return (end - start) / durationSecond;\n}, function(date) {\n  return date.getUTCSeconds();\n});\n\nexport default second;\nexport var seconds = second.range;\n","import interval from \"./interval\";\nimport {durationMinute} from \"./duration\";\n\nvar minute = interval(function(date) {\n  date.setTime(Math.floor(date / durationMinute) * durationMinute);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute);\n}, function(start, end) {\n  return (end - start) / durationMinute;\n}, function(date) {\n  return date.getMinutes();\n});\n\nexport default minute;\nexport var minutes = minute.range;\n","import interval from \"./interval\";\nimport {durationHour, durationMinute} from \"./duration\";\n\nvar hour = interval(function(date) {\n  var offset = date.getTimezoneOffset() * durationMinute % durationHour;\n  if (offset < 0) offset += durationHour;\n  date.setTime(Math.floor((+date - offset) / durationHour) * durationHour + offset);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour);\n}, function(start, end) {\n  return (end - start) / durationHour;\n}, function(date) {\n  return date.getHours();\n});\n\nexport default hour;\nexport var hours = hour.range;\n","import interval from \"./interval\";\nimport {durationDay, durationMinute} from \"./duration\";\n\nvar day = interval(function(date) {\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setDate(date.getDate() + step);\n}, function(start, end) {\n  return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationDay;\n}, function(date) {\n  return date.getDate() - 1;\n});\n\nexport default day;\nexport var days = day.range;\n","import interval from \"./interval\";\nimport {durationMinute, durationWeek} from \"./duration\";\n\nfunction weekday(i) {\n  return interval(function(date) {\n    date.setDate(date.getDate() - (date.getDay() + 7 - i) % 7);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setDate(date.getDate() + step * 7);\n  }, function(start, end) {\n    return (end - start - (end.getTimezoneOffset() - start.getTimezoneOffset()) * durationMinute) / durationWeek;\n  });\n}\n\nexport var sunday = weekday(0);\nexport var monday = weekday(1);\nexport var tuesday = weekday(2);\nexport var wednesday = weekday(3);\nexport var thursday = weekday(4);\nexport var friday = weekday(5);\nexport var saturday = weekday(6);\n\nexport var sundays = sunday.range;\nexport var mondays = monday.range;\nexport var tuesdays = tuesday.range;\nexport var wednesdays = wednesday.range;\nexport var thursdays = thursday.range;\nexport var fridays = friday.range;\nexport var saturdays = saturday.range;\n","import interval from \"./interval\";\n\nvar month = interval(function(date) {\n  date.setDate(1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setMonth(date.getMonth() + step);\n}, function(start, end) {\n  return end.getMonth() - start.getMonth() + (end.getFullYear() - start.getFullYear()) * 12;\n}, function(date) {\n  return date.getMonth();\n});\n\nexport default month;\nexport var months = month.range;\n","import interval from \"./interval\";\n\nvar year = interval(function(date) {\n  date.setMonth(0, 1);\n  date.setHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setFullYear(date.getFullYear() + step);\n}, function(start, end) {\n  return end.getFullYear() - start.getFullYear();\n}, function(date) {\n  return date.getFullYear();\n});\n\n// An optimized implementation for this simple case.\nyear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : interval(function(date) {\n    date.setFullYear(Math.floor(date.getFullYear() / k) * k);\n    date.setMonth(0, 1);\n    date.setHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setFullYear(date.getFullYear() + step * k);\n  });\n};\n\nexport default year;\nexport var years = year.range;\n","import interval from \"./interval\";\nimport {durationMinute} from \"./duration\";\n\nvar utcMinute = interval(function(date) {\n  date.setUTCSeconds(0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationMinute);\n}, function(start, end) {\n  return (end - start) / durationMinute;\n}, function(date) {\n  return date.getUTCMinutes();\n});\n\nexport default utcMinute;\nexport var utcMinutes = utcMinute.range;\n","import interval from \"./interval\";\nimport {durationHour} from \"./duration\";\n\nvar utcHour = interval(function(date) {\n  date.setUTCMinutes(0, 0, 0);\n}, function(date, step) {\n  date.setTime(+date + step * durationHour);\n}, function(start, end) {\n  return (end - start) / durationHour;\n}, function(date) {\n  return date.getUTCHours();\n});\n\nexport default utcHour;\nexport var utcHours = utcHour.range;\n","import interval from \"./interval\";\nimport {durationDay} from \"./duration\";\n\nvar utcDay = interval(function(date) {\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCDate(date.getUTCDate() + step);\n}, function(start, end) {\n  return (end - start) / durationDay;\n}, function(date) {\n  return date.getUTCDate() - 1;\n});\n\nexport default utcDay;\nexport var utcDays = utcDay.range;\n","import interval from \"./interval\";\nimport {durationWeek} from \"./duration\";\n\nfunction utcWeekday(i) {\n  return interval(function(date) {\n    date.setUTCDate(date.getUTCDate() - (date.getUTCDay() + 7 - i) % 7);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCDate(date.getUTCDate() + step * 7);\n  }, function(start, end) {\n    return (end - start) / durationWeek;\n  });\n}\n\nexport var utcSunday = utcWeekday(0);\nexport var utcMonday = utcWeekday(1);\nexport var utcTuesday = utcWeekday(2);\nexport var utcWednesday = utcWeekday(3);\nexport var utcThursday = utcWeekday(4);\nexport var utcFriday = utcWeekday(5);\nexport var utcSaturday = utcWeekday(6);\n\nexport var utcSundays = utcSunday.range;\nexport var utcMondays = utcMonday.range;\nexport var utcTuesdays = utcTuesday.range;\nexport var utcWednesdays = utcWednesday.range;\nexport var utcThursdays = utcThursday.range;\nexport var utcFridays = utcFriday.range;\nexport var utcSaturdays = utcSaturday.range;\n","import interval from \"./interval\";\n\nvar utcMonth = interval(function(date) {\n  date.setUTCDate(1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCMonth(date.getUTCMonth() + step);\n}, function(start, end) {\n  return end.getUTCMonth() - start.getUTCMonth() + (end.getUTCFullYear() - start.getUTCFullYear()) * 12;\n}, function(date) {\n  return date.getUTCMonth();\n});\n\nexport default utcMonth;\nexport var utcMonths = utcMonth.range;\n","import interval from \"./interval\";\n\nvar utcYear = interval(function(date) {\n  date.setUTCMonth(0, 1);\n  date.setUTCHours(0, 0, 0, 0);\n}, function(date, step) {\n  date.setUTCFullYear(date.getUTCFullYear() + step);\n}, function(start, end) {\n  return end.getUTCFullYear() - start.getUTCFullYear();\n}, function(date) {\n  return date.getUTCFullYear();\n});\n\n// An optimized implementation for this simple case.\nutcYear.every = function(k) {\n  return !isFinite(k = Math.floor(k)) || !(k > 0) ? null : interval(function(date) {\n    date.setUTCFullYear(Math.floor(date.getUTCFullYear() / k) * k);\n    date.setUTCMonth(0, 1);\n    date.setUTCHours(0, 0, 0, 0);\n  }, function(date, step) {\n    date.setUTCFullYear(date.getUTCFullYear() + step * k);\n  });\n};\n\nexport default utcYear;\nexport var utcYears = utcYear.range;\n","import {\n  timeDay,\n  timeSunday,\n  timeMonday,\n  timeThursday,\n  timeYear,\n  utcDay,\n  utcSunday,\n  utcMonday,\n  utcThursday,\n  utcYear\n} from \"d3-time\";\n\nfunction localDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(-1, d.m, d.d, d.H, d.M, d.S, d.L);\n    date.setFullYear(d.y);\n    return date;\n  }\n  return new Date(d.y, d.m, d.d, d.H, d.M, d.S, d.L);\n}\n\nfunction utcDate(d) {\n  if (0 <= d.y && d.y < 100) {\n    var date = new Date(Date.UTC(-1, d.m, d.d, d.H, d.M, d.S, d.L));\n    date.setUTCFullYear(d.y);\n    return date;\n  }\n  return new Date(Date.UTC(d.y, d.m, d.d, d.H, d.M, d.S, d.L));\n}\n\nfunction newYear(y) {\n  return {y: y, m: 0, d: 1, H: 0, M: 0, S: 0, L: 0};\n}\n\nexport default function formatLocale(locale) {\n  var locale_dateTime = locale.dateTime,\n      locale_date = locale.date,\n      locale_time = locale.time,\n      locale_periods = locale.periods,\n      locale_weekdays = locale.days,\n      locale_shortWeekdays = locale.shortDays,\n      locale_months = locale.months,\n      locale_shortMonths = locale.shortMonths;\n\n  var periodRe = formatRe(locale_periods),\n      periodLookup = formatLookup(locale_periods),\n      weekdayRe = formatRe(locale_weekdays),\n      weekdayLookup = formatLookup(locale_weekdays),\n      shortWeekdayRe = formatRe(locale_shortWeekdays),\n      shortWeekdayLookup = formatLookup(locale_shortWeekdays),\n      monthRe = formatRe(locale_months),\n      monthLookup = formatLookup(locale_months),\n      shortMonthRe = formatRe(locale_shortMonths),\n      shortMonthLookup = formatLookup(locale_shortMonths);\n\n  var formats = {\n    \"a\": formatShortWeekday,\n    \"A\": formatWeekday,\n    \"b\": formatShortMonth,\n    \"B\": formatMonth,\n    \"c\": null,\n    \"d\": formatDayOfMonth,\n    \"e\": formatDayOfMonth,\n    \"f\": formatMicroseconds,\n    \"H\": formatHour24,\n    \"I\": formatHour12,\n    \"j\": formatDayOfYear,\n    \"L\": formatMilliseconds,\n    \"m\": formatMonthNumber,\n    \"M\": formatMinutes,\n    \"p\": formatPeriod,\n    \"Q\": formatUnixTimestamp,\n    \"s\": formatUnixTimestampSeconds,\n    \"S\": formatSeconds,\n    \"u\": formatWeekdayNumberMonday,\n    \"U\": formatWeekNumberSunday,\n    \"V\": formatWeekNumberISO,\n    \"w\": formatWeekdayNumberSunday,\n    \"W\": formatWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatYear,\n    \"Y\": formatFullYear,\n    \"Z\": formatZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var utcFormats = {\n    \"a\": formatUTCShortWeekday,\n    \"A\": formatUTCWeekday,\n    \"b\": formatUTCShortMonth,\n    \"B\": formatUTCMonth,\n    \"c\": null,\n    \"d\": formatUTCDayOfMonth,\n    \"e\": formatUTCDayOfMonth,\n    \"f\": formatUTCMicroseconds,\n    \"H\": formatUTCHour24,\n    \"I\": formatUTCHour12,\n    \"j\": formatUTCDayOfYear,\n    \"L\": formatUTCMilliseconds,\n    \"m\": formatUTCMonthNumber,\n    \"M\": formatUTCMinutes,\n    \"p\": formatUTCPeriod,\n    \"Q\": formatUnixTimestamp,\n    \"s\": formatUnixTimestampSeconds,\n    \"S\": formatUTCSeconds,\n    \"u\": formatUTCWeekdayNumberMonday,\n    \"U\": formatUTCWeekNumberSunday,\n    \"V\": formatUTCWeekNumberISO,\n    \"w\": formatUTCWeekdayNumberSunday,\n    \"W\": formatUTCWeekNumberMonday,\n    \"x\": null,\n    \"X\": null,\n    \"y\": formatUTCYear,\n    \"Y\": formatUTCFullYear,\n    \"Z\": formatUTCZone,\n    \"%\": formatLiteralPercent\n  };\n\n  var parses = {\n    \"a\": parseShortWeekday,\n    \"A\": parseWeekday,\n    \"b\": parseShortMonth,\n    \"B\": parseMonth,\n    \"c\": parseLocaleDateTime,\n    \"d\": parseDayOfMonth,\n    \"e\": parseDayOfMonth,\n    \"f\": parseMicroseconds,\n    \"H\": parseHour24,\n    \"I\": parseHour24,\n    \"j\": parseDayOfYear,\n    \"L\": parseMilliseconds,\n    \"m\": parseMonthNumber,\n    \"M\": parseMinutes,\n    \"p\": parsePeriod,\n    \"Q\": parseUnixTimestamp,\n    \"s\": parseUnixTimestampSeconds,\n    \"S\": parseSeconds,\n    \"u\": parseWeekdayNumberMonday,\n    \"U\": parseWeekNumberSunday,\n    \"V\": parseWeekNumberISO,\n    \"w\": parseWeekdayNumberSunday,\n    \"W\": parseWeekNumberMonday,\n    \"x\": parseLocaleDate,\n    \"X\": parseLocaleTime,\n    \"y\": parseYear,\n    \"Y\": parseFullYear,\n    \"Z\": parseZone,\n    \"%\": parseLiteralPercent\n  };\n\n  // These recursive directive definitions must be deferred.\n  formats.x = newFormat(locale_date, formats);\n  formats.X = newFormat(locale_time, formats);\n  formats.c = newFormat(locale_dateTime, formats);\n  utcFormats.x = newFormat(locale_date, utcFormats);\n  utcFormats.X = newFormat(locale_time, utcFormats);\n  utcFormats.c = newFormat(locale_dateTime, utcFormats);\n\n  function newFormat(specifier, formats) {\n    return function(date) {\n      var string = [],\n          i = -1,\n          j = 0,\n          n = specifier.length,\n          c,\n          pad,\n          format;\n\n      if (!(date instanceof Date)) date = new Date(+date);\n\n      while (++i < n) {\n        if (specifier.charCodeAt(i) === 37) {\n          string.push(specifier.slice(j, i));\n          if ((pad = pads[c = specifier.charAt(++i)]) != null) c = specifier.charAt(++i);\n          else pad = c === \"e\" ? \" \" : \"0\";\n          if (format = formats[c]) c = format(date, pad);\n          string.push(c);\n          j = i + 1;\n        }\n      }\n\n      string.push(specifier.slice(j, i));\n      return string.join(\"\");\n    };\n  }\n\n  function newParse(specifier, newDate) {\n    return function(string) {\n      var d = newYear(1900),\n          i = parseSpecifier(d, specifier, string += \"\", 0),\n          week, day;\n      if (i != string.length) return null;\n\n      // If a UNIX timestamp is specified, return it.\n      if (\"Q\" in d) return new Date(d.Q);\n\n      // The am-pm flag is 0 for AM, and 1 for PM.\n      if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n\n      // Convert day-of-week and week-of-year to day-of-year.\n      if (\"V\" in d) {\n        if (d.V < 1 || d.V > 53) return null;\n        if (!(\"w\" in d)) d.w = 1;\n        if (\"Z\" in d) {\n          week = utcDate(newYear(d.y)), day = week.getUTCDay();\n          week = day > 4 || day === 0 ? utcMonday.ceil(week) : utcMonday(week);\n          week = utcDay.offset(week, (d.V - 1) * 7);\n          d.y = week.getUTCFullYear();\n          d.m = week.getUTCMonth();\n          d.d = week.getUTCDate() + (d.w + 6) % 7;\n        } else {\n          week = newDate(newYear(d.y)), day = week.getDay();\n          week = day > 4 || day === 0 ? timeMonday.ceil(week) : timeMonday(week);\n          week = timeDay.offset(week, (d.V - 1) * 7);\n          d.y = week.getFullYear();\n          d.m = week.getMonth();\n          d.d = week.getDate() + (d.w + 6) % 7;\n        }\n      } else if (\"W\" in d || \"U\" in d) {\n        if (!(\"w\" in d)) d.w = \"u\" in d ? d.u % 7 : \"W\" in d ? 1 : 0;\n        day = \"Z\" in d ? utcDate(newYear(d.y)).getUTCDay() : newDate(newYear(d.y)).getDay();\n        d.m = 0;\n        d.d = \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (day + 5) % 7 : d.w + d.U * 7 - (day + 6) % 7;\n      }\n\n      // If a time zone is specified, all fields are interpreted as UTC and then\n      // offset according to the specified time zone.\n      if (\"Z\" in d) {\n        d.H += d.Z / 100 | 0;\n        d.M += d.Z % 100;\n        return utcDate(d);\n      }\n\n      // Otherwise, all fields are in local time.\n      return newDate(d);\n    };\n  }\n\n  function parseSpecifier(d, specifier, string, j) {\n    var i = 0,\n        n = specifier.length,\n        m = string.length,\n        c,\n        parse;\n\n    while (i < n) {\n      if (j >= m) return -1;\n      c = specifier.charCodeAt(i++);\n      if (c === 37) {\n        c = specifier.charAt(i++);\n        parse = parses[c in pads ? specifier.charAt(i++) : c];\n        if (!parse || ((j = parse(d, string, j)) < 0)) return -1;\n      } else if (c != string.charCodeAt(j++)) {\n        return -1;\n      }\n    }\n\n    return j;\n  }\n\n  function parsePeriod(d, string, i) {\n    var n = periodRe.exec(string.slice(i));\n    return n ? (d.p = periodLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortWeekday(d, string, i) {\n    var n = shortWeekdayRe.exec(string.slice(i));\n    return n ? (d.w = shortWeekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseWeekday(d, string, i) {\n    var n = weekdayRe.exec(string.slice(i));\n    return n ? (d.w = weekdayLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseShortMonth(d, string, i) {\n    var n = shortMonthRe.exec(string.slice(i));\n    return n ? (d.m = shortMonthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseMonth(d, string, i) {\n    var n = monthRe.exec(string.slice(i));\n    return n ? (d.m = monthLookup[n[0].toLowerCase()], i + n[0].length) : -1;\n  }\n\n  function parseLocaleDateTime(d, string, i) {\n    return parseSpecifier(d, locale_dateTime, string, i);\n  }\n\n  function parseLocaleDate(d, string, i) {\n    return parseSpecifier(d, locale_date, string, i);\n  }\n\n  function parseLocaleTime(d, string, i) {\n    return parseSpecifier(d, locale_time, string, i);\n  }\n\n  function formatShortWeekday(d) {\n    return locale_shortWeekdays[d.getDay()];\n  }\n\n  function formatWeekday(d) {\n    return locale_weekdays[d.getDay()];\n  }\n\n  function formatShortMonth(d) {\n    return locale_shortMonths[d.getMonth()];\n  }\n\n  function formatMonth(d) {\n    return locale_months[d.getMonth()];\n  }\n\n  function formatPeriod(d) {\n    return locale_periods[+(d.getHours() >= 12)];\n  }\n\n  function formatUTCShortWeekday(d) {\n    return locale_shortWeekdays[d.getUTCDay()];\n  }\n\n  function formatUTCWeekday(d) {\n    return locale_weekdays[d.getUTCDay()];\n  }\n\n  function formatUTCShortMonth(d) {\n    return locale_shortMonths[d.getUTCMonth()];\n  }\n\n  function formatUTCMonth(d) {\n    return locale_months[d.getUTCMonth()];\n  }\n\n  function formatUTCPeriod(d) {\n    return locale_periods[+(d.getUTCHours() >= 12)];\n  }\n\n  return {\n    format: function(specifier) {\n      var f = newFormat(specifier += \"\", formats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    parse: function(specifier) {\n      var p = newParse(specifier += \"\", localDate);\n      p.toString = function() { return specifier; };\n      return p;\n    },\n    utcFormat: function(specifier) {\n      var f = newFormat(specifier += \"\", utcFormats);\n      f.toString = function() { return specifier; };\n      return f;\n    },\n    utcParse: function(specifier) {\n      var p = newParse(specifier, utcDate);\n      p.toString = function() { return specifier; };\n      return p;\n    }\n  };\n}\n\nvar pads = {\"-\": \"\", \"_\": \" \", \"0\": \"0\"},\n    numberRe = /^\\s*\\d+/, // note: ignores next directive\n    percentRe = /^%/,\n    requoteRe = /[\\\\^$*+?|[\\]().{}]/g;\n\nfunction pad(value, fill, width) {\n  var sign = value < 0 ? \"-\" : \"\",\n      string = (sign ? -value : value) + \"\",\n      length = string.length;\n  return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n}\n\nfunction requote(s) {\n  return s.replace(requoteRe, \"\\\\$&\");\n}\n\nfunction formatRe(names) {\n  return new RegExp(\"^(?:\" + names.map(requote).join(\"|\") + \")\", \"i\");\n}\n\nfunction formatLookup(names) {\n  var map = {}, i = -1, n = names.length;\n  while (++i < n) map[names[i].toLowerCase()] = i;\n  return map;\n}\n\nfunction parseWeekdayNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.w = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekdayNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 1));\n  return n ? (d.u = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberSunday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.U = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberISO(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.V = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseWeekNumberMonday(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.W = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseFullYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 4));\n  return n ? (d.y = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.y = +n[0] + (+n[0] > 68 ? 1900 : 2000), i + n[0].length) : -1;\n}\n\nfunction parseZone(d, string, i) {\n  var n = /^(Z)|([+-]\\d\\d)(?::?(\\d\\d))?/.exec(string.slice(i, i + 6));\n  return n ? (d.Z = n[1] ? 0 : -(n[2] + (n[3] || \"00\")), i + n[0].length) : -1;\n}\n\nfunction parseMonthNumber(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.m = n[0] - 1, i + n[0].length) : -1;\n}\n\nfunction parseDayOfMonth(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseDayOfYear(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.m = 0, d.d = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseHour24(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.H = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMinutes(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.M = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 2));\n  return n ? (d.S = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMilliseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 3));\n  return n ? (d.L = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseMicroseconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i, i + 6));\n  return n ? (d.L = Math.floor(n[0] / 1000), i + n[0].length) : -1;\n}\n\nfunction parseLiteralPercent(d, string, i) {\n  var n = percentRe.exec(string.slice(i, i + 1));\n  return n ? i + n[0].length : -1;\n}\n\nfunction parseUnixTimestamp(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.Q = +n[0], i + n[0].length) : -1;\n}\n\nfunction parseUnixTimestampSeconds(d, string, i) {\n  var n = numberRe.exec(string.slice(i));\n  return n ? (d.Q = (+n[0]) * 1000, i + n[0].length) : -1;\n}\n\nfunction formatDayOfMonth(d, p) {\n  return pad(d.getDate(), p, 2);\n}\n\nfunction formatHour24(d, p) {\n  return pad(d.getHours(), p, 2);\n}\n\nfunction formatHour12(d, p) {\n  return pad(d.getHours() % 12 || 12, p, 2);\n}\n\nfunction formatDayOfYear(d, p) {\n  return pad(1 + timeDay.count(timeYear(d), d), p, 3);\n}\n\nfunction formatMilliseconds(d, p) {\n  return pad(d.getMilliseconds(), p, 3);\n}\n\nfunction formatMicroseconds(d, p) {\n  return formatMilliseconds(d, p) + \"000\";\n}\n\nfunction formatMonthNumber(d, p) {\n  return pad(d.getMonth() + 1, p, 2);\n}\n\nfunction formatMinutes(d, p) {\n  return pad(d.getMinutes(), p, 2);\n}\n\nfunction formatSeconds(d, p) {\n  return pad(d.getSeconds(), p, 2);\n}\n\nfunction formatWeekdayNumberMonday(d) {\n  var day = d.getDay();\n  return day === 0 ? 7 : day;\n}\n\nfunction formatWeekNumberSunday(d, p) {\n  return pad(timeSunday.count(timeYear(d), d), p, 2);\n}\n\nfunction formatWeekNumberISO(d, p) {\n  var day = d.getDay();\n  d = (day >= 4 || day === 0) ? timeThursday(d) : timeThursday.ceil(d);\n  return pad(timeThursday.count(timeYear(d), d) + (timeYear(d).getDay() === 4), p, 2);\n}\n\nfunction formatWeekdayNumberSunday(d) {\n  return d.getDay();\n}\n\nfunction formatWeekNumberMonday(d, p) {\n  return pad(timeMonday.count(timeYear(d), d), p, 2);\n}\n\nfunction formatYear(d, p) {\n  return pad(d.getFullYear() % 100, p, 2);\n}\n\nfunction formatFullYear(d, p) {\n  return pad(d.getFullYear() % 10000, p, 4);\n}\n\nfunction formatZone(d) {\n  var z = d.getTimezoneOffset();\n  return (z > 0 ? \"-\" : (z *= -1, \"+\"))\n      + pad(z / 60 | 0, \"0\", 2)\n      + pad(z % 60, \"0\", 2);\n}\n\nfunction formatUTCDayOfMonth(d, p) {\n  return pad(d.getUTCDate(), p, 2);\n}\n\nfunction formatUTCHour24(d, p) {\n  return pad(d.getUTCHours(), p, 2);\n}\n\nfunction formatUTCHour12(d, p) {\n  return pad(d.getUTCHours() % 12 || 12, p, 2);\n}\n\nfunction formatUTCDayOfYear(d, p) {\n  return pad(1 + utcDay.count(utcYear(d), d), p, 3);\n}\n\nfunction formatUTCMilliseconds(d, p) {\n  return pad(d.getUTCMilliseconds(), p, 3);\n}\n\nfunction formatUTCMicroseconds(d, p) {\n  return formatUTCMilliseconds(d, p) + \"000\";\n}\n\nfunction formatUTCMonthNumber(d, p) {\n  return pad(d.getUTCMonth() + 1, p, 2);\n}\n\nfunction formatUTCMinutes(d, p) {\n  return pad(d.getUTCMinutes(), p, 2);\n}\n\nfunction formatUTCSeconds(d, p) {\n  return pad(d.getUTCSeconds(), p, 2);\n}\n\nfunction formatUTCWeekdayNumberMonday(d) {\n  var dow = d.getUTCDay();\n  return dow === 0 ? 7 : dow;\n}\n\nfunction formatUTCWeekNumberSunday(d, p) {\n  return pad(utcSunday.count(utcYear(d), d), p, 2);\n}\n\nfunction formatUTCWeekNumberISO(d, p) {\n  var day = d.getUTCDay();\n  d = (day >= 4 || day === 0) ? utcThursday(d) : utcThursday.ceil(d);\n  return pad(utcThursday.count(utcYear(d), d) + (utcYear(d).getUTCDay() === 4), p, 2);\n}\n\nfunction formatUTCWeekdayNumberSunday(d) {\n  return d.getUTCDay();\n}\n\nfunction formatUTCWeekNumberMonday(d, p) {\n  return pad(utcMonday.count(utcYear(d), d), p, 2);\n}\n\nfunction formatUTCYear(d, p) {\n  return pad(d.getUTCFullYear() % 100, p, 2);\n}\n\nfunction formatUTCFullYear(d, p) {\n  return pad(d.getUTCFullYear() % 10000, p, 4);\n}\n\nfunction formatUTCZone() {\n  return \"+0000\";\n}\n\nfunction formatLiteralPercent() {\n  return \"%\";\n}\n\nfunction formatUnixTimestamp(d) {\n  return +d;\n}\n\nfunction formatUnixTimestampSeconds(d) {\n  return Math.floor(+d / 1000);\n}\n","import formatLocale from \"./locale\";\n\nvar locale;\nexport var timeFormat;\nexport var timeParse;\nexport var utcFormat;\nexport var utcParse;\n\ndefaultLocale({\n  dateTime: \"%x, %X\",\n  date: \"%-m/%-d/%Y\",\n  time: \"%-I:%M:%S %p\",\n  periods: [\"AM\", \"PM\"],\n  days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n  shortDays: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n  months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n  shortMonths: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n});\n\nexport default function defaultLocale(definition) {\n  locale = formatLocale(definition);\n  timeFormat = locale.format;\n  timeParse = locale.parse;\n  utcFormat = locale.utcFormat;\n  utcParse = locale.utcParse;\n  return locale;\n}\n","import {utcFormat} from \"./defaultLocale\";\n\nexport var isoSpecifier = \"%Y-%m-%dT%H:%M:%S.%LZ\";\n\nfunction formatIsoNative(date) {\n  return date.toISOString();\n}\n\nvar formatIso = Date.prototype.toISOString\n    ? formatIsoNative\n    : utcFormat(isoSpecifier);\n\nexport default formatIso;\n","import {isoSpecifier} from \"./isoFormat\";\nimport {utcParse} from \"./defaultLocale\";\n\nfunction parseIsoNative(string) {\n  var date = new Date(string);\n  return isNaN(date) ? null : date;\n}\n\nvar parseIso = +new Date(\"2000-01-01T00:00:00.000Z\")\n    ? parseIsoNative\n    : utcParse(isoSpecifier);\n\nexport default parseIso;\n","import {bisector, tickStep} from \"d3-array\";\nimport {interpolateNumber as reinterpolate} from \"d3-interpolate\";\nimport {timeYear, timeMonth, timeWeek, timeDay, timeHour, timeMinute, timeSecond, timeMillisecond} from \"d3-time\";\nimport {timeFormat} from \"d3-time-format\";\nimport {map} from \"./array\";\nimport {default as continuous, copy, deinterpolateLinear as deinterpolate} from \"./continuous\";\nimport nice from \"./nice\";\n\nvar durationSecond = 1000,\n    durationMinute = durationSecond * 60,\n    durationHour = durationMinute * 60,\n    durationDay = durationHour * 24,\n    durationWeek = durationDay * 7,\n    durationMonth = durationDay * 30,\n    durationYear = durationDay * 365;\n\nfunction date(t) {\n  return new Date(t);\n}\n\nfunction number(t) {\n  return t instanceof Date ? +t : +new Date(+t);\n}\n\nexport function calendar(year, month, week, day, hour, minute, second, millisecond, format) {\n  var scale = continuous(deinterpolate, reinterpolate),\n      invert = scale.invert,\n      domain = scale.domain;\n\n  var formatMillisecond = format(\".%L\"),\n      formatSecond = format(\":%S\"),\n      formatMinute = format(\"%I:%M\"),\n      formatHour = format(\"%I %p\"),\n      formatDay = format(\"%a %d\"),\n      formatWeek = format(\"%b %d\"),\n      formatMonth = format(\"%B\"),\n      formatYear = format(\"%Y\");\n\n  var tickIntervals = [\n    [second,  1,      durationSecond],\n    [second,  5,  5 * durationSecond],\n    [second, 15, 15 * durationSecond],\n    [second, 30, 30 * durationSecond],\n    [minute,  1,      durationMinute],\n    [minute,  5,  5 * durationMinute],\n    [minute, 15, 15 * durationMinute],\n    [minute, 30, 30 * durationMinute],\n    [  hour,  1,      durationHour  ],\n    [  hour,  3,  3 * durationHour  ],\n    [  hour,  6,  6 * durationHour  ],\n    [  hour, 12, 12 * durationHour  ],\n    [   day,  1,      durationDay   ],\n    [   day,  2,  2 * durationDay   ],\n    [  week,  1,      durationWeek  ],\n    [ month,  1,      durationMonth ],\n    [ month,  3,  3 * durationMonth ],\n    [  year,  1,      durationYear  ]\n  ];\n\n  function tickFormat(date) {\n    return (second(date) < date ? formatMillisecond\n        : minute(date) < date ? formatSecond\n        : hour(date) < date ? formatMinute\n        : day(date) < date ? formatHour\n        : month(date) < date ? (week(date) < date ? formatDay : formatWeek)\n        : year(date) < date ? formatMonth\n        : formatYear)(date);\n  }\n\n  function tickInterval(interval, start, stop, step) {\n    if (interval == null) interval = 10;\n\n    // If a desired tick count is specified, pick a reasonable tick interval\n    // based on the extent of the domain and a rough estimate of tick size.\n    // Otherwise, assume interval is already a time interval and use it.\n    if (typeof interval === \"number\") {\n      var target = Math.abs(stop - start) / interval,\n          i = bisector(function(i) { return i[2]; }).right(tickIntervals, target);\n      if (i === tickIntervals.length) {\n        step = tickStep(start / durationYear, stop / durationYear, interval);\n        interval = year;\n      } else if (i) {\n        i = tickIntervals[target / tickIntervals[i - 1][2] < tickIntervals[i][2] / target ? i - 1 : i];\n        step = i[1];\n        interval = i[0];\n      } else {\n        step = Math.max(tickStep(start, stop, interval), 1);\n        interval = millisecond;\n      }\n    }\n\n    return step == null ? interval : interval.every(step);\n  }\n\n  scale.invert = function(y) {\n    return new Date(invert(y));\n  };\n\n  scale.domain = function(_) {\n    return arguments.length ? domain(map.call(_, number)) : domain().map(date);\n  };\n\n  scale.ticks = function(interval, step) {\n    var d = domain(),\n        t0 = d[0],\n        t1 = d[d.length - 1],\n        r = t1 < t0,\n        t;\n    if (r) t = t0, t0 = t1, t1 = t;\n    t = tickInterval(interval, t0, t1, step);\n    t = t ? t.range(t0, t1 + 1) : []; // inclusive stop\n    return r ? t.reverse() : t;\n  };\n\n  scale.tickFormat = function(count, specifier) {\n    return specifier == null ? tickFormat : format(specifier);\n  };\n\n  scale.nice = function(interval, step) {\n    var d = domain();\n    return (interval = tickInterval(interval, d[0], d[d.length - 1], step))\n        ? domain(nice(d, interval))\n        : scale;\n  };\n\n  scale.copy = function() {\n    return copy(scale, calendar(year, month, week, day, hour, minute, second, millisecond, format));\n  };\n\n  return scale;\n}\n\nexport default function() {\n  return calendar(timeYear, timeMonth, timeWeek, timeDay, timeHour, timeMinute, timeSecond, timeMillisecond, timeFormat).domain([new Date(2000, 0, 1), new Date(2000, 0, 2)]);\n}\n","import {calendar} from \"./time\";\nimport {utcFormat} from \"d3-time-format\";\nimport {utcYear, utcMonth, utcWeek, utcDay, utcHour, utcMinute, utcSecond, utcMillisecond} from \"d3-time\";\n\nexport default function() {\n  return calendar(utcYear, utcMonth, utcWeek, utcDay, utcHour, utcMinute, utcSecond, utcMillisecond, utcFormat).domain([Date.UTC(2000, 0, 1), Date.UTC(2000, 0, 2)]);\n}\n","import {linearish} from \"./linear\";\n\nexport default function sequential(interpolator) {\n  var x0 = 0,\n      x1 = 1,\n      k10 = 1,\n      clamp = false;\n\n  function scale(x) {\n    var t = (x - x0) * k10;\n    return interpolator(clamp ? Math.max(0, Math.min(1, t)) : t);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], k10 = x0 === x1 ? 0 : 1 / (x1 - x0), scale) : [x0, x1];\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, scale) : clamp;\n  };\n\n  scale.interpolator = function(_) {\n    return arguments.length ? (interpolator = _, scale) : interpolator;\n  };\n\n  scale.copy = function() {\n    return sequential(interpolator).domain([x0, x1]).clamp(clamp);\n  };\n\n  return linearish(scale);\n}\n","import {linearish} from \"./linear\";\n\nexport default function diverging(interpolator) {\n  var x0 = 0,\n      x1 = 0.5,\n      x2 = 1,\n      k10 = 1,\n      k21 = 1,\n      clamp = false;\n\n  function scale(x) {\n    var t = 0.5 + ((x = +x) - x1) * (x < x1 ? k10 : k21);\n    return interpolator(clamp ? Math.max(0, Math.min(1, t)) : t);\n  }\n\n  scale.domain = function(_) {\n    return arguments.length ? (x0 = +_[0], x1 = +_[1], x2 = +_[2], k10 = x0 === x1 ? 0 : 0.5 / (x1 - x0), k21 = x1 === x2 ? 0 : 0.5 / (x2 - x1), scale) : [x0, x1, x2];\n  };\n\n  scale.clamp = function(_) {\n    return arguments.length ? (clamp = !!_, scale) : clamp;\n  };\n\n  scale.interpolator = function(_) {\n    return arguments.length ? (interpolator = _, scale) : interpolator;\n  };\n\n  scale.copy = function() {\n    return diverging(interpolator).domain([x0, x1, x2]).clamp(clamp);\n  };\n\n  return linearish(scale);\n}\n","export default function(specifier) {\n  var n = specifier.length / 6 | 0, colors = new Array(n), i = 0;\n  while (i < n) colors[i] = \"#\" + specifier.slice(i * 6, ++i * 6);\n  return colors;\n}\n","import colors from \"../colors\";\n\nexport default colors(\"1f77b4ff7f0e2ca02cd627289467bd8c564be377c27f7f7fbcbd2217becf\");\n","import colors from \"../colors\";\n\nexport default colors(\"7fc97fbeaed4fdc086ffff99386cb0f0027fbf5b17666666\");\n","import colors from \"../colors\";\n\nexport default colors(\"1b9e77d95f027570b3e7298a66a61ee6ab02a6761d666666\");\n","import colors from \"../colors\";\n\nexport default colors(\"a6cee31f78b4b2df8a33a02cfb9a99e31a1cfdbf6fff7f00cab2d66a3d9affff99b15928\");\n","import colors from \"../colors\";\n\nexport default colors(\"fbb4aeb3cde3ccebc5decbe4fed9a6ffffcce5d8bdfddaecf2f2f2\");\n","import colors from \"../colors\";\n\nexport default colors(\"b3e2cdfdcdaccbd5e8f4cae4e6f5c9fff2aef1e2cccccccc\");\n","import colors from \"../colors\";\n\nexport default colors(\"e41a1c377eb84daf4a984ea3ff7f00ffff33a65628f781bf999999\");\n","import colors from \"../colors\";\n\nexport default colors(\"66c2a5fc8d628da0cbe78ac3a6d854ffd92fe5c494b3b3b3\");\n","import colors from \"../colors\";\n\nexport default colors(\"8dd3c7ffffb3bebadafb807280b1d3fdb462b3de69fccde5d9d9d9bc80bdccebc5ffed6f\");\n","import {interpolateRgbBasis} from \"d3-interpolate\";\n\nexport default function(scheme) {\n  return interpolateRgbBasis(scheme[scheme.length - 1]);\n}\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"d8b365f5f5f55ab4ac\",\n  \"a6611adfc27d80cdc1018571\",\n  \"a6611adfc27df5f5f580cdc1018571\",\n  \"8c510ad8b365f6e8c3c7eae55ab4ac01665e\",\n  \"8c510ad8b365f6e8c3f5f5f5c7eae55ab4ac01665e\",\n  \"8c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e\",\n  \"8c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e\",\n  \"5430058c510abf812ddfc27df6e8c3c7eae580cdc135978f01665e003c30\",\n  \"5430058c510abf812ddfc27df6e8c3f5f5f5c7eae580cdc135978f01665e003c30\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"af8dc3f7f7f77fbf7b\",\n  \"7b3294c2a5cfa6dba0008837\",\n  \"7b3294c2a5cff7f7f7a6dba0008837\",\n  \"762a83af8dc3e7d4e8d9f0d37fbf7b1b7837\",\n  \"762a83af8dc3e7d4e8f7f7f7d9f0d37fbf7b1b7837\",\n  \"762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b7837\",\n  \"762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b7837\",\n  \"40004b762a839970abc2a5cfe7d4e8d9f0d3a6dba05aae611b783700441b\",\n  \"40004b762a839970abc2a5cfe7d4e8f7f7f7d9f0d3a6dba05aae611b783700441b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e9a3c9f7f7f7a1d76a\",\n  \"d01c8bf1b6dab8e1864dac26\",\n  \"d01c8bf1b6daf7f7f7b8e1864dac26\",\n  \"c51b7de9a3c9fde0efe6f5d0a1d76a4d9221\",\n  \"c51b7de9a3c9fde0eff7f7f7e6f5d0a1d76a4d9221\",\n  \"c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221\",\n  \"c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221\",\n  \"8e0152c51b7dde77aef1b6dafde0efe6f5d0b8e1867fbc414d9221276419\",\n  \"8e0152c51b7dde77aef1b6dafde0eff7f7f7e6f5d0b8e1867fbc414d9221276419\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"998ec3f7f7f7f1a340\",\n  \"5e3c99b2abd2fdb863e66101\",\n  \"5e3c99b2abd2f7f7f7fdb863e66101\",\n  \"542788998ec3d8daebfee0b6f1a340b35806\",\n  \"542788998ec3d8daebf7f7f7fee0b6f1a340b35806\",\n  \"5427888073acb2abd2d8daebfee0b6fdb863e08214b35806\",\n  \"5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b35806\",\n  \"2d004b5427888073acb2abd2d8daebfee0b6fdb863e08214b358067f3b08\",\n  \"2d004b5427888073acb2abd2d8daebf7f7f7fee0b6fdb863e08214b358067f3b08\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ef8a62f7f7f767a9cf\",\n  \"ca0020f4a58292c5de0571b0\",\n  \"ca0020f4a582f7f7f792c5de0571b0\",\n  \"b2182bef8a62fddbc7d1e5f067a9cf2166ac\",\n  \"b2182bef8a62fddbc7f7f7f7d1e5f067a9cf2166ac\",\n  \"b2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac\",\n  \"b2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac\",\n  \"67001fb2182bd6604df4a582fddbc7d1e5f092c5de4393c32166ac053061\",\n  \"67001fb2182bd6604df4a582fddbc7f7f7f7d1e5f092c5de4393c32166ac053061\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ef8a62ffffff999999\",\n  \"ca0020f4a582bababa404040\",\n  \"ca0020f4a582ffffffbababa404040\",\n  \"b2182bef8a62fddbc7e0e0e09999994d4d4d\",\n  \"b2182bef8a62fddbc7ffffffe0e0e09999994d4d4d\",\n  \"b2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d\",\n  \"b2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d\",\n  \"67001fb2182bd6604df4a582fddbc7e0e0e0bababa8787874d4d4d1a1a1a\",\n  \"67001fb2182bd6604df4a582fddbc7ffffffe0e0e0bababa8787874d4d4d1a1a1a\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fc8d59ffffbf91bfdb\",\n  \"d7191cfdae61abd9e92c7bb6\",\n  \"d7191cfdae61ffffbfabd9e92c7bb6\",\n  \"d73027fc8d59fee090e0f3f891bfdb4575b4\",\n  \"d73027fc8d59fee090ffffbfe0f3f891bfdb4575b4\",\n  \"d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4\",\n  \"d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4\",\n  \"a50026d73027f46d43fdae61fee090e0f3f8abd9e974add14575b4313695\",\n  \"a50026d73027f46d43fdae61fee090ffffbfe0f3f8abd9e974add14575b4313695\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fc8d59ffffbf91cf60\",\n  \"d7191cfdae61a6d96a1a9641\",\n  \"d7191cfdae61ffffbfa6d96a1a9641\",\n  \"d73027fc8d59fee08bd9ef8b91cf601a9850\",\n  \"d73027fc8d59fee08bffffbfd9ef8b91cf601a9850\",\n  \"d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850\",\n  \"d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850\",\n  \"a50026d73027f46d43fdae61fee08bd9ef8ba6d96a66bd631a9850006837\",\n  \"a50026d73027f46d43fdae61fee08bffffbfd9ef8ba6d96a66bd631a9850006837\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fc8d59ffffbf99d594\",\n  \"d7191cfdae61abdda42b83ba\",\n  \"d7191cfdae61ffffbfabdda42b83ba\",\n  \"d53e4ffc8d59fee08be6f59899d5943288bd\",\n  \"d53e4ffc8d59fee08bffffbfe6f59899d5943288bd\",\n  \"d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd\",\n  \"d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd\",\n  \"9e0142d53e4ff46d43fdae61fee08be6f598abdda466c2a53288bd5e4fa2\",\n  \"9e0142d53e4ff46d43fdae61fee08bffffbfe6f598abdda466c2a53288bd5e4fa2\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e5f5f999d8c92ca25f\",\n  \"edf8fbb2e2e266c2a4238b45\",\n  \"edf8fbb2e2e266c2a42ca25f006d2c\",\n  \"edf8fbccece699d8c966c2a42ca25f006d2c\",\n  \"edf8fbccece699d8c966c2a441ae76238b45005824\",\n  \"f7fcfde5f5f9ccece699d8c966c2a441ae76238b45005824\",\n  \"f7fcfde5f5f9ccece699d8c966c2a441ae76238b45006d2c00441b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e0ecf49ebcda8856a7\",\n  \"edf8fbb3cde38c96c688419d\",\n  \"edf8fbb3cde38c96c68856a7810f7c\",\n  \"edf8fbbfd3e69ebcda8c96c68856a7810f7c\",\n  \"edf8fbbfd3e69ebcda8c96c68c6bb188419d6e016b\",\n  \"f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d6e016b\",\n  \"f7fcfde0ecf4bfd3e69ebcda8c96c68c6bb188419d810f7c4d004b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e0f3dba8ddb543a2ca\",\n  \"f0f9e8bae4bc7bccc42b8cbe\",\n  \"f0f9e8bae4bc7bccc443a2ca0868ac\",\n  \"f0f9e8ccebc5a8ddb57bccc443a2ca0868ac\",\n  \"f0f9e8ccebc5a8ddb57bccc44eb3d32b8cbe08589e\",\n  \"f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe08589e\",\n  \"f7fcf0e0f3dbccebc5a8ddb57bccc44eb3d32b8cbe0868ac084081\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fee8c8fdbb84e34a33\",\n  \"fef0d9fdcc8afc8d59d7301f\",\n  \"fef0d9fdcc8afc8d59e34a33b30000\",\n  \"fef0d9fdd49efdbb84fc8d59e34a33b30000\",\n  \"fef0d9fdd49efdbb84fc8d59ef6548d7301f990000\",\n  \"fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301f990000\",\n  \"fff7ecfee8c8fdd49efdbb84fc8d59ef6548d7301fb300007f0000\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ece2f0a6bddb1c9099\",\n  \"f6eff7bdc9e167a9cf02818a\",\n  \"f6eff7bdc9e167a9cf1c9099016c59\",\n  \"f6eff7d0d1e6a6bddb67a9cf1c9099016c59\",\n  \"f6eff7d0d1e6a6bddb67a9cf3690c002818a016450\",\n  \"fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016450\",\n  \"fff7fbece2f0d0d1e6a6bddb67a9cf3690c002818a016c59014636\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ece7f2a6bddb2b8cbe\",\n  \"f1eef6bdc9e174a9cf0570b0\",\n  \"f1eef6bdc9e174a9cf2b8cbe045a8d\",\n  \"f1eef6d0d1e6a6bddb74a9cf2b8cbe045a8d\",\n  \"f1eef6d0d1e6a6bddb74a9cf3690c00570b0034e7b\",\n  \"fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0034e7b\",\n  \"fff7fbece7f2d0d1e6a6bddb74a9cf3690c00570b0045a8d023858\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e7e1efc994c7dd1c77\",\n  \"f1eef6d7b5d8df65b0ce1256\",\n  \"f1eef6d7b5d8df65b0dd1c77980043\",\n  \"f1eef6d4b9dac994c7df65b0dd1c77980043\",\n  \"f1eef6d4b9dac994c7df65b0e7298ace125691003f\",\n  \"f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125691003f\",\n  \"f7f4f9e7e1efd4b9dac994c7df65b0e7298ace125698004367001f\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fde0ddfa9fb5c51b8a\",\n  \"feebe2fbb4b9f768a1ae017e\",\n  \"feebe2fbb4b9f768a1c51b8a7a0177\",\n  \"feebe2fcc5c0fa9fb5f768a1c51b8a7a0177\",\n  \"feebe2fcc5c0fa9fb5f768a1dd3497ae017e7a0177\",\n  \"fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a0177\",\n  \"fff7f3fde0ddfcc5c0fa9fb5f768a1dd3497ae017e7a017749006a\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"edf8b17fcdbb2c7fb8\",\n  \"ffffcca1dab441b6c4225ea8\",\n  \"ffffcca1dab441b6c42c7fb8253494\",\n  \"ffffccc7e9b47fcdbb41b6c42c7fb8253494\",\n  \"ffffccc7e9b47fcdbb41b6c41d91c0225ea80c2c84\",\n  \"ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea80c2c84\",\n  \"ffffd9edf8b1c7e9b47fcdbb41b6c41d91c0225ea8253494081d58\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"f7fcb9addd8e31a354\",\n  \"ffffccc2e69978c679238443\",\n  \"ffffccc2e69978c67931a354006837\",\n  \"ffffccd9f0a3addd8e78c67931a354006837\",\n  \"ffffccd9f0a3addd8e78c67941ab5d238443005a32\",\n  \"ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443005a32\",\n  \"ffffe5f7fcb9d9f0a3addd8e78c67941ab5d238443006837004529\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fff7bcfec44fd95f0e\",\n  \"ffffd4fed98efe9929cc4c02\",\n  \"ffffd4fed98efe9929d95f0e993404\",\n  \"ffffd4fee391fec44ffe9929d95f0e993404\",\n  \"ffffd4fee391fec44ffe9929ec7014cc4c028c2d04\",\n  \"ffffe5fff7bcfee391fec44ffe9929ec7014cc4c028c2d04\",\n  \"ffffe5fff7bcfee391fec44ffe9929ec7014cc4c02993404662506\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"ffeda0feb24cf03b20\",\n  \"ffffb2fecc5cfd8d3ce31a1c\",\n  \"ffffb2fecc5cfd8d3cf03b20bd0026\",\n  \"ffffb2fed976feb24cfd8d3cf03b20bd0026\",\n  \"ffffb2fed976feb24cfd8d3cfc4e2ae31a1cb10026\",\n  \"ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cb10026\",\n  \"ffffccffeda0fed976feb24cfd8d3cfc4e2ae31a1cbd0026800026\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"deebf79ecae13182bd\",\n  \"eff3ffbdd7e76baed62171b5\",\n  \"eff3ffbdd7e76baed63182bd08519c\",\n  \"eff3ffc6dbef9ecae16baed63182bd08519c\",\n  \"eff3ffc6dbef9ecae16baed64292c62171b5084594\",\n  \"f7fbffdeebf7c6dbef9ecae16baed64292c62171b5084594\",\n  \"f7fbffdeebf7c6dbef9ecae16baed64292c62171b508519c08306b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"e5f5e0a1d99b31a354\",\n  \"edf8e9bae4b374c476238b45\",\n  \"edf8e9bae4b374c47631a354006d2c\",\n  \"edf8e9c7e9c0a1d99b74c47631a354006d2c\",\n  \"edf8e9c7e9c0a1d99b74c47641ab5d238b45005a32\",\n  \"f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45005a32\",\n  \"f7fcf5e5f5e0c7e9c0a1d99b74c47641ab5d238b45006d2c00441b\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"f0f0f0bdbdbd636363\",\n  \"f7f7f7cccccc969696525252\",\n  \"f7f7f7cccccc969696636363252525\",\n  \"f7f7f7d9d9d9bdbdbd969696636363252525\",\n  \"f7f7f7d9d9d9bdbdbd969696737373525252252525\",\n  \"fffffff0f0f0d9d9d9bdbdbd969696737373525252252525\",\n  \"fffffff0f0f0d9d9d9bdbdbd969696737373525252252525000000\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"efedf5bcbddc756bb1\",\n  \"f2f0f7cbc9e29e9ac86a51a3\",\n  \"f2f0f7cbc9e29e9ac8756bb154278f\",\n  \"f2f0f7dadaebbcbddc9e9ac8756bb154278f\",\n  \"f2f0f7dadaebbcbddc9e9ac8807dba6a51a34a1486\",\n  \"fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a34a1486\",\n  \"fcfbfdefedf5dadaebbcbddc9e9ac8807dba6a51a354278f3f007d\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fee0d2fc9272de2d26\",\n  \"fee5d9fcae91fb6a4acb181d\",\n  \"fee5d9fcae91fb6a4ade2d26a50f15\",\n  \"fee5d9fcbba1fc9272fb6a4ade2d26a50f15\",\n  \"fee5d9fcbba1fc9272fb6a4aef3b2ccb181d99000d\",\n  \"fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181d99000d\",\n  \"fff5f0fee0d2fcbba1fc9272fb6a4aef3b2ccb181da50f1567000d\"\n).map(colors);\n\nexport default ramp(scheme);\n","import colors from \"../colors\";\nimport ramp from \"../ramp\";\n\nexport var scheme = new Array(3).concat(\n  \"fee6cefdae6be6550d\",\n  \"feeddefdbe85fd8d3cd94701\",\n  \"feeddefdbe85fd8d3ce6550da63603\",\n  \"feeddefdd0a2fdae6bfd8d3ce6550da63603\",\n  \"feeddefdd0a2fdae6bfd8d3cf16913d948018c2d04\",\n  \"fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d948018c2d04\",\n  \"fff5ebfee6cefdd0a2fdae6bfd8d3cf16913d94801a636037f2704\"\n).map(colors);\n\nexport default ramp(scheme);\n","import {cubehelix} from \"d3-color\";\nimport {interpolateCubehelixLong} from \"d3-interpolate\";\n\nexport default interpolateCubehelixLong(cubehelix(300, 0.5, 0.0), cubehelix(-240, 0.5, 1.0));\n","import {cubehelix} from \"d3-color\";\nimport {interpolateCubehelixLong} from \"d3-interpolate\";\n\nexport var warm = interpolateCubehelixLong(cubehelix(-100, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nexport var cool = interpolateCubehelixLong(cubehelix(260, 0.75, 0.35), cubehelix(80, 1.50, 0.8));\n\nvar c = cubehelix();\n\nexport default function(t) {\n  if (t < 0 || t > 1) t -= Math.floor(t);\n  var ts = Math.abs(t - 0.5);\n  c.h = 360 * t - 100;\n  c.s = 1.5 - 1.5 * ts;\n  c.l = 0.8 - 0.9 * ts;\n  return c + \"\";\n}\n","import {rgb} from \"d3-color\";\n\nvar c = rgb(),\n    pi_1_3 = Math.PI / 3,\n    pi_2_3 = Math.PI * 2 / 3;\n\nexport default function(t) {\n  var x;\n  t = (0.5 - t) * Math.PI;\n  c.r = 255 * (x = Math.sin(t)) * x;\n  c.g = 255 * (x = Math.sin(t + pi_1_3)) * x;\n  c.b = 255 * (x = Math.sin(t + pi_2_3)) * x;\n  return c + \"\";\n}\n","import colors from \"../colors\";\n\nfunction ramp(range) {\n  var n = range.length;\n  return function(t) {\n    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];\n  };\n}\n\nexport default ramp(colors(\"44015444025645045745055946075a46085c460a5d460b5e470d60470e6147106347116447136548146748166848176948186a481a6c481b6d481c6e481d6f481f70482071482173482374482475482576482677482878482979472a7a472c7a472d7b472e7c472f7d46307e46327e46337f463480453581453781453882443983443a83443b84433d84433e85423f854240864241864142874144874045884046883f47883f48893e49893e4a893e4c8a3d4d8a3d4e8a3c4f8a3c508b3b518b3b528b3a538b3a548c39558c39568c38588c38598c375a8c375b8d365c8d365d8d355e8d355f8d34608d34618d33628d33638d32648e32658e31668e31678e31688e30698e306a8e2f6b8e2f6c8e2e6d8e2e6e8e2e6f8e2d708e2d718e2c718e2c728e2c738e2b748e2b758e2a768e2a778e2a788e29798e297a8e297b8e287c8e287d8e277e8e277f8e27808e26818e26828e26828e25838e25848e25858e24868e24878e23888e23898e238a8d228b8d228c8d228d8d218e8d218f8d21908d21918c20928c20928c20938c1f948c1f958b1f968b1f978b1f988b1f998a1f9a8a1e9b8a1e9c891e9d891f9e891f9f881fa0881fa1881fa1871fa28720a38620a48621a58521a68522a78522a88423a98324aa8325ab8225ac8226ad8127ad8128ae8029af7f2ab07f2cb17e2db27d2eb37c2fb47c31b57b32b67a34b67935b77937b87838b9773aba763bbb753dbc743fbc7340bd7242be7144bf7046c06f48c16e4ac16d4cc26c4ec36b50c46a52c56954c56856c66758c7655ac8645cc8635ec96260ca6063cb5f65cb5e67cc5c69cd5b6ccd5a6ece5870cf5773d05675d05477d1537ad1517cd2507fd34e81d34d84d44b86d54989d5488bd6468ed64590d74393d74195d84098d83e9bd93c9dd93ba0da39a2da37a5db36a8db34aadc32addc30b0dd2fb2dd2db5de2bb8de29bade28bddf26c0df25c2df23c5e021c8e020cae11fcde11dd0e11cd2e21bd5e21ad8e219dae319dde318dfe318e2e418e5e419e7e419eae51aece51befe51cf1e51df4e61ef6e620f8e621fbe723fde725\"));\n\nexport var magma = ramp(colors(\"00000401000501010601010802010902020b02020d03030f03031204041405041606051806051a07061c08071e0907200a08220b09240c09260d0a290e0b2b100b2d110c2f120d31130d34140e36150e38160f3b180f3d19103f1a10421c10441d11471e114920114b21114e22115024125325125527125829115a2a115c2c115f2d11612f116331116533106734106936106b38106c390f6e3b0f703d0f713f0f72400f74420f75440f764510774710784910784a10794c117a4e117b4f127b51127c52137c54137d56147d57157e59157e5a167e5c167f5d177f5f187f601880621980641a80651a80671b80681c816a1c816b1d816d1d816e1e81701f81721f817320817521817621817822817922827b23827c23827e24828025828125818326818426818627818827818928818b29818c29818e2a81902a81912b81932b80942c80962c80982d80992d809b2e7f9c2e7f9e2f7fa02f7fa1307ea3307ea5317ea6317da8327daa337dab337cad347cae347bb0357bb2357bb3367ab5367ab73779b83779ba3878bc3978bd3977bf3a77c03a76c23b75c43c75c53c74c73d73c83e73ca3e72cc3f71cd4071cf4070d0416fd2426fd3436ed5446dd6456cd8456cd9466bdb476adc4869de4968df4a68e04c67e24d66e34e65e44f64e55064e75263e85362e95462ea5661eb5760ec5860ed5a5fee5b5eef5d5ef05f5ef1605df2625df2645cf3655cf4675cf4695cf56b5cf66c5cf66e5cf7705cf7725cf8745cf8765cf9785df9795df97b5dfa7d5efa7f5efa815ffb835ffb8560fb8761fc8961fc8a62fc8c63fc8e64fc9065fd9266fd9467fd9668fd9869fd9a6afd9b6bfe9d6cfe9f6dfea16efea36ffea571fea772fea973feaa74feac76feae77feb078feb27afeb47bfeb67cfeb77efeb97ffebb81febd82febf84fec185fec287fec488fec68afec88cfeca8dfecc8ffecd90fecf92fed194fed395fed597fed799fed89afdda9cfddc9efddea0fde0a1fde2a3fde3a5fde5a7fde7a9fde9aafdebacfcecaefceeb0fcf0b2fcf2b4fcf4b6fcf6b8fcf7b9fcf9bbfcfbbdfcfdbf\"));\n\nexport var inferno = ramp(colors(\"00000401000501010601010802010a02020c02020e03021004031204031405041706041907051b08051d09061f0a07220b07240c08260d08290e092b10092d110a30120a32140b34150b37160b39180c3c190c3e1b0c411c0c431e0c451f0c48210c4a230c4c240c4f260c51280b53290b552b0b572d0b592f0a5b310a5c320a5e340a5f3609613809623909633b09643d09653e0966400a67420a68440a68450a69470b6a490b6a4a0c6b4c0c6b4d0d6c4f0d6c510e6c520e6d540f6d550f6d57106e59106e5a116e5c126e5d126e5f136e61136e62146e64156e65156e67166e69166e6a176e6c186e6d186e6f196e71196e721a6e741a6e751b6e771c6d781c6d7a1d6d7c1d6d7d1e6d7f1e6c801f6c82206c84206b85216b87216b88226a8a226a8c23698d23698f24699025689225689326679526679727669827669a28659b29649d29649f2a63a02a63a22b62a32c61a52c60a62d60a82e5fa92e5eab2f5ead305dae305cb0315bb1325ab3325ab43359b63458b73557b93556ba3655bc3754bd3853bf3952c03a51c13a50c33b4fc43c4ec63d4dc73e4cc83f4bca404acb4149cc4248ce4347cf4446d04545d24644d34743d44842d54a41d74b3fd84c3ed94d3dda4e3cdb503bdd513ade5238df5337e05536e15635e25734e35933e45a31e55c30e65d2fe75e2ee8602de9612bea632aeb6429eb6628ec6726ed6925ee6a24ef6c23ef6e21f06f20f1711ff1731df2741cf3761bf37819f47918f57b17f57d15f67e14f68013f78212f78410f8850ff8870ef8890cf98b0bf98c0af98e09fa9008fa9207fa9407fb9606fb9706fb9906fb9b06fb9d07fc9f07fca108fca309fca50afca60cfca80dfcaa0ffcac11fcae12fcb014fcb216fcb418fbb61afbb81dfbba1ffbbc21fbbe23fac026fac228fac42afac62df9c72ff9c932f9cb35f8cd37f8cf3af7d13df7d340f6d543f6d746f5d949f5db4cf4dd4ff4df53f4e156f3e35af3e55df2e661f2e865f2ea69f1ec6df1ed71f1ef75f1f179f2f27df2f482f3f586f3f68af4f88ef5f992f6fa96f8fb9af9fc9dfafda1fcffa4\"));\n\nexport var plasma = ramp(colors(\"0d088710078813078916078a19068c1b068d1d068e20068f2206902406912605912805922a05932c05942e05952f059631059733059735049837049938049a3a049a3c049b3e049c3f049c41049d43039e44039e46039f48039f4903a04b03a14c02a14e02a25002a25102a35302a35502a45601a45801a45901a55b01a55c01a65e01a66001a66100a76300a76400a76600a76700a86900a86a00a86c00a86e00a86f00a87100a87201a87401a87501a87701a87801a87a02a87b02a87d03a87e03a88004a88104a78305a78405a78606a68707a68808a68a09a58b0aa58d0ba58e0ca48f0da4910ea3920fa39410a29511a19613a19814a099159f9a169f9c179e9d189d9e199da01a9ca11b9ba21d9aa31e9aa51f99a62098a72197a82296aa2395ab2494ac2694ad2793ae2892b02991b12a90b22b8fb32c8eb42e8db52f8cb6308bb7318ab83289ba3388bb3488bc3587bd3786be3885bf3984c03a83c13b82c23c81c33d80c43e7fc5407ec6417dc7427cc8437bc9447aca457acb4679cc4778cc4977cd4a76ce4b75cf4c74d04d73d14e72d24f71d35171d45270d5536fd5546ed6556dd7566cd8576bd9586ada5a6ada5b69db5c68dc5d67dd5e66de5f65de6164df6263e06363e16462e26561e26660e3685fe4695ee56a5de56b5de66c5ce76e5be76f5ae87059e97158e97257ea7457eb7556eb7655ec7754ed7953ed7a52ee7b51ef7c51ef7e50f07f4ff0804ef1814df1834cf2844bf3854bf3874af48849f48948f58b47f58c46f68d45f68f44f79044f79143f79342f89441f89540f9973ff9983ef99a3efa9b3dfa9c3cfa9e3bfb9f3afba139fba238fca338fca537fca636fca835fca934fdab33fdac33fdae32fdaf31fdb130fdb22ffdb42ffdb52efeb72dfeb82cfeba2cfebb2bfebd2afebe2afec029fdc229fdc328fdc527fdc627fdc827fdca26fdcb26fccd25fcce25fcd025fcd225fbd324fbd524fbd724fad824fada24f9dc24f9dd25f8df25f8e125f7e225f7e425f6e626f6e826f5e926f5eb27f4ed27f3ee27f3f027f2f227f1f426f1f525f0f724f0f921\"));\n","export default function(x) {\n  return function constant() {\n    return x;\n  };\n}\n","export var abs = Math.abs;\nexport var atan2 = Math.atan2;\nexport var cos = Math.cos;\nexport var max = Math.max;\nexport var min = Math.min;\nexport var sin = Math.sin;\nexport var sqrt = Math.sqrt;\n\nexport var epsilon = 1e-12;\nexport var pi = Math.PI;\nexport var halfPi = pi / 2;\nexport var tau = 2 * pi;\n\nexport function acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);\n}\n\nexport function asin(x) {\n  return x >= 1 ? halfPi : x <= -1 ? -halfPi : Math.asin(x);\n}\n","import {path} from \"d3-path\";\nimport constant from \"./constant\";\nimport {abs, acos, asin, atan2, cos, epsilon, halfPi, max, min, pi, sin, sqrt, tau} from \"./math\";\n\nfunction arcInnerRadius(d) {\n  return d.innerRadius;\n}\n\nfunction arcOuterRadius(d) {\n  return d.outerRadius;\n}\n\nfunction arcStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction arcEndAngle(d) {\n  return d.endAngle;\n}\n\nfunction arcPadAngle(d) {\n  return d && d.padAngle; // Note: optional!\n}\n\nfunction intersect(x0, y0, x1, y1, x2, y2, x3, y3) {\n  var x10 = x1 - x0, y10 = y1 - y0,\n      x32 = x3 - x2, y32 = y3 - y2,\n      t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / (y32 * x10 - x32 * y10);\n  return [x0 + t * x10, y0 + t * y10];\n}\n\n// Compute perpendicular offset line of length rc.\n// http://mathworld.wolfram.com/Circle-LineIntersection.html\nfunction cornerTangents(x0, y0, x1, y1, r1, rc, cw) {\n  var x01 = x0 - x1,\n      y01 = y0 - y1,\n      lo = (cw ? rc : -rc) / sqrt(x01 * x01 + y01 * y01),\n      ox = lo * y01,\n      oy = -lo * x01,\n      x11 = x0 + ox,\n      y11 = y0 + oy,\n      x10 = x1 + ox,\n      y10 = y1 + oy,\n      x00 = (x11 + x10) / 2,\n      y00 = (y11 + y10) / 2,\n      dx = x10 - x11,\n      dy = y10 - y11,\n      d2 = dx * dx + dy * dy,\n      r = r1 - rc,\n      D = x11 * y10 - x10 * y11,\n      d = (dy < 0 ? -1 : 1) * sqrt(max(0, r * r * d2 - D * D)),\n      cx0 = (D * dy - dx * d) / d2,\n      cy0 = (-D * dx - dy * d) / d2,\n      cx1 = (D * dy + dx * d) / d2,\n      cy1 = (-D * dx + dy * d) / d2,\n      dx0 = cx0 - x00,\n      dy0 = cy0 - y00,\n      dx1 = cx1 - x00,\n      dy1 = cy1 - y00;\n\n  // Pick the closer of the two intersection points.\n  // TODO Is there a faster way to determine which intersection to use?\n  if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n\n  return {\n    cx: cx0,\n    cy: cy0,\n    x01: -ox,\n    y01: -oy,\n    x11: cx0 * (r1 / r - 1),\n    y11: cy0 * (r1 / r - 1)\n  };\n}\n\nexport default function() {\n  var innerRadius = arcInnerRadius,\n      outerRadius = arcOuterRadius,\n      cornerRadius = constant(0),\n      padRadius = null,\n      startAngle = arcStartAngle,\n      endAngle = arcEndAngle,\n      padAngle = arcPadAngle,\n      context = null;\n\n  function arc() {\n    var buffer,\n        r,\n        r0 = +innerRadius.apply(this, arguments),\n        r1 = +outerRadius.apply(this, arguments),\n        a0 = startAngle.apply(this, arguments) - halfPi,\n        a1 = endAngle.apply(this, arguments) - halfPi,\n        da = abs(a1 - a0),\n        cw = a1 > a0;\n\n    if (!context) context = buffer = path();\n\n    // Ensure that the outer radius is always larger than the inner radius.\n    if (r1 < r0) r = r1, r1 = r0, r0 = r;\n\n    // Is it a point?\n    if (!(r1 > epsilon)) context.moveTo(0, 0);\n\n    // Or is it a circle or annulus?\n    else if (da > tau - epsilon) {\n      context.moveTo(r1 * cos(a0), r1 * sin(a0));\n      context.arc(0, 0, r1, a0, a1, !cw);\n      if (r0 > epsilon) {\n        context.moveTo(r0 * cos(a1), r0 * sin(a1));\n        context.arc(0, 0, r0, a1, a0, cw);\n      }\n    }\n\n    // Or is it a circular or annular sector?\n    else {\n      var a01 = a0,\n          a11 = a1,\n          a00 = a0,\n          a10 = a1,\n          da0 = da,\n          da1 = da,\n          ap = padAngle.apply(this, arguments) / 2,\n          rp = (ap > epsilon) && (padRadius ? +padRadius.apply(this, arguments) : sqrt(r0 * r0 + r1 * r1)),\n          rc = min(abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments)),\n          rc0 = rc,\n          rc1 = rc,\n          t0,\n          t1;\n\n      // Apply padding? Note that since r1 ≥ r0, da1 ≥ da0.\n      if (rp > epsilon) {\n        var p0 = asin(rp / r0 * sin(ap)),\n            p1 = asin(rp / r1 * sin(ap));\n        if ((da0 -= p0 * 2) > epsilon) p0 *= (cw ? 1 : -1), a00 += p0, a10 -= p0;\n        else da0 = 0, a00 = a10 = (a0 + a1) / 2;\n        if ((da1 -= p1 * 2) > epsilon) p1 *= (cw ? 1 : -1), a01 += p1, a11 -= p1;\n        else da1 = 0, a01 = a11 = (a0 + a1) / 2;\n      }\n\n      var x01 = r1 * cos(a01),\n          y01 = r1 * sin(a01),\n          x10 = r0 * cos(a10),\n          y10 = r0 * sin(a10);\n\n      // Apply rounded corners?\n      if (rc > epsilon) {\n        var x11 = r1 * cos(a11),\n            y11 = r1 * sin(a11),\n            x00 = r0 * cos(a00),\n            y00 = r0 * sin(a00);\n\n        // Restrict the corner radius according to the sector angle.\n        if (da < pi) {\n          var oc = da0 > epsilon ? intersect(x01, y01, x00, y00, x11, y11, x10, y10) : [x10, y10],\n              ax = x01 - oc[0],\n              ay = y01 - oc[1],\n              bx = x11 - oc[0],\n              by = y11 - oc[1],\n              kc = 1 / sin(acos((ax * bx + ay * by) / (sqrt(ax * ax + ay * ay) * sqrt(bx * bx + by * by))) / 2),\n              lc = sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n          rc0 = min(rc, (r0 - lc) / (kc - 1));\n          rc1 = min(rc, (r1 - lc) / (kc + 1));\n        }\n      }\n\n      // Is the sector collapsed to a line?\n      if (!(da1 > epsilon)) context.moveTo(x01, y01);\n\n      // Does the sector’s outer ring have rounded corners?\n      else if (rc1 > epsilon) {\n        t0 = cornerTangents(x00, y00, x01, y01, r1, rc1, cw);\n        t1 = cornerTangents(x11, y11, x10, y10, r1, rc1, cw);\n\n        context.moveTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc1 < rc) context.arc(t0.cx, t0.cy, rc1, atan2(t0.y01, t0.x01), atan2(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc1, atan2(t0.y01, t0.x01), atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r1, atan2(t0.cy + t0.y11, t0.cx + t0.x11), atan2(t1.cy + t1.y11, t1.cx + t1.x11), !cw);\n          context.arc(t1.cx, t1.cy, rc1, atan2(t1.y11, t1.x11), atan2(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the outer ring just a circular arc?\n      else context.moveTo(x01, y01), context.arc(0, 0, r1, a01, a11, !cw);\n\n      // Is there no inner ring, and it’s a circular sector?\n      // Or perhaps it’s an annular sector collapsed due to padding?\n      if (!(r0 > epsilon) || !(da0 > epsilon)) context.lineTo(x10, y10);\n\n      // Does the sector’s inner ring (or point) have rounded corners?\n      else if (rc0 > epsilon) {\n        t0 = cornerTangents(x10, y10, x11, y11, r0, -rc0, cw);\n        t1 = cornerTangents(x01, y01, x00, y00, r0, -rc0, cw);\n\n        context.lineTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc0 < rc) context.arc(t0.cx, t0.cy, rc0, atan2(t0.y01, t0.x01), atan2(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc0, atan2(t0.y01, t0.x01), atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r0, atan2(t0.cy + t0.y11, t0.cx + t0.x11), atan2(t1.cy + t1.y11, t1.cx + t1.x11), cw);\n          context.arc(t1.cx, t1.cy, rc0, atan2(t1.y11, t1.x11), atan2(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the inner ring just a circular arc?\n      else context.arc(0, 0, r0, a10, a00, cw);\n    }\n\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  arc.centroid = function() {\n    var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2,\n        a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - pi / 2;\n    return [cos(a) * r, sin(a) * r];\n  };\n\n  arc.innerRadius = function(_) {\n    return arguments.length ? (innerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : innerRadius;\n  };\n\n  arc.outerRadius = function(_) {\n    return arguments.length ? (outerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : outerRadius;\n  };\n\n  arc.cornerRadius = function(_) {\n    return arguments.length ? (cornerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : cornerRadius;\n  };\n\n  arc.padRadius = function(_) {\n    return arguments.length ? (padRadius = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), arc) : padRadius;\n  };\n\n  arc.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : startAngle;\n  };\n\n  arc.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : endAngle;\n  };\n\n  arc.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : padAngle;\n  };\n\n  arc.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), arc) : context;\n  };\n\n  return arc;\n}\n","function Linear(context) {\n  this._context = context;\n}\n\nLinear.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: this._context.lineTo(x, y); break;\n    }\n  }\n};\n\nexport default function(context) {\n  return new Linear(context);\n}\n","export function x(p) {\n  return p[0];\n}\n\nexport function y(p) {\n  return p[1];\n}\n","import {path} from \"d3-path\";\nimport constant from \"./constant\";\nimport curveLinear from \"./curve/linear\";\nimport {x as pointX, y as pointY} from \"./point\";\n\nexport default function() {\n  var x = pointX,\n      y = pointY,\n      defined = constant(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function line(data) {\n    var i,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer;\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) output.lineStart();\n        else output.lineEnd();\n      }\n      if (defined0) output.point(+x(d, i, data), +y(d, i, data));\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  line.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), line) : x;\n  };\n\n  line.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), line) : y;\n  };\n\n  line.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant(!!_), line) : defined;\n  };\n\n  line.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), line) : curve;\n  };\n\n  line.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), line) : context;\n  };\n\n  return line;\n}\n","import {path} from \"d3-path\";\nimport constant from \"./constant\";\nimport curveLinear from \"./curve/linear\";\nimport line from \"./line\";\nimport {x as pointX, y as pointY} from \"./point\";\n\nexport default function() {\n  var x0 = pointX,\n      x1 = null,\n      y0 = constant(0),\n      y1 = pointY,\n      defined = constant(true),\n      context = null,\n      curve = curveLinear,\n      output = null;\n\n  function area(data) {\n    var i,\n        j,\n        k,\n        n = data.length,\n        d,\n        defined0 = false,\n        buffer,\n        x0z = new Array(n),\n        y0z = new Array(n);\n\n    if (context == null) output = curve(buffer = path());\n\n    for (i = 0; i <= n; ++i) {\n      if (!(i < n && defined(d = data[i], i, data)) === defined0) {\n        if (defined0 = !defined0) {\n          j = i;\n          output.areaStart();\n          output.lineStart();\n        } else {\n          output.lineEnd();\n          output.lineStart();\n          for (k = i - 1; k >= j; --k) {\n            output.point(x0z[k], y0z[k]);\n          }\n          output.lineEnd();\n          output.areaEnd();\n        }\n      }\n      if (defined0) {\n        x0z[i] = +x0(d, i, data), y0z[i] = +y0(d, i, data);\n        output.point(x1 ? +x1(d, i, data) : x0z[i], y1 ? +y1(d, i, data) : y0z[i]);\n      }\n    }\n\n    if (buffer) return output = null, buffer + \"\" || null;\n  }\n\n  function arealine() {\n    return line().defined(defined).curve(curve).context(context);\n  }\n\n  area.x = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant(+_), x1 = null, area) : x0;\n  };\n\n  area.x0 = function(_) {\n    return arguments.length ? (x0 = typeof _ === \"function\" ? _ : constant(+_), area) : x0;\n  };\n\n  area.x1 = function(_) {\n    return arguments.length ? (x1 = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), area) : x1;\n  };\n\n  area.y = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant(+_), y1 = null, area) : y0;\n  };\n\n  area.y0 = function(_) {\n    return arguments.length ? (y0 = typeof _ === \"function\" ? _ : constant(+_), area) : y0;\n  };\n\n  area.y1 = function(_) {\n    return arguments.length ? (y1 = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), area) : y1;\n  };\n\n  area.lineX0 =\n  area.lineY0 = function() {\n    return arealine().x(x0).y(y0);\n  };\n\n  area.lineY1 = function() {\n    return arealine().x(x0).y(y1);\n  };\n\n  area.lineX1 = function() {\n    return arealine().x(x1).y(y0);\n  };\n\n  area.defined = function(_) {\n    return arguments.length ? (defined = typeof _ === \"function\" ? _ : constant(!!_), area) : defined;\n  };\n\n  area.curve = function(_) {\n    return arguments.length ? (curve = _, context != null && (output = curve(context)), area) : curve;\n  };\n\n  area.context = function(_) {\n    return arguments.length ? (_ == null ? context = output = null : output = curve(context = _), area) : context;\n  };\n\n  return area;\n}\n","export default function(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n}\n","export default function(d) {\n  return d;\n}\n","import constant from \"./constant\";\nimport descending from \"./descending\";\nimport identity from \"./identity\";\nimport {tau} from \"./math\";\n\nexport default function() {\n  var value = identity,\n      sortValues = descending,\n      sort = null,\n      startAngle = constant(0),\n      endAngle = constant(tau),\n      padAngle = constant(0);\n\n  function pie(data) {\n    var i,\n        n = data.length,\n        j,\n        k,\n        sum = 0,\n        index = new Array(n),\n        arcs = new Array(n),\n        a0 = +startAngle.apply(this, arguments),\n        da = Math.min(tau, Math.max(-tau, endAngle.apply(this, arguments) - a0)),\n        a1,\n        p = Math.min(Math.abs(da) / n, padAngle.apply(this, arguments)),\n        pa = p * (da < 0 ? -1 : 1),\n        v;\n\n    for (i = 0; i < n; ++i) {\n      if ((v = arcs[index[i] = i] = +value(data[i], i, data)) > 0) {\n        sum += v;\n      }\n    }\n\n    // Optionally sort the arcs by previously-computed values or by data.\n    if (sortValues != null) index.sort(function(i, j) { return sortValues(arcs[i], arcs[j]); });\n    else if (sort != null) index.sort(function(i, j) { return sort(data[i], data[j]); });\n\n    // Compute the arcs! They are stored in the original data's order.\n    for (i = 0, k = sum ? (da - n * pa) / sum : 0; i < n; ++i, a0 = a1) {\n      j = index[i], v = arcs[j], a1 = a0 + (v > 0 ? v * k : 0) + pa, arcs[j] = {\n        data: data[j],\n        index: i,\n        value: v,\n        startAngle: a0,\n        endAngle: a1,\n        padAngle: p\n      };\n    }\n\n    return arcs;\n  }\n\n  pie.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(+_), pie) : value;\n  };\n\n  pie.sortValues = function(_) {\n    return arguments.length ? (sortValues = _, sort = null, pie) : sortValues;\n  };\n\n  pie.sort = function(_) {\n    return arguments.length ? (sort = _, sortValues = null, pie) : sort;\n  };\n\n  pie.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : startAngle;\n  };\n\n  pie.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : endAngle;\n  };\n\n  pie.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : padAngle;\n  };\n\n  return pie;\n}\n","import curveLinear from \"./linear\";\n\nexport var curveRadialLinear = curveRadial(curveLinear);\n\nfunction Radial(curve) {\n  this._curve = curve;\n}\n\nRadial.prototype = {\n  areaStart: function() {\n    this._curve.areaStart();\n  },\n  areaEnd: function() {\n    this._curve.areaEnd();\n  },\n  lineStart: function() {\n    this._curve.lineStart();\n  },\n  lineEnd: function() {\n    this._curve.lineEnd();\n  },\n  point: function(a, r) {\n    this._curve.point(r * Math.sin(a), r * -Math.cos(a));\n  }\n};\n\nexport default function curveRadial(curve) {\n\n  function radial(context) {\n    return new Radial(curve(context));\n  }\n\n  radial._curve = curve;\n\n  return radial;\n}\n","import curveRadial, {curveRadialLinear} from \"./curve/radial\";\nimport line from \"./line\";\n\nexport function lineRadial(l) {\n  var c = l.curve;\n\n  l.angle = l.x, delete l.x;\n  l.radius = l.y, delete l.y;\n\n  l.curve = function(_) {\n    return arguments.length ? c(curveRadial(_)) : c()._curve;\n  };\n\n  return l;\n}\n\nexport default function() {\n  return lineRadial(line().curve(curveRadialLinear));\n}\n","import curveRadial, {curveRadialLinear} from \"./curve/radial\";\nimport area from \"./area\";\nimport {lineRadial} from \"./lineRadial\"\n\nexport default function() {\n  var a = area().curve(curveRadialLinear),\n      c = a.curve,\n      x0 = a.lineX0,\n      x1 = a.lineX1,\n      y0 = a.lineY0,\n      y1 = a.lineY1;\n\n  a.angle = a.x, delete a.x;\n  a.startAngle = a.x0, delete a.x0;\n  a.endAngle = a.x1, delete a.x1;\n  a.radius = a.y, delete a.y;\n  a.innerRadius = a.y0, delete a.y0;\n  a.outerRadius = a.y1, delete a.y1;\n  a.lineStartAngle = function() { return lineRadial(x0()); }, delete a.lineX0;\n  a.lineEndAngle = function() { return lineRadial(x1()); }, delete a.lineX1;\n  a.lineInnerRadius = function() { return lineRadial(y0()); }, delete a.lineY0;\n  a.lineOuterRadius = function() { return lineRadial(y1()); }, delete a.lineY1;\n\n  a.curve = function(_) {\n    return arguments.length ? c(curveRadial(_)) : c()._curve;\n  };\n\n  return a;\n}\n","export default function(x, y) {\n  return [(y = +y) * Math.cos(x -= Math.PI / 2), y * Math.sin(x)];\n}\n","export var slice = Array.prototype.slice;\n","import {path} from \"d3-path\";\nimport {slice} from \"../array\";\nimport constant from \"../constant\";\nimport {x as pointX, y as pointY} from \"../point\";\nimport pointRadial from \"../pointRadial\";\n\nfunction linkSource(d) {\n  return d.source;\n}\n\nfunction linkTarget(d) {\n  return d.target;\n}\n\nfunction link(curve) {\n  var source = linkSource,\n      target = linkTarget,\n      x = pointX,\n      y = pointY,\n      context = null;\n\n  function link() {\n    var buffer, argv = slice.call(arguments), s = source.apply(this, argv), t = target.apply(this, argv);\n    if (!context) context = buffer = path();\n    curve(context, +x.apply(this, (argv[0] = s, argv)), +y.apply(this, argv), +x.apply(this, (argv[0] = t, argv)), +y.apply(this, argv));\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  link.source = function(_) {\n    return arguments.length ? (source = _, link) : source;\n  };\n\n  link.target = function(_) {\n    return arguments.length ? (target = _, link) : target;\n  };\n\n  link.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), link) : x;\n  };\n\n  link.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), link) : y;\n  };\n\n  link.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), link) : context;\n  };\n\n  return link;\n}\n\nfunction curveHorizontal(context, x0, y0, x1, y1) {\n  context.moveTo(x0, y0);\n  context.bezierCurveTo(x0 = (x0 + x1) / 2, y0, x0, y1, x1, y1);\n}\n\nfunction curveVertical(context, x0, y0, x1, y1) {\n  context.moveTo(x0, y0);\n  context.bezierCurveTo(x0, y0 = (y0 + y1) / 2, x1, y0, x1, y1);\n}\n\nfunction curveRadial(context, x0, y0, x1, y1) {\n  var p0 = pointRadial(x0, y0),\n      p1 = pointRadial(x0, y0 = (y0 + y1) / 2),\n      p2 = pointRadial(x1, y0),\n      p3 = pointRadial(x1, y1);\n  context.moveTo(p0[0], p0[1]);\n  context.bezierCurveTo(p1[0], p1[1], p2[0], p2[1], p3[0], p3[1]);\n}\n\nexport function linkHorizontal() {\n  return link(curveHorizontal);\n}\n\nexport function linkVertical() {\n  return link(curveVertical);\n}\n\nexport function linkRadial() {\n  var l = link(curveRadial);\n  l.angle = l.x, delete l.x;\n  l.radius = l.y, delete l.y;\n  return l;\n}\n","import {pi, tau} from \"../math\";\n\nexport default {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / pi);\n    context.moveTo(r, 0);\n    context.arc(0, 0, r, 0, tau);\n  }\n};\n","export default {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / 5) / 2;\n    context.moveTo(-3 * r, -r);\n    context.lineTo(-r, -r);\n    context.lineTo(-r, -3 * r);\n    context.lineTo(r, -3 * r);\n    context.lineTo(r, -r);\n    context.lineTo(3 * r, -r);\n    context.lineTo(3 * r, r);\n    context.lineTo(r, r);\n    context.lineTo(r, 3 * r);\n    context.lineTo(-r, 3 * r);\n    context.lineTo(-r, r);\n    context.lineTo(-3 * r, r);\n    context.closePath();\n  }\n};\n","var tan30 = Math.sqrt(1 / 3),\n    tan30_2 = tan30 * 2;\n\nexport default {\n  draw: function(context, size) {\n    var y = Math.sqrt(size / tan30_2),\n        x = y * tan30;\n    context.moveTo(0, -y);\n    context.lineTo(x, 0);\n    context.lineTo(0, y);\n    context.lineTo(-x, 0);\n    context.closePath();\n  }\n};\n","import {pi, tau} from \"../math\";\n\nvar ka = 0.89081309152928522810,\n    kr = Math.sin(pi / 10) / Math.sin(7 * pi / 10),\n    kx = Math.sin(tau / 10) * kr,\n    ky = -Math.cos(tau / 10) * kr;\n\nexport default {\n  draw: function(context, size) {\n    var r = Math.sqrt(size * ka),\n        x = kx * r,\n        y = ky * r;\n    context.moveTo(0, -r);\n    context.lineTo(x, y);\n    for (var i = 1; i < 5; ++i) {\n      var a = tau * i / 5,\n          c = Math.cos(a),\n          s = Math.sin(a);\n      context.lineTo(s * r, -c * r);\n      context.lineTo(c * x - s * y, s * x + c * y);\n    }\n    context.closePath();\n  }\n};\n","export default {\n  draw: function(context, size) {\n    var w = Math.sqrt(size),\n        x = -w / 2;\n    context.rect(x, x, w, w);\n  }\n};\n","var sqrt3 = Math.sqrt(3);\n\nexport default {\n  draw: function(context, size) {\n    var y = -Math.sqrt(size / (sqrt3 * 3));\n    context.moveTo(0, y * 2);\n    context.lineTo(-sqrt3 * y, -y);\n    context.lineTo(sqrt3 * y, -y);\n    context.closePath();\n  }\n};\n","var c = -0.5,\n    s = Math.sqrt(3) / 2,\n    k = 1 / Math.sqrt(12),\n    a = (k / 2 + 1) * 3;\n\nexport default {\n  draw: function(context, size) {\n    var r = Math.sqrt(size / a),\n        x0 = r / 2,\n        y0 = r * k,\n        x1 = x0,\n        y1 = r * k + r,\n        x2 = -x1,\n        y2 = y1;\n    context.moveTo(x0, y0);\n    context.lineTo(x1, y1);\n    context.lineTo(x2, y2);\n    context.lineTo(c * x0 - s * y0, s * x0 + c * y0);\n    context.lineTo(c * x1 - s * y1, s * x1 + c * y1);\n    context.lineTo(c * x2 - s * y2, s * x2 + c * y2);\n    context.lineTo(c * x0 + s * y0, c * y0 - s * x0);\n    context.lineTo(c * x1 + s * y1, c * y1 - s * x1);\n    context.lineTo(c * x2 + s * y2, c * y2 - s * x2);\n    context.closePath();\n  }\n};\n","import {path} from \"d3-path\";\nimport circle from \"./symbol/circle\";\nimport cross from \"./symbol/cross\";\nimport diamond from \"./symbol/diamond\";\nimport star from \"./symbol/star\";\nimport square from \"./symbol/square\";\nimport triangle from \"./symbol/triangle\";\nimport wye from \"./symbol/wye\";\nimport constant from \"./constant\";\n\nexport var symbols = [\n  circle,\n  cross,\n  diamond,\n  square,\n  star,\n  triangle,\n  wye\n];\n\nexport default function() {\n  var type = constant(circle),\n      size = constant(64),\n      context = null;\n\n  function symbol() {\n    var buffer;\n    if (!context) context = buffer = path();\n    type.apply(this, arguments).draw(context, +size.apply(this, arguments));\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  symbol.type = function(_) {\n    return arguments.length ? (type = typeof _ === \"function\" ? _ : constant(_), symbol) : type;\n  };\n\n  symbol.size = function(_) {\n    return arguments.length ? (size = typeof _ === \"function\" ? _ : constant(+_), symbol) : size;\n  };\n\n  symbol.context = function(_) {\n    return arguments.length ? (context = _ == null ? null : _, symbol) : context;\n  };\n\n  return symbol;\n}\n","export default function() {}\n","export function point(that, x, y) {\n  that._context.bezierCurveTo(\n    (2 * that._x0 + that._x1) / 3,\n    (2 * that._y0 + that._y1) / 3,\n    (that._x0 + 2 * that._x1) / 3,\n    (that._y0 + 2 * that._y1) / 3,\n    (that._x0 + 4 * that._x1 + x) / 6,\n    (that._y0 + 4 * that._y1 + y) / 6\n  );\n}\n\nexport function Basis(context) {\n  this._context = context;\n}\n\nBasis.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 3: point(this, this._x1, this._y1); // proceed\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._context.lineTo((5 * this._x0 + this._x1) / 6, (5 * this._y0 + this._y1) / 6); // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nexport default function(context) {\n  return new Basis(context);\n}\n","import noop from \"../noop\";\nimport {point} from \"./basis\";\n\nfunction BasisClosed(context) {\n  this._context = context;\n}\n\nBasisClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x2, this._y2);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.moveTo((this._x2 + 2 * this._x3) / 3, (this._y2 + 2 * this._y3) / 3);\n        this._context.lineTo((this._x3 + 2 * this._x2) / 3, (this._y3 + 2 * this._y2) / 3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x2, this._y2);\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x2 = x, this._y2 = y; break;\n      case 1: this._point = 2; this._x3 = x, this._y3 = y; break;\n      case 2: this._point = 3; this._x4 = x, this._y4 = y; this._context.moveTo((this._x0 + 4 * this._x1 + x) / 6, (this._y0 + 4 * this._y1 + y) / 6); break;\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nexport default function(context) {\n  return new BasisClosed(context);\n}\n","import {point} from \"./basis\";\n\nfunction BasisOpen(context) {\n  this._context = context;\n}\n\nBasisOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; var x0 = (this._x0 + 4 * this._x1 + x) / 6, y0 = (this._y0 + 4 * this._y1 + y) / 6; this._line ? this._context.lineTo(x0, y0) : this._context.moveTo(x0, y0); break;\n      case 3: this._point = 4; // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n  }\n};\n\nexport default function(context) {\n  return new BasisOpen(context);\n}\n","import {Basis} from \"./basis\";\n\nfunction Bundle(context, beta) {\n  this._basis = new Basis(context);\n  this._beta = beta;\n}\n\nBundle.prototype = {\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n    this._basis.lineStart();\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        j = x.length - 1;\n\n    if (j > 0) {\n      var x0 = x[0],\n          y0 = y[0],\n          dx = x[j] - x0,\n          dy = y[j] - y0,\n          i = -1,\n          t;\n\n      while (++i <= j) {\n        t = i / j;\n        this._basis.point(\n          this._beta * x[i] + (1 - this._beta) * (x0 + t * dx),\n          this._beta * y[i] + (1 - this._beta) * (y0 + t * dy)\n        );\n      }\n    }\n\n    this._x = this._y = null;\n    this._basis.lineEnd();\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\nexport default (function custom(beta) {\n\n  function bundle(context) {\n    return beta === 1 ? new Basis(context) : new Bundle(context, beta);\n  }\n\n  bundle.beta = function(beta) {\n    return custom(+beta);\n  };\n\n  return bundle;\n})(0.85);\n","export function point(that, x, y) {\n  that._context.bezierCurveTo(\n    that._x1 + that._k * (that._x2 - that._x0),\n    that._y1 + that._k * (that._y2 - that._y0),\n    that._x2 + that._k * (that._x1 - x),\n    that._y2 + that._k * (that._y1 - y),\n    that._x2,\n    that._y2\n  );\n}\n\nexport function Cardinal(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinal.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: point(this, this._x1, this._y1); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; this._x1 = x, this._y1 = y; break;\n      case 2: this._point = 3; // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(tension) {\n\n  function cardinal(context) {\n    return new Cardinal(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n","import noop from \"../noop\";\nimport {point} from \"./cardinal\";\n\nexport function CardinalClosed(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalClosed(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n","import {point} from \"./cardinal\";\n\nexport function CardinalOpen(context, tension) {\n  this._context = context;\n  this._k = (1 - tension) / 6;\n}\n\nCardinalOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point(this, x, y); break;\n    }\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(tension) {\n\n  function cardinal(context) {\n    return new CardinalOpen(context, tension);\n  }\n\n  cardinal.tension = function(tension) {\n    return custom(+tension);\n  };\n\n  return cardinal;\n})(0);\n","import {epsilon} from \"../math\";\nimport {Cardinal} from \"./cardinal\";\n\nexport function point(that, x, y) {\n  var x1 = that._x1,\n      y1 = that._y1,\n      x2 = that._x2,\n      y2 = that._y2;\n\n  if (that._l01_a > epsilon) {\n    var a = 2 * that._l01_2a + 3 * that._l01_a * that._l12_a + that._l12_2a,\n        n = 3 * that._l01_a * (that._l01_a + that._l12_a);\n    x1 = (x1 * a - that._x0 * that._l12_2a + that._x2 * that._l01_2a) / n;\n    y1 = (y1 * a - that._y0 * that._l12_2a + that._y2 * that._l01_2a) / n;\n  }\n\n  if (that._l23_a > epsilon) {\n    var b = 2 * that._l23_2a + 3 * that._l23_a * that._l12_a + that._l12_2a,\n        m = 3 * that._l23_a * (that._l23_a + that._l12_a);\n    x2 = (x2 * b + that._x1 * that._l23_2a - x * that._l12_2a) / m;\n    y2 = (y2 * b + that._y1 * that._l23_2a - y * that._l12_2a) / m;\n  }\n\n  that._context.bezierCurveTo(x1, y1, x2, y2, that._x2, that._y2);\n}\n\nfunction CatmullRom(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRom.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x2, this._y2); break;\n      case 3: this.point(this._x2, this._y2); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; // proceed\n      default: point(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRom(context, alpha) : new Cardinal(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n","import {CardinalClosed} from \"./cardinalClosed\";\nimport noop from \"../noop\";\nimport {point} from \"./catmullRom\";\n\nfunction CatmullRomClosed(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 = this._x3 = this._x4 = this._x5 =\n    this._y0 = this._y1 = this._y2 = this._y3 = this._y4 = this._y5 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 1: {\n        this._context.moveTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 2: {\n        this._context.lineTo(this._x3, this._y3);\n        this._context.closePath();\n        break;\n      }\n      case 3: {\n        this.point(this._x3, this._y3);\n        this.point(this._x4, this._y4);\n        this.point(this._x5, this._y5);\n        break;\n      }\n    }\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; this._x3 = x, this._y3 = y; break;\n      case 1: this._point = 2; this._context.moveTo(this._x4 = x, this._y4 = y); break;\n      case 2: this._point = 3; this._x5 = x, this._y5 = y; break;\n      default: point(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomClosed(context, alpha) : new CardinalClosed(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n","import {CardinalOpen} from \"./cardinalOpen\";\nimport {point} from \"./catmullRom\";\n\nfunction CatmullRomOpen(context, alpha) {\n  this._context = context;\n  this._alpha = alpha;\n}\n\nCatmullRomOpen.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 = this._x2 =\n    this._y0 = this._y1 = this._y2 = NaN;\n    this._l01_a = this._l12_a = this._l23_a =\n    this._l01_2a = this._l12_2a = this._l23_2a =\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._line || (this._line !== 0 && this._point === 3)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n\n    if (this._point) {\n      var x23 = this._x2 - x,\n          y23 = this._y2 - y;\n      this._l23_a = Math.sqrt(this._l23_2a = Math.pow(x23 * x23 + y23 * y23, this._alpha));\n    }\n\n    switch (this._point) {\n      case 0: this._point = 1; break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; this._line ? this._context.lineTo(this._x2, this._y2) : this._context.moveTo(this._x2, this._y2); break;\n      case 3: this._point = 4; // proceed\n      default: point(this, x, y); break;\n    }\n\n    this._l01_a = this._l12_a, this._l12_a = this._l23_a;\n    this._l01_2a = this._l12_2a, this._l12_2a = this._l23_2a;\n    this._x0 = this._x1, this._x1 = this._x2, this._x2 = x;\n    this._y0 = this._y1, this._y1 = this._y2, this._y2 = y;\n  }\n};\n\nexport default (function custom(alpha) {\n\n  function catmullRom(context) {\n    return alpha ? new CatmullRomOpen(context, alpha) : new CardinalOpen(context, 0);\n  }\n\n  catmullRom.alpha = function(alpha) {\n    return custom(+alpha);\n  };\n\n  return catmullRom;\n})(0.5);\n","import noop from \"../noop\";\n\nfunction LinearClosed(context) {\n  this._context = context;\n}\n\nLinearClosed.prototype = {\n  areaStart: noop,\n  areaEnd: noop,\n  lineStart: function() {\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (this._point) this._context.closePath();\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    if (this._point) this._context.lineTo(x, y);\n    else this._point = 1, this._context.moveTo(x, y);\n  }\n};\n\nexport default function(context) {\n  return new LinearClosed(context);\n}\n","function sign(x) {\n  return x < 0 ? -1 : 1;\n}\n\n// Calculate the slopes of the tangents (Hermite-type interpolation) based on\n// the following paper: Steffen, M. 1990. A Simple Method for Monotonic\n// Interpolation in One Dimension. Astronomy and Astrophysics, Vol. 239, NO.\n// NOV(II), P. 443, 1990.\nfunction slope3(that, x2, y2) {\n  var h0 = that._x1 - that._x0,\n      h1 = x2 - that._x1,\n      s0 = (that._y1 - that._y0) / (h0 || h1 < 0 && -0),\n      s1 = (y2 - that._y1) / (h1 || h0 < 0 && -0),\n      p = (s0 * h1 + s1 * h0) / (h0 + h1);\n  return (sign(s0) + sign(s1)) * Math.min(Math.abs(s0), Math.abs(s1), 0.5 * Math.abs(p)) || 0;\n}\n\n// Calculate a one-sided slope.\nfunction slope2(that, t) {\n  var h = that._x1 - that._x0;\n  return h ? (3 * (that._y1 - that._y0) / h - t) / 2 : t;\n}\n\n// According to https://en.wikipedia.org/wiki/Cubic_Hermite_spline#Representations\n// \"you can express cubic Hermite interpolation in terms of cubic Bézier curves\n// with respect to the four values p0, p0 + m0 / 3, p1 - m1 / 3, p1\".\nfunction point(that, t0, t1) {\n  var x0 = that._x0,\n      y0 = that._y0,\n      x1 = that._x1,\n      y1 = that._y1,\n      dx = (x1 - x0) / 3;\n  that._context.bezierCurveTo(x0 + dx, y0 + dx * t0, x1 - dx, y1 - dx * t1, x1, y1);\n}\n\nfunction MonotoneX(context) {\n  this._context = context;\n}\n\nMonotoneX.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x0 = this._x1 =\n    this._y0 = this._y1 =\n    this._t0 = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    switch (this._point) {\n      case 2: this._context.lineTo(this._x1, this._y1); break;\n      case 3: point(this, this._t0, slope2(this, this._t0)); break;\n    }\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    var t1 = NaN;\n\n    x = +x, y = +y;\n    if (x === this._x1 && y === this._y1) return; // Ignore coincident points.\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; break;\n      case 2: this._point = 3; point(this, slope2(this, t1 = slope3(this, x, y)), t1); break;\n      default: point(this, this._t0, t1 = slope3(this, x, y)); break;\n    }\n\n    this._x0 = this._x1, this._x1 = x;\n    this._y0 = this._y1, this._y1 = y;\n    this._t0 = t1;\n  }\n}\n\nfunction MonotoneY(context) {\n  this._context = new ReflectContext(context);\n}\n\n(MonotoneY.prototype = Object.create(MonotoneX.prototype)).point = function(x, y) {\n  MonotoneX.prototype.point.call(this, y, x);\n};\n\nfunction ReflectContext(context) {\n  this._context = context;\n}\n\nReflectContext.prototype = {\n  moveTo: function(x, y) { this._context.moveTo(y, x); },\n  closePath: function() { this._context.closePath(); },\n  lineTo: function(x, y) { this._context.lineTo(y, x); },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) { this._context.bezierCurveTo(y1, x1, y2, x2, y, x); }\n};\n\nexport function monotoneX(context) {\n  return new MonotoneX(context);\n}\n\nexport function monotoneY(context) {\n  return new MonotoneY(context);\n}\n","function Natural(context) {\n  this._context = context;\n}\n\nNatural.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = [];\n    this._y = [];\n  },\n  lineEnd: function() {\n    var x = this._x,\n        y = this._y,\n        n = x.length;\n\n    if (n) {\n      this._line ? this._context.lineTo(x[0], y[0]) : this._context.moveTo(x[0], y[0]);\n      if (n === 2) {\n        this._context.lineTo(x[1], y[1]);\n      } else {\n        var px = controlPoints(x),\n            py = controlPoints(y);\n        for (var i0 = 0, i1 = 1; i1 < n; ++i0, ++i1) {\n          this._context.bezierCurveTo(px[0][i0], py[0][i0], px[1][i0], py[1][i0], x[i1], y[i1]);\n        }\n      }\n    }\n\n    if (this._line || (this._line !== 0 && n === 1)) this._context.closePath();\n    this._line = 1 - this._line;\n    this._x = this._y = null;\n  },\n  point: function(x, y) {\n    this._x.push(+x);\n    this._y.push(+y);\n  }\n};\n\n// See https://www.particleincell.com/2012/bezier-splines/ for derivation.\nfunction controlPoints(x) {\n  var i,\n      n = x.length - 1,\n      m,\n      a = new Array(n),\n      b = new Array(n),\n      r = new Array(n);\n  a[0] = 0, b[0] = 2, r[0] = x[0] + 2 * x[1];\n  for (i = 1; i < n - 1; ++i) a[i] = 1, b[i] = 4, r[i] = 4 * x[i] + 2 * x[i + 1];\n  a[n - 1] = 2, b[n - 1] = 7, r[n - 1] = 8 * x[n - 1] + x[n];\n  for (i = 1; i < n; ++i) m = a[i] / b[i - 1], b[i] -= m, r[i] -= m * r[i - 1];\n  a[n - 1] = r[n - 1] / b[n - 1];\n  for (i = n - 2; i >= 0; --i) a[i] = (r[i] - a[i + 1]) / b[i];\n  b[n - 1] = (x[n] + a[n - 1]) / 2;\n  for (i = 0; i < n - 1; ++i) b[i] = 2 * x[i + 1] - a[i + 1];\n  return [a, b];\n}\n\nexport default function(context) {\n  return new Natural(context);\n}\n","function Step(context, t) {\n  this._context = context;\n  this._t = t;\n}\n\nStep.prototype = {\n  areaStart: function() {\n    this._line = 0;\n  },\n  areaEnd: function() {\n    this._line = NaN;\n  },\n  lineStart: function() {\n    this._x = this._y = NaN;\n    this._point = 0;\n  },\n  lineEnd: function() {\n    if (0 < this._t && this._t < 1 && this._point === 2) this._context.lineTo(this._x, this._y);\n    if (this._line || (this._line !== 0 && this._point === 1)) this._context.closePath();\n    if (this._line >= 0) this._t = 1 - this._t, this._line = 1 - this._line;\n  },\n  point: function(x, y) {\n    x = +x, y = +y;\n    switch (this._point) {\n      case 0: this._point = 1; this._line ? this._context.lineTo(x, y) : this._context.moveTo(x, y); break;\n      case 1: this._point = 2; // proceed\n      default: {\n        if (this._t <= 0) {\n          this._context.lineTo(this._x, y);\n          this._context.lineTo(x, y);\n        } else {\n          var x1 = this._x * (1 - this._t) + x * this._t;\n          this._context.lineTo(x1, this._y);\n          this._context.lineTo(x1, y);\n        }\n        break;\n      }\n    }\n    this._x = x, this._y = y;\n  }\n};\n\nexport default function(context) {\n  return new Step(context, 0.5);\n}\n\nexport function stepBefore(context) {\n  return new Step(context, 0);\n}\n\nexport function stepAfter(context) {\n  return new Step(context, 1);\n}\n","export default function(series, order) {\n  if (!((n = series.length) > 1)) return;\n  for (var i = 1, j, s0, s1 = series[order[0]], n, m = s1.length; i < n; ++i) {\n    s0 = s1, s1 = series[order[i]];\n    for (j = 0; j < m; ++j) {\n      s1[j][1] += s1[j][0] = isNaN(s0[j][1]) ? s0[j][0] : s0[j][1];\n    }\n  }\n}\n","export default function(series) {\n  var n = series.length, o = new Array(n);\n  while (--n >= 0) o[n] = n;\n  return o;\n}\n","import {slice} from \"./array\";\nimport constant from \"./constant\";\nimport offsetNone from \"./offset/none\";\nimport orderNone from \"./order/none\";\n\nfunction stackValue(d, key) {\n  return d[key];\n}\n\nexport default function() {\n  var keys = constant([]),\n      order = orderNone,\n      offset = offsetNone,\n      value = stackValue;\n\n  function stack(data) {\n    var kz = keys.apply(this, arguments),\n        i,\n        m = data.length,\n        n = kz.length,\n        sz = new Array(n),\n        oz;\n\n    for (i = 0; i < n; ++i) {\n      for (var ki = kz[i], si = sz[i] = new Array(m), j = 0, sij; j < m; ++j) {\n        si[j] = sij = [0, +value(data[j], ki, j, data)];\n        sij.data = data[j];\n      }\n      si.key = ki;\n    }\n\n    for (i = 0, oz = order(sz); i < n; ++i) {\n      sz[oz[i]].index = i;\n    }\n\n    offset(sz, oz);\n    return sz;\n  }\n\n  stack.keys = function(_) {\n    return arguments.length ? (keys = typeof _ === \"function\" ? _ : constant(slice.call(_)), stack) : keys;\n  };\n\n  stack.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(+_), stack) : value;\n  };\n\n  stack.order = function(_) {\n    return arguments.length ? (order = _ == null ? orderNone : typeof _ === \"function\" ? _ : constant(slice.call(_)), stack) : order;\n  };\n\n  stack.offset = function(_) {\n    return arguments.length ? (offset = _ == null ? offsetNone : _, stack) : offset;\n  };\n\n  return stack;\n}\n","import none from \"./none\";\n\nexport default function(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var i, n, j = 0, m = series[0].length, y; j < m; ++j) {\n    for (y = i = 0; i < n; ++i) y += series[i][j][1] || 0;\n    if (y) for (i = 0; i < n; ++i) series[i][j][1] /= y;\n  }\n  none(series, order);\n}\n","export default function(series, order) {\n  if (!((n = series.length) > 1)) return;\n  for (var i, j = 0, d, dy, yp, yn, n, m = series[order[0]].length; j < m; ++j) {\n    for (yp = yn = 0, i = 0; i < n; ++i) {\n      if ((dy = (d = series[order[i]][j])[1] - d[0]) >= 0) {\n        d[0] = yp, d[1] = yp += dy;\n      } else if (dy < 0) {\n        d[1] = yn, d[0] = yn += dy;\n      } else {\n        d[0] = yp;\n      }\n    }\n  }\n}\n","import none from \"./none\";\n\nexport default function(series, order) {\n  if (!((n = series.length) > 0)) return;\n  for (var j = 0, s0 = series[order[0]], n, m = s0.length; j < m; ++j) {\n    for (var i = 0, y = 0; i < n; ++i) y += series[i][j][1] || 0;\n    s0[j][1] += s0[j][0] = -y / 2;\n  }\n  none(series, order);\n}\n","import none from \"./none\";\n\nexport default function(series, order) {\n  if (!((n = series.length) > 0) || !((m = (s0 = series[order[0]]).length) > 0)) return;\n  for (var y = 0, j = 1, s0, m, n; j < m; ++j) {\n    for (var i = 0, s1 = 0, s2 = 0; i < n; ++i) {\n      var si = series[order[i]],\n          sij0 = si[j][1] || 0,\n          sij1 = si[j - 1][1] || 0,\n          s3 = (sij0 - sij1) / 2;\n      for (var k = 0; k < i; ++k) {\n        var sk = series[order[k]],\n            skj0 = sk[j][1] || 0,\n            skj1 = sk[j - 1][1] || 0;\n        s3 += skj0 - skj1;\n      }\n      s1 += sij0, s2 += s3 * sij0;\n    }\n    s0[j - 1][1] += s0[j - 1][0] = y;\n    if (s1) y -= s2 / s1;\n  }\n  s0[j - 1][1] += s0[j - 1][0] = y;\n  none(series, order);\n}\n","import none from \"./none\";\n\nexport default function(series) {\n  var sums = series.map(sum);\n  return none(series).sort(function(a, b) { return sums[a] - sums[b]; });\n}\n\nexport function sum(series) {\n  var s = 0, i = -1, n = series.length, v;\n  while (++i < n) if (v = +series[i][1]) s += v;\n  return s;\n}\n","import ascending from \"./ascending\";\n\nexport default function(series) {\n  return ascending(series).reverse();\n}\n","import none from \"./none\";\nimport {sum} from \"./ascending\";\n\nexport default function(series) {\n  var n = series.length,\n      i,\n      j,\n      sums = series.map(sum),\n      order = none(series).sort(function(a, b) { return sums[b] - sums[a]; }),\n      top = 0,\n      bottom = 0,\n      tops = [],\n      bottoms = [];\n\n  for (i = 0; i < n; ++i) {\n    j = order[i];\n    if (top < bottom) {\n      top += sums[j];\n      tops.push(j);\n    } else {\n      bottom += sums[j];\n      bottoms.push(j);\n    }\n  }\n\n  return bottoms.reverse().concat(tops);\n}\n","import none from \"./none\";\n\nexport default function(series) {\n  return none(series).reverse();\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export function x(d) {\n  return d[0];\n}\n\nexport function y(d) {\n  return d[1];\n}\n","function RedBlackTree() {\n  this._ = null; // root node\n}\n\nexport function RedBlackNode(node) {\n  node.U = // parent node\n  node.C = // color - true for red, false for black\n  node.L = // left node\n  node.R = // right node\n  node.P = // previous node\n  node.N = null; // next node\n}\n\nRedBlackTree.prototype = {\n  constructor: RedBlackTree,\n\n  insert: function(after, node) {\n    var parent, grandpa, uncle;\n\n    if (after) {\n      node.P = after;\n      node.N = after.N;\n      if (after.N) after.N.P = node;\n      after.N = node;\n      if (after.R) {\n        after = after.R;\n        while (after.L) after = after.L;\n        after.L = node;\n      } else {\n        after.R = node;\n      }\n      parent = after;\n    } else if (this._) {\n      after = RedBlackFirst(this._);\n      node.P = null;\n      node.N = after;\n      after.P = after.L = node;\n      parent = after;\n    } else {\n      node.P = node.N = null;\n      this._ = node;\n      parent = null;\n    }\n    node.L = node.R = null;\n    node.U = parent;\n    node.C = true;\n\n    after = node;\n    while (parent && parent.C) {\n      grandpa = parent.U;\n      if (parent === grandpa.L) {\n        uncle = grandpa.R;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.R) {\n            RedBlackRotateLeft(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateRight(this, grandpa);\n        }\n      } else {\n        uncle = grandpa.L;\n        if (uncle && uncle.C) {\n          parent.C = uncle.C = false;\n          grandpa.C = true;\n          after = grandpa;\n        } else {\n          if (after === parent.L) {\n            RedBlackRotateRight(this, parent);\n            after = parent;\n            parent = after.U;\n          }\n          parent.C = false;\n          grandpa.C = true;\n          RedBlackRotateLeft(this, grandpa);\n        }\n      }\n      parent = after.U;\n    }\n    this._.C = false;\n  },\n\n  remove: function(node) {\n    if (node.N) node.N.P = node.P;\n    if (node.P) node.P.N = node.N;\n    node.N = node.P = null;\n\n    var parent = node.U,\n        sibling,\n        left = node.L,\n        right = node.R,\n        next,\n        red;\n\n    if (!left) next = right;\n    else if (!right) next = left;\n    else next = RedBlackFirst(right);\n\n    if (parent) {\n      if (parent.L === node) parent.L = next;\n      else parent.R = next;\n    } else {\n      this._ = next;\n    }\n\n    if (left && right) {\n      red = next.C;\n      next.C = node.C;\n      next.L = left;\n      left.U = next;\n      if (next !== right) {\n        parent = next.U;\n        next.U = node.U;\n        node = next.R;\n        parent.L = node;\n        next.R = right;\n        right.U = next;\n      } else {\n        next.U = parent;\n        parent = next;\n        node = next.R;\n      }\n    } else {\n      red = node.C;\n      node = next;\n    }\n\n    if (node) node.U = parent;\n    if (red) return;\n    if (node && node.C) { node.C = false; return; }\n\n    do {\n      if (node === this._) break;\n      if (node === parent.L) {\n        sibling = parent.R;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateLeft(this, parent);\n          sibling = parent.R;\n        }\n        if ((sibling.L && sibling.L.C)\n            || (sibling.R && sibling.R.C)) {\n          if (!sibling.R || !sibling.R.C) {\n            sibling.L.C = false;\n            sibling.C = true;\n            RedBlackRotateRight(this, sibling);\n            sibling = parent.R;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.R.C = false;\n          RedBlackRotateLeft(this, parent);\n          node = this._;\n          break;\n        }\n      } else {\n        sibling = parent.L;\n        if (sibling.C) {\n          sibling.C = false;\n          parent.C = true;\n          RedBlackRotateRight(this, parent);\n          sibling = parent.L;\n        }\n        if ((sibling.L && sibling.L.C)\n          || (sibling.R && sibling.R.C)) {\n          if (!sibling.L || !sibling.L.C) {\n            sibling.R.C = false;\n            sibling.C = true;\n            RedBlackRotateLeft(this, sibling);\n            sibling = parent.L;\n          }\n          sibling.C = parent.C;\n          parent.C = sibling.L.C = false;\n          RedBlackRotateRight(this, parent);\n          node = this._;\n          break;\n        }\n      }\n      sibling.C = true;\n      node = parent;\n      parent = parent.U;\n    } while (!node.C);\n\n    if (node) node.C = false;\n  }\n};\n\nfunction RedBlackRotateLeft(tree, node) {\n  var p = node,\n      q = node.R,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.R = q.L;\n  if (p.R) p.R.U = p;\n  q.L = p;\n}\n\nfunction RedBlackRotateRight(tree, node) {\n  var p = node,\n      q = node.L,\n      parent = p.U;\n\n  if (parent) {\n    if (parent.L === p) parent.L = q;\n    else parent.R = q;\n  } else {\n    tree._ = q;\n  }\n\n  q.U = parent;\n  p.U = q;\n  p.L = q.R;\n  if (p.L) p.L.U = p;\n  q.R = p;\n}\n\nfunction RedBlackFirst(node) {\n  while (node.L) node = node.L;\n  return node;\n}\n\nexport default RedBlackTree;\n","import {cells, edges, epsilon} from \"./Diagram\";\n\nexport function createEdge(left, right, v0, v1) {\n  var edge = [null, null],\n      index = edges.push(edge) - 1;\n  edge.left = left;\n  edge.right = right;\n  if (v0) setEdgeEnd(edge, left, right, v0);\n  if (v1) setEdgeEnd(edge, right, left, v1);\n  cells[left.index].halfedges.push(index);\n  cells[right.index].halfedges.push(index);\n  return edge;\n}\n\nexport function createBorderEdge(left, v0, v1) {\n  var edge = [v0, v1];\n  edge.left = left;\n  return edge;\n}\n\nexport function setEdgeEnd(edge, left, right, vertex) {\n  if (!edge[0] && !edge[1]) {\n    edge[0] = vertex;\n    edge.left = left;\n    edge.right = right;\n  } else if (edge.left === right) {\n    edge[1] = vertex;\n  } else {\n    edge[0] = vertex;\n  }\n}\n\n// Liang–Barsky line clipping.\nfunction clipEdge(edge, x0, y0, x1, y1) {\n  var a = edge[0],\n      b = edge[1],\n      ax = a[0],\n      ay = a[1],\n      bx = b[0],\n      by = b[1],\n      t0 = 0,\n      t1 = 1,\n      dx = bx - ax,\n      dy = by - ay,\n      r;\n\n  r = x0 - ax;\n  if (!dx && r > 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dx > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = x1 - ax;\n  if (!dx && r < 0) return;\n  r /= dx;\n  if (dx < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dx > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  r = y0 - ay;\n  if (!dy && r > 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  } else if (dy > 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  }\n\n  r = y1 - ay;\n  if (!dy && r < 0) return;\n  r /= dy;\n  if (dy < 0) {\n    if (r > t1) return;\n    if (r > t0) t0 = r;\n  } else if (dy > 0) {\n    if (r < t0) return;\n    if (r < t1) t1 = r;\n  }\n\n  if (!(t0 > 0) && !(t1 < 1)) return true; // TODO Better check?\n\n  if (t0 > 0) edge[0] = [ax + t0 * dx, ay + t0 * dy];\n  if (t1 < 1) edge[1] = [ax + t1 * dx, ay + t1 * dy];\n  return true;\n}\n\nfunction connectEdge(edge, x0, y0, x1, y1) {\n  var v1 = edge[1];\n  if (v1) return true;\n\n  var v0 = edge[0],\n      left = edge.left,\n      right = edge.right,\n      lx = left[0],\n      ly = left[1],\n      rx = right[0],\n      ry = right[1],\n      fx = (lx + rx) / 2,\n      fy = (ly + ry) / 2,\n      fm,\n      fb;\n\n  if (ry === ly) {\n    if (fx < x0 || fx >= x1) return;\n    if (lx > rx) {\n      if (!v0) v0 = [fx, y0];\n      else if (v0[1] >= y1) return;\n      v1 = [fx, y1];\n    } else {\n      if (!v0) v0 = [fx, y1];\n      else if (v0[1] < y0) return;\n      v1 = [fx, y0];\n    }\n  } else {\n    fm = (lx - rx) / (ry - ly);\n    fb = fy - fm * fx;\n    if (fm < -1 || fm > 1) {\n      if (lx > rx) {\n        if (!v0) v0 = [(y0 - fb) / fm, y0];\n        else if (v0[1] >= y1) return;\n        v1 = [(y1 - fb) / fm, y1];\n      } else {\n        if (!v0) v0 = [(y1 - fb) / fm, y1];\n        else if (v0[1] < y0) return;\n        v1 = [(y0 - fb) / fm, y0];\n      }\n    } else {\n      if (ly < ry) {\n        if (!v0) v0 = [x0, fm * x0 + fb];\n        else if (v0[0] >= x1) return;\n        v1 = [x1, fm * x1 + fb];\n      } else {\n        if (!v0) v0 = [x1, fm * x1 + fb];\n        else if (v0[0] < x0) return;\n        v1 = [x0, fm * x0 + fb];\n      }\n    }\n  }\n\n  edge[0] = v0;\n  edge[1] = v1;\n  return true;\n}\n\nexport function clipEdges(x0, y0, x1, y1) {\n  var i = edges.length,\n      edge;\n\n  while (i--) {\n    if (!connectEdge(edge = edges[i], x0, y0, x1, y1)\n        || !clipEdge(edge, x0, y0, x1, y1)\n        || !(Math.abs(edge[0][0] - edge[1][0]) > epsilon\n            || Math.abs(edge[0][1] - edge[1][1]) > epsilon)) {\n      delete edges[i];\n    }\n  }\n}\n","import {createBorderEdge} from \"./Edge\";\nimport {cells, edges, epsilon} from \"./Diagram\";\n\nexport function createCell(site) {\n  return cells[site.index] = {\n    site: site,\n    halfedges: []\n  };\n}\n\nfunction cellHalfedgeAngle(cell, edge) {\n  var site = cell.site,\n      va = edge.left,\n      vb = edge.right;\n  if (site === vb) vb = va, va = site;\n  if (vb) return Math.atan2(vb[1] - va[1], vb[0] - va[0]);\n  if (site === va) va = edge[1], vb = edge[0];\n  else va = edge[0], vb = edge[1];\n  return Math.atan2(va[0] - vb[0], vb[1] - va[1]);\n}\n\nexport function cellHalfedgeStart(cell, edge) {\n  return edge[+(edge.left !== cell.site)];\n}\n\nexport function cellHalfedgeEnd(cell, edge) {\n  return edge[+(edge.left === cell.site)];\n}\n\nexport function sortCellHalfedges() {\n  for (var i = 0, n = cells.length, cell, halfedges, j, m; i < n; ++i) {\n    if ((cell = cells[i]) && (m = (halfedges = cell.halfedges).length)) {\n      var index = new Array(m),\n          array = new Array(m);\n      for (j = 0; j < m; ++j) index[j] = j, array[j] = cellHalfedgeAngle(cell, edges[halfedges[j]]);\n      index.sort(function(i, j) { return array[j] - array[i]; });\n      for (j = 0; j < m; ++j) array[j] = halfedges[index[j]];\n      for (j = 0; j < m; ++j) halfedges[j] = array[j];\n    }\n  }\n}\n\nexport function clipCells(x0, y0, x1, y1) {\n  var nCells = cells.length,\n      iCell,\n      cell,\n      site,\n      iHalfedge,\n      halfedges,\n      nHalfedges,\n      start,\n      startX,\n      startY,\n      end,\n      endX,\n      endY,\n      cover = true;\n\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      site = cell.site;\n      halfedges = cell.halfedges;\n      iHalfedge = halfedges.length;\n\n      // Remove any dangling clipped edges.\n      while (iHalfedge--) {\n        if (!edges[halfedges[iHalfedge]]) {\n          halfedges.splice(iHalfedge, 1);\n        }\n      }\n\n      // Insert any border edges as necessary.\n      iHalfedge = 0, nHalfedges = halfedges.length;\n      while (iHalfedge < nHalfedges) {\n        end = cellHalfedgeEnd(cell, edges[halfedges[iHalfedge]]), endX = end[0], endY = end[1];\n        start = cellHalfedgeStart(cell, edges[halfedges[++iHalfedge % nHalfedges]]), startX = start[0], startY = start[1];\n        if (Math.abs(endX - startX) > epsilon || Math.abs(endY - startY) > epsilon) {\n          halfedges.splice(iHalfedge, 0, edges.push(createBorderEdge(site, end,\n              Math.abs(endX - x0) < epsilon && y1 - endY > epsilon ? [x0, Math.abs(startX - x0) < epsilon ? startY : y1]\n              : Math.abs(endY - y1) < epsilon && x1 - endX > epsilon ? [Math.abs(startY - y1) < epsilon ? startX : x1, y1]\n              : Math.abs(endX - x1) < epsilon && endY - y0 > epsilon ? [x1, Math.abs(startX - x1) < epsilon ? startY : y0]\n              : Math.abs(endY - y0) < epsilon && endX - x0 > epsilon ? [Math.abs(startY - y0) < epsilon ? startX : x0, y0]\n              : null)) - 1);\n          ++nHalfedges;\n        }\n      }\n\n      if (nHalfedges) cover = false;\n    }\n  }\n\n  // If there weren’t any edges, have the closest site cover the extent.\n  // It doesn’t matter which corner of the extent we measure!\n  if (cover) {\n    var dx, dy, d2, dc = Infinity;\n\n    for (iCell = 0, cover = null; iCell < nCells; ++iCell) {\n      if (cell = cells[iCell]) {\n        site = cell.site;\n        dx = site[0] - x0;\n        dy = site[1] - y0;\n        d2 = dx * dx + dy * dy;\n        if (d2 < dc) dc = d2, cover = cell;\n      }\n    }\n\n    if (cover) {\n      var v00 = [x0, y0], v01 = [x0, y1], v11 = [x1, y1], v10 = [x1, y0];\n      cover.halfedges.push(\n        edges.push(createBorderEdge(site = cover.site, v00, v01)) - 1,\n        edges.push(createBorderEdge(site, v01, v11)) - 1,\n        edges.push(createBorderEdge(site, v11, v10)) - 1,\n        edges.push(createBorderEdge(site, v10, v00)) - 1\n      );\n    }\n  }\n\n  // Lastly delete any cells with no edges; these were entirely clipped.\n  for (iCell = 0; iCell < nCells; ++iCell) {\n    if (cell = cells[iCell]) {\n      if (!cell.halfedges.length) {\n        delete cells[iCell];\n      }\n    }\n  }\n}\n","import {RedBlackNode} from \"./RedBlackTree\";\nimport {circles, epsilon2} from \"./Diagram\";\n\nvar circlePool = [];\n\nexport var firstCircle;\n\nfunction Circle() {\n  RedBlackNode(this);\n  this.x =\n  this.y =\n  this.arc =\n  this.site =\n  this.cy = null;\n}\n\nexport function attachCircle(arc) {\n  var lArc = arc.P,\n      rArc = arc.N;\n\n  if (!lArc || !rArc) return;\n\n  var lSite = lArc.site,\n      cSite = arc.site,\n      rSite = rArc.site;\n\n  if (lSite === rSite) return;\n\n  var bx = cSite[0],\n      by = cSite[1],\n      ax = lSite[0] - bx,\n      ay = lSite[1] - by,\n      cx = rSite[0] - bx,\n      cy = rSite[1] - by;\n\n  var d = 2 * (ax * cy - ay * cx);\n  if (d >= -epsilon2) return;\n\n  var ha = ax * ax + ay * ay,\n      hc = cx * cx + cy * cy,\n      x = (cy * ha - ay * hc) / d,\n      y = (ax * hc - cx * ha) / d;\n\n  var circle = circlePool.pop() || new Circle;\n  circle.arc = arc;\n  circle.site = cSite;\n  circle.x = x + bx;\n  circle.y = (circle.cy = y + by) + Math.sqrt(x * x + y * y); // y bottom\n\n  arc.circle = circle;\n\n  var before = null,\n      node = circles._;\n\n  while (node) {\n    if (circle.y < node.y || (circle.y === node.y && circle.x <= node.x)) {\n      if (node.L) node = node.L;\n      else { before = node.P; break; }\n    } else {\n      if (node.R) node = node.R;\n      else { before = node; break; }\n    }\n  }\n\n  circles.insert(before, circle);\n  if (!before) firstCircle = circle;\n}\n\nexport function detachCircle(arc) {\n  var circle = arc.circle;\n  if (circle) {\n    if (!circle.P) firstCircle = circle.N;\n    circles.remove(circle);\n    circlePool.push(circle);\n    RedBlackNode(circle);\n    arc.circle = null;\n  }\n}\n","import {RedBlackNode} from \"./RedBlackTree\";\nimport {createCell} from \"./Cell\";\nimport {attachCircle, detachCircle} from \"./Circle\";\nimport {createEdge, setEdgeEnd} from \"./Edge\";\nimport {beaches, epsilon} from \"./Diagram\";\n\nvar beachPool = [];\n\nfunction Beach() {\n  RedBlackNode(this);\n  this.edge =\n  this.site =\n  this.circle = null;\n}\n\nfunction createBeach(site) {\n  var beach = beachPool.pop() || new Beach;\n  beach.site = site;\n  return beach;\n}\n\nfunction detachBeach(beach) {\n  detachCircle(beach);\n  beaches.remove(beach);\n  beachPool.push(beach);\n  RedBlackNode(beach);\n}\n\nexport function removeBeach(beach) {\n  var circle = beach.circle,\n      x = circle.x,\n      y = circle.cy,\n      vertex = [x, y],\n      previous = beach.P,\n      next = beach.N,\n      disappearing = [beach];\n\n  detachBeach(beach);\n\n  var lArc = previous;\n  while (lArc.circle\n      && Math.abs(x - lArc.circle.x) < epsilon\n      && Math.abs(y - lArc.circle.cy) < epsilon) {\n    previous = lArc.P;\n    disappearing.unshift(lArc);\n    detachBeach(lArc);\n    lArc = previous;\n  }\n\n  disappearing.unshift(lArc);\n  detachCircle(lArc);\n\n  var rArc = next;\n  while (rArc.circle\n      && Math.abs(x - rArc.circle.x) < epsilon\n      && Math.abs(y - rArc.circle.cy) < epsilon) {\n    next = rArc.N;\n    disappearing.push(rArc);\n    detachBeach(rArc);\n    rArc = next;\n  }\n\n  disappearing.push(rArc);\n  detachCircle(rArc);\n\n  var nArcs = disappearing.length,\n      iArc;\n  for (iArc = 1; iArc < nArcs; ++iArc) {\n    rArc = disappearing[iArc];\n    lArc = disappearing[iArc - 1];\n    setEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n  }\n\n  lArc = disappearing[0];\n  rArc = disappearing[nArcs - 1];\n  rArc.edge = createEdge(lArc.site, rArc.site, null, vertex);\n\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nexport function addBeach(site) {\n  var x = site[0],\n      directrix = site[1],\n      lArc,\n      rArc,\n      dxl,\n      dxr,\n      node = beaches._;\n\n  while (node) {\n    dxl = leftBreakPoint(node, directrix) - x;\n    if (dxl > epsilon) node = node.L; else {\n      dxr = x - rightBreakPoint(node, directrix);\n      if (dxr > epsilon) {\n        if (!node.R) {\n          lArc = node;\n          break;\n        }\n        node = node.R;\n      } else {\n        if (dxl > -epsilon) {\n          lArc = node.P;\n          rArc = node;\n        } else if (dxr > -epsilon) {\n          lArc = node;\n          rArc = node.N;\n        } else {\n          lArc = rArc = node;\n        }\n        break;\n      }\n    }\n  }\n\n  createCell(site);\n  var newArc = createBeach(site);\n  beaches.insert(lArc, newArc);\n\n  if (!lArc && !rArc) return;\n\n  if (lArc === rArc) {\n    detachCircle(lArc);\n    rArc = createBeach(lArc.site);\n    beaches.insert(newArc, rArc);\n    newArc.edge = rArc.edge = createEdge(lArc.site, newArc.site);\n    attachCircle(lArc);\n    attachCircle(rArc);\n    return;\n  }\n\n  if (!rArc) { // && lArc\n    newArc.edge = createEdge(lArc.site, newArc.site);\n    return;\n  }\n\n  // else lArc !== rArc\n  detachCircle(lArc);\n  detachCircle(rArc);\n\n  var lSite = lArc.site,\n      ax = lSite[0],\n      ay = lSite[1],\n      bx = site[0] - ax,\n      by = site[1] - ay,\n      rSite = rArc.site,\n      cx = rSite[0] - ax,\n      cy = rSite[1] - ay,\n      d = 2 * (bx * cy - by * cx),\n      hb = bx * bx + by * by,\n      hc = cx * cx + cy * cy,\n      vertex = [(cy * hb - by * hc) / d + ax, (bx * hc - cx * hb) / d + ay];\n\n  setEdgeEnd(rArc.edge, lSite, rSite, vertex);\n  newArc.edge = createEdge(lSite, site, null, vertex);\n  rArc.edge = createEdge(site, rSite, null, vertex);\n  attachCircle(lArc);\n  attachCircle(rArc);\n}\n\nfunction leftBreakPoint(arc, directrix) {\n  var site = arc.site,\n      rfocx = site[0],\n      rfocy = site[1],\n      pby2 = rfocy - directrix;\n\n  if (!pby2) return rfocx;\n\n  var lArc = arc.P;\n  if (!lArc) return -Infinity;\n\n  site = lArc.site;\n  var lfocx = site[0],\n      lfocy = site[1],\n      plby2 = lfocy - directrix;\n\n  if (!plby2) return lfocx;\n\n  var hl = lfocx - rfocx,\n      aby2 = 1 / pby2 - 1 / plby2,\n      b = hl / plby2;\n\n  if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n\n  return (rfocx + lfocx) / 2;\n}\n\nfunction rightBreakPoint(arc, directrix) {\n  var rArc = arc.N;\n  if (rArc) return leftBreakPoint(rArc, directrix);\n  var site = arc.site;\n  return site[1] === directrix ? site[0] : Infinity;\n}\n","import {addBeach, removeBeach} from \"./Beach\";\nimport {sortCellHalfedges, cellHalfedgeStart, clipCells} from \"./Cell\";\nimport {firstCircle} from \"./Circle\";\nimport {clipEdges} from \"./Edge\";\nimport RedBlackTree from \"./RedBlackTree\";\n\nexport var epsilon = 1e-6;\nexport var epsilon2 = 1e-12;\nexport var beaches;\nexport var cells;\nexport var circles;\nexport var edges;\n\nfunction triangleArea(a, b, c) {\n  return (a[0] - c[0]) * (b[1] - a[1]) - (a[0] - b[0]) * (c[1] - a[1]);\n}\n\nfunction lexicographic(a, b) {\n  return b[1] - a[1]\n      || b[0] - a[0];\n}\n\nexport default function Diagram(sites, extent) {\n  var site = sites.sort(lexicographic).pop(),\n      x,\n      y,\n      circle;\n\n  edges = [];\n  cells = new Array(sites.length);\n  beaches = new RedBlackTree;\n  circles = new RedBlackTree;\n\n  while (true) {\n    circle = firstCircle;\n    if (site && (!circle || site[1] < circle.y || (site[1] === circle.y && site[0] < circle.x))) {\n      if (site[0] !== x || site[1] !== y) {\n        addBeach(site);\n        x = site[0], y = site[1];\n      }\n      site = sites.pop();\n    } else if (circle) {\n      removeBeach(circle.arc);\n    } else {\n      break;\n    }\n  }\n\n  sortCellHalfedges();\n\n  if (extent) {\n    var x0 = +extent[0][0],\n        y0 = +extent[0][1],\n        x1 = +extent[1][0],\n        y1 = +extent[1][1];\n    clipEdges(x0, y0, x1, y1);\n    clipCells(x0, y0, x1, y1);\n  }\n\n  this.edges = edges;\n  this.cells = cells;\n\n  beaches =\n  circles =\n  edges =\n  cells = null;\n}\n\nDiagram.prototype = {\n  constructor: Diagram,\n\n  polygons: function() {\n    var edges = this.edges;\n\n    return this.cells.map(function(cell) {\n      var polygon = cell.halfedges.map(function(i) { return cellHalfedgeStart(cell, edges[i]); });\n      polygon.data = cell.site.data;\n      return polygon;\n    });\n  },\n\n  triangles: function() {\n    var triangles = [],\n        edges = this.edges;\n\n    this.cells.forEach(function(cell, i) {\n      if (!(m = (halfedges = cell.halfedges).length)) return;\n      var site = cell.site,\n          halfedges,\n          j = -1,\n          m,\n          s0,\n          e1 = edges[halfedges[m - 1]],\n          s1 = e1.left === site ? e1.right : e1.left;\n\n      while (++j < m) {\n        s0 = s1;\n        e1 = edges[halfedges[j]];\n        s1 = e1.left === site ? e1.right : e1.left;\n        if (s0 && s1 && i < s0.index && i < s1.index && triangleArea(site, s0, s1) < 0) {\n          triangles.push([site.data, s0.data, s1.data]);\n        }\n      }\n    });\n\n    return triangles;\n  },\n\n  links: function() {\n    return this.edges.filter(function(edge) {\n      return edge.right;\n    }).map(function(edge) {\n      return {\n        source: edge.left.data,\n        target: edge.right.data\n      };\n    });\n  },\n\n  find: function(x, y, radius) {\n    var that = this, i0, i1 = that._found || 0, n = that.cells.length, cell;\n\n    // Use the previously-found cell, or start with an arbitrary one.\n    while (!(cell = that.cells[i1])) if (++i1 >= n) return null;\n    var dx = x - cell.site[0], dy = y - cell.site[1], d2 = dx * dx + dy * dy;\n\n    // Traverse the half-edges to find a closer cell, if any.\n    do {\n      cell = that.cells[i0 = i1], i1 = null;\n      cell.halfedges.forEach(function(e) {\n        var edge = that.edges[e], v = edge.left;\n        if ((v === cell.site || !v) && !(v = edge.right)) return;\n        var vx = x - v[0], vy = y - v[1], v2 = vx * vx + vy * vy;\n        if (v2 < d2) d2 = v2, i1 = v.index;\n      });\n    } while (i1 !== null);\n\n    that._found = i0;\n\n    return radius == null || d2 <= radius * radius ? cell.site : null;\n  }\n}\n","import constant from \"./constant\";\nimport {x as pointX, y as pointY} from \"./point\";\nimport Diagram, {epsilon} from \"./Diagram\";\n\nexport default function() {\n  var x = pointX,\n      y = pointY,\n      extent = null;\n\n  function voronoi(data) {\n    return new Diagram(data.map(function(d, i) {\n      var s = [Math.round(x(d, i, data) / epsilon) * epsilon, Math.round(y(d, i, data) / epsilon) * epsilon];\n      s.index = i;\n      s.data = d;\n      return s;\n    }), extent);\n  }\n\n  voronoi.polygons = function(data) {\n    return voronoi(data).polygons();\n  };\n\n  voronoi.links = function(data) {\n    return voronoi(data).links();\n  };\n\n  voronoi.triangles = function(data) {\n    return voronoi(data).triangles();\n  };\n\n  voronoi.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), voronoi) : x;\n  };\n\n  voronoi.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), voronoi) : y;\n  };\n\n  voronoi.extent = function(_) {\n    return arguments.length ? (extent = _ == null ? null : [[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]], voronoi) : extent && [[extent[0][0], extent[0][1]], [extent[1][0], extent[1][1]]];\n  };\n\n  voronoi.size = function(_) {\n    return arguments.length ? (extent = _ == null ? null : [[0, 0], [+_[0], +_[1]]], voronoi) : extent && [extent[1][0] - extent[0][0], extent[1][1] - extent[0][1]];\n  };\n\n  return voronoi;\n}\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export function Transform(k, x, y) {\n  this.k = k;\n  this.x = x;\n  this.y = y;\n}\n\nTransform.prototype = {\n  constructor: Transform,\n  scale: function(k) {\n    return k === 1 ? this : new Transform(this.k * k, this.x, this.y);\n  },\n  translate: function(x, y) {\n    return x === 0 & y === 0 ? this : new Transform(this.k, this.x + this.k * x, this.y + this.k * y);\n  },\n  apply: function(point) {\n    return [point[0] * this.k + this.x, point[1] * this.k + this.y];\n  },\n  applyX: function(x) {\n    return x * this.k + this.x;\n  },\n  applyY: function(y) {\n    return y * this.k + this.y;\n  },\n  invert: function(location) {\n    return [(location[0] - this.x) / this.k, (location[1] - this.y) / this.k];\n  },\n  invertX: function(x) {\n    return (x - this.x) / this.k;\n  },\n  invertY: function(y) {\n    return (y - this.y) / this.k;\n  },\n  rescaleX: function(x) {\n    return x.copy().domain(x.range().map(this.invertX, this).map(x.invert, x));\n  },\n  rescaleY: function(y) {\n    return y.copy().domain(y.range().map(this.invertY, this).map(y.invert, y));\n  },\n  toString: function() {\n    return \"translate(\" + this.x + \",\" + this.y + \") scale(\" + this.k + \")\";\n  }\n};\n\nexport var identity = new Transform(1, 0, 0);\n\ntransform.prototype = Transform.prototype;\n\nexport default function transform(node) {\n  return node.__zoom || identity;\n}\n","import {event} from \"d3-selection\";\n\nexport function nopropagation() {\n  event.stopImmediatePropagation();\n}\n\nexport default function() {\n  event.preventDefault();\n  event.stopImmediatePropagation();\n}\n","import {dispatch} from \"d3-dispatch\";\nimport {dragDisable, dragEnable} from \"d3-drag\";\nimport {interpolateZoom} from \"d3-interpolate\";\nimport {event, customEvent, select, mouse, touch} from \"d3-selection\";\nimport {interrupt} from \"d3-transition\";\nimport constant from \"./constant\";\nimport ZoomEvent from \"./event\";\nimport {Transform, identity} from \"./transform\";\nimport noevent, {nopropagation} from \"./noevent\";\n\n// Ignore right-click, since that should open the context menu.\nfunction defaultFilter() {\n  return !event.button;\n}\n\nfunction defaultExtent() {\n  var e = this, w, h;\n  if (e instanceof SVGElement) {\n    e = e.ownerSVGElement || e;\n    w = e.width.baseVal.value;\n    h = e.height.baseVal.value;\n  } else {\n    w = e.clientWidth;\n    h = e.clientHeight;\n  }\n  return [[0, 0], [w, h]];\n}\n\nfunction defaultTransform() {\n  return this.__zoom || identity;\n}\n\nfunction defaultWheelDelta() {\n  return -event.deltaY * (event.deltaMode ? 120 : 1) / 500;\n}\n\nfunction defaultTouchable() {\n  return \"ontouchstart\" in this;\n}\n\nfunction defaultConstrain(transform, extent, translateExtent) {\n  var dx0 = transform.invertX(extent[0][0]) - translateExtent[0][0],\n      dx1 = transform.invertX(extent[1][0]) - translateExtent[1][0],\n      dy0 = transform.invertY(extent[0][1]) - translateExtent[0][1],\n      dy1 = transform.invertY(extent[1][1]) - translateExtent[1][1];\n  return transform.translate(\n    dx1 > dx0 ? (dx0 + dx1) / 2 : Math.min(0, dx0) || Math.max(0, dx1),\n    dy1 > dy0 ? (dy0 + dy1) / 2 : Math.min(0, dy0) || Math.max(0, dy1)\n  );\n}\n\nexport default function() {\n  var filter = defaultFilter,\n      extent = defaultExtent,\n      constrain = defaultConstrain,\n      wheelDelta = defaultWheelDelta,\n      touchable = defaultTouchable,\n      scaleExtent = [0, Infinity],\n      translateExtent = [[-Infinity, -Infinity], [Infinity, Infinity]],\n      duration = 250,\n      interpolate = interpolateZoom,\n      gestures = [],\n      listeners = dispatch(\"start\", \"zoom\", \"end\"),\n      touchstarting,\n      touchending,\n      touchDelay = 500,\n      wheelDelay = 150,\n      clickDistance2 = 0;\n\n  function zoom(selection) {\n    selection\n        .property(\"__zoom\", defaultTransform)\n        .on(\"wheel.zoom\", wheeled)\n        .on(\"mousedown.zoom\", mousedowned)\n        .on(\"dblclick.zoom\", dblclicked)\n      .filter(touchable)\n        .on(\"touchstart.zoom\", touchstarted)\n        .on(\"touchmove.zoom\", touchmoved)\n        .on(\"touchend.zoom touchcancel.zoom\", touchended)\n        .style(\"touch-action\", \"none\")\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n  }\n\n  zoom.transform = function(collection, transform) {\n    var selection = collection.selection ? collection.selection() : collection;\n    selection.property(\"__zoom\", defaultTransform);\n    if (collection !== selection) {\n      schedule(collection, transform);\n    } else {\n      selection.interrupt().each(function() {\n        gesture(this, arguments)\n            .start()\n            .zoom(null, typeof transform === \"function\" ? transform.apply(this, arguments) : transform)\n            .end();\n      });\n    }\n  };\n\n  zoom.scaleBy = function(selection, k) {\n    zoom.scaleTo(selection, function() {\n      var k0 = this.__zoom.k,\n          k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n      return k0 * k1;\n    });\n  };\n\n  zoom.scaleTo = function(selection, k) {\n    zoom.transform(selection, function() {\n      var e = extent.apply(this, arguments),\n          t0 = this.__zoom,\n          p0 = centroid(e),\n          p1 = t0.invert(p0),\n          k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n      return constrain(translate(scale(t0, k1), p0, p1), e, translateExtent);\n    });\n  };\n\n  zoom.translateBy = function(selection, x, y) {\n    zoom.transform(selection, function() {\n      return constrain(this.__zoom.translate(\n        typeof x === \"function\" ? x.apply(this, arguments) : x,\n        typeof y === \"function\" ? y.apply(this, arguments) : y\n      ), extent.apply(this, arguments), translateExtent);\n    });\n  };\n\n  zoom.translateTo = function(selection, x, y) {\n    zoom.transform(selection, function() {\n      var e = extent.apply(this, arguments),\n          t = this.__zoom,\n          p = centroid(e);\n      return constrain(identity.translate(p[0], p[1]).scale(t.k).translate(\n        typeof x === \"function\" ? -x.apply(this, arguments) : -x,\n        typeof y === \"function\" ? -y.apply(this, arguments) : -y\n      ), e, translateExtent);\n    });\n  };\n\n  function scale(transform, k) {\n    k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], k));\n    return k === transform.k ? transform : new Transform(k, transform.x, transform.y);\n  }\n\n  function translate(transform, p0, p1) {\n    var x = p0[0] - p1[0] * transform.k, y = p0[1] - p1[1] * transform.k;\n    return x === transform.x && y === transform.y ? transform : new Transform(transform.k, x, y);\n  }\n\n  function centroid(extent) {\n    return [(+extent[0][0] + +extent[1][0]) / 2, (+extent[0][1] + +extent[1][1]) / 2];\n  }\n\n  function schedule(transition, transform, center) {\n    transition\n        .on(\"start.zoom\", function() { gesture(this, arguments).start(); })\n        .on(\"interrupt.zoom end.zoom\", function() { gesture(this, arguments).end(); })\n        .tween(\"zoom\", function() {\n          var that = this,\n              args = arguments,\n              g = gesture(that, args),\n              e = extent.apply(that, args),\n              p = center || centroid(e),\n              w = Math.max(e[1][0] - e[0][0], e[1][1] - e[0][1]),\n              a = that.__zoom,\n              b = typeof transform === \"function\" ? transform.apply(that, args) : transform,\n              i = interpolate(a.invert(p).concat(w / a.k), b.invert(p).concat(w / b.k));\n          return function(t) {\n            if (t === 1) t = b; // Avoid rounding error on end.\n            else { var l = i(t), k = w / l[2]; t = new Transform(k, p[0] - l[0] * k, p[1] - l[1] * k); }\n            g.zoom(null, t);\n          };\n        });\n  }\n\n  function gesture(that, args) {\n    for (var i = 0, n = gestures.length, g; i < n; ++i) {\n      if ((g = gestures[i]).that === that) {\n        return g;\n      }\n    }\n    return new Gesture(that, args);\n  }\n\n  function Gesture(that, args) {\n    this.that = that;\n    this.args = args;\n    this.index = -1;\n    this.active = 0;\n    this.extent = extent.apply(that, args);\n  }\n\n  Gesture.prototype = {\n    start: function() {\n      if (++this.active === 1) {\n        this.index = gestures.push(this) - 1;\n        this.emit(\"start\");\n      }\n      return this;\n    },\n    zoom: function(key, transform) {\n      if (this.mouse && key !== \"mouse\") this.mouse[1] = transform.invert(this.mouse[0]);\n      if (this.touch0 && key !== \"touch\") this.touch0[1] = transform.invert(this.touch0[0]);\n      if (this.touch1 && key !== \"touch\") this.touch1[1] = transform.invert(this.touch1[0]);\n      this.that.__zoom = transform;\n      this.emit(\"zoom\");\n      return this;\n    },\n    end: function() {\n      if (--this.active === 0) {\n        gestures.splice(this.index, 1);\n        this.index = -1;\n        this.emit(\"end\");\n      }\n      return this;\n    },\n    emit: function(type) {\n      customEvent(new ZoomEvent(zoom, type, this.that.__zoom), listeners.apply, listeners, [type, this.that, this.args]);\n    }\n  };\n\n  function wheeled() {\n    if (!filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        t = this.__zoom,\n        k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], t.k * Math.pow(2, wheelDelta.apply(this, arguments)))),\n        p = mouse(this);\n\n    // If the mouse is in the same location as before, reuse it.\n    // If there were recent wheel events, reset the wheel idle timeout.\n    if (g.wheel) {\n      if (g.mouse[0][0] !== p[0] || g.mouse[0][1] !== p[1]) {\n        g.mouse[1] = t.invert(g.mouse[0] = p);\n      }\n      clearTimeout(g.wheel);\n    }\n\n    // If this wheel event won’t trigger a transform change, ignore it.\n    else if (t.k === k) return;\n\n    // Otherwise, capture the mouse point and location at the start.\n    else {\n      g.mouse = [p, t.invert(p)];\n      interrupt(this);\n      g.start();\n    }\n\n    noevent();\n    g.wheel = setTimeout(wheelidled, wheelDelay);\n    g.zoom(\"mouse\", constrain(translate(scale(t, k), g.mouse[0], g.mouse[1]), g.extent, translateExtent));\n\n    function wheelidled() {\n      g.wheel = null;\n      g.end();\n    }\n  }\n\n  function mousedowned() {\n    if (touchending || !filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        v = select(event.view).on(\"mousemove.zoom\", mousemoved, true).on(\"mouseup.zoom\", mouseupped, true),\n        p = mouse(this),\n        x0 = event.clientX,\n        y0 = event.clientY;\n\n    dragDisable(event.view);\n    nopropagation();\n    g.mouse = [p, this.__zoom.invert(p)];\n    interrupt(this);\n    g.start();\n\n    function mousemoved() {\n      noevent();\n      if (!g.moved) {\n        var dx = event.clientX - x0, dy = event.clientY - y0;\n        g.moved = dx * dx + dy * dy > clickDistance2;\n      }\n      g.zoom(\"mouse\", constrain(translate(g.that.__zoom, g.mouse[0] = mouse(g.that), g.mouse[1]), g.extent, translateExtent));\n    }\n\n    function mouseupped() {\n      v.on(\"mousemove.zoom mouseup.zoom\", null);\n      dragEnable(event.view, g.moved);\n      noevent();\n      g.end();\n    }\n  }\n\n  function dblclicked() {\n    if (!filter.apply(this, arguments)) return;\n    var t0 = this.__zoom,\n        p0 = mouse(this),\n        p1 = t0.invert(p0),\n        k1 = t0.k * (event.shiftKey ? 0.5 : 2),\n        t1 = constrain(translate(scale(t0, k1), p0, p1), extent.apply(this, arguments), translateExtent);\n\n    noevent();\n    if (duration > 0) select(this).transition().duration(duration).call(schedule, t1, p0);\n    else select(this).call(zoom.transform, t1);\n  }\n\n  function touchstarted() {\n    if (!filter.apply(this, arguments)) return;\n    var g = gesture(this, arguments),\n        touches = event.changedTouches,\n        started,\n        n = touches.length, i, t, p;\n\n    nopropagation();\n    for (i = 0; i < n; ++i) {\n      t = touches[i], p = touch(this, touches, t.identifier);\n      p = [p, this.__zoom.invert(p), t.identifier];\n      if (!g.touch0) g.touch0 = p, started = true;\n      else if (!g.touch1) g.touch1 = p;\n    }\n\n    // If this is a dbltap, reroute to the (optional) dblclick.zoom handler.\n    if (touchstarting) {\n      touchstarting = clearTimeout(touchstarting);\n      if (!g.touch1) {\n        g.end();\n        p = select(this).on(\"dblclick.zoom\");\n        if (p) p.apply(this, arguments);\n        return;\n      }\n    }\n\n    if (started) {\n      touchstarting = setTimeout(function() { touchstarting = null; }, touchDelay);\n      interrupt(this);\n      g.start();\n    }\n  }\n\n  function touchmoved() {\n    var g = gesture(this, arguments),\n        touches = event.changedTouches,\n        n = touches.length, i, t, p, l;\n\n    noevent();\n    if (touchstarting) touchstarting = clearTimeout(touchstarting);\n    for (i = 0; i < n; ++i) {\n      t = touches[i], p = touch(this, touches, t.identifier);\n      if (g.touch0 && g.touch0[2] === t.identifier) g.touch0[0] = p;\n      else if (g.touch1 && g.touch1[2] === t.identifier) g.touch1[0] = p;\n    }\n    t = g.that.__zoom;\n    if (g.touch1) {\n      var p0 = g.touch0[0], l0 = g.touch0[1],\n          p1 = g.touch1[0], l1 = g.touch1[1],\n          dp = (dp = p1[0] - p0[0]) * dp + (dp = p1[1] - p0[1]) * dp,\n          dl = (dl = l1[0] - l0[0]) * dl + (dl = l1[1] - l0[1]) * dl;\n      t = scale(t, Math.sqrt(dp / dl));\n      p = [(p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2];\n      l = [(l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2];\n    }\n    else if (g.touch0) p = g.touch0[0], l = g.touch0[1];\n    else return;\n    g.zoom(\"touch\", constrain(translate(t, p, l), g.extent, translateExtent));\n  }\n\n  function touchended() {\n    var g = gesture(this, arguments),\n        touches = event.changedTouches,\n        n = touches.length, i, t;\n\n    nopropagation();\n    if (touchending) clearTimeout(touchending);\n    touchending = setTimeout(function() { touchending = null; }, touchDelay);\n    for (i = 0; i < n; ++i) {\n      t = touches[i];\n      if (g.touch0 && g.touch0[2] === t.identifier) delete g.touch0;\n      else if (g.touch1 && g.touch1[2] === t.identifier) delete g.touch1;\n    }\n    if (g.touch1 && !g.touch0) g.touch0 = g.touch1, delete g.touch1;\n    if (g.touch0) g.touch0[1] = this.__zoom.invert(g.touch0[0]);\n    else g.end();\n  }\n\n  zoom.wheelDelta = function(_) {\n    return arguments.length ? (wheelDelta = typeof _ === \"function\" ? _ : constant(+_), zoom) : wheelDelta;\n  };\n\n  zoom.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant(!!_), zoom) : filter;\n  };\n\n  zoom.touchable = function(_) {\n    return arguments.length ? (touchable = typeof _ === \"function\" ? _ : constant(!!_), zoom) : touchable;\n  };\n\n  zoom.extent = function(_) {\n    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), zoom) : extent;\n  };\n\n  zoom.scaleExtent = function(_) {\n    return arguments.length ? (scaleExtent[0] = +_[0], scaleExtent[1] = +_[1], zoom) : [scaleExtent[0], scaleExtent[1]];\n  };\n\n  zoom.translateExtent = function(_) {\n    return arguments.length ? (translateExtent[0][0] = +_[0][0], translateExtent[1][0] = +_[1][0], translateExtent[0][1] = +_[0][1], translateExtent[1][1] = +_[1][1], zoom) : [[translateExtent[0][0], translateExtent[0][1]], [translateExtent[1][0], translateExtent[1][1]]];\n  };\n\n  zoom.constrain = function(_) {\n    return arguments.length ? (constrain = _, zoom) : constrain;\n  };\n\n  zoom.duration = function(_) {\n    return arguments.length ? (duration = +_, zoom) : duration;\n  };\n\n  zoom.interpolate = function(_) {\n    return arguments.length ? (interpolate = _, zoom) : interpolate;\n  };\n\n  zoom.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? zoom : value;\n  };\n\n  zoom.clickDistance = function(_) {\n    return arguments.length ? (clickDistance2 = (_ = +_) * _, zoom) : Math.sqrt(clickDistance2);\n  };\n\n  return zoom;\n}\n","export default function ZoomEvent(target, type, transform) {\n  this.target = target;\n  this.type = type;\n  this.transform = transform;\n}\n"],"sourceRoot":""}